var Fh = Object.defineProperty;
var Uh = (t, e, n) => e in t ? Fh(t, e, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: n
}) : t[e] = n;
var zh = (t, e) => () => (e || t((e = {
    exports: {}
}).exports, e), e.exports);
var it = (t, e, n) => (Uh(t, typeof e != "symbol" ? e + "" : e, n), n);
var Vx = zh((qx, jh) => {
    const Gh = function() {
        const e = document.createElement("link").relList;
        if (e && e.supports && e.supports("modulepreload")) return;
        for (const o of document.querySelectorAll('link[rel="modulepreload"]')) i(o);
        new MutationObserver(o => {
            for (const d of o)
                if (d.type === "childList")
                    for (const m of d.addedNodes) m.tagName === "LINK" && m.rel === "modulepreload" && i(m)
        }).observe(document, {
            childList: !0,
            subtree: !0
        });

        function n(o) {
            const d = {};
            return o.integrity && (d.integrity = o.integrity), o.referrerpolicy && (d.referrerPolicy = o.referrerpolicy), o.crossorigin === "use-credentials" ? d.credentials = "include" : o.crossorigin === "anonymous" ? d.credentials = "omit" : d.credentials = "same-origin", d
        }

        function i(o) {
            if (o.ep) return;
            o.ep = !0;
            const d = n(o);
            fetch(o.href, d)
        }
    };
    Gh();
    var vt = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

    function Hh(t) {
        var e = t.default;
        if (typeof e == "function") {
            var n = function() {
                return e.apply(this, arguments)
            };
            n.prototype = e.prototype
        } else n = {};
        return Object.defineProperty(n, "__esModule", {
            value: !0
        }), Object.keys(t).forEach(function(i) {
            var o = Object.getOwnPropertyDescriptor(t, i);
            Object.defineProperty(n, i, o.get ? o : {
                enumerable: !0,
                get: function() {
                    return t[i]
                }
            })
        }), n
    }
    var ji = {
        exports: {}
    };
    (function(t, e) {
        (function() {
            var n = this,
                i = n._,
                o = Array.prototype,
                d = Object.prototype,
                m = Function.prototype,
                C = o.push,
                S = o.slice,
                T = d.toString,
                D = d.hasOwnProperty,
                V = Array.isArray,
                Y = Object.keys,
                ie = m.bind,
                K = Object.create,
                re = function() {},
                v = function(l) {
                    if (l instanceof v) return l;
                    if (!(this instanceof v)) return new v(l);
                    this._wrapped = l
                };
            t.exports && (e = t.exports = v), e._ = v, v.VERSION = "1.8.3";
            var P = function(l, g, k) {
                    if (g === void 0) return l;
                    switch (k == null ? 3 : k) {
                        case 1:
                            return function(R) {
                                return l.call(g, R)
                            };
                        case 2:
                            return function(R, L) {
                                return l.call(g, R, L)
                            };
                        case 3:
                            return function(R, L, N) {
                                return l.call(g, R, L, N)
                            };
                        case 4:
                            return function(R, L, N, te) {
                                return l.call(g, R, L, N, te)
                            }
                    }
                    return function() {
                        return l.apply(g, arguments)
                    }
                },
                H = function(l, g, k) {
                    return l == null ? v.identity : v.isFunction(l) ? P(l, g, k) : v.isObject(l) ? v.matcher(l) : v.property(l)
                };
            v.iteratee = function(l, g) {
                return H(l, g, 1 / 0)
            };
            var ae = function(l, g) {
                    return function(k) {
                        var R = arguments.length;
                        if (R < 2 || k == null) return k;
                        for (var L = 1; L < R; L++)
                            for (var N = arguments[L], te = l(N), ke = te.length, he = 0; he < ke; he++) {
                                var De = te[he];
                                (!g || k[De] === void 0) && (k[De] = N[De])
                            }
                        return k
                    }
                },
                se = function(l) {
                    if (!v.isObject(l)) return {};
                    if (K) return K(l);
                    re.prototype = l;
                    var g = new re;
                    return re.prototype = null, g
                },
                ve = function(l) {
                    return function(g) {
                        return g == null ? void 0 : g[l]
                    }
                },
                f = Math.pow(2, 53) - 1,
                Ee = ve("length"),
                Oe = function(l) {
                    var g = Ee(l);
                    return typeof g == "number" && g >= 0 && g <= f
                };
            v.each = v.forEach = function(l, g, k) {
                g = P(g, k);
                var R, L;
                if (Oe(l))
                    for (R = 0, L = l.length; R < L; R++) g(l[R], R, l);
                else {
                    var N = v.keys(l);
                    for (R = 0, L = N.length; R < L; R++) g(l[N[R]], N[R], l)
                }
                return l
            }, v.map = v.collect = function(l, g, k) {
                g = H(g, k);
                for (var R = !Oe(l) && v.keys(l), L = (R || l).length, N = Array(L), te = 0; te < L; te++) {
                    var ke = R ? R[te] : te;
                    N[te] = g(l[ke], ke, l)
                }
                return N
            };

            function Pe(l) {
                function g(k, R, L, N, te, ke) {
                    for (; te >= 0 && te < ke; te += l) {
                        var he = N ? N[te] : te;
                        L = R(L, k[he], he, k)
                    }
                    return L
                }
                return function(k, R, L, N) {
                    R = P(R, N, 4);
                    var te = !Oe(k) && v.keys(k),
                        ke = (te || k).length,
                        he = l > 0 ? 0 : ke - 1;
                    return arguments.length < 3 && (L = k[te ? te[he] : he], he += l), g(k, R, L, te, he, ke)
                }
            }
            v.reduce = v.foldl = v.inject = Pe(1), v.reduceRight = v.foldr = Pe(-1), v.find = v.detect = function(l, g, k) {
                var R;
                if (Oe(l) ? R = v.findIndex(l, g, k) : R = v.findKey(l, g, k), R !== void 0 && R !== -1) return l[R]
            }, v.filter = v.select = function(l, g, k) {
                var R = [];
                return g = H(g, k), v.each(l, function(L, N, te) {
                    g(L, N, te) && R.push(L)
                }), R
            }, v.reject = function(l, g, k) {
                return v.filter(l, v.negate(H(g)), k)
            }, v.every = v.all = function(l, g, k) {
                g = H(g, k);
                for (var R = !Oe(l) && v.keys(l), L = (R || l).length, N = 0; N < L; N++) {
                    var te = R ? R[N] : N;
                    if (!g(l[te], te, l)) return !1
                }
                return !0
            }, v.some = v.any = function(l, g, k) {
                g = H(g, k);
                for (var R = !Oe(l) && v.keys(l), L = (R || l).length, N = 0; N < L; N++) {
                    var te = R ? R[N] : N;
                    if (g(l[te], te, l)) return !0
                }
                return !1
            }, v.contains = v.includes = v.include = function(l, g, k, R) {
                return Oe(l) || (l = v.values(l)), (typeof k != "number" || R) && (k = 0), v.indexOf(l, g, k) >= 0
            }, v.invoke = function(l, g) {
                var k = S.call(arguments, 2),
                    R = v.isFunction(g);
                return v.map(l, function(L) {
                    var N = R ? g : L[g];
                    return N == null ? N : N.apply(L, k)
                })
            }, v.pluck = function(l, g) {
                return v.map(l, v.property(g))
            }, v.where = function(l, g) {
                return v.filter(l, v.matcher(g))
            }, v.findWhere = function(l, g) {
                return v.find(l, v.matcher(g))
            }, v.max = function(l, g, k) {
                var R = -1 / 0,
                    L = -1 / 0,
                    N, te;
                if (g == null && l != null) {
                    l = Oe(l) ? l : v.values(l);
                    for (var ke = 0, he = l.length; ke < he; ke++) N = l[ke], N > R && (R = N)
                } else g = H(g, k), v.each(l, function(De, Me, rt) {
                    te = g(De, Me, rt), (te > L || te === -1 / 0 && R === -1 / 0) && (R = De, L = te)
                });
                return R
            }, v.min = function(l, g, k) {
                var R = 1 / 0,
                    L = 1 / 0,
                    N, te;
                if (g == null && l != null) {
                    l = Oe(l) ? l : v.values(l);
                    for (var ke = 0, he = l.length; ke < he; ke++) N = l[ke], N < R && (R = N)
                } else g = H(g, k), v.each(l, function(De, Me, rt) {
                    te = g(De, Me, rt), (te < L || te === 1 / 0 && R === 1 / 0) && (R = De, L = te)
                });
                return R
            }, v.shuffle = function(l) {
                for (var g = Oe(l) ? l : v.values(l), k = g.length, R = Array(k), L = 0, N; L < k; L++) N = v.random(0, L), N !== L && (R[L] = R[N]), R[N] = g[L];
                return R
            }, v.sample = function(l, g, k) {
                return g == null || k ? (Oe(l) || (l = v.values(l)), l[v.random(l.length - 1)]) : v.shuffle(l).slice(0, Math.max(0, g))
            }, v.sortBy = function(l, g, k) {
                return g = H(g, k), v.pluck(v.map(l, function(R, L, N) {
                    return {
                        value: R,
                        index: L,
                        criteria: g(R, L, N)
                    }
                }).sort(function(R, L) {
                    var N = R.criteria,
                        te = L.criteria;
                    if (N !== te) {
                        if (N > te || N === void 0) return 1;
                        if (N < te || te === void 0) return -1
                    }
                    return R.index - L.index
                }), "value")
            };
            var lt = function(l) {
                return function(g, k, R) {
                    var L = {};
                    return k = H(k, R), v.each(g, function(N, te) {
                        var ke = k(N, te, g);
                        l(L, N, ke)
                    }), L
                }
            };
            v.groupBy = lt(function(l, g, k) {
                v.has(l, k) ? l[k].push(g) : l[k] = [g]
            }), v.indexBy = lt(function(l, g, k) {
                l[k] = g
            }), v.countBy = lt(function(l, g, k) {
                v.has(l, k) ? l[k]++ : l[k] = 1
            }), v.toArray = function(l) {
                return l ? v.isArray(l) ? S.call(l) : Oe(l) ? v.map(l, v.identity) : v.values(l) : []
            }, v.size = function(l) {
                return l == null ? 0 : Oe(l) ? l.length : v.keys(l).length
            }, v.partition = function(l, g, k) {
                g = H(g, k);
                var R = [],
                    L = [];
                return v.each(l, function(N, te, ke) {
                    (g(N, te, ke) ? R : L).push(N)
                }), [R, L]
            }, v.first = v.head = v.take = function(l, g, k) {
                if (l != null) return g == null || k ? l[0] : v.initial(l, l.length - g)
            }, v.initial = function(l, g, k) {
                return S.call(l, 0, Math.max(0, l.length - (g == null || k ? 1 : g)))
            }, v.last = function(l, g, k) {
                if (l != null) return g == null || k ? l[l.length - 1] : v.rest(l, Math.max(0, l.length - g))
            }, v.rest = v.tail = v.drop = function(l, g, k) {
                return S.call(l, g == null || k ? 1 : g)
            }, v.compact = function(l) {
                return v.filter(l, v.identity)
            };
            var Ve = function(l, g, k, R) {
                for (var L = [], N = 0, te = R || 0, ke = Ee(l); te < ke; te++) {
                    var he = l[te];
                    if (Oe(he) && (v.isArray(he) || v.isArguments(he))) {
                        g || (he = Ve(he, g, k));
                        var De = 0,
                            Me = he.length;
                        for (L.length += Me; De < Me;) L[N++] = he[De++]
                    } else k || (L[N++] = he)
                }
                return L
            };
            v.flatten = function(l, g) {
                return Ve(l, g, !1)
            }, v.without = function(l) {
                return v.difference(l, S.call(arguments, 1))
            }, v.uniq = v.unique = function(l, g, k, R) {
                v.isBoolean(g) || (R = k, k = g, g = !1), k != null && (k = H(k, R));
                for (var L = [], N = [], te = 0, ke = Ee(l); te < ke; te++) {
                    var he = l[te],
                        De = k ? k(he, te, l) : he;
                    g ? ((!te || N !== De) && L.push(he), N = De) : k ? v.contains(N, De) || (N.push(De), L.push(he)) : v.contains(L, he) || L.push(he)
                }
                return L
            }, v.union = function() {
                return v.uniq(Ve(arguments, !0, !0))
            }, v.intersection = function(l) {
                for (var g = [], k = arguments.length, R = 0, L = Ee(l); R < L; R++) {
                    var N = l[R];
                    if (!v.contains(g, N)) {
                        for (var te = 1; te < k && v.contains(arguments[te], N); te++);
                        te === k && g.push(N)
                    }
                }
                return g
            }, v.difference = function(l) {
                var g = Ve(arguments, !0, !0, 1);
                return v.filter(l, function(k) {
                    return !v.contains(g, k)
                })
            }, v.zip = function() {
                return v.unzip(arguments)
            }, v.unzip = function(l) {
                for (var g = l && v.max(l, Ee).length || 0, k = Array(g), R = 0; R < g; R++) k[R] = v.pluck(l, R);
                return k
            }, v.object = function(l, g) {
                for (var k = {}, R = 0, L = Ee(l); R < L; R++) g ? k[l[R]] = g[R] : k[l[R][0]] = l[R][1];
                return k
            };

            function J(l) {
                return function(g, k, R) {
                    k = H(k, R);
                    for (var L = Ee(g), N = l > 0 ? 0 : L - 1; N >= 0 && N < L; N += l)
                        if (k(g[N], N, g)) return N;
                    return -1
                }
            }
            v.findIndex = J(1), v.findLastIndex = J(-1), v.sortedIndex = function(l, g, k, R) {
                k = H(k, R, 1);
                for (var L = k(g), N = 0, te = Ee(l); N < te;) {
                    var ke = Math.floor((N + te) / 2);
                    k(l[ke]) < L ? N = ke + 1 : te = ke
                }
                return N
            };

            function je(l, g, k) {
                return function(R, L, N) {
                    var te = 0,
                        ke = Ee(R);
                    if (typeof N == "number") l > 0 ? te = N >= 0 ? N : Math.max(N + ke, te) : ke = N >= 0 ? Math.min(N + 1, ke) : N + ke + 1;
                    else if (k && N && ke) return N = k(R, L), R[N] === L ? N : -1;
                    if (L !== L) return N = g(S.call(R, te, ke), v.isNaN), N >= 0 ? N + te : -1;
                    for (N = l > 0 ? te : ke - 1; N >= 0 && N < ke; N += l)
                        if (R[N] === L) return N;
                    return -1
                }
            }
            v.indexOf = je(1, v.findIndex, v.sortedIndex), v.lastIndexOf = je(-1, v.findLastIndex), v.range = function(l, g, k) {
                g == null && (g = l || 0, l = 0), k = k || 1;
                for (var R = Math.max(Math.ceil((g - l) / k), 0), L = Array(R), N = 0; N < R; N++, l += k) L[N] = l;
                return L
            };
            var z = function(l, g, k, R, L) {
                if (!(R instanceof g)) return l.apply(k, L);
                var N = se(l.prototype),
                    te = l.apply(N, L);
                return v.isObject(te) ? te : N
            };
            v.bind = function(l, g) {
                if (ie && l.bind === ie) return ie.apply(l, S.call(arguments, 1));
                if (!v.isFunction(l)) throw new TypeError("Bind must be called on a function");
                var k = S.call(arguments, 2),
                    R = function() {
                        return z(l, R, g, this, k.concat(S.call(arguments)))
                    };
                return R
            }, v.partial = function(l) {
                var g = S.call(arguments, 1),
                    k = function() {
                        for (var R = 0, L = g.length, N = Array(L), te = 0; te < L; te++) N[te] = g[te] === v ? arguments[R++] : g[te];
                        for (; R < arguments.length;) N.push(arguments[R++]);
                        return z(l, k, this, this, N)
                    };
                return k
            }, v.bindAll = function(l) {
                var g, k = arguments.length,
                    R;
                if (k <= 1) throw new Error("bindAll must be passed function names");
                for (g = 1; g < k; g++) R = arguments[g], l[R] = v.bind(l[R], l);
                return l
            }, v.memoize = function(l, g) {
                var k = function(R) {
                    var L = k.cache,
                        N = "" + (g ? g.apply(this, arguments) : R);
                    return v.has(L, N) || (L[N] = l.apply(this, arguments)), L[N]
                };
                return k.cache = {}, k
            }, v.delay = function(l, g) {
                var k = S.call(arguments, 2);
                return setTimeout(function() {
                    return l.apply(null, k)
                }, g)
            }, v.defer = v.partial(v.delay, v, 1), v.throttle = function(l, g, k) {
                var R, L, N, te = null,
                    ke = 0;
                k || (k = {});
                var he = function() {
                    ke = k.leading === !1 ? 0 : v.now(), te = null, N = l.apply(R, L), te || (R = L = null)
                };
                return function() {
                    var De = v.now();
                    !ke && k.leading === !1 && (ke = De);
                    var Me = g - (De - ke);
                    return R = this, L = arguments, Me <= 0 || Me > g ? (te && (clearTimeout(te), te = null), ke = De, N = l.apply(R, L), te || (R = L = null)) : !te && k.trailing !== !1 && (te = setTimeout(he, Me)), N
                }
            }, v.debounce = function(l, g, k) {
                var R, L, N, te, ke, he = function() {
                    var De = v.now() - te;
                    De < g && De >= 0 ? R = setTimeout(he, g - De) : (R = null, k || (ke = l.apply(N, L), R || (N = L = null)))
                };
                return function() {
                    N = this, L = arguments, te = v.now();
                    var De = k && !R;
                    return R || (R = setTimeout(he, g)), De && (ke = l.apply(N, L), N = L = null), ke
                }
            }, v.wrap = function(l, g) {
                return v.partial(g, l)
            }, v.negate = function(l) {
                return function() {
                    return !l.apply(this, arguments)
                }
            }, v.compose = function() {
                var l = arguments,
                    g = l.length - 1;
                return function() {
                    for (var k = g, R = l[g].apply(this, arguments); k--;) R = l[k].call(this, R);
                    return R
                }
            }, v.after = function(l, g) {
                return function() {
                    if (--l < 1) return g.apply(this, arguments)
                }
            }, v.before = function(l, g) {
                var k;
                return function() {
                    return --l > 0 && (k = g.apply(this, arguments)), l <= 1 && (g = null), k
                }
            }, v.once = v.partial(v.before, 2);
            var oe = !{
                    toString: null
                }.propertyIsEnumerable("toString"),
                Ae = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];

            function we(l, g) {
                var k = Ae.length,
                    R = l.constructor,
                    L = v.isFunction(R) && R.prototype || d,
                    N = "constructor";
                for (v.has(l, N) && !v.contains(g, N) && g.push(N); k--;) N = Ae[k], N in l && l[N] !== L[N] && !v.contains(g, N) && g.push(N)
            }
            v.keys = function(l) {
                if (!v.isObject(l)) return [];
                if (Y) return Y(l);
                var g = [];
                for (var k in l) v.has(l, k) && g.push(k);
                return oe && we(l, g), g
            }, v.allKeys = function(l) {
                if (!v.isObject(l)) return [];
                var g = [];
                for (var k in l) g.push(k);
                return oe && we(l, g), g
            }, v.values = function(l) {
                for (var g = v.keys(l), k = g.length, R = Array(k), L = 0; L < k; L++) R[L] = l[g[L]];
                return R
            }, v.mapObject = function(l, g, k) {
                g = H(g, k);
                for (var R = v.keys(l), L = R.length, N = {}, te, ke = 0; ke < L; ke++) te = R[ke], N[te] = g(l[te], te, l);
                return N
            }, v.pairs = function(l) {
                for (var g = v.keys(l), k = g.length, R = Array(k), L = 0; L < k; L++) R[L] = [g[L], l[g[L]]];
                return R
            }, v.invert = function(l) {
                for (var g = {}, k = v.keys(l), R = 0, L = k.length; R < L; R++) g[l[k[R]]] = k[R];
                return g
            }, v.functions = v.methods = function(l) {
                var g = [];
                for (var k in l) v.isFunction(l[k]) && g.push(k);
                return g.sort()
            }, v.extend = ae(v.allKeys), v.extendOwn = v.assign = ae(v.keys), v.findKey = function(l, g, k) {
                g = H(g, k);
                for (var R = v.keys(l), L, N = 0, te = R.length; N < te; N++)
                    if (L = R[N], g(l[L], L, l)) return L
            }, v.pick = function(l, g, k) {
                var R = {},
                    L = l,
                    N, te;
                if (L == null) return R;
                v.isFunction(g) ? (te = v.allKeys(L), N = P(g, k)) : (te = Ve(arguments, !1, !1, 1), N = function(rt, Ct, rn) {
                    return Ct in rn
                }, L = Object(L));
                for (var ke = 0, he = te.length; ke < he; ke++) {
                    var De = te[ke],
                        Me = L[De];
                    N(Me, De, L) && (R[De] = Me)
                }
                return R
            }, v.omit = function(l, g, k) {
                if (v.isFunction(g)) g = v.negate(g);
                else {
                    var R = v.map(Ve(arguments, !1, !1, 1), String);
                    g = function(L, N) {
                        return !v.contains(R, N)
                    }
                }
                return v.pick(l, g, k)
            }, v.defaults = ae(v.allKeys, !0), v.create = function(l, g) {
                var k = se(l);
                return g && v.extendOwn(k, g), k
            }, v.clone = function(l) {
                return v.isObject(l) ? v.isArray(l) ? l.slice() : v.extend({}, l) : l
            }, v.tap = function(l, g) {
                return g(l), l
            }, v.isMatch = function(l, g) {
                var k = v.keys(g),
                    R = k.length;
                if (l == null) return !R;
                for (var L = Object(l), N = 0; N < R; N++) {
                    var te = k[N];
                    if (g[te] !== L[te] || !(te in L)) return !1
                }
                return !0
            };
            var ye = function(l, g, k, R) {
                if (l === g) return l !== 0 || 1 / l === 1 / g;
                if (l == null || g == null) return l === g;
                l instanceof v && (l = l._wrapped), g instanceof v && (g = g._wrapped);
                var L = T.call(l);
                if (L !== T.call(g)) return !1;
                switch (L) {
                    case "[object RegExp]":
                    case "[object String]":
                        return "" + l == "" + g;
                    case "[object Number]":
                        return +l != +l ? +g != +g : +l == 0 ? 1 / +l === 1 / g : +l == +g;
                    case "[object Date]":
                    case "[object Boolean]":
                        return +l == +g
                }
                var N = L === "[object Array]";
                if (!N) {
                    if (typeof l != "object" || typeof g != "object") return !1;
                    var te = l.constructor,
                        ke = g.constructor;
                    if (te !== ke && !(v.isFunction(te) && te instanceof te && v.isFunction(ke) && ke instanceof ke) && "constructor" in l && "constructor" in g) return !1
                }
                k = k || [], R = R || [];
                for (var he = k.length; he--;)
                    if (k[he] === l) return R[he] === g;
                if (k.push(l), R.push(g), N) {
                    if (he = l.length, he !== g.length) return !1;
                    for (; he--;)
                        if (!ye(l[he], g[he], k, R)) return !1
                } else {
                    var De = v.keys(l),
                        Me;
                    if (he = De.length, v.keys(g).length !== he) return !1;
                    for (; he--;)
                        if (Me = De[he], !(v.has(g, Me) && ye(l[Me], g[Me], k, R))) return !1
                }
                return k.pop(), R.pop(), !0
            };
            v.isEqual = function(l, g) {
                return ye(l, g)
            }, v.isEmpty = function(l) {
                return l == null ? !0 : Oe(l) && (v.isArray(l) || v.isString(l) || v.isArguments(l)) ? l.length === 0 : v.keys(l).length === 0
            }, v.isElement = function(l) {
                return !!(l && l.nodeType === 1)
            }, v.isArray = V || function(l) {
                return T.call(l) === "[object Array]"
            }, v.isObject = function(l) {
                var g = typeof l;
                return g === "function" || g === "object" && !!l
            }, v.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(l) {
                v["is" + l] = function(g) {
                    return T.call(g) === "[object " + l + "]"
                }
            }), v.isArguments(arguments) || (v.isArguments = function(l) {
                return v.has(l, "callee")
            }), typeof /./ != "function" && typeof Int8Array != "object" && (v.isFunction = function(l) {
                return typeof l == "function" || !1
            }), v.isFinite = function(l) {
                return isFinite(l) && !isNaN(parseFloat(l))
            }, v.isNaN = function(l) {
                return v.isNumber(l) && l !== +l
            }, v.isBoolean = function(l) {
                return l === !0 || l === !1 || T.call(l) === "[object Boolean]"
            }, v.isNull = function(l) {
                return l === null
            }, v.isUndefined = function(l) {
                return l === void 0
            }, v.has = function(l, g) {
                return l != null && D.call(l, g)
            }, v.noConflict = function() {
                return n._ = i, this
            }, v.identity = function(l) {
                return l
            }, v.constant = function(l) {
                return function() {
                    return l
                }
            }, v.noop = function() {}, v.property = ve, v.propertyOf = function(l) {
                return l == null ? function() {} : function(g) {
                    return l[g]
                }
            }, v.matcher = v.matches = function(l) {
                return l = v.extendOwn({}, l),
                    function(g) {
                        return v.isMatch(g, l)
                    }
            }, v.times = function(l, g, k) {
                var R = Array(Math.max(0, l));
                g = P(g, k, 1);
                for (var L = 0; L < l; L++) R[L] = g(L);
                return R
            }, v.random = function(l, g) {
                return g == null && (g = l, l = 0), l + Math.floor(Math.random() * (g - l + 1))
            }, v.now = Date.now || function() {
                return new Date().getTime()
            };
            var ue = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "`": "&#x60;"
                },
                Se = v.invert(ue),
                Te = function(l) {
                    var g = function(N) {
                            return l[N]
                        },
                        k = "(?:" + v.keys(l).join("|") + ")",
                        R = RegExp(k),
                        L = RegExp(k, "g");
                    return function(N) {
                        return N = N == null ? "" : "" + N, R.test(N) ? N.replace(L, g) : N
                    }
                };
            v.escape = Te(ue), v.unescape = Te(Se), v.result = function(l, g, k) {
                var R = l == null ? void 0 : l[g];
                return R === void 0 && (R = k), v.isFunction(R) ? R.call(l) : R
            };
            var Be = 0;
            v.uniqueId = function(l) {
                var g = ++Be + "";
                return l ? l + g : g
            }, v.templateSettings = {
                evaluate: /<%([\s\S]+?)%>/g,
                interpolate: /<%=([\s\S]+?)%>/g,
                escape: /<%-([\s\S]+?)%>/g
            };
            var Ke = /(.)^/,
                dt = {
                    "'": "'",
                    "\\": "\\",
                    "\r": "r",
                    "\n": "n",
                    "\u2028": "u2028",
                    "\u2029": "u2029"
                },
                Bt = /\\|'|\r|\n|\u2028|\u2029/g,
                Ht = function(l) {
                    return "\\" + dt[l]
                };
            v.template = function(l, g, k) {
                !g && k && (g = k), g = v.defaults({}, g, v.templateSettings);
                var R = RegExp([(g.escape || Ke).source, (g.interpolate || Ke).source, (g.evaluate || Ke).source].join("|") + "|$", "g"),
                    L = 0,
                    N = "__p+='";
                l.replace(R, function(De, Me, rt, Ct, rn) {
                    return N += l.slice(L, rn).replace(Bt, Ht), L = rn + De.length, Me ? N += `'+
((__t=(` + Me + `))==null?'':_.escape(__t))+
'` : rt ? N += `'+
((__t=(` + rt + `))==null?'':__t)+
'` : Ct && (N += `';
` + Ct + `
__p+='`), De
                }), N += `';
`, g.variable || (N = `with(obj||{}){
` + N + `}
`), N = `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` + N + `return __p;
`;
                try {
                    var te = new Function(g.variable || "obj", "_", N)
                } catch (De) {
                    throw De.source = N, De
                }
                var ke = function(De) {
                        return te.call(this, De, v)
                    },
                    he = g.variable || "obj";
                return ke.source = "function(" + he + `){
` + N + "}", ke
            }, v.chain = function(l) {
                var g = v(l);
                return g._chain = !0, g
            };
            var E = function(l, g) {
                return l._chain ? v(g).chain() : g
            };
            v.mixin = function(l) {
                v.each(v.functions(l), function(g) {
                    var k = v[g] = l[g];
                    v.prototype[g] = function() {
                        var R = [this._wrapped];
                        return C.apply(R, arguments), E(this, k.apply(v, R))
                    }
                })
            }, v.mixin(v), v.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(l) {
                var g = o[l];
                v.prototype[l] = function() {
                    var k = this._wrapped;
                    return g.apply(k, arguments), (l === "shift" || l === "splice") && k.length === 0 && delete k[0], E(this, k)
                }
            }), v.each(["concat", "join", "slice"], function(l) {
                var g = o[l];
                v.prototype[l] = function() {
                    return E(this, g.apply(this._wrapped, arguments))
                }
            }), v.prototype.value = function() {
                return this._wrapped
            }, v.prototype.valueOf = v.prototype.toJSON = v.prototype.value, v.prototype.toString = function() {
                return "" + this._wrapped
            }
        }).call(vt)
    })(ji, ji.exports);
    const Ze = ji.exports;
    var Ka = {
        exports: {}
    };
    /*!
     * jQuery JavaScript Library v3.6.0
     * https://jquery.com/
     *
     * Includes Sizzle.js
     * https://sizzlejs.com/
     *
     * Copyright OpenJS Foundation and other contributors
     * Released under the MIT license
     * https://jquery.org/license
     *
     * Date: 2021-03-02T17:08Z
     */
    (function(t) {
        (function(e, n) {
            t.exports = e.document ? n(e, !0) : function(i) {
                if (!i.document) throw new Error("jQuery requires a window with a document");
                return n(i)
            }
        })(typeof window < "u" ? window : vt, function(e, n) {
            var i = [],
                o = Object.getPrototypeOf,
                d = i.slice,
                m = i.flat ? function(r) {
                    return i.flat.call(r)
                } : function(r) {
                    return i.concat.apply([], r)
                },
                C = i.push,
                S = i.indexOf,
                T = {},
                D = T.toString,
                V = T.hasOwnProperty,
                Y = V.toString,
                ie = Y.call(Object),
                K = {},
                re = function(s) {
                    return typeof s == "function" && typeof s.nodeType != "number" && typeof s.item != "function"
                },
                v = function(s) {
                    return s != null && s === s.window
                },
                P = e.document,
                H = {
                    type: !0,
                    src: !0,
                    nonce: !0,
                    noModule: !0
                };

            function ae(r, s, u) {
                u = u || P;
                var p, b, x = u.createElement("script");
                if (x.text = r, s)
                    for (p in H) b = s[p] || s.getAttribute && s.getAttribute(p), b && x.setAttribute(p, b);
                u.head.appendChild(x).parentNode.removeChild(x)
            }

            function se(r) {
                return r == null ? r + "" : typeof r == "object" || typeof r == "function" ? T[D.call(r)] || "object" : typeof r
            }
            var ve = "3.6.0",
                f = function(r, s) {
                    return new f.fn.init(r, s)
                };
            f.fn = f.prototype = {
                jquery: ve,
                constructor: f,
                length: 0,
                toArray: function() {
                    return d.call(this)
                },
                get: function(r) {
                    return r == null ? d.call(this) : r < 0 ? this[r + this.length] : this[r]
                },
                pushStack: function(r) {
                    var s = f.merge(this.constructor(), r);
                    return s.prevObject = this, s
                },
                each: function(r) {
                    return f.each(this, r)
                },
                map: function(r) {
                    return this.pushStack(f.map(this, function(s, u) {
                        return r.call(s, u, s)
                    }))
                },
                slice: function() {
                    return this.pushStack(d.apply(this, arguments))
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                even: function() {
                    return this.pushStack(f.grep(this, function(r, s) {
                        return (s + 1) % 2
                    }))
                },
                odd: function() {
                    return this.pushStack(f.grep(this, function(r, s) {
                        return s % 2
                    }))
                },
                eq: function(r) {
                    var s = this.length,
                        u = +r + (r < 0 ? s : 0);
                    return this.pushStack(u >= 0 && u < s ? [this[u]] : [])
                },
                end: function() {
                    return this.prevObject || this.constructor()
                },
                push: C,
                sort: i.sort,
                splice: i.splice
            }, f.extend = f.fn.extend = function() {
                var r, s, u, p, b, x, A = arguments[0] || {},
                    F = 1,
                    U = arguments.length,
                    Z = !1;
                for (typeof A == "boolean" && (Z = A, A = arguments[F] || {}, F++), typeof A != "object" && !re(A) && (A = {}), F === U && (A = this, F--); F < U; F++)
                    if ((r = arguments[F]) != null)
                        for (s in r) p = r[s], !(s === "__proto__" || A === p) && (Z && p && (f.isPlainObject(p) || (b = Array.isArray(p))) ? (u = A[s], b && !Array.isArray(u) ? x = [] : !b && !f.isPlainObject(u) ? x = {} : x = u, b = !1, A[s] = f.extend(Z, x, p)) : p !== void 0 && (A[s] = p));
                return A
            }, f.extend({
                expando: "jQuery" + (ve + Math.random()).replace(/\D/g, ""),
                isReady: !0,
                error: function(r) {
                    throw new Error(r)
                },
                noop: function() {},
                isPlainObject: function(r) {
                    var s, u;
                    return !r || D.call(r) !== "[object Object]" ? !1 : (s = o(r), s ? (u = V.call(s, "constructor") && s.constructor, typeof u == "function" && Y.call(u) === ie) : !0)
                },
                isEmptyObject: function(r) {
                    var s;
                    for (s in r) return !1;
                    return !0
                },
                globalEval: function(r, s, u) {
                    ae(r, {
                        nonce: s && s.nonce
                    }, u)
                },
                each: function(r, s) {
                    var u, p = 0;
                    if (Ee(r))
                        for (u = r.length; p < u && s.call(r[p], p, r[p]) !== !1; p++);
                    else
                        for (p in r)
                            if (s.call(r[p], p, r[p]) === !1) break;
                    return r
                },
                makeArray: function(r, s) {
                    var u = s || [];
                    return r != null && (Ee(Object(r)) ? f.merge(u, typeof r == "string" ? [r] : r) : C.call(u, r)), u
                },
                inArray: function(r, s, u) {
                    return s == null ? -1 : S.call(s, r, u)
                },
                merge: function(r, s) {
                    for (var u = +s.length, p = 0, b = r.length; p < u; p++) r[b++] = s[p];
                    return r.length = b, r
                },
                grep: function(r, s, u) {
                    for (var p, b = [], x = 0, A = r.length, F = !u; x < A; x++) p = !s(r[x], x), p !== F && b.push(r[x]);
                    return b
                },
                map: function(r, s, u) {
                    var p, b, x = 0,
                        A = [];
                    if (Ee(r))
                        for (p = r.length; x < p; x++) b = s(r[x], x, u), b != null && A.push(b);
                    else
                        for (x in r) b = s(r[x], x, u), b != null && A.push(b);
                    return m(A)
                },
                guid: 1,
                support: K
            }), typeof Symbol == "function" && (f.fn[Symbol.iterator] = i[Symbol.iterator]), f.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(r, s) {
                T["[object " + s + "]"] = s.toLowerCase()
            });

            function Ee(r) {
                var s = !!r && "length" in r && r.length,
                    u = se(r);
                return re(r) || v(r) ? !1 : u === "array" || s === 0 || typeof s == "number" && s > 0 && s - 1 in r
            }
            var Oe = function(r) {
                var s, u, p, b, x, A, F, U, Z, le, Ce, ne, ce, Ge, ot, qe, Ut, Nt, un, Et = "sizzle" + 1 * new Date,
                    tt = r.document,
                    on = 0,
                    ft = 0,
                    Dt = er(),
                    Oi = er(),
                    Qi = er(),
                    hn = er(),
                    Jn = function(I, j) {
                        return I === j && (Ce = !0), 0
                    },
                    Qn = {}.hasOwnProperty,
                    an = [],
                    Mn = an.pop,
                    vn = an.push,
                    Cn = an.push,
                    Ds = an.slice,
                    Zn = function(I, j) {
                        for (var X = 0, de = I.length; X < de; X++)
                            if (I[X] === j) return X;
                        return -1
                    },
                    Hr = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                    gt = "[\\x20\\t\\r\\n\\f]",
                    ei = "(?:\\\\[\\da-fA-F]{1,6}" + gt + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                    Ms = "\\[" + gt + "*(" + ei + ")(?:" + gt + "*([*^$|!~]?=)" + gt + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + ei + "))|)" + gt + "*\\]",
                    Wr = ":(" + ei + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + Ms + ")*)|.*)\\)|)",
                    Ls = new RegExp(gt + "+", "g"),
                    Ri = new RegExp("^" + gt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + gt + "+$", "g"),
                    Ps = new RegExp("^" + gt + "*," + gt + "*"),
                    $s = new RegExp("^" + gt + "*([>+~]|" + gt + ")" + gt + "*"),
                    Yo = new RegExp(gt + "|>"),
                    Ko = new RegExp(Wr),
                    Jo = new RegExp("^" + ei + "$"),
                    Zi = {
                        ID: new RegExp("^#(" + ei + ")"),
                        CLASS: new RegExp("^\\.(" + ei + ")"),
                        TAG: new RegExp("^(" + ei + "|[*])"),
                        ATTR: new RegExp("^" + Ms),
                        PSEUDO: new RegExp("^" + Wr),
                        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + gt + "*(even|odd|(([+-]|)(\\d*)n|)" + gt + "*(?:([+-]|)" + gt + "*(\\d+)|))" + gt + "*\\)|)", "i"),
                        bool: new RegExp("^(?:" + Hr + ")$", "i"),
                        needsContext: new RegExp("^" + gt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + gt + "*((?:-\\d)?\\d*)" + gt + "*\\)|)(?=[^-]|$)", "i")
                    },
                    Qo = /HTML$/i,
                    Zo = /^(?:input|select|textarea|button)$/i,
                    ea = /^h\d$/i,
                    Ii = /^[^{]+\{\s*\[native \w/,
                    ta = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                    Xr = /[+~]/,
                    Tn = new RegExp("\\\\[\\da-fA-F]{1,6}" + gt + "?|\\\\([^\\r\\n\\f])", "g"),
                    _n = function(I, j) {
                        var X = "0x" + I.slice(1) - 65536;
                        return j || (X < 0 ? String.fromCharCode(X + 65536) : String.fromCharCode(X >> 10 | 55296, X & 1023 | 56320))
                    },
                    Yr = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                    Ns = function(I, j) {
                        return j ? I === "\0" ? "\uFFFD" : I.slice(0, -1) + "\\" + I.charCodeAt(I.length - 1).toString(16) + " " : "\\" + I
                    },
                    Vs = function() {
                        ne()
                    },
                    na = rr(function(I) {
                        return I.disabled === !0 && I.nodeName.toLowerCase() === "fieldset"
                    }, {
                        dir: "parentNode",
                        next: "legend"
                    });
                try {
                    Cn.apply(an = Ds.call(tt.childNodes), tt.childNodes), an[tt.childNodes.length].nodeType
                } catch {
                    Cn = {
                        apply: an.length ? function(j, X) {
                            vn.apply(j, Ds.call(X))
                        } : function(j, X) {
                            for (var de = j.length, ee = 0; j[de++] = X[ee++];);
                            j.length = de - 1
                        }
                    }
                }

                function St(I, j, X, de) {
                    var ee, me, xe, Re, Le, Fe, ze, Xe = j && j.ownerDocument,
                        ht = j ? j.nodeType : 9;
                    if (X = X || [], typeof I != "string" || !I || ht !== 1 && ht !== 9 && ht !== 11) return X;
                    if (!de && (ne(j), j = j || ce, ot)) {
                        if (ht !== 11 && (Le = ta.exec(I)))
                            if (ee = Le[1]) {
                                if (ht === 9)
                                    if (xe = j.getElementById(ee)) {
                                        if (xe.id === ee) return X.push(xe), X
                                    } else return X;
                                else if (Xe && (xe = Xe.getElementById(ee)) && un(j, xe) && xe.id === ee) return X.push(xe), X
                            } else {
                                if (Le[2]) return Cn.apply(X, j.getElementsByTagName(I)), X;
                                if ((ee = Le[3]) && u.getElementsByClassName && j.getElementsByClassName) return Cn.apply(X, j.getElementsByClassName(ee)), X
                            } if (u.qsa && !hn[I + " "] && (!qe || !qe.test(I)) && (ht !== 1 || j.nodeName.toLowerCase() !== "object")) {
                            if (ze = I, Xe = j, ht === 1 && (Yo.test(I) || $s.test(I))) {
                                for (Xe = Xr.test(I) && Kr(j.parentNode) || j, (Xe !== j || !u.scope) && ((Re = j.getAttribute("id")) ? Re = Re.replace(Yr, Ns) : j.setAttribute("id", Re = Et)), Fe = A(I), me = Fe.length; me--;) Fe[me] = (Re ? "#" + Re : ":scope") + " " + ir(Fe[me]);
                                ze = Fe.join(",")
                            }
                            try {
                                return Cn.apply(X, Xe.querySelectorAll(ze)), X
                            } catch {
                                hn(I, !0)
                            } finally {
                                Re === Et && j.removeAttribute("id")
                            }
                        }
                    }
                    return U(I.replace(Ri, "$1"), j, X, de)
                }

                function er() {
                    var I = [];

                    function j(X, de) {
                        return I.push(X + " ") > p.cacheLength && delete j[I.shift()], j[X + " "] = de
                    }
                    return j
                }

                function dn(I) {
                    return I[Et] = !0, I
                }

                function yn(I) {
                    var j = ce.createElement("fieldset");
                    try {
                        return !!I(j)
                    } catch {
                        return !1
                    } finally {
                        j.parentNode && j.parentNode.removeChild(j), j = null
                    }
                }

                function tr(I, j) {
                    for (var X = I.split("|"), de = X.length; de--;) p.attrHandle[X[de]] = j
                }

                function nr(I, j) {
                    var X = j && I,
                        de = X && I.nodeType === 1 && j.nodeType === 1 && I.sourceIndex - j.sourceIndex;
                    if (de) return de;
                    if (X) {
                        for (; X = X.nextSibling;)
                            if (X === j) return -1
                    }
                    return I ? 1 : -1
                }

                function ia(I) {
                    return function(j) {
                        var X = j.nodeName.toLowerCase();
                        return X === "input" && j.type === I
                    }
                }

                function ra(I) {
                    return function(j) {
                        var X = j.nodeName.toLowerCase();
                        return (X === "input" || X === "button") && j.type === I
                    }
                }

                function Bs(I) {
                    return function(j) {
                        return "form" in j ? j.parentNode && j.disabled === !1 ? "label" in j ? "label" in j.parentNode ? j.parentNode.disabled === I : j.disabled === I : j.isDisabled === I || j.isDisabled !== !I && na(j) === I : j.disabled === I : "label" in j ? j.disabled === I : !1
                    }
                }

                function An(I) {
                    return dn(function(j) {
                        return j = +j, dn(function(X, de) {
                            for (var ee, me = I([], X.length, j), xe = me.length; xe--;) X[ee = me[xe]] && (X[ee] = !(de[ee] = X[ee]))
                        })
                    })
                }

                function Kr(I) {
                    return I && typeof I.getElementsByTagName < "u" && I
                }
                u = St.support = {}, x = St.isXML = function(I) {
                    var j = I && I.namespaceURI,
                        X = I && (I.ownerDocument || I).documentElement;
                    return !Qo.test(j || X && X.nodeName || "HTML")
                }, ne = St.setDocument = function(I) {
                    var j, X, de = I ? I.ownerDocument || I : tt;
                    return de == ce || de.nodeType !== 9 || !de.documentElement || (ce = de, Ge = ce.documentElement, ot = !x(ce), tt != ce && (X = ce.defaultView) && X.top !== X && (X.addEventListener ? X.addEventListener("unload", Vs, !1) : X.attachEvent && X.attachEvent("onunload", Vs)), u.scope = yn(function(ee) {
                        return Ge.appendChild(ee).appendChild(ce.createElement("div")), typeof ee.querySelectorAll < "u" && !ee.querySelectorAll(":scope fieldset div").length
                    }), u.attributes = yn(function(ee) {
                        return ee.className = "i", !ee.getAttribute("className")
                    }), u.getElementsByTagName = yn(function(ee) {
                        return ee.appendChild(ce.createComment("")), !ee.getElementsByTagName("*").length
                    }), u.getElementsByClassName = Ii.test(ce.getElementsByClassName), u.getById = yn(function(ee) {
                        return Ge.appendChild(ee).id = Et, !ce.getElementsByName || !ce.getElementsByName(Et).length
                    }), u.getById ? (p.filter.ID = function(ee) {
                        var me = ee.replace(Tn, _n);
                        return function(xe) {
                            return xe.getAttribute("id") === me
                        }
                    }, p.find.ID = function(ee, me) {
                        if (typeof me.getElementById < "u" && ot) {
                            var xe = me.getElementById(ee);
                            return xe ? [xe] : []
                        }
                    }) : (p.filter.ID = function(ee) {
                        var me = ee.replace(Tn, _n);
                        return function(xe) {
                            var Re = typeof xe.getAttributeNode < "u" && xe.getAttributeNode("id");
                            return Re && Re.value === me
                        }
                    }, p.find.ID = function(ee, me) {
                        if (typeof me.getElementById < "u" && ot) {
                            var xe, Re, Le, Fe = me.getElementById(ee);
                            if (Fe) {
                                if (xe = Fe.getAttributeNode("id"), xe && xe.value === ee) return [Fe];
                                for (Le = me.getElementsByName(ee), Re = 0; Fe = Le[Re++];)
                                    if (xe = Fe.getAttributeNode("id"), xe && xe.value === ee) return [Fe]
                            }
                            return []
                        }
                    }), p.find.TAG = u.getElementsByTagName ? function(ee, me) {
                        if (typeof me.getElementsByTagName < "u") return me.getElementsByTagName(ee);
                        if (u.qsa) return me.querySelectorAll(ee)
                    } : function(ee, me) {
                        var xe, Re = [],
                            Le = 0,
                            Fe = me.getElementsByTagName(ee);
                        if (ee === "*") {
                            for (; xe = Fe[Le++];) xe.nodeType === 1 && Re.push(xe);
                            return Re
                        }
                        return Fe
                    }, p.find.CLASS = u.getElementsByClassName && function(ee, me) {
                        if (typeof me.getElementsByClassName < "u" && ot) return me.getElementsByClassName(ee)
                    }, Ut = [], qe = [], (u.qsa = Ii.test(ce.querySelectorAll)) && (yn(function(ee) {
                        var me;
                        Ge.appendChild(ee).innerHTML = "<a id='" + Et + "'></a><select id='" + Et + "-\r\\' msallowcapture=''><option selected=''></option></select>", ee.querySelectorAll("[msallowcapture^='']").length && qe.push("[*^$]=" + gt + `*(?:''|"")`), ee.querySelectorAll("[selected]").length || qe.push("\\[" + gt + "*(?:value|" + Hr + ")"), ee.querySelectorAll("[id~=" + Et + "-]").length || qe.push("~="), me = ce.createElement("input"), me.setAttribute("name", ""), ee.appendChild(me), ee.querySelectorAll("[name='']").length || qe.push("\\[" + gt + "*name" + gt + "*=" + gt + `*(?:''|"")`), ee.querySelectorAll(":checked").length || qe.push(":checked"), ee.querySelectorAll("a#" + Et + "+*").length || qe.push(".#.+[+~]"), ee.querySelectorAll("\\\f"), qe.push("[\\r\\n\\f]")
                    }), yn(function(ee) {
                        ee.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                        var me = ce.createElement("input");
                        me.setAttribute("type", "hidden"), ee.appendChild(me).setAttribute("name", "D"), ee.querySelectorAll("[name=d]").length && qe.push("name" + gt + "*[*^$|!~]?="), ee.querySelectorAll(":enabled").length !== 2 && qe.push(":enabled", ":disabled"), Ge.appendChild(ee).disabled = !0, ee.querySelectorAll(":disabled").length !== 2 && qe.push(":enabled", ":disabled"), ee.querySelectorAll("*,:x"), qe.push(",.*:")
                    })), (u.matchesSelector = Ii.test(Nt = Ge.matches || Ge.webkitMatchesSelector || Ge.mozMatchesSelector || Ge.oMatchesSelector || Ge.msMatchesSelector)) && yn(function(ee) {
                        u.disconnectedMatch = Nt.call(ee, "*"), Nt.call(ee, "[s!='']:x"), Ut.push("!=", Wr)
                    }), qe = qe.length && new RegExp(qe.join("|")), Ut = Ut.length && new RegExp(Ut.join("|")), j = Ii.test(Ge.compareDocumentPosition), un = j || Ii.test(Ge.contains) ? function(ee, me) {
                        var xe = ee.nodeType === 9 ? ee.documentElement : ee,
                            Re = me && me.parentNode;
                        return ee === Re || !!(Re && Re.nodeType === 1 && (xe.contains ? xe.contains(Re) : ee.compareDocumentPosition && ee.compareDocumentPosition(Re) & 16))
                    } : function(ee, me) {
                        if (me) {
                            for (; me = me.parentNode;)
                                if (me === ee) return !0
                        }
                        return !1
                    }, Jn = j ? function(ee, me) {
                        if (ee === me) return Ce = !0, 0;
                        var xe = !ee.compareDocumentPosition - !me.compareDocumentPosition;
                        return xe || (xe = (ee.ownerDocument || ee) == (me.ownerDocument || me) ? ee.compareDocumentPosition(me) : 1, xe & 1 || !u.sortDetached && me.compareDocumentPosition(ee) === xe ? ee == ce || ee.ownerDocument == tt && un(tt, ee) ? -1 : me == ce || me.ownerDocument == tt && un(tt, me) ? 1 : le ? Zn(le, ee) - Zn(le, me) : 0 : xe & 4 ? -1 : 1)
                    } : function(ee, me) {
                        if (ee === me) return Ce = !0, 0;
                        var xe, Re = 0,
                            Le = ee.parentNode,
                            Fe = me.parentNode,
                            ze = [ee],
                            Xe = [me];
                        if (!Le || !Fe) return ee == ce ? -1 : me == ce ? 1 : Le ? -1 : Fe ? 1 : le ? Zn(le, ee) - Zn(le, me) : 0;
                        if (Le === Fe) return nr(ee, me);
                        for (xe = ee; xe = xe.parentNode;) ze.unshift(xe);
                        for (xe = me; xe = xe.parentNode;) Xe.unshift(xe);
                        for (; ze[Re] === Xe[Re];) Re++;
                        return Re ? nr(ze[Re], Xe[Re]) : ze[Re] == tt ? -1 : Xe[Re] == tt ? 1 : 0
                    }), ce
                }, St.matches = function(I, j) {
                    return St(I, null, null, j)
                }, St.matchesSelector = function(I, j) {
                    if (ne(I), u.matchesSelector && ot && !hn[j + " "] && (!Ut || !Ut.test(j)) && (!qe || !qe.test(j))) try {
                        var X = Nt.call(I, j);
                        if (X || u.disconnectedMatch || I.document && I.document.nodeType !== 11) return X
                    } catch {
                        hn(j, !0)
                    }
                    return St(j, ce, null, [I]).length > 0
                }, St.contains = function(I, j) {
                    return (I.ownerDocument || I) != ce && ne(I), un(I, j)
                }, St.attr = function(I, j) {
                    (I.ownerDocument || I) != ce && ne(I);
                    var X = p.attrHandle[j.toLowerCase()],
                        de = X && Qn.call(p.attrHandle, j.toLowerCase()) ? X(I, j, !ot) : void 0;
                    return de !== void 0 ? de : u.attributes || !ot ? I.getAttribute(j) : (de = I.getAttributeNode(j)) && de.specified ? de.value : null
                }, St.escape = function(I) {
                    return (I + "").replace(Yr, Ns)
                }, St.error = function(I) {
                    throw new Error("Syntax error, unrecognized expression: " + I)
                }, St.uniqueSort = function(I) {
                    var j, X = [],
                        de = 0,
                        ee = 0;
                    if (Ce = !u.detectDuplicates, le = !u.sortStable && I.slice(0), I.sort(Jn), Ce) {
                        for (; j = I[ee++];) j === I[ee] && (de = X.push(ee));
                        for (; de--;) I.splice(X[de], 1)
                    }
                    return le = null, I
                }, b = St.getText = function(I) {
                    var j, X = "",
                        de = 0,
                        ee = I.nodeType;
                    if (ee) {
                        if (ee === 1 || ee === 9 || ee === 11) {
                            if (typeof I.textContent == "string") return I.textContent;
                            for (I = I.firstChild; I; I = I.nextSibling) X += b(I)
                        } else if (ee === 3 || ee === 4) return I.nodeValue
                    } else
                        for (; j = I[de++];) X += b(j);
                    return X
                }, p = St.selectors = {
                    cacheLength: 50,
                    createPseudo: dn,
                    match: Zi,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function(I) {
                            return I[1] = I[1].replace(Tn, _n), I[3] = (I[3] || I[4] || I[5] || "").replace(Tn, _n), I[2] === "~=" && (I[3] = " " + I[3] + " "), I.slice(0, 4)
                        },
                        CHILD: function(I) {
                            return I[1] = I[1].toLowerCase(), I[1].slice(0, 3) === "nth" ? (I[3] || St.error(I[0]), I[4] = +(I[4] ? I[5] + (I[6] || 1) : 2 * (I[3] === "even" || I[3] === "odd")), I[5] = +(I[7] + I[8] || I[3] === "odd")) : I[3] && St.error(I[0]), I
                        },
                        PSEUDO: function(I) {
                            var j, X = !I[6] && I[2];
                            return Zi.CHILD.test(I[0]) ? null : (I[3] ? I[2] = I[4] || I[5] || "" : X && Ko.test(X) && (j = A(X, !0)) && (j = X.indexOf(")", X.length - j) - X.length) && (I[0] = I[0].slice(0, j), I[2] = X.slice(0, j)), I.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function(I) {
                            var j = I.replace(Tn, _n).toLowerCase();
                            return I === "*" ? function() {
                                return !0
                            } : function(X) {
                                return X.nodeName && X.nodeName.toLowerCase() === j
                            }
                        },
                        CLASS: function(I) {
                            var j = Dt[I + " "];
                            return j || (j = new RegExp("(^|" + gt + ")" + I + "(" + gt + "|$)")) && Dt(I, function(X) {
                                return j.test(typeof X.className == "string" && X.className || typeof X.getAttribute < "u" && X.getAttribute("class") || "")
                            })
                        },
                        ATTR: function(I, j, X) {
                            return function(de) {
                                var ee = St.attr(de, I);
                                return ee == null ? j === "!=" : j ? (ee += "", j === "=" ? ee === X : j === "!=" ? ee !== X : j === "^=" ? X && ee.indexOf(X) === 0 : j === "*=" ? X && ee.indexOf(X) > -1 : j === "$=" ? X && ee.slice(-X.length) === X : j === "~=" ? (" " + ee.replace(Ls, " ") + " ").indexOf(X) > -1 : j === "|=" ? ee === X || ee.slice(0, X.length + 1) === X + "-" : !1) : !0
                            }
                        },
                        CHILD: function(I, j, X, de, ee) {
                            var me = I.slice(0, 3) !== "nth",
                                xe = I.slice(-4) !== "last",
                                Re = j === "of-type";
                            return de === 1 && ee === 0 ? function(Le) {
                                return !!Le.parentNode
                            } : function(Le, Fe, ze) {
                                var Xe, ht, At, We, zt, Qt, fn = me !== xe ? "nextSibling" : "previousSibling",
                                    Ot = Le.parentNode,
                                    c = Re && Le.nodeName.toLowerCase(),
                                    h = !ze && !Re,
                                    w = !1;
                                if (Ot) {
                                    if (me) {
                                        for (; fn;) {
                                            for (We = Le; We = We[fn];)
                                                if (Re ? We.nodeName.toLowerCase() === c : We.nodeType === 1) return !1;
                                            Qt = fn = I === "only" && !Qt && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (Qt = [xe ? Ot.firstChild : Ot.lastChild], xe && h) {
                                        for (We = Ot, At = We[Et] || (We[Et] = {}), ht = At[We.uniqueID] || (At[We.uniqueID] = {}), Xe = ht[I] || [], zt = Xe[0] === on && Xe[1], w = zt && Xe[2], We = zt && Ot.childNodes[zt]; We = ++zt && We && We[fn] || (w = zt = 0) || Qt.pop();)
                                            if (We.nodeType === 1 && ++w && We === Le) {
                                                ht[I] = [on, zt, w];
                                                break
                                            }
                                    } else if (h && (We = Le, At = We[Et] || (We[Et] = {}), ht = At[We.uniqueID] || (At[We.uniqueID] = {}), Xe = ht[I] || [], zt = Xe[0] === on && Xe[1], w = zt), w === !1)
                                        for (;
                                            (We = ++zt && We && We[fn] || (w = zt = 0) || Qt.pop()) && !((Re ? We.nodeName.toLowerCase() === c : We.nodeType === 1) && ++w && (h && (At = We[Et] || (We[Et] = {}), ht = At[We.uniqueID] || (At[We.uniqueID] = {}), ht[I] = [on, w]), We === Le)););
                                    return w -= ee, w === de || w % de === 0 && w / de >= 0
                                }
                            }
                        },
                        PSEUDO: function(I, j) {
                            var X, de = p.pseudos[I] || p.setFilters[I.toLowerCase()] || St.error("unsupported pseudo: " + I);
                            return de[Et] ? de(j) : de.length > 1 ? (X = [I, I, "", j], p.setFilters.hasOwnProperty(I.toLowerCase()) ? dn(function(ee, me) {
                                for (var xe, Re = de(ee, j), Le = Re.length; Le--;) xe = Zn(ee, Re[Le]), ee[xe] = !(me[xe] = Re[Le])
                            }) : function(ee) {
                                return de(ee, 0, X)
                            }) : de
                        }
                    },
                    pseudos: {
                        not: dn(function(I) {
                            var j = [],
                                X = [],
                                de = F(I.replace(Ri, "$1"));
                            return de[Et] ? dn(function(ee, me, xe, Re) {
                                for (var Le, Fe = de(ee, null, Re, []), ze = ee.length; ze--;)(Le = Fe[ze]) && (ee[ze] = !(me[ze] = Le))
                            }) : function(ee, me, xe) {
                                return j[0] = ee, de(j, null, xe, X), j[0] = null, !X.pop()
                            }
                        }),
                        has: dn(function(I) {
                            return function(j) {
                                return St(I, j).length > 0
                            }
                        }),
                        contains: dn(function(I) {
                            return I = I.replace(Tn, _n),
                                function(j) {
                                    return (j.textContent || b(j)).indexOf(I) > -1
                                }
                        }),
                        lang: dn(function(I) {
                            return Jo.test(I || "") || St.error("unsupported lang: " + I), I = I.replace(Tn, _n).toLowerCase(),
                                function(j) {
                                    var X;
                                    do
                                        if (X = ot ? j.lang : j.getAttribute("xml:lang") || j.getAttribute("lang")) return X = X.toLowerCase(), X === I || X.indexOf(I + "-") === 0; while ((j = j.parentNode) && j.nodeType === 1);
                                    return !1
                                }
                        }),
                        target: function(I) {
                            var j = r.location && r.location.hash;
                            return j && j.slice(1) === I.id
                        },
                        root: function(I) {
                            return I === Ge
                        },
                        focus: function(I) {
                            return I === ce.activeElement && (!ce.hasFocus || ce.hasFocus()) && !!(I.type || I.href || ~I.tabIndex)
                        },
                        enabled: Bs(!1),
                        disabled: Bs(!0),
                        checked: function(I) {
                            var j = I.nodeName.toLowerCase();
                            return j === "input" && !!I.checked || j === "option" && !!I.selected
                        },
                        selected: function(I) {
                            return I.parentNode && I.parentNode.selectedIndex, I.selected === !0
                        },
                        empty: function(I) {
                            for (I = I.firstChild; I; I = I.nextSibling)
                                if (I.nodeType < 6) return !1;
                            return !0
                        },
                        parent: function(I) {
                            return !p.pseudos.empty(I)
                        },
                        header: function(I) {
                            return ea.test(I.nodeName)
                        },
                        input: function(I) {
                            return Zo.test(I.nodeName)
                        },
                        button: function(I) {
                            var j = I.nodeName.toLowerCase();
                            return j === "input" && I.type === "button" || j === "button"
                        },
                        text: function(I) {
                            var j;
                            return I.nodeName.toLowerCase() === "input" && I.type === "text" && ((j = I.getAttribute("type")) == null || j.toLowerCase() === "text")
                        },
                        first: An(function() {
                            return [0]
                        }),
                        last: An(function(I, j) {
                            return [j - 1]
                        }),
                        eq: An(function(I, j, X) {
                            return [X < 0 ? X + j : X]
                        }),
                        even: An(function(I, j) {
                            for (var X = 0; X < j; X += 2) I.push(X);
                            return I
                        }),
                        odd: An(function(I, j) {
                            for (var X = 1; X < j; X += 2) I.push(X);
                            return I
                        }),
                        lt: An(function(I, j, X) {
                            for (var de = X < 0 ? X + j : X > j ? j : X; --de >= 0;) I.push(de);
                            return I
                        }),
                        gt: An(function(I, j, X) {
                            for (var de = X < 0 ? X + j : X; ++de < j;) I.push(de);
                            return I
                        })
                    }
                }, p.pseudos.nth = p.pseudos.eq;
                for (s in {
                        radio: !0,
                        checkbox: !0,
                        file: !0,
                        password: !0,
                        image: !0
                    }) p.pseudos[s] = ia(s);
                for (s in {
                        submit: !0,
                        reset: !0
                    }) p.pseudos[s] = ra(s);

                function qs() {}
                qs.prototype = p.filters = p.pseudos, p.setFilters = new qs, A = St.tokenize = function(I, j) {
                    var X, de, ee, me, xe, Re, Le, Fe = Oi[I + " "];
                    if (Fe) return j ? 0 : Fe.slice(0);
                    for (xe = I, Re = [], Le = p.preFilter; xe;) {
                        (!X || (de = Ps.exec(xe))) && (de && (xe = xe.slice(de[0].length) || xe), Re.push(ee = [])), X = !1, (de = $s.exec(xe)) && (X = de.shift(), ee.push({
                            value: X,
                            type: de[0].replace(Ri, " ")
                        }), xe = xe.slice(X.length));
                        for (me in p.filter)(de = Zi[me].exec(xe)) && (!Le[me] || (de = Le[me](de))) && (X = de.shift(), ee.push({
                            value: X,
                            type: me,
                            matches: de
                        }), xe = xe.slice(X.length));
                        if (!X) break
                    }
                    return j ? xe.length : xe ? St.error(I) : Oi(I, Re).slice(0)
                };

                function ir(I) {
                    for (var j = 0, X = I.length, de = ""; j < X; j++) de += I[j].value;
                    return de
                }

                function rr(I, j, X) {
                    var de = j.dir,
                        ee = j.next,
                        me = ee || de,
                        xe = X && me === "parentNode",
                        Re = ft++;
                    return j.first ? function(Le, Fe, ze) {
                        for (; Le = Le[de];)
                            if (Le.nodeType === 1 || xe) return I(Le, Fe, ze);
                        return !1
                    } : function(Le, Fe, ze) {
                        var Xe, ht, At, We = [on, Re];
                        if (ze) {
                            for (; Le = Le[de];)
                                if ((Le.nodeType === 1 || xe) && I(Le, Fe, ze)) return !0
                        } else
                            for (; Le = Le[de];)
                                if (Le.nodeType === 1 || xe)
                                    if (At = Le[Et] || (Le[Et] = {}), ht = At[Le.uniqueID] || (At[Le.uniqueID] = {}), ee && ee === Le.nodeName.toLowerCase()) Le = Le[de] || Le;
                                    else {
                                        if ((Xe = ht[me]) && Xe[0] === on && Xe[1] === Re) return We[2] = Xe[2];
                                        if (ht[me] = We, We[2] = I(Le, Fe, ze)) return !0
                                    } return !1
                    }
                }

                function sr(I) {
                    return I.length > 1 ? function(j, X, de) {
                        for (var ee = I.length; ee--;)
                            if (!I[ee](j, X, de)) return !1;
                        return !0
                    } : I[0]
                }

                function sa(I, j, X) {
                    for (var de = 0, ee = j.length; de < ee; de++) St(I, j[de], X);
                    return X
                }

                function or(I, j, X, de, ee) {
                    for (var me, xe = [], Re = 0, Le = I.length, Fe = j != null; Re < Le; Re++)(me = I[Re]) && (!X || X(me, de, ee)) && (xe.push(me), Fe && j.push(Re));
                    return xe
                }

                function Jr(I, j, X, de, ee, me) {
                    return de && !de[Et] && (de = Jr(de)), ee && !ee[Et] && (ee = Jr(ee, me)), dn(function(xe, Re, Le, Fe) {
                        var ze, Xe, ht, At = [],
                            We = [],
                            zt = Re.length,
                            Qt = xe || sa(j || "*", Le.nodeType ? [Le] : Le, []),
                            fn = I && (xe || !j) ? or(Qt, At, I, Le, Fe) : Qt,
                            Ot = X ? ee || (xe ? I : zt || de) ? [] : Re : fn;
                        if (X && X(fn, Ot, Le, Fe), de)
                            for (ze = or(Ot, We), de(ze, [], Le, Fe), Xe = ze.length; Xe--;)(ht = ze[Xe]) && (Ot[We[Xe]] = !(fn[We[Xe]] = ht));
                        if (xe) {
                            if (ee || I) {
                                if (ee) {
                                    for (ze = [], Xe = Ot.length; Xe--;)(ht = Ot[Xe]) && ze.push(fn[Xe] = ht);
                                    ee(null, Ot = [], ze, Fe)
                                }
                                for (Xe = Ot.length; Xe--;)(ht = Ot[Xe]) && (ze = ee ? Zn(xe, ht) : At[Xe]) > -1 && (xe[ze] = !(Re[ze] = ht))
                            }
                        } else Ot = or(Ot === Re ? Ot.splice(zt, Ot.length) : Ot), ee ? ee(null, Re, Ot, Fe) : Cn.apply(Re, Ot)
                    })
                }

                function Qr(I) {
                    for (var j, X, de, ee = I.length, me = p.relative[I[0].type], xe = me || p.relative[" "], Re = me ? 1 : 0, Le = rr(function(Xe) {
                            return Xe === j
                        }, xe, !0), Fe = rr(function(Xe) {
                            return Zn(j, Xe) > -1
                        }, xe, !0), ze = [function(Xe, ht, At) {
                            var We = !me && (At || ht !== Z) || ((j = ht).nodeType ? Le(Xe, ht, At) : Fe(Xe, ht, At));
                            return j = null, We
                        }]; Re < ee; Re++)
                        if (X = p.relative[I[Re].type]) ze = [rr(sr(ze), X)];
                        else {
                            if (X = p.filter[I[Re].type].apply(null, I[Re].matches), X[Et]) {
                                for (de = ++Re; de < ee && !p.relative[I[de].type]; de++);
                                return Jr(Re > 1 && sr(ze), Re > 1 && ir(I.slice(0, Re - 1).concat({
                                    value: I[Re - 2].type === " " ? "*" : ""
                                })).replace(Ri, "$1"), X, Re < de && Qr(I.slice(Re, de)), de < ee && Qr(I = I.slice(de)), de < ee && ir(I))
                            }
                            ze.push(X)
                        } return sr(ze)
                }

                function js(I, j) {
                    var X = j.length > 0,
                        de = I.length > 0,
                        ee = function(me, xe, Re, Le, Fe) {
                            var ze, Xe, ht, At = 0,
                                We = "0",
                                zt = me && [],
                                Qt = [],
                                fn = Z,
                                Ot = me || de && p.find.TAG("*", Fe),
                                c = on += fn == null ? 1 : Math.random() || .1,
                                h = Ot.length;
                            for (Fe && (Z = xe == ce || xe || Fe); We !== h && (ze = Ot[We]) != null; We++) {
                                if (de && ze) {
                                    for (Xe = 0, !xe && ze.ownerDocument != ce && (ne(ze), Re = !ot); ht = I[Xe++];)
                                        if (ht(ze, xe || ce, Re)) {
                                            Le.push(ze);
                                            break
                                        } Fe && (on = c)
                                }
                                X && ((ze = !ht && ze) && At--, me && zt.push(ze))
                            }
                            if (At += We, X && We !== At) {
                                for (Xe = 0; ht = j[Xe++];) ht(zt, Qt, xe, Re);
                                if (me) {
                                    if (At > 0)
                                        for (; We--;) zt[We] || Qt[We] || (Qt[We] = Mn.call(Le));
                                    Qt = or(Qt)
                                }
                                Cn.apply(Le, Qt), Fe && !me && Qt.length > 0 && At + j.length > 1 && St.uniqueSort(Le)
                            }
                            return Fe && (on = c, Z = fn), zt
                        };
                    return X ? dn(ee) : ee
                }
                return F = St.compile = function(I, j) {
                    var X, de = [],
                        ee = [],
                        me = Qi[I + " "];
                    if (!me) {
                        for (j || (j = A(I)), X = j.length; X--;) me = Qr(j[X]), me[Et] ? de.push(me) : ee.push(me);
                        me = Qi(I, js(ee, de)), me.selector = I
                    }
                    return me
                }, U = St.select = function(I, j, X, de) {
                    var ee, me, xe, Re, Le, Fe = typeof I == "function" && I,
                        ze = !de && A(I = Fe.selector || I);
                    if (X = X || [], ze.length === 1) {
                        if (me = ze[0] = ze[0].slice(0), me.length > 2 && (xe = me[0]).type === "ID" && j.nodeType === 9 && ot && p.relative[me[1].type]) {
                            if (j = (p.find.ID(xe.matches[0].replace(Tn, _n), j) || [])[0], j) Fe && (j = j.parentNode);
                            else return X;
                            I = I.slice(me.shift().value.length)
                        }
                        for (ee = Zi.needsContext.test(I) ? 0 : me.length; ee-- && (xe = me[ee], !p.relative[Re = xe.type]);)
                            if ((Le = p.find[Re]) && (de = Le(xe.matches[0].replace(Tn, _n), Xr.test(me[0].type) && Kr(j.parentNode) || j))) {
                                if (me.splice(ee, 1), I = de.length && ir(me), !I) return Cn.apply(X, de), X;
                                break
                            }
                    }
                    return (Fe || F(I, ze))(de, j, !ot, X, !j || Xr.test(I) && Kr(j.parentNode) || j), X
                }, u.sortStable = Et.split("").sort(Jn).join("") === Et, u.detectDuplicates = !!Ce, ne(), u.sortDetached = yn(function(I) {
                    return I.compareDocumentPosition(ce.createElement("fieldset")) & 1
                }), yn(function(I) {
                    return I.innerHTML = "<a href='#'></a>", I.firstChild.getAttribute("href") === "#"
                }) || tr("type|href|height|width", function(I, j, X) {
                    if (!X) return I.getAttribute(j, j.toLowerCase() === "type" ? 1 : 2)
                }), (!u.attributes || !yn(function(I) {
                    return I.innerHTML = "<input/>", I.firstChild.setAttribute("value", ""), I.firstChild.getAttribute("value") === ""
                })) && tr("value", function(I, j, X) {
                    if (!X && I.nodeName.toLowerCase() === "input") return I.defaultValue
                }), yn(function(I) {
                    return I.getAttribute("disabled") == null
                }) || tr(Hr, function(I, j, X) {
                    var de;
                    if (!X) return I[j] === !0 ? j.toLowerCase() : (de = I.getAttributeNode(j)) && de.specified ? de.value : null
                }), St
            }(e);
            f.find = Oe, f.expr = Oe.selectors, f.expr[":"] = f.expr.pseudos, f.uniqueSort = f.unique = Oe.uniqueSort, f.text = Oe.getText, f.isXMLDoc = Oe.isXML, f.contains = Oe.contains, f.escapeSelector = Oe.escape;
            var Pe = function(r, s, u) {
                    for (var p = [], b = u !== void 0;
                        (r = r[s]) && r.nodeType !== 9;)
                        if (r.nodeType === 1) {
                            if (b && f(r).is(u)) break;
                            p.push(r)
                        } return p
                },
                lt = function(r, s) {
                    for (var u = []; r; r = r.nextSibling) r.nodeType === 1 && r !== s && u.push(r);
                    return u
                },
                Ve = f.expr.match.needsContext;

            function J(r, s) {
                return r.nodeName && r.nodeName.toLowerCase() === s.toLowerCase()
            }
            var je = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

            function z(r, s, u) {
                return re(s) ? f.grep(r, function(p, b) {
                    return !!s.call(p, b, p) !== u
                }) : s.nodeType ? f.grep(r, function(p) {
                    return p === s !== u
                }) : typeof s != "string" ? f.grep(r, function(p) {
                    return S.call(s, p) > -1 !== u
                }) : f.filter(s, r, u)
            }
            f.filter = function(r, s, u) {
                var p = s[0];
                return u && (r = ":not(" + r + ")"), s.length === 1 && p.nodeType === 1 ? f.find.matchesSelector(p, r) ? [p] : [] : f.find.matches(r, f.grep(s, function(b) {
                    return b.nodeType === 1
                }))
            }, f.fn.extend({
                find: function(r) {
                    var s, u, p = this.length,
                        b = this;
                    if (typeof r != "string") return this.pushStack(f(r).filter(function() {
                        for (s = 0; s < p; s++)
                            if (f.contains(b[s], this)) return !0
                    }));
                    for (u = this.pushStack([]), s = 0; s < p; s++) f.find(r, b[s], u);
                    return p > 1 ? f.uniqueSort(u) : u
                },
                filter: function(r) {
                    return this.pushStack(z(this, r || [], !1))
                },
                not: function(r) {
                    return this.pushStack(z(this, r || [], !0))
                },
                is: function(r) {
                    return !!z(this, typeof r == "string" && Ve.test(r) ? f(r) : r || [], !1).length
                }
            });
            var oe, Ae = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
                we = f.fn.init = function(r, s, u) {
                    var p, b;
                    if (!r) return this;
                    if (u = u || oe, typeof r == "string")
                        if (r[0] === "<" && r[r.length - 1] === ">" && r.length >= 3 ? p = [null, r, null] : p = Ae.exec(r), p && (p[1] || !s))
                            if (p[1]) {
                                if (s = s instanceof f ? s[0] : s, f.merge(this, f.parseHTML(p[1], s && s.nodeType ? s.ownerDocument || s : P, !0)), je.test(p[1]) && f.isPlainObject(s))
                                    for (p in s) re(this[p]) ? this[p](s[p]) : this.attr(p, s[p]);
                                return this
                            } else return b = P.getElementById(p[2]), b && (this[0] = b, this.length = 1), this;
                    else return !s || s.jquery ? (s || u).find(r) : this.constructor(s).find(r);
                    else {
                        if (r.nodeType) return this[0] = r, this.length = 1, this;
                        if (re(r)) return u.ready !== void 0 ? u.ready(r) : r(f)
                    }
                    return f.makeArray(r, this)
                };
            we.prototype = f.fn, oe = f(P);
            var ye = /^(?:parents|prev(?:Until|All))/,
                ue = {
                    children: !0,
                    contents: !0,
                    next: !0,
                    prev: !0
                };
            f.fn.extend({
                has: function(r) {
                    var s = f(r, this),
                        u = s.length;
                    return this.filter(function() {
                        for (var p = 0; p < u; p++)
                            if (f.contains(this, s[p])) return !0
                    })
                },
                closest: function(r, s) {
                    var u, p = 0,
                        b = this.length,
                        x = [],
                        A = typeof r != "string" && f(r);
                    if (!Ve.test(r)) {
                        for (; p < b; p++)
                            for (u = this[p]; u && u !== s; u = u.parentNode)
                                if (u.nodeType < 11 && (A ? A.index(u) > -1 : u.nodeType === 1 && f.find.matchesSelector(u, r))) {
                                    x.push(u);
                                    break
                                }
                    }
                    return this.pushStack(x.length > 1 ? f.uniqueSort(x) : x)
                },
                index: function(r) {
                    return r ? typeof r == "string" ? S.call(f(r), this[0]) : S.call(this, r.jquery ? r[0] : r) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                },
                add: function(r, s) {
                    return this.pushStack(f.uniqueSort(f.merge(this.get(), f(r, s))))
                },
                addBack: function(r) {
                    return this.add(r == null ? this.prevObject : this.prevObject.filter(r))
                }
            });

            function Se(r, s) {
                for (;
                    (r = r[s]) && r.nodeType !== 1;);
                return r
            }
            f.each({
                parent: function(r) {
                    var s = r.parentNode;
                    return s && s.nodeType !== 11 ? s : null
                },
                parents: function(r) {
                    return Pe(r, "parentNode")
                },
                parentsUntil: function(r, s, u) {
                    return Pe(r, "parentNode", u)
                },
                next: function(r) {
                    return Se(r, "nextSibling")
                },
                prev: function(r) {
                    return Se(r, "previousSibling")
                },
                nextAll: function(r) {
                    return Pe(r, "nextSibling")
                },
                prevAll: function(r) {
                    return Pe(r, "previousSibling")
                },
                nextUntil: function(r, s, u) {
                    return Pe(r, "nextSibling", u)
                },
                prevUntil: function(r, s, u) {
                    return Pe(r, "previousSibling", u)
                },
                siblings: function(r) {
                    return lt((r.parentNode || {}).firstChild, r)
                },
                children: function(r) {
                    return lt(r.firstChild)
                },
                contents: function(r) {
                    return r.contentDocument != null && o(r.contentDocument) ? r.contentDocument : (J(r, "template") && (r = r.content || r), f.merge([], r.childNodes))
                }
            }, function(r, s) {
                f.fn[r] = function(u, p) {
                    var b = f.map(this, s, u);
                    return r.slice(-5) !== "Until" && (p = u), p && typeof p == "string" && (b = f.filter(p, b)), this.length > 1 && (ue[r] || f.uniqueSort(b), ye.test(r) && b.reverse()), this.pushStack(b)
                }
            });
            var Te = /[^\x20\t\r\n\f]+/g;

            function Be(r) {
                var s = {};
                return f.each(r.match(Te) || [], function(u, p) {
                    s[p] = !0
                }), s
            }
            f.Callbacks = function(r) {
                r = typeof r == "string" ? Be(r) : f.extend({}, r);
                var s, u, p, b, x = [],
                    A = [],
                    F = -1,
                    U = function() {
                        for (b = b || r.once, p = s = !0; A.length; F = -1)
                            for (u = A.shift(); ++F < x.length;) x[F].apply(u[0], u[1]) === !1 && r.stopOnFalse && (F = x.length, u = !1);
                        r.memory || (u = !1), s = !1, b && (u ? x = [] : x = "")
                    },
                    Z = {
                        add: function() {
                            return x && (u && !s && (F = x.length - 1, A.push(u)), function le(Ce) {
                                f.each(Ce, function(ne, ce) {
                                    re(ce) ? (!r.unique || !Z.has(ce)) && x.push(ce) : ce && ce.length && se(ce) !== "string" && le(ce)
                                })
                            }(arguments), u && !s && U()), this
                        },
                        remove: function() {
                            return f.each(arguments, function(le, Ce) {
                                for (var ne;
                                    (ne = f.inArray(Ce, x, ne)) > -1;) x.splice(ne, 1), ne <= F && F--
                            }), this
                        },
                        has: function(le) {
                            return le ? f.inArray(le, x) > -1 : x.length > 0
                        },
                        empty: function() {
                            return x && (x = []), this
                        },
                        disable: function() {
                            return b = A = [], x = u = "", this
                        },
                        disabled: function() {
                            return !x
                        },
                        lock: function() {
                            return b = A = [], !u && !s && (x = u = ""), this
                        },
                        locked: function() {
                            return !!b
                        },
                        fireWith: function(le, Ce) {
                            return b || (Ce = Ce || [], Ce = [le, Ce.slice ? Ce.slice() : Ce], A.push(Ce), s || U()), this
                        },
                        fire: function() {
                            return Z.fireWith(this, arguments), this
                        },
                        fired: function() {
                            return !!p
                        }
                    };
                return Z
            };

            function Ke(r) {
                return r
            }

            function dt(r) {
                throw r
            }

            function Bt(r, s, u, p) {
                var b;
                try {
                    r && re(b = r.promise) ? b.call(r).done(s).fail(u) : r && re(b = r.then) ? b.call(r, s, u) : s.apply(void 0, [r].slice(p))
                } catch (x) {
                    u.apply(void 0, [x])
                }
            }
            f.extend({
                Deferred: function(r) {
                    var s = [
                            ["notify", "progress", f.Callbacks("memory"), f.Callbacks("memory"), 2],
                            ["resolve", "done", f.Callbacks("once memory"), f.Callbacks("once memory"), 0, "resolved"],
                            ["reject", "fail", f.Callbacks("once memory"), f.Callbacks("once memory"), 1, "rejected"]
                        ],
                        u = "pending",
                        p = {
                            state: function() {
                                return u
                            },
                            always: function() {
                                return b.done(arguments).fail(arguments), this
                            },
                            catch: function(x) {
                                return p.then(null, x)
                            },
                            pipe: function() {
                                var x = arguments;
                                return f.Deferred(function(A) {
                                    f.each(s, function(F, U) {
                                        var Z = re(x[U[4]]) && x[U[4]];
                                        b[U[1]](function() {
                                            var le = Z && Z.apply(this, arguments);
                                            le && re(le.promise) ? le.promise().progress(A.notify).done(A.resolve).fail(A.reject) : A[U[0] + "With"](this, Z ? [le] : arguments)
                                        })
                                    }), x = null
                                }).promise()
                            },
                            then: function(x, A, F) {
                                var U = 0;

                                function Z(le, Ce, ne, ce) {
                                    return function() {
                                        var Ge = this,
                                            ot = arguments,
                                            qe = function() {
                                                var Nt, un;
                                                if (!(le < U)) {
                                                    if (Nt = ne.apply(Ge, ot), Nt === Ce.promise()) throw new TypeError("Thenable self-resolution");
                                                    un = Nt && (typeof Nt == "object" || typeof Nt == "function") && Nt.then, re(un) ? ce ? un.call(Nt, Z(U, Ce, Ke, ce), Z(U, Ce, dt, ce)) : (U++, un.call(Nt, Z(U, Ce, Ke, ce), Z(U, Ce, dt, ce), Z(U, Ce, Ke, Ce.notifyWith))) : (ne !== Ke && (Ge = void 0, ot = [Nt]), (ce || Ce.resolveWith)(Ge, ot))
                                                }
                                            },
                                            Ut = ce ? qe : function() {
                                                try {
                                                    qe()
                                                } catch (Nt) {
                                                    f.Deferred.exceptionHook && f.Deferred.exceptionHook(Nt, Ut.stackTrace), le + 1 >= U && (ne !== dt && (Ge = void 0, ot = [Nt]), Ce.rejectWith(Ge, ot))
                                                }
                                            };
                                        le ? Ut() : (f.Deferred.getStackHook && (Ut.stackTrace = f.Deferred.getStackHook()), e.setTimeout(Ut))
                                    }
                                }
                                return f.Deferred(function(le) {
                                    s[0][3].add(Z(0, le, re(F) ? F : Ke, le.notifyWith)), s[1][3].add(Z(0, le, re(x) ? x : Ke)), s[2][3].add(Z(0, le, re(A) ? A : dt))
                                }).promise()
                            },
                            promise: function(x) {
                                return x != null ? f.extend(x, p) : p
                            }
                        },
                        b = {};
                    return f.each(s, function(x, A) {
                        var F = A[2],
                            U = A[5];
                        p[A[1]] = F.add, U && F.add(function() {
                            u = U
                        }, s[3 - x][2].disable, s[3 - x][3].disable, s[0][2].lock, s[0][3].lock), F.add(A[3].fire), b[A[0]] = function() {
                            return b[A[0] + "With"](this === b ? void 0 : this, arguments), this
                        }, b[A[0] + "With"] = F.fireWith
                    }), p.promise(b), r && r.call(b, b), b
                },
                when: function(r) {
                    var s = arguments.length,
                        u = s,
                        p = Array(u),
                        b = d.call(arguments),
                        x = f.Deferred(),
                        A = function(F) {
                            return function(U) {
                                p[F] = this, b[F] = arguments.length > 1 ? d.call(arguments) : U, --s || x.resolveWith(p, b)
                            }
                        };
                    if (s <= 1 && (Bt(r, x.done(A(u)).resolve, x.reject, !s), x.state() === "pending" || re(b[u] && b[u].then))) return x.then();
                    for (; u--;) Bt(b[u], A(u), x.reject);
                    return x.promise()
                }
            });
            var Ht = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
            f.Deferred.exceptionHook = function(r, s) {
                e.console && e.console.warn && r && Ht.test(r.name) && e.console.warn("jQuery.Deferred exception: " + r.message, r.stack, s)
            }, f.readyException = function(r) {
                e.setTimeout(function() {
                    throw r
                })
            };
            var E = f.Deferred();
            f.fn.ready = function(r) {
                return E.then(r).catch(function(s) {
                    f.readyException(s)
                }), this
            }, f.extend({
                isReady: !1,
                readyWait: 1,
                ready: function(r) {
                    (r === !0 ? --f.readyWait : f.isReady) || (f.isReady = !0, !(r !== !0 && --f.readyWait > 0) && E.resolveWith(P, [f]))
                }
            }), f.ready.then = E.then;

            function l() {
                P.removeEventListener("DOMContentLoaded", l), e.removeEventListener("load", l), f.ready()
            }
            P.readyState === "complete" || P.readyState !== "loading" && !P.documentElement.doScroll ? e.setTimeout(f.ready) : (P.addEventListener("DOMContentLoaded", l), e.addEventListener("load", l));
            var g = function(r, s, u, p, b, x, A) {
                    var F = 0,
                        U = r.length,
                        Z = u == null;
                    if (se(u) === "object") {
                        b = !0;
                        for (F in u) g(r, s, F, u[F], !0, x, A)
                    } else if (p !== void 0 && (b = !0, re(p) || (A = !0), Z && (A ? (s.call(r, p), s = null) : (Z = s, s = function(le, Ce, ne) {
                            return Z.call(f(le), ne)
                        })), s))
                        for (; F < U; F++) s(r[F], u, A ? p : p.call(r[F], F, s(r[F], u)));
                    return b ? r : Z ? s.call(r) : U ? s(r[0], u) : x
                },
                k = /^-ms-/,
                R = /-([a-z])/g;

            function L(r, s) {
                return s.toUpperCase()
            }

            function N(r) {
                return r.replace(k, "ms-").replace(R, L)
            }
            var te = function(r) {
                return r.nodeType === 1 || r.nodeType === 9 || !+r.nodeType
            };

            function ke() {
                this.expando = f.expando + ke.uid++
            }
            ke.uid = 1, ke.prototype = {
                cache: function(r) {
                    var s = r[this.expando];
                    return s || (s = {}, te(r) && (r.nodeType ? r[this.expando] = s : Object.defineProperty(r, this.expando, {
                        value: s,
                        configurable: !0
                    }))), s
                },
                set: function(r, s, u) {
                    var p, b = this.cache(r);
                    if (typeof s == "string") b[N(s)] = u;
                    else
                        for (p in s) b[N(p)] = s[p];
                    return b
                },
                get: function(r, s) {
                    return s === void 0 ? this.cache(r) : r[this.expando] && r[this.expando][N(s)]
                },
                access: function(r, s, u) {
                    return s === void 0 || s && typeof s == "string" && u === void 0 ? this.get(r, s) : (this.set(r, s, u), u !== void 0 ? u : s)
                },
                remove: function(r, s) {
                    var u, p = r[this.expando];
                    if (p !== void 0) {
                        if (s !== void 0)
                            for (Array.isArray(s) ? s = s.map(N) : (s = N(s), s = s in p ? [s] : s.match(Te) || []), u = s.length; u--;) delete p[s[u]];
                        (s === void 0 || f.isEmptyObject(p)) && (r.nodeType ? r[this.expando] = void 0 : delete r[this.expando])
                    }
                },
                hasData: function(r) {
                    var s = r[this.expando];
                    return s !== void 0 && !f.isEmptyObject(s)
                }
            };
            var he = new ke,
                De = new ke,
                Me = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                rt = /[A-Z]/g;

            function Ct(r) {
                return r === "true" ? !0 : r === "false" ? !1 : r === "null" ? null : r === +r + "" ? +r : Me.test(r) ? JSON.parse(r) : r
            }

            function rn(r, s, u) {
                var p;
                if (u === void 0 && r.nodeType === 1)
                    if (p = "data-" + s.replace(rt, "-$&").toLowerCase(), u = r.getAttribute(p), typeof u == "string") {
                        try {
                            u = Ct(u)
                        } catch {}
                        De.set(r, s, u)
                    } else u = void 0;
                return u
            }
            f.extend({
                hasData: function(r) {
                    return De.hasData(r) || he.hasData(r)
                },
                data: function(r, s, u) {
                    return De.access(r, s, u)
                },
                removeData: function(r, s) {
                    De.remove(r, s)
                },
                _data: function(r, s, u) {
                    return he.access(r, s, u)
                },
                _removeData: function(r, s) {
                    he.remove(r, s)
                }
            }), f.fn.extend({
                data: function(r, s) {
                    var u, p, b, x = this[0],
                        A = x && x.attributes;
                    if (r === void 0) {
                        if (this.length && (b = De.get(x), x.nodeType === 1 && !he.get(x, "hasDataAttrs"))) {
                            for (u = A.length; u--;) A[u] && (p = A[u].name, p.indexOf("data-") === 0 && (p = N(p.slice(5)), rn(x, p, b[p])));
                            he.set(x, "hasDataAttrs", !0)
                        }
                        return b
                    }
                    return typeof r == "object" ? this.each(function() {
                        De.set(this, r)
                    }) : g(this, function(F) {
                        var U;
                        if (x && F === void 0) return U = De.get(x, r), U !== void 0 || (U = rn(x, r), U !== void 0) ? U : void 0;
                        this.each(function() {
                            De.set(this, r, F)
                        })
                    }, null, s, arguments.length > 1, null, !0)
                },
                removeData: function(r) {
                    return this.each(function() {
                        De.remove(this, r)
                    })
                }
            }), f.extend({
                queue: function(r, s, u) {
                    var p;
                    if (r) return s = (s || "fx") + "queue", p = he.get(r, s), u && (!p || Array.isArray(u) ? p = he.access(r, s, f.makeArray(u)) : p.push(u)), p || []
                },
                dequeue: function(r, s) {
                    s = s || "fx";
                    var u = f.queue(r, s),
                        p = u.length,
                        b = u.shift(),
                        x = f._queueHooks(r, s),
                        A = function() {
                            f.dequeue(r, s)
                        };
                    b === "inprogress" && (b = u.shift(), p--), b && (s === "fx" && u.unshift("inprogress"), delete x.stop, b.call(r, A, x)), !p && x && x.empty.fire()
                },
                _queueHooks: function(r, s) {
                    var u = s + "queueHooks";
                    return he.get(r, u) || he.access(r, u, {
                        empty: f.Callbacks("once memory").add(function() {
                            he.remove(r, [s + "queue", u])
                        })
                    })
                }
            }), f.fn.extend({
                queue: function(r, s) {
                    var u = 2;
                    return typeof r != "string" && (s = r, r = "fx", u--), arguments.length < u ? f.queue(this[0], r) : s === void 0 ? this : this.each(function() {
                        var p = f.queue(this, r, s);
                        f._queueHooks(this, r), r === "fx" && p[0] !== "inprogress" && f.dequeue(this, r)
                    })
                },
                dequeue: function(r) {
                    return this.each(function() {
                        f.dequeue(this, r)
                    })
                },
                clearQueue: function(r) {
                    return this.queue(r || "fx", [])
                },
                promise: function(r, s) {
                    var u, p = 1,
                        b = f.Deferred(),
                        x = this,
                        A = this.length,
                        F = function() {
                            --p || b.resolveWith(x, [x])
                        };
                    for (typeof r != "string" && (s = r, r = void 0), r = r || "fx"; A--;) u = he.get(x[A], r + "queueHooks"), u && u.empty && (p++, u.empty.add(F));
                    return F(), b.promise(s)
                }
            });
            var ct = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                yt = new RegExp("^(?:([+-])=|)(" + ct + ")([a-z%]*)$", "i"),
                wt = ["Top", "Right", "Bottom", "Left"],
                Jt = P.documentElement,
                Je = function(r) {
                    return f.contains(r.ownerDocument, r)
                },
                Pt = {
                    composed: !0
                };
            Jt.getRootNode && (Je = function(r) {
                return f.contains(r.ownerDocument, r) || r.getRootNode(Pt) === r.ownerDocument
            });
            var q = function(r, s) {
                return r = s || r, r.style.display === "none" || r.style.display === "" && Je(r) && f.css(r, "display") === "none"
            };

            function $(r, s, u, p) {
                var b, x, A = 20,
                    F = p ? function() {
                        return p.cur()
                    } : function() {
                        return f.css(r, s, "")
                    },
                    U = F(),
                    Z = u && u[3] || (f.cssNumber[s] ? "" : "px"),
                    le = r.nodeType && (f.cssNumber[s] || Z !== "px" && +U) && yt.exec(f.css(r, s));
                if (le && le[3] !== Z) {
                    for (U = U / 2, Z = Z || le[3], le = +U || 1; A--;) f.style(r, s, le + Z), (1 - x) * (1 - (x = F() / U || .5)) <= 0 && (A = 0), le = le / x;
                    le = le * 2, f.style(r, s, le + Z), u = u || []
                }
                return u && (le = +le || +U || 0, b = u[1] ? le + (u[1] + 1) * u[2] : +u[2], p && (p.unit = Z, p.start = le, p.end = b)), b
            }
            var W = {};

            function M(r) {
                var s, u = r.ownerDocument,
                    p = r.nodeName,
                    b = W[p];
                return b || (s = u.body.appendChild(u.createElement(p)), b = f.css(s, "display"), s.parentNode.removeChild(s), b === "none" && (b = "block"), W[p] = b, b)
            }

            function G(r, s) {
                for (var u, p, b = [], x = 0, A = r.length; x < A; x++) p = r[x], p.style && (u = p.style.display, s ? (u === "none" && (b[x] = he.get(p, "display") || null, b[x] || (p.style.display = "")), p.style.display === "" && q(p) && (b[x] = M(p))) : u !== "none" && (b[x] = "none", he.set(p, "display", u)));
                for (x = 0; x < A; x++) b[x] != null && (r[x].style.display = b[x]);
                return r
            }
            f.fn.extend({
                show: function() {
                    return G(this, !0)
                },
                hide: function() {
                    return G(this)
                },
                toggle: function(r) {
                    return typeof r == "boolean" ? r ? this.show() : this.hide() : this.each(function() {
                        q(this) ? f(this).show() : f(this).hide()
                    })
                }
            });
            var fe = /^(?:checkbox|radio)$/i,
                pe = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                $e = /^$|^module$|\/(?:java|ecma)script/i;
            (function() {
                var r = P.createDocumentFragment(),
                    s = r.appendChild(P.createElement("div")),
                    u = P.createElement("input");
                u.setAttribute("type", "radio"), u.setAttribute("checked", "checked"), u.setAttribute("name", "t"), s.appendChild(u), K.checkClone = s.cloneNode(!0).cloneNode(!0).lastChild.checked, s.innerHTML = "<textarea>x</textarea>", K.noCloneChecked = !!s.cloneNode(!0).lastChild.defaultValue, s.innerHTML = "<option></option>", K.option = !!s.lastChild
            })();
            var Ne = {
                thead: [1, "<table>", "</table>"],
                col: [2, "<table><colgroup>", "</colgroup></table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: [0, "", ""]
            };
            Ne.tbody = Ne.tfoot = Ne.colgroup = Ne.caption = Ne.thead, Ne.th = Ne.td, K.option || (Ne.optgroup = Ne.option = [1, "<select multiple='multiple'>", "</select>"]);

            function pt(r, s) {
                var u;
                return typeof r.getElementsByTagName < "u" ? u = r.getElementsByTagName(s || "*") : typeof r.querySelectorAll < "u" ? u = r.querySelectorAll(s || "*") : u = [], s === void 0 || s && J(r, s) ? f.merge([r], u) : u
            }

            function jt(r, s) {
                for (var u = 0, p = r.length; u < p; u++) he.set(r[u], "globalEval", !s || he.get(s[u], "globalEval"))
            }
            var Ye = /<|&#?\w+;/;

            function In(r, s, u, p, b) {
                for (var x, A, F, U, Z, le, Ce = s.createDocumentFragment(), ne = [], ce = 0, Ge = r.length; ce < Ge; ce++)
                    if (x = r[ce], x || x === 0)
                        if (se(x) === "object") f.merge(ne, x.nodeType ? [x] : x);
                        else if (!Ye.test(x)) ne.push(s.createTextNode(x));
                else {
                    for (A = A || Ce.appendChild(s.createElement("div")), F = (pe.exec(x) || ["", ""])[1].toLowerCase(), U = Ne[F] || Ne._default, A.innerHTML = U[1] + f.htmlPrefilter(x) + U[2], le = U[0]; le--;) A = A.lastChild;
                    f.merge(ne, A.childNodes), A = Ce.firstChild, A.textContent = ""
                }
                for (Ce.textContent = "", ce = 0; x = ne[ce++];) {
                    if (p && f.inArray(x, p) > -1) {
                        b && b.push(x);
                        continue
                    }
                    if (Z = Je(x), A = pt(Ce.appendChild(x), "script"), Z && jt(A), u)
                        for (le = 0; x = A[le++];) $e.test(x.type || "") && u.push(x)
                }
                return Ce
            }
            var Pn = /^([^.]*)(?:\.(.+)|)/;

            function st() {
                return !0
            }

            function Dn() {
                return !1
            }

            function wi(r, s) {
                return r === Rr() == (s === "focus")
            }

            function Rr() {
                try {
                    return P.activeElement
                } catch {}
            }

            function kn(r, s, u, p, b, x) {
                var A, F;
                if (typeof s == "object") {
                    typeof u != "string" && (p = p || u, u = void 0);
                    for (F in s) kn(r, F, u, p, s[F], x);
                    return r
                }
                if (p == null && b == null ? (b = u, p = u = void 0) : b == null && (typeof u == "string" ? (b = p, p = void 0) : (b = p, p = u, u = void 0)), b === !1) b = Dn;
                else if (!b) return r;
                return x === 1 && (A = b, b = function(U) {
                    return f().off(U), A.apply(this, arguments)
                }, b.guid = A.guid || (A.guid = f.guid++)), r.each(function() {
                    f.event.add(this, s, b, p, u)
                })
            }
            f.event = {
                global: {},
                add: function(r, s, u, p, b) {
                    var x, A, F, U, Z, le, Ce, ne, ce, Ge, ot, qe = he.get(r);
                    if (!!te(r))
                        for (u.handler && (x = u, u = x.handler, b = x.selector), b && f.find.matchesSelector(Jt, b), u.guid || (u.guid = f.guid++), (U = qe.events) || (U = qe.events = Object.create(null)), (A = qe.handle) || (A = qe.handle = function(Ut) {
                                return typeof f < "u" && f.event.triggered !== Ut.type ? f.event.dispatch.apply(r, arguments) : void 0
                            }), s = (s || "").match(Te) || [""], Z = s.length; Z--;) F = Pn.exec(s[Z]) || [], ce = ot = F[1], Ge = (F[2] || "").split(".").sort(), ce && (Ce = f.event.special[ce] || {}, ce = (b ? Ce.delegateType : Ce.bindType) || ce, Ce = f.event.special[ce] || {}, le = f.extend({
                            type: ce,
                            origType: ot,
                            data: p,
                            handler: u,
                            guid: u.guid,
                            selector: b,
                            needsContext: b && f.expr.match.needsContext.test(b),
                            namespace: Ge.join(".")
                        }, x), (ne = U[ce]) || (ne = U[ce] = [], ne.delegateCount = 0, (!Ce.setup || Ce.setup.call(r, p, Ge, A) === !1) && r.addEventListener && r.addEventListener(ce, A)), Ce.add && (Ce.add.call(r, le), le.handler.guid || (le.handler.guid = u.guid)), b ? ne.splice(ne.delegateCount++, 0, le) : ne.push(le), f.event.global[ce] = !0)
                },
                remove: function(r, s, u, p, b) {
                    var x, A, F, U, Z, le, Ce, ne, ce, Ge, ot, qe = he.hasData(r) && he.get(r);
                    if (!(!qe || !(U = qe.events))) {
                        for (s = (s || "").match(Te) || [""], Z = s.length; Z--;) {
                            if (F = Pn.exec(s[Z]) || [], ce = ot = F[1], Ge = (F[2] || "").split(".").sort(), !ce) {
                                for (ce in U) f.event.remove(r, ce + s[Z], u, p, !0);
                                continue
                            }
                            for (Ce = f.event.special[ce] || {}, ce = (p ? Ce.delegateType : Ce.bindType) || ce, ne = U[ce] || [], F = F[2] && new RegExp("(^|\\.)" + Ge.join("\\.(?:.*\\.|)") + "(\\.|$)"), A = x = ne.length; x--;) le = ne[x], (b || ot === le.origType) && (!u || u.guid === le.guid) && (!F || F.test(le.namespace)) && (!p || p === le.selector || p === "**" && le.selector) && (ne.splice(x, 1), le.selector && ne.delegateCount--, Ce.remove && Ce.remove.call(r, le));
                            A && !ne.length && ((!Ce.teardown || Ce.teardown.call(r, Ge, qe.handle) === !1) && f.removeEvent(r, ce, qe.handle), delete U[ce])
                        }
                        f.isEmptyObject(U) && he.remove(r, "handle events")
                    }
                },
                dispatch: function(r) {
                    var s, u, p, b, x, A, F = new Array(arguments.length),
                        U = f.event.fix(r),
                        Z = (he.get(this, "events") || Object.create(null))[U.type] || [],
                        le = f.event.special[U.type] || {};
                    for (F[0] = U, s = 1; s < arguments.length; s++) F[s] = arguments[s];
                    if (U.delegateTarget = this, !(le.preDispatch && le.preDispatch.call(this, U) === !1)) {
                        for (A = f.event.handlers.call(this, U, Z), s = 0;
                            (b = A[s++]) && !U.isPropagationStopped();)
                            for (U.currentTarget = b.elem, u = 0;
                                (x = b.handlers[u++]) && !U.isImmediatePropagationStopped();)(!U.rnamespace || x.namespace === !1 || U.rnamespace.test(x.namespace)) && (U.handleObj = x, U.data = x.data, p = ((f.event.special[x.origType] || {}).handle || x.handler).apply(b.elem, F), p !== void 0 && (U.result = p) === !1 && (U.preventDefault(), U.stopPropagation()));
                        return le.postDispatch && le.postDispatch.call(this, U), U.result
                    }
                },
                handlers: function(r, s) {
                    var u, p, b, x, A, F = [],
                        U = s.delegateCount,
                        Z = r.target;
                    if (U && Z.nodeType && !(r.type === "click" && r.button >= 1)) {
                        for (; Z !== this; Z = Z.parentNode || this)
                            if (Z.nodeType === 1 && !(r.type === "click" && Z.disabled === !0)) {
                                for (x = [], A = {}, u = 0; u < U; u++) p = s[u], b = p.selector + " ", A[b] === void 0 && (A[b] = p.needsContext ? f(b, this).index(Z) > -1 : f.find(b, this, null, [Z]).length), A[b] && x.push(p);
                                x.length && F.push({
                                    elem: Z,
                                    handlers: x
                                })
                            }
                    }
                    return Z = this, U < s.length && F.push({
                        elem: Z,
                        handlers: s.slice(U)
                    }), F
                },
                addProp: function(r, s) {
                    Object.defineProperty(f.Event.prototype, r, {
                        enumerable: !0,
                        configurable: !0,
                        get: re(s) ? function() {
                            if (this.originalEvent) return s(this.originalEvent)
                        } : function() {
                            if (this.originalEvent) return this.originalEvent[r]
                        },
                        set: function(u) {
                            Object.defineProperty(this, r, {
                                enumerable: !0,
                                configurable: !0,
                                writable: !0,
                                value: u
                            })
                        }
                    })
                },
                fix: function(r) {
                    return r[f.expando] ? r : new f.Event(r)
                },
                special: {
                    load: {
                        noBubble: !0
                    },
                    click: {
                        setup: function(r) {
                            var s = this || r;
                            return fe.test(s.type) && s.click && J(s, "input") && sn(s, "click", st), !1
                        },
                        trigger: function(r) {
                            var s = this || r;
                            return fe.test(s.type) && s.click && J(s, "input") && sn(s, "click"), !0
                        },
                        _default: function(r) {
                            var s = r.target;
                            return fe.test(s.type) && s.click && J(s, "input") && he.get(s, "click") || J(s, "a")
                        }
                    },
                    beforeunload: {
                        postDispatch: function(r) {
                            r.result !== void 0 && r.originalEvent && (r.originalEvent.returnValue = r.result)
                        }
                    }
                }
            };

            function sn(r, s, u) {
                if (!u) {
                    he.get(r, s) === void 0 && f.event.add(r, s, st);
                    return
                }
                he.set(r, s, !1), f.event.add(r, s, {
                    namespace: !1,
                    handler: function(p) {
                        var b, x, A = he.get(this, s);
                        if (p.isTrigger & 1 && this[s]) {
                            if (A.length)(f.event.special[s] || {}).delegateType && p.stopPropagation();
                            else if (A = d.call(arguments), he.set(this, s, A), b = u(this, s), this[s](), x = he.get(this, s), A !== x || b ? he.set(this, s, !1) : x = {}, A !== x) return p.stopImmediatePropagation(), p.preventDefault(), x && x.value
                        } else A.length && (he.set(this, s, {
                            value: f.event.trigger(f.extend(A[0], f.Event.prototype), A.slice(1), this)
                        }), p.stopImmediatePropagation())
                    }
                })
            }
            f.removeEvent = function(r, s, u) {
                r.removeEventListener && r.removeEventListener(s, u)
            }, f.Event = function(r, s) {
                if (!(this instanceof f.Event)) return new f.Event(r, s);
                r && r.type ? (this.originalEvent = r, this.type = r.type, this.isDefaultPrevented = r.defaultPrevented || r.defaultPrevented === void 0 && r.returnValue === !1 ? st : Dn, this.target = r.target && r.target.nodeType === 3 ? r.target.parentNode : r.target, this.currentTarget = r.currentTarget, this.relatedTarget = r.relatedTarget) : this.type = r, s && f.extend(this, s), this.timeStamp = r && r.timeStamp || Date.now(), this[f.expando] = !0
            }, f.Event.prototype = {
                constructor: f.Event,
                isDefaultPrevented: Dn,
                isPropagationStopped: Dn,
                isImmediatePropagationStopped: Dn,
                isSimulated: !1,
                preventDefault: function() {
                    var r = this.originalEvent;
                    this.isDefaultPrevented = st, r && !this.isSimulated && r.preventDefault()
                },
                stopPropagation: function() {
                    var r = this.originalEvent;
                    this.isPropagationStopped = st, r && !this.isSimulated && r.stopPropagation()
                },
                stopImmediatePropagation: function() {
                    var r = this.originalEvent;
                    this.isImmediatePropagationStopped = st, r && !this.isSimulated && r.stopImmediatePropagation(), this.stopPropagation()
                }
            }, f.each({
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                char: !0,
                code: !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: !0
            }, f.event.addProp), f.each({
                focus: "focusin",
                blur: "focusout"
            }, function(r, s) {
                f.event.special[r] = {
                    setup: function() {
                        return sn(this, r, wi), !1
                    },
                    trigger: function() {
                        return sn(this, r), !0
                    },
                    _default: function() {
                        return !0
                    },
                    delegateType: s
                }
            }), f.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function(r, s) {
                f.event.special[r] = {
                    delegateType: s,
                    bindType: s,
                    handle: function(u) {
                        var p, b = this,
                            x = u.relatedTarget,
                            A = u.handleObj;
                        return (!x || x !== b && !f.contains(b, x)) && (u.type = A.origType, p = A.handler.apply(this, arguments), u.type = s), p
                    }
                }
            }), f.fn.extend({
                on: function(r, s, u, p) {
                    return kn(this, r, s, u, p)
                },
                one: function(r, s, u, p) {
                    return kn(this, r, s, u, p, 1)
                },
                off: function(r, s, u) {
                    var p, b;
                    if (r && r.preventDefault && r.handleObj) return p = r.handleObj, f(r.delegateTarget).off(p.namespace ? p.origType + "." + p.namespace : p.origType, p.selector, p.handler), this;
                    if (typeof r == "object") {
                        for (b in r) this.off(b, s, r[b]);
                        return this
                    }
                    return (s === !1 || typeof s == "function") && (u = s, s = void 0), u === !1 && (u = Dn), this.each(function() {
                        f.event.remove(this, r, u, s)
                    })
                }
            });
            var Ir = /<script|<style|<link/i,
                Dr = /checked\s*(?:[^=]|=\s*.checked.)/i,
                Ci = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

            function zi(r, s) {
                return J(r, "table") && J(s.nodeType !== 11 ? s : s.firstChild, "tr") && f(r).children("tbody")[0] || r
            }

            function _i(r) {
                return r.type = (r.getAttribute("type") !== null) + "/" + r.type, r
            }

            function xi(r) {
                return (r.type || "").slice(0, 5) === "true/" ? r.type = r.type.slice(5) : r.removeAttribute("type"), r
            }

            function Gi(r, s) {
                var u, p, b, x, A, F, U;
                if (s.nodeType === 1) {
                    if (he.hasData(r) && (x = he.get(r), U = x.events, U)) {
                        he.remove(s, "handle events");
                        for (b in U)
                            for (u = 0, p = U[b].length; u < p; u++) f.event.add(s, b, U[b][u])
                    }
                    De.hasData(r) && (A = De.access(r), F = f.extend({}, A), De.set(s, F))
                }
            }

            function Hi(r, s) {
                var u = s.nodeName.toLowerCase();
                u === "input" && fe.test(r.type) ? s.checked = r.checked : (u === "input" || u === "textarea") && (s.defaultValue = r.defaultValue)
            }

            function mn(r, s, u, p) {
                s = m(s);
                var b, x, A, F, U, Z, le = 0,
                    Ce = r.length,
                    ne = Ce - 1,
                    ce = s[0],
                    Ge = re(ce);
                if (Ge || Ce > 1 && typeof ce == "string" && !K.checkClone && Dr.test(ce)) return r.each(function(ot) {
                    var qe = r.eq(ot);
                    Ge && (s[0] = ce.call(this, ot, qe.html())), mn(qe, s, u, p)
                });
                if (Ce && (b = In(s, r[0].ownerDocument, !1, r, p), x = b.firstChild, b.childNodes.length === 1 && (b = x), x || p)) {
                    for (A = f.map(pt(b, "script"), _i), F = A.length; le < Ce; le++) U = b, le !== ne && (U = f.clone(U, !0, !0), F && f.merge(A, pt(U, "script"))), u.call(r[le], U, le);
                    if (F)
                        for (Z = A[A.length - 1].ownerDocument, f.map(A, xi), le = 0; le < F; le++) U = A[le], $e.test(U.type || "") && !he.access(U, "globalEval") && f.contains(Z, U) && (U.src && (U.type || "").toLowerCase() !== "module" ? f._evalUrl && !U.noModule && f._evalUrl(U.src, {
                            nonce: U.nonce || U.getAttribute("nonce")
                        }, Z) : ae(U.textContent.replace(Ci, ""), U, Z))
                }
                return r
            }

            function Wi(r, s, u) {
                for (var p, b = s ? f.filter(s, r) : r, x = 0;
                    (p = b[x]) != null; x++) !u && p.nodeType === 1 && f.cleanData(pt(p)), p.parentNode && (u && Je(p) && jt(pt(p, "script")), p.parentNode.removeChild(p));
                return r
            }
            f.extend({
                htmlPrefilter: function(r) {
                    return r
                },
                clone: function(r, s, u) {
                    var p, b, x, A, F = r.cloneNode(!0),
                        U = Je(r);
                    if (!K.noCloneChecked && (r.nodeType === 1 || r.nodeType === 11) && !f.isXMLDoc(r))
                        for (A = pt(F), x = pt(r), p = 0, b = x.length; p < b; p++) Hi(x[p], A[p]);
                    if (s)
                        if (u)
                            for (x = x || pt(r), A = A || pt(F), p = 0, b = x.length; p < b; p++) Gi(x[p], A[p]);
                        else Gi(r, F);
                    return A = pt(F, "script"), A.length > 0 && jt(A, !U && pt(r, "script")), F
                },
                cleanData: function(r) {
                    for (var s, u, p, b = f.event.special, x = 0;
                        (u = r[x]) !== void 0; x++)
                        if (te(u)) {
                            if (s = u[he.expando]) {
                                if (s.events)
                                    for (p in s.events) b[p] ? f.event.remove(u, p) : f.removeEvent(u, p, s.handle);
                                u[he.expando] = void 0
                            }
                            u[De.expando] && (u[De.expando] = void 0)
                        }
                }
            }), f.fn.extend({
                detach: function(r) {
                    return Wi(this, r, !0)
                },
                remove: function(r) {
                    return Wi(this, r)
                },
                text: function(r) {
                    return g(this, function(s) {
                        return s === void 0 ? f.text(this) : this.empty().each(function() {
                            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = s)
                        })
                    }, null, r, arguments.length)
                },
                append: function() {
                    return mn(this, arguments, function(r) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var s = zi(this, r);
                            s.appendChild(r)
                        }
                    })
                },
                prepend: function() {
                    return mn(this, arguments, function(r) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var s = zi(this, r);
                            s.insertBefore(r, s.firstChild)
                        }
                    })
                },
                before: function() {
                    return mn(this, arguments, function(r) {
                        this.parentNode && this.parentNode.insertBefore(r, this)
                    })
                },
                after: function() {
                    return mn(this, arguments, function(r) {
                        this.parentNode && this.parentNode.insertBefore(r, this.nextSibling)
                    })
                },
                empty: function() {
                    for (var r, s = 0;
                        (r = this[s]) != null; s++) r.nodeType === 1 && (f.cleanData(pt(r, !1)), r.textContent = "");
                    return this
                },
                clone: function(r, s) {
                    return r = r == null ? !1 : r, s = s == null ? r : s, this.map(function() {
                        return f.clone(this, r, s)
                    })
                },
                html: function(r) {
                    return g(this, function(s) {
                        var u = this[0] || {},
                            p = 0,
                            b = this.length;
                        if (s === void 0 && u.nodeType === 1) return u.innerHTML;
                        if (typeof s == "string" && !Ir.test(s) && !Ne[(pe.exec(s) || ["", ""])[1].toLowerCase()]) {
                            s = f.htmlPrefilter(s);
                            try {
                                for (; p < b; p++) u = this[p] || {}, u.nodeType === 1 && (f.cleanData(pt(u, !1)), u.innerHTML = s);
                                u = 0
                            } catch {}
                        }
                        u && this.empty().append(s)
                    }, null, r, arguments.length)
                },
                replaceWith: function() {
                    var r = [];
                    return mn(this, arguments, function(s) {
                        var u = this.parentNode;
                        f.inArray(this, r) < 0 && (f.cleanData(pt(this)), u && u.replaceChild(s, this))
                    }, r)
                }
            }), f.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function(r, s) {
                f.fn[r] = function(u) {
                    for (var p, b = [], x = f(u), A = x.length - 1, F = 0; F <= A; F++) p = F === A ? this : this.clone(!0), f(x[F])[s](p), C.apply(b, p.get());
                    return this.pushStack(b)
                }
            });
            var Ei = new RegExp("^(" + ct + ")(?!px)[a-z%]+$", "i"),
                zn = function(r) {
                    var s = r.ownerDocument.defaultView;
                    return (!s || !s.opener) && (s = e), s.getComputedStyle(r)
                },
                Xi = function(r, s, u) {
                    var p, b, x = {};
                    for (b in s) x[b] = r.style[b], r.style[b] = s[b];
                    p = u.call(r);
                    for (b in s) r.style[b] = x[b];
                    return p
                },
                Si = new RegExp(wt.join("|"), "i");
            (function() {
                function r() {
                    if (!!Z) {
                        U.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", Z.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", Jt.appendChild(U).appendChild(Z);
                        var le = e.getComputedStyle(Z);
                        u = le.top !== "1%", F = s(le.marginLeft) === 12, Z.style.right = "60%", x = s(le.right) === 36, p = s(le.width) === 36, Z.style.position = "absolute", b = s(Z.offsetWidth / 3) === 12, Jt.removeChild(U), Z = null
                    }
                }

                function s(le) {
                    return Math.round(parseFloat(le))
                }
                var u, p, b, x, A, F, U = P.createElement("div"),
                    Z = P.createElement("div");
                !Z.style || (Z.style.backgroundClip = "content-box", Z.cloneNode(!0).style.backgroundClip = "", K.clearCloneStyle = Z.style.backgroundClip === "content-box", f.extend(K, {
                    boxSizingReliable: function() {
                        return r(), p
                    },
                    pixelBoxStyles: function() {
                        return r(), x
                    },
                    pixelPosition: function() {
                        return r(), u
                    },
                    reliableMarginLeft: function() {
                        return r(), F
                    },
                    scrollboxSize: function() {
                        return r(), b
                    },
                    reliableTrDimensions: function() {
                        var le, Ce, ne, ce;
                        return A == null && (le = P.createElement("table"), Ce = P.createElement("tr"), ne = P.createElement("div"), le.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", Ce.style.cssText = "border:1px solid", Ce.style.height = "1px", ne.style.height = "9px", ne.style.display = "block", Jt.appendChild(le).appendChild(Ce).appendChild(ne), ce = e.getComputedStyle(Ce), A = parseInt(ce.height, 10) + parseInt(ce.borderTopWidth, 10) + parseInt(ce.borderBottomWidth, 10) === Ce.offsetHeight, Jt.removeChild(le)), A
                    }
                }))
            })();

            function et(r, s, u) {
                var p, b, x, A, F = r.style;
                return u = u || zn(r), u && (A = u.getPropertyValue(s) || u[s], A === "" && !Je(r) && (A = f.style(r, s)), !K.pixelBoxStyles() && Ei.test(A) && Si.test(s) && (p = F.width, b = F.minWidth, x = F.maxWidth, F.minWidth = F.maxWidth = F.width = A, A = u.width, F.width = p, F.minWidth = b, F.maxWidth = x)), A !== void 0 ? A + "" : A
            }

            function y(r, s) {
                return {
                    get: function() {
                        if (r()) {
                            delete this.get;
                            return
                        }
                        return (this.get = s).apply(this, arguments)
                    }
                }
            }
            var a = ["Webkit", "Moz", "ms"],
                _ = P.createElement("div").style,
                O = {};

            function Q(r) {
                for (var s = r[0].toUpperCase() + r.slice(1), u = a.length; u--;)
                    if (r = a[u] + s, r in _) return r
            }

            function _e(r) {
                var s = f.cssProps[r] || O[r];
                return s || (r in _ ? r : O[r] = Q(r) || r)
            }
            var He = /^(none|table(?!-c[ea]).+)/,
                It = /^--/,
                Xt = {
                    position: "absolute",
                    visibility: "hidden",
                    display: "block"
                },
                Gn = {
                    letterSpacing: "0",
                    fontWeight: "400"
                };

            function $n(r, s, u) {
                var p = yt.exec(s);
                return p ? Math.max(0, p[2] - (u || 0)) + (p[3] || "px") : s
            }

            function Hn(r, s, u, p, b, x) {
                var A = s === "width" ? 1 : 0,
                    F = 0,
                    U = 0;
                if (u === (p ? "border" : "content")) return 0;
                for (; A < 4; A += 2) u === "margin" && (U += f.css(r, u + wt[A], !0, b)), p ? (u === "content" && (U -= f.css(r, "padding" + wt[A], !0, b)), u !== "margin" && (U -= f.css(r, "border" + wt[A] + "Width", !0, b))) : (U += f.css(r, "padding" + wt[A], !0, b), u !== "padding" ? U += f.css(r, "border" + wt[A] + "Width", !0, b) : F += f.css(r, "border" + wt[A] + "Width", !0, b));
                return !p && x >= 0 && (U += Math.max(0, Math.ceil(r["offset" + s[0].toUpperCase() + s.slice(1)] - x - U - F - .5)) || 0), U
            }

            function Mr(r, s, u) {
                var p = zn(r),
                    b = !K.boxSizingReliable() || u,
                    x = b && f.css(r, "boxSizing", !1, p) === "border-box",
                    A = x,
                    F = et(r, s, p),
                    U = "offset" + s[0].toUpperCase() + s.slice(1);
                if (Ei.test(F)) {
                    if (!u) return F;
                    F = "auto"
                }
                return (!K.boxSizingReliable() && x || !K.reliableTrDimensions() && J(r, "tr") || F === "auto" || !parseFloat(F) && f.css(r, "display", !1, p) === "inline") && r.getClientRects().length && (x = f.css(r, "boxSizing", !1, p) === "border-box", A = U in r, A && (F = r[U])), F = parseFloat(F) || 0, F + Hn(r, s, u || (x ? "border" : "content"), A, p, F) + "px"
            }
            f.extend({
                cssHooks: {
                    opacity: {
                        get: function(r, s) {
                            if (s) {
                                var u = et(r, "opacity");
                                return u === "" ? "1" : u
                            }
                        }
                    }
                },
                cssNumber: {
                    animationIterationCount: !0,
                    columnCount: !0,
                    fillOpacity: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    fontWeight: !0,
                    gridArea: !0,
                    gridColumn: !0,
                    gridColumnEnd: !0,
                    gridColumnStart: !0,
                    gridRow: !0,
                    gridRowEnd: !0,
                    gridRowStart: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {},
                style: function(r, s, u, p) {
                    if (!(!r || r.nodeType === 3 || r.nodeType === 8 || !r.style)) {
                        var b, x, A, F = N(s),
                            U = It.test(s),
                            Z = r.style;
                        if (U || (s = _e(F)), A = f.cssHooks[s] || f.cssHooks[F], u !== void 0) {
                            if (x = typeof u, x === "string" && (b = yt.exec(u)) && b[1] && (u = $(r, s, b), x = "number"), u == null || u !== u) return;
                            x === "number" && !U && (u += b && b[3] || (f.cssNumber[F] ? "" : "px")), !K.clearCloneStyle && u === "" && s.indexOf("background") === 0 && (Z[s] = "inherit"), (!A || !("set" in A) || (u = A.set(r, u, p)) !== void 0) && (U ? Z.setProperty(s, u) : Z[s] = u)
                        } else return A && "get" in A && (b = A.get(r, !1, p)) !== void 0 ? b : Z[s]
                    }
                },
                css: function(r, s, u, p) {
                    var b, x, A, F = N(s),
                        U = It.test(s);
                    return U || (s = _e(F)), A = f.cssHooks[s] || f.cssHooks[F], A && "get" in A && (b = A.get(r, !0, u)), b === void 0 && (b = et(r, s, p)), b === "normal" && s in Gn && (b = Gn[s]), u === "" || u ? (x = parseFloat(b), u === !0 || isFinite(x) ? x || 0 : b) : b
                }
            }), f.each(["height", "width"], function(r, s) {
                f.cssHooks[s] = {
                    get: function(u, p, b) {
                        if (p) return He.test(f.css(u, "display")) && (!u.getClientRects().length || !u.getBoundingClientRect().width) ? Xi(u, Xt, function() {
                            return Mr(u, s, b)
                        }) : Mr(u, s, b)
                    },
                    set: function(u, p, b) {
                        var x, A = zn(u),
                            F = !K.scrollboxSize() && A.position === "absolute",
                            U = F || b,
                            Z = U && f.css(u, "boxSizing", !1, A) === "border-box",
                            le = b ? Hn(u, s, b, Z, A) : 0;
                        return Z && F && (le -= Math.ceil(u["offset" + s[0].toUpperCase() + s.slice(1)] - parseFloat(A[s]) - Hn(u, s, "border", !1, A) - .5)), le && (x = yt.exec(p)) && (x[3] || "px") !== "px" && (u.style[s] = p, p = f.css(u, s)), $n(u, p, le)
                    }
                }
            }), f.cssHooks.marginLeft = y(K.reliableMarginLeft, function(r, s) {
                if (s) return (parseFloat(et(r, "marginLeft")) || r.getBoundingClientRect().left - Xi(r, {
                    marginLeft: 0
                }, function() {
                    return r.getBoundingClientRect().left
                })) + "px"
            }), f.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function(r, s) {
                f.cssHooks[r + s] = {
                    expand: function(u) {
                        for (var p = 0, b = {}, x = typeof u == "string" ? u.split(" ") : [u]; p < 4; p++) b[r + wt[p] + s] = x[p] || x[p - 2] || x[0];
                        return b
                    }
                }, r !== "margin" && (f.cssHooks[r + s].set = $n)
            }), f.fn.extend({
                css: function(r, s) {
                    return g(this, function(u, p, b) {
                        var x, A, F = {},
                            U = 0;
                        if (Array.isArray(p)) {
                            for (x = zn(u), A = p.length; U < A; U++) F[p[U]] = f.css(u, p[U], !1, x);
                            return F
                        }
                        return b !== void 0 ? f.style(u, p, b) : f.css(u, p)
                    }, r, s, arguments.length > 1)
                }
            });

            function Yt(r, s, u, p, b) {
                return new Yt.prototype.init(r, s, u, p, b)
            }
            f.Tween = Yt, Yt.prototype = {
                constructor: Yt,
                init: function(r, s, u, p, b, x) {
                    this.elem = r, this.prop = u, this.easing = b || f.easing._default, this.options = s, this.start = this.now = this.cur(), this.end = p, this.unit = x || (f.cssNumber[u] ? "" : "px")
                },
                cur: function() {
                    var r = Yt.propHooks[this.prop];
                    return r && r.get ? r.get(this) : Yt.propHooks._default.get(this)
                },
                run: function(r) {
                    var s, u = Yt.propHooks[this.prop];
                    return this.options.duration ? this.pos = s = f.easing[this.easing](r, this.options.duration * r, 0, 1, this.options.duration) : this.pos = s = r, this.now = (this.end - this.start) * s + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), u && u.set ? u.set(this) : Yt.propHooks._default.set(this), this
                }
            }, Yt.prototype.init.prototype = Yt.prototype, Yt.propHooks = {
                _default: {
                    get: function(r) {
                        var s;
                        return r.elem.nodeType !== 1 || r.elem[r.prop] != null && r.elem.style[r.prop] == null ? r.elem[r.prop] : (s = f.css(r.elem, r.prop, ""), !s || s === "auto" ? 0 : s)
                    },
                    set: function(r) {
                        f.fx.step[r.prop] ? f.fx.step[r.prop](r) : r.elem.nodeType === 1 && (f.cssHooks[r.prop] || r.elem.style[_e(r.prop)] != null) ? f.style(r.elem, r.prop, r.now + r.unit) : r.elem[r.prop] = r.now
                    }
                }
            }, Yt.propHooks.scrollTop = Yt.propHooks.scrollLeft = {
                set: function(r) {
                    r.elem.nodeType && r.elem.parentNode && (r.elem[r.prop] = r.now)
                }
            }, f.easing = {
                linear: function(r) {
                    return r
                },
                swing: function(r) {
                    return .5 - Math.cos(r * Math.PI) / 2
                },
                _default: "swing"
            }, f.fx = Yt.prototype.init, f.fx.step = {};
            var Ft, Yi, Ro = /^(?:toggle|show|hide)$/,
                Io = /queueHooks$/;

            function Lr() {
                Yi && (P.hidden === !1 && e.requestAnimationFrame ? e.requestAnimationFrame(Lr) : e.setTimeout(Lr, f.fx.interval), f.fx.tick())
            }

            function Pr() {
                return e.setTimeout(function() {
                    Ft = void 0
                }), Ft = Date.now()
            }

            function Ki(r, s) {
                var u, p = 0,
                    b = {
                        height: r
                    };
                for (s = s ? 1 : 0; p < 4; p += 2 - s) u = wt[p], b["margin" + u] = b["padding" + u] = r;
                return s && (b.opacity = b.width = r), b
            }

            function xs(r, s, u) {
                for (var p, b = (wn.tweeners[s] || []).concat(wn.tweeners["*"]), x = 0, A = b.length; x < A; x++)
                    if (p = b[x].call(u, s, r)) return p
            }

            function Do(r, s, u) {
                var p, b, x, A, F, U, Z, le, Ce = "width" in s || "height" in s,
                    ne = this,
                    ce = {},
                    Ge = r.style,
                    ot = r.nodeType && q(r),
                    qe = he.get(r, "fxshow");
                u.queue || (A = f._queueHooks(r, "fx"), A.unqueued == null && (A.unqueued = 0, F = A.empty.fire, A.empty.fire = function() {
                    A.unqueued || F()
                }), A.unqueued++, ne.always(function() {
                    ne.always(function() {
                        A.unqueued--, f.queue(r, "fx").length || A.empty.fire()
                    })
                }));
                for (p in s)
                    if (b = s[p], Ro.test(b)) {
                        if (delete s[p], x = x || b === "toggle", b === (ot ? "hide" : "show"))
                            if (b === "show" && qe && qe[p] !== void 0) ot = !0;
                            else continue;
                        ce[p] = qe && qe[p] || f.style(r, p)
                    } if (U = !f.isEmptyObject(s), !(!U && f.isEmptyObject(ce))) {
                    Ce && r.nodeType === 1 && (u.overflow = [Ge.overflow, Ge.overflowX, Ge.overflowY], Z = qe && qe.display, Z == null && (Z = he.get(r, "display")), le = f.css(r, "display"), le === "none" && (Z ? le = Z : (G([r], !0), Z = r.style.display || Z, le = f.css(r, "display"), G([r]))), (le === "inline" || le === "inline-block" && Z != null) && f.css(r, "float") === "none" && (U || (ne.done(function() {
                        Ge.display = Z
                    }), Z == null && (le = Ge.display, Z = le === "none" ? "" : le)), Ge.display = "inline-block")), u.overflow && (Ge.overflow = "hidden", ne.always(function() {
                        Ge.overflow = u.overflow[0], Ge.overflowX = u.overflow[1], Ge.overflowY = u.overflow[2]
                    })), U = !1;
                    for (p in ce) U || (qe ? "hidden" in qe && (ot = qe.hidden) : qe = he.access(r, "fxshow", {
                        display: Z
                    }), x && (qe.hidden = !ot), ot && G([r], !0), ne.done(function() {
                        ot || G([r]), he.remove(r, "fxshow");
                        for (p in ce) f.style(r, p, ce[p])
                    })), U = xs(ot ? qe[p] : 0, p, ne), p in qe || (qe[p] = U.start, ot && (U.end = U.start, U.start = 0))
                }
            }

            function Es(r, s) {
                var u, p, b, x, A;
                for (u in r)
                    if (p = N(u), b = s[p], x = r[u], Array.isArray(x) && (b = x[1], x = r[u] = x[0]), u !== p && (r[p] = x, delete r[u]), A = f.cssHooks[p], A && "expand" in A) {
                        x = A.expand(x), delete r[p];
                        for (u in x) u in r || (r[u] = x[u], s[u] = b)
                    } else s[p] = b
            }

            function wn(r, s, u) {
                var p, b, x = 0,
                    A = wn.prefilters.length,
                    F = f.Deferred().always(function() {
                        delete U.elem
                    }),
                    U = function() {
                        if (b) return !1;
                        for (var Ce = Ft || Pr(), ne = Math.max(0, Z.startTime + Z.duration - Ce), ce = ne / Z.duration || 0, Ge = 1 - ce, ot = 0, qe = Z.tweens.length; ot < qe; ot++) Z.tweens[ot].run(Ge);
                        return F.notifyWith(r, [Z, Ge, ne]), Ge < 1 && qe ? ne : (qe || F.notifyWith(r, [Z, 1, 0]), F.resolveWith(r, [Z]), !1)
                    },
                    Z = F.promise({
                        elem: r,
                        props: f.extend({}, s),
                        opts: f.extend(!0, {
                            specialEasing: {},
                            easing: f.easing._default
                        }, u),
                        originalProperties: s,
                        originalOptions: u,
                        startTime: Ft || Pr(),
                        duration: u.duration,
                        tweens: [],
                        createTween: function(Ce, ne) {
                            var ce = f.Tween(r, Z.opts, Ce, ne, Z.opts.specialEasing[Ce] || Z.opts.easing);
                            return Z.tweens.push(ce), ce
                        },
                        stop: function(Ce) {
                            var ne = 0,
                                ce = Ce ? Z.tweens.length : 0;
                            if (b) return this;
                            for (b = !0; ne < ce; ne++) Z.tweens[ne].run(1);
                            return Ce ? (F.notifyWith(r, [Z, 1, 0]), F.resolveWith(r, [Z, Ce])) : F.rejectWith(r, [Z, Ce]), this
                        }
                    }),
                    le = Z.props;
                for (Es(le, Z.opts.specialEasing); x < A; x++)
                    if (p = wn.prefilters[x].call(Z, r, le, Z.opts), p) return re(p.stop) && (f._queueHooks(Z.elem, Z.opts.queue).stop = p.stop.bind(p)), p;
                return f.map(le, xs, Z), re(Z.opts.start) && Z.opts.start.call(r, Z), Z.progress(Z.opts.progress).done(Z.opts.done, Z.opts.complete).fail(Z.opts.fail).always(Z.opts.always), f.fx.timer(f.extend(U, {
                    elem: r,
                    anim: Z,
                    queue: Z.opts.queue
                })), Z
            }
            f.Animation = f.extend(wn, {
                    tweeners: {
                        "*": [function(r, s) {
                            var u = this.createTween(r, s);
                            return $(u.elem, r, yt.exec(s), u), u
                        }]
                    },
                    tweener: function(r, s) {
                        re(r) ? (s = r, r = ["*"]) : r = r.match(Te);
                        for (var u, p = 0, b = r.length; p < b; p++) u = r[p], wn.tweeners[u] = wn.tweeners[u] || [], wn.tweeners[u].unshift(s)
                    },
                    prefilters: [Do],
                    prefilter: function(r, s) {
                        s ? wn.prefilters.unshift(r) : wn.prefilters.push(r)
                    }
                }), f.speed = function(r, s, u) {
                    var p = r && typeof r == "object" ? f.extend({}, r) : {
                        complete: u || !u && s || re(r) && r,
                        duration: r,
                        easing: u && s || s && !re(s) && s
                    };
                    return f.fx.off ? p.duration = 0 : typeof p.duration != "number" && (p.duration in f.fx.speeds ? p.duration = f.fx.speeds[p.duration] : p.duration = f.fx.speeds._default), (p.queue == null || p.queue === !0) && (p.queue = "fx"), p.old = p.complete, p.complete = function() {
                        re(p.old) && p.old.call(this), p.queue && f.dequeue(this, p.queue)
                    }, p
                }, f.fn.extend({
                    fadeTo: function(r, s, u, p) {
                        return this.filter(q).css("opacity", 0).show().end().animate({
                            opacity: s
                        }, r, u, p)
                    },
                    animate: function(r, s, u, p) {
                        var b = f.isEmptyObject(r),
                            x = f.speed(s, u, p),
                            A = function() {
                                var F = wn(this, f.extend({}, r), x);
                                (b || he.get(this, "finish")) && F.stop(!0)
                            };
                        return A.finish = A, b || x.queue === !1 ? this.each(A) : this.queue(x.queue, A)
                    },
                    stop: function(r, s, u) {
                        var p = function(b) {
                            var x = b.stop;
                            delete b.stop, x(u)
                        };
                        return typeof r != "string" && (u = s, s = r, r = void 0), s && this.queue(r || "fx", []), this.each(function() {
                            var b = !0,
                                x = r != null && r + "queueHooks",
                                A = f.timers,
                                F = he.get(this);
                            if (x) F[x] && F[x].stop && p(F[x]);
                            else
                                for (x in F) F[x] && F[x].stop && Io.test(x) && p(F[x]);
                            for (x = A.length; x--;) A[x].elem === this && (r == null || A[x].queue === r) && (A[x].anim.stop(u), b = !1, A.splice(x, 1));
                            (b || !u) && f.dequeue(this, r)
                        })
                    },
                    finish: function(r) {
                        return r !== !1 && (r = r || "fx"), this.each(function() {
                            var s, u = he.get(this),
                                p = u[r + "queue"],
                                b = u[r + "queueHooks"],
                                x = f.timers,
                                A = p ? p.length : 0;
                            for (u.finish = !0, f.queue(this, r, []), b && b.stop && b.stop.call(this, !0), s = x.length; s--;) x[s].elem === this && x[s].queue === r && (x[s].anim.stop(!0), x.splice(s, 1));
                            for (s = 0; s < A; s++) p[s] && p[s].finish && p[s].finish.call(this);
                            delete u.finish
                        })
                    }
                }), f.each(["toggle", "show", "hide"], function(r, s) {
                    var u = f.fn[s];
                    f.fn[s] = function(p, b, x) {
                        return p == null || typeof p == "boolean" ? u.apply(this, arguments) : this.animate(Ki(s, !0), p, b, x)
                    }
                }), f.each({
                    slideDown: Ki("show"),
                    slideUp: Ki("hide"),
                    slideToggle: Ki("toggle"),
                    fadeIn: {
                        opacity: "show"
                    },
                    fadeOut: {
                        opacity: "hide"
                    },
                    fadeToggle: {
                        opacity: "toggle"
                    }
                }, function(r, s) {
                    f.fn[r] = function(u, p, b) {
                        return this.animate(s, u, p, b)
                    }
                }), f.timers = [], f.fx.tick = function() {
                    var r, s = 0,
                        u = f.timers;
                    for (Ft = Date.now(); s < u.length; s++) r = u[s], !r() && u[s] === r && u.splice(s--, 1);
                    u.length || f.fx.stop(), Ft = void 0
                }, f.fx.timer = function(r) {
                    f.timers.push(r), f.fx.start()
                }, f.fx.interval = 13, f.fx.start = function() {
                    Yi || (Yi = !0, Lr())
                }, f.fx.stop = function() {
                    Yi = null
                }, f.fx.speeds = {
                    slow: 600,
                    fast: 200,
                    _default: 400
                }, f.fn.delay = function(r, s) {
                    return r = f.fx && f.fx.speeds[r] || r, s = s || "fx", this.queue(s, function(u, p) {
                        var b = e.setTimeout(u, r);
                        p.stop = function() {
                            e.clearTimeout(b)
                        }
                    })
                },
                function() {
                    var r = P.createElement("input"),
                        s = P.createElement("select"),
                        u = s.appendChild(P.createElement("option"));
                    r.type = "checkbox", K.checkOn = r.value !== "", K.optSelected = u.selected, r = P.createElement("input"), r.value = "t", r.type = "radio", K.radioValue = r.value === "t"
                }();
            var $r, ki = f.expr.attrHandle;
            f.fn.extend({
                attr: function(r, s) {
                    return g(this, f.attr, r, s, arguments.length > 1)
                },
                removeAttr: function(r) {
                    return this.each(function() {
                        f.removeAttr(this, r)
                    })
                }
            }), f.extend({
                attr: function(r, s, u) {
                    var p, b, x = r.nodeType;
                    if (!(x === 3 || x === 8 || x === 2)) {
                        if (typeof r.getAttribute > "u") return f.prop(r, s, u);
                        if ((x !== 1 || !f.isXMLDoc(r)) && (b = f.attrHooks[s.toLowerCase()] || (f.expr.match.bool.test(s) ? $r : void 0)), u !== void 0) {
                            if (u === null) {
                                f.removeAttr(r, s);
                                return
                            }
                            return b && "set" in b && (p = b.set(r, u, s)) !== void 0 ? p : (r.setAttribute(s, u + ""), u)
                        }
                        return b && "get" in b && (p = b.get(r, s)) !== null ? p : (p = f.find.attr(r, s), p == null ? void 0 : p)
                    }
                },
                attrHooks: {
                    type: {
                        set: function(r, s) {
                            if (!K.radioValue && s === "radio" && J(r, "input")) {
                                var u = r.value;
                                return r.setAttribute("type", s), u && (r.value = u), s
                            }
                        }
                    }
                },
                removeAttr: function(r, s) {
                    var u, p = 0,
                        b = s && s.match(Te);
                    if (b && r.nodeType === 1)
                        for (; u = b[p++];) r.removeAttribute(u)
                }
            }), $r = {
                set: function(r, s, u) {
                    return s === !1 ? f.removeAttr(r, u) : r.setAttribute(u, u), u
                }
            }, f.each(f.expr.match.bool.source.match(/\w+/g), function(r, s) {
                var u = ki[s] || f.find.attr;
                ki[s] = function(p, b, x) {
                    var A, F, U = b.toLowerCase();
                    return x || (F = ki[U], ki[U] = A, A = u(p, b, x) != null ? U : null, ki[U] = F), A
                }
            });
            var Mo = /^(?:input|select|textarea|button)$/i,
                Lo = /^(?:a|area)$/i;
            f.fn.extend({
                prop: function(r, s) {
                    return g(this, f.prop, r, s, arguments.length > 1)
                },
                removeProp: function(r) {
                    return this.each(function() {
                        delete this[f.propFix[r] || r]
                    })
                }
            }), f.extend({
                prop: function(r, s, u) {
                    var p, b, x = r.nodeType;
                    if (!(x === 3 || x === 8 || x === 2)) return (x !== 1 || !f.isXMLDoc(r)) && (s = f.propFix[s] || s, b = f.propHooks[s]), u !== void 0 ? b && "set" in b && (p = b.set(r, u, s)) !== void 0 ? p : r[s] = u : b && "get" in b && (p = b.get(r, s)) !== null ? p : r[s]
                },
                propHooks: {
                    tabIndex: {
                        get: function(r) {
                            var s = f.find.attr(r, "tabindex");
                            return s ? parseInt(s, 10) : Mo.test(r.nodeName) || Lo.test(r.nodeName) && r.href ? 0 : -1
                        }
                    }
                },
                propFix: {
                    for: "htmlFor",
                    class: "className"
                }
            }), K.optSelected || (f.propHooks.selected = {
                get: function(r) {
                    var s = r.parentNode;
                    return s && s.parentNode && s.parentNode.selectedIndex, null
                },
                set: function(r) {
                    var s = r.parentNode;
                    s && (s.selectedIndex, s.parentNode && s.parentNode.selectedIndex)
                }
            }), f.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
                f.propFix[this.toLowerCase()] = this
            });

            function Wn(r) {
                var s = r.match(Te) || [];
                return s.join(" ")
            }

            function Xn(r) {
                return r.getAttribute && r.getAttribute("class") || ""
            }

            function Nr(r) {
                return Array.isArray(r) ? r : typeof r == "string" ? r.match(Te) || [] : []
            }
            f.fn.extend({
                addClass: function(r) {
                    var s, u, p, b, x, A, F, U = 0;
                    if (re(r)) return this.each(function(Z) {
                        f(this).addClass(r.call(this, Z, Xn(this)))
                    });
                    if (s = Nr(r), s.length) {
                        for (; u = this[U++];)
                            if (b = Xn(u), p = u.nodeType === 1 && " " + Wn(b) + " ", p) {
                                for (A = 0; x = s[A++];) p.indexOf(" " + x + " ") < 0 && (p += x + " ");
                                F = Wn(p), b !== F && u.setAttribute("class", F)
                            }
                    }
                    return this
                },
                removeClass: function(r) {
                    var s, u, p, b, x, A, F, U = 0;
                    if (re(r)) return this.each(function(Z) {
                        f(this).removeClass(r.call(this, Z, Xn(this)))
                    });
                    if (!arguments.length) return this.attr("class", "");
                    if (s = Nr(r), s.length) {
                        for (; u = this[U++];)
                            if (b = Xn(u), p = u.nodeType === 1 && " " + Wn(b) + " ", p) {
                                for (A = 0; x = s[A++];)
                                    for (; p.indexOf(" " + x + " ") > -1;) p = p.replace(" " + x + " ", " ");
                                F = Wn(p), b !== F && u.setAttribute("class", F)
                            }
                    }
                    return this
                },
                toggleClass: function(r, s) {
                    var u = typeof r,
                        p = u === "string" || Array.isArray(r);
                    return typeof s == "boolean" && p ? s ? this.addClass(r) : this.removeClass(r) : re(r) ? this.each(function(b) {
                        f(this).toggleClass(r.call(this, b, Xn(this), s), s)
                    }) : this.each(function() {
                        var b, x, A, F;
                        if (p)
                            for (x = 0, A = f(this), F = Nr(r); b = F[x++];) A.hasClass(b) ? A.removeClass(b) : A.addClass(b);
                        else(r === void 0 || u === "boolean") && (b = Xn(this), b && he.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || r === !1 ? "" : he.get(this, "__className__") || ""))
                    })
                },
                hasClass: function(r) {
                    var s, u, p = 0;
                    for (s = " " + r + " "; u = this[p++];)
                        if (u.nodeType === 1 && (" " + Wn(Xn(u)) + " ").indexOf(s) > -1) return !0;
                    return !1
                }
            });
            var Po = /\r/g;
            f.fn.extend({
                val: function(r) {
                    var s, u, p, b = this[0];
                    return arguments.length ? (p = re(r), this.each(function(x) {
                        var A;
                        this.nodeType === 1 && (p ? A = r.call(this, x, f(this).val()) : A = r, A == null ? A = "" : typeof A == "number" ? A += "" : Array.isArray(A) && (A = f.map(A, function(F) {
                            return F == null ? "" : F + ""
                        })), s = f.valHooks[this.type] || f.valHooks[this.nodeName.toLowerCase()], (!s || !("set" in s) || s.set(this, A, "value") === void 0) && (this.value = A))
                    })) : b ? (s = f.valHooks[b.type] || f.valHooks[b.nodeName.toLowerCase()], s && "get" in s && (u = s.get(b, "value")) !== void 0 ? u : (u = b.value, typeof u == "string" ? u.replace(Po, "") : u == null ? "" : u)) : void 0
                }
            }), f.extend({
                valHooks: {
                    option: {
                        get: function(r) {
                            var s = f.find.attr(r, "value");
                            return s != null ? s : Wn(f.text(r))
                        }
                    },
                    select: {
                        get: function(r) {
                            var s, u, p, b = r.options,
                                x = r.selectedIndex,
                                A = r.type === "select-one",
                                F = A ? null : [],
                                U = A ? x + 1 : b.length;
                            for (x < 0 ? p = U : p = A ? x : 0; p < U; p++)
                                if (u = b[p], (u.selected || p === x) && !u.disabled && (!u.parentNode.disabled || !J(u.parentNode, "optgroup"))) {
                                    if (s = f(u).val(), A) return s;
                                    F.push(s)
                                } return F
                        },
                        set: function(r, s) {
                            for (var u, p, b = r.options, x = f.makeArray(s), A = b.length; A--;) p = b[A], (p.selected = f.inArray(f.valHooks.option.get(p), x) > -1) && (u = !0);
                            return u || (r.selectedIndex = -1), x
                        }
                    }
                }
            }), f.each(["radio", "checkbox"], function() {
                f.valHooks[this] = {
                    set: function(r, s) {
                        if (Array.isArray(s)) return r.checked = f.inArray(f(r).val(), s) > -1
                    }
                }, K.checkOn || (f.valHooks[this].get = function(r) {
                    return r.getAttribute("value") === null ? "on" : r.value
                })
            }), K.focusin = "onfocusin" in e;
            var Vr = /^(?:focusinfocus|focusoutblur)$/,
                Yn = function(r) {
                    r.stopPropagation()
                };
            f.extend(f.event, {
                trigger: function(r, s, u, p) {
                    var b, x, A, F, U, Z, le, Ce, ne = [u || P],
                        ce = V.call(r, "type") ? r.type : r,
                        Ge = V.call(r, "namespace") ? r.namespace.split(".") : [];
                    if (x = Ce = A = u = u || P, !(u.nodeType === 3 || u.nodeType === 8) && !Vr.test(ce + f.event.triggered) && (ce.indexOf(".") > -1 && (Ge = ce.split("."), ce = Ge.shift(), Ge.sort()), U = ce.indexOf(":") < 0 && "on" + ce, r = r[f.expando] ? r : new f.Event(ce, typeof r == "object" && r), r.isTrigger = p ? 2 : 3, r.namespace = Ge.join("."), r.rnamespace = r.namespace ? new RegExp("(^|\\.)" + Ge.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, r.result = void 0, r.target || (r.target = u), s = s == null ? [r] : f.makeArray(s, [r]), le = f.event.special[ce] || {}, !(!p && le.trigger && le.trigger.apply(u, s) === !1))) {
                        if (!p && !le.noBubble && !v(u)) {
                            for (F = le.delegateType || ce, Vr.test(F + ce) || (x = x.parentNode); x; x = x.parentNode) ne.push(x), A = x;
                            A === (u.ownerDocument || P) && ne.push(A.defaultView || A.parentWindow || e)
                        }
                        for (b = 0;
                            (x = ne[b++]) && !r.isPropagationStopped();) Ce = x, r.type = b > 1 ? F : le.bindType || ce, Z = (he.get(x, "events") || Object.create(null))[r.type] && he.get(x, "handle"), Z && Z.apply(x, s), Z = U && x[U], Z && Z.apply && te(x) && (r.result = Z.apply(x, s), r.result === !1 && r.preventDefault());
                        return r.type = ce, !p && !r.isDefaultPrevented() && (!le._default || le._default.apply(ne.pop(), s) === !1) && te(u) && U && re(u[ce]) && !v(u) && (A = u[U], A && (u[U] = null), f.event.triggered = ce, r.isPropagationStopped() && Ce.addEventListener(ce, Yn), u[ce](), r.isPropagationStopped() && Ce.removeEventListener(ce, Yn), f.event.triggered = void 0, A && (u[U] = A)), r.result
                    }
                },
                simulate: function(r, s, u) {
                    var p = f.extend(new f.Event, u, {
                        type: r,
                        isSimulated: !0
                    });
                    f.event.trigger(p, null, s)
                }
            }), f.fn.extend({
                trigger: function(r, s) {
                    return this.each(function() {
                        f.event.trigger(r, s, this)
                    })
                },
                triggerHandler: function(r, s) {
                    var u = this[0];
                    if (u) return f.event.trigger(r, s, u, !0)
                }
            }), K.focusin || f.each({
                focus: "focusin",
                blur: "focusout"
            }, function(r, s) {
                var u = function(p) {
                    f.event.simulate(s, p.target, f.event.fix(p))
                };
                f.event.special[s] = {
                    setup: function() {
                        var p = this.ownerDocument || this.document || this,
                            b = he.access(p, s);
                        b || p.addEventListener(r, u, !0), he.access(p, s, (b || 0) + 1)
                    },
                    teardown: function() {
                        var p = this.ownerDocument || this.document || this,
                            b = he.access(p, s) - 1;
                        b ? he.access(p, s, b) : (p.removeEventListener(r, u, !0), he.remove(p, s))
                    }
                }
            });
            var Ti = e.location,
                Br = {
                    guid: Date.now()
                },
                Ji = /\?/;
            f.parseXML = function(r) {
                var s, u;
                if (!r || typeof r != "string") return null;
                try {
                    s = new e.DOMParser().parseFromString(r, "text/xml")
                } catch {}
                return u = s && s.getElementsByTagName("parsererror")[0], (!s || u) && f.error("Invalid XML: " + (u ? f.map(u.childNodes, function(p) {
                    return p.textContent
                }).join(`
`) : r)), s
            };
            var $o = /\[\]$/,
                Ss = /\r?\n/g,
                No = /^(?:submit|button|image|reset|file)$/i,
                Vo = /^(?:input|select|textarea|keygen)/i;

            function qr(r, s, u, p) {
                var b;
                if (Array.isArray(s)) f.each(s, function(x, A) {
                    u || $o.test(r) ? p(r, A) : qr(r + "[" + (typeof A == "object" && A != null ? x : "") + "]", A, u, p)
                });
                else if (!u && se(s) === "object")
                    for (b in s) qr(r + "[" + b + "]", s[b], u, p);
                else p(r, s)
            }
            f.param = function(r, s) {
                var u, p = [],
                    b = function(x, A) {
                        var F = re(A) ? A() : A;
                        p[p.length] = encodeURIComponent(x) + "=" + encodeURIComponent(F == null ? "" : F)
                    };
                if (r == null) return "";
                if (Array.isArray(r) || r.jquery && !f.isPlainObject(r)) f.each(r, function() {
                    b(this.name, this.value)
                });
                else
                    for (u in r) qr(u, r[u], s, b);
                return p.join("&")
            }, f.fn.extend({
                serialize: function() {
                    return f.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        var r = f.prop(this, "elements");
                        return r ? f.makeArray(r) : this
                    }).filter(function() {
                        var r = this.type;
                        return this.name && !f(this).is(":disabled") && Vo.test(this.nodeName) && !No.test(r) && (this.checked || !fe.test(r))
                    }).map(function(r, s) {
                        var u = f(this).val();
                        return u == null ? null : Array.isArray(u) ? f.map(u, function(p) {
                            return {
                                name: s.name,
                                value: p.replace(Ss, `\r
`)
                            }
                        }) : {
                            name: s.name,
                            value: u.replace(Ss, `\r
`)
                        }
                    }).get()
                }
            });
            var Bo = /%20/g,
                qo = /#.*$/,
                jo = /([?&])_=[^&]*/,
                Kn = /^(.*?):[ \t]*([^\r\n]*)$/mg,
                ks = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                Fo = /^(?:GET|HEAD)$/,
                Uo = /^\/\//,
                Ts = {},
                jr = {},
                As = "*/".concat("*"),
                Fr = P.createElement("a");
            Fr.href = Ti.href;

            function Os(r) {
                return function(s, u) {
                    typeof s != "string" && (u = s, s = "*");
                    var p, b = 0,
                        x = s.toLowerCase().match(Te) || [];
                    if (re(u))
                        for (; p = x[b++];) p[0] === "+" ? (p = p.slice(1) || "*", (r[p] = r[p] || []).unshift(u)) : (r[p] = r[p] || []).push(u)
                }
            }

            function Rs(r, s, u, p) {
                var b = {},
                    x = r === jr;

                function A(F) {
                    var U;
                    return b[F] = !0, f.each(r[F] || [], function(Z, le) {
                        var Ce = le(s, u, p);
                        if (typeof Ce == "string" && !x && !b[Ce]) return s.dataTypes.unshift(Ce), A(Ce), !1;
                        if (x) return !(U = Ce)
                    }), U
                }
                return A(s.dataTypes[0]) || !b["*"] && A("*")
            }

            function Ur(r, s) {
                var u, p, b = f.ajaxSettings.flatOptions || {};
                for (u in s) s[u] !== void 0 && ((b[u] ? r : p || (p = {}))[u] = s[u]);
                return p && f.extend(!0, r, p), r
            }

            function zo(r, s, u) {
                for (var p, b, x, A, F = r.contents, U = r.dataTypes; U[0] === "*";) U.shift(), p === void 0 && (p = r.mimeType || s.getResponseHeader("Content-Type"));
                if (p) {
                    for (b in F)
                        if (F[b] && F[b].test(p)) {
                            U.unshift(b);
                            break
                        }
                }
                if (U[0] in u) x = U[0];
                else {
                    for (b in u) {
                        if (!U[0] || r.converters[b + " " + U[0]]) {
                            x = b;
                            break
                        }
                        A || (A = b)
                    }
                    x = x || A
                }
                if (x) return x !== U[0] && U.unshift(x), u[x]
            }

            function Go(r, s, u, p) {
                var b, x, A, F, U, Z = {},
                    le = r.dataTypes.slice();
                if (le[1])
                    for (A in r.converters) Z[A.toLowerCase()] = r.converters[A];
                for (x = le.shift(); x;)
                    if (r.responseFields[x] && (u[r.responseFields[x]] = s), !U && p && r.dataFilter && (s = r.dataFilter(s, r.dataType)), U = x, x = le.shift(), x) {
                        if (x === "*") x = U;
                        else if (U !== "*" && U !== x) {
                            if (A = Z[U + " " + x] || Z["* " + x], !A) {
                                for (b in Z)
                                    if (F = b.split(" "), F[1] === x && (A = Z[U + " " + F[0]] || Z["* " + F[0]], A)) {
                                        A === !0 ? A = Z[b] : Z[b] !== !0 && (x = F[0], le.unshift(F[1]));
                                        break
                                    }
                            }
                            if (A !== !0)
                                if (A && r.throws) s = A(s);
                                else try {
                                    s = A(s)
                                } catch (Ce) {
                                    return {
                                        state: "parsererror",
                                        error: A ? Ce : "No conversion from " + U + " to " + x
                                    }
                                }
                        }
                    } return {
                    state: "success",
                    data: s
                }
            }
            f.extend({
                active: 0,
                lastModified: {},
                etag: {},
                ajaxSettings: {
                    url: Ti.href,
                    type: "GET",
                    isLocal: ks.test(Ti.protocol),
                    global: !0,
                    processData: !0,
                    async: !0,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    accepts: {
                        "*": As,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },
                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },
                    converters: {
                        "* text": String,
                        "text html": !0,
                        "text json": JSON.parse,
                        "text xml": f.parseXML
                    },
                    flatOptions: {
                        url: !0,
                        context: !0
                    }
                },
                ajaxSetup: function(r, s) {
                    return s ? Ur(Ur(r, f.ajaxSettings), s) : Ur(f.ajaxSettings, r)
                },
                ajaxPrefilter: Os(Ts),
                ajaxTransport: Os(jr),
                ajax: function(r, s) {
                    typeof r == "object" && (s = r, r = void 0), s = s || {};
                    var u, p, b, x, A, F, U, Z, le, Ce, ne = f.ajaxSetup({}, s),
                        ce = ne.context || ne,
                        Ge = ne.context && (ce.nodeType || ce.jquery) ? f(ce) : f.event,
                        ot = f.Deferred(),
                        qe = f.Callbacks("once memory"),
                        Ut = ne.statusCode || {},
                        Nt = {},
                        un = {},
                        Et = "canceled",
                        tt = {
                            readyState: 0,
                            getResponseHeader: function(ft) {
                                var Dt;
                                if (U) {
                                    if (!x)
                                        for (x = {}; Dt = Kn.exec(b);) x[Dt[1].toLowerCase() + " "] = (x[Dt[1].toLowerCase() + " "] || []).concat(Dt[2]);
                                    Dt = x[ft.toLowerCase() + " "]
                                }
                                return Dt == null ? null : Dt.join(", ")
                            },
                            getAllResponseHeaders: function() {
                                return U ? b : null
                            },
                            setRequestHeader: function(ft, Dt) {
                                return U == null && (ft = un[ft.toLowerCase()] = un[ft.toLowerCase()] || ft, Nt[ft] = Dt), this
                            },
                            overrideMimeType: function(ft) {
                                return U == null && (ne.mimeType = ft), this
                            },
                            statusCode: function(ft) {
                                var Dt;
                                if (ft)
                                    if (U) tt.always(ft[tt.status]);
                                    else
                                        for (Dt in ft) Ut[Dt] = [Ut[Dt], ft[Dt]];
                                return this
                            },
                            abort: function(ft) {
                                var Dt = ft || Et;
                                return u && u.abort(Dt), on(0, Dt), this
                            }
                        };
                    if (ot.promise(tt), ne.url = ((r || ne.url || Ti.href) + "").replace(Uo, Ti.protocol + "//"), ne.type = s.method || s.type || ne.method || ne.type, ne.dataTypes = (ne.dataType || "*").toLowerCase().match(Te) || [""], ne.crossDomain == null) {
                        F = P.createElement("a");
                        try {
                            F.href = ne.url, F.href = F.href, ne.crossDomain = Fr.protocol + "//" + Fr.host != F.protocol + "//" + F.host
                        } catch {
                            ne.crossDomain = !0
                        }
                    }
                    if (ne.data && ne.processData && typeof ne.data != "string" && (ne.data = f.param(ne.data, ne.traditional)), Rs(Ts, ne, s, tt), U) return tt;
                    Z = f.event && ne.global, Z && f.active++ === 0 && f.event.trigger("ajaxStart"), ne.type = ne.type.toUpperCase(), ne.hasContent = !Fo.test(ne.type), p = ne.url.replace(qo, ""), ne.hasContent ? ne.data && ne.processData && (ne.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (ne.data = ne.data.replace(Bo, "+")) : (Ce = ne.url.slice(p.length), ne.data && (ne.processData || typeof ne.data == "string") && (p += (Ji.test(p) ? "&" : "?") + ne.data, delete ne.data), ne.cache === !1 && (p = p.replace(jo, "$1"), Ce = (Ji.test(p) ? "&" : "?") + "_=" + Br.guid++ + Ce), ne.url = p + Ce), ne.ifModified && (f.lastModified[p] && tt.setRequestHeader("If-Modified-Since", f.lastModified[p]), f.etag[p] && tt.setRequestHeader("If-None-Match", f.etag[p])), (ne.data && ne.hasContent && ne.contentType !== !1 || s.contentType) && tt.setRequestHeader("Content-Type", ne.contentType), tt.setRequestHeader("Accept", ne.dataTypes[0] && ne.accepts[ne.dataTypes[0]] ? ne.accepts[ne.dataTypes[0]] + (ne.dataTypes[0] !== "*" ? ", " + As + "; q=0.01" : "") : ne.accepts["*"]);
                    for (le in ne.headers) tt.setRequestHeader(le, ne.headers[le]);
                    if (ne.beforeSend && (ne.beforeSend.call(ce, tt, ne) === !1 || U)) return tt.abort();
                    if (Et = "abort", qe.add(ne.complete), tt.done(ne.success), tt.fail(ne.error), u = Rs(jr, ne, s, tt), !u) on(-1, "No Transport");
                    else {
                        if (tt.readyState = 1, Z && Ge.trigger("ajaxSend", [tt, ne]), U) return tt;
                        ne.async && ne.timeout > 0 && (A = e.setTimeout(function() {
                            tt.abort("timeout")
                        }, ne.timeout));
                        try {
                            U = !1, u.send(Nt, on)
                        } catch (ft) {
                            if (U) throw ft;
                            on(-1, ft)
                        }
                    }

                    function on(ft, Dt, Oi, Qi) {
                        var hn, Jn, Qn, an, Mn, vn = Dt;
                        U || (U = !0, A && e.clearTimeout(A), u = void 0, b = Qi || "", tt.readyState = ft > 0 ? 4 : 0, hn = ft >= 200 && ft < 300 || ft === 304, Oi && (an = zo(ne, tt, Oi)), !hn && f.inArray("script", ne.dataTypes) > -1 && f.inArray("json", ne.dataTypes) < 0 && (ne.converters["text script"] = function() {}), an = Go(ne, an, tt, hn), hn ? (ne.ifModified && (Mn = tt.getResponseHeader("Last-Modified"), Mn && (f.lastModified[p] = Mn), Mn = tt.getResponseHeader("etag"), Mn && (f.etag[p] = Mn)), ft === 204 || ne.type === "HEAD" ? vn = "nocontent" : ft === 304 ? vn = "notmodified" : (vn = an.state, Jn = an.data, Qn = an.error, hn = !Qn)) : (Qn = vn, (ft || !vn) && (vn = "error", ft < 0 && (ft = 0))), tt.status = ft, tt.statusText = (Dt || vn) + "", hn ? ot.resolveWith(ce, [Jn, vn, tt]) : ot.rejectWith(ce, [tt, vn, Qn]), tt.statusCode(Ut), Ut = void 0, Z && Ge.trigger(hn ? "ajaxSuccess" : "ajaxError", [tt, ne, hn ? Jn : Qn]), qe.fireWith(ce, [tt, vn]), Z && (Ge.trigger("ajaxComplete", [tt, ne]), --f.active || f.event.trigger("ajaxStop")))
                    }
                    return tt
                },
                getJSON: function(r, s, u) {
                    return f.get(r, s, u, "json")
                },
                getScript: function(r, s) {
                    return f.get(r, void 0, s, "script")
                }
            }), f.each(["get", "post"], function(r, s) {
                f[s] = function(u, p, b, x) {
                    return re(p) && (x = x || b, b = p, p = void 0), f.ajax(f.extend({
                        url: u,
                        type: s,
                        dataType: x,
                        data: p,
                        success: b
                    }, f.isPlainObject(u) && u))
                }
            }), f.ajaxPrefilter(function(r) {
                var s;
                for (s in r.headers) s.toLowerCase() === "content-type" && (r.contentType = r.headers[s] || "")
            }), f._evalUrl = function(r, s, u) {
                return f.ajax({
                    url: r,
                    type: "GET",
                    dataType: "script",
                    cache: !0,
                    async: !1,
                    global: !1,
                    converters: {
                        "text script": function() {}
                    },
                    dataFilter: function(p) {
                        f.globalEval(p, s, u)
                    }
                })
            }, f.fn.extend({
                wrapAll: function(r) {
                    var s;
                    return this[0] && (re(r) && (r = r.call(this[0])), s = f(r, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && s.insertBefore(this[0]), s.map(function() {
                        for (var u = this; u.firstElementChild;) u = u.firstElementChild;
                        return u
                    }).append(this)), this
                },
                wrapInner: function(r) {
                    return re(r) ? this.each(function(s) {
                        f(this).wrapInner(r.call(this, s))
                    }) : this.each(function() {
                        var s = f(this),
                            u = s.contents();
                        u.length ? u.wrapAll(r) : s.append(r)
                    })
                },
                wrap: function(r) {
                    var s = re(r);
                    return this.each(function(u) {
                        f(this).wrapAll(s ? r.call(this, u) : r)
                    })
                },
                unwrap: function(r) {
                    return this.parent(r).not("body").each(function() {
                        f(this).replaceWith(this.childNodes)
                    }), this
                }
            }), f.expr.pseudos.hidden = function(r) {
                return !f.expr.pseudos.visible(r)
            }, f.expr.pseudos.visible = function(r) {
                return !!(r.offsetWidth || r.offsetHeight || r.getClientRects().length)
            }, f.ajaxSettings.xhr = function() {
                try {
                    return new e.XMLHttpRequest
                } catch {}
            };
            var Ho = {
                    0: 200,
                    1223: 204
                },
                Ai = f.ajaxSettings.xhr();
            K.cors = !!Ai && "withCredentials" in Ai, K.ajax = Ai = !!Ai, f.ajaxTransport(function(r) {
                var s, u;
                if (K.cors || Ai && !r.crossDomain) return {
                    send: function(p, b) {
                        var x, A = r.xhr();
                        if (A.open(r.type, r.url, r.async, r.username, r.password), r.xhrFields)
                            for (x in r.xhrFields) A[x] = r.xhrFields[x];
                        r.mimeType && A.overrideMimeType && A.overrideMimeType(r.mimeType), !r.crossDomain && !p["X-Requested-With"] && (p["X-Requested-With"] = "XMLHttpRequest");
                        for (x in p) A.setRequestHeader(x, p[x]);
                        s = function(F) {
                            return function() {
                                s && (s = u = A.onload = A.onerror = A.onabort = A.ontimeout = A.onreadystatechange = null, F === "abort" ? A.abort() : F === "error" ? typeof A.status != "number" ? b(0, "error") : b(A.status, A.statusText) : b(Ho[A.status] || A.status, A.statusText, (A.responseType || "text") !== "text" || typeof A.responseText != "string" ? {
                                    binary: A.response
                                } : {
                                    text: A.responseText
                                }, A.getAllResponseHeaders()))
                            }
                        }, A.onload = s(), u = A.onerror = A.ontimeout = s("error"), A.onabort !== void 0 ? A.onabort = u : A.onreadystatechange = function() {
                            A.readyState === 4 && e.setTimeout(function() {
                                s && u()
                            })
                        }, s = s("abort");
                        try {
                            A.send(r.hasContent && r.data || null)
                        } catch (F) {
                            if (s) throw F
                        }
                    },
                    abort: function() {
                        s && s()
                    }
                }
            }), f.ajaxPrefilter(function(r) {
                r.crossDomain && (r.contents.script = !1)
            }), f.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function(r) {
                        return f.globalEval(r), r
                    }
                }
            }), f.ajaxPrefilter("script", function(r) {
                r.cache === void 0 && (r.cache = !1), r.crossDomain && (r.type = "GET")
            }), f.ajaxTransport("script", function(r) {
                if (r.crossDomain || r.scriptAttrs) {
                    var s, u;
                    return {
                        send: function(p, b) {
                            s = f("<script>").attr(r.scriptAttrs || {}).prop({
                                charset: r.scriptCharset,
                                src: r.url
                            }).on("load error", u = function(x) {
                                s.remove(), u = null, x && b(x.type === "error" ? 404 : 200, x.type)
                            }), P.head.appendChild(s[0])
                        },
                        abort: function() {
                            u && u()
                        }
                    }
                }
            });
            var zr = [],
                Gr = /(=)\?(?=&|$)|\?\?/;
            f.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    var r = zr.pop() || f.expando + "_" + Br.guid++;
                    return this[r] = !0, r
                }
            }), f.ajaxPrefilter("json jsonp", function(r, s, u) {
                var p, b, x, A = r.jsonp !== !1 && (Gr.test(r.url) ? "url" : typeof r.data == "string" && (r.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && Gr.test(r.data) && "data");
                if (A || r.dataTypes[0] === "jsonp") return p = r.jsonpCallback = re(r.jsonpCallback) ? r.jsonpCallback() : r.jsonpCallback, A ? r[A] = r[A].replace(Gr, "$1" + p) : r.jsonp !== !1 && (r.url += (Ji.test(r.url) ? "&" : "?") + r.jsonp + "=" + p), r.converters["script json"] = function() {
                    return x || f.error(p + " was not called"), x[0]
                }, r.dataTypes[0] = "json", b = e[p], e[p] = function() {
                    x = arguments
                }, u.always(function() {
                    b === void 0 ? f(e).removeProp(p) : e[p] = b, r[p] && (r.jsonpCallback = s.jsonpCallback, zr.push(p)), x && re(b) && b(x[0]), x = b = void 0
                }), "script"
            }), K.createHTMLDocument = function() {
                var r = P.implementation.createHTMLDocument("").body;
                return r.innerHTML = "<form></form><form></form>", r.childNodes.length === 2
            }(), f.parseHTML = function(r, s, u) {
                if (typeof r != "string") return [];
                typeof s == "boolean" && (u = s, s = !1);
                var p, b, x;
                return s || (K.createHTMLDocument ? (s = P.implementation.createHTMLDocument(""), p = s.createElement("base"), p.href = P.location.href, s.head.appendChild(p)) : s = P), b = je.exec(r), x = !u && [], b ? [s.createElement(b[1])] : (b = In([r], s, x), x && x.length && f(x).remove(), f.merge([], b.childNodes))
            }, f.fn.load = function(r, s, u) {
                var p, b, x, A = this,
                    F = r.indexOf(" ");
                return F > -1 && (p = Wn(r.slice(F)), r = r.slice(0, F)), re(s) ? (u = s, s = void 0) : s && typeof s == "object" && (b = "POST"), A.length > 0 && f.ajax({
                    url: r,
                    type: b || "GET",
                    dataType: "html",
                    data: s
                }).done(function(U) {
                    x = arguments, A.html(p ? f("<div>").append(f.parseHTML(U)).find(p) : U)
                }).always(u && function(U, Z) {
                    A.each(function() {
                        u.apply(this, x || [U.responseText, Z, U])
                    })
                }), this
            }, f.expr.pseudos.animated = function(r) {
                return f.grep(f.timers, function(s) {
                    return r === s.elem
                }).length
            }, f.offset = {
                setOffset: function(r, s, u) {
                    var p, b, x, A, F, U, Z, le = f.css(r, "position"),
                        Ce = f(r),
                        ne = {};
                    le === "static" && (r.style.position = "relative"), F = Ce.offset(), x = f.css(r, "top"), U = f.css(r, "left"), Z = (le === "absolute" || le === "fixed") && (x + U).indexOf("auto") > -1, Z ? (p = Ce.position(), A = p.top, b = p.left) : (A = parseFloat(x) || 0, b = parseFloat(U) || 0), re(s) && (s = s.call(r, u, f.extend({}, F))), s.top != null && (ne.top = s.top - F.top + A), s.left != null && (ne.left = s.left - F.left + b), "using" in s ? s.using.call(r, ne) : Ce.css(ne)
                }
            }, f.fn.extend({
                offset: function(r) {
                    if (arguments.length) return r === void 0 ? this : this.each(function(b) {
                        f.offset.setOffset(this, r, b)
                    });
                    var s, u, p = this[0];
                    if (!!p) return p.getClientRects().length ? (s = p.getBoundingClientRect(), u = p.ownerDocument.defaultView, {
                        top: s.top + u.pageYOffset,
                        left: s.left + u.pageXOffset
                    }) : {
                        top: 0,
                        left: 0
                    }
                },
                position: function() {
                    if (!!this[0]) {
                        var r, s, u, p = this[0],
                            b = {
                                top: 0,
                                left: 0
                            };
                        if (f.css(p, "position") === "fixed") s = p.getBoundingClientRect();
                        else {
                            for (s = this.offset(), u = p.ownerDocument, r = p.offsetParent || u.documentElement; r && (r === u.body || r === u.documentElement) && f.css(r, "position") === "static";) r = r.parentNode;
                            r && r !== p && r.nodeType === 1 && (b = f(r).offset(), b.top += f.css(r, "borderTopWidth", !0), b.left += f.css(r, "borderLeftWidth", !0))
                        }
                        return {
                            top: s.top - b.top - f.css(p, "marginTop", !0),
                            left: s.left - b.left - f.css(p, "marginLeft", !0)
                        }
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var r = this.offsetParent; r && f.css(r, "position") === "static";) r = r.offsetParent;
                        return r || Jt
                    })
                }
            }), f.each({
                scrollLeft: "pageXOffset",
                scrollTop: "pageYOffset"
            }, function(r, s) {
                var u = s === "pageYOffset";
                f.fn[r] = function(p) {
                    return g(this, function(b, x, A) {
                        var F;
                        if (v(b) ? F = b : b.nodeType === 9 && (F = b.defaultView), A === void 0) return F ? F[s] : b[x];
                        F ? F.scrollTo(u ? F.pageXOffset : A, u ? A : F.pageYOffset) : b[x] = A
                    }, r, p, arguments.length)
                }
            }), f.each(["top", "left"], function(r, s) {
                f.cssHooks[s] = y(K.pixelPosition, function(u, p) {
                    if (p) return p = et(u, s), Ei.test(p) ? f(u).position()[s] + "px" : p
                })
            }), f.each({
                Height: "height",
                Width: "width"
            }, function(r, s) {
                f.each({
                    padding: "inner" + r,
                    content: s,
                    "": "outer" + r
                }, function(u, p) {
                    f.fn[p] = function(b, x) {
                        var A = arguments.length && (u || typeof b != "boolean"),
                            F = u || (b === !0 || x === !0 ? "margin" : "border");
                        return g(this, function(U, Z, le) {
                            var Ce;
                            return v(U) ? p.indexOf("outer") === 0 ? U["inner" + r] : U.document.documentElement["client" + r] : U.nodeType === 9 ? (Ce = U.documentElement, Math.max(U.body["scroll" + r], Ce["scroll" + r], U.body["offset" + r], Ce["offset" + r], Ce["client" + r])) : le === void 0 ? f.css(U, Z, F) : f.style(U, Z, le, F)
                        }, s, A ? b : void 0, A)
                    }
                })
            }), f.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(r, s) {
                f.fn[s] = function(u) {
                    return this.on(s, u)
                }
            }), f.fn.extend({
                bind: function(r, s, u) {
                    return this.on(r, null, s, u)
                },
                unbind: function(r, s) {
                    return this.off(r, null, s)
                },
                delegate: function(r, s, u, p) {
                    return this.on(s, r, u, p)
                },
                undelegate: function(r, s, u) {
                    return arguments.length === 1 ? this.off(r, "**") : this.off(s, r || "**", u)
                },
                hover: function(r, s) {
                    return this.mouseenter(r).mouseleave(s || r)
                }
            }), f.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(r, s) {
                f.fn[s] = function(u, p) {
                    return arguments.length > 0 ? this.on(s, null, u, p) : this.trigger(s)
                }
            });
            var Is = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
            f.proxy = function(r, s) {
                var u, p, b;
                if (typeof s == "string" && (u = r[s], s = r, r = u), !!re(r)) return p = d.call(arguments, 2), b = function() {
                    return r.apply(s || this, p.concat(d.call(arguments)))
                }, b.guid = r.guid = r.guid || f.guid++, b
            }, f.holdReady = function(r) {
                r ? f.readyWait++ : f.ready(!0)
            }, f.isArray = Array.isArray, f.parseJSON = JSON.parse, f.nodeName = J, f.isFunction = re, f.isWindow = v, f.camelCase = N, f.type = se, f.now = Date.now, f.isNumeric = function(r) {
                var s = f.type(r);
                return (s === "number" || s === "string") && !isNaN(r - parseFloat(r))
            }, f.trim = function(r) {
                return r == null ? "" : (r + "").replace(Is, "")
            };
            var Wo = e.jQuery,
                Xo = e.$;
            return f.noConflict = function(r) {
                return e.$ === f && (e.$ = Xo), r && e.jQuery === f && (e.jQuery = Wo), f
            }, typeof n > "u" && (e.jQuery = e.$ = f), f
        })
    })(Ka);
    const be = Ka.exports;
    var at = {};
    (function(t) {
        (function(e) {
            var n = typeof self == "object" && self.self === self && self || typeof vt == "object" && vt.global === vt && vt; {
                var i = ji.exports,
                    o;
                try {
                    o = Ka.exports
                } catch {}
                e(n, t, i, o)
            }
        })(function(e, n, i, o) {
            var d = e.Backbone,
                m = Array.prototype.slice;
            n.VERSION = "1.3.3", n.$ = o, n.noConflict = function() {
                return e.Backbone = d, this
            }, n.emulateHTTP = !1, n.emulateJSON = !1;
            var C = function(E, l, g) {
                    switch (E) {
                        case 1:
                            return function() {
                                return i[l](this[g])
                            };
                        case 2:
                            return function(k) {
                                return i[l](this[g], k)
                            };
                        case 3:
                            return function(k, R) {
                                return i[l](this[g], T(k, this), R)
                            };
                        case 4:
                            return function(k, R, L) {
                                return i[l](this[g], T(k, this), R, L)
                            };
                        default:
                            return function() {
                                var k = m.call(arguments);
                                return k.unshift(this[g]), i[l].apply(i, k)
                            }
                    }
                },
                S = function(E, l, g) {
                    i.each(l, function(k, R) {
                        i[R] && (E.prototype[R] = C(k, R, g))
                    })
                },
                T = function(E, l) {
                    return i.isFunction(E) ? E : i.isObject(E) && !l._isModel(E) ? D(E) : i.isString(E) ? function(g) {
                        return g.get(E)
                    } : E
                },
                D = function(E) {
                    var l = i.matches(E);
                    return function(g) {
                        return l(g.attributes)
                    }
                },
                V = n.Events = {},
                Y = /\s+/,
                ie = function(E, l, g, k, R) {
                    var L = 0,
                        N;
                    if (g && typeof g == "object")
                        for (k !== void 0 && ("context" in R) && R.context === void 0 && (R.context = k), N = i.keys(g); L < N.length; L++) l = ie(E, l, N[L], g[N[L]], R);
                    else if (g && Y.test(g))
                        for (N = g.split(Y); L < N.length; L++) l = E(l, N[L], k, R);
                    else l = E(l, g, k, R);
                    return l
                };
            V.on = function(E, l, g) {
                return K(this, E, l, g)
            };
            var K = function(E, l, g, k, R) {
                if (E._events = ie(re, E._events || {}, l, g, {
                        context: k,
                        ctx: E,
                        listening: R
                    }), R) {
                    var L = E._listeners || (E._listeners = {});
                    L[R.id] = R
                }
                return E
            };
            V.listenTo = function(E, l, g) {
                if (!E) return this;
                var k = E._listenId || (E._listenId = i.uniqueId("l")),
                    R = this._listeningTo || (this._listeningTo = {}),
                    L = R[k];
                if (!L) {
                    var N = this._listenId || (this._listenId = i.uniqueId("l"));
                    L = R[k] = {
                        obj: E,
                        objId: k,
                        id: N,
                        listeningTo: R,
                        count: 0
                    }
                }
                return K(E, l, g, this, L), this
            };
            var re = function(E, l, g, k) {
                if (g) {
                    var R = E[l] || (E[l] = []),
                        L = k.context,
                        N = k.ctx,
                        te = k.listening;
                    te && te.count++, R.push({
                        callback: g,
                        context: L,
                        ctx: L || N,
                        listening: te
                    })
                }
                return E
            };
            V.off = function(E, l, g) {
                return this._events ? (this._events = ie(v, this._events, E, l, {
                    context: g,
                    listeners: this._listeners
                }), this) : this
            }, V.stopListening = function(E, l, g) {
                var k = this._listeningTo;
                if (!k) return this;
                for (var R = E ? [E._listenId] : i.keys(k), L = 0; L < R.length; L++) {
                    var N = k[R[L]];
                    if (!N) break;
                    N.obj.off(l, g, this)
                }
                return this
            };
            var v = function(E, l, g, k) {
                if (!!E) {
                    var R = 0,
                        L, N = k.context,
                        te = k.listeners;
                    if (!l && !g && !N) {
                        for (var ke = i.keys(te); R < ke.length; R++) L = te[ke[R]], delete te[L.id], delete L.listeningTo[L.objId];
                        return
                    }
                    for (var he = l ? [l] : i.keys(E); R < he.length; R++) {
                        l = he[R];
                        var De = E[l];
                        if (!De) break;
                        for (var Me = [], rt = 0; rt < De.length; rt++) {
                            var Ct = De[rt];
                            g && g !== Ct.callback && g !== Ct.callback._callback || N && N !== Ct.context ? Me.push(Ct) : (L = Ct.listening, L && --L.count === 0 && (delete te[L.id], delete L.listeningTo[L.objId]))
                        }
                        Me.length ? E[l] = Me : delete E[l]
                    }
                    return E
                }
            };
            V.once = function(E, l, g) {
                var k = ie(P, {}, E, l, i.bind(this.off, this));
                return typeof E == "string" && g == null && (l = void 0), this.on(k, l, g)
            }, V.listenToOnce = function(E, l, g) {
                var k = ie(P, {}, l, g, i.bind(this.stopListening, this, E));
                return this.listenTo(E, k)
            };
            var P = function(E, l, g, k) {
                if (g) {
                    var R = E[l] = i.once(function() {
                        k(l, R), g.apply(this, arguments)
                    });
                    R._callback = g
                }
                return E
            };
            V.trigger = function(E) {
                if (!this._events) return this;
                for (var l = Math.max(0, arguments.length - 1), g = Array(l), k = 0; k < l; k++) g[k] = arguments[k + 1];
                return ie(H, this._events, E, void 0, g), this
            };
            var H = function(E, l, g, k) {
                    if (E) {
                        var R = E[l],
                            L = E.all;
                        R && L && (L = L.slice()), R && ae(R, k), L && ae(L, [l].concat(k))
                    }
                    return E
                },
                ae = function(E, l) {
                    var g, k = -1,
                        R = E.length,
                        L = l[0],
                        N = l[1],
                        te = l[2];
                    switch (l.length) {
                        case 0:
                            for (; ++k < R;)(g = E[k]).callback.call(g.ctx);
                            return;
                        case 1:
                            for (; ++k < R;)(g = E[k]).callback.call(g.ctx, L);
                            return;
                        case 2:
                            for (; ++k < R;)(g = E[k]).callback.call(g.ctx, L, N);
                            return;
                        case 3:
                            for (; ++k < R;)(g = E[k]).callback.call(g.ctx, L, N, te);
                            return;
                        default:
                            for (; ++k < R;)(g = E[k]).callback.apply(g.ctx, l);
                            return
                    }
                };
            V.bind = V.on, V.unbind = V.off, i.extend(n, V);
            var se = n.Model = function(E, l) {
                var g = E || {};
                l || (l = {}), this.cid = i.uniqueId(this.cidPrefix), this.attributes = {}, l.collection && (this.collection = l.collection), l.parse && (g = this.parse(g, l) || {});
                var k = i.result(this, "defaults");
                g = i.defaults(i.extend({}, k, g), k), this.set(g, l), this.changed = {}, this.initialize.apply(this, arguments)
            };
            i.extend(se.prototype, V, {
                changed: null,
                validationError: null,
                idAttribute: "id",
                cidPrefix: "c",
                initialize: function() {},
                toJSON: function(E) {
                    return i.clone(this.attributes)
                },
                sync: function() {
                    return n.sync.apply(this, arguments)
                },
                get: function(E) {
                    return this.attributes[E]
                },
                escape: function(E) {
                    return i.escape(this.get(E))
                },
                has: function(E) {
                    return this.get(E) != null
                },
                matches: function(E) {
                    return !!i.iteratee(E, this)(this.attributes)
                },
                set: function(E, l, g) {
                    if (E == null) return this;
                    var k;
                    if (typeof E == "object" ? (k = E, g = l) : (k = {})[E] = l, g || (g = {}), !this._validate(k, g)) return !1;
                    var R = g.unset,
                        L = g.silent,
                        N = [],
                        te = this._changing;
                    this._changing = !0, te || (this._previousAttributes = i.clone(this.attributes), this.changed = {});
                    var ke = this.attributes,
                        he = this.changed,
                        De = this._previousAttributes;
                    for (var Me in k) l = k[Me], i.isEqual(ke[Me], l) || N.push(Me), i.isEqual(De[Me], l) ? delete he[Me] : he[Me] = l, R ? delete ke[Me] : ke[Me] = l;
                    if (this.idAttribute in k && (this.id = this.get(this.idAttribute)), !L) {
                        N.length && (this._pending = g);
                        for (var rt = 0; rt < N.length; rt++) this.trigger("change:" + N[rt], this, ke[N[rt]], g)
                    }
                    if (te) return this;
                    if (!L)
                        for (; this._pending;) g = this._pending, this._pending = !1, this.trigger("change", this, g);
                    return this._pending = !1, this._changing = !1, this
                },
                unset: function(E, l) {
                    return this.set(E, void 0, i.extend({}, l, {
                        unset: !0
                    }))
                },
                clear: function(E) {
                    var l = {};
                    for (var g in this.attributes) l[g] = void 0;
                    return this.set(l, i.extend({}, E, {
                        unset: !0
                    }))
                },
                hasChanged: function(E) {
                    return E == null ? !i.isEmpty(this.changed) : i.has(this.changed, E)
                },
                changedAttributes: function(E) {
                    if (!E) return this.hasChanged() ? i.clone(this.changed) : !1;
                    var l = this._changing ? this._previousAttributes : this.attributes,
                        g = {};
                    for (var k in E) {
                        var R = E[k];
                        i.isEqual(l[k], R) || (g[k] = R)
                    }
                    return i.size(g) ? g : !1
                },
                previous: function(E) {
                    return E == null || !this._previousAttributes ? null : this._previousAttributes[E]
                },
                previousAttributes: function() {
                    return i.clone(this._previousAttributes)
                },
                fetch: function(E) {
                    E = i.extend({
                        parse: !0
                    }, E);
                    var l = this,
                        g = E.success;
                    return E.success = function(k) {
                        var R = E.parse ? l.parse(k, E) : k;
                        if (!l.set(R, E)) return !1;
                        g && g.call(E.context, l, k, E), l.trigger("sync", l, k, E)
                    }, Ht(this, E), this.sync("read", this, E)
                },
                save: function(E, l, g) {
                    var k;
                    E == null || typeof E == "object" ? (k = E, g = l) : (k = {})[E] = l, g = i.extend({
                        validate: !0,
                        parse: !0
                    }, g);
                    var R = g.wait;
                    if (k && !R) {
                        if (!this.set(k, g)) return !1
                    } else if (!this._validate(k, g)) return !1;
                    var L = this,
                        N = g.success,
                        te = this.attributes;
                    g.success = function(De) {
                        L.attributes = te;
                        var Me = g.parse ? L.parse(De, g) : De;
                        if (R && (Me = i.extend({}, k, Me)), Me && !L.set(Me, g)) return !1;
                        N && N.call(g.context, L, De, g), L.trigger("sync", L, De, g)
                    }, Ht(this, g), k && R && (this.attributes = i.extend({}, te, k));
                    var ke = this.isNew() ? "create" : g.patch ? "patch" : "update";
                    ke === "patch" && !g.attrs && (g.attrs = k);
                    var he = this.sync(ke, this, g);
                    return this.attributes = te, he
                },
                destroy: function(E) {
                    E = E ? i.clone(E) : {};
                    var l = this,
                        g = E.success,
                        k = E.wait,
                        R = function() {
                            l.stopListening(), l.trigger("destroy", l, l.collection, E)
                        };
                    E.success = function(N) {
                        k && R(), g && g.call(E.context, l, N, E), l.isNew() || l.trigger("sync", l, N, E)
                    };
                    var L = !1;
                    return this.isNew() ? i.defer(E.success) : (Ht(this, E), L = this.sync("delete", this, E)), k || R(), L
                },
                url: function() {
                    var E = i.result(this, "urlRoot") || i.result(this.collection, "url") || Bt();
                    if (this.isNew()) return E;
                    var l = this.get(this.idAttribute);
                    return E.replace(/[^\/]$/, "$&/") + encodeURIComponent(l)
                },
                parse: function(E, l) {
                    return E
                },
                clone: function() {
                    return new this.constructor(this.attributes)
                },
                isNew: function() {
                    return !this.has(this.idAttribute)
                },
                isValid: function(E) {
                    return this._validate({}, i.extend({}, E, {
                        validate: !0
                    }))
                },
                _validate: function(E, l) {
                    if (!l.validate || !this.validate) return !0;
                    E = i.extend({}, this.attributes, E);
                    var g = this.validationError = this.validate(E, l) || null;
                    return g ? (this.trigger("invalid", this, g, i.extend(l, {
                        validationError: g
                    })), !1) : !0
                }
            });
            var ve = {
                keys: 1,
                values: 1,
                pairs: 1,
                invert: 1,
                pick: 0,
                omit: 0,
                chain: 1,
                isEmpty: 1
            };
            S(se, ve, "attributes");
            var f = n.Collection = function(E, l) {
                    l || (l = {}), l.model && (this.model = l.model), l.comparator !== void 0 && (this.comparator = l.comparator), this._reset(), this.initialize.apply(this, arguments), E && this.reset(E, i.extend({
                        silent: !0
                    }, l))
                },
                Ee = {
                    add: !0,
                    remove: !0,
                    merge: !0
                },
                Oe = {
                    add: !0,
                    remove: !1
                },
                Pe = function(E, l, g) {
                    g = Math.min(Math.max(g, 0), E.length);
                    var k = Array(E.length - g),
                        R = l.length,
                        L;
                    for (L = 0; L < k.length; L++) k[L] = E[L + g];
                    for (L = 0; L < R; L++) E[L + g] = l[L];
                    for (L = 0; L < k.length; L++) E[L + R + g] = k[L]
                };
            i.extend(f.prototype, V, {
                model: se,
                initialize: function() {},
                toJSON: function(E) {
                    return this.map(function(l) {
                        return l.toJSON(E)
                    })
                },
                sync: function() {
                    return n.sync.apply(this, arguments)
                },
                add: function(E, l) {
                    return this.set(E, i.extend({
                        merge: !1
                    }, l, Oe))
                },
                remove: function(E, l) {
                    l = i.extend({}, l);
                    var g = !i.isArray(E);
                    E = g ? [E] : E.slice();
                    var k = this._removeModels(E, l);
                    return !l.silent && k.length && (l.changes = {
                        added: [],
                        merged: [],
                        removed: k
                    }, this.trigger("update", this, l)), g ? k[0] : k
                },
                set: function(E, l) {
                    if (E != null) {
                        l = i.extend({}, Ee, l), l.parse && !this._isModel(E) && (E = this.parse(E, l) || []);
                        var g = !i.isArray(E);
                        E = g ? [E] : E.slice();
                        var k = l.at;
                        k != null && (k = +k), k > this.length && (k = this.length), k < 0 && (k += this.length + 1);
                        var R = [],
                            L = [],
                            N = [],
                            te = [],
                            ke = {},
                            he = l.add,
                            De = l.merge,
                            Me = l.remove,
                            rt = !1,
                            Ct = this.comparator && k == null && l.sort !== !1,
                            rn = i.isString(this.comparator) ? this.comparator : null,
                            ct, yt;
                        for (yt = 0; yt < E.length; yt++) {
                            ct = E[yt];
                            var wt = this.get(ct);
                            if (wt) {
                                if (De && ct !== wt) {
                                    var Jt = this._isModel(ct) ? ct.attributes : ct;
                                    l.parse && (Jt = wt.parse(Jt, l)), wt.set(Jt, l), N.push(wt), Ct && !rt && (rt = wt.hasChanged(rn))
                                }
                                ke[wt.cid] || (ke[wt.cid] = !0, R.push(wt)), E[yt] = wt
                            } else he && (ct = E[yt] = this._prepareModel(ct, l), ct && (L.push(ct), this._addReference(ct, l), ke[ct.cid] = !0, R.push(ct)))
                        }
                        if (Me) {
                            for (yt = 0; yt < this.length; yt++) ct = this.models[yt], ke[ct.cid] || te.push(ct);
                            te.length && this._removeModels(te, l)
                        }
                        var Je = !1,
                            Pt = !Ct && he && Me;
                        if (R.length && Pt ? (Je = this.length !== R.length || i.some(this.models, function(q, $) {
                                return q !== R[$]
                            }), this.models.length = 0, Pe(this.models, R, 0), this.length = this.models.length) : L.length && (Ct && (rt = !0), Pe(this.models, L, k == null ? this.length : k), this.length = this.models.length), rt && this.sort({
                                silent: !0
                            }), !l.silent) {
                            for (yt = 0; yt < L.length; yt++) k != null && (l.index = k + yt), ct = L[yt], ct.trigger("add", ct, this, l);
                            (rt || Je) && this.trigger("sort", this, l), (L.length || te.length || N.length) && (l.changes = {
                                added: L,
                                removed: te,
                                merged: N
                            }, this.trigger("update", this, l))
                        }
                        return g ? E[0] : E
                    }
                },
                reset: function(E, l) {
                    l = l ? i.clone(l) : {};
                    for (var g = 0; g < this.models.length; g++) this._removeReference(this.models[g], l);
                    return l.previousModels = this.models, this._reset(), E = this.add(E, i.extend({
                        silent: !0
                    }, l)), l.silent || this.trigger("reset", this, l), E
                },
                push: function(E, l) {
                    return this.add(E, i.extend({
                        at: this.length
                    }, l))
                },
                pop: function(E) {
                    var l = this.at(this.length - 1);
                    return this.remove(l, E)
                },
                unshift: function(E, l) {
                    return this.add(E, i.extend({
                        at: 0
                    }, l))
                },
                shift: function(E) {
                    var l = this.at(0);
                    return this.remove(l, E)
                },
                slice: function() {
                    return m.apply(this.models, arguments)
                },
                get: function(E) {
                    if (E != null) return this._byId[E] || this._byId[this.modelId(E.attributes || E)] || E.cid && this._byId[E.cid]
                },
                has: function(E) {
                    return this.get(E) != null
                },
                at: function(E) {
                    return E < 0 && (E += this.length), this.models[E]
                },
                where: function(E, l) {
                    return this[l ? "find" : "filter"](E)
                },
                findWhere: function(E) {
                    return this.where(E, !0)
                },
                sort: function(E) {
                    var l = this.comparator;
                    if (!l) throw new Error("Cannot sort a set without a comparator");
                    E || (E = {});
                    var g = l.length;
                    return i.isFunction(l) && (l = i.bind(l, this)), g === 1 || i.isString(l) ? this.models = this.sortBy(l) : this.models.sort(l), E.silent || this.trigger("sort", this, E), this
                },
                pluck: function(E) {
                    return this.map(E + "")
                },
                fetch: function(E) {
                    E = i.extend({
                        parse: !0
                    }, E);
                    var l = E.success,
                        g = this;
                    return E.success = function(k) {
                        var R = E.reset ? "reset" : "set";
                        g[R](k, E), l && l.call(E.context, g, k, E), g.trigger("sync", g, k, E)
                    }, Ht(this, E), this.sync("read", this, E)
                },
                create: function(E, l) {
                    l = l ? i.clone(l) : {};
                    var g = l.wait;
                    if (E = this._prepareModel(E, l), !E) return !1;
                    g || this.add(E, l);
                    var k = this,
                        R = l.success;
                    return l.success = function(L, N, te) {
                        g && k.add(L, te), R && R.call(te.context, L, N, te)
                    }, E.save(null, l), E
                },
                parse: function(E, l) {
                    return E
                },
                clone: function() {
                    return new this.constructor(this.models, {
                        model: this.model,
                        comparator: this.comparator
                    })
                },
                modelId: function(E) {
                    return E[this.model.prototype.idAttribute || "id"]
                },
                _reset: function() {
                    this.length = 0, this.models = [], this._byId = {}
                },
                _prepareModel: function(E, l) {
                    if (this._isModel(E)) return E.collection || (E.collection = this), E;
                    l = l ? i.clone(l) : {}, l.collection = this;
                    var g = new this.model(E, l);
                    return g.validationError ? (this.trigger("invalid", this, g.validationError, l), !1) : g
                },
                _removeModels: function(E, l) {
                    for (var g = [], k = 0; k < E.length; k++) {
                        var R = this.get(E[k]);
                        if (!!R) {
                            var L = this.indexOf(R);
                            this.models.splice(L, 1), this.length--, delete this._byId[R.cid];
                            var N = this.modelId(R.attributes);
                            N != null && delete this._byId[N], l.silent || (l.index = L, R.trigger("remove", R, this, l)), g.push(R), this._removeReference(R, l)
                        }
                    }
                    return g
                },
                _isModel: function(E) {
                    return E instanceof se
                },
                _addReference: function(E, l) {
                    this._byId[E.cid] = E;
                    var g = this.modelId(E.attributes);
                    g != null && (this._byId[g] = E), E.on("all", this._onModelEvent, this)
                },
                _removeReference: function(E, l) {
                    delete this._byId[E.cid];
                    var g = this.modelId(E.attributes);
                    g != null && delete this._byId[g], this === E.collection && delete E.collection, E.off("all", this._onModelEvent, this)
                },
                _onModelEvent: function(E, l, g, k) {
                    if (l) {
                        if ((E === "add" || E === "remove") && g !== this) return;
                        if (E === "destroy" && this.remove(l, k), E === "change") {
                            var R = this.modelId(l.previousAttributes()),
                                L = this.modelId(l.attributes);
                            R !== L && (R != null && delete this._byId[R], L != null && (this._byId[L] = l))
                        }
                    }
                    this.trigger.apply(this, arguments)
                }
            });
            var lt = {
                forEach: 3,
                each: 3,
                map: 3,
                collect: 3,
                reduce: 0,
                foldl: 0,
                inject: 0,
                reduceRight: 0,
                foldr: 0,
                find: 3,
                detect: 3,
                filter: 3,
                select: 3,
                reject: 3,
                every: 3,
                all: 3,
                some: 3,
                any: 3,
                include: 3,
                includes: 3,
                contains: 3,
                invoke: 0,
                max: 3,
                min: 3,
                toArray: 1,
                size: 1,
                first: 3,
                head: 3,
                take: 3,
                initial: 3,
                rest: 3,
                tail: 3,
                drop: 3,
                last: 3,
                without: 0,
                difference: 0,
                indexOf: 3,
                shuffle: 1,
                lastIndexOf: 3,
                isEmpty: 1,
                chain: 1,
                sample: 3,
                partition: 3,
                groupBy: 3,
                countBy: 3,
                sortBy: 3,
                indexBy: 3,
                findIndex: 3,
                findLastIndex: 3
            };
            S(f, lt, "models");
            var Ve = n.View = function(E) {
                    this.cid = i.uniqueId("view"), i.extend(this, i.pick(E, je)), this._ensureElement(), this.initialize.apply(this, arguments)
                },
                J = /^(\S+)\s*(.*)$/,
                je = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
            i.extend(Ve.prototype, V, {
                tagName: "div",
                $: function(E) {
                    return this.$el.find(E)
                },
                initialize: function() {},
                render: function() {
                    return this
                },
                remove: function() {
                    return this._removeElement(), this.stopListening(), this
                },
                _removeElement: function() {
                    this.$el.remove()
                },
                setElement: function(E) {
                    return this.undelegateEvents(), this._setElement(E), this.delegateEvents(), this
                },
                _setElement: function(E) {
                    this.$el = E instanceof n.$ ? E : n.$(E), this.el = this.$el[0]
                },
                delegateEvents: function(E) {
                    if (E || (E = i.result(this, "events")), !E) return this;
                    this.undelegateEvents();
                    for (var l in E) {
                        var g = E[l];
                        if (i.isFunction(g) || (g = this[g]), !!g) {
                            var k = l.match(J);
                            this.delegate(k[1], k[2], i.bind(g, this))
                        }
                    }
                    return this
                },
                delegate: function(E, l, g) {
                    return this.$el.on(E + ".delegateEvents" + this.cid, l, g), this
                },
                undelegateEvents: function() {
                    return this.$el && this.$el.off(".delegateEvents" + this.cid), this
                },
                undelegate: function(E, l, g) {
                    return this.$el.off(E + ".delegateEvents" + this.cid, l, g), this
                },
                _createElement: function(E) {
                    return document.createElement(E)
                },
                _ensureElement: function() {
                    if (this.el) this.setElement(i.result(this, "el"));
                    else {
                        var E = i.extend({}, i.result(this, "attributes"));
                        this.id && (E.id = i.result(this, "id")), this.className && (E.class = i.result(this, "className")), this.setElement(this._createElement(i.result(this, "tagName"))), this._setAttributes(E)
                    }
                },
                _setAttributes: function(E) {
                    this.$el.attr(E)
                }
            }), n.sync = function(E, l, g) {
                var k = z[E];
                i.defaults(g || (g = {}), {
                    emulateHTTP: n.emulateHTTP,
                    emulateJSON: n.emulateJSON
                });
                var R = {
                    type: k,
                    dataType: "json"
                };
                if (g.url || (R.url = i.result(l, "url") || Bt()), g.data == null && l && (E === "create" || E === "update" || E === "patch") && (R.contentType = "application/json", R.data = JSON.stringify(g.attrs || l.toJSON(g))), g.emulateJSON && (R.contentType = "application/x-www-form-urlencoded", R.data = R.data ? {
                        model: R.data
                    } : {}), g.emulateHTTP && (k === "PUT" || k === "DELETE" || k === "PATCH")) {
                    R.type = "POST", g.emulateJSON && (R.data._method = k);
                    var L = g.beforeSend;
                    g.beforeSend = function(ke) {
                        if (ke.setRequestHeader("X-HTTP-Method-Override", k), L) return L.apply(this, arguments)
                    }
                }
                R.type !== "GET" && !g.emulateJSON && (R.processData = !1);
                var N = g.error;
                g.error = function(ke, he, De) {
                    g.textStatus = he, g.errorThrown = De, N && N.call(g.context, ke, he, De)
                };
                var te = g.xhr = n.ajax(i.extend(R, g));
                return l.trigger("request", l, te, g), te
            };
            var z = {
                create: "POST",
                update: "PUT",
                patch: "PATCH",
                delete: "DELETE",
                read: "GET"
            };
            n.ajax = function() {
                return n.$.ajax.apply(n.$, arguments)
            };
            var oe = n.Router = function(E) {
                    E || (E = {}), E.routes && (this.routes = E.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
                },
                Ae = /\((.*?)\)/g,
                we = /(\(\?)?:\w+/g,
                ye = /\*\w+/g,
                ue = /[\-{}\[\]+?.,\\\^$|#\s]/g;
            i.extend(oe.prototype, V, {
                initialize: function() {},
                route: function(E, l, g) {
                    i.isRegExp(E) || (E = this._routeToRegExp(E)), i.isFunction(l) && (g = l, l = ""), g || (g = this[l]);
                    var k = this;
                    return n.history.route(E, function(R) {
                        var L = k._extractParameters(E, R);
                        k.execute(g, L, l) !== !1 && (k.trigger.apply(k, ["route:" + l].concat(L)), k.trigger("route", l, L), n.history.trigger("route", k, l, L))
                    }), this
                },
                execute: function(E, l, g) {
                    E && E.apply(this, l)
                },
                navigate: function(E, l) {
                    return n.history.navigate(E, l), this
                },
                _bindRoutes: function() {
                    if (!!this.routes) {
                        this.routes = i.result(this, "routes");
                        for (var E, l = i.keys(this.routes);
                            (E = l.pop()) != null;) this.route(E, this.routes[E])
                    }
                },
                _routeToRegExp: function(E) {
                    return E = E.replace(ue, "\\$&").replace(Ae, "(?:$1)?").replace(we, function(l, g) {
                        return g ? l : "([^/?]+)"
                    }).replace(ye, "([^?]*?)"), new RegExp("^" + E + "(?:\\?([\\s\\S]*))?$")
                },
                _extractParameters: function(E, l) {
                    var g = E.exec(l).slice(1);
                    return i.map(g, function(k, R) {
                        return R === g.length - 1 ? k || null : k ? decodeURIComponent(k) : null
                    })
                }
            });
            var Se = n.History = function() {
                    this.handlers = [], this.checkUrl = i.bind(this.checkUrl, this), typeof window < "u" && (this.location = window.location, this.history = window.history)
                },
                Te = /^[#\/]|\s+$/g,
                Be = /^\/+|\/+$/g,
                Ke = /#.*$/;
            Se.started = !1, i.extend(Se.prototype, V, {
                interval: 50,
                atRoot: function() {
                    var E = this.location.pathname.replace(/[^\/]$/, "$&/");
                    return E === this.root && !this.getSearch()
                },
                matchRoot: function() {
                    var E = this.decodeFragment(this.location.pathname),
                        l = E.slice(0, this.root.length - 1) + "/";
                    return l === this.root
                },
                decodeFragment: function(E) {
                    return decodeURI(E.replace(/%25/g, "%2525"))
                },
                getSearch: function() {
                    var E = this.location.href.replace(/#.*/, "").match(/\?.+/);
                    return E ? E[0] : ""
                },
                getHash: function(E) {
                    var l = (E || this).location.href.match(/#(.*)$/);
                    return l ? l[1] : ""
                },
                getPath: function() {
                    var E = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
                    return E.charAt(0) === "/" ? E.slice(1) : E
                },
                getFragment: function(E) {
                    return E == null && (this._usePushState || !this._wantsHashChange ? E = this.getPath() : E = this.getHash()), E.replace(Te, "")
                },
                start: function(E) {
                    if (Se.started) throw new Error("Backbone.history has already been started");
                    if (Se.started = !0, this.options = i.extend({
                            root: "/"
                        }, this.options, E), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._hasHashChange = "onhashchange" in window && (document.documentMode === void 0 || document.documentMode > 7), this._useHashChange = this._wantsHashChange && this._hasHashChange, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.history && this.history.pushState), this._usePushState = this._wantsPushState && this._hasPushState, this.fragment = this.getFragment(), this.root = ("/" + this.root + "/").replace(Be, "/"), this._wantsHashChange && this._wantsPushState)
                        if (!this._hasPushState && !this.atRoot()) {
                            var l = this.root.slice(0, -1) || "/";
                            return this.location.replace(l + "#" + this.getPath()), !0
                        } else this._hasPushState && this.atRoot() && this.navigate(this.getHash(), {
                            replace: !0
                        });
                    if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
                        this.iframe = document.createElement("iframe"), this.iframe.src = "javascript:0", this.iframe.style.display = "none", this.iframe.tabIndex = -1;
                        var g = document.body,
                            k = g.insertBefore(this.iframe, g.firstChild).contentWindow;
                        k.document.open(), k.document.close(), k.location.hash = "#" + this.fragment
                    }
                    var R = window.addEventListener || function(L, N) {
                        return attachEvent("on" + L, N)
                    };
                    if (this._usePushState ? R("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe ? R("hashchange", this.checkUrl, !1) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), !this.options.silent) return this.loadUrl()
                },
                stop: function() {
                    var E = window.removeEventListener || function(l, g) {
                        return detachEvent("on" + l, g)
                    };
                    this._usePushState ? E("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe && E("hashchange", this.checkUrl, !1), this.iframe && (document.body.removeChild(this.iframe), this.iframe = null), this._checkUrlInterval && clearInterval(this._checkUrlInterval), Se.started = !1
                },
                route: function(E, l) {
                    this.handlers.unshift({
                        route: E,
                        callback: l
                    })
                },
                checkUrl: function(E) {
                    var l = this.getFragment();
                    if (l === this.fragment && this.iframe && (l = this.getHash(this.iframe.contentWindow)), l === this.fragment) return !1;
                    this.iframe && this.navigate(l), this.loadUrl()
                },
                loadUrl: function(E) {
                    return this.matchRoot() ? (E = this.fragment = this.getFragment(E), i.some(this.handlers, function(l) {
                        if (l.route.test(E)) return l.callback(E), !0
                    })) : !1
                },
                navigate: function(E, l) {
                    if (!Se.started) return !1;
                    (!l || l === !0) && (l = {
                        trigger: !!l
                    }), E = this.getFragment(E || "");
                    var g = this.root;
                    (E === "" || E.charAt(0) === "?") && (g = g.slice(0, -1) || "/");
                    var k = g + E;
                    if (E = this.decodeFragment(E.replace(Ke, "")), this.fragment !== E) {
                        if (this.fragment = E, this._usePushState) this.history[l.replace ? "replaceState" : "pushState"]({}, document.title, k);
                        else if (this._wantsHashChange) {
                            if (this._updateHash(this.location, E, l.replace), this.iframe && E !== this.getHash(this.iframe.contentWindow)) {
                                var R = this.iframe.contentWindow;
                                l.replace || (R.document.open(), R.document.close()), this._updateHash(R.location, E, l.replace)
                            }
                        } else return this.location.assign(k);
                        if (l.trigger) return this.loadUrl(E)
                    }
                },
                _updateHash: function(E, l, g) {
                    if (g) {
                        var k = E.href.replace(/(javascript:|#).*$/, "");
                        E.replace(k + "#" + l)
                    } else E.hash = "#" + l
                }
            }), n.history = new Se;
            var dt = function(E, l) {
                var g = this,
                    k;
                return E && i.has(E, "constructor") ? k = E.constructor : k = function() {
                    return g.apply(this, arguments)
                }, i.extend(k, g, l), k.prototype = i.create(g.prototype, E), k.prototype.constructor = k, k.__super__ = g.prototype, k
            };
            se.extend = f.extend = oe.extend = Ve.extend = Se.extend = dt;
            var Bt = function() {
                    throw new Error('A "url" property or function must be specified')
                },
                Ht = function(E, l) {
                    var g = l.error;
                    l.error = function(k) {
                        g && g.call(l.context, E, k, l), E.trigger("error", E, k, l)
                    }
                };
            return n
        })
    })(at);
    var Fc = {
            exports: {}
        },
        aa = {
            exports: {}
        },
        Dl;

    function Wh() {
        return Dl || (Dl = 1, function(t, e) {
            (function(n, i) {
                t.exports = i(ji.exports, at)
            })(vt, function(n, i) {
                n = "default" in n ? n.default : n, i = "default" in i ? i.default : i;
                var o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(v) {
                        return typeof v
                    } : function(v) {
                        return v && typeof Symbol == "function" && v.constructor === Symbol ? "symbol" : typeof v
                    },
                    d = i.Radio,
                    m = i.Radio = {};
                m.VERSION = "2.0.0", m.noConflict = function() {
                    return i.Radio = d, this
                }, m.DEBUG = !1, m._debugText = function(v, P, H) {
                    return v + (H ? " on the " + H + " channel" : "") + ': "' + P + '"'
                }, m.debugLog = function(v, P, H) {
                    m.DEBUG && console && console.warn && console.warn(m._debugText(v, P, H))
                };
                var C = /\s+/;
                m._eventsApi = function(v, P, H, ae) {
                    if (!H) return !1;
                    var se = {};
                    if ((typeof H > "u" ? "undefined" : o(H)) === "object") {
                        for (var ve in H) {
                            var f = v[P].apply(v, [ve, H[ve]].concat(ae));
                            C.test(ve) ? n.extend(se, f) : se[ve] = f
                        }
                        return se
                    }
                    if (C.test(H)) {
                        for (var Ee = H.split(C), Oe = 0, Pe = Ee.length; Oe < Pe; Oe++) se[Ee[Oe]] = v[P].apply(v, [Ee[Oe]].concat(ae));
                        return se
                    }
                    return !1
                }, m._callHandler = function(v, P, H) {
                    var ae = H[0],
                        se = H[1],
                        ve = H[2];
                    switch (H.length) {
                        case 0:
                            return v.call(P);
                        case 1:
                            return v.call(P, ae);
                        case 2:
                            return v.call(P, ae, se);
                        case 3:
                            return v.call(P, ae, se, ve);
                        default:
                            return v.apply(P, H)
                    }
                };

                function S(v, P, H, ae) {
                    var se = v[P];
                    if ((!H || H === se.callback || H === se.callback._callback) && (!ae || ae === se.context)) return delete v[P], !0
                }

                function T(v, P, H, ae) {
                    v || (v = {});
                    for (var se = P ? [P] : n.keys(v), ve = !1, f = 0, Ee = se.length; f < Ee; f++) P = se[f], !!v[P] && S(v, P, H, ae) && (ve = !0);
                    return ve
                }
                var D = {};

                function V(v) {
                    return D[v] || (D[v] = n.bind(m.log, m, v))
                }
                n.extend(m, {
                    log: function(P, H) {
                        if (!(typeof console > "u")) {
                            var ae = n.toArray(arguments).slice(2);
                            console.log("[" + P + '] "' + H + '"', ae)
                        }
                    },
                    tuneIn: function(P) {
                        var H = m.channel(P);
                        return H._tunedIn = !0, H.on("all", V(P)), this
                    },
                    tuneOut: function(P) {
                        var H = m.channel(P);
                        return H._tunedIn = !1, H.off("all", V(P)), delete D[P], this
                    }
                });

                function Y(v) {
                    return n.isFunction(v) ? v : function() {
                        return v
                    }
                }
                m.Requests = {
                    request: function(P) {
                        var H = n.toArray(arguments).slice(1),
                            ae = m._eventsApi(this, "request", P, H);
                        if (ae) return ae;
                        var se = this.channelName,
                            ve = this._requests;
                        if (se && this._tunedIn && m.log.apply(this, [se, P].concat(H)), ve && (ve[P] || ve.default)) {
                            var f = ve[P] || ve.default;
                            return H = ve[P] ? H : arguments, m._callHandler(f.callback, f.context, H)
                        } else m.debugLog("An unhandled request was fired", P, se)
                    },
                    reply: function(P, H, ae) {
                        return m._eventsApi(this, "reply", P, [H, ae]) ? this : (this._requests || (this._requests = {}), this._requests[P] && m.debugLog("A request was overwritten", P, this.channelName), this._requests[P] = {
                            callback: Y(H),
                            context: ae || this
                        }, this)
                    },
                    replyOnce: function(P, H, ae) {
                        if (m._eventsApi(this, "replyOnce", P, [H, ae])) return this;
                        var se = this,
                            ve = n.once(function() {
                                return se.stopReplying(P), Y(H).apply(this, arguments)
                            });
                        return this.reply(P, ve, ae)
                    },
                    stopReplying: function(P, H, ae) {
                        return m._eventsApi(this, "stopReplying", P) ? this : (!P && !H && !ae ? delete this._requests : T(this._requests, P, H, ae) || m.debugLog("Attempted to remove the unregistered request", P, this.channelName), this)
                    }
                }, m._channels = {}, m.channel = function(v) {
                    if (!v) throw new Error("You must provide a name for the channel.");
                    return m._channels[v] ? m._channels[v] : m._channels[v] = new m.Channel(v)
                }, m.Channel = function(v) {
                    this.channelName = v
                }, n.extend(m.Channel.prototype, i.Events, m.Requests, {
                    reset: function() {
                        return this.off(), this.stopListening(), this.stopReplying(), this
                    }
                });
                var ie, K, re = [i.Events, m.Requests];
                return n.each(re, function(v) {
                    n.each(v, function(P, H) {
                        m[H] = function(ae) {
                            return K = n.toArray(arguments).slice(1), ie = this.channel(ae), ie[H].apply(ie, K)
                        }
                    })
                }), m.reset = function(v) {
                    var P = v ? [this._channels[v]] : this._channels;
                    n.each(P, function(H) {
                        H.reset()
                    })
                }, m
            })
        }(aa)), aa.exports
    }
    /**
     * @license
     * MarionetteJS (Backbone.Marionette)
     * ----------------------------------
     * v3.5.1
     *
     * Copyright (c)2017 Derick Bailey, Muted Solutions, LLC.
     * Distributed under MIT license
     *
     * http://marionettejs.com
     */
    (function(t, e) {
        (function(n, i) {
            t.exports = i(at, ji.exports, Wh())
        })(vt, function(n, i, o) {
            n = n && n.hasOwnProperty("default") ? n.default : n, i = i && i.hasOwnProperty("default") ? i.default : i, o = o && o.hasOwnProperty("default") ? o.default : o;
            var d = "3.5.1",
                m = function(a) {
                    return function(_) {
                        for (var O = arguments.length, Q = Array(O > 1 ? O - 1 : 0), _e = 1; _e < O; _e++) Q[_e - 1] = arguments[_e];
                        return a.apply(_, Q)
                    }
                },
                C = n.Model.extend,
                S = function y(a, _) {
                    i.isObject(a) && (a = a.prev + " is going to be removed in the future. Please use " + a.next + " instead." + (a.url ? " See: " + a.url : "")), !!et.DEV_MODE && (_ === void 0 || !_) && !y._cache[a] && (y._warn("Deprecation warning: " + a), y._cache[a] = !0)
                };
            S._console = typeof console < "u" ? console : {}, S._warn = function() {
                var y = S._console.warn || S._console.log || i.noop;
                return y.apply(S._console, arguments)
            }, S._cache = {};
            var T = function(a) {
                    return document.documentElement.contains(a && a.parentNode)
                },
                D = function(a, _) {
                    var O = this;
                    !a || i.each(_, function(Q) {
                        var _e = a[Q];
                        _e !== void 0 && (O[Q] = _e)
                    })
                },
                V = function(a) {
                    if (!!a) return this.options && this.options[a] !== void 0 ? this.options[a] : this[a]
                },
                Y = function(a) {
                    var _ = this;
                    return i.reduce(a, function(O, Q, _e) {
                        return i.isFunction(Q) || (Q = _[Q]), Q && (O[_e] = Q), O
                    }, {})
                },
                ie = /(^|:)(\w)/gi;

            function K(y, a, _) {
                return _.toUpperCase()
            }
            var re = i.memoize(function(y) {
                return "on" + y.replace(ie, K)
            });

            function v(y) {
                for (var a = arguments.length, _ = Array(a > 1 ? a - 1 : 0), O = 1; O < a; O++) _[O - 1] = arguments[O];
                var Q = re(y),
                    _e = V.call(this, Q),
                    He = void 0;
                return i.isFunction(_e) && (He = _e.apply(this, _)), this.trigger.apply(this, arguments), He
            }

            function P(y) {
                for (var a = arguments.length, _ = Array(a > 1 ? a - 1 : 0), O = 1; O < a; O++) _[O - 1] = arguments[O];
                return i.isFunction(y.triggerMethod) ? y.triggerMethod.apply(y, _) : v.apply(y, _)
            }

            function H(y, a, _) {
                !y._getImmediateChildren || i.each(y._getImmediateChildren(), function(O) {
                    !_(O) || P(O, a, O)
                })
            }

            function ae(y) {
                return !y._isAttached
            }

            function se(y) {
                return ae(y) ? (y._isAttached = !0, !0) : !1
            }

            function ve(y) {
                return y._isAttached
            }

            function f(y) {
                return ve(y) ? (y._isAttached = !1, !0) : !1
            }

            function Ee(y) {
                y._isAttached && y._isRendered && P(y, "dom:refresh", y)
            }

            function Oe(y) {
                y._isAttached && y._isRendered && P(y, "dom:remove", y)
            }

            function Pe() {
                H(this, "before:attach", ae)
            }

            function lt() {
                H(this, "attach", se), Ee(this)
            }

            function Ve() {
                H(this, "before:detach", ve), Oe(this)
            }

            function J() {
                H(this, "detach", f)
            }

            function je() {
                Oe(this)
            }

            function z() {
                Ee(this)
            }

            function oe(y) {
                y._areViewEventsMonitored || y.monitorViewEvents === !1 || (y._areViewEventsMonitored = !0, y.on({
                    "before:attach": Pe,
                    attach: lt,
                    "before:detach": Ve,
                    detach: J,
                    "before:render": je,
                    render: z
                }))
            }
            var Ae = ["description", "fileName", "lineNumber", "name", "message", "number"],
                we = C.call(Error, {
                    urlRoot: "http://marionettejs.com/docs/v" + d + "/",
                    constructor: function(a, _) {
                        i.isObject(a) ? (_ = a, a = _.message) : _ || (_ = {});
                        var O = Error.call(this, a);
                        i.extend(this, i.pick(O, Ae), i.pick(_, Ae)), this.captureStackTrace(), _.url && (this.url = this.urlRoot + _.url)
                    },
                    captureStackTrace: function() {
                        Error.captureStackTrace && Error.captureStackTrace(this, we)
                    },
                    toString: function() {
                        return this.name + ": " + this.message + (this.url ? " See: " + this.url : "")
                    }
                });
            we.extend = C;

            function ye(y, a, _, O, Q) {
                var _e = O.split(/\s+/);
                _e.length > 1 && S("Multiple handlers for a single event are deprecated. If needed, use a single handler to call multiple methods."), i.each(_e, function(He) {
                    var It = y[He];
                    if (!It) throw new we('Method "' + He + '" was configured as an event handler, but does not exist.');
                    y[Q](a, _, It)
                })
            }

            function ue(y, a, _, O) {
                if (!i.isObject(_)) throw new we({
                    message: "Bindings must be an object.",
                    url: "marionette.functions.html#marionettebindevents"
                });
                i.each(_, function(Q, _e) {
                    if (i.isString(Q)) {
                        ye(y, a, _e, Q, O);
                        return
                    }
                    y[O](a, _e, Q)
                })
            }

            function Se(y, a) {
                return !y || !a ? this : (ue(this, y, a, "listenTo"), this)
            }

            function Te(y, a) {
                return y ? a ? (ue(this, y, a, "stopListening"), this) : (this.stopListening(y), this) : this
            }

            function Be(y, a, _, O) {
                if (!i.isObject(_)) throw new we({
                    message: "Bindings must be an object.",
                    url: "marionette.functions.html#marionettebindrequests"
                });
                var Q = Y.call(y, _);
                a[O](Q, y)
            }

            function Ke(y, a) {
                return !y || !a ? this : (Be(this, y, a, "reply"), this)
            }

            function dt(y, a) {
                return y ? a ? (Be(this, y, a, "stopReplying"), this) : (y.stopReplying(null, null, this), this) : this
            }
            var Bt = function(a) {
                    this.options = i.extend({}, i.result(this, "options"), a)
                },
                Ht = {
                    normalizeMethods: Y,
                    _setOptions: Bt,
                    mergeOptions: D,
                    getOption: V,
                    bindEvents: Se,
                    unbindEvents: Te
                },
                E = {
                    _initRadio: function() {
                        var a = i.result(this, "channelName");
                        if (!!a) {
                            if (!o) throw new we({
                                name: "BackboneRadioMissing",
                                message: 'The dependency "backbone.radio" is missing.'
                            });
                            var _ = this._channel = o.channel(a),
                                O = i.result(this, "radioEvents");
                            this.bindEvents(_, O);
                            var Q = i.result(this, "radioRequests");
                            this.bindRequests(_, Q), this.on("destroy", this._destroyRadio)
                        }
                    },
                    _destroyRadio: function() {
                        this._channel.stopReplying(null, null, this)
                    },
                    getChannel: function() {
                        return this._channel
                    },
                    bindEvents: Se,
                    unbindEvents: Te,
                    bindRequests: Ke,
                    unbindRequests: dt
                },
                l = ["channelName", "radioEvents", "radioRequests"],
                g = function(a) {
                    this.hasOwnProperty("options") || this._setOptions(a), this.mergeOptions(a, l), this._setCid(), this._initRadio(), this.initialize.apply(this, arguments)
                };
            g.extend = C, i.extend(g.prototype, n.Events, Ht, E, {
                cidPrefix: "mno",
                _isDestroyed: !1,
                isDestroyed: function() {
                    return this._isDestroyed
                },
                initialize: function() {},
                _setCid: function() {
                    this.cid || (this.cid = i.uniqueId(this.cidPrefix))
                },
                destroy: function() {
                    if (this._isDestroyed) return this;
                    for (var a = arguments.length, _ = Array(a), O = 0; O < a; O++) _[O] = arguments[O];
                    return this.triggerMethod.apply(this, ["before:destroy", this].concat(_)), this._isDestroyed = !0, this.triggerMethod.apply(this, ["destroy", this].concat(_)), this.stopListening(), this
                },
                triggerMethod: v
            });
            var k = function(a) {
                this.templateId = a
            };
            i.extend(k, {
                templateCaches: {},
                get: function(a, _) {
                    var O = this.templateCaches[a];
                    return O || (O = new k(a), this.templateCaches[a] = O), O.load(_)
                },
                clear: function() {
                    for (var a = void 0, _ = arguments.length, O = Array(_), Q = 0; Q < _; Q++) O[Q] = arguments[Q];
                    var _e = O.length;
                    if (_e > 0)
                        for (a = 0; a < _e; a++) delete this.templateCaches[O[a]];
                    else this.templateCaches = {}
                }
            }), i.extend(k.prototype, {
                load: function(a) {
                    if (this.compiledTemplate) return this.compiledTemplate;
                    var _ = this.loadTemplate(this.templateId, a);
                    return this.compiledTemplate = this.compileTemplate(_, a), this.compiledTemplate
                },
                loadTemplate: function(a, _) {
                    var O = n.$(a);
                    if (!O.length) throw new we({
                        name: "NoTemplateError",
                        message: 'Could not find template: "' + a + '"'
                    });
                    return O.html()
                },
                compileTemplate: function(a, _) {
                    return i.template(a, _)
                }
            });
            var R = i.invokeMap || i.invoke;

            function L(y, a) {
                return y.behaviorClass ? y.behaviorClass : i.isFunction(y) ? y : i.isFunction(et.Behaviors.behaviorsLookup) ? et.Behaviors.behaviorsLookup(y, a)[a] : et.Behaviors.behaviorsLookup[a]
            }

            function N(y, a) {
                return i.chain(a).map(function(_, O) {
                    var Q = L(_, O),
                        _e = _ === Q ? {} : _,
                        He = new Q(_e, y),
                        It = N(y, i.result(He, "behaviors"));
                    return [He].concat(It)
                }).flatten().value()
            }
            var te = {
                    _initBehaviors: function() {
                        this._behaviors = this._getBehaviors()
                    },
                    _getBehaviors: function() {
                        var a = i.result(this, "behaviors");
                        return i.isObject(a) ? N(this, a) : {}
                    },
                    _getBehaviorTriggers: function() {
                        var a = R(this._behaviors, "getTriggers");
                        return i.reduce(a, function(_, O) {
                            return i.extend(_, O)
                        }, {})
                    },
                    _getBehaviorEvents: function() {
                        var a = R(this._behaviors, "getEvents");
                        return i.reduce(a, function(_, O) {
                            return i.extend(_, O)
                        }, {})
                    },
                    _proxyBehaviorViewProperties: function() {
                        R(this._behaviors, "proxyViewProperties")
                    },
                    _delegateBehaviorEntityEvents: function() {
                        R(this._behaviors, "delegateEntityEvents")
                    },
                    _undelegateBehaviorEntityEvents: function() {
                        R(this._behaviors, "undelegateEntityEvents")
                    },
                    _destroyBehaviors: function() {
                        for (var a = arguments.length, _ = Array(a), O = 0; O < a; O++) _[O] = arguments[O];
                        R.apply(void 0, [this._behaviors, "destroy"].concat(_))
                    },
                    _removeBehavior: function(a) {
                        this._isDestroyed || (this.undelegate(".trig" + a.cid + " ." + a.cid), this._behaviors = i.without(this._behaviors, a))
                    },
                    _bindBehaviorUIElements: function() {
                        R(this._behaviors, "bindUIElements")
                    },
                    _unbindBehaviorUIElements: function() {
                        R(this._behaviors, "unbindUIElements")
                    },
                    _triggerEventOnBehaviors: function() {
                        for (var a = this._behaviors, _ = 0, O = a && a.length; _ < O; _++) v.apply(a[_], arguments)
                    }
                },
                ke = {
                    _delegateEntityEvents: function(a, _) {
                        var O = i.result(this, "modelEvents");
                        O && (Te.call(this, a, O), Se.call(this, a, O));
                        var Q = i.result(this, "collectionEvents");
                        Q && (Te.call(this, _, Q), Se.call(this, _, Q))
                    },
                    _undelegateEntityEvents: function(a, _) {
                        var O = i.result(this, "modelEvents");
                        Te.call(this, a, O);
                        var Q = i.result(this, "collectionEvents");
                        Te.call(this, _, Q)
                    }
                },
                he = /^(\S+)\s*(.*)$/,
                De = function(a, _) {
                    var O = a.match(he);
                    return O[1] + "." + _ + " " + O[2]
                },
                Me = {
                    childViewEventPrefix: !0,
                    triggersStopPropagation: !0,
                    triggersPreventDefault: !0
                };

            function rt(y) {
                return !!Me[y]
            }

            function Ct(y, a) {
                return Me[y] = a
            }

            function rn(y, a) {
                i.isString(a) && (a = {
                    event: a
                });
                var _ = a.event,
                    O = !!a.preventDefault;
                rt("triggersPreventDefault") && (O = a.preventDefault !== !1);
                var Q = !!a.stopPropagation;
                return rt("triggersStopPropagation") && (Q = a.stopPropagation !== !1),
                    function(_e) {
                        O && _e.preventDefault(), Q && _e.stopPropagation(), y.triggerMethod(_, y, _e)
                    }
            }
            var ct = {
                    _getViewTriggers: function(a, _) {
                        var O = this;
                        return i.reduce(_, function(Q, _e, He) {
                            return He = De(He, "trig" + O.cid), Q[He] = rn(a, _e), Q
                        }, {})
                    }
                },
                yt = function(a, _) {
                    return i.reduce(a, function(O, Q, _e) {
                        var He = wt(_e, _);
                        return O[He] = Q, O
                    }, {})
                },
                wt = function(a, _) {
                    return a.replace(/@ui\.[a-zA-Z-_$0-9]*/g, function(O) {
                        return _[O.slice(4)]
                    })
                },
                Jt = function y(a, _, O) {
                    return i.each(a, function(Q, _e) {
                        i.isString(Q) ? a[_e] = wt(Q, _) : i.isObject(Q) && i.isArray(O) && (i.extend(Q, y(i.pick(Q, O), _)), i.each(O, function(He) {
                            var It = Q[He];
                            i.isString(It) && (Q[He] = wt(It, _))
                        }))
                    }), a
                },
                Je = {
                    normalizeUIKeys: function(a) {
                        var _ = this._getUIBindings();
                        return yt(a, _)
                    },
                    normalizeUIString: function(a) {
                        var _ = this._getUIBindings();
                        return wt(a, _)
                    },
                    normalizeUIValues: function(a, _) {
                        var O = this._getUIBindings();
                        return Jt(a, O, _)
                    },
                    _getUIBindings: function() {
                        var a = i.result(this, "_uiBindings"),
                            _ = i.result(this, "ui");
                        return a || _
                    },
                    _bindUIElements: function() {
                        var a = this;
                        if (!!this.ui) {
                            this._uiBindings || (this._uiBindings = this.ui);
                            var _ = i.result(this, "_uiBindings");
                            this._ui = {}, i.each(_, function(O, Q) {
                                a._ui[Q] = a.$(O)
                            }), this.ui = this._ui
                        }
                    },
                    _unbindUIElements: function() {
                        var a = this;
                        !this.ui || !this._uiBindings || (i.each(this.ui, function(_, O) {
                            delete a.ui[O]
                        }), this.ui = this._uiBindings, delete this._uiBindings, delete this._ui)
                    },
                    _getUI: function(a) {
                        return this._ui[a]
                    }
                };

            function Pt(y) {
                return y instanceof n.$ ? y : n.$(y)
            }

            function q(y) {
                return this.prototype.Dom = i.extend({}, this.prototype.Dom, y), this
            }
            var $ = {
                    createBuffer: function() {
                        return document.createDocumentFragment()
                    },
                    getEl: function(a) {
                        return Pt(a)
                    },
                    findEl: function(a, _) {
                        var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Pt(a);
                        return O.find(_)
                    },
                    hasEl: function(a, _) {
                        return a.contains(_ && _.parentNode)
                    },
                    detachEl: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Pt(a);
                        _.detach()
                    },
                    replaceEl: function(a, _) {
                        if (a !== _) {
                            var O = _.parentNode;
                            !O || O.replaceChild(a, _)
                        }
                    },
                    swapEl: function(a, _) {
                        if (a !== _) {
                            var O = a.parentNode,
                                Q = _.parentNode;
                            if (!(!O || !Q)) {
                                var _e = a.nextSibling,
                                    He = _.nextSibling;
                                O.insertBefore(_, _e), Q.insertBefore(a, He)
                            }
                        }
                    },
                    setContents: function(a, _) {
                        var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Pt(a);
                        O.html(_)
                    },
                    appendContents: function(a, _) {
                        var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
                            Q = O._$el,
                            _e = Q === void 0 ? Pt(a) : Q,
                            He = O._$contents,
                            It = He === void 0 ? Pt(_) : He;
                        _e.append(It)
                    },
                    hasContents: function(a) {
                        return !!a && a.hasChildNodes()
                    },
                    detachContents: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Pt(a);
                        _.contents().detach()
                    }
                },
                W = {
                    Dom: $,
                    supportsRenderLifecycle: !0,
                    supportsDestroyLifecycle: !0,
                    _isDestroyed: !1,
                    isDestroyed: function() {
                        return !!this._isDestroyed
                    },
                    _isRendered: !1,
                    isRendered: function() {
                        return !!this._isRendered
                    },
                    _isAttached: !1,
                    isAttached: function() {
                        return !!this._isAttached
                    },
                    delegateEvents: function(a) {
                        this._proxyBehaviorViewProperties(), this._buildEventProxies();
                        var _ = this._getEvents(a);
                        typeof a > "u" && (this.events = _);
                        var O = i.extend({}, this._getBehaviorEvents(), _, this._getBehaviorTriggers(), this.getTriggers());
                        return n.View.prototype.delegateEvents.call(this, O), this
                    },
                    _getEvents: function(a) {
                        var _ = a || this.events;
                        return i.isFunction(_) ? this.normalizeUIKeys(_.call(this)) : this.normalizeUIKeys(_)
                    },
                    getTriggers: function() {
                        if (!!this.triggers) {
                            var a = this.normalizeUIKeys(i.result(this, "triggers"));
                            return this._getViewTriggers(this, a)
                        }
                    },
                    delegateEntityEvents: function() {
                        return this._delegateEntityEvents(this.model, this.collection), this._delegateBehaviorEntityEvents(), this
                    },
                    undelegateEntityEvents: function() {
                        return this._undelegateEntityEvents(this.model, this.collection), this._undelegateBehaviorEntityEvents(), this
                    },
                    destroy: function() {
                        if (this._isDestroyed) return this;
                        for (var a = this._isAttached && !this._shouldDisableEvents, _ = arguments.length, O = Array(_), Q = 0; Q < _; Q++) O[Q] = arguments[Q];
                        return this.triggerMethod.apply(this, ["before:destroy", this].concat(O)), a && this.triggerMethod("before:detach", this), this.unbindUIElements(), this._removeElement(), a && (this._isAttached = !1, this.triggerMethod("detach", this)), this._removeChildren(), this._isDestroyed = !0, this._isRendered = !1, this._destroyBehaviors.apply(this, O), this.triggerMethod.apply(this, ["destroy", this].concat(O)), this.stopListening(), this
                    },
                    _removeElement: function() {
                        this.$el.off().removeData(), this.Dom.detachEl(this.el, this.$el)
                    },
                    bindUIElements: function() {
                        return this._bindUIElements(), this._bindBehaviorUIElements(), this
                    },
                    unbindUIElements: function() {
                        return this._unbindUIElements(), this._unbindBehaviorUIElements(), this
                    },
                    getUI: function(a) {
                        return this._getUI(a)
                    },
                    childViewEventPrefix: function() {
                        return rt("childViewEventPrefix") ? "childview" : !1
                    },
                    triggerMethod: function() {
                        var a = v.apply(this, arguments);
                        return this._triggerEventOnBehaviors.apply(this, arguments), a
                    },
                    _buildEventProxies: function() {
                        this._childViewEvents = i.result(this, "childViewEvents"), this._childViewTriggers = i.result(this, "childViewTriggers")
                    },
                    _proxyChildViewEvents: function(a) {
                        this.listenTo(a, "all", this._childViewEventHandler)
                    },
                    _childViewEventHandler: function(a) {
                        for (var _ = this.normalizeMethods(this._childViewEvents), O = arguments.length, Q = Array(O > 1 ? O - 1 : 0), _e = 1; _e < O; _e++) Q[_e - 1] = arguments[_e];
                        typeof _ < "u" && i.isFunction(_[a]) && _[a].apply(this, Q);
                        var He = this._childViewTriggers;
                        He && i.isString(He[a]) && this.triggerMethod.apply(this, [He[a]].concat(Q));
                        var It = i.result(this, "childViewEventPrefix");
                        if (It !== !1) {
                            var Xt = It + ":" + a;
                            this.triggerMethod.apply(this, [Xt].concat(Q))
                        }
                    }
                };
            i.extend(W, te, Ht, ke, ct, Je);

            function M(y) {
                y._isRendered || (y.supportsRenderLifecycle || P(y, "before:render", y), y.render(), y.supportsRenderLifecycle || (y._isRendered = !0, P(y, "render", y)))
            }

            function G(y) {
                if (y.destroy) {
                    y.destroy();
                    return
                }
                y.supportsDestroyLifecycle || P(y, "before:destroy", y);
                var a = y._isAttached && !y._shouldDisableEvents;
                a && P(y, "before:detach", y), y.remove(), a && (y._isAttached = !1, P(y, "detach", y)), y._isDestroyed = !0, y.supportsDestroyLifecycle || P(y, "destroy", y)
            }
            var fe = ["allowMissingEl", "parentEl", "replaceElement"],
                pe = g.extend({
                    Dom: $,
                    cidPrefix: "mnr",
                    replaceElement: !1,
                    _isReplaced: !1,
                    _isSwappingView: !1,
                    constructor: function(a) {
                        if (this._setOptions(a), this.mergeOptions(a, fe), this._initEl = this.el = this.getOption("el"), this.el = this.el instanceof n.$ ? this.el[0] : this.el, !this.el) throw new we({
                            name: "NoElError",
                            message: 'An "el" must be specified for a region.'
                        });
                        this.$el = this.getEl(this.el), g.call(this, a)
                    },
                    show: function(a, _) {
                        if (!!this._ensureElement(_)) return a = this._getView(a, _), a === this.currentView ? this : (this._isSwappingView = !!this.currentView, this.triggerMethod("before:show", this, a, _), a._isAttached || this.empty(_), this._setupChildView(a), this.currentView = a, M(a), this._attachView(a, _), this.triggerMethod("show", this, a, _), this._isSwappingView = !1, this)
                    },
                    _setupChildView: function(a) {
                        oe(a), this._proxyChildViewEvents(a), a.on("destroy", this._empty, this)
                    },
                    _proxyChildViewEvents: function(a) {
                        var _ = this._parentView;
                        !_ || _._proxyChildViewEvents(a)
                    },
                    _shouldDisableMonitoring: function() {
                        return this._parentView && this._parentView.monitorViewEvents === !1
                    },
                    _attachView: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                            O = !a._isAttached && T(this.el) && !this._shouldDisableMonitoring(),
                            Q = typeof _.replaceElement > "u" ? !!i.result(this, "replaceElement") : !!_.replaceElement;
                        O && P(a, "before:attach", a), Q ? this._replaceEl(a) : this.attachHtml(a), O && (a._isAttached = !0, P(a, "attach", a))
                    },
                    _ensureElement: function() {
                        var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        if (i.isObject(this.el) || (this.$el = this.getEl(this.el), this.el = this.$el[0], this.$el = this.Dom.getEl(this.el)), !this.$el || this.$el.length === 0) {
                            var _ = typeof a.allowMissingEl > "u" ? !!i.result(this, "allowMissingEl") : !!a.allowMissingEl;
                            if (_) return !1;
                            throw new we('An "el" must exist in DOM for this region ' + this.cid)
                        }
                        return !0
                    },
                    _getView: function(a) {
                        if (!a) throw new we({
                            name: "ViewNotValid",
                            message: "The view passed is undefined and therefore invalid. You must pass a view instance to show."
                        });
                        if (a._isDestroyed) throw new we({
                            name: "ViewDestroyedError",
                            message: 'View (cid: "' + a.cid + '") has already been destroyed and cannot be used.'
                        });
                        if (a instanceof n.View) return a;
                        var _ = this._getViewOptions(a);
                        return new Pn(_)
                    },
                    _getViewOptions: function(a) {
                        if (i.isFunction(a)) return {
                            template: a
                        };
                        if (i.isObject(a)) return a;
                        var _ = function() {
                            return a
                        };
                        return {
                            template: _
                        }
                    },
                    getEl: function(a) {
                        var _ = i.result(this, "parentEl");
                        return _ && i.isString(a) ? this.Dom.findEl(_, a) : this.Dom.getEl(a)
                    },
                    _replaceEl: function(a) {
                        this._restoreEl(), a.on("before:destroy", this._restoreEl, this), this.Dom.replaceEl(a.el, this.el), this._isReplaced = !0
                    },
                    _restoreEl: function() {
                        if (!!this._isReplaced) {
                            var a = this.currentView;
                            !a || (this._detachView(a), this._isReplaced = !1)
                        }
                    },
                    isReplaced: function() {
                        return !!this._isReplaced
                    },
                    isSwappingView: function() {
                        return !!this._isSwappingView
                    },
                    attachHtml: function(a) {
                        this.Dom.appendContents(this.el, a.el, {
                            _$el: this.$el,
                            _$contents: a.$el
                        })
                    },
                    empty: function() {
                        var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
                                allowMissingEl: !0
                            },
                            _ = this.currentView;
                        if (!_) return this._ensureElement(a) && this.detachHtml(), this;
                        var O = !a.preventDestroy;
                        return O || S("The preventDestroy option is deprecated. Use Region#detachView"), this._empty(_, O), this
                    },
                    _empty: function(a, _) {
                        a.off("destroy", this._empty, this), this.triggerMethod("before:empty", this, a), this._restoreEl(), delete this.currentView, a._isDestroyed || (_ ? this.removeView(a) : this._detachView(a), this._stopChildViewEvents(a)), this.triggerMethod("empty", this, a)
                    },
                    _stopChildViewEvents: function(a) {
                        var _ = this._parentView;
                        !_ || this._parentView.stopListening(a)
                    },
                    destroyView: function(a) {
                        return a._isDestroyed || (a._shouldDisableEvents = this._shouldDisableMonitoring(), G(a)), a
                    },
                    removeView: function(a) {
                        this.destroyView(a)
                    },
                    detachView: function() {
                        var a = this.currentView;
                        if (!!a) return this._empty(a), a
                    },
                    _detachView: function(a) {
                        var _ = a._isAttached && !this._shouldDisableMonitoring(),
                            O = this._isReplaced;
                        _ && P(a, "before:detach", a), O ? this.Dom.replaceEl(this.el, a.el) : this.detachHtml(), _ && (a._isAttached = !1, P(a, "detach", a))
                    },
                    detachHtml: function() {
                        this.Dom.detachContents(this.el, this.$el)
                    },
                    hasView: function() {
                        return !!this.currentView
                    },
                    reset: function(a) {
                        return this.empty(a), this.$el && (this.el = this._initEl), delete this.$el, this
                    },
                    destroy: function(a) {
                        return this._isDestroyed ? this : (this.reset(a), this._name && this._parentView._removeReferences(this._name), delete this._parentView, delete this._name, g.prototype.destroy.apply(this, arguments))
                    }
                }, {
                    setDomApi: q
                }),
                $e = function(y, a) {
                    return y instanceof pe ? y : Ne(y, a)
                };

            function Ne(y, a) {
                var _ = i.extend({}, a);
                if (i.isString(y)) return i.extend(_, {
                    el: y
                }), pt(_);
                if (i.isFunction(y)) return i.extend(_, {
                    regionClass: y
                }), pt(_);
                if (i.isObject(y)) return y.selector && S("The selector option on a Region definition object is deprecated. Use el to pass a selector string"), i.extend(_, {
                    el: y.selector
                }, y), pt(_);
                throw new we({
                    message: "Improper region configuration type.",
                    url: "marionette.region.html#region-configuration-types"
                })
            }

            function pt(y) {
                var a = y.regionClass,
                    _ = i.omit(y, "regionClass");
                return new a(_)
            }
            var jt = {
                    regionClass: pe,
                    _initRegions: function() {
                        this.regions = this.regions || {}, this._regions = {}, this.addRegions(i.result(this, "regions"))
                    },
                    _reInitRegions: function() {
                        R(this._regions, "reset")
                    },
                    addRegion: function(a, _) {
                        var O = {};
                        return O[a] = _, this.addRegions(O)[a]
                    },
                    addRegions: function(a) {
                        if (!i.isEmpty(a)) return a = this.normalizeUIValues(a, ["selector", "el"]), this.regions = i.extend({}, this.regions, a), this._addRegions(a)
                    },
                    _addRegions: function(a) {
                        var _ = this,
                            O = {
                                regionClass: this.regionClass,
                                parentEl: i.partial(i.result, this, "el")
                            };
                        return i.reduce(a, function(Q, _e, He) {
                            return Q[He] = $e(_e, O), _._addRegion(Q[He], He), Q
                        }, {})
                    },
                    _addRegion: function(a, _) {
                        this.triggerMethod("before:add:region", this, _, a), a._parentView = this, a._name = _, this._regions[_] = a, this.triggerMethod("add:region", this, _, a)
                    },
                    removeRegion: function(a) {
                        var _ = this._regions[a];
                        return this._removeRegion(_, a), _
                    },
                    removeRegions: function() {
                        var a = this._getRegions();
                        return i.each(this._regions, i.bind(this._removeRegion, this)), a
                    },
                    _removeRegion: function(a, _) {
                        this.triggerMethod("before:remove:region", this, _, a), a.destroy(), this.triggerMethod("remove:region", this, _, a)
                    },
                    _removeReferences: function(a) {
                        delete this.regions[a], delete this._regions[a]
                    },
                    emptyRegions: function() {
                        var a = this.getRegions();
                        return R(a, "empty"), a
                    },
                    hasRegion: function(a) {
                        return !!this.getRegion(a)
                    },
                    getRegion: function(a) {
                        return this._isRendered || this.render(), this._regions[a]
                    },
                    _getRegions: function() {
                        return i.clone(this._regions)
                    },
                    getRegions: function() {
                        return this._isRendered || this.render(), this._getRegions()
                    },
                    showChildView: function(a, _) {
                        for (var O = this.getRegion(a), Q = arguments.length, _e = Array(Q > 2 ? Q - 2 : 0), He = 2; He < Q; He++) _e[He - 2] = arguments[He];
                        return O.show.apply(O, [_].concat(_e))
                    },
                    detachChildView: function(a) {
                        return this.getRegion(a).detachView()
                    },
                    getChildView: function(a) {
                        return this.getRegion(a).currentView
                    }
                },
                Ye = {
                    render: function(a, _) {
                        if (!a) throw new we({
                            name: "TemplateNotFoundError",
                            message: "Cannot render the template since its false, null or undefined."
                        });
                        var O = i.isFunction(a) ? a : k.get(a);
                        return O(_)
                    }
                },
                In = ["behaviors", "childViewEventPrefix", "childViewEvents", "childViewTriggers", "collectionEvents", "events", "modelEvents", "regionClass", "regions", "template", "templateContext", "triggers", "ui"],
                Pn = n.View.extend({
                    constructor: function(a) {
                        this.render = i.bind(this.render, this), this._setOptions(a), this.mergeOptions(a, In), oe(this), this._initBehaviors(), this._initRegions();
                        var _ = Array.prototype.slice.call(arguments);
                        _[0] = this.options, n.View.prototype.constructor.apply(this, _), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                    },
                    serializeData: function() {
                        return !this.model && !this.collection ? {} : this.model ? this.serializeModel() : {
                            items: this.serializeCollection()
                        }
                    },
                    serializeModel: function() {
                        return this.model ? i.clone(this.model.attributes) : {}
                    },
                    serializeCollection: function() {
                        return this.collection ? this.collection.map(function(a) {
                            return i.clone(a.attributes)
                        }) : {}
                    },
                    setElement: function() {
                        return n.View.prototype.setElement.apply(this, arguments), this._isRendered = this.Dom.hasContents(this.el), this._isAttached = T(this.el), this._isRendered && this.bindUIElements(), this
                    },
                    render: function() {
                        return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._isRendered && this._reInitRegions(), this._renderTemplate(), this.bindUIElements(), this._isRendered = !0, this.triggerMethod("render", this), this)
                    },
                    _renderTemplate: function() {
                        var a = this.getTemplate();
                        if (a === !1) {
                            S("template:false is deprecated.  Use _.noop.");
                            return
                        }
                        var _ = this.mixinTemplateContext(this.serializeData()),
                            O = this._renderHtml(a, _);
                        this.attachElContent(O)
                    },
                    _renderHtml: function(a, _) {
                        return Ye.render(a, _, this)
                    },
                    getTemplate: function() {
                        return this.template
                    },
                    mixinTemplateContext: function() {
                        var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                            _ = i.result(this, "templateContext");
                        return i.extend(a, _)
                    },
                    attachElContent: function(a) {
                        return this.Dom.setContents(this.el, a, this.$el), this
                    },
                    _removeChildren: function() {
                        this.removeRegions()
                    },
                    _getImmediateChildren: function() {
                        return i.chain(this._getRegions()).map("currentView").compact().value()
                    }
                }, {
                    setRenderer: function(a) {
                        return this.prototype._renderHtml = a, this
                    },
                    setDomApi: q
                });
            i.extend(Pn.prototype, W, jt);
            var st = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck", "reduce", "partition"],
                Dn = function(a, _) {
                    i.each(st, function(O) {
                        a[O] = function() {
                            var Q = i.result(this, _),
                                _e = Array.prototype.slice.call(arguments);
                            return i[O].apply(i, [Q].concat(_e))
                        }
                    })
                },
                wi = function(a) {
                    this._views = {}, this._indexByModel = {}, this._indexByCustom = {}, this._updateLength(), i.each(a, i.bind(this.add, this))
                };
            Dn(wi.prototype, "_getViews"), i.extend(wi.prototype, {
                _getViews: function() {
                    return i.values(this._views)
                },
                add: function(a, _) {
                    return this._add(a, _)._updateLength()
                },
                _add: function(a, _) {
                    var O = a.cid;
                    return this._views[O] = a, a.model && (this._indexByModel[a.model.cid] = O), _ && (this._indexByCustom[_] = O), this
                },
                findByModel: function(a) {
                    return this.findByModelCid(a.cid)
                },
                findByModelCid: function(a) {
                    var _ = this._indexByModel[a];
                    return this.findByCid(_)
                },
                findByCustom: function(a) {
                    var _ = this._indexByCustom[a];
                    return this.findByCid(_)
                },
                findByIndex: function(a) {
                    return i.values(this._views)[a]
                },
                findByCid: function(a) {
                    return this._views[a]
                },
                remove: function(a) {
                    return this._remove(a)._updateLength()
                },
                _remove: function(a) {
                    var _ = a.cid;
                    return a.model && delete this._indexByModel[a.model.cid], i.some(this._indexByCustom, i.bind(function(O, Q) {
                        if (O === _) return delete this._indexByCustom[Q], !0
                    }, this)), delete this._views[_], this
                },
                _updateLength: function() {
                    return this.length = i.size(this._views), this
                }
            });
            var Rr = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "events", "filter", "emptyView", "emptyViewOptions", "modelEvents", "reorderOnSort", "sort", "triggers", "ui", "viewComparator"],
                kn = n.View.extend({
                    sort: !0,
                    constructor: function(a) {
                        this.render = i.bind(this.render, this), this._setOptions(a), this.mergeOptions(a, Rr), oe(this), this._initBehaviors(), this.once("render", this._initialEvents), this._initChildViewStorage(), this._bufferedChildren = [];
                        var _ = Array.prototype.slice.call(arguments);
                        _[0] = this.options, n.View.prototype.constructor.apply(this, _), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                    },
                    _startBuffering: function() {
                        this._isBuffering = !0
                    },
                    _endBuffering: function() {
                        var a = this._isAttached && this.monitorViewEvents !== !1,
                            _ = a ? this._getImmediateChildren() : [];
                        this._isBuffering = !1, i.each(_, function(O) {
                            P(O, "before:attach", O)
                        }), this.attachBuffer(this, this._createBuffer()), i.each(_, function(O) {
                            O._isAttached = !0, P(O, "attach", O)
                        }), this._bufferedChildren = []
                    },
                    _getImmediateChildren: function() {
                        return i.values(this.children._views)
                    },
                    _initialEvents: function() {
                        this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.render), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                    },
                    _onCollectionAdd: function(a, _, O) {
                        var Q = O.at !== void 0 && (O.index || _.indexOf(a));
                        (this.filter || Q === !1) && (Q = i.indexOf(this._filteredSortedModels(Q), a)), this._shouldAddChild(a, Q) && (this._destroyEmptyView(), this._addChild(a, Q))
                    },
                    _onCollectionUpdate: function(a, _) {
                        var O = _.changes;
                        this._removeChildModels(O.removed)
                    },
                    _removeChildModels: function(a) {
                        var _ = this._getRemovedViews(a);
                        !_.length || (this.children._updateLength(), this._updateIndices(_, !1), this.isEmpty() && this._showEmptyView())
                    },
                    _getRemovedViews: function(a) {
                        var _ = this;
                        return i.reduce(a, function(O, Q) {
                            var _e = Q && _.children.findByModel(Q);
                            return !_e || _e._isDestroyed || (_._removeChildView(_e), O.push(_e)), O
                        }, [])
                    },
                    _removeChildView: function(a) {
                        this.triggerMethod("before:remove:child", this, a), this.children._remove(a), a._shouldDisableEvents = this.monitorViewEvents === !1, G(a), this.stopListening(a), this.triggerMethod("remove:child", this, a)
                    },
                    setElement: function() {
                        return n.View.prototype.setElement.apply(this, arguments), this._isAttached = T(this.el), this
                    },
                    render: function() {
                        return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._renderChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                    },
                    setFilter: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                            O = _.preventRender,
                            Q = this._isRendered && !this._isDestroyed,
                            _e = this.filter !== a,
                            He = Q && _e && !O;
                        if (He) {
                            var It = this._filteredSortedModels();
                            this.filter = a;
                            var Xt = this._filteredSortedModels();
                            this._applyModelDeltas(Xt, It)
                        } else this.filter = a;
                        return this
                    },
                    removeFilter: function(a) {
                        return this.setFilter(null, a)
                    },
                    _applyModelDeltas: function(a, _) {
                        var O = this,
                            Q = {};
                        i.each(a, function(He, It) {
                            var Xt = !O.children.findByModel(He);
                            Xt && O._onCollectionAdd(He, O.collection, {
                                at: It
                            }), Q[He.cid] = !0
                        });
                        var _e = i.filter(_, function(He) {
                            return !Q[He.cid] && O.children.findByModel(He)
                        });
                        this._removeChildModels(_e)
                    },
                    reorder: function() {
                        var a = this,
                            _ = this.children,
                            O = this._filteredSortedModels();
                        if (!O.length && this._showingEmptyView) return this;
                        var Q = i.some(O, function(Xt) {
                            return !_.findByModel(Xt)
                        });
                        if (Q) this.render();
                        else {
                            var _e = [],
                                He = i.reduce(this.children._views, function(Xt, Gn) {
                                    var $n = i.indexOf(O, Gn.model);
                                    return $n === -1 ? (_e.push(Gn.model), Xt) : (Gn._index = $n, Xt[$n] = Gn.el, Xt)
                                }, new Array(O.length));
                            this.triggerMethod("before:reorder", this);
                            var It = this.Dom.createBuffer();
                            i.each(He, function(Xt) {
                                a.Dom.appendContents(It, Xt)
                            }), this._appendReorderedChildren(It), this._removeChildModels(_e), this.triggerMethod("reorder", this)
                        }
                        return this
                    },
                    resortView: function() {
                        return this.reorderOnSort ? this.reorder() : this._renderChildren(), this
                    },
                    _sortViews: function() {
                        var a = this,
                            _ = this._filteredSortedModels(),
                            O = i.find(_, function(Q, _e) {
                                var He = a.children.findByModel(Q);
                                return !He || He._index !== _e
                            });
                        O && this.resortView()
                    },
                    _emptyViewIndex: -1,
                    _appendReorderedChildren: function(a) {
                        this.Dom.appendContents(this.el, a, {
                            _$el: this.$el
                        })
                    },
                    _renderChildren: function() {
                        this._isRendered && (this._destroyEmptyView(), this._destroyChildren());
                        var a = this._filteredSortedModels();
                        this.isEmpty({
                            processedModels: a
                        }) ? this._showEmptyView() : (this.triggerMethod("before:render:children", this), this._startBuffering(), this._showCollection(a), this._endBuffering(), this.triggerMethod("render:children", this))
                    },
                    _createView: function(a, _) {
                        var O = this._getChildView(a),
                            Q = this._getChildViewOptions(a, _),
                            _e = this.buildChildView(a, O, Q);
                        return _e
                    },
                    _setupChildView: function(a, _) {
                        oe(a), this._proxyChildViewEvents(a), this.sort && (a._index = _)
                    },
                    _showCollection: function(a) {
                        i.each(a, i.bind(this._addChild, this)), this.children._updateLength()
                    },
                    _filteredSortedModels: function(a) {
                        if (!this.collection || !this.collection.length) return [];
                        var _ = this.getViewComparator(),
                            O = this.collection.models;
                        if (a = Math.min(Math.max(a, 0), O.length - 1), _) {
                            var Q = void 0;
                            a && (Q = O[a], O = O.slice(0, a).concat(O.slice(a + 1))), O = this._sortModelsBy(O, _), Q && O.splice(a, 0, Q)
                        }
                        return O = this._filterModels(O), O
                    },
                    getViewComparator: function() {
                        return this.viewComparator
                    },
                    _filterModels: function(a) {
                        var _ = this;
                        return this.filter && (a = i.filter(a, function(O, Q) {
                            return _._shouldAddChild(O, Q)
                        })), a
                    },
                    _sortModelsBy: function(a, _) {
                        return typeof _ == "string" ? i.sortBy(a, function(O) {
                            return O.get(_)
                        }) : _.length === 1 ? i.sortBy(a, i.bind(_, this)) : i.clone(a).sort(i.bind(_, this))
                    },
                    _showEmptyView: function() {
                        var a = this._getEmptyView();
                        if (a && !this._showingEmptyView) {
                            this._showingEmptyView = !0;
                            var _ = new n.Model,
                                O = this.emptyViewOptions || this.childViewOptions;
                            i.isFunction(O) && (O = O.call(this, _, this._emptyViewIndex));
                            var Q = this.buildChildView(_, a, O);
                            this.triggerMethod("before:render:empty", this, Q), this.addChildView(Q, 0), this.triggerMethod("render:empty", this, Q)
                        }
                    },
                    _destroyEmptyView: function() {
                        this._showingEmptyView && (this.triggerMethod("before:remove:empty", this), this._destroyChildren(), delete this._showingEmptyView, this.triggerMethod("remove:empty", this))
                    },
                    _getEmptyView: function() {
                        var a = this.emptyView;
                        if (!!a) return this._getView(a)
                    },
                    _getChildView: function(a) {
                        var _ = this.childView;
                        if (!_) throw new we({
                            name: "NoChildViewError",
                            message: 'A "childView" must be specified'
                        });
                        if (_ = this._getView(_, a), !_) throw new we({
                            name: "InvalidChildViewError",
                            message: '"childView" must be a view class or a function that returns a view class'
                        });
                        return _
                    },
                    _getView: function(a, _) {
                        if (a.prototype instanceof n.View || a === n.View) return a;
                        if (i.isFunction(a)) return a.call(this, _)
                    },
                    _addChild: function(a, _) {
                        var O = this._createView(a, _);
                        return this.addChildView(O, _), O
                    },
                    _getChildViewOptions: function(a, _) {
                        return i.isFunction(this.childViewOptions) ? this.childViewOptions(a, _) : this.childViewOptions
                    },
                    addChildView: function(a, _) {
                        return this.triggerMethod("before:add:child", this, a), this._setupChildView(a, _), this._isBuffering ? this.children._add(a) : (this._updateIndices(a, !0), this.children.add(a)), M(a), this._attachView(a, _), this.triggerMethod("add:child", this, a), a
                    },
                    _updateIndices: function(a, _) {
                        if (!!this.sort) {
                            if (!_) {
                                i.each(i.sortBy(this.children._views, "_index"), function(Q, _e) {
                                    Q._index = _e
                                });
                                return
                            }
                            var O = i.isArray(a) ? i.max(a, "_index") : a;
                            i.isObject(O) && i.each(this.children._views, function(Q) {
                                Q._index >= O._index && (Q._index += 1)
                            })
                        }
                    },
                    _attachView: function(a, _) {
                        var O = !a._isAttached && !this._isBuffering && this._isAttached && this.monitorViewEvents !== !1;
                        O && P(a, "before:attach", a), this.attachHtml(this, a, _), O && (a._isAttached = !0, P(a, "attach", a))
                    },
                    buildChildView: function(a, _, O) {
                        var Q = i.extend({
                            model: a
                        }, O);
                        return new _(Q)
                    },
                    removeChildView: function(a) {
                        return !a || a._isDestroyed || (this._removeChildView(a), this.children._updateLength(), this._updateIndices(a, !1)), a
                    },
                    isEmpty: function(a) {
                        var _ = void 0;
                        return i.result(a, "processedModels") ? _ = a.processedModels : (_ = this.collection ? this.collection.models : [], _ = this._filterModels(_)), _.length === 0
                    },
                    attachBuffer: function(a, _) {
                        this.Dom.appendContents(a.el, _, {
                            _$el: a.$el
                        })
                    },
                    _createBuffer: function() {
                        var a = this,
                            _ = this.Dom.createBuffer();
                        return i.each(this._bufferedChildren, function(O) {
                            a.Dom.appendContents(_, O.el, {
                                _$contents: O.$el
                            })
                        }), _
                    },
                    attachHtml: function(a, _, O) {
                        a._isBuffering ? a._bufferedChildren.splice(O, 0, _) : a._insertBefore(_, O) || a._insertAfter(_)
                    },
                    _insertBefore: function(a, _) {
                        var O = void 0,
                            Q = this.sort && _ < this.children.length - 1;
                        return Q && (O = i.find(this.children._views, function(_e) {
                            return _e._index === _ + 1
                        })), O ? (this.beforeEl(O.el, a.el), !0) : !1
                    },
                    beforeEl: function(a, _) {
                        this.$(a).before(_)
                    },
                    _insertAfter: function(a) {
                        this.Dom.appendContents(this.el, a.el, {
                            _$el: this.$el,
                            _$contents: a.$el
                        })
                    },
                    _initChildViewStorage: function() {
                        this.children = new wi
                    },
                    _removeChildren: function() {
                        this._destroyChildren()
                    },
                    _destroyChildren: function(a) {
                        !this.children.length || (this.triggerMethod("before:destroy:children", this), i.each(this.children._views, i.bind(this._removeChildView, this)), this.children._updateLength(), this.triggerMethod("destroy:children", this))
                    },
                    _shouldAddChild: function(a, _) {
                        var O = this.filter;
                        return !i.isFunction(O) || O.call(this, a, _, this.collection)
                    }
                }, {
                    setDomApi: q
                });
            i.extend(kn.prototype, W);
            var sn = function() {
                this._init()
            };
            Dn(sn.prototype, "_views");

            function Ir(y, a) {
                return a.model && a.model.get(y)
            }
            i.extend(sn.prototype, {
                _init: function() {
                    this._views = [], this._viewsByCid = {}, this._indexByModel = {}, this._updateLength()
                },
                _add: function(a) {
                    var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this._views.length,
                        O = a.cid;
                    this._viewsByCid[O] = a, a.model && (this._indexByModel[a.model.cid] = O), this._views.splice(_, 0, a), this._updateLength()
                },
                _sort: function(a, _) {
                    return typeof a == "string" ? (a = i.partial(Ir, a), this._sortBy(a)) : a.length === 1 ? this._sortBy(i.bind(a, _)) : this._views.sort(i.bind(a, _))
                },
                _sortBy: function(a) {
                    var _ = i.sortBy(this._views, a);
                    return this._set(_), _
                },
                _set: function(a) {
                    this._views.length = 0, this._views.push.apply(this._views, a.slice(0)), this._updateLength()
                },
                _swap: function(a, _) {
                    var O = this.findIndexByView(a),
                        Q = this.findIndexByView(_);
                    if (!(O === -1 || Q === -1)) {
                        var _e = this._views[O];
                        this._views[O] = this._views[Q], this._views[Q] = _e
                    }
                },
                findByModel: function(a) {
                    return this.findByModelCid(a.cid)
                },
                findByModelCid: function(a) {
                    var _ = this._indexByModel[a];
                    return this.findByCid(_)
                },
                findByIndex: function(a) {
                    return this._views[a]
                },
                findIndexByView: function(a) {
                    return this._views.indexOf(a)
                },
                findByCid: function(a) {
                    return this._viewsByCid[a]
                },
                hasView: function(a) {
                    return !!this.findByCid(a.cid)
                },
                _remove: function(a) {
                    if (!!this._viewsByCid[a.cid]) {
                        a.model && delete this._indexByModel[a.model.cid], delete this._viewsByCid[a.cid];
                        var _ = this.findIndexByView(a);
                        this._views.splice(_, 1), this._updateLength()
                    }
                },
                _updateLength: function() {
                    this.length = this._views.length
                }
            });
            var Dr = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "emptyView", "emptyViewOptions", "events", "modelEvents", "sortWithCollection", "triggers", "ui", "viewComparator", "viewFilter"],
                Ci = n.View.extend({
                    sortWithCollection: !0,
                    constructor: function(a) {
                        this._setOptions(a), this.mergeOptions(a, Dr), oe(this), this.once("render", this._initialEvents), this._initChildViewStorage(), this._initBehaviors();
                        var _ = Array.prototype.slice.call(arguments);
                        _[0] = this.options, n.View.prototype.constructor.apply(this, _), this.getEmptyRegion(), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                    },
                    _initChildViewStorage: function() {
                        this.children = new sn
                    },
                    getEmptyRegion: function() {
                        return this._emptyRegion && !this._emptyRegion.isDestroyed() ? this._emptyRegion : (this._emptyRegion = new pe({
                            el: this.el,
                            replaceElement: !1
                        }), this._emptyRegion._parentView = this, this._emptyRegion)
                    },
                    _initialEvents: function() {
                        this.listenTo(this.collection, {
                            sort: this._onCollectionSort,
                            reset: this._onCollectionReset,
                            update: this._onCollectionUpdate
                        })
                    },
                    _onCollectionSort: function(a, _) {
                        var O = _.add,
                            Q = _.merge,
                            _e = _.remove;
                        !this.sortWithCollection || this.viewComparator === !1 || O || _e || Q || this.sort()
                    },
                    _onCollectionReset: function() {
                        this.render()
                    },
                    _onCollectionUpdate: function(a, _) {
                        var O = _.changes,
                            Q = O.removed.length && this._removeChildModels(O.removed);
                        this._addedViews = O.added.length && this._addChildModels(O.added), this._detachChildren(Q), this._showChildren(), this._removeChildViews(Q)
                    },
                    _removeChildModels: function(a) {
                        var _ = this;
                        return i.reduce(a, function(O, Q) {
                            var _e = _._removeChildModel(Q);
                            return _e && O.push(_e), O
                        }, [])
                    },
                    _removeChildModel: function(a) {
                        var _ = this.children.findByModel(a);
                        return _ && this._removeChild(_), _
                    },
                    _removeChild: function(a) {
                        this.triggerMethod("before:remove:child", this, a), this.children._remove(a), this.triggerMethod("remove:child", this, a)
                    },
                    _addChildModels: function(a) {
                        return i.map(a, i.bind(this._addChildModel, this))
                    },
                    _addChildModel: function(a) {
                        var _ = this._createChildView(a);
                        return this._addChild(_), _
                    },
                    _createChildView: function(a) {
                        var _ = this._getChildView(a),
                            O = this._getChildViewOptions(a),
                            Q = this.buildChildView(a, _, O);
                        return Q
                    },
                    _addChild: function(a, _) {
                        this.triggerMethod("before:add:child", this, a), this._setupChildView(a), this.children._add(a, _), this.triggerMethod("add:child", this, a)
                    },
                    _getChildView: function(a) {
                        var _ = this.childView;
                        if (!_) throw new we({
                            name: "NoChildViewError",
                            message: 'A "childView" must be specified'
                        });
                        if (_ = this._getView(_, a), !_) throw new we({
                            name: "InvalidChildViewError",
                            message: '"childView" must be a view class or a function that returns a view class'
                        });
                        return _
                    },
                    _getView: function(a, _) {
                        if (a.prototype instanceof n.View || a === n.View) return a;
                        if (i.isFunction(a)) return a.call(this, _)
                    },
                    _getChildViewOptions: function(a) {
                        return i.isFunction(this.childViewOptions) ? this.childViewOptions(a) : this.childViewOptions
                    },
                    buildChildView: function(a, _, O) {
                        var Q = i.extend({
                            model: a
                        }, O);
                        return new _(Q)
                    },
                    _setupChildView: function(a) {
                        oe(a), a.on("destroy", this.removeChildView, this), this._proxyChildViewEvents(a)
                    },
                    _getImmediateChildren: function() {
                        return this.children._views
                    },
                    setElement: function() {
                        return n.View.prototype.setElement.apply(this, arguments), this._isAttached = T(this.el), this
                    },
                    render: function() {
                        return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._destroyChildren(), this.children._init(), this.collection && this._addChildModels(this.collection.models), this._showChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                    },
                    sort: function() {
                        return this._isDestroyed ? this : this.children.length ? (this._showChildren(), this) : this
                    },
                    _showChildren: function() {
                        if (this.isEmpty()) {
                            this._showEmptyView();
                            return
                        }
                        this._sortChildren(), this.filter()
                    },
                    isEmpty: function(a) {
                        return a || !this.children.length
                    },
                    _showEmptyView: function() {
                        var a = this._getEmptyView();
                        if (!!a) {
                            var _ = this._getEmptyViewOptions(),
                                O = this.getEmptyRegion();
                            O.show(new a(_))
                        }
                    },
                    _getEmptyView: function() {
                        var a = this.emptyView;
                        if (!!a) return this._getView(a)
                    },
                    _destroyEmptyView: function() {
                        var a = this.getEmptyRegion();
                        a.hasView() && a.empty()
                    },
                    _getEmptyViewOptions: function() {
                        var a = this.emptyViewOptions || this.childViewOptions;
                        return i.isFunction(a) ? a.call(this) : a
                    },
                    _sortChildren: function() {
                        var a = this.getComparator();
                        !a || (delete this._addedViews, this.triggerMethod("before:sort", this), this.children._sort(a, this), this.triggerMethod("sort", this))
                    },
                    setComparator: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                            O = _.preventRender,
                            Q = this.viewComparator !== a,
                            _e = Q && !O;
                        return this.viewComparator = a, _e && this.sort(), this
                    },
                    removeComparator: function(a) {
                        return this.setComparator(null, a)
                    },
                    getComparator: function() {
                        return this.viewComparator ? this.viewComparator : !this.sortWithCollection || this.viewComparator === !1 || !this.collection ? !1 : this._viewComparator
                    },
                    _viewComparator: function(a) {
                        return this.collection.indexOf(a.model)
                    },
                    filter: function() {
                        if (this._isDestroyed) return this;
                        if (!this.children.length) return this;
                        var a = this._filterChildren();
                        return this._renderChildren(a), this
                    },
                    _filterChildren: function() {
                        var a = this,
                            _ = this._getFilter(),
                            O = this._addedViews;
                        if (delete this._addedViews, !_) return O || this.children._views;
                        this.triggerMethod("before:filter", this);
                        var Q = [],
                            _e = [];
                        return i.each(this.children._views, function(He, It, Xt) {
                            (_.call(a, He, It, Xt) ? Q : _e).push(He)
                        }), this._detachChildren(_e), this.triggerMethod("filter", this, Q, _e), Q
                    },
                    _getFilter: function() {
                        var a = this.getFilter();
                        if (!a) return !1;
                        if (i.isFunction(a)) return a;
                        if (i.isObject(a)) {
                            var _ = i.matches(a);
                            return function(O) {
                                return _(O.model && O.model.attributes)
                            }
                        }
                        if (i.isString(a)) return function(O) {
                            return O.model && O.model.get(a)
                        };
                        throw new we({
                            name: "InvalidViewFilterError",
                            message: '"viewFilter" must be a function, predicate object literal, a string indicating a model attribute, or falsy'
                        })
                    },
                    getFilter: function() {
                        return this.viewFilter
                    },
                    setFilter: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                            O = _.preventRender,
                            Q = this.viewFilter !== a,
                            _e = Q && !O;
                        return this.viewFilter = a, _e && this.filter(), this
                    },
                    removeFilter: function(a) {
                        return this.setFilter(null, a)
                    },
                    _detachChildren: function(a) {
                        i.each(a, i.bind(this._detachChildView, this))
                    },
                    _detachChildView: function(a) {
                        var _ = a._isAttached && this.monitorViewEvents !== !1;
                        _ && P(a, "before:detach", a), this.detachHtml(a), _ && (a._isAttached = !1, P(a, "detach", a))
                    },
                    detachHtml: function(a) {
                        this.Dom.detachEl(a.el, a.$el)
                    },
                    _renderChildren: function(a) {
                        if (this.isEmpty(!a.length)) {
                            this._showEmptyView();
                            return
                        }
                        this._destroyEmptyView(), this.triggerMethod("before:render:children", this, a);
                        var _ = this._getBuffer(a);
                        this._attachChildren(_, a), this.triggerMethod("render:children", this, a)
                    },
                    _attachChildren: function(a, _) {
                        var O = this._isAttached && this.monitorViewEvents !== !1;
                        _ = O ? _ : [], i.each(_, function(Q) {
                            Q._isAttached || P(Q, "before:attach", Q)
                        }), this.attachHtml(a), i.each(_, function(Q) {
                            Q._isAttached || (Q._isAttached = !0, P(Q, "attach", Q))
                        })
                    },
                    _getBuffer: function(a) {
                        var _ = this,
                            O = this.Dom.createBuffer();
                        return i.each(a, function(Q) {
                            M(Q), _.Dom.appendContents(O, Q.el, {
                                _$contents: Q.$el
                            })
                        }), O
                    },
                    attachHtml: function(a) {
                        this.Dom.appendContents(this.el, a, {
                            _$el: this.$el
                        })
                    },
                    swapChildViews: function(a, _) {
                        if (!this.children.hasView(a) || !this.children.hasView(_)) throw new we({
                            name: "ChildSwapError",
                            message: "Both views must be children of the collection view"
                        });
                        return this.children._swap(a, _), this.Dom.swapEl(a.el, _.el), this.Dom.hasEl(this.el, a.el) !== this.Dom.hasEl(this.el, _.el) && this.filter(), this
                    },
                    addChildView: function(a, _) {
                        return !a || a._isDestroyed || ((!_ || _ >= this.children.length) && (this._addedViews = [a]), this._addChild(a, _), this._showChildren()), a
                    },
                    detachChildView: function(a) {
                        return this.removeChildView(a, {
                            shouldDetach: !0
                        }), a
                    },
                    removeChildView: function(a, _) {
                        return a && (this._removeChildView(a, _), this._removeChild(a), this.isEmpty() && this._showEmptyView(), a)
                    },
                    _removeChildViews: function(a) {
                        i.each(a, i.bind(this._removeChildView, this))
                    },
                    _removeChildView: function(a) {
                        var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                            O = _.shouldDetach;
                        a.off("destroy", this.removeChildView, this), O ? this._detachChildView(a) : this._destroyChildView(a), this.stopListening(a)
                    },
                    _destroyChildView: function(a) {
                        a._isDestroyed || (a._shouldDisableEvents = this.monitorViewEvents === !1, G(a))
                    },
                    _removeChildren: function() {
                        this._destroyChildren();
                        var a = this.getEmptyRegion();
                        a.destroy(), delete this._addedViews
                    },
                    _destroyChildren: function() {
                        !this.children || !this.children.length || (this.triggerMethod("before:destroy:children", this), this.monitorViewEvents === !1 && this.Dom.detachContents(this.el, this.$el), i.each(this.children._views, i.bind(this._removeChildView, this)), this.triggerMethod("destroy:children", this))
                    }
                }, {
                    setDomApi: q
                });
            i.extend(Ci.prototype, W);
            var zi = ["childViewContainer", "template", "templateContext"],
                _i = kn.extend({
                    constructor: function(a) {
                        S("CompositeView is deprecated. Convert to View at your earliest convenience"), this.mergeOptions(a, zi), kn.prototype.constructor.apply(this, arguments)
                    },
                    _initialEvents: function() {
                        this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.renderChildren), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                    },
                    _getChildView: function(a) {
                        var _ = this.childView;
                        if (!_) return this.constructor;
                        if (_ = this._getView(_, a), !_) throw new we({
                            name: "InvalidChildViewError",
                            message: '"childView" must be a view class or a function that returns a view class'
                        });
                        return _
                    },
                    serializeData: function() {
                        return this.serializeModel()
                    },
                    render: function() {
                        return this._isDestroyed ? this : (this._isRendering = !0, this.resetChildViewContainer(), this.triggerMethod("before:render", this), this._renderTemplate(), this.bindUIElements(), this.renderChildren(), this._isRendering = !1, this._isRendered = !0, this.triggerMethod("render", this), this)
                    },
                    renderChildren: function() {
                        (this._isRendered || this._isRendering) && kn.prototype._renderChildren.call(this)
                    },
                    attachBuffer: function(a, _) {
                        var O = this.getChildViewContainer(a);
                        this.Dom.appendContents(O[0], _, {
                            _$el: O
                        })
                    },
                    _insertAfter: function(a) {
                        var _ = this.getChildViewContainer(this, a);
                        this.Dom.appendContents(_[0], a.el, {
                            _$el: _,
                            _$contents: a.$el
                        })
                    },
                    _appendReorderedChildren: function(a) {
                        var _ = this.getChildViewContainer(this);
                        this.Dom.appendContents(_[0], a, {
                            _$el: _
                        })
                    },
                    getChildViewContainer: function(a, _) {
                        if (a.$childViewContainer) return a.$childViewContainer;
                        var O = void 0,
                            Q = a.childViewContainer;
                        if (Q) {
                            var _e = i.result(a, "childViewContainer");
                            if (_e.charAt(0) === "@" && a.ui ? O = a.ui[_e.substr(4)] : O = this.$(_e), O.length <= 0) throw new we({
                                name: "ChildViewContainerMissingError",
                                message: 'The specified "childViewContainer" was not found: ' + a.childViewContainer
                            })
                        } else O = a.$el;
                        return a.$childViewContainer = O, O
                    },
                    resetChildViewContainer: function() {
                        this.$childViewContainer && (this.$childViewContainer = void 0)
                    }
                }),
                xi = i.pick(Pn.prototype, "serializeModel", "getTemplate", "_renderTemplate", "_renderHtml", "mixinTemplateContext", "attachElContent");
            i.extend(_i.prototype, xi);
            var Gi = ["collectionEvents", "events", "modelEvents", "triggers", "ui"],
                Hi = g.extend({
                    cidPrefix: "mnb",
                    constructor: function(a, _) {
                        this.view = _, this.defaults && S("Behavior defaults are deprecated. For similar functionality set options on the Behavior class."), this.defaults = i.clone(i.result(this, "defaults", {})), this._setOptions(i.extend({}, this.defaults, a)), this.mergeOptions(this.options, Gi), this.ui = i.extend({}, i.result(this, "ui"), i.result(_, "ui")), g.apply(this, arguments)
                    },
                    $: function() {
                        return this.view.$.apply(this.view, arguments)
                    },
                    destroy: function() {
                        return this.stopListening(), this.view._removeBehavior(this), this
                    },
                    proxyViewProperties: function() {
                        return this.$el = this.view.$el, this.el = this.view.el, this
                    },
                    bindUIElements: function() {
                        return this._bindUIElements(), this
                    },
                    unbindUIElements: function() {
                        return this._unbindUIElements(), this
                    },
                    getUI: function(a) {
                        return this._getUI(a)
                    },
                    delegateEntityEvents: function() {
                        return this._delegateEntityEvents(this.view.model, this.view.collection), this
                    },
                    undelegateEntityEvents: function() {
                        return this._undelegateEntityEvents(this.view.model, this.view.collection), this
                    },
                    getEvents: function() {
                        var a = this,
                            _ = this.normalizeUIKeys(i.result(this, "events"));
                        return i.reduce(_, function(O, Q, _e) {
                            return i.isFunction(Q) || (Q = a[Q]), Q && (_e = De(_e, a.cid), O[_e] = i.bind(Q, a)), O
                        }, {})
                    },
                    getTriggers: function() {
                        if (!!this.triggers) {
                            var a = this.normalizeUIKeys(i.result(this, "triggers"));
                            return this._getViewTriggers(this.view, a)
                        }
                    }
                });
            i.extend(Hi.prototype, ke, ct, Je);
            var mn = ["region", "regionClass"],
                Wi = g.extend({
                    cidPrefix: "mna",
                    constructor: function(a) {
                        this._setOptions(a), this.mergeOptions(a, mn), this._initRegion(), g.prototype.constructor.apply(this, arguments)
                    },
                    regionClass: pe,
                    _initRegion: function() {
                        var a = this.region;
                        if (!!a) {
                            var _ = {
                                regionClass: this.regionClass
                            };
                            this._region = $e(a, _)
                        }
                    },
                    getRegion: function() {
                        return this._region
                    },
                    showView: function(a) {
                        for (var _ = this.getRegion(), O = arguments.length, Q = Array(O > 1 ? O - 1 : 0), _e = 1; _e < O; _e++) Q[_e - 1] = arguments[_e];
                        return _.show.apply(_, [a].concat(Q))
                    },
                    getView: function() {
                        return this.getRegion().currentView
                    },
                    start: function(a) {
                        return this.triggerMethod("before:start", this, a), this.triggerMethod("start", this, a), this
                    }
                }),
                Ei = ["appRoutes", "controller"],
                zn = n.Router.extend({
                    constructor: function(a) {
                        this._setOptions(a), this.mergeOptions(a, Ei), n.Router.apply(this, arguments);
                        var _ = this.appRoutes,
                            O = this._getController();
                        this.processAppRoutes(O, _), this.on("route", this._processOnRoute, this)
                    },
                    appRoute: function(a, _) {
                        var O = this._getController();
                        return this._addAppRoute(O, a, _), this
                    },
                    _processOnRoute: function(a, _) {
                        if (i.isFunction(this.onRoute)) {
                            var O = i.invert(this.appRoutes)[a];
                            this.onRoute(a, O, _)
                        }
                    },
                    processAppRoutes: function(a, _) {
                        var O = this;
                        if (!_) return this;
                        var Q = i.keys(_).reverse();
                        return i.each(Q, function(_e) {
                            O._addAppRoute(a, _e, _[_e])
                        }), this
                    },
                    _getController: function() {
                        return this.controller
                    },
                    _addAppRoute: function(a, _, O) {
                        var Q = a[O];
                        if (!Q) throw new we('Method "' + O + '" was not found on the controller');
                        this.route(_, O, i.bind(Q, a))
                    },
                    triggerMethod: v
                });
            i.extend(zn.prototype, Ht);

            function Xi() {
                throw new we({
                    message: "You must define where your behaviors are stored.",
                    url: "marionette.behaviors.md#behaviorslookup"
                })
            }
            var Si = n.Marionette,
                et = n.Marionette = {};
            return et.noConflict = function() {
                return n.Marionette = Si, this
            }, et.bindEvents = m(Se), et.unbindEvents = m(Te), et.bindRequests = m(Ke), et.unbindRequests = m(dt), et.mergeOptions = m(D), et.getOption = m(V), et.normalizeMethods = m(Y), et.extend = C, et.isNodeAttached = T, et.deprecate = S, et.triggerMethod = m(v), et.triggerMethodOn = P, et.isEnabled = rt, et.setEnabled = Ct, et.monitorViewEvents = oe, et.Behaviors = {}, et.Behaviors.behaviorsLookup = Xi, et.Application = Wi, et.AppRouter = zn, et.Renderer = Ye, et.TemplateCache = k, et.View = Pn, et.CollectionView = kn, et.NextCollectionView = Ci, et.CompositeView = _i, et.Behavior = Hi, et.Region = pe, et.Error = we, et.Object = g, et.DEV_MODE = !1, et.FEATURES = Me, et.VERSION = d, et.DomApi = $, et.setDomApi = function(y) {
                kn.setDomApi(y), _i.setDomApi(y), Ci.setDomApi(y), pe.setDomApi(y), Pn.setDomApi(y)
            }, et
        }), vt && vt.Marionette && (vt.Mn = vt.Marionette)
    })(Fc);
    const xt = Fc.exports;
    class Xh {
        static setup() {
            gtag("config", "G-V1QJVQMYF1", {
                send_page_view: !1
            })
        }
        static pageView(e) {
            gtag("event", "page_view", {
                page_title: e,
                page_location: `https://jackbox.tv/${e}`
            })
        }
        static gameStarted(e, n) {
            const i = {
                tag: e
            };
            n.isUGC !== void 0 && (i.is_ugc = n.isUGC), n.isSequel !== void 0 && (i.is_sequel = n.isSequel), n.locale !== void 0 && (i.locale = n.locale), n.mode !== void 0 && (i.mode = n.mode), n.numberOfPlayer !== void 0 && (i.number_of_players = n.numberOfPlayer), gtag("event", "game_start", i)
        }
        static bannerClick(e, n) {
            gtag("event", "banner_click", {
                url: e,
                location: n
            })
        }
        static externalLinkClick(e, n) {
            gtag("event", "external_link_click", {
                url: e,
                location: n
            })
        }
        static galleryClick(e, n) {
            gtag("event", "gallery_click", {
                category_id: e,
                location: n
            })
        }
        static galleryImpression(e, n) {
            gtag("event", "gallery_impression", {
                category_id: e,
                location: n
            })
        }
        static moderatorConnected(e) {
            gtag("event", "moderator_connected", {
                tag: e
            })
        }
        static itemModerated(e, n) {
            gtag("event", "item_moderated", {
                tag: e,
                was_rejected: n
            })
        }
        static playerKicked(e, n) {
            gtag("event", "player_kicked", {
                tag: e,
                is_lobby: n
            })
        }
    }

    function Yh() {
        this.__data__ = [], this.size = 0
    }
    var Kh = Yh;

    function Jh(t, e) {
        return t === e || t !== t && e !== e
    }
    var mo = Jh,
        Qh = mo;

    function Zh(t, e) {
        for (var n = t.length; n--;)
            if (Qh(t[n][0], e)) return n;
        return -1
    }
    var vo = Zh,
        ed = vo,
        td = Array.prototype,
        nd = td.splice;

    function id(t) {
        var e = this.__data__,
            n = ed(e, t);
        if (n < 0) return !1;
        var i = e.length - 1;
        return n == i ? e.pop() : nd.call(e, n, 1), --this.size, !0
    }
    var rd = id,
        sd = vo;

    function od(t) {
        var e = this.__data__,
            n = sd(e, t);
        return n < 0 ? void 0 : e[n][1]
    }
    var ad = od,
        ld = vo;

    function cd(t) {
        return ld(this.__data__, t) > -1
    }
    var ud = cd,
        hd = vo;

    function dd(t, e) {
        var n = this.__data__,
            i = hd(n, t);
        return i < 0 ? (++this.size, n.push([t, e])) : n[i][1] = e, this
    }
    var fd = dd,
        pd = Kh,
        gd = rd,
        md = ad,
        vd = ud,
        yd = fd;

    function Er(t) {
        var e = -1,
            n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var i = t[e];
            this.set(i[0], i[1])
        }
    }
    Er.prototype.clear = pd;
    Er.prototype.delete = gd;
    Er.prototype.get = md;
    Er.prototype.has = vd;
    Er.prototype.set = yd;
    var yo = Er,
        bd = yo;

    function wd() {
        this.__data__ = new bd, this.size = 0
    }
    var Cd = wd;

    function _d(t) {
        var e = this.__data__,
            n = e.delete(t);
        return this.size = e.size, n
    }
    var xd = _d;

    function Ed(t) {
        return this.__data__.get(t)
    }
    var Sd = Ed;

    function kd(t) {
        return this.__data__.has(t)
    }
    var Td = kd,
        Ad = typeof vt == "object" && vt && vt.Object === Object && vt,
        Uc = Ad,
        Od = Uc,
        Rd = typeof self == "object" && self && self.Object === Object && self,
        Id = Od || Rd || Function("return this")(),
        Sr = Id,
        Dd = Sr,
        Md = Dd.Symbol,
        zc = Md,
        Ml = zc,
        Gc = Object.prototype,
        Ld = Gc.hasOwnProperty,
        Pd = Gc.toString,
        Zr = Ml ? Ml.toStringTag : void 0;

    function $d(t) {
        var e = Ld.call(t, Zr),
            n = t[Zr];
        try {
            t[Zr] = void 0;
            var i = !0
        } catch {}
        var o = Pd.call(t);
        return i && (e ? t[Zr] = n : delete t[Zr]), o
    }
    var Nd = $d,
        Vd = Object.prototype,
        Bd = Vd.toString;

    function qd(t) {
        return Bd.call(t)
    }
    var jd = qd,
        Ll = zc,
        Fd = Nd,
        Ud = jd,
        zd = "[object Null]",
        Gd = "[object Undefined]",
        Pl = Ll ? Ll.toStringTag : void 0;

    function Hd(t) {
        return t == null ? t === void 0 ? Gd : zd : Pl && Pl in Object(t) ? Fd(t) : Ud(t)
    }
    var bo = Hd;

    function Wd(t) {
        var e = typeof t;
        return t != null && (e == "object" || e == "function")
    }
    var Fi = Wd,
        Xd = bo,
        Yd = Fi,
        Kd = "[object AsyncFunction]",
        Jd = "[object Function]",
        Qd = "[object GeneratorFunction]",
        Zd = "[object Proxy]";

    function ef(t) {
        if (!Yd(t)) return !1;
        var e = Xd(t);
        return e == Jd || e == Qd || e == Kd || e == Zd
    }
    var Ja = ef,
        tf = Sr,
        nf = tf["__core-js_shared__"],
        rf = nf,
        la = rf,
        $l = function() {
            var t = /[^.]+$/.exec(la && la.keys && la.keys.IE_PROTO || "");
            return t ? "Symbol(src)_1." + t : ""
        }();

    function sf(t) {
        return !!$l && $l in t
    }
    var of = sf, af = Function.prototype, lf = af.toString;

    function cf(t) {
        if (t != null) {
            try {
                return lf.call(t)
            } catch {}
            try {
                return t + ""
            } catch {}
        }
        return ""
    }
    var uf = cf,
        hf = Ja,
        df = of,
        ff = Fi,
        pf = uf,
        gf = /[\\^$.*+?()[\]{}|]/g,
        mf = /^\[object .+?Constructor\]$/,
        vf = Function.prototype,
        yf = Object.prototype,
        bf = vf.toString,
        wf = yf.hasOwnProperty,
        Cf = RegExp("^" + bf.call(wf).replace(gf, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");

    function _f(t) {
        if (!ff(t) || df(t)) return !1;
        var e = hf(t) ? Cf : mf;
        return e.test(pf(t))
    }
    var xf = _f;

    function Ef(t, e) {
        return t == null ? void 0 : t[e]
    }
    var Sf = Ef,
        kf = xf,
        Tf = Sf;

    function Af(t, e) {
        var n = Tf(t, e);
        return kf(n) ? n : void 0
    }
    var Qa = Af,
        Of = Qa,
        Rf = Sr,
        If = Of(Rf, "Map"),
        Hc = If,
        Df = Qa,
        Mf = Df(Object, "create"),
        wo = Mf,
        Nl = wo;

    function Lf() {
        this.__data__ = Nl ? Nl(null) : {}, this.size = 0
    }
    var Pf = Lf;

    function $f(t) {
        var e = this.has(t) && delete this.__data__[t];
        return this.size -= e ? 1 : 0, e
    }
    var Nf = $f,
        Vf = wo,
        Bf = "__lodash_hash_undefined__",
        qf = Object.prototype,
        jf = qf.hasOwnProperty;

    function Ff(t) {
        var e = this.__data__;
        if (Vf) {
            var n = e[t];
            return n === Bf ? void 0 : n
        }
        return jf.call(e, t) ? e[t] : void 0
    }
    var Uf = Ff,
        zf = wo,
        Gf = Object.prototype,
        Hf = Gf.hasOwnProperty;

    function Wf(t) {
        var e = this.__data__;
        return zf ? e[t] !== void 0 : Hf.call(e, t)
    }
    var Xf = Wf,
        Yf = wo,
        Kf = "__lodash_hash_undefined__";

    function Jf(t, e) {
        var n = this.__data__;
        return this.size += this.has(t) ? 0 : 1, n[t] = Yf && e === void 0 ? Kf : e, this
    }
    var Qf = Jf,
        Zf = Pf,
        ep = Nf,
        tp = Uf,
        np = Xf,
        ip = Qf;

    function kr(t) {
        var e = -1,
            n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var i = t[e];
            this.set(i[0], i[1])
        }
    }
    kr.prototype.clear = Zf;
    kr.prototype.delete = ep;
    kr.prototype.get = tp;
    kr.prototype.has = np;
    kr.prototype.set = ip;
    var rp = kr,
        Vl = rp,
        sp = yo,
        op = Hc;

    function ap() {
        this.size = 0, this.__data__ = {
            hash: new Vl,
            map: new(op || sp),
            string: new Vl
        }
    }
    var lp = ap;

    function cp(t) {
        var e = typeof t;
        return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null
    }
    var up = cp,
        hp = up;

    function dp(t, e) {
        var n = t.__data__;
        return hp(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map
    }
    var Co = dp,
        fp = Co;

    function pp(t) {
        var e = fp(this, t).delete(t);
        return this.size -= e ? 1 : 0, e
    }
    var gp = pp,
        mp = Co;

    function vp(t) {
        return mp(this, t).get(t)
    }
    var yp = vp,
        bp = Co;

    function wp(t) {
        return bp(this, t).has(t)
    }
    var Cp = wp,
        _p = Co;

    function xp(t, e) {
        var n = _p(this, t),
            i = n.size;
        return n.set(t, e), this.size += n.size == i ? 0 : 1, this
    }
    var Ep = xp,
        Sp = lp,
        kp = gp,
        Tp = yp,
        Ap = Cp,
        Op = Ep;

    function Tr(t) {
        var e = -1,
            n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var i = t[e];
            this.set(i[0], i[1])
        }
    }
    Tr.prototype.clear = Sp;
    Tr.prototype.delete = kp;
    Tr.prototype.get = Tp;
    Tr.prototype.has = Ap;
    Tr.prototype.set = Op;
    var Rp = Tr,
        Ip = yo,
        Dp = Hc,
        Mp = Rp,
        Lp = 200;

    function Pp(t, e) {
        var n = this.__data__;
        if (n instanceof Ip) {
            var i = n.__data__;
            if (!Dp || i.length < Lp - 1) return i.push([t, e]), this.size = ++n.size, this;
            n = this.__data__ = new Mp(i)
        }
        return n.set(t, e), this.size = n.size, this
    }
    var $p = Pp,
        Np = yo,
        Vp = Cd,
        Bp = xd,
        qp = Sd,
        jp = Td,
        Fp = $p;

    function Ar(t) {
        var e = this.__data__ = new Np(t);
        this.size = e.size
    }
    Ar.prototype.clear = Vp;
    Ar.prototype.delete = Bp;
    Ar.prototype.get = qp;
    Ar.prototype.has = jp;
    Ar.prototype.set = Fp;
    var Up = Ar,
        zp = Qa,
        Gp = function() {
            try {
                var t = zp(Object, "defineProperty");
                return t({}, "", {}), t
            } catch {}
        }(),
        Wc = Gp,
        Bl = Wc;

    function Hp(t, e, n) {
        e == "__proto__" && Bl ? Bl(t, e, {
            configurable: !0,
            enumerable: !0,
            value: n,
            writable: !0
        }) : t[e] = n
    }
    var Za = Hp,
        Wp = Za,
        Xp = mo;

    function Yp(t, e, n) {
        (n !== void 0 && !Xp(t[e], n) || n === void 0 && !(e in t)) && Wp(t, e, n)
    }
    var Xc = Yp;

    function Kp(t) {
        return function(e, n, i) {
            for (var o = -1, d = Object(e), m = i(e), C = m.length; C--;) {
                var S = m[t ? C : ++o];
                if (n(d[S], S, d) === !1) break
            }
            return e
        }
    }
    var Jp = Kp,
        Qp = Jp,
        Zp = Qp(),
        eg = Zp,
        Ia = {
            exports: {}
        };
    (function(t, e) {
        var n = Sr,
            i = e && !e.nodeType && e,
            o = i && !0 && t && !t.nodeType && t,
            d = o && o.exports === i,
            m = d ? n.Buffer : void 0,
            C = m ? m.allocUnsafe : void 0;

        function S(T, D) {
            if (D) return T.slice();
            var V = T.length,
                Y = C ? C(V) : new T.constructor(V);
            return T.copy(Y), Y
        }
        t.exports = S
    })(Ia, Ia.exports);
    var tg = Sr,
        ng = tg.Uint8Array,
        ig = ng,
        ql = ig;

    function rg(t) {
        var e = new t.constructor(t.byteLength);
        return new ql(e).set(new ql(t)), e
    }
    var sg = rg,
        og = sg;

    function ag(t, e) {
        var n = e ? og(t.buffer) : t.buffer;
        return new t.constructor(n, t.byteOffset, t.length)
    }
    var lg = ag;

    function cg(t, e) {
        var n = -1,
            i = t.length;
        for (e || (e = Array(i)); ++n < i;) e[n] = t[n];
        return e
    }
    var ug = cg,
        hg = Fi,
        jl = Object.create,
        dg = function() {
            function t() {}
            return function(e) {
                if (!hg(e)) return {};
                if (jl) return jl(e);
                t.prototype = e;
                var n = new t;
                return t.prototype = void 0, n
            }
        }(),
        fg = dg;

    function pg(t, e) {
        return function(n) {
            return t(e(n))
        }
    }
    var gg = pg,
        mg = gg,
        vg = mg(Object.getPrototypeOf, Object),
        Yc = vg,
        yg = Object.prototype;

    function bg(t) {
        var e = t && t.constructor,
            n = typeof e == "function" && e.prototype || yg;
        return t === n
    }
    var Kc = bg,
        wg = fg,
        Cg = Yc,
        _g = Kc;

    function xg(t) {
        return typeof t.constructor == "function" && !_g(t) ? wg(Cg(t)) : {}
    }
    var Eg = xg;

    function Sg(t) {
        return t != null && typeof t == "object"
    }
    var vs = Sg,
        kg = bo,
        Tg = vs,
        Ag = "[object Arguments]";

    function Og(t) {
        return Tg(t) && kg(t) == Ag
    }
    var Rg = Og,
        Fl = Rg,
        Ig = vs,
        Jc = Object.prototype,
        Dg = Jc.hasOwnProperty,
        Mg = Jc.propertyIsEnumerable,
        Lg = Fl(function() {
            return arguments
        }()) ? Fl : function(t) {
            return Ig(t) && Dg.call(t, "callee") && !Mg.call(t, "callee")
        },
        Qc = Lg,
        Pg = Array.isArray,
        Zc = Pg,
        $g = 9007199254740991;

    function Ng(t) {
        return typeof t == "number" && t > -1 && t % 1 == 0 && t <= $g
    }
    var eu = Ng,
        Vg = Ja,
        Bg = eu;

    function qg(t) {
        return t != null && Bg(t.length) && !Vg(t)
    }
    var el = qg,
        jg = el,
        Fg = vs;

    function Ug(t) {
        return Fg(t) && jg(t)
    }
    var zg = Ug,
        ro = {
            exports: {}
        };

    function Gg() {
        return !1
    }
    var Hg = Gg;
    (function(t, e) {
        var n = Sr,
            i = Hg,
            o = e && !e.nodeType && e,
            d = o && !0 && t && !t.nodeType && t,
            m = d && d.exports === o,
            C = m ? n.Buffer : void 0,
            S = C ? C.isBuffer : void 0,
            T = S || i;
        t.exports = T
    })(ro, ro.exports);
    var Wg = bo,
        Xg = Yc,
        Yg = vs,
        Kg = "[object Object]",
        Jg = Function.prototype,
        Qg = Object.prototype,
        tu = Jg.toString,
        Zg = Qg.hasOwnProperty,
        em = tu.call(Object);

    function tm(t) {
        if (!Yg(t) || Wg(t) != Kg) return !1;
        var e = Xg(t);
        if (e === null) return !0;
        var n = Zg.call(e, "constructor") && e.constructor;
        return typeof n == "function" && n instanceof n && tu.call(n) == em
    }
    var nm = tm,
        im = bo,
        rm = eu,
        sm = vs,
        om = "[object Arguments]",
        am = "[object Array]",
        lm = "[object Boolean]",
        cm = "[object Date]",
        um = "[object Error]",
        hm = "[object Function]",
        dm = "[object Map]",
        fm = "[object Number]",
        pm = "[object Object]",
        gm = "[object RegExp]",
        mm = "[object Set]",
        vm = "[object String]",
        ym = "[object WeakMap]",
        bm = "[object ArrayBuffer]",
        wm = "[object DataView]",
        Cm = "[object Float32Array]",
        _m = "[object Float64Array]",
        xm = "[object Int8Array]",
        Em = "[object Int16Array]",
        Sm = "[object Int32Array]",
        km = "[object Uint8Array]",
        Tm = "[object Uint8ClampedArray]",
        Am = "[object Uint16Array]",
        Om = "[object Uint32Array]",
        Lt = {};
    Lt[Cm] = Lt[_m] = Lt[xm] = Lt[Em] = Lt[Sm] = Lt[km] = Lt[Tm] = Lt[Am] = Lt[Om] = !0;
    Lt[om] = Lt[am] = Lt[bm] = Lt[lm] = Lt[wm] = Lt[cm] = Lt[um] = Lt[hm] = Lt[dm] = Lt[fm] = Lt[pm] = Lt[gm] = Lt[mm] = Lt[vm] = Lt[ym] = !1;

    function Rm(t) {
        return sm(t) && rm(t.length) && !!Lt[im(t)]
    }
    var Im = Rm;

    function Dm(t) {
        return function(e) {
            return t(e)
        }
    }
    var Mm = Dm,
        Da = {
            exports: {}
        };
    (function(t, e) {
        var n = Uc,
            i = e && !e.nodeType && e,
            o = i && !0 && t && !t.nodeType && t,
            d = o && o.exports === i,
            m = d && n.process,
            C = function() {
                try {
                    var S = o && o.require && o.require("util").types;
                    return S || m && m.binding && m.binding("util")
                } catch {}
            }();
        t.exports = C
    })(Da, Da.exports);
    var Lm = Im,
        Pm = Mm,
        Ul = Da.exports,
        zl = Ul && Ul.isTypedArray,
        $m = zl ? Pm(zl) : Lm,
        nu = $m;

    function Nm(t, e) {
        if (!(e === "constructor" && typeof t[e] == "function") && e != "__proto__") return t[e]
    }
    var iu = Nm,
        Vm = Za,
        Bm = mo,
        qm = Object.prototype,
        jm = qm.hasOwnProperty;

    function Fm(t, e, n) {
        var i = t[e];
        (!(jm.call(t, e) && Bm(i, n)) || n === void 0 && !(e in t)) && Vm(t, e, n)
    }
    var Um = Fm,
        zm = Um,
        Gm = Za;

    function Hm(t, e, n, i) {
        var o = !n;
        n || (n = {});
        for (var d = -1, m = e.length; ++d < m;) {
            var C = e[d],
                S = i ? i(n[C], t[C], C, n, t) : void 0;
            S === void 0 && (S = t[C]), o ? Gm(n, C, S) : zm(n, C, S)
        }
        return n
    }
    var Wm = Hm;

    function Xm(t, e) {
        for (var n = -1, i = Array(t); ++n < t;) i[n] = e(n);
        return i
    }
    var Ym = Xm,
        Km = 9007199254740991,
        Jm = /^(?:0|[1-9]\d*)$/;

    function Qm(t, e) {
        var n = typeof t;
        return e = e == null ? Km : e, !!e && (n == "number" || n != "symbol" && Jm.test(t)) && t > -1 && t % 1 == 0 && t < e
    }
    var ru = Qm,
        Zm = Ym,
        ev = Qc,
        tv = Zc,
        nv = ro.exports,
        iv = ru,
        rv = nu,
        sv = Object.prototype,
        ov = sv.hasOwnProperty;

    function av(t, e) {
        var n = tv(t),
            i = !n && ev(t),
            o = !n && !i && nv(t),
            d = !n && !i && !o && rv(t),
            m = n || i || o || d,
            C = m ? Zm(t.length, String) : [],
            S = C.length;
        for (var T in t)(e || ov.call(t, T)) && !(m && (T == "length" || o && (T == "offset" || T == "parent") || d && (T == "buffer" || T == "byteLength" || T == "byteOffset") || iv(T, S))) && C.push(T);
        return C
    }
    var lv = av;

    function cv(t) {
        var e = [];
        if (t != null)
            for (var n in Object(t)) e.push(n);
        return e
    }
    var uv = cv,
        hv = Fi,
        dv = Kc,
        fv = uv,
        pv = Object.prototype,
        gv = pv.hasOwnProperty;

    function mv(t) {
        if (!hv(t)) return fv(t);
        var e = dv(t),
            n = [];
        for (var i in t) i == "constructor" && (e || !gv.call(t, i)) || n.push(i);
        return n
    }
    var vv = mv,
        yv = lv,
        bv = vv,
        wv = el;

    function Cv(t) {
        return wv(t) ? yv(t, !0) : bv(t)
    }
    var su = Cv,
        _v = Wm,
        xv = su;

    function Ev(t) {
        return _v(t, xv(t))
    }
    var Sv = Ev,
        Gl = Xc,
        kv = Ia.exports,
        Tv = lg,
        Av = ug,
        Ov = Eg,
        Hl = Qc,
        Wl = Zc,
        Rv = zg,
        Iv = ro.exports,
        Dv = Ja,
        Mv = Fi,
        Lv = nm,
        Pv = nu,
        Xl = iu,
        $v = Sv;

    function Nv(t, e, n, i, o, d, m) {
        var C = Xl(t, n),
            S = Xl(e, n),
            T = m.get(S);
        if (T) {
            Gl(t, n, T);
            return
        }
        var D = d ? d(C, S, n + "", t, e, m) : void 0,
            V = D === void 0;
        if (V) {
            var Y = Wl(S),
                ie = !Y && Iv(S),
                K = !Y && !ie && Pv(S);
            D = S, Y || ie || K ? Wl(C) ? D = C : Rv(C) ? D = Av(C) : ie ? (V = !1, D = kv(S, !0)) : K ? (V = !1, D = Tv(S, !0)) : D = [] : Lv(S) || Hl(S) ? (D = C, Hl(C) ? D = $v(C) : (!Mv(C) || Dv(C)) && (D = Ov(S))) : V = !1
        }
        V && (m.set(S, D), o(D, S, i, d, m), m.delete(S)), Gl(t, n, D)
    }
    var Vv = Nv,
        Bv = Up,
        qv = Xc,
        jv = eg,
        Fv = Vv,
        Uv = Fi,
        zv = su,
        Gv = iu;

    function ou(t, e, n, i, o) {
        t !== e && jv(e, function(d, m) {
            if (o || (o = new Bv), Uv(d)) Fv(t, e, m, n, ou, i, o);
            else {
                var C = i ? i(Gv(t, m), d, m + "", t, e, o) : void 0;
                C === void 0 && (C = d), qv(t, m, C)
            }
        }, zv)
    }
    var Hv = ou;

    function Wv(t) {
        return t
    }
    var au = Wv;

    function Xv(t, e, n) {
        switch (n.length) {
            case 0:
                return t.call(e);
            case 1:
                return t.call(e, n[0]);
            case 2:
                return t.call(e, n[0], n[1]);
            case 3:
                return t.call(e, n[0], n[1], n[2])
        }
        return t.apply(e, n)
    }
    var Yv = Xv,
        Kv = Yv,
        Yl = Math.max;

    function Jv(t, e, n) {
        return e = Yl(e === void 0 ? t.length - 1 : e, 0),
            function() {
                for (var i = arguments, o = -1, d = Yl(i.length - e, 0), m = Array(d); ++o < d;) m[o] = i[e + o];
                o = -1;
                for (var C = Array(e + 1); ++o < e;) C[o] = i[o];
                return C[e] = n(m), Kv(t, this, C)
            }
    }
    var Qv = Jv;

    function Zv(t) {
        return function() {
            return t
        }
    }
    var ey = Zv,
        ty = ey,
        Kl = Wc,
        ny = au,
        iy = Kl ? function(t, e) {
            return Kl(t, "toString", {
                configurable: !0,
                enumerable: !1,
                value: ty(e),
                writable: !0
            })
        } : ny,
        ry = iy,
        sy = 800,
        oy = 16,
        ay = Date.now;

    function ly(t) {
        var e = 0,
            n = 0;
        return function() {
            var i = ay(),
                o = oy - (i - n);
            if (n = i, o > 0) {
                if (++e >= sy) return arguments[0]
            } else e = 0;
            return t.apply(void 0, arguments)
        }
    }
    var cy = ly,
        uy = ry,
        hy = cy,
        dy = hy(uy),
        fy = dy,
        py = au,
        gy = Qv,
        my = fy;

    function vy(t, e) {
        return my(gy(t, e, py), t + "")
    }
    var yy = vy,
        by = mo,
        wy = el,
        Cy = ru,
        _y = Fi;

    function xy(t, e, n) {
        if (!_y(n)) return !1;
        var i = typeof e;
        return (i == "number" ? wy(n) && Cy(e, n.length) : i == "string" && e in n) ? by(n[e], t) : !1
    }
    var Ey = xy,
        Sy = yy,
        ky = Ey;

    function Ty(t) {
        return Sy(function(e, n) {
            var i = -1,
                o = n.length,
                d = o > 1 ? n[o - 1] : void 0,
                m = o > 2 ? n[2] : void 0;
            for (d = t.length > 3 && typeof d == "function" ? (o--, d) : void 0, m && ky(n[0], n[1], m) && (d = o < 3 ? void 0 : d, o = 1), e = Object(e); ++i < o;) {
                var C = n[i];
                C && t(e, C, i, d)
            }
            return e
        })
    }
    var Ay = Ty,
        Oy = Hv,
        Ry = Ay,
        Iy = Ry(function(t, e, n) {
            Oy(t, e, n)
        }),
        Dy = Iy;
    class Ma {
        static set(e) {
            if (e && this.isSupported(e)) {
                this.locale = e;
                return
            }
            this.locale = this.getPreferredDeviceLocale()
        }
        static getPreferredDeviceLocale() {
            const e = navigator.languages;
            for (let n = 0; n < e.length; n++)
                if (this.isSupported(e[n])) return e[n];
            return this.supported[0]
        }
        static isSupported(e) {
            return Object.values(this.supported).includes(e)
        }
        static mergeMessages(...e) {
            return Dy(e[0], ...e)
        }
    }
    it(Ma, "locale"), it(Ma, "supported", ["en", "fr", "it", "de", "es", "es-XL"]);
    const Il = class {
        static get serverUrl() {
            var n;
            const e = (n = this.getQueryParam("server")) != null ? n : this.getQueryParam("s");
            return !e || e === "live" ? window.location.hostname : e === "local" ? "https://localhost" : e.includes("localhost") ? e : `${e}.jackboxgames.com`
        }
        static get isCanvasSupported() {
            const e = document.createElement("canvas");
            return !!(e.getContext && e.getContext("2d"))
        }
        static toPrecision(e, n) {
            const i = 10 ** n;
            return Math.round((e + Number.EPSILON) * i) / i
        }
        static htmlUnescape(e) {
            return String(e).replace(/&quot;/gi, '"').replace(/&#39;/gi, "'").replace(/&lt;/gi, "<").replace(/&gt;/gi, ">").replace(/&amp;/gi, "&")
        }
        static htmlEscape(e) {
            return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        static sanitize(e) {
            const n = this.sanitizeInput(e).replace(/'/g, "\u2019");
            return this.htmlEscape(n).trim()
        }
        static sanitizeName(e) {
            return e.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF\u2026!?*$+\-'_ .,]/gi, "").replace(/'/g, "\u2019")
        }
        static sanitizeInput(e) {
            return e.replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF’]/gi, "")
        }
        static sanitizeEmoji(e) {
            return e.replace(/(\u00a9|\u00ae|[\u2000-\u2017]|[\u2020-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/, "")
        }
        static safeText(e) {
            const n = document.createElement("div");
            return n.textContent = e, n.innerHTML
        }
        static htmlTagsToBBCode(e, n) {
            if (!n.length) throw new Error("[Utils.htmlTagsToBBCode] No tag pairs were passed in");
            return n.reduce((i, o) => (i.replaceAll(`<${o[0]}>`, `[${o[1]}]`), i.replaceAll(`</${o[0]}>`, `</${o[1]}>`), i), e)
        }
        static hexToRgb(e) {
            const n = new ArrayBuffer(4);
            new DataView(n).setUint32(0, parseInt(e.replace("#", ""), 16), !1);
            const o = new Uint8Array(n);
            return `${o[1]},${o[2]},${o[3]}`
        }
        static adjustColor(e, n) {
            let i = !1,
                o = e;
            o[0] === "#" && (o = o.slice(1), i = !0);
            const d = parseInt(o, 16),
                m = Math.min(Math.max(0, (d >> 16) * n), 255),
                C = Math.min(Math.max(0, (d >> 8 & 255) * n), 255);
            let T = (Math.min(Math.max(0, (d & 255) * n), 255) | C << 8 | m << 16).toString(16);
            for (; T.length < o.length;) T = `0${T}`;
            return (i ? "#" : "") + T
        }
        static isInTolerance(e, n, i) {
            return !(Math.abs(e.x - n.x) < i || Math.abs(e.y - n.y) > i)
        }
        static getDistanceBetweenPoints(e, n) {
            const i = [e.x - n.x, e.y - n.y],
                o = Math.hypot(...i);
            return Math.round(o * 100) / 100
        }
        static getMidpoint(e, n) {
            return {
                x: (e.x + n.x) / 2,
                y: (e.y + n.y) / 2
            }
        }
        static getAngleBetweenPoints(e, n) {
            let o = Math.atan2(n.y - e.y, n.x - e.x) * (180 / Math.PI);
            return o < 0 && (o += 360), 360 - o
        }
        static getAngularDistance(e, n) {
            let i = (n - e) % 360;
            const o = i < 0 ? 1 : -1;
            return i = Math.abs(i), i > 180 ? o * (360 - i) : o * i
        }
        static getVelocity(e, n, i, o) {
            return this.getDistanceBetweenPoints(e, i) / (o - n)
        }
        static isInsideElement(e, n) {
            const i = n.getBoundingClientRect();
            return !(e.x < i.left || e.x > i.left + i.width || e.y < i.top || e.y > i.top + i.height)
        }
    };
    let Mt = Il;
    it(Mt, "queryParams", new URLSearchParams(window.location.search)), it(Mt, "getQueryParam", e => Il.queryParams.get(e)), it(Mt, "sleep", e => new Promise(n => {
        window.setTimeout(n, e)
    }));
    class en {
        static get namespace() {
            var e, n;
            return (n = (e = window.tv.storage) == null ? void 0 : e.namespace) != null ? n : this.defaultNamespace
        }
        static get isDisabled() {
            var e, n;
            return (n = (e = window.tv.storage) == null ? void 0 : e.isDisabled) != null ? n : !1
        }
        static get tag() {
            var e;
            return (e = window.tv.storage) == null ? void 0 : e.tag
        }
        static get code() {
            var e;
            return (e = window.tv.storage) == null ? void 0 : e.code
        }
        static get isSupported() {
            if (this.isDisabled) return !1;
            try {
                return window.localStorage ? (window.localStorage.setItem("support-check", "1"), window.localStorage.removeItem("support-check"), !0) : !1
            } catch {
                return !1
            }
        }
        static setup(e, n) {
            var i, o;
            delete window.tv.storage, window.tv.storage = {
                namespace: (o = (i = Mt.getQueryParam("namespace")) != null ? i : Mt.getQueryParam("ns")) != null ? o : this.defaultNamespace,
                isDisabled: Mt.queryParams.has("incognito") || Mt.queryParams.has("nc")
            }, e && (window.tv.storage.tag = e), n && (window.tv.storage.code = n.toLowerCase(), this.clearCodeScopedKeys(window.tv.storage.code)), this.migrateNamespace("blobcast", this.defaultNamespace)
        }
        static get(e, n) {
            return this.isSupported ? window.localStorage.getItem(this.getScopedKey(e, n)) : null
        }
        static set(e, n, i = "none") {
            if (!!this.isSupported) return window.localStorage.setItem(this.getScopedSetKey(e, i), n)
        }
        static remove(e, n) {
            if (!!this.isSupported) return window.localStorage.removeItem(this.getScopedKey(e, n))
        }
        static setTag(e) {
            var m;
            const n = e.toLowerCase(),
                i = (m = this.get("tags")) != null ? m : "[]",
                o = n.split("-")[0];
            let d = JSON.parse(i);
            d = d.filter(C => {
                const S = C.split("-")[0];
                return o !== S
            }), d.push(n), this.set("tags", JSON.stringify(d))
        }
        static getScopedKey(e, n) {
            const i = `${this.namespace}:${e}`,
                o = this.tag ? `${this.namespace}:${e}:tag:${this.tag}` : null,
                d = this.code ? `${this.namespace}:${e}:code:${this.code}` : null;
            if (n === "none") return i;
            if (n === "tag") {
                if (!o) throw new Error('[Storage] requested "tag" scope but tv.storage.tag is undefined');
                return o
            }
            if (n === "code") {
                if (!d) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
                return d
            }
            return d && window.localStorage.getItem(d) !== null ? d : o && window.localStorage.getItem(o) !== null ? o : i
        }
        static getScopedSetKey(e, n = "none") {
            if (n === "tag") {
                if (!this.tag) throw new Error('[Storage] requested "room" scope but tv.storage.tag is undefined');
                return `${this.namespace}:${e}:tag:${this.tag}`
            }
            if (n === "code") {
                if (!this.code) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
                return `${this.namespace}:${e}:code:${this.code}`
            }
            return `${this.namespace}:${e}`
        }
        static clearCodeScopedKeys(e) {
            !this.isSupported || Object.keys(window.localStorage).forEach(n => {
                const i = n.split(":code:");
                i.length <= 1 || i[1] !== e && window.localStorage.removeItem(n)
            })
        }
        static migrateNamespace(e, n) {
            !this.isSupported || Object.keys(window.localStorage).forEach(i => {
                if (!i.startsWith(`${e}-`)) return;
                const o = i.replace(`${e}-`, `${n}:`),
                    d = window.localStorage.getItem(i);
                !d || (window.localStorage.setItem(o, d), window.localStorage.removeItem(i))
            })
        }
    }
    it(en, "defaultNamespace", "tv");
    class vi {
        constructor() {
            it(this, "artifacts");
            this.artifacts = this.list()
        }
        get hasUnviewed() {
            return this.artifacts.some(e => !e.viewed)
        }
        add(e, n) {
            vi.add(e, n), this.artifacts = this.list()
        }
        static add(e, n) {
            if (!en.isSupported) return;
            const i = this.isTestArtifact(e) ? "http" : "https",
                o = this.isTestArtifact(e) ? "games-test.jackbox.tv" : "games.jackbox.tv",
                d = `${i}://${o}/artifact/${e.categoryId}/${e.artifactId}/`,
                m = en.get("galleries") || "[]";
            try {
                const C = JSON.parse(m) || [];
                if (C.some(S => S.url === d)) return;
                C.unshift({
                    url: d,
                    time: new Date().getTime(),
                    categoryId: e.categoryId,
                    viewed: !1
                }), en.set("galleries", JSON.stringify(C.slice(0, 40)))
            } catch {
                console.warn("[Artifacts] Unable to add artifact to local storage")
            }
        }
        remove(e) {
            if (!en.isSupported) return;
            const n = en.get("galleries") || "[]";
            try {
                const i = JSON.parse(n) || [];
                i.splice(e, 1), en.set("galleries", JSON.stringify(i)), this.artifacts = this.list()
            } catch {
                console.warn("[Artifacts] Unable to remove artifact")
            }
        }
        setAsViewed(e) {
            vi.setAsViewed(e), this.artifacts = this.list()
        }
        static setAsViewed(e) {
            if (!en.isSupported) return;
            const n = en.get("galleries") || "[]";
            try {
                const i = JSON.parse(n) || [];
                i.length && (i[e].viewed = !0), en.set("galleries", JSON.stringify(i))
            } catch {
                console.warn(`[Artifacts] Unable to mark artifact ${e} as viewed`)
            }
        }
        static isTestArtifact(e) {
            var n;
            return ((n = e == null ? void 0 : e.rootId) == null ? void 0 : n.indexOf("test")) !== -1
        }
        list() {
            if (!en.isSupported) return [];
            const e = new Intl.DateTimeFormat(Ma.locale, {
                    year: "numeric",
                    month: "short",
                    day: "numeric"
                }),
                n = en.get("galleries") || "[]",
                i = Date.now();
            try {
                return (JSON.parse(n) || []).filter(d => i - d.time < 525600 * 60 * 1e3).map(d => {
                    const m = new Date(d.time),
                        C = e.format(m),
                        S = d.url.split("/"),
                        T = S[S.length - 1] === "" ? S[S.length - 2] : S[S.length - 1];
                    let D = d.categoryId;
                    return D || (d.url.indexOf("Quiplash2") !== -1 ? D = "Quiplash2Game" : d.url.indexOf("Drawful") !== -1 ? D = "DrawfulGame" : d.url.indexOf("TeeKO") !== -1 ? D = "TeeKOGame" : d.url.indexOf("TriviaDeath") !== -1 && (D = "TriviaDeathResults")), {
                        id: T,
                        gameName: D,
                        date: C,
                        ...d
                    }
                })
            } catch {
                return console.warn("[Artifacts] Unable to parse artifacts array"), []
            }
        }
    }
    var La = {
        exports: {}
    };
    (function(t, e) {
        var n = typeof self < "u" ? self : vt,
            i = function() {
                function d() {
                    this.fetch = !1, this.DOMException = n.DOMException
                }
                return d.prototype = n, new d
            }();
        (function(d) {
            (function(m) {
                var C = {
                    searchParams: "URLSearchParams" in d,
                    iterable: "Symbol" in d && "iterator" in Symbol,
                    blob: "FileReader" in d && "Blob" in d && function() {
                        try {
                            return new Blob, !0
                        } catch {
                            return !1
                        }
                    }(),
                    formData: "FormData" in d,
                    arrayBuffer: "ArrayBuffer" in d
                };

                function S(z) {
                    return z && DataView.prototype.isPrototypeOf(z)
                }
                if (C.arrayBuffer) var T = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                    D = ArrayBuffer.isView || function(z) {
                        return z && T.indexOf(Object.prototype.toString.call(z)) > -1
                    };

                function V(z) {
                    if (typeof z != "string" && (z = String(z)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(z)) throw new TypeError("Invalid character in header field name");
                    return z.toLowerCase()
                }

                function Y(z) {
                    return typeof z != "string" && (z = String(z)), z
                }

                function ie(z) {
                    var oe = {
                        next: function() {
                            var Ae = z.shift();
                            return {
                                done: Ae === void 0,
                                value: Ae
                            }
                        }
                    };
                    return C.iterable && (oe[Symbol.iterator] = function() {
                        return oe
                    }), oe
                }

                function K(z) {
                    this.map = {}, z instanceof K ? z.forEach(function(oe, Ae) {
                        this.append(Ae, oe)
                    }, this) : Array.isArray(z) ? z.forEach(function(oe) {
                        this.append(oe[0], oe[1])
                    }, this) : z && Object.getOwnPropertyNames(z).forEach(function(oe) {
                        this.append(oe, z[oe])
                    }, this)
                }
                K.prototype.append = function(z, oe) {
                    z = V(z), oe = Y(oe);
                    var Ae = this.map[z];
                    this.map[z] = Ae ? Ae + ", " + oe : oe
                }, K.prototype.delete = function(z) {
                    delete this.map[V(z)]
                }, K.prototype.get = function(z) {
                    return z = V(z), this.has(z) ? this.map[z] : null
                }, K.prototype.has = function(z) {
                    return this.map.hasOwnProperty(V(z))
                }, K.prototype.set = function(z, oe) {
                    this.map[V(z)] = Y(oe)
                }, K.prototype.forEach = function(z, oe) {
                    for (var Ae in this.map) this.map.hasOwnProperty(Ae) && z.call(oe, this.map[Ae], Ae, this)
                }, K.prototype.keys = function() {
                    var z = [];
                    return this.forEach(function(oe, Ae) {
                        z.push(Ae)
                    }), ie(z)
                }, K.prototype.values = function() {
                    var z = [];
                    return this.forEach(function(oe) {
                        z.push(oe)
                    }), ie(z)
                }, K.prototype.entries = function() {
                    var z = [];
                    return this.forEach(function(oe, Ae) {
                        z.push([Ae, oe])
                    }), ie(z)
                }, C.iterable && (K.prototype[Symbol.iterator] = K.prototype.entries);

                function re(z) {
                    if (z.bodyUsed) return Promise.reject(new TypeError("Already read"));
                    z.bodyUsed = !0
                }

                function v(z) {
                    return new Promise(function(oe, Ae) {
                        z.onload = function() {
                            oe(z.result)
                        }, z.onerror = function() {
                            Ae(z.error)
                        }
                    })
                }

                function P(z) {
                    var oe = new FileReader,
                        Ae = v(oe);
                    return oe.readAsArrayBuffer(z), Ae
                }

                function H(z) {
                    var oe = new FileReader,
                        Ae = v(oe);
                    return oe.readAsText(z), Ae
                }

                function ae(z) {
                    for (var oe = new Uint8Array(z), Ae = new Array(oe.length), we = 0; we < oe.length; we++) Ae[we] = String.fromCharCode(oe[we]);
                    return Ae.join("")
                }

                function se(z) {
                    if (z.slice) return z.slice(0);
                    var oe = new Uint8Array(z.byteLength);
                    return oe.set(new Uint8Array(z)), oe.buffer
                }

                function ve() {
                    return this.bodyUsed = !1, this._initBody = function(z) {
                        this._bodyInit = z, z ? typeof z == "string" ? this._bodyText = z : C.blob && Blob.prototype.isPrototypeOf(z) ? this._bodyBlob = z : C.formData && FormData.prototype.isPrototypeOf(z) ? this._bodyFormData = z : C.searchParams && URLSearchParams.prototype.isPrototypeOf(z) ? this._bodyText = z.toString() : C.arrayBuffer && C.blob && S(z) ? (this._bodyArrayBuffer = se(z.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : C.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(z) || D(z)) ? this._bodyArrayBuffer = se(z) : this._bodyText = z = Object.prototype.toString.call(z) : this._bodyText = "", this.headers.get("content-type") || (typeof z == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : C.searchParams && URLSearchParams.prototype.isPrototypeOf(z) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                    }, C.blob && (this.blob = function() {
                        var z = re(this);
                        if (z) return z;
                        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                        return Promise.resolve(new Blob([this._bodyText]))
                    }, this.arrayBuffer = function() {
                        return this._bodyArrayBuffer ? re(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(P)
                    }), this.text = function() {
                        var z = re(this);
                        if (z) return z;
                        if (this._bodyBlob) return H(this._bodyBlob);
                        if (this._bodyArrayBuffer) return Promise.resolve(ae(this._bodyArrayBuffer));
                        if (this._bodyFormData) throw new Error("could not read FormData body as text");
                        return Promise.resolve(this._bodyText)
                    }, C.formData && (this.formData = function() {
                        return this.text().then(Pe)
                    }), this.json = function() {
                        return this.text().then(JSON.parse)
                    }, this
                }
                var f = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

                function Ee(z) {
                    var oe = z.toUpperCase();
                    return f.indexOf(oe) > -1 ? oe : z
                }

                function Oe(z, oe) {
                    oe = oe || {};
                    var Ae = oe.body;
                    if (z instanceof Oe) {
                        if (z.bodyUsed) throw new TypeError("Already read");
                        this.url = z.url, this.credentials = z.credentials, oe.headers || (this.headers = new K(z.headers)), this.method = z.method, this.mode = z.mode, this.signal = z.signal, !Ae && z._bodyInit != null && (Ae = z._bodyInit, z.bodyUsed = !0)
                    } else this.url = String(z);
                    if (this.credentials = oe.credentials || this.credentials || "same-origin", (oe.headers || !this.headers) && (this.headers = new K(oe.headers)), this.method = Ee(oe.method || this.method || "GET"), this.mode = oe.mode || this.mode || null, this.signal = oe.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && Ae) throw new TypeError("Body not allowed for GET or HEAD requests");
                    this._initBody(Ae)
                }
                Oe.prototype.clone = function() {
                    return new Oe(this, {
                        body: this._bodyInit
                    })
                };

                function Pe(z) {
                    var oe = new FormData;
                    return z.trim().split("&").forEach(function(Ae) {
                        if (Ae) {
                            var we = Ae.split("="),
                                ye = we.shift().replace(/\+/g, " "),
                                ue = we.join("=").replace(/\+/g, " ");
                            oe.append(decodeURIComponent(ye), decodeURIComponent(ue))
                        }
                    }), oe
                }

                function lt(z) {
                    var oe = new K,
                        Ae = z.replace(/\r?\n[\t ]+/g, " ");
                    return Ae.split(/\r?\n/).forEach(function(we) {
                        var ye = we.split(":"),
                            ue = ye.shift().trim();
                        if (ue) {
                            var Se = ye.join(":").trim();
                            oe.append(ue, Se)
                        }
                    }), oe
                }
                ve.call(Oe.prototype);

                function Ve(z, oe) {
                    oe || (oe = {}), this.type = "default", this.status = oe.status === void 0 ? 200 : oe.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in oe ? oe.statusText : "OK", this.headers = new K(oe.headers), this.url = oe.url || "", this._initBody(z)
                }
                ve.call(Ve.prototype), Ve.prototype.clone = function() {
                    return new Ve(this._bodyInit, {
                        status: this.status,
                        statusText: this.statusText,
                        headers: new K(this.headers),
                        url: this.url
                    })
                }, Ve.error = function() {
                    var z = new Ve(null, {
                        status: 0,
                        statusText: ""
                    });
                    return z.type = "error", z
                };
                var J = [301, 302, 303, 307, 308];
                Ve.redirect = function(z, oe) {
                    if (J.indexOf(oe) === -1) throw new RangeError("Invalid status code");
                    return new Ve(null, {
                        status: oe,
                        headers: {
                            location: z
                        }
                    })
                }, m.DOMException = d.DOMException;
                try {
                    new m.DOMException
                } catch {
                    m.DOMException = function(oe, Ae) {
                        this.message = oe, this.name = Ae;
                        var we = Error(oe);
                        this.stack = we.stack
                    }, m.DOMException.prototype = Object.create(Error.prototype), m.DOMException.prototype.constructor = m.DOMException
                }

                function je(z, oe) {
                    return new Promise(function(Ae, we) {
                        var ye = new Oe(z, oe);
                        if (ye.signal && ye.signal.aborted) return we(new m.DOMException("Aborted", "AbortError"));
                        var ue = new XMLHttpRequest;

                        function Se() {
                            ue.abort()
                        }
                        ue.onload = function() {
                            var Te = {
                                status: ue.status,
                                statusText: ue.statusText,
                                headers: lt(ue.getAllResponseHeaders() || "")
                            };
                            Te.url = "responseURL" in ue ? ue.responseURL : Te.headers.get("X-Request-URL");
                            var Be = "response" in ue ? ue.response : ue.responseText;
                            Ae(new Ve(Be, Te))
                        }, ue.onerror = function() {
                            we(new TypeError("Network request failed"))
                        }, ue.ontimeout = function() {
                            we(new TypeError("Network request failed"))
                        }, ue.onabort = function() {
                            we(new m.DOMException("Aborted", "AbortError"))
                        }, ue.open(ye.method, ye.url, !0), ye.credentials === "include" ? ue.withCredentials = !0 : ye.credentials === "omit" && (ue.withCredentials = !1), "responseType" in ue && C.blob && (ue.responseType = "blob"), ye.headers.forEach(function(Te, Be) {
                            ue.setRequestHeader(Be, Te)
                        }), ye.signal && (ye.signal.addEventListener("abort", Se), ue.onreadystatechange = function() {
                            ue.readyState === 4 && ye.signal.removeEventListener("abort", Se)
                        }), ue.send(typeof ye._bodyInit > "u" ? null : ye._bodyInit)
                    })
                }
                return je.polyfill = !0, d.fetch || (d.fetch = je, d.Headers = K, d.Request = Oe, d.Response = Ve), m.Headers = K, m.Request = Oe, m.Response = Ve, m.fetch = je, Object.defineProperty(m, "__esModule", {
                    value: !0
                }), m
            })({})
        })(i), i.fetch.ponyfill = !0, delete i.fetch.polyfill;
        var o = i;
        e = o.fetch, e.default = o.fetch, e.fetch = o.fetch, e.Headers = o.Headers, e.Request = o.Request, e.Response = o.Response, t.exports = e
    })(La, La.exports);
    var My = function() {
            if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
            if (typeof Symbol.iterator == "symbol") return !0;
            var e = {},
                n = Symbol("test"),
                i = Object(n);
            if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(i) !== "[object Symbol]") return !1;
            var o = 42;
            e[n] = o;
            for (n in e) return !1;
            if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0) return !1;
            var d = Object.getOwnPropertySymbols(e);
            if (d.length !== 1 || d[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n)) return !1;
            if (typeof Object.getOwnPropertyDescriptor == "function") {
                var m = Object.getOwnPropertyDescriptor(e, n);
                if (m.value !== o || m.enumerable !== !0) return !1
            }
            return !0
        },
        Jl = typeof Symbol < "u" && Symbol,
        Ly = My,
        Py = function() {
            return typeof Jl != "function" || typeof Symbol != "function" || typeof Jl("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : Ly()
        },
        $y = "Function.prototype.bind called on incompatible ",
        ca = Array.prototype.slice,
        Ny = Object.prototype.toString,
        Vy = "[object Function]",
        By = function(e) {
            var n = this;
            if (typeof n != "function" || Ny.call(n) !== Vy) throw new TypeError($y + n);
            for (var i = ca.call(arguments, 1), o, d = function() {
                    if (this instanceof o) {
                        var D = n.apply(this, i.concat(ca.call(arguments)));
                        return Object(D) === D ? D : this
                    } else return n.apply(e, i.concat(ca.call(arguments)))
                }, m = Math.max(0, n.length - i.length), C = [], S = 0; S < m; S++) C.push("$" + S);
            if (o = Function("binder", "return function (" + C.join(",") + "){ return binder.apply(this,arguments); }")(d), n.prototype) {
                var T = function() {};
                T.prototype = n.prototype, o.prototype = new T, T.prototype = null
            }
            return o
        },
        qy = By,
        tl = Function.prototype.bind || qy,
        jy = tl,
        Fy = jy.call(Function.call, Object.prototype.hasOwnProperty),
        mt, wr = SyntaxError,
        lu = Function,
        gr = TypeError,
        ua = function(t) {
            try {
                return lu('"use strict"; return (' + t + ").constructor;")()
            } catch {}
        },
        Bi = Object.getOwnPropertyDescriptor;
    if (Bi) try {
        Bi({}, "")
    } catch {
        Bi = null
    }
    var ha = function() {
            throw new gr
        },
        Uy = Bi ? function() {
            try {
                return arguments.callee, ha
            } catch {
                try {
                    return Bi(arguments, "callee").get
                } catch {
                    return ha
                }
            }
        }() : ha,
        lr = Py(),
        ci = Object.getPrototypeOf || function(t) {
            return t.__proto__
        },
        hr = {},
        zy = typeof Uint8Array > "u" ? mt : ci(Uint8Array),
        mr = {
            "%AggregateError%": typeof AggregateError > "u" ? mt : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%": typeof ArrayBuffer > "u" ? mt : ArrayBuffer,
            "%ArrayIteratorPrototype%": lr ? ci([][Symbol.iterator]()) : mt,
            "%AsyncFromSyncIteratorPrototype%": mt,
            "%AsyncFunction%": hr,
            "%AsyncGenerator%": hr,
            "%AsyncGeneratorFunction%": hr,
            "%AsyncIteratorPrototype%": hr,
            "%Atomics%": typeof Atomics > "u" ? mt : Atomics,
            "%BigInt%": typeof BigInt > "u" ? mt : BigInt,
            "%Boolean%": Boolean,
            "%DataView%": typeof DataView > "u" ? mt : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": Error,
            "%eval%": eval,
            "%EvalError%": EvalError,
            "%Float32Array%": typeof Float32Array > "u" ? mt : Float32Array,
            "%Float64Array%": typeof Float64Array > "u" ? mt : Float64Array,
            "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? mt : FinalizationRegistry,
            "%Function%": lu,
            "%GeneratorFunction%": hr,
            "%Int8Array%": typeof Int8Array > "u" ? mt : Int8Array,
            "%Int16Array%": typeof Int16Array > "u" ? mt : Int16Array,
            "%Int32Array%": typeof Int32Array > "u" ? mt : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": lr ? ci(ci([][Symbol.iterator]())) : mt,
            "%JSON%": typeof JSON == "object" ? JSON : mt,
            "%Map%": typeof Map > "u" ? mt : Map,
            "%MapIteratorPrototype%": typeof Map > "u" || !lr ? mt : ci(new Map()[Symbol.iterator]()),
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": Object,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": typeof Promise > "u" ? mt : Promise,
            "%Proxy%": typeof Proxy > "u" ? mt : Proxy,
            "%RangeError%": RangeError,
            "%ReferenceError%": ReferenceError,
            "%Reflect%": typeof Reflect > "u" ? mt : Reflect,
            "%RegExp%": RegExp,
            "%Set%": typeof Set > "u" ? mt : Set,
            "%SetIteratorPrototype%": typeof Set > "u" || !lr ? mt : ci(new Set()[Symbol.iterator]()),
            "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? mt : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": lr ? ci("" [Symbol.iterator]()) : mt,
            "%Symbol%": lr ? Symbol : mt,
            "%SyntaxError%": wr,
            "%ThrowTypeError%": Uy,
            "%TypedArray%": zy,
            "%TypeError%": gr,
            "%Uint8Array%": typeof Uint8Array > "u" ? mt : Uint8Array,
            "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? mt : Uint8ClampedArray,
            "%Uint16Array%": typeof Uint16Array > "u" ? mt : Uint16Array,
            "%Uint32Array%": typeof Uint32Array > "u" ? mt : Uint32Array,
            "%URIError%": URIError,
            "%WeakMap%": typeof WeakMap > "u" ? mt : WeakMap,
            "%WeakRef%": typeof WeakRef > "u" ? mt : WeakRef,
            "%WeakSet%": typeof WeakSet > "u" ? mt : WeakSet
        },
        Gy = function t(e) {
            var n;
            if (e === "%AsyncFunction%") n = ua("async function () {}");
            else if (e === "%GeneratorFunction%") n = ua("function* () {}");
            else if (e === "%AsyncGeneratorFunction%") n = ua("async function* () {}");
            else if (e === "%AsyncGenerator%") {
                var i = t("%AsyncGeneratorFunction%");
                i && (n = i.prototype)
            } else if (e === "%AsyncIteratorPrototype%") {
                var o = t("%AsyncGenerator%");
                o && (n = ci(o.prototype))
            }
            return mr[e] = n, n
        },
        Ql = {
            "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
            "%ArrayPrototype%": ["Array", "prototype"],
            "%ArrayProto_entries%": ["Array", "prototype", "entries"],
            "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
            "%ArrayProto_keys%": ["Array", "prototype", "keys"],
            "%ArrayProto_values%": ["Array", "prototype", "values"],
            "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
            "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
            "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
            "%BooleanPrototype%": ["Boolean", "prototype"],
            "%DataViewPrototype%": ["DataView", "prototype"],
            "%DatePrototype%": ["Date", "prototype"],
            "%ErrorPrototype%": ["Error", "prototype"],
            "%EvalErrorPrototype%": ["EvalError", "prototype"],
            "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
            "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
            "%FunctionPrototype%": ["Function", "prototype"],
            "%Generator%": ["GeneratorFunction", "prototype"],
            "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
            "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
            "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
            "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
            "%JSONParse%": ["JSON", "parse"],
            "%JSONStringify%": ["JSON", "stringify"],
            "%MapPrototype%": ["Map", "prototype"],
            "%NumberPrototype%": ["Number", "prototype"],
            "%ObjectPrototype%": ["Object", "prototype"],
            "%ObjProto_toString%": ["Object", "prototype", "toString"],
            "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
            "%PromisePrototype%": ["Promise", "prototype"],
            "%PromiseProto_then%": ["Promise", "prototype", "then"],
            "%Promise_all%": ["Promise", "all"],
            "%Promise_reject%": ["Promise", "reject"],
            "%Promise_resolve%": ["Promise", "resolve"],
            "%RangeErrorPrototype%": ["RangeError", "prototype"],
            "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
            "%RegExpPrototype%": ["RegExp", "prototype"],
            "%SetPrototype%": ["Set", "prototype"],
            "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
            "%StringPrototype%": ["String", "prototype"],
            "%SymbolPrototype%": ["Symbol", "prototype"],
            "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
            "%TypedArrayPrototype%": ["TypedArray", "prototype"],
            "%TypeErrorPrototype%": ["TypeError", "prototype"],
            "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
            "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
            "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
            "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
            "%URIErrorPrototype%": ["URIError", "prototype"],
            "%WeakMapPrototype%": ["WeakMap", "prototype"],
            "%WeakSetPrototype%": ["WeakSet", "prototype"]
        },
        ys = tl,
        so = Fy,
        Hy = ys.call(Function.call, Array.prototype.concat),
        Wy = ys.call(Function.apply, Array.prototype.splice),
        Zl = ys.call(Function.call, String.prototype.replace),
        oo = ys.call(Function.call, String.prototype.slice),
        Xy = ys.call(Function.call, RegExp.prototype.exec),
        Yy = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
        Ky = /\\(\\)?/g,
        Jy = function(e) {
            var n = oo(e, 0, 1),
                i = oo(e, -1);
            if (n === "%" && i !== "%") throw new wr("invalid intrinsic syntax, expected closing `%`");
            if (i === "%" && n !== "%") throw new wr("invalid intrinsic syntax, expected opening `%`");
            var o = [];
            return Zl(e, Yy, function(d, m, C, S) {
                o[o.length] = C ? Zl(S, Ky, "$1") : m || d
            }), o
        },
        Qy = function(e, n) {
            var i = e,
                o;
            if (so(Ql, i) && (o = Ql[i], i = "%" + o[0] + "%"), so(mr, i)) {
                var d = mr[i];
                if (d === hr && (d = Gy(i)), typeof d > "u" && !n) throw new gr("intrinsic " + e + " exists, but is not available. Please file an issue!");
                return {
                    alias: o,
                    name: i,
                    value: d
                }
            }
            throw new wr("intrinsic " + e + " does not exist!")
        },
        nl = function(e, n) {
            if (typeof e != "string" || e.length === 0) throw new gr("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && typeof n != "boolean") throw new gr('"allowMissing" argument must be a boolean');
            if (Xy(/^%?[^%]*%?$/g, e) === null) throw new wr("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
            var i = Jy(e),
                o = i.length > 0 ? i[0] : "",
                d = Qy("%" + o + "%", n),
                m = d.name,
                C = d.value,
                S = !1,
                T = d.alias;
            T && (o = T[0], Wy(i, Hy([0, 1], T)));
            for (var D = 1, V = !0; D < i.length; D += 1) {
                var Y = i[D],
                    ie = oo(Y, 0, 1),
                    K = oo(Y, -1);
                if ((ie === '"' || ie === "'" || ie === "`" || K === '"' || K === "'" || K === "`") && ie !== K) throw new wr("property names with quotes must have matching quotes");
                if ((Y === "constructor" || !V) && (S = !0), o += "." + Y, m = "%" + o + "%", so(mr, m)) C = mr[m];
                else if (C != null) {
                    if (!(Y in C)) {
                        if (!n) throw new gr("base intrinsic for " + e + " exists, but the property is not available.");
                        return
                    }
                    if (Bi && D + 1 >= i.length) {
                        var re = Bi(C, Y);
                        V = !!re, V && "get" in re && !("originalValue" in re.get) ? C = re.get : C = C[Y]
                    } else V = so(C, Y), C = C[Y];
                    V && !S && (mr[m] = C)
                }
            }
            return C
        },
        cu = {
            exports: {}
        };
    (function(t) {
        var e = tl,
            n = nl,
            i = n("%Function.prototype.apply%"),
            o = n("%Function.prototype.call%"),
            d = n("%Reflect.apply%", !0) || e.call(o, i),
            m = n("%Object.getOwnPropertyDescriptor%", !0),
            C = n("%Object.defineProperty%", !0),
            S = n("%Math.max%");
        if (C) try {
            C({}, "a", {
                value: 1
            })
        } catch {
            C = null
        }
        t.exports = function(V) {
            var Y = d(e, o, arguments);
            if (m && C) {
                var ie = m(Y, "length");
                ie.configurable && C(Y, "length", {
                    value: 1 + S(0, V.length - (arguments.length - 1))
                })
            }
            return Y
        };
        var T = function() {
            return d(e, i, arguments)
        };
        C ? C(t.exports, "apply", {
            value: T
        }) : t.exports.apply = T
    })(cu);
    var uu = nl,
        hu = cu.exports,
        Zy = hu(uu("String.prototype.indexOf")),
        eb = function(e, n) {
            var i = uu(e, !!n);
            return typeof i == "function" && Zy(e, ".prototype.") > -1 ? hu(i) : i
        };
    const tb = {},
        nb = Object.freeze(Object.defineProperty({
            __proto__: null,
            default: tb
        }, Symbol.toStringTag, {
            value: "Module"
        })),
        ib = Hh(nb);
    var il = typeof Map == "function" && Map.prototype,
        da = Object.getOwnPropertyDescriptor && il ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null,
        ao = il && da && typeof da.get == "function" ? da.get : null,
        rb = il && Map.prototype.forEach,
        rl = typeof Set == "function" && Set.prototype,
        fa = Object.getOwnPropertyDescriptor && rl ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null,
        lo = rl && fa && typeof fa.get == "function" ? fa.get : null,
        sb = rl && Set.prototype.forEach,
        ob = typeof WeakMap == "function" && WeakMap.prototype,
        os = ob ? WeakMap.prototype.has : null,
        ab = typeof WeakSet == "function" && WeakSet.prototype,
        as = ab ? WeakSet.prototype.has : null,
        lb = typeof WeakRef == "function" && WeakRef.prototype,
        ec = lb ? WeakRef.prototype.deref : null,
        cb = Boolean.prototype.valueOf,
        ub = Object.prototype.toString,
        hb = Function.prototype.toString,
        db = String.prototype.match,
        sl = String.prototype.slice,
        pi = String.prototype.replace,
        fb = String.prototype.toUpperCase,
        tc = String.prototype.toLowerCase,
        du = RegExp.prototype.test,
        nc = Array.prototype.concat,
        jn = Array.prototype.join,
        pb = Array.prototype.slice,
        ic = Math.floor,
        Pa = typeof BigInt == "function" ? BigInt.prototype.valueOf : null,
        pa = Object.getOwnPropertySymbols,
        $a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null,
        Cr = typeof Symbol == "function" && typeof Symbol.iterator == "object",
        cn = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === Cr ? "object" : "symbol") ? Symbol.toStringTag : null,
        fu = Object.prototype.propertyIsEnumerable,
        rc = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(t) {
            return t.__proto__
        } : null);

    function sc(t, e) {
        if (t === 1 / 0 || t === -1 / 0 || t !== t || t && t > -1e3 && t < 1e3 || du.call(/e/, e)) return e;
        var n = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
        if (typeof t == "number") {
            var i = t < 0 ? -ic(-t) : ic(t);
            if (i !== t) {
                var o = String(i),
                    d = sl.call(e, o.length + 1);
                return pi.call(o, n, "$&_") + "." + pi.call(pi.call(d, /([0-9]{3})/g, "$&_"), /_$/, "")
            }
        }
        return pi.call(e, n, "$&_")
    }
    var Na = ib,
        oc = Na.custom,
        ac = gu(oc) ? oc : null,
        gb = function t(e, n, i, o) {
            var d = n || {};
            if (ui(d, "quoteStyle") && d.quoteStyle !== "single" && d.quoteStyle !== "double") throw new TypeError('option "quoteStyle" must be "single" or "double"');
            if (ui(d, "maxStringLength") && (typeof d.maxStringLength == "number" ? d.maxStringLength < 0 && d.maxStringLength !== 1 / 0 : d.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
            var m = ui(d, "customInspect") ? d.customInspect : !0;
            if (typeof m != "boolean" && m !== "symbol") throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
            if (ui(d, "indent") && d.indent !== null && d.indent !== "	" && !(parseInt(d.indent, 10) === d.indent && d.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
            if (ui(d, "numericSeparator") && typeof d.numericSeparator != "boolean") throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
            var C = d.numericSeparator;
            if (typeof e > "u") return "undefined";
            if (e === null) return "null";
            if (typeof e == "boolean") return e ? "true" : "false";
            if (typeof e == "string") return vu(e, d);
            if (typeof e == "number") {
                if (e === 0) return 1 / 0 / e > 0 ? "0" : "-0";
                var S = String(e);
                return C ? sc(e, S) : S
            }
            if (typeof e == "bigint") {
                var T = String(e) + "n";
                return C ? sc(e, T) : T
            }
            var D = typeof d.depth > "u" ? 5 : d.depth;
            if (typeof i > "u" && (i = 0), i >= D && D > 0 && typeof e == "object") return Va(e) ? "[Array]" : "[Object]";
            var V = Mb(d, i);
            if (typeof o > "u") o = [];
            else if (mu(o, e) >= 0) return "[Circular]";

            function Y(je, z, oe) {
                if (z && (o = pb.call(o), o.push(z)), oe) {
                    var Ae = {
                        depth: d.depth
                    };
                    return ui(d, "quoteStyle") && (Ae.quoteStyle = d.quoteStyle), t(je, Ae, i + 1, o)
                }
                return t(je, d, i + 1, o)
            }
            if (typeof e == "function" && !lc(e)) {
                var ie = Eb(e),
                    K = Fs(e, Y);
                return "[Function" + (ie ? ": " + ie : " (anonymous)") + "]" + (K.length > 0 ? " { " + jn.call(K, ", ") + " }" : "")
            }
            if (gu(e)) {
                var re = Cr ? pi.call(String(e), /^(Symbol\(.*\))_[^)]*$/, "$1") : $a.call(e);
                return typeof e == "object" && !Cr ? es(re) : re
            }
            if (Rb(e)) {
                for (var v = "<" + tc.call(String(e.nodeName)), P = e.attributes || [], H = 0; H < P.length; H++) v += " " + P[H].name + "=" + pu(mb(P[H].value), "double", d);
                return v += ">", e.childNodes && e.childNodes.length && (v += "..."), v += "</" + tc.call(String(e.nodeName)) + ">", v
            }
            if (Va(e)) {
                if (e.length === 0) return "[]";
                var ae = Fs(e, Y);
                return V && !Db(ae) ? "[" + Ba(ae, V) + "]" : "[ " + jn.call(ae, ", ") + " ]"
            }
            if (yb(e)) {
                var se = Fs(e, Y);
                return !("cause" in Error.prototype) && "cause" in e && !fu.call(e, "cause") ? "{ [" + String(e) + "] " + jn.call(nc.call("[cause]: " + Y(e.cause), se), ", ") + " }" : se.length === 0 ? "[" + String(e) + "]" : "{ [" + String(e) + "] " + jn.call(se, ", ") + " }"
            }
            if (typeof e == "object" && m) {
                if (ac && typeof e[ac] == "function" && Na) return Na(e, {
                    depth: D - i
                });
                if (m !== "symbol" && typeof e.inspect == "function") return e.inspect()
            }
            if (Sb(e)) {
                var ve = [];
                return rb.call(e, function(je, z) {
                    ve.push(Y(z, e, !0) + " => " + Y(je, e))
                }), cc("Map", ao.call(e), ve, V)
            }
            if (Ab(e)) {
                var f = [];
                return sb.call(e, function(je) {
                    f.push(Y(je, e))
                }), cc("Set", lo.call(e), f, V)
            }
            if (kb(e)) return ga("WeakMap");
            if (Ob(e)) return ga("WeakSet");
            if (Tb(e)) return ga("WeakRef");
            if (wb(e)) return es(Y(Number(e)));
            if (_b(e)) return es(Y(Pa.call(e)));
            if (Cb(e)) return es(cb.call(e));
            if (bb(e)) return es(Y(String(e)));
            if (!vb(e) && !lc(e)) {
                var Ee = Fs(e, Y),
                    Oe = rc ? rc(e) === Object.prototype : e instanceof Object || e.constructor === Object,
                    Pe = e instanceof Object ? "" : "null prototype",
                    lt = !Oe && cn && Object(e) === e && cn in e ? sl.call(yi(e), 8, -1) : Pe ? "Object" : "",
                    Ve = Oe || typeof e.constructor != "function" ? "" : e.constructor.name ? e.constructor.name + " " : "",
                    J = Ve + (lt || Pe ? "[" + jn.call(nc.call([], lt || [], Pe || []), ": ") + "] " : "");
                return Ee.length === 0 ? J + "{}" : V ? J + "{" + Ba(Ee, V) + "}" : J + "{ " + jn.call(Ee, ", ") + " }"
            }
            return String(e)
        };

    function pu(t, e, n) {
        var i = (n.quoteStyle || e) === "double" ? '"' : "'";
        return i + t + i
    }

    function mb(t) {
        return pi.call(String(t), /"/g, "&quot;")
    }

    function Va(t) {
        return yi(t) === "[object Array]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function vb(t) {
        return yi(t) === "[object Date]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function lc(t) {
        return yi(t) === "[object RegExp]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function yb(t) {
        return yi(t) === "[object Error]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function bb(t) {
        return yi(t) === "[object String]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function wb(t) {
        return yi(t) === "[object Number]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function Cb(t) {
        return yi(t) === "[object Boolean]" && (!cn || !(typeof t == "object" && cn in t))
    }

    function gu(t) {
        if (Cr) return t && typeof t == "object" && t instanceof Symbol;
        if (typeof t == "symbol") return !0;
        if (!t || typeof t != "object" || !$a) return !1;
        try {
            return $a.call(t), !0
        } catch {}
        return !1
    }

    function _b(t) {
        if (!t || typeof t != "object" || !Pa) return !1;
        try {
            return Pa.call(t), !0
        } catch {}
        return !1
    }
    var xb = Object.prototype.hasOwnProperty || function(t) {
        return t in this
    };

    function ui(t, e) {
        return xb.call(t, e)
    }

    function yi(t) {
        return ub.call(t)
    }

    function Eb(t) {
        if (t.name) return t.name;
        var e = db.call(hb.call(t), /^function\s*([\w$]+)/);
        return e ? e[1] : null
    }

    function mu(t, e) {
        if (t.indexOf) return t.indexOf(e);
        for (var n = 0, i = t.length; n < i; n++)
            if (t[n] === e) return n;
        return -1
    }

    function Sb(t) {
        if (!ao || !t || typeof t != "object") return !1;
        try {
            ao.call(t);
            try {
                lo.call(t)
            } catch {
                return !0
            }
            return t instanceof Map
        } catch {}
        return !1
    }

    function kb(t) {
        if (!os || !t || typeof t != "object") return !1;
        try {
            os.call(t, os);
            try {
                as.call(t, as)
            } catch {
                return !0
            }
            return t instanceof WeakMap
        } catch {}
        return !1
    }

    function Tb(t) {
        if (!ec || !t || typeof t != "object") return !1;
        try {
            return ec.call(t), !0
        } catch {}
        return !1
    }

    function Ab(t) {
        if (!lo || !t || typeof t != "object") return !1;
        try {
            lo.call(t);
            try {
                ao.call(t)
            } catch {
                return !0
            }
            return t instanceof Set
        } catch {}
        return !1
    }

    function Ob(t) {
        if (!as || !t || typeof t != "object") return !1;
        try {
            as.call(t, as);
            try {
                os.call(t, os)
            } catch {
                return !0
            }
            return t instanceof WeakSet
        } catch {}
        return !1
    }

    function Rb(t) {
        return !t || typeof t != "object" ? !1 : typeof HTMLElement < "u" && t instanceof HTMLElement ? !0 : typeof t.nodeName == "string" && typeof t.getAttribute == "function"
    }

    function vu(t, e) {
        if (t.length > e.maxStringLength) {
            var n = t.length - e.maxStringLength,
                i = "... " + n + " more character" + (n > 1 ? "s" : "");
            return vu(sl.call(t, 0, e.maxStringLength), e) + i
        }
        var o = pi.call(pi.call(t, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, Ib);
        return pu(o, "single", e)
    }

    function Ib(t) {
        var e = t.charCodeAt(0),
            n = {
                8: "b",
                9: "t",
                10: "n",
                12: "f",
                13: "r"
            } [e];
        return n ? "\\" + n : "\\x" + (e < 16 ? "0" : "") + fb.call(e.toString(16))
    }

    function es(t) {
        return "Object(" + t + ")"
    }

    function ga(t) {
        return t + " { ? }"
    }

    function cc(t, e, n, i) {
        var o = i ? Ba(n, i) : jn.call(n, ", ");
        return t + " (" + e + ") {" + o + "}"
    }

    function Db(t) {
        for (var e = 0; e < t.length; e++)
            if (mu(t[e], `
`) >= 0) return !1;
        return !0
    }

    function Mb(t, e) {
        var n;
        if (t.indent === "	") n = "	";
        else if (typeof t.indent == "number" && t.indent > 0) n = jn.call(Array(t.indent + 1), " ");
        else return null;
        return {
            base: n,
            prev: jn.call(Array(e + 1), n)
        }
    }

    function Ba(t, e) {
        if (t.length === 0) return "";
        var n = `
` + e.prev + e.base;
        return n + jn.call(t, "," + n) + `
` + e.prev
    }

    function Fs(t, e) {
        var n = Va(t),
            i = [];
        if (n) {
            i.length = t.length;
            for (var o = 0; o < t.length; o++) i[o] = ui(t, o) ? e(t[o], t) : ""
        }
        var d = typeof pa == "function" ? pa(t) : [],
            m;
        if (Cr) {
            m = {};
            for (var C = 0; C < d.length; C++) m["$" + d[C]] = d[C]
        }
        for (var S in t) !ui(t, S) || n && String(Number(S)) === S && S < t.length || Cr && m["$" + S] instanceof Symbol || (du.call(/[^\w$]/, S) ? i.push(e(S, t) + ": " + e(t[S], t)) : i.push(S + ": " + e(t[S], t)));
        if (typeof pa == "function")
            for (var T = 0; T < d.length; T++) fu.call(t, d[T]) && i.push("[" + e(d[T]) + "]: " + e(t[d[T]], t));
        return i
    }
    var ol = nl,
        Or = eb,
        Lb = gb,
        Pb = ol("%TypeError%"),
        Us = ol("%WeakMap%", !0),
        zs = ol("%Map%", !0),
        $b = Or("WeakMap.prototype.get", !0),
        Nb = Or("WeakMap.prototype.set", !0),
        Vb = Or("WeakMap.prototype.has", !0),
        Bb = Or("Map.prototype.get", !0),
        qb = Or("Map.prototype.set", !0),
        jb = Or("Map.prototype.has", !0),
        al = function(t, e) {
            for (var n = t, i;
                (i = n.next) !== null; n = i)
                if (i.key === e) return n.next = i.next, i.next = t.next, t.next = i, i
        },
        Fb = function(t, e) {
            var n = al(t, e);
            return n && n.value
        },
        Ub = function(t, e, n) {
            var i = al(t, e);
            i ? i.value = n : t.next = {
                key: e,
                next: t.next,
                value: n
            }
        },
        zb = function(t, e) {
            return !!al(t, e)
        },
        Gb = function() {
            var e, n, i, o = {
                assert: function(d) {
                    if (!o.has(d)) throw new Pb("Side channel does not contain " + Lb(d))
                },
                get: function(d) {
                    if (Us && d && (typeof d == "object" || typeof d == "function")) {
                        if (e) return $b(e, d)
                    } else if (zs) {
                        if (n) return Bb(n, d)
                    } else if (i) return Fb(i, d)
                },
                has: function(d) {
                    if (Us && d && (typeof d == "object" || typeof d == "function")) {
                        if (e) return Vb(e, d)
                    } else if (zs) {
                        if (n) return jb(n, d)
                    } else if (i) return zb(i, d);
                    return !1
                },
                set: function(d, m) {
                    Us && d && (typeof d == "object" || typeof d == "function") ? (e || (e = new Us), Nb(e, d, m)) : zs ? (n || (n = new zs), qb(n, d, m)) : (i || (i = {
                        key: {},
                        next: null
                    }), Ub(i, d, m))
                }
            };
            return o
        },
        Hb = String.prototype.replace,
        Wb = /%20/g,
        ma = {
            RFC1738: "RFC1738",
            RFC3986: "RFC3986"
        },
        ll = {
            default: ma.RFC3986,
            formatters: {
                RFC1738: function(t) {
                    return Hb.call(t, Wb, "+")
                },
                RFC3986: function(t) {
                    return String(t)
                }
            },
            RFC1738: ma.RFC1738,
            RFC3986: ma.RFC3986
        },
        Xb = ll,
        va = Object.prototype.hasOwnProperty,
        Ni = Array.isArray,
        Vn = function() {
            for (var t = [], e = 0; e < 256; ++e) t.push("%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase());
            return t
        }(),
        Yb = function(e) {
            for (; e.length > 1;) {
                var n = e.pop(),
                    i = n.obj[n.prop];
                if (Ni(i)) {
                    for (var o = [], d = 0; d < i.length; ++d) typeof i[d] < "u" && o.push(i[d]);
                    n.obj[n.prop] = o
                }
            }
        },
        yu = function(e, n) {
            for (var i = n && n.plainObjects ? Object.create(null) : {}, o = 0; o < e.length; ++o) typeof e[o] < "u" && (i[o] = e[o]);
            return i
        },
        Kb = function t(e, n, i) {
            if (!n) return e;
            if (typeof n != "object") {
                if (Ni(e)) e.push(n);
                else if (e && typeof e == "object")(i && (i.plainObjects || i.allowPrototypes) || !va.call(Object.prototype, n)) && (e[n] = !0);
                else return [e, n];
                return e
            }
            if (!e || typeof e != "object") return [e].concat(n);
            var o = e;
            return Ni(e) && !Ni(n) && (o = yu(e, i)), Ni(e) && Ni(n) ? (n.forEach(function(d, m) {
                if (va.call(e, m)) {
                    var C = e[m];
                    C && typeof C == "object" && d && typeof d == "object" ? e[m] = t(C, d, i) : e.push(d)
                } else e[m] = d
            }), e) : Object.keys(n).reduce(function(d, m) {
                var C = n[m];
                return va.call(d, m) ? d[m] = t(d[m], C, i) : d[m] = C, d
            }, o)
        },
        Jb = function(e, n) {
            return Object.keys(n).reduce(function(i, o) {
                return i[o] = n[o], i
            }, e)
        },
        Qb = function(t, e, n) {
            var i = t.replace(/\+/g, " ");
            if (n === "iso-8859-1") return i.replace(/%[0-9a-f]{2}/gi, unescape);
            try {
                return decodeURIComponent(i)
            } catch {
                return i
            }
        },
        Zb = function(e, n, i, o, d) {
            if (e.length === 0) return e;
            var m = e;
            if (typeof e == "symbol" ? m = Symbol.prototype.toString.call(e) : typeof e != "string" && (m = String(e)), i === "iso-8859-1") return escape(m).replace(/%u[0-9a-f]{4}/gi, function(D) {
                return "%26%23" + parseInt(D.slice(2), 16) + "%3B"
            });
            for (var C = "", S = 0; S < m.length; ++S) {
                var T = m.charCodeAt(S);
                if (T === 45 || T === 46 || T === 95 || T === 126 || T >= 48 && T <= 57 || T >= 65 && T <= 90 || T >= 97 && T <= 122 || d === Xb.RFC1738 && (T === 40 || T === 41)) {
                    C += m.charAt(S);
                    continue
                }
                if (T < 128) {
                    C = C + Vn[T];
                    continue
                }
                if (T < 2048) {
                    C = C + (Vn[192 | T >> 6] + Vn[128 | T & 63]);
                    continue
                }
                if (T < 55296 || T >= 57344) {
                    C = C + (Vn[224 | T >> 12] + Vn[128 | T >> 6 & 63] + Vn[128 | T & 63]);
                    continue
                }
                S += 1, T = 65536 + ((T & 1023) << 10 | m.charCodeAt(S) & 1023), C += Vn[240 | T >> 18] + Vn[128 | T >> 12 & 63] + Vn[128 | T >> 6 & 63] + Vn[128 | T & 63]
            }
            return C
        },
        ew = function(e) {
            for (var n = [{
                    obj: {
                        o: e
                    },
                    prop: "o"
                }], i = [], o = 0; o < n.length; ++o)
                for (var d = n[o], m = d.obj[d.prop], C = Object.keys(m), S = 0; S < C.length; ++S) {
                    var T = C[S],
                        D = m[T];
                    typeof D == "object" && D !== null && i.indexOf(D) === -1 && (n.push({
                        obj: m,
                        prop: T
                    }), i.push(D))
                }
            return Yb(n), e
        },
        tw = function(e) {
            return Object.prototype.toString.call(e) === "[object RegExp]"
        },
        nw = function(e) {
            return !e || typeof e != "object" ? !1 : !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e))
        },
        iw = function(e, n) {
            return [].concat(e, n)
        },
        rw = function(e, n) {
            if (Ni(e)) {
                for (var i = [], o = 0; o < e.length; o += 1) i.push(n(e[o]));
                return i
            }
            return n(e)
        },
        bu = {
            arrayToObject: yu,
            assign: Jb,
            combine: iw,
            compact: ew,
            decode: Qb,
            encode: Zb,
            isBuffer: nw,
            isRegExp: tw,
            maybeMap: rw,
            merge: Kb
        },
        wu = Gb,
        qa = bu,
        ls = ll,
        sw = Object.prototype.hasOwnProperty,
        uc = {
            brackets: function(e) {
                return e + "[]"
            },
            comma: "comma",
            indices: function(e, n) {
                return e + "[" + n + "]"
            },
            repeat: function(e) {
                return e
            }
        },
        ni = Array.isArray,
        ow = String.prototype.split,
        aw = Array.prototype.push,
        Cu = function(t, e) {
            aw.apply(t, ni(e) ? e : [e])
        },
        lw = Date.prototype.toISOString,
        hc = ls.default,
        nn = {
            addQueryPrefix: !1,
            allowDots: !1,
            charset: "utf-8",
            charsetSentinel: !1,
            delimiter: "&",
            encode: !0,
            encoder: qa.encode,
            encodeValuesOnly: !1,
            format: hc,
            formatter: ls.formatters[hc],
            indices: !1,
            serializeDate: function(e) {
                return lw.call(e)
            },
            skipNulls: !1,
            strictNullHandling: !1
        },
        cw = function(e) {
            return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "symbol" || typeof e == "bigint"
        },
        ya = {},
        uw = function t(e, n, i, o, d, m, C, S, T, D, V, Y, ie, K, re, v) {
            for (var P = e, H = v, ae = 0, se = !1;
                (H = H.get(ya)) !== void 0 && !se;) {
                var ve = H.get(e);
                if (ae += 1, typeof ve < "u") {
                    if (ve === ae) throw new RangeError("Cyclic object value");
                    se = !0
                }
                typeof H.get(ya) > "u" && (ae = 0)
            }
            if (typeof S == "function" ? P = S(n, P) : P instanceof Date ? P = V(P) : i === "comma" && ni(P) && (P = qa.maybeMap(P, function(ue) {
                    return ue instanceof Date ? V(ue) : ue
                })), P === null) {
                if (d) return C && !K ? C(n, nn.encoder, re, "key", Y) : n;
                P = ""
            }
            if (cw(P) || qa.isBuffer(P)) {
                if (C) {
                    var f = K ? n : C(n, nn.encoder, re, "key", Y);
                    if (i === "comma" && K) {
                        for (var Ee = ow.call(String(P), ","), Oe = "", Pe = 0; Pe < Ee.length; ++Pe) Oe += (Pe === 0 ? "" : ",") + ie(C(Ee[Pe], nn.encoder, re, "value", Y));
                        return [ie(f) + (o && ni(P) && Ee.length === 1 ? "[]" : "") + "=" + Oe]
                    }
                    return [ie(f) + "=" + ie(C(P, nn.encoder, re, "value", Y))]
                }
                return [ie(n) + "=" + ie(String(P))]
            }
            var lt = [];
            if (typeof P > "u") return lt;
            var Ve;
            if (i === "comma" && ni(P)) Ve = [{
                value: P.length > 0 ? P.join(",") || null : void 0
            }];
            else if (ni(S)) Ve = S;
            else {
                var J = Object.keys(P);
                Ve = T ? J.sort(T) : J
            }
            for (var je = o && ni(P) && P.length === 1 ? n + "[]" : n, z = 0; z < Ve.length; ++z) {
                var oe = Ve[z],
                    Ae = typeof oe == "object" && typeof oe.value < "u" ? oe.value : P[oe];
                if (!(m && Ae === null)) {
                    var we = ni(P) ? typeof i == "function" ? i(je, oe) : je : je + (D ? "." + oe : "[" + oe + "]");
                    v.set(e, ae);
                    var ye = wu();
                    ye.set(ya, v), Cu(lt, t(Ae, we, i, o, d, m, C, S, T, D, V, Y, ie, K, re, ye))
                }
            }
            return lt
        },
        hw = function(e) {
            if (!e) return nn;
            if (e.encoder !== null && typeof e.encoder < "u" && typeof e.encoder != "function") throw new TypeError("Encoder has to be a function.");
            var n = e.charset || nn.charset;
            if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var i = ls.default;
            if (typeof e.format < "u") {
                if (!sw.call(ls.formatters, e.format)) throw new TypeError("Unknown format option provided.");
                i = e.format
            }
            var o = ls.formatters[i],
                d = nn.filter;
            return (typeof e.filter == "function" || ni(e.filter)) && (d = e.filter), {
                addQueryPrefix: typeof e.addQueryPrefix == "boolean" ? e.addQueryPrefix : nn.addQueryPrefix,
                allowDots: typeof e.allowDots > "u" ? nn.allowDots : !!e.allowDots,
                charset: n,
                charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : nn.charsetSentinel,
                delimiter: typeof e.delimiter > "u" ? nn.delimiter : e.delimiter,
                encode: typeof e.encode == "boolean" ? e.encode : nn.encode,
                encoder: typeof e.encoder == "function" ? e.encoder : nn.encoder,
                encodeValuesOnly: typeof e.encodeValuesOnly == "boolean" ? e.encodeValuesOnly : nn.encodeValuesOnly,
                filter: d,
                format: i,
                formatter: o,
                serializeDate: typeof e.serializeDate == "function" ? e.serializeDate : nn.serializeDate,
                skipNulls: typeof e.skipNulls == "boolean" ? e.skipNulls : nn.skipNulls,
                sort: typeof e.sort == "function" ? e.sort : null,
                strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : nn.strictNullHandling
            }
        },
        dw = function(t, e) {
            var n = t,
                i = hw(e),
                o, d;
            typeof i.filter == "function" ? (d = i.filter, n = d("", n)) : ni(i.filter) && (d = i.filter, o = d);
            var m = [];
            if (typeof n != "object" || n === null) return "";
            var C;
            e && e.arrayFormat in uc ? C = e.arrayFormat : e && "indices" in e ? C = e.indices ? "indices" : "repeat" : C = "indices";
            var S = uc[C];
            if (e && "commaRoundTrip" in e && typeof e.commaRoundTrip != "boolean") throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
            var T = S === "comma" && e && e.commaRoundTrip;
            o || (o = Object.keys(n)), i.sort && o.sort(i.sort);
            for (var D = wu(), V = 0; V < o.length; ++V) {
                var Y = o[V];
                i.skipNulls && n[Y] === null || Cu(m, uw(n[Y], Y, S, T, i.strictNullHandling, i.skipNulls, i.encode ? i.encoder : null, i.filter, i.sort, i.allowDots, i.serializeDate, i.format, i.formatter, i.encodeValuesOnly, i.charset, D))
            }
            var ie = m.join(i.delimiter),
                K = i.addQueryPrefix === !0 ? "?" : "";
            return i.charsetSentinel && (i.charset === "iso-8859-1" ? K += "utf8=%26%2310003%3B&" : K += "utf8=%E2%9C%93&"), ie.length > 0 ? K + ie : ""
        },
        _r = bu,
        ja = Object.prototype.hasOwnProperty,
        fw = Array.isArray,
        Zt = {
            allowDots: !1,
            allowPrototypes: !1,
            allowSparse: !1,
            arrayLimit: 20,
            charset: "utf-8",
            charsetSentinel: !1,
            comma: !1,
            decoder: _r.decode,
            delimiter: "&",
            depth: 5,
            ignoreQueryPrefix: !1,
            interpretNumericEntities: !1,
            parameterLimit: 1e3,
            parseArrays: !0,
            plainObjects: !1,
            strictNullHandling: !1
        },
        pw = function(t) {
            return t.replace(/&#(\d+);/g, function(e, n) {
                return String.fromCharCode(parseInt(n, 10))
            })
        },
        _u = function(t, e) {
            return t && typeof t == "string" && e.comma && t.indexOf(",") > -1 ? t.split(",") : t
        },
        gw = "utf8=%26%2310003%3B",
        mw = "utf8=%E2%9C%93",
        vw = function(e, n) {
            var i = {},
                o = n.ignoreQueryPrefix ? e.replace(/^\?/, "") : e,
                d = n.parameterLimit === 1 / 0 ? void 0 : n.parameterLimit,
                m = o.split(n.delimiter, d),
                C = -1,
                S, T = n.charset;
            if (n.charsetSentinel)
                for (S = 0; S < m.length; ++S) m[S].indexOf("utf8=") === 0 && (m[S] === mw ? T = "utf-8" : m[S] === gw && (T = "iso-8859-1"), C = S, S = m.length);
            for (S = 0; S < m.length; ++S)
                if (S !== C) {
                    var D = m[S],
                        V = D.indexOf("]="),
                        Y = V === -1 ? D.indexOf("=") : V + 1,
                        ie, K;
                    Y === -1 ? (ie = n.decoder(D, Zt.decoder, T, "key"), K = n.strictNullHandling ? null : "") : (ie = n.decoder(D.slice(0, Y), Zt.decoder, T, "key"), K = _r.maybeMap(_u(D.slice(Y + 1), n), function(re) {
                        return n.decoder(re, Zt.decoder, T, "value")
                    })), K && n.interpretNumericEntities && T === "iso-8859-1" && (K = pw(K)), D.indexOf("[]=") > -1 && (K = fw(K) ? [K] : K), ja.call(i, ie) ? i[ie] = _r.combine(i[ie], K) : i[ie] = K
                } return i
        },
        yw = function(t, e, n, i) {
            for (var o = i ? e : _u(e, n), d = t.length - 1; d >= 0; --d) {
                var m, C = t[d];
                if (C === "[]" && n.parseArrays) m = [].concat(o);
                else {
                    m = n.plainObjects ? Object.create(null) : {};
                    var S = C.charAt(0) === "[" && C.charAt(C.length - 1) === "]" ? C.slice(1, -1) : C,
                        T = parseInt(S, 10);
                    !n.parseArrays && S === "" ? m = {
                        0: o
                    } : !isNaN(T) && C !== S && String(T) === S && T >= 0 && n.parseArrays && T <= n.arrayLimit ? (m = [], m[T] = o) : S !== "__proto__" && (m[S] = o)
                }
                o = m
            }
            return o
        },
        bw = function(e, n, i, o) {
            if (!!e) {
                var d = i.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e,
                    m = /(\[[^[\]]*])/,
                    C = /(\[[^[\]]*])/g,
                    S = i.depth > 0 && m.exec(d),
                    T = S ? d.slice(0, S.index) : d,
                    D = [];
                if (T) {
                    if (!i.plainObjects && ja.call(Object.prototype, T) && !i.allowPrototypes) return;
                    D.push(T)
                }
                for (var V = 0; i.depth > 0 && (S = C.exec(d)) !== null && V < i.depth;) {
                    if (V += 1, !i.plainObjects && ja.call(Object.prototype, S[1].slice(1, -1)) && !i.allowPrototypes) return;
                    D.push(S[1])
                }
                return S && D.push("[" + d.slice(S.index) + "]"), yw(D, n, i, o)
            }
        },
        ww = function(e) {
            if (!e) return Zt;
            if (e.decoder !== null && e.decoder !== void 0 && typeof e.decoder != "function") throw new TypeError("Decoder has to be a function.");
            if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var n = typeof e.charset > "u" ? Zt.charset : e.charset;
            return {
                allowDots: typeof e.allowDots > "u" ? Zt.allowDots : !!e.allowDots,
                allowPrototypes: typeof e.allowPrototypes == "boolean" ? e.allowPrototypes : Zt.allowPrototypes,
                allowSparse: typeof e.allowSparse == "boolean" ? e.allowSparse : Zt.allowSparse,
                arrayLimit: typeof e.arrayLimit == "number" ? e.arrayLimit : Zt.arrayLimit,
                charset: n,
                charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : Zt.charsetSentinel,
                comma: typeof e.comma == "boolean" ? e.comma : Zt.comma,
                decoder: typeof e.decoder == "function" ? e.decoder : Zt.decoder,
                delimiter: typeof e.delimiter == "string" || _r.isRegExp(e.delimiter) ? e.delimiter : Zt.delimiter,
                depth: typeof e.depth == "number" || e.depth === !1 ? +e.depth : Zt.depth,
                ignoreQueryPrefix: e.ignoreQueryPrefix === !0,
                interpretNumericEntities: typeof e.interpretNumericEntities == "boolean" ? e.interpretNumericEntities : Zt.interpretNumericEntities,
                parameterLimit: typeof e.parameterLimit == "number" ? e.parameterLimit : Zt.parameterLimit,
                parseArrays: e.parseArrays !== !1,
                plainObjects: typeof e.plainObjects == "boolean" ? e.plainObjects : Zt.plainObjects,
                strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : Zt.strictNullHandling
            }
        },
        Cw = function(t, e) {
            var n = ww(e);
            if (t === "" || t === null || typeof t > "u") return n.plainObjects ? Object.create(null) : {};
            for (var i = typeof t == "string" ? vw(t, n) : t, o = n.plainObjects ? Object.create(null) : {}, d = Object.keys(i), m = 0; m < d.length; ++m) {
                var C = d[m],
                    S = bw(C, i[C], n, typeof t == "string");
                o = _r.merge(o, S, n)
            }
            return n.allowSparse === !0 ? o : _r.compact(o)
        },
        _w = dw,
        xw = Cw,
        Ew = ll,
        xu = {
            formats: Ew,
            parse: xw,
            stringify: _w
        };
    class Sw {
        constructor(e) {
            this.code = e.code, this.token = e.token, this.host = e.host
        }
    }
    class kw {
        constructor(e) {
            this.appId = e.appId, this.appTag = e.appTag, this.audienceEnabled = e.audienceEnabled, this.code = e.code, this.host = e.host, this.audienceHost = e.audienceHost, this.locked = e.locked, this.full = e.full, this.moderationEnabled = e.moderationEnabled, this.passwordRequired = e.passwordRequired, this.twitchLocked = e.twitchLocked, this.locale = e.locale, this.keepalive = e.keepalive, this.controllerBranch = e.controllerBranch
        }
    }
    class Tw {
        constructor(e) {
            this.connections = e.connections
        }
    }
    class Aw {
        constructor(e) {
            this.cause = e.cause
        }
        whenReceived(e) {
            e.disconnect()
        }
    }
    class Ow {}
    var _o = {
        CreateRoomReply: Sw,
        GetRoomReply: kw,
        GetAudienceReply: Tw,
        RoomExit: Aw,
        RoomLock: Ow
    };
    const dc = La.exports,
        Rw = xu,
        {
            CreateRoomReply: Iw,
            GetRoomReply: Dw
        } = _o;
    class Mw {
        constructor(e) {
            if (!e.host) throw new Error("unable to create ecast APIClient: no host provided");
            if (this.host = e.host, !e.scheme) throw new Error("unable to create ecast APIClient: no scheme provided");
            this.scheme = e.scheme
        }
        url(e, n) {
            if (n) {
                let i = Rw.stringify(n);
                return `${this.scheme}://${window.location.hostname}/api/v2${e}?${i}`
            }
            return `${this.scheme}://${window.location.hostname}/api/v2${e}`
        }
        async createRoom(e) {
            let n = {
                userId: e.userId || "fart",
                appTag: e.appTag || "test"
            };
            e.password && (n.password = e.password), e.moderatorPassword && (n.moderatorPassword = e.moderatorPassword), e.twitchLocked && (n.twitchLocked = e.twitchLocked), e.locale && (n.locale = e.locale), e.keepalive && (n.keepalive = e.keepalive), e.controllerBranch && (n.controllerBranch = e.controllerBranch);
            let i = this.url("/rooms", n),
                m = await (await dc(i, {
                    method: "POST"
                })).json();
            if (!m.ok) throw new Error(`failed to create room: ${m.error}`);
            let C = m.body;
            return new Iw({
                code: C.code,
                token: C.token,
                host: C.host
            })
        }
        async getRoom(e) {
            let n = this.url(`/rooms/${e.code}`),
                o = await (await dc(n)).json();
            if (!o.ok) throw new Error(`unable to get room with options ${JSON.stringify(e)}: ${o.error}`);
            let d = o.body;
            return new Dw({
                appId: d.appId,
                appTag: d.appTag,
                audienceEnabled: d.audienceEnabled,
                code: d.code,
                host: d.host,
                audienceHost: d.audienceHost,
                locked: d.locked,
                full: d.full,
                moderationEnabled: d.moderationEnabled,
                passwordRequired: d.passwordRequired,
                twitchLocked: d.twitchLocked,
                locale: d.locale,
                keepalive: d.keepalive,
                controllerBranch: d.controllerBranch
            })
        }
    }
    var Lw = {
            APIClient: Mw
        },
        dr = null;
    typeof WebSocket < "u" ? dr = WebSocket : typeof MozWebSocket < "u" ? dr = MozWebSocket : typeof vt < "u" ? dr = vt.WebSocket || vt.MozWebSocket : typeof window < "u" ? dr = window.WebSocket || window.MozWebSocket : typeof self < "u" && (dr = self.WebSocket || self.MozWebSocket);
    var Pw = dr,
        cl = {
            exports: {}
        },
        vr = typeof Reflect == "object" ? Reflect : null,
        fc = vr && typeof vr.apply == "function" ? vr.apply : function(e, n, i) {
            return Function.prototype.apply.call(e, n, i)
        },
        Js;
    vr && typeof vr.ownKeys == "function" ? Js = vr.ownKeys : Object.getOwnPropertySymbols ? Js = function(e) {
        return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
    } : Js = function(e) {
        return Object.getOwnPropertyNames(e)
    };

    function $w(t) {
        console && console.warn && console.warn(t)
    }
    var Eu = Number.isNaN || function(e) {
        return e !== e
    };

    function Rt() {
        Rt.init.call(this)
    }
    cl.exports = Rt;
    cl.exports.once = qw;
    Rt.EventEmitter = Rt;
    Rt.prototype._events = void 0;
    Rt.prototype._eventsCount = 0;
    Rt.prototype._maxListeners = void 0;
    var pc = 10;

    function xo(t) {
        if (typeof t != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t)
    }
    Object.defineProperty(Rt, "defaultMaxListeners", {
        enumerable: !0,
        get: function() {
            return pc
        },
        set: function(t) {
            if (typeof t != "number" || t < 0 || Eu(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
            pc = t
        }
    });
    Rt.init = function() {
        (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
    };
    Rt.prototype.setMaxListeners = function(e) {
        if (typeof e != "number" || e < 0 || Eu(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
        return this._maxListeners = e, this
    };

    function Su(t) {
        return t._maxListeners === void 0 ? Rt.defaultMaxListeners : t._maxListeners
    }
    Rt.prototype.getMaxListeners = function() {
        return Su(this)
    };
    Rt.prototype.emit = function(e) {
        for (var n = [], i = 1; i < arguments.length; i++) n.push(arguments[i]);
        var o = e === "error",
            d = this._events;
        if (d !== void 0) o = o && d.error === void 0;
        else if (!o) return !1;
        if (o) {
            var m;
            if (n.length > 0 && (m = n[0]), m instanceof Error) throw m;
            var C = new Error("Unhandled error." + (m ? " (" + m.message + ")" : ""));
            throw C.context = m, C
        }
        var S = d[e];
        if (S === void 0) return !1;
        if (typeof S == "function") fc(S, this, n);
        else
            for (var T = S.length, D = Ru(S, T), i = 0; i < T; ++i) fc(D[i], this, n);
        return !0
    };

    function ku(t, e, n, i) {
        var o, d, m;
        if (xo(n), d = t._events, d === void 0 ? (d = t._events = Object.create(null), t._eventsCount = 0) : (d.newListener !== void 0 && (t.emit("newListener", e, n.listener ? n.listener : n), d = t._events), m = d[e]), m === void 0) m = d[e] = n, ++t._eventsCount;
        else if (typeof m == "function" ? m = d[e] = i ? [n, m] : [m, n] : i ? m.unshift(n) : m.push(n), o = Su(t), o > 0 && m.length > o && !m.warned) {
            m.warned = !0;
            var C = new Error("Possible EventEmitter memory leak detected. " + m.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            C.name = "MaxListenersExceededWarning", C.emitter = t, C.type = e, C.count = m.length, $w(C)
        }
        return t
    }
    Rt.prototype.addListener = function(e, n) {
        return ku(this, e, n, !1)
    };
    Rt.prototype.on = Rt.prototype.addListener;
    Rt.prototype.prependListener = function(e, n) {
        return ku(this, e, n, !0)
    };

    function Nw() {
        if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
    }

    function Tu(t, e, n) {
        var i = {
                fired: !1,
                wrapFn: void 0,
                target: t,
                type: e,
                listener: n
            },
            o = Nw.bind(i);
        return o.listener = n, i.wrapFn = o, o
    }
    Rt.prototype.once = function(e, n) {
        return xo(n), this.on(e, Tu(this, e, n)), this
    };
    Rt.prototype.prependOnceListener = function(e, n) {
        return xo(n), this.prependListener(e, Tu(this, e, n)), this
    };
    Rt.prototype.removeListener = function(e, n) {
        var i, o, d, m, C;
        if (xo(n), o = this._events, o === void 0) return this;
        if (i = o[e], i === void 0) return this;
        if (i === n || i.listener === n) --this._eventsCount === 0 ? this._events = Object.create(null) : (delete o[e], o.removeListener && this.emit("removeListener", e, i.listener || n));
        else if (typeof i != "function") {
            for (d = -1, m = i.length - 1; m >= 0; m--)
                if (i[m] === n || i[m].listener === n) {
                    C = i[m].listener, d = m;
                    break
                } if (d < 0) return this;
            d === 0 ? i.shift() : Vw(i, d), i.length === 1 && (o[e] = i[0]), o.removeListener !== void 0 && this.emit("removeListener", e, C || n)
        }
        return this
    };
    Rt.prototype.off = Rt.prototype.removeListener;
    Rt.prototype.removeAllListeners = function(e) {
        var n, i, o;
        if (i = this._events, i === void 0) return this;
        if (i.removeListener === void 0) return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : i[e] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete i[e]), this;
        if (arguments.length === 0) {
            var d = Object.keys(i),
                m;
            for (o = 0; o < d.length; ++o) m = d[o], m !== "removeListener" && this.removeAllListeners(m);
            return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
        }
        if (n = i[e], typeof n == "function") this.removeListener(e, n);
        else if (n !== void 0)
            for (o = n.length - 1; o >= 0; o--) this.removeListener(e, n[o]);
        return this
    };

    function Au(t, e, n) {
        var i = t._events;
        if (i === void 0) return [];
        var o = i[e];
        return o === void 0 ? [] : typeof o == "function" ? n ? [o.listener || o] : [o] : n ? Bw(o) : Ru(o, o.length)
    }
    Rt.prototype.listeners = function(e) {
        return Au(this, e, !0)
    };
    Rt.prototype.rawListeners = function(e) {
        return Au(this, e, !1)
    };
    Rt.listenerCount = function(t, e) {
        return typeof t.listenerCount == "function" ? t.listenerCount(e) : Ou.call(t, e)
    };
    Rt.prototype.listenerCount = Ou;

    function Ou(t) {
        var e = this._events;
        if (e !== void 0) {
            var n = e[t];
            if (typeof n == "function") return 1;
            if (n !== void 0) return n.length
        }
        return 0
    }
    Rt.prototype.eventNames = function() {
        return this._eventsCount > 0 ? Js(this._events) : []
    };

    function Ru(t, e) {
        for (var n = new Array(e), i = 0; i < e; ++i) n[i] = t[i];
        return n
    }

    function Vw(t, e) {
        for (; e + 1 < t.length; e++) t[e] = t[e + 1];
        t.pop()
    }

    function Bw(t) {
        for (var e = new Array(t.length), n = 0; n < e.length; ++n) e[n] = t[n].listener || t[n];
        return e
    }

    function qw(t, e) {
        return new Promise(function(n, i) {
            function o(m) {
                t.removeListener(e, d), i(m)
            }

            function d() {
                typeof t.removeListener == "function" && t.removeListener("error", o), n([].slice.call(arguments))
            }
            Iu(t, e, d, {
                once: !0
            }), e !== "error" && jw(t, o, {
                once: !0
            })
        })
    }

    function jw(t, e, n) {
        typeof t.on == "function" && Iu(t, "error", e, n)
    }

    function Iu(t, e, n, i) {
        if (typeof t.on == "function") i.once ? t.once(e, n) : t.on(e, n);
        else if (typeof t.addEventListener == "function") t.addEventListener(e, function o(d) {
            i.once && t.removeEventListener(e, o), n(d)
        });
        else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t)
    }
    class Fw {
        constructor(e) {
            e && (this.error = e.error, this.to = e.to)
        }
        toString() {
            return `ObservedError{
	to:${this.to}
	error:${this.error}
}`
        }
    }
    class Eo extends Error {
        constructor(e) {
            super(e), e && (this.code = e.code, this.message = e.message)
        }
    }
    class bs extends Eo {
        constructor(e) {
            super(e), this.code = 1e3, this.message = e && e.message ? e.message : "ecast server error"
        }
    }
    class Du extends bs {
        constructor(e) {
            super(e), this.code = 1001, this.message = e && e.message ? e.message : "create room failed"
        }
    }
    class Mu extends bs {
        constructor(e) {
            super(e), this.code = 1002, this.message = e && e.message ? e.message : "unable to connect to room"
        }
    }
    class Lu extends bs {
        constructor(e) {
            super(e), this.code = 1003, this.message = e && e.message ? e.message : "server is shutting down"
        }
    }
    class Tt extends Eo {
        constructor(e) {
            super(e), this.code = 2e3, this.message = e && e.message ? e.message : "ecast client error"
        }
    }
    class Pu extends Tt {
        constructor(e) {
            super(e), this.code = 2001, this.message = e && e.message ? e.message : "parse error in ecast protocol"
        }
    }
    class $u extends Tt {
        constructor(e) {
            super(e), this.code = 2002, this.message = e && e.message ? e.message : "missing opcode"
        }
    }
    class Nu extends Tt {
        constructor(e) {
            super(e), this.code = 2003, this.message = e && e.message ? e.message : "invalid opcode"
        }
    }
    class Vu extends Tt {
        constructor(e) {
            super(e), this.code = 2004, this.message = e && e.message ? e.message : "invalid arguments"
        }
    }
    class Bu extends Tt {
        constructor(e) {
            super(e), this.code = 2005, this.message = e && e.message ? e.message : "entity not found"
        }
    }
    class qu extends Tt {
        constructor(e) {
            super(e), this.code = 2006, this.message = e && e.message ? e.message : "an entity already exists with that key"
        }
    }
    class ju extends Tt {
        constructor(e) {
            super(e), this.code = 2007, this.message = e && e.message ? e.message : "the entity is not of the expected type"
        }
    }
    class Fu extends Tt {
        constructor(e) {
            super(e), this.code = 2008, this.message = e && e.message ? e.message : "no such client"
        }
    }
    class Uu extends Tt {
        constructor(e) {
            super(e), this.code = 2009, this.message = e && e.message ? e.message : "room is locked"
        }
    }
    class zu extends Tt {
        constructor(e) {
            super(e), this.code = 2010, this.message = e && e.message ? e.message : "room is full"
        }
    }
    class Gu extends Tt {
        constructor(e) {
            super(e), this.code = 2011, this.message = e && e.message ? e.message : "no such license"
        }
    }
    class Hu extends Tt {
        constructor(e) {
            super(e), this.code = 2012, this.message = e && e.message ? e.message : "invalid license"
        }
    }
    class Wu extends Tt {
        constructor(e) {
            super(e), this.code = 2013, this.message = e && e.message ? e.message : "room not found"
        }
    }
    class Xu extends Tt {
        constructor(e) {
            super(e), this.code = 2014, this.message = e && e.message ? e.message : "requested role does not exist"
        }
    }
    class Yu extends Tt {
        constructor(e) {
            super(e), this.code = 2015, this.message = e && e.message ? e.message : "twitch login required"
        }
    }
    class Ku extends Tt {
        constructor(e) {
            super(e), this.code = 2016, this.message = e && e.message ? e.message : "no such option"
        }
    }
    class Ju extends Tt {
        constructor(e) {
            super(e), this.code = 2017, this.message = e && e.message ? e.message : "password required"
        }
    }
    class Qu extends Tt {
        constructor(e) {
            super(e), this.code = 2018, this.message = e && e.message ? e.message : "invalid room password"
        }
    }
    class Zu extends Tt {
        constructor(e) {
            super(e), this.code = 2019, this.message = e && e.message ? e.message : "missing name"
        }
    }
    class eh extends Tt {
        constructor(e) {
            super(e), this.code = 2021, this.message = e && e.message ? e.message : "text did not pass text filters"
        }
    }
    class th extends Tt {
        constructor(e) {
            super(e), this.code = 2022, this.message = e && e.message ? e.message : "no such filter"
        }
    }
    class nh extends Tt {
        constructor(e) {
            super(e), this.code = 2023, this.message = e && e.message ? e.message : "permission denied"
        }
    }
    class ih extends Tt {
        constructor(e) {
            super(e), this.code = 2024, this.message = e && e.message ? e.message : "not connected to a room"
        }
    }
    class rh extends Tt {
        constructor(e) {
            super(e), this.code = 2025, this.message = e && e.message ? e.message : "illegal operation"
        }
    }
    class sh extends Tt {
        constructor(e) {
            super(e), this.code = 2026, this.message = e && e.message ? e.message : "invalid ACL change"
        }
    }
    class oh extends Tt {
        constructor(e) {
            super(e), this.code = 2027, this.message = e && e.message ? e.message : "room has already ended"
        }
    }
    class ah extends Tt {
        constructor(e) {
            super(e), this.code = 2028, this.message = e && e.message ? e.message : "the entity is locked"
        }
    }
    class lh extends Tt {
        constructor(e) {
            super(e), this.code = 2420, this.message = e && e.message ? e.message : "rate limit exceeded"
        }
    }

    function Uw({
        code: t,
        message: e
    }) {
        const n = zw[t];
        return n ? new n({
            message: e
        }) : new Eo({
            message: e
        })
    }
    var ii = {
        createError: Uw,
        CallError: Eo,
        EcastServerError: bs,
        EcastCreateRoomFailed: Du,
        EcastDialRoomFailed: Mu,
        EcastServerIsShuttingDown: Lu,
        EcastClientError: Tt,
        EcastParseError: Pu,
        EcastRequestIsMissingOpcode: $u,
        EcastRequestHasInvalidOpcode: Nu,
        EcastRequestHasInvalidArguments: Vu,
        EcastEntityNotFound: Bu,
        EcastEntityAlreadyExists: qu,
        EcastEntityTypeError: ju,
        EcastNoSuchClient: Fu,
        EcastRoomIsLocked: Uu,
        EcastRoomIsFull: zu,
        EcastLicenseNotFound: Gu,
        EcastLicenseCheckFailed: Hu,
        EcastRoomNotFound: Wu,
        EcastInvalidRole: Xu,
        EcastTwitchLoginRequired: Yu,
        EcastInvalidOption: Ku,
        EcastPasswordRequired: Ju,
        EcastInvalidPassword: Qu,
        EcastNameRequired: Zu,
        EcastFilterError: eh,
        EcastNoSuchFilter: th,
        EcastPermissionDenied: nh,
        EcastNotConnected: ih,
        EcastIllegalOperation: rh,
        EcastACLChangeDenied: sh,
        EcastRoomHasEnded: oh,
        EcastEntityLocked: ah,
        EcastRateLimitExceeded: lh,
        ObservedError: Fw
    };
    const zw = {
        1e3: bs,
        1001: Du,
        1002: Mu,
        1003: Lu,
        2e3: Tt,
        2001: Pu,
        2002: $u,
        2003: Nu,
        2004: Vu,
        2005: Bu,
        2006: qu,
        2007: ju,
        2008: Fu,
        2009: Uu,
        2010: zu,
        2011: Gu,
        2012: Hu,
        2013: Wu,
        2014: Xu,
        2015: Yu,
        2016: Ku,
        2017: Ju,
        2018: Qu,
        2019: Zu,
        2021: eh,
        2022: th,
        2023: nh,
        2024: ih,
        2025: rh,
        2026: sh,
        2027: oh,
        2028: ah,
        2420: lh
    };
    class Gw {
        constructor(e) {
            this.id = e.id, this.deviceId = e.deviceId, this.name = e.name, this.secret = e.secret, this.reconnect = e.reconnect, this.entities = e.entities, this.here = e.here, this.profile = e.profile, this.replayEnd = e.replayEnd
        }
    }
    class Hw {
        constructor(e) {
            this.id = e.id, this.userId = e.userId, this.name = e.name, this.role = e.role, this.reconnect = e.reconnect
        }
    }
    class Ww {
        constructor(e) {
            this.id = e.id, this.role = e.role
        }
    }
    class Xw {
        constructor(e) {
            this.to = e.to, this.from = e.from, this.body = e.body, this.userId = e.userId
        }
    }
    class Yw {
        constructor(e) {
            this.id = e.id, this.banned = e.banned, this.reason = e.reason
        }
    }
    var ul = {
        ClientConnected: Hw,
        ClientDisconnected: Ww,
        ClientKicked: Yw,
        ClientSend: Xw,
        ClientWelcome: Gw
    };
    class Kw {
        constructor(e) {
            this.choices = e.choices, this.key = e.key, this.meta = e.meta || {}
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `CountGroup{
	choices: ${this.choices}
	meta:${JSON.stringify(this.meta)}
}`
        }
    }
    var hl = {
        CountGroup: Kw
    };
    class Jw {
        constructor(e) {
            this.key = e.key, this.count = e.count, this.meta = e.meta || {}
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `GCounter{
	count:${this.count}
	meta:${this.meta}
}`
        }
    }
    var dl = {
        GCounter: Jw
    };
    class Qw {
        constructor(e) {
            this.pc = e.pc, this.opcode = e.opcode, this.result = e.result
        }
    }
    var ch = {
        Notification: Qw
    };
    class Zw {
        constructor(e) {
            this.from = e.from, this.key = e.key, this.val = e.val, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `ObjectEntity{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
	meta:${JSON.stringify(this.meta)}
}`
        }
        toBlob() {
            return this.val
        }
    }
    class e0 {
        constructor(e) {
            this.message = e.message
        }
        toString() {
            return `ObjectEcho{message: ${this.message}}`
        }
    }
    var fl = {
        ObjectEntity: Zw,
        ObjectEcho: e0
    };
    class t0 {
        constructor(e) {
            this.key = e.key, this.count = e.count, this.meta = e.meta || {}
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `PNCounter{
	count:${this.count}
	meta:${JSON.stringify(this.meta)}
}`
        }
    }
    var pl = {
        PNCounter: t0
    };
    class n0 {
        constructor(e) {
            this.pc = e.pc, this.re = e.re, this.opcode = e.opcode, this.result = e.result
        }
    }
    var uh = {
        Reply: n0
    };
    class i0 {
        constructor(e) {
            this.seq = e.seq, this.opcode = e.opcode, this.params = e.params
        }
    }
    var r0 = {
        Request: i0
    };
    class s0 {
        constructor(e) {
            this.from = e.from, this.key = e.key, this.text = e.text, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
        }
        whenReceived(e) {
            e.entities[this.key] = this, e.emit("text " + this.key, this)
        }
        toString() {
            return `TextEntity{
	key:${this.key}
	text: ${this.text}
	meta:${JSON.stringify(this.meta)}
}`
        }
        toBlob() {
            return JSON.parse(this.text)
        }
    }
    class o0 {
        constructor(e) {
            this.message = e.message
        }
        toString() {
            return `TextEcho{message: ${this.message}
}`
        }
    }
    var gl = {
        TextEntity: s0,
        TextEcho: o0
    };
    class a0 {
        constructor(e) {
            this.key = e.key, this.elements = e.elements, this.limit = e.limit, this.meta = e.meta || {}
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `TextRing{
	elements: ${this.elements}
	meta:${JSON.stringify(this.meta)}
}`
        }
    }
    var ml = {
        TextRing: a0
    };
    class l0 {
        constructor(e) {
            this.key = e.key, this.artifactId = e.artifactId, this.categoryId = e.categoryId, this.rootId = e.rootId, this.meta = e.meta || {}
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `ArtifactEntity${JSON.stringify(this)}
`
        }
    }
    var hh = {
        ArtifactEntity: l0
    };
    class c0 {
        constructor(e) {
            this.key = e.key, this.colors = e.colors, this.lines = e.lines, this.live = e.live, this.maxPoints = e.maxPoints, this.size = e.size, this.weights = e.weights, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `Doodle{
	key:${this.key}
	colors:${this.colors}
	lines:${this.lines}
	live:${this.live}
	maxPoints:${this.maxPoints}
	size:${this.size}
	weights:${this.weights}
	meta:${JSON.stringify(this.meta)}
}`
        }
    }
    class u0 {
        constructor(e) {
            this.key = e.key, this.line = e.line
        }
        whenReceived(e) {
            e.entities[this.key].lines.push(this.line)
        }
        toString() {
            return `DoodleLine{
	val:${this.line}
}`
        }
    }
    class h0 {
        constructor(e) {
            this.key = e.key, this.index = e.index
        }
        whenReceived(e) {
            e.entities[this.key].lines.splice(this.index, 1)
        }
        toString() {
            return `DoodleLineRemoved{
	index:${this.index}
}`
        }
    }
    var vl = {
        DoodleEntity: c0,
        DoodleLine: u0,
        DoodleLineRemoved: h0
    };
    class d0 {
        constructor(e) {
            this.key = e.key, this.size = e.size, this.version = e.version, this.from = e.from, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
        }
        whenRecived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `Stack{
	key:${this.key}
	size:${this.size}
	version:${this.version}
	from:${this.from}
	meta:${this.meta}
}`
        }
    }
    class f0 {
        constructor(e) {
            this.key = e.key, this.val = e.val
        }
        toString() {
            return `StackElement{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
}`
        }
    }
    class p0 {
        constructor(e) {
            this.key = e.key, this.vals = e.vals
        }
        toString() {
            return `StackElements{
	key:${this.key}
	values: ${JSON.stringify(this.vals)}
}`
        }
    }
    var dh = {
        StackEntity: d0,
        StackElement: f0,
        StackElements: p0
    };
    class g0 {
        constructor(e) {
            this.key = e.key
        }
        whenReceived(e) {
            delete e.entities[this.key]
        }
        toString() {
            return `DropEntity{
	key:${this.key}
}`
        }
    }
    var fh = {
        DropEntity: g0
    };
    class m0 {
        constructor(e) {
            this.message = e.message
        }
        toString() {
            return `Echo{message: ${this.message}
}`
        }
    }
    var v0 = {
        Echo: m0
    };
    class y0 {
        constructor(e) {
            this.key = e.key, this.from = e.from
        }
        whenReceived(e) {
            e.entities[this.key] && (e.entities[this.key].meta.locked = !0)
        }
        toString() {
            return `LockEntity{
	key:${this.key}
}`
        }
    }
    var b0 = {
        LockEntity: y0
    };
    class w0 {
        constructor() {}
        toString() {
            return "OK"
        }
    }
    var ph = {
        OK: w0
    };
    class C0 {
        constructor(e) {
            this.from = e.from, this.key = e.key, this.val = e.val, this.restrictions = e.restrictions, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
        }
        whenReceived(e) {
            e.entities[this.key] = this
        }
        toString() {
            return `NumberEntity{
	key:${this.key}
	val: ${this.val}
	restrictions: ${JSON.stringify(this.restrictions)}
	meta: ${JSON.stringify(this.meta)}
}`
        }
    }
    var gh = {
        NumberEntity: C0
    };
    const {
        ArtifactEntity: _0
    } = hh, {
        ClientWelcome: x0,
        ClientConnected: E0,
        ClientDisconnected: S0,
        ClientKicked: k0,
        ClientSend: T0
    } = ul, {
        CountGroup: A0
    } = hl, {
        DoodleEntity: O0,
        DoodleLine: R0,
        DoodleLineRemoved: I0
    } = vl, {
        StackEntity: D0,
        StackElement: M0,
        StackElements: L0
    } = dh, {
        DropEntity: P0
    } = fh, {
        Echo: $0
    } = v0, {
        LockEntity: N0
    } = b0, {
        GCounter: V0
    } = dl, {
        GetAudienceReply: B0,
        RoomExit: q0,
        RoomLock: j0
    } = _o, {
        Notification: F0
    } = ch, {
        OK: U0
    } = ph, {
        NumberEntity: z0
    } = gh, {
        ObjectEcho: G0,
        ObjectEntity: H0
    } = fl, {
        PNCounter: gc
    } = pl, {
        Reply: W0
    } = uh, {
        TextEcho: X0,
        TextEntity: Y0
    } = gl, {
        TextRing: K0
    } = ml, {
        createError: mc,
        ObservedError: J0
    } = ii;

    function Fa(t, e, n) {
        switch (t) {
            case "ok":
                return new U0;
            case "echo":
                return new $0({
                    message: e.message
                });
            case "lock":
                return new N0({
                    key: e.key,
                    from: e.from
                });
            case "error":
                return mc({
                    code: e.code,
                    message: e.msg
                });
            case "error/observed":
                return new J0({
                    to: e.to,
                    error: mc({
                        code: e.error.code,
                        message: e.error.msg
                    })
                });
            case "string":
                return e;
            case "text":
                return new Y0({
                    from: e.from,
                    key: e.key,
                    text: e.val,
                    version: e.version,
                    meta: n,
                    acl: e.acl
                });
            case "text/echo":
                return new X0({
                    message: e.message
                });
            case "object":
                return new H0({
                    from: e.from,
                    key: e.key,
                    val: e.val,
                    meta: n,
                    acl: e.acl
                });
            case "object/echo":
                return new G0({
                    message: e.message
                });
            case "drop":
                return new P0({
                    key: e.key
                });
            case "artifact":
                return new _0({
                    key: e.key,
                    artifactId: e.artifactId,
                    categoryId: e.categoryId,
                    rootId: e.rootId,
                    meta: n
                });
            case "client/connected":
                return new E0({
                    id: e.id,
                    userId: e.userId,
                    name: e.name,
                    role: e.role,
                    reconnect: e.reconnect
                });
            case "client/disconnected":
                return new S0({
                    id: e.id,
                    role: e.role
                });
            case "client/kicked":
                return new k0({
                    id: e.id,
                    banned: e.banned,
                    reason: e.reason
                });
            case "client/send":
                return new T0({
                    to: e.to,
                    from: e.from,
                    body: e.body,
                    userId: e.userID
                });
            case "client/welcome": {
                let i = new x0({
                    id: e.id,
                    name: e.name,
                    secret: e.secret,
                    reconnect: e.reconnect,
                    here: e.here,
                    profile: e.profile,
                    replayEnd: e.replayEnd
                });
                if (e.entities) {
                    let o = {};
                    Object.entries(e.entities).forEach(([d, m]) => {
                        o[d] = Fa(m[0], m[1], m[2])
                    }), i.entities = o
                }
                return i
            }
            case "doodle":
                return new O0({
                    key: e.key,
                    colors: e.val.colors,
                    lines: e.val.lines,
                    live: e.val.live,
                    maxPoints: e.val.maxPoints,
                    size: e.val.size,
                    weights: e.val.weights,
                    meta: n,
                    acl: e.acl
                });
            case "doodle/line":
                return new R0({
                    key: e.key,
                    line: e.val
                });
            case "doodle/line/removed":
                return new I0({
                    key: e.key,
                    index: e.index
                });
            case "stack":
                return new D0({
                    key: e.key,
                    size: e.size,
                    from: e.from,
                    version: e.version,
                    meta: e.meta,
                    acl: e.acl
                });
            case "stack/element":
                return new M0({
                    key: e.key,
                    val: e.val
                });
            case "stack/elements":
                return new L0({
                    key: e.key,
                    vals: e.vals
                });
            case "number":
                return new z0({
                    key: e.key,
                    val: e.val,
                    restrictions: e.restrictions,
                    from: e.from,
                    version: e.version,
                    meta: n,
                    acl: e.acl
                });
            case "room/exit":
                return new q0({
                    cause: e.cause
                });
            case "room/lock":
                return new j0;
            case "room/get-audience":
                return new B0({
                    connections: e.connections
                });
            case "audience":
                return new gc({
                    key: t,
                    count: e[1]
                });
            case "audience/count-group":
                return new A0({
                    key: e.key,
                    choices: e.choices,
                    meta: n
                });
            case "audience/text-ring":
                return new K0({
                    key: e.key,
                    elements: e.elements,
                    meta: n
                });
            case "audience/g-counter":
                return new V0({
                    key: e.key,
                    count: e.count,
                    meta: n
                });
            case "audience/pn-counter":
                return new gc({
                    key: e.key,
                    count: e.count,
                    meta: n
                });
            default:
                return console.error(`failed to parse result of type ${t}: ${JSON.stringify(e,null,2)}`), e
        }
    }

    function Q0(t) {
        let e = JSON.parse(t.data),
            n = e.opcode || e.type;
        return e.re ? new W0({
            pc: e.pc,
            re: e.re,
            opcode: n,
            result: Fa(n, e.result)
        }) : new F0({
            pc: e.pc,
            opcode: n,
            result: Fa(n, e.result)
        })
    }
    var Z0 = {
        parseResponseMessage: Q0
    };
    const vc = Pw,
        eC = xu,
        tC = cl.exports,
        {
            CallError: nC
        } = ii,
        {
            ClientWelcome: iC
        } = ul,
        {
            CountGroup: rC
        } = hl,
        {
            GCounter: sC
        } = dl,
        {
            Notification: yc
        } = ch,
        {
            ObjectEntity: ba
        } = fl,
        {
            PNCounter: oC
        } = pl,
        {
            Reply: aC
        } = uh,
        {
            Request: lC
        } = r0,
        {
            TextEntity: wa
        } = gl,
        {
            TextRing: cC
        } = ml,
        {
            parseResponseMessage: uC
        } = Z0,
        {
            DoodleEntity: hC
        } = vl,
        {
            StackEntity: dC
        } = dh,
        fC = 1e3 + Math.floor(Math.random() * 500),
        bc = 13e3;
    class pC extends tC {
        constructor(e) {
            if (super(), this.debug = e.debug || !1, !e.host) throw new Error("unable to create ecast WSClient: no host provided");
            if (this.host = e.host, !e.code) throw new Error("unable to create ecast WSClient: no room code provided");
            if (this.code = e.code, e.scheme ? this.scheme = e.scheme : this.scheme = "wss", e.secret && e.id) this.id = e.id, this.secret = e.secret;
            else {
                switch (e.role) {
                    case "player":
                        if (!e.name) throw new Error("unable to create ecast WSClient: no name provided");
                        break;
                    case "host":
                        if (!e.token) throw new Error("unable to create ecast WSClient: tried to connect with host role but without host token");
                        this.token = e.token;
                        break;
                    case "moderator":
                        if (!e.password) throw new Error("unable to create ecast WSClient: tried to connect with moderator role but without password");
                        break
                }
                e.password && (this.password = e.password), e.twitchToken && (this.twitchToken = e.twitchToken)
            }
            this.name = e.name, this.role = e.role, this.deviceId = e.deviceId, this.userId = e.userId, this.conn = null, this.seq = 0, this.pending = {}, this.entities = {}, e.role == "host" && (this.replaySince = e.replaySince || 0, this.syncEntities = e.syncEntities || !1)
        }
        connect() {
            const e = {
                id: this.id,
                role: this.role,
                name: this.name,
                format: "json",
                "user-id": this.userId,
                password: this.password
            };
            this.deviceId && (e["device-id"] = this.deviceId), this.twitchToken && (e["twitch-token"] = this.twitchToken), this.secret && (e.secret = this.secret), this.role === "host" && (e["host-token"] = this.token, this.replaySince > 0 && (e["replay-since"] = this.replaySince), this.syncEntities && (e["sync-entities"] = this.syncEntities));
            const n = eC.stringify(e),
                i = this.role === "audience" || this.id > 1e7 ? `${this.scheme}://${window.location.hostname}/api/v2/audience/${this.code}/play?${n}` : `${this.scheme}://${window.location.hostname}/api/v2/rooms/${this.code}/play?${n}`;
            return new Promise((o, d) => {
                let m = !1,
                    C = !1,
                    S = D => {
                        o(D), m = !0
                    },
                    T = D => {
                        d(D), m = !0
                    };
                this.conn = new vc(i, "ecast-v0"), this.conn.onmessage = D => {
                    this.debugLog(`recv <- ${JSON.stringify(JSON.parse(D.data),null,2)}`);
                    const V = uC(D);
                    if (V instanceof aC) this.onReply(V);
                    else if (V instanceof yc) {
                        if (V.result instanceof iC) C = !0, this.id = V.result.id, this.deviceId = V.result.deviceId, this.entities = V.result.entities, this.secret = V.result.secret, V.result.name && (this.name = V.result.name), S(V.result);
                        else if (!m) {
                            T(V.result);
                            return
                        }
                        this.onNotification(V)
                    } else console.error(`failed to parse response messsage: ${V}`)
                }, this.conn.onerror = D => {
                    m ? this.emit("socketError", D) : T(D)
                }, this.conn.onclose = D => {
                    this.debugLog("onclose", D.code), C && D.code === 1006 ? this.reconnect() : this.emit("socketClose", D)
                }, this.conn.onopen = D => {
                    this.emit("socketOpen", D)
                }
            })
        }
        sleep(e) {
            return new Promise(n => setTimeout(n, e))
        }
        debugLog(...e) {
            !this.debug || console.log(`%c[WSClient:${this.name}]`, "background-color:blue;color:white;", ...e)
        }
        async reconnect() {
            this.disconnect(), this.debugLog("Attempting to reconnect");
            let e = 1,
                n = fC;
            for (;;) try {
                this.emit("connection", {
                    status: "connecting",
                    attempt: e
                }), await this.connect(), this.debugLog("reconnected"), this.emit("connection", {
                    status: "connected"
                });
                return
            } catch (i) {
                if (this.debugLog("reconnect error", i), i.code === 1005 || i.code === 1e3) {
                    this.debugLog("unable to reconnect!", i), this.emit("socketClose", i);
                    return
                }
                if (n >= bc) {
                    this.debugLog("reconnect failed!", i), this.emit("socketClose", i);
                    return
                }
                e += 1, this.debugLog("waiting", n), this.emit("connection", {
                    status: "waiting",
                    attempt: e
                }), await this.sleep(n), n = Math.min(bc, n * 2)
            }
        }
        disconnect() {
            !this.conn || (this.conn.close(), this.conn.onmessage = null, this.conn.onerror = null, this.conn.onopen = null, this.conn.onclose = null, this.conn = null)
        }
        onReply(e) {
            const n = e.re,
                i = this.pending[n];
            if (!i) {
                const o = new yc(e);
                o.re = n, this.emit("notification", o);
                return
            }
            delete this.pending[n], e.result instanceof nC ? i.reject(e.result) : i.resolve(e.result)
        }
        onNotification(e) {
            typeof e.result.whenReceived == "function" && e.result.whenReceived(this), this.emit("notification", e), this.emit(e.opcode, e.result)
        }
        send(e, n = {}) {
            if (!this.conn) throw new Error("No connection available");
            if (this.conn.readyState !== vc.OPEN) throw new Error(`Socket not ready to send, readyState is ${this.conn.readyState}`);
            const i = ++this.seq,
                o = new lC({
                    seq: i,
                    opcode: e,
                    params: n
                }),
                d = new Promise((C, S) => {
                    this.pending[i] = {
                        resolve: C,
                        reject: S,
                        request: o
                    }
                }),
                m = JSON.stringify(o);
            return this.debugLog(`send -> ${m}`), this.conn.send(m), d
        }
        lockRoom() {
            return this.send("room/lock")
        }
        startAudience() {
            return this.send("room/start-audience")
        }
        getAudience() {
            return this.send("room/get-audience")
        }
        mail(e, n) {
            return this.send("client/send", {
                from: this.id,
                to: e,
                body: n
            })
        }
        kick(e, n = !1, i) {
            return this.send("client/kick", {
                id: e,
                ban: n,
                reason: i
            })
        }
        async drop(e) {
            const n = await this.send("drop", {
                key: e
            });
            return delete this.entities[e], n
        }
        echo(e) {
            return this.send("echo", {
                message: e
            })
        }
        async lock(e) {
            const n = await this.send("lock", {
                key: e
            });
            return this.entities[e].meta.locked = !0, n
        }
        async getNumber(e) {
            const n = await this.send("number/get", {
                key: e
            });
            return this.entities[e].val = n.val, this.entities[e].restrictions = n.restrictions, n
        }
        async updateNumber(e, n) {
            const i = await this.send("number/update", {
                key: e,
                val: n
            });
            return this.entities[e].val = n, i
        }
        async createObject(e, n, i) {
            const o = {
                key: e,
                val: n
            };
            i && (o.acl = i);
            const d = await this.send("object/create", o);
            return this.entities[e] = new ba({
                key: e,
                val: n,
                meta: {
                    locked: !1
                }
            }), d
        }
        echoObject(e) {
            return this.send("object/echo", {
                message: e
            })
        }
        async setObject(e, n, i) {
            const o = {
                key: e,
                val: n
            };
            i && (o.acl = i);
            const d = await this.send("object/set", o);
            return this.entities[e] = new ba({
                key: e,
                val: n,
                meta: {
                    locked: !1
                }
            }), d
        }
        async updateObject(e, n) {
            const i = await this.send("object/update", {
                key: e,
                val: n
            });
            return this.entities[e] = new ba({
                key: e,
                val: n,
                meta: {
                    locked: !1
                }
            }), i
        }
        echoText(e) {
            return this.send("text/echo", {
                message: e
            })
        }
        getText(e) {
            return this.send("text/get", {
                key: e
            })
        }
        async createText(e, n, i) {
            const o = {
                    key: e,
                    val: n
                },
                {
                    acl: d,
                    accept: m,
                    reject: C
                } = i;
            d && (o.acl = d), m && (o.accept = m), C && (o.reject = C);
            const S = await this.send("text/create", o);
            return this.entities[e] = new wa({
                key: e,
                text: n,
                meta: {
                    locked: !1
                }
            }), S
        }
        async setText(e, n, i) {
            const o = {
                key: e,
                val: n
            };
            i && (o.acl = i);
            const d = await this.send("text/set", o);
            return this.entities[e] = new wa({
                key: e,
                text: n,
                meta: {
                    locked: !1
                }
            }), d
        }
        async updateText(e, n) {
            const i = await this.send("text/update", {
                key: e,
                val: n
            });
            return this.entities[e] = new wa({
                key: e,
                text: n,
                meta: {
                    locked: !1
                }
            }), i
        }
        async createDoodle(e, n) {
            let i = {
                key: e
            };
            const {
                acl: o,
                colors: d,
                live: m,
                maxPoints: C,
                size: S,
                weights: T
            } = n;
            o && (i.acl = o), d && (i.colors = d), i.live = m, C != null && (i.maxPoints = C), S && (i.size = S), T && (i.weights = T);
            const D = await this.send("doodle/create", i);
            return this.entities[e] = new hC({
                key: e,
                colors: d,
                lines: [],
                live: m,
                locked: !1,
                maxPoints: i.maxPoints || 0,
                size: S,
                weights: T,
                meta: {
                    locked: !1
                }
            }), D
        }
        async getDoodle(e) {
            return this.send("doodle/get", {
                key: e
            })
        }
        async strokeDoodle(e, n) {
            const {
                layer: i,
                color: o,
                weight: d,
                points: m
            } = n, C = await this.send("doodle/stroke", {
                key: e,
                layer: i,
                color: o,
                weight: d,
                points: m
            }), S = {
                layer: i,
                color: o,
                weight: d,
                points: m
            };
            return this.entities[e].lines.push(S), C
        }
        async undoDoodle(e) {
            const n = await this.send("doodle/undo", {
                key: e
            });
            return this.entities[e].lines.pop(), n
        }
        async createStack(e, n) {
            const i = {
                key: e
            };
            n && (i.acl = n);
            const o = await this.send("stack/create", i);
            return this.entities[e] = new dC({
                key: e,
                size: 0,
                meta: {
                    locked: !1
                }
            }), o
        }
        async pushStack(e, n) {
            return await this.send("stack/push", {
                key: e,
                val: n
            })
        }
        async bulkPushStack(e, n) {
            return await this.send("stack/bulkpush", {
                key: e,
                vals: n
            })
        }
        async peekStack(e, n) {
            return await this.send("stack/peek", {
                key: e,
                size: n
            })
        }
        async popStack(e) {
            return await this.send("stack/pop", {
                key: e
            })
        }
        async createCountGroup(e, n) {
            const i = await this.send("audience/count-group/create", {
                name: e,
                options: n
            });
            return this.entities[e] = new rC({
                key: e,
                choices: n,
                meta: {
                    locked: !1
                }
            }), i
        }
        incrementCountGroupCounter(e, n, i = 1) {
            return this.send("audience/count-group/increment", {
                name: e,
                vote: n,
                times: i
            })
        }
        getCountGroup(e) {
            return this.send("audience/count-group/get", {
                name: e
            })
        }
        async createGCounter(e, n) {
            const i = await this.send("audience/g-counter/create", {
                key: e,
                count: n
            });
            return this.entities[e] = new sC({
                key: e,
                count: n,
                meta: {
                    locked: !1
                }
            }), i
        }
        incrementGCounter(e, n) {
            return this.send("audience/g-counter/increment", {
                key: e,
                times: n
            })
        }
        getGCounter(e) {
            return this.send("audience/g-counter/get", {
                key: e
            })
        }
        async createPNCounter(e, n) {
            const i = await this.send("audience/pn-counter/create", {
                key: e,
                count: n
            });
            return this.entities[e] = new oC({
                key: e,
                count: n,
                meta: {
                    locked: !1
                }
            }), i
        }
        incrementPNCounter(e, n) {
            return this.send("audience/pn-counter/increment", {
                key: e,
                times: n
            })
        }
        decrementPNCounter(e, n) {
            return this.send("audience/pn-counter/decrement", {
                key: e,
                times: n
            })
        }
        getPNCounter(e) {
            return this.send("audience/pn-counter/get", {
                key: e
            })
        }
        async createTextRing(e, n) {
            const i = {
                    key: e
                },
                {
                    limit: o,
                    accept: d,
                    reject: m
                } = n;
            o && (i.limit = o), d && (i.accept = d), m && (i.reject = m);
            const C = await this.send("audience/text-ring/create", i);
            return this.entities[e] = new cC({
                key: e,
                elements: [],
                limit: o,
                meta: {
                    locked: !1
                }
            }), C
        }
        getTextRing(e) {
            return this.send("audience/text-ring/get", {
                name: e
            })
        }
        pushTextRing(e, n) {
            return this.send("audience/text-ring/push", {
                name: e,
                text: n
            })
        }
    }
    var gC = {
        WSClient: pC
    };
    const {
        APIClient: mC
    } = Lw, {
        WSClient: vC
    } = gC, {
        CreateRoomReply: yC,
        GetRoomReply: bC
    } = _o, {
        ClientWelcome: wC,
        ClientDisconnected: CC
    } = ul, {
        ArtifactEntity: _C
    } = hh, {
        GCounter: xC
    } = dl, {
        NumberEntity: EC
    } = gh, {
        TextEntity: SC
    } = gl, {
        DoodleEntity: kC
    } = vl, {
        ObjectEntity: TC
    } = fl, {
        CountGroup: AC
    } = hl, {
        DropEntity: OC
    } = fh, {
        OK: RC
    } = ph, {
        RoomExit: IC
    } = _o, {
        TextRing: DC
    } = ml, {
        PNCounter: MC
    } = pl;
    var Pi = {
        APIClient: mC,
        WSClient: vC,
        ClientWelcome: wC,
        CreateRoomReply: yC,
        DropEntity: OC,
        GetRoomReply: bC,
        ClientDisconnected: CC,
        RoomExit: IC,
        OK: RC,
        ArtifactEntity: _C,
        DoodleEntity: kC,
        NumberEntity: EC,
        CountGroup: AC,
        GCounter: xC,
        ObjectEntity: TC,
        PNCounter: MC,
        TextEntity: SC,
        TextRing: DC
    };

    function wc(...t) {
        console.log(...t)
    }

    function LC(t) {
        throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')
    }
    var Cc = {
        exports: {}
    };
    (function(t, e) {
        (function(n, i) {
            i(e)
        })(vt, function(n) {
            var i = typeof window < "u" ? window : typeof vt < "u" ? vt : typeof self < "u" ? self : {},
                o = function($, W) {
                    if (W = W.split(":")[0], $ = +$, !$) return !1;
                    switch (W) {
                        case "http":
                        case "ws":
                            return $ !== 80;
                        case "https":
                        case "wss":
                            return $ !== 443;
                        case "ftp":
                            return $ !== 21;
                        case "gopher":
                            return $ !== 70;
                        case "file":
                            return !1
                    }
                    return $ !== 0
                },
                d = Object.prototype.hasOwnProperty,
                m;

            function C(q) {
                try {
                    return decodeURIComponent(q.replace(/\+/g, " "))
                } catch {
                    return null
                }
            }

            function S(q) {
                try {
                    return encodeURIComponent(q)
                } catch {
                    return null
                }
            }

            function T(q) {
                for (var $ = /([^=?#&]+)=?([^&]*)/g, W = {}, M; M = $.exec(q);) {
                    var G = C(M[1]),
                        fe = C(M[2]);
                    G === null || fe === null || G in W || (W[G] = fe)
                }
                return W
            }

            function D(q, $) {
                $ = $ || "";
                var W = [],
                    M, G;
                typeof $ != "string" && ($ = "?");
                for (G in q)
                    if (d.call(q, G)) {
                        if (M = q[G], !M && (M === null || M === m || isNaN(M)) && (M = ""), G = S(G), M = S(M), G === null || M === null) continue;
                        W.push(G + "=" + M)
                    } return W.length ? $ + W.join("&") : ""
            }
            var V = D,
                Y = T,
                ie = {
                    stringify: V,
                    parse: Y
                },
                K = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
                re = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,
                v = "[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]",
                P = new RegExp("^" + v + "+");

            function H(q) {
                return (q || "").toString().replace(P, "")
            }
            var ae = [
                    ["#", "hash"],
                    ["?", "query"],
                    function($, W) {
                        return f(W.protocol) ? $.replace(/\\/g, "/") : $
                    },
                    ["/", "pathname"],
                    ["@", "auth", 1],
                    [NaN, "host", void 0, 1, 1],
                    [/:(\d+)$/, "port", void 0, 1],
                    [NaN, "hostname", void 0, 1, 1]
                ],
                se = {
                    hash: 1,
                    query: 1
                };

            function ve(q) {
                var $;
                typeof window < "u" ? $ = window : typeof i < "u" ? $ = i : typeof self < "u" ? $ = self : $ = {};
                var W = $.location || {};
                q = q || W;
                var M = {},
                    G = typeof q,
                    fe;
                if (q.protocol === "blob:") M = new Pe(unescape(q.pathname), {});
                else if (G === "string") {
                    M = new Pe(q, {});
                    for (fe in se) delete M[fe]
                } else if (G === "object") {
                    for (fe in q) fe in se || (M[fe] = q[fe]);
                    M.slashes === void 0 && (M.slashes = K.test(q.href))
                }
                return M
            }

            function f(q) {
                return q === "file:" || q === "ftp:" || q === "http:" || q === "https:" || q === "ws:" || q === "wss:"
            }

            function Ee(q, $) {
                q = H(q), $ = $ || {};
                var W = re.exec(q),
                    M = W[1] ? W[1].toLowerCase() : "",
                    G = !!W[2],
                    fe = !!W[3],
                    pe = 0,
                    $e;
                return G ? fe ? ($e = W[2] + W[3] + W[4], pe = W[2].length + W[3].length) : ($e = W[2] + W[4], pe = W[2].length) : fe ? ($e = W[3] + W[4], pe = W[3].length) : $e = W[4], M === "file:" ? pe >= 2 && ($e = $e.slice(2)) : f(M) ? $e = W[4] : M ? G && ($e = $e.slice(2)) : pe >= 2 && f($.protocol) && ($e = W[4]), {
                    protocol: M,
                    slashes: G || f(M),
                    slashesCount: pe,
                    rest: $e
                }
            }

            function Oe(q, $) {
                if (q === "") return $;
                for (var W = ($ || "/").split("/").slice(0, -1).concat(q.split("/")), M = W.length, G = W[M - 1], fe = !1, pe = 0; M--;) W[M] === "." ? W.splice(M, 1) : W[M] === ".." ? (W.splice(M, 1), pe++) : pe && (M === 0 && (fe = !0), W.splice(M, 1), pe--);
                return fe && W.unshift(""), (G === "." || G === "..") && W.push(""), W.join("/")
            }

            function Pe(q, $, W) {
                if (q = H(q), !(this instanceof Pe)) return new Pe(q, $, W);
                var M, G, fe, pe, $e, Ne, pt = ae.slice(),
                    jt = typeof $,
                    Ye = this,
                    In = 0;
                for (jt !== "object" && jt !== "string" && (W = $, $ = null), W && typeof W != "function" && (W = ie.parse), $ = ve($), G = Ee(q || "", $), M = !G.protocol && !G.slashes, Ye.slashes = G.slashes || M && $.slashes, Ye.protocol = G.protocol || $.protocol || "", q = G.rest, (Ye.protocol === "file:" || !G.slashes && (G.protocol || G.slashesCount < 2 || !f(Ye.protocol))) && (pt[3] = [/(.*)/, "pathname"]); In < pt.length; In++) {
                    if (pe = pt[In], typeof pe == "function") {
                        q = pe(q, Ye);
                        continue
                    }
                    fe = pe[0], Ne = pe[1], fe !== fe ? Ye[Ne] = q : typeof fe == "string" ? ~($e = q.indexOf(fe)) && (typeof pe[2] == "number" ? (Ye[Ne] = q.slice(0, $e), q = q.slice($e + pe[2])) : (Ye[Ne] = q.slice($e), q = q.slice(0, $e))) : ($e = fe.exec(q)) && (Ye[Ne] = $e[1], q = q.slice(0, $e.index)), Ye[Ne] = Ye[Ne] || M && pe[3] && $[Ne] || "", pe[4] && (Ye[Ne] = Ye[Ne].toLowerCase())
                }
                W && (Ye.query = W(Ye.query)), M && $.slashes && Ye.pathname.charAt(0) !== "/" && (Ye.pathname !== "" || $.pathname !== "") && (Ye.pathname = Oe(Ye.pathname, $.pathname)), Ye.pathname.charAt(0) !== "/" && f(Ye.protocol) && (Ye.pathname = "/" + Ye.pathname), o(Ye.port, Ye.protocol) || (Ye.host = Ye.hostname, Ye.port = ""), Ye.username = Ye.password = "", Ye.auth && (pe = Ye.auth.split(":"), Ye.username = pe[0] || "", Ye.password = pe[1] || ""), Ye.origin = Ye.protocol !== "file:" && f(Ye.protocol) && Ye.host ? Ye.protocol + "//" + Ye.host : "null", Ye.href = Ye.toString()
            }

            function lt(q, $, W) {
                var M = this;
                switch (q) {
                    case "query":
                        typeof $ == "string" && $.length && ($ = (W || ie.parse)($)), M[q] = $;
                        break;
                    case "port":
                        M[q] = $, o($, M.protocol) ? $ && (M.host = M.hostname + ":" + $) : (M.host = M.hostname, M[q] = "");
                        break;
                    case "hostname":
                        M[q] = $, M.port && ($ += ":" + M.port), M.host = $;
                        break;
                    case "host":
                        M[q] = $, /:\d+$/.test($) ? ($ = $.split(":"), M.port = $.pop(), M.hostname = $.join(":")) : (M.hostname = $, M.port = "");
                        break;
                    case "protocol":
                        M.protocol = $.toLowerCase(), M.slashes = !W;
                        break;
                    case "pathname":
                    case "hash":
                        if ($) {
                            var G = q === "pathname" ? "/" : "#";
                            M[q] = $.charAt(0) !== G ? G + $ : $
                        } else M[q] = $;
                        break;
                    default:
                        M[q] = $
                }
                for (var fe = 0; fe < ae.length; fe++) {
                    var pe = ae[fe];
                    pe[4] && (M[pe[1]] = M[pe[1]].toLowerCase())
                }
                return M.origin = M.protocol !== "file:" && f(M.protocol) && M.host ? M.protocol + "//" + M.host : "null", M.href = M.toString(), M
            }

            function Ve(q) {
                (!q || typeof q != "function") && (q = ie.stringify);
                var $, W = this,
                    M = W.protocol;
                M && M.charAt(M.length - 1) !== ":" && (M += ":");
                var G = M + (W.slashes || f(W.protocol) ? "//" : "");
                return W.username && (G += W.username, W.password && (G += ":" + W.password), G += "@"), G += W.host + W.pathname, $ = typeof W.query == "object" ? q(W.query) : W.query, $ && (G += $.charAt(0) !== "?" ? "?" + $ : $), W.hash && (G += W.hash), G
            }
            Pe.prototype = {
                set: lt,
                toString: Ve
            }, Pe.extractProtocol = Ee, Pe.location = ve, Pe.trimLeft = H, Pe.qs = ie;
            var J = Pe;

            function je(q, $) {
                setTimeout(function(W) {
                    return q.call(W)
                }, 4, $)
            }

            function z(q, $) {
                typeof process < "u" && console[q].call(null, $)
            }

            function oe(q, $) {
                q === void 0 && (q = []);
                var W = [];
                return q.forEach(function(M) {
                    $(M) || W.push(M)
                }), W
            }

            function Ae(q, $) {
                q === void 0 && (q = []);
                var W = [];
                return q.forEach(function(M) {
                    $(M) && W.push(M)
                }), W
            }
            var we = function() {
                this.listeners = {}
            };
            we.prototype.addEventListener = function($, W) {
                typeof W == "function" && (Array.isArray(this.listeners[$]) || (this.listeners[$] = []), Ae(this.listeners[$], function(M) {
                    return M === W
                }).length === 0 && this.listeners[$].push(W))
            }, we.prototype.removeEventListener = function($, W) {
                var M = this.listeners[$];
                this.listeners[$] = oe(M, function(G) {
                    return G === W
                })
            }, we.prototype.dispatchEvent = function($) {
                for (var W = this, M = [], G = arguments.length - 1; G-- > 0;) M[G] = arguments[G + 1];
                var fe = $.type,
                    pe = this.listeners[fe];
                return Array.isArray(pe) ? (pe.forEach(function($e) {
                    M.length > 0 ? $e.apply(W, M) : $e.call(W, $)
                }), !0) : !1
            };

            function ye(q) {
                var $ = q.indexOf("?");
                return $ >= 0 ? q.slice(0, $) : q
            }
            var ue = function() {
                this.urlMap = {}
            };
            ue.prototype.attachWebSocket = function($, W) {
                var M = ye(W),
                    G = this.urlMap[M];
                if (G && G.server && G.websockets.indexOf($) === -1) return G.websockets.push($), G.server
            }, ue.prototype.addMembershipToRoom = function($, W) {
                var M = this.urlMap[ye($.url)];
                M && M.server && M.websockets.indexOf($) !== -1 && (M.roomMemberships[W] || (M.roomMemberships[W] = []), M.roomMemberships[W].push($))
            }, ue.prototype.attachServer = function($, W) {
                var M = ye(W),
                    G = this.urlMap[M];
                if (!G) return this.urlMap[M] = {
                    server: $,
                    websockets: [],
                    roomMemberships: {}
                }, $
            }, ue.prototype.serverLookup = function($) {
                var W = ye($),
                    M = this.urlMap[W];
                if (M) return M.server
            }, ue.prototype.websocketsLookup = function($, W, M) {
                var G = ye($),
                    fe, pe = this.urlMap[G];
                if (fe = pe ? pe.websockets : [], W) {
                    var $e = pe.roomMemberships[W];
                    fe = $e || []
                }
                return M ? fe.filter(function(Ne) {
                    return Ne !== M
                }) : fe
            }, ue.prototype.removeServer = function($) {
                delete this.urlMap[ye($)]
            }, ue.prototype.removeWebSocket = function($, W) {
                var M = ye(W),
                    G = this.urlMap[M];
                G && (G.websockets = oe(G.websockets, function(fe) {
                    return fe === $
                }))
            }, ue.prototype.removeMembershipFromRoom = function($, W) {
                var M = this.urlMap[ye($.url)],
                    G = M.roomMemberships[W];
                M && G !== null && (M.roomMemberships[W] = oe(G, function(fe) {
                    return fe === $
                }))
            };
            var Se = new ue,
                Te = {
                    CLOSE_NORMAL: 1e3,
                    CLOSE_GOING_AWAY: 1001,
                    CLOSE_PROTOCOL_ERROR: 1002,
                    CLOSE_UNSUPPORTED: 1003,
                    CLOSE_NO_STATUS: 1005,
                    CLOSE_ABNORMAL: 1006,
                    UNSUPPORTED_DATA: 1007,
                    POLICY_VIOLATION: 1008,
                    CLOSE_TOO_LARGE: 1009,
                    MISSING_EXTENSION: 1010,
                    INTERNAL_ERROR: 1011,
                    SERVICE_RESTART: 1012,
                    TRY_AGAIN_LATER: 1013,
                    TLS_HANDSHAKE: 1015
                },
                Be = {
                    CONSTRUCTOR_ERROR: "Failed to construct 'WebSocket':",
                    CLOSE_ERROR: "Failed to execute 'close' on 'WebSocket':",
                    EVENT: {
                        CONSTRUCT: "Failed to construct 'Event':",
                        MESSAGE: "Failed to construct 'MessageEvent':",
                        CLOSE: "Failed to construct 'CloseEvent':"
                    }
                },
                Ke = function() {};
            Ke.prototype.stopPropagation = function() {}, Ke.prototype.stopImmediatePropagation = function() {}, Ke.prototype.initEvent = function($, W, M) {
                $ === void 0 && ($ = "undefined"), W === void 0 && (W = !1), M === void 0 && (M = !1), this.type = "" + $, this.bubbles = Boolean(W), this.cancelable = Boolean(M)
            };
            var dt = function(q) {
                    function $(W, M) {
                        if (M === void 0 && (M = {}), q.call(this), !W) throw new TypeError(Be.EVENT_ERROR + " 1 argument required, but only 0 present.");
                        if (typeof M != "object") throw new TypeError(Be.EVENT_ERROR + " parameter 2 ('eventInitDict') is not an object.");
                        var G = M.bubbles,
                            fe = M.cancelable;
                        this.type = "" + W, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = fe ? Boolean(fe) : !1, this.cancelBubble = !1, this.bubbles = G ? Boolean(G) : !1
                    }
                    return q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $, $
                }(Ke),
                Bt = function(q) {
                    function $(W, M) {
                        if (M === void 0 && (M = {}), q.call(this), !W) throw new TypeError(Be.EVENT.MESSAGE + " 1 argument required, but only 0 present.");
                        if (typeof M != "object") throw new TypeError(Be.EVENT.MESSAGE + " parameter 2 ('eventInitDict') is not an object");
                        var G = M.bubbles,
                            fe = M.cancelable,
                            pe = M.data,
                            $e = M.origin,
                            Ne = M.lastEventId,
                            pt = M.ports;
                        this.type = "" + W, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = fe ? Boolean(fe) : !1, this.canncelBubble = !1, this.bubbles = G ? Boolean(G) : !1, this.origin = "" + $e, this.ports = typeof pt > "u" ? null : pt, this.data = typeof pe > "u" ? null : pe, this.lastEventId = "" + (Ne || "")
                    }
                    return q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $, $
                }(Ke),
                Ht = function(q) {
                    function $(W, M) {
                        if (M === void 0 && (M = {}), q.call(this), !W) throw new TypeError(Be.EVENT.CLOSE + " 1 argument required, but only 0 present.");
                        if (typeof M != "object") throw new TypeError(Be.EVENT.CLOSE + " parameter 2 ('eventInitDict') is not an object");
                        var G = M.bubbles,
                            fe = M.cancelable,
                            pe = M.code,
                            $e = M.reason,
                            Ne = M.wasClean;
                        this.type = "" + W, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = fe ? Boolean(fe) : !1, this.cancelBubble = !1, this.bubbles = G ? Boolean(G) : !1, this.code = typeof pe == "number" ? parseInt(pe, 10) : 0, this.reason = "" + ($e || ""), this.wasClean = Ne ? Boolean(Ne) : !1
                    }
                    return q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $, $
                }(Ke);

            function E(q) {
                var $ = q.type,
                    W = q.target,
                    M = new dt($);
                return W && (M.target = W, M.srcElement = W, M.currentTarget = W), M
            }

            function l(q) {
                var $ = q.type,
                    W = q.origin,
                    M = q.data,
                    G = q.target,
                    fe = new Bt($, {
                        data: M,
                        origin: W
                    });
                return G && (fe.target = G, fe.srcElement = G, fe.currentTarget = G), fe
            }

            function g(q) {
                var $ = q.code,
                    W = q.reason,
                    M = q.type,
                    G = q.target,
                    fe = q.wasClean;
                fe || (fe = $ === Te.CLOSE_NORMAL || $ === Te.CLOSE_NO_STATUS);
                var pe = new Ht(M, {
                    code: $,
                    reason: W,
                    wasClean: fe
                });
                return G && (pe.target = G, pe.srcElement = G, pe.currentTarget = G), pe
            }

            function k(q, $, W) {
                q.readyState = Me.CLOSING;
                var M = Se.serverLookup(q.url),
                    G = g({
                        type: "close",
                        target: q.target,
                        code: $,
                        reason: W
                    }),
                    fe = g({
                        type: "server::close",
                        target: q,
                        code: $,
                        reason: W
                    });
                je(function() {
                    Se.removeWebSocket(q, q.url), q.readyState = Me.CLOSED, q.dispatchEvent(G), q.dispatchEvent(fe), M && M.dispatchEvent(G, M)
                }, q)
            }

            function R(q, $, W) {
                q.readyState = Me.CLOSING;
                var M = Se.serverLookup(q.url),
                    G = g({
                        type: "close",
                        target: q.target,
                        code: $,
                        reason: W,
                        wasClean: !1
                    }),
                    fe = g({
                        type: "server::close",
                        target: q,
                        code: $,
                        reason: W,
                        wasClean: !1
                    }),
                    pe = E({
                        type: "error",
                        target: q.target
                    });
                je(function() {
                    Se.removeWebSocket(q, q.url), q.readyState = Me.CLOSED, q.dispatchEvent(pe), q.dispatchEvent(G), q.dispatchEvent(fe), M && M.dispatchEvent(G, M)
                }, q)
            }

            function L(q) {
                return Object.prototype.toString.call(q) !== "[object Blob]" && !(q instanceof ArrayBuffer) && (q = String(q)), q
            }
            var N = new WeakMap;

            function te(q) {
                if (N.has(q)) return N.get(q);
                var $ = new Proxy(q, {
                    get: function(M, G) {
                        return G === "close" ? function(pe) {
                            pe === void 0 && (pe = {});
                            var $e = pe.code || Te.CLOSE_NORMAL,
                                Ne = pe.reason || "";
                            k($, $e, Ne)
                        } : G === "send" ? function(pe) {
                            pe = L(pe), q.dispatchEvent(l({
                                type: "message",
                                data: pe,
                                origin: this.url,
                                target: q
                            }))
                        } : G === "on" ? function(pe, $e) {
                            q.addEventListener("server::" + pe, $e)
                        } : G === "target" ? q : M[G]
                    }
                });
                return N.set(q, $), $
            }

            function ke(q) {
                var $ = encodeURIComponent(q).match(/%[89ABab]/g);
                return q.length + ($ ? $.length : 0)
            }

            function he(q) {
                var $ = new J(q),
                    W = $.pathname,
                    M = $.protocol,
                    G = $.hash;
                if (!q) throw new TypeError(Be.CONSTRUCTOR_ERROR + " 1 argument required, but only 0 present.");
                if (W || ($.pathname = "/"), M === "") throw new SyntaxError(Be.CONSTRUCTOR_ERROR + " The URL '" + $.toString() + "' is invalid.");
                if (M !== "ws:" && M !== "wss:") throw new SyntaxError(Be.CONSTRUCTOR_ERROR + " The URL's scheme must be either 'ws' or 'wss'. '" + M + "' is not allowed.");
                if (G !== "") throw new SyntaxError(Be.CONSTRUCTOR_ERROR + " The URL contains a fragment identifier ('" + G + "'). Fragment identifiers are not allowed in WebSocket URLs.");
                return $.toString()
            }

            function De(q) {
                if (q === void 0 && (q = []), !Array.isArray(q) && typeof q != "string") throw new SyntaxError(Be.CONSTRUCTOR_ERROR + " The subprotocol '" + q.toString() + "' is invalid.");
                typeof q == "string" && (q = [q]);
                var $ = q.map(function(M) {
                        return {
                            count: 1,
                            protocol: M
                        }
                    }).reduce(function(M, G) {
                        return M[G.protocol] = (M[G.protocol] || 0) + G.count, M
                    }, {}),
                    W = Object.keys($).filter(function(M) {
                        return $[M] > 1
                    });
                if (W.length > 0) throw new SyntaxError(Be.CONSTRUCTOR_ERROR + " The subprotocol '" + W[0] + "' is duplicated.");
                return q
            }
            var Me = function(q) {
                function $(M, G) {
                    q.call(this), this._onopen = null, this._onmessage = null, this._onerror = null, this._onclose = null, this.url = he(M), G = De(G), this.protocol = G[0] || "", this.binaryType = "blob", this.readyState = $.CONNECTING;
                    var fe = te(this),
                        pe = Se.attachWebSocket(fe, this.url);
                    je(function() {
                        if (pe)
                            if (pe.options.verifyClient && typeof pe.options.verifyClient == "function" && !pe.options.verifyClient()) this.readyState = $.CLOSED, z("error", "WebSocket connection to '" + this.url + "' failed: HTTP Authentication failed; no valid credentials available"), Se.removeWebSocket(fe, this.url), this.dispatchEvent(E({
                                type: "error",
                                target: this
                            })), this.dispatchEvent(g({
                                type: "close",
                                target: this,
                                code: Te.CLOSE_NORMAL
                            }));
                            else {
                                if (pe.options.selectProtocol && typeof pe.options.selectProtocol == "function") {
                                    var Ne = pe.options.selectProtocol(G),
                                        pt = Ne !== "",
                                        jt = G.indexOf(Ne) !== -1;
                                    if (pt && !jt) {
                                        this.readyState = $.CLOSED, z("error", "WebSocket connection to '" + this.url + "' failed: Invalid Sub-Protocol"), Se.removeWebSocket(fe, this.url), this.dispatchEvent(E({
                                            type: "error",
                                            target: this
                                        })), this.dispatchEvent(g({
                                            type: "close",
                                            target: this,
                                            code: Te.CLOSE_NORMAL
                                        }));
                                        return
                                    }
                                    this.protocol = Ne
                                }
                                this.readyState = $.OPEN, this.dispatchEvent(E({
                                    type: "open",
                                    target: this
                                })), pe.dispatchEvent(E({
                                    type: "connection"
                                }), fe)
                            }
                        else this.readyState = $.CLOSED, this.dispatchEvent(E({
                            type: "error",
                            target: this
                        })), this.dispatchEvent(g({
                            type: "close",
                            target: this,
                            code: Te.CLOSE_NORMAL
                        })), z("error", "WebSocket connection to '" + this.url + "' failed")
                    }, this)
                }
                q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $;
                var W = {
                    onopen: {},
                    onmessage: {},
                    onclose: {},
                    onerror: {}
                };
                return W.onopen.get = function() {
                    return this._onopen
                }, W.onmessage.get = function() {
                    return this._onmessage
                }, W.onclose.get = function() {
                    return this._onclose
                }, W.onerror.get = function() {
                    return this._onerror
                }, W.onopen.set = function(M) {
                    this.removeEventListener("open", this._onopen), this._onopen = M, this.addEventListener("open", M)
                }, W.onmessage.set = function(M) {
                    this.removeEventListener("message", this._onmessage), this._onmessage = M, this.addEventListener("message", M)
                }, W.onclose.set = function(M) {
                    this.removeEventListener("close", this._onclose), this._onclose = M, this.addEventListener("close", M)
                }, W.onerror.set = function(M) {
                    this.removeEventListener("error", this._onerror), this._onerror = M, this.addEventListener("error", M)
                }, $.prototype.send = function(G) {
                    var fe = this;
                    if (this.readyState === $.CLOSING || this.readyState === $.CLOSED) throw new Error("WebSocket is already in CLOSING or CLOSED state");
                    var pe = l({
                            type: "server::message",
                            origin: this.url,
                            data: L(G)
                        }),
                        $e = Se.serverLookup(this.url);
                    $e && je(function() {
                        fe.dispatchEvent(pe, G)
                    }, $e)
                }, $.prototype.close = function(G, fe) {
                    if (G !== void 0 && (typeof G != "number" || G !== 1e3 && (G < 3e3 || G > 4999))) throw new TypeError(Be.CLOSE_ERROR + " The code must be either 1000, or between 3000 and 4999. " + G + " is neither.");
                    if (fe !== void 0) {
                        var pe = ke(fe);
                        if (pe > 123) throw new SyntaxError(Be.CLOSE_ERROR + " The message must not be greater than 123 bytes.")
                    }
                    if (!(this.readyState === $.CLOSING || this.readyState === $.CLOSED)) {
                        var $e = te(this);
                        this.readyState === $.CONNECTING ? R($e, G || Te.CLOSE_ABNORMAL, fe) : k($e, G || Te.CLOSE_NO_STATUS, fe)
                    }
                }, Object.defineProperties($.prototype, W), $
            }(we);
            Me.CONNECTING = 0, Me.prototype.CONNECTING = Me.CONNECTING, Me.OPEN = 1, Me.prototype.OPEN = Me.OPEN, Me.CLOSING = 2, Me.prototype.CLOSING = Me.CLOSING, Me.CLOSED = 3, Me.prototype.CLOSED = Me.CLOSED;
            var rt = function(q) {
                return q.reduce(function($, W) {
                    return $.indexOf(W) > -1 ? $ : $.concat(W)
                }, [])
            };

            function Ct() {
                return typeof window < "u" ? window : typeof process == "object" && typeof LC == "function" && typeof vt == "object" ? vt : this
            }
            var rn = {
                    mock: !0,
                    verifyClient: null,
                    selectProtocol: null
                },
                ct = function(q) {
                    function $(W, M) {
                        M === void 0 && (M = rn), q.call(this);
                        var G = new J(W);
                        G.pathname || (G.pathname = "/"), this.url = G.toString(), this.originalWebSocket = null;
                        var fe = Se.attachServer(this, this.url);
                        if (!fe) throw this.dispatchEvent(E({
                            type: "error"
                        })), new Error("A mock server is already listening on this url");
                        this.options = Object.assign({}, rn, M), this.options.mock && this.mockWebsocket()
                    }
                    return q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $, $.prototype.mockWebsocket = function() {
                        var M = Ct();
                        this.originalWebSocket = M.WebSocket, M.WebSocket = Me
                    }, $.prototype.restoreWebsocket = function() {
                        var M = Ct();
                        this.originalWebSocket !== null && (M.WebSocket = this.originalWebSocket), this.originalWebSocket = null
                    }, $.prototype.stop = function(M) {
                        M === void 0 && (M = function() {}), this.options.mock && this.restoreWebsocket(), Se.removeServer(this.url), typeof M == "function" && M()
                    }, $.prototype.on = function(M, G) {
                        this.addEventListener(M, G)
                    }, $.prototype.close = function(M) {
                        M === void 0 && (M = {});
                        var G = M.code,
                            fe = M.reason,
                            pe = M.wasClean,
                            $e = Se.websocketsLookup(this.url);
                        Se.removeServer(this.url), $e.forEach(function(Ne) {
                            Ne.readyState = Me.CLOSED, Ne.dispatchEvent(g({
                                type: "close",
                                target: Ne.target,
                                code: G || Te.CLOSE_NORMAL,
                                reason: fe || "",
                                wasClean: pe
                            }))
                        }), this.dispatchEvent(g({
                            type: "close"
                        }), this)
                    }, $.prototype.emit = function(M, G, fe) {
                        var pe = this;
                        fe === void 0 && (fe = {});
                        var $e = fe.websockets;
                        $e || ($e = Se.websocketsLookup(this.url)), typeof fe != "object" || arguments.length > 3 ? (G = Array.prototype.slice.call(arguments, 1, arguments.length), G = G.map(function(Ne) {
                            return L(Ne)
                        })) : G = L(G), $e.forEach(function(Ne) {
                            Array.isArray(G) ? Ne.dispatchEvent.apply(Ne, [l({
                                type: M,
                                data: G,
                                origin: pe.url,
                                target: Ne.target
                            })].concat(G)) : Ne.dispatchEvent(l({
                                type: M,
                                data: G,
                                origin: pe.url,
                                target: Ne.target
                            }))
                        })
                    }, $.prototype.clients = function() {
                        return Se.websocketsLookup(this.url)
                    }, $.prototype.to = function(M, G, fe) {
                        var pe = this;
                        fe === void 0 && (fe = []);
                        var $e = this,
                            Ne = rt(fe.concat(Se.websocketsLookup(this.url, M, G)));
                        return {
                            to: function(pt, jt) {
                                return pe.to.call(pe, pt, jt, Ne)
                            },
                            emit: function(jt, Ye) {
                                $e.emit(jt, Ye, {
                                    websockets: Ne
                                })
                            }
                        }
                    }, $.prototype.in = function() {
                        for (var M = [], G = arguments.length; G--;) M[G] = arguments[G];
                        return this.to.apply(null, M)
                    }, $.prototype.simulate = function(M) {
                        var G = Se.websocketsLookup(this.url);
                        M === "error" && G.forEach(function(fe) {
                            fe.readyState = Me.CLOSED, fe.dispatchEvent(E({
                                type: "error"
                            }))
                        })
                    }, $
                }(we);
            ct.of = function($) {
                return new ct($)
            };
            var yt = function(q) {
                function $(M, G) {
                    var fe = this;
                    M === void 0 && (M = "socket.io"), G === void 0 && (G = ""), q.call(this), this.binaryType = "blob";
                    var pe = new J(M);
                    pe.pathname || (pe.pathname = "/"), this.url = pe.toString(), this.readyState = $.CONNECTING, this.protocol = "", this.target = this, typeof G == "string" || typeof G == "object" && G !== null ? this.protocol = G : Array.isArray(G) && G.length > 0 && (this.protocol = G[0]);
                    var $e = Se.attachWebSocket(this, this.url);
                    je(function() {
                        $e ? (this.readyState = $.OPEN, $e.dispatchEvent(E({
                            type: "connection"
                        }), $e, this), $e.dispatchEvent(E({
                            type: "connect"
                        }), $e, this), this.dispatchEvent(E({
                            type: "connect",
                            target: this
                        }))) : (this.readyState = $.CLOSED, this.dispatchEvent(E({
                            type: "error",
                            target: this
                        })), this.dispatchEvent(g({
                            type: "close",
                            target: this,
                            code: Te.CLOSE_NORMAL
                        })), z("error", "Socket.io connection to '" + this.url + "' failed"))
                    }, this), this.addEventListener("close", function(Ne) {
                        fe.dispatchEvent(g({
                            type: "disconnect",
                            target: Ne.target,
                            code: Ne.code
                        }))
                    })
                }
                q && ($.__proto__ = q), $.prototype = Object.create(q && q.prototype), $.prototype.constructor = $;
                var W = {
                    broadcast: {}
                };
                return $.prototype.close = function() {
                    if (this.readyState === $.OPEN) {
                        var G = Se.serverLookup(this.url);
                        return Se.removeWebSocket(this, this.url), this.readyState = $.CLOSED, this.dispatchEvent(g({
                            type: "close",
                            target: this,
                            code: Te.CLOSE_NORMAL
                        })), G && G.dispatchEvent(g({
                            type: "disconnect",
                            target: this,
                            code: Te.CLOSE_NORMAL
                        }), G), this
                    }
                }, $.prototype.disconnect = function() {
                    return this.close()
                }, $.prototype.emit = function(G) {
                    for (var fe = [], pe = arguments.length - 1; pe-- > 0;) fe[pe] = arguments[pe + 1];
                    if (this.readyState !== $.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                    var $e = l({
                            type: G,
                            origin: this.url,
                            data: fe
                        }),
                        Ne = Se.serverLookup(this.url);
                    return Ne && Ne.dispatchEvent.apply(Ne, [$e].concat(fe)), this
                }, $.prototype.send = function(G) {
                    return this.emit("message", G), this
                }, W.broadcast.get = function() {
                    if (this.readyState !== $.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                    var M = this,
                        G = Se.serverLookup(this.url);
                    if (!G) throw new Error("SocketIO can not find a server at the specified URL (" + this.url + ")");
                    return {
                        emit: function(pe, $e) {
                            return G.emit(pe, $e, {
                                websockets: Se.websocketsLookup(M.url, null, M)
                            }), M
                        },
                        to: function(pe) {
                            return G.to(pe, M)
                        },
                        in: function(pe) {
                            return G.in(pe, M)
                        }
                    }
                }, $.prototype.on = function(G, fe) {
                    return this.addEventListener(G, fe), this
                }, $.prototype.off = function(G, fe) {
                    this.removeEventListener(G, fe)
                }, $.prototype.hasListeners = function(G) {
                    var fe = this.listeners[G];
                    return Array.isArray(fe) ? !!fe.length : !1
                }, $.prototype.join = function(G) {
                    Se.addMembershipToRoom(this, G)
                }, $.prototype.leave = function(G) {
                    Se.removeMembershipFromRoom(this, G)
                }, $.prototype.to = function(G) {
                    return this.broadcast.to(G)
                }, $.prototype.in = function() {
                    return this.to.apply(null, arguments)
                }, $.prototype.dispatchEvent = function(G) {
                    for (var fe = this, pe = [], $e = arguments.length - 1; $e-- > 0;) pe[$e] = arguments[$e + 1];
                    var Ne = G.type,
                        pt = this.listeners[Ne];
                    if (!Array.isArray(pt)) return !1;
                    pt.forEach(function(jt) {
                        pe.length > 0 ? jt.apply(fe, pe) : jt.call(fe, G.data ? G.data : G)
                    })
                }, Object.defineProperties($.prototype, W), $
            }(we);
            yt.CONNECTING = 0, yt.OPEN = 1, yt.CLOSING = 2, yt.CLOSED = 3;
            var wt = function($, W) {
                return new yt($, W)
            };
            wt.connect = function($, W) {
                return wt($, W)
            };
            var Jt = ct,
                Je = Me,
                Pt = wt;
            n.Server = Jt, n.WebSocket = Je, n.SocketIO = Pt, Object.defineProperty(n, "__esModule", {
                value: !0
            })
        })
    })(Cc, Cc.exports);
    var PC = {
        exports: {}
    };
    (function(t) {
        (function() {
            function e(C, S) {
                var T = C.x - S.x,
                    D = C.y - S.y;
                return T * T + D * D
            }

            function n(C, S, T) {
                var D = S.x,
                    V = S.y,
                    Y = T.x - D,
                    ie = T.y - V;
                if (Y !== 0 || ie !== 0) {
                    var K = ((C.x - D) * Y + (C.y - V) * ie) / (Y * Y + ie * ie);
                    K > 1 ? (D = T.x, V = T.y) : K > 0 && (D += Y * K, V += ie * K)
                }
                return Y = C.x - D, ie = C.y - V, Y * Y + ie * ie
            }

            function i(C, S) {
                for (var T = C[0], D = [T], V, Y = 1, ie = C.length; Y < ie; Y++) V = C[Y], e(V, T) > S && (D.push(V), T = V);
                return T !== V && D.push(V), D
            }

            function o(C, S, T, D, V) {
                for (var Y = D, ie, K = S + 1; K < T; K++) {
                    var re = n(C[K], C[S], C[T]);
                    re > Y && (ie = K, Y = re)
                }
                Y > D && (ie - S > 1 && o(C, S, ie, D, V), V.push(C[ie]), T - ie > 1 && o(C, ie, T, D, V))
            }

            function d(C, S) {
                var T = C.length - 1,
                    D = [C[0]];
                return o(C, 0, T, S, D), D.push(C[T]), D
            }

            function m(C, S, T) {
                if (C.length <= 2) return C;
                var D = S !== void 0 ? S * S : 1;
                return C = T ? C : i(C, D), C = d(C, D), C
            }
            t.exports = m, t.exports.default = m
        })()
    })(PC);
    const $C = xt.View.extend({
        el: "#banner",
        template: Ze.template(`
        <div class="banner-image"></div>
        <div class="banner-text"></div>
        <div class="banner-cta"></div>
    `),
        events: {
            click: "onBannerClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: ["visible", "theme"],
                    onGet([t, e]) {
                        let n = e || "no-theme";
                        return t && (n += " show"), n
                    }
                }]
            },
            ".banner-text": "copy",
            ".banner-cta": "cta"
        },
        initialize() {
            this.render(), this.listenTo(this.model, "change:visible", this.visibleDidChange)
        },
        onBannerClick() {
            Xh.bannerClick(this.getCampaign(), "post_game"), this.model.get("url") && window.open(this.model.get("url"), "_blank")
        },
        onRender() {
            this.stickit()
        },
        visibleDidChange() {
            setTimeout(() => {
                be(window).trigger("resize")
            }, .5)
        },
        getCampaign() {
            const t = this.model.get("url");
            if (!t) return "";
            let e = "";
            return t.split("?")[1] && (e = new URLSearchParams(window.location.search).get("utm_campaign") || ""), e
        }
    });
    class ri {
        static get isVisible() {
            return this.view ? this.view.state === "on" : !1
        }
        static async update(e, n) {
            if (!n || n.lobbyState !== "PostGame") {
                this.hide();
                return
            }
            this.view || await this.init(e, n), this.show()
        }
        static async init(e) {
            if (!e) {
                this.bannerData = !1;
                return
            }
            this.bannerData = await this.loadBannerData(e), this.bannerData && (this.view = new $C({
                model: new at.Model(this.bannerData)
            }), this.isInitialized = !0)
        }
        static show() {
            !this.view || this.view.model.set({
                visible: !0
            })
        }
        static hide() {
            !this.view || this.view.model.set({
                visible: !1
            })
        }
        static async loadBannerData(e) {
            try {
                const i = await (await fetch({
                    TV_ADROLL_ADVERTISABLE_ID: "WN335VM7RVAMPDZAOWMIHP",
                    TV_ADROLL_PIXEL_ID: "WN335VM7RVAMPDZAOWMIHP",
                    TV_CDN_IMAGES_URL: "https://s3.amazonaws.com/static.jackboxgames.com/game-images",
                    TV_DEBUG: "false",
                    TV_DOMAINS: "https://dev.jackbox.tv,https://qa.jackbox.tv,https://jackbox.tv,https://tinyshirts.jackboxgames.com",
                    TV_ECAST: window.location.hostname,
                    TV_GA_STREAM_ID: "3795853220",
                    TV_GA_MEASUREMENT_ID: "G-V1QJVQMYF1",
                    TV_S3_BUNDLES: "https://bundles.jackbox.tv",
                    TV_S3_DEBUG: "https://jbg-ops.s3.amazonaws.com",
                    TV_SENTRY_ALLOWED_URLS: "/(http|https):\\/\\/(\\S*\\.)?jackbox\\.tv/i",
                    TV_SENTRY_DSN: "https://bb026273d98c4b99ab11c1de369f521f@o420318.ingest.sentry.io/6387933",
                    TV_SENTRY_RATE: "0.2",
                    TV_SLACK_DEBUG: "https://hooks.slack.com/services/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",
                    TV_TWITCH_CLIENT_ID: "yn2iepd23vskpmkzgeg2lkfsct7gsc",
                    BASE_URL: "https://bundles.jackbox.tv/main/pp3-quiplash2/",
                    MODE: "production",
                    DEV: !1,
                    PROD: !0
                }.TV_BANNERS_URL)).json();
                return !i || !i.postGameBanners ? !1 : i.postGameBanners[e]
            } catch (n) {
                return console.error("Unable to load banner data", n), !1
            }
        }
    }
    it(ri, "view", null), it(ri, "isInitialized", !1), it(ri, "bannerConfig", null);
    var NC = {};
    (function(t) {
        (function(e) {
            e(ji.exports, at, t)
        })(function(e, n, i) {
            n.Stickit = i, i._handlers = [], i.addHandler = function(v) {
                v = e.map(e.flatten([v]), function(P) {
                    return e.defaults({}, P, {
                        updateModel: !0,
                        updateView: !0,
                        updateMethod: "text"
                    })
                }), this._handlers = this._handlers.concat(v)
            }, i.ViewMixin = {
                _modelBindings: null,
                unstickit: function(v, P) {
                    if (e.isObject(P)) {
                        e.each(P, function(se, ve) {
                            this.unstickit(v, ve)
                        }, this);
                        return
                    }
                    var H = [],
                        ae = [];
                    this._modelBindings = e.reject(this._modelBindings, function(se) {
                        if (!(v && se.model !== v) && !(P && se.config.selector != P)) return se.model.off(se.event, se.fn), ae.push(se.config._destroy), H.push(se.model), !0
                    }), e.invoke(e.uniq(H), "trigger", "stickit:unstuck", this.cid), e.each(e.uniq(ae), function(se) {
                        se.call(this)
                    }, this), this.$el.off(".stickit" + (v ? "." + v.cid : ""), P)
                },
                stickit: function(v, P) {
                    var H = v || this.model,
                        ae = P || e.result(this, "bindings") || {};
                    this._modelBindings || (this._modelBindings = []), this.addBinding(H, ae);
                    var se = this.remove;
                    return se.stickitWrapped || (this.remove = function() {
                        var ve = this;
                        return this.unstickit(), se && (ve = se.apply(this, arguments)), ve
                    }), this.remove.stickitWrapped = !0, this
                },
                addBinding: function(v, P, H) {
                    var ae = v || this.model,
                        se = ".stickit." + ae.cid;
                    if (H = H || {}, e.isObject(P)) {
                        var ve = P;
                        e.each(ve, function(J, je) {
                            this.addBinding(ae, je, J)
                        }, this);
                        return
                    }
                    var f = P === ":el" ? this.$el : this.$(P);
                    if (this.unstickit(ae, P), !!f.length) {
                        e.isString(H) && (H = {
                            observe: H
                        }), e.isFunction(H.observe) && (H.observe = H.observe.call(this));
                        var Ee = V(f, H),
                            Oe = Ee.observe;
                        Ee.selector = P, Ee.view = this;
                        var Pe = Ee.bindId = e.uniqueId(),
                            lt = e.extend({
                                stickitChange: Ee
                            }, Ee.setOptions);
                        if (Ee._destroy = function() {
                                m.call(this, Ee.destroy, f, ae, Ee)
                            }, Y(f, Ee, ae, Oe), K(f, Ee, ae, Oe), ie(f, Ee, ae), Oe) {
                            e.each(Ee.events, function(J) {
                                var je = J + se,
                                    z = function(Ae) {
                                        var we = m.call(this, Ee.getVal, f, Ae, Ee, o.call(arguments, 1)),
                                            ye = C(Ee.updateModel, we, Ae, Ee);
                                        ye && T(ae, Oe, we, lt, Ee)
                                    },
                                    oe = P === ":el" ? "" : P;
                                this.$el.on(je, oe, e.bind(z, this))
                            }, this), e.each(e.flatten([Oe]), function(J) {
                                S(ae, "change:" + J, Ee, function(je, z, oe) {
                                    var Ae = oe && oe.stickitChange && oe.stickitChange.bindId;
                                    if (Ae !== Pe) {
                                        var we = D(ae, Oe, Ee);
                                        re(f, Ee, we, ae)
                                    }
                                })
                            });
                            var Ve = D(ae, Oe, Ee);
                            re(f, Ee, Ve, ae, !0)
                        }
                        m.call(this, Ee.initialize, f, ae, Ee)
                    }
                }
            }, e.extend(n.View.prototype, i.ViewMixin);
            var o = [].slice,
                d = function(v, P) {
                    var H = (P || "").split("."),
                        ae = e.reduce(H, function(se, ve) {
                            return se[ve]
                        }, v);
                    return ae == null ? v : ae
                },
                m = function(v) {
                    if (v = e.isString(v) ? d(this, v) : v, v) return v.apply(this, o.call(arguments, 1))
                },
                C = function(v, P, H) {
                    if (e.isBoolean(v)) return v;
                    if (e.isFunction(v) || e.isString(v)) {
                        var ae = e.last(arguments).view;
                        return m.apply(ae, arguments)
                    }
                    return !1
                },
                S = function(v, P, H, ae) {
                    var se = H.view;
                    v.on(P, ae, se), se._modelBindings.push({
                        model: v,
                        event: P,
                        fn: ae,
                        config: H
                    })
                },
                T = function(v, P, H, ae, se) {
                    var ve = {},
                        f = se.view;
                    se.onSet && (H = m.call(f, se.onSet, H, se)), se.set ? m.call(f, se.set, P, H, ae, se) : (ve[P] = H, e.isArray(P) && e.isArray(H) && (ve = e.reduce(P, function(Ee, Oe, Pe) {
                        return Ee[Oe] = e.has(H, Pe) ? H[Pe] : null, Ee
                    }, {})), v.set(ve, ae))
                },
                D = function(v, P, H) {
                    var ae = H.view,
                        se = function(Ee) {
                            return v[H.escape ? "escape" : "get"](Ee)
                        },
                        ve = function(Ee) {
                            return Ee == null ? "" : Ee
                        },
                        f = e.isArray(P) ? e.map(P, se) : se(P);
                    return H.onGet && (f = m.call(ae, H.onGet, f, H)), e.isArray(f) ? e.map(f, ve) : ve(f)
                },
                V = i.getConfiguration = function(v, P) {
                    var H = [{
                        updateModel: !1,
                        updateMethod: "text",
                        update: function(se, ve, f, Ee) {
                            se[Ee.updateMethod] && se[Ee.updateMethod](ve)
                        },
                        getVal: function(se, ve, f) {
                            return se[f.updateMethod]()
                        }
                    }];
                    H = H.concat(e.filter(i._handlers, function(se) {
                        return v.is(se.selector)
                    })), H.push(P);
                    var ae = e.extend.apply(e, H);
                    return e.has(ae, "updateView") || (ae.updateView = !ae.visible), ae
                },
                Y = function(v, P, H, ae) {
                    var se = ["autofocus", "autoplay", "async", "checked", "controls", "defer", "disabled", "hidden", "indeterminate", "loop", "multiple", "open", "readonly", "required", "scoped", "selected"],
                        ve = P.view;
                    e.each(P.attributes || [], function(f) {
                        f = e.clone(f), f.view = ve;
                        var Ee = "",
                            Oe = f.observe || (f.observe = ae),
                            Pe = function() {
                                var lt = e.contains(se, f.name) ? "prop" : "attr",
                                    Ve = D(H, Oe, f);
                                f.name === "class" ? (v.removeClass(Ee).addClass(Ve), Ee = Ve) : v[lt](f.name, Ve)
                            };
                        e.each(e.flatten([Oe]), function(lt) {
                            S(H, "change:" + lt, P, Pe)
                        }), Pe()
                    })
                },
                ie = function(v, P, H, ae) {
                    e.each(P.classes || [], function(se, ve) {
                        e.isString(se) && (se = {
                            observe: se
                        }), se.view = P.view;
                        var f = se.observe,
                            Ee = function() {
                                var Oe = D(H, f, se);
                                v.toggleClass(ve, !!Oe)
                            };
                        e.each(e.flatten([f]), function(Oe) {
                            S(H, "change:" + Oe, P, Ee)
                        }), Ee()
                    })
                },
                K = function(v, P, H, ae) {
                    if (P.visible != null) {
                        var se = P.view,
                            ve = function() {
                                var f = P.visible,
                                    Ee = P.visibleFn,
                                    Oe = D(H, ae, P),
                                    Pe = !!Oe;
                                (e.isFunction(f) || e.isString(f)) && (Pe = !!m.call(se, f, Oe, P)), Ee ? m.call(se, Ee, v, Pe, P) : v.toggle(Pe)
                            };
                        e.each(e.flatten([ae]), function(f) {
                            S(H, "change:" + f, P, ve)
                        }), ve()
                    }
                },
                re = function(v, P, H, ae, se) {
                    var ve = P.view;
                    !C(P.updateView, H, P) || (m.call(ve, P.update, v, H, ae, P), se || m.call(ve, P.afterUpdate, v, H, P))
                };
            return i.addHandler([{
                selector: "[contenteditable]",
                updateMethod: "html",
                events: ["input", "change"]
            }, {
                selector: "input",
                events: ["propertychange", "input", "change"],
                update: function(v, P) {
                    v.val(P)
                },
                getVal: function(v) {
                    return v.val()
                }
            }, {
                selector: "textarea",
                events: ["propertychange", "input", "change"],
                update: function(v, P) {
                    v.val(P)
                },
                getVal: function(v) {
                    return v.val()
                }
            }, {
                selector: 'input[type="radio"]',
                events: ["change"],
                update: function(v, P) {
                    v.filter('[value="' + P + '"]').prop("checked", !0)
                },
                getVal: function(v) {
                    return v.filter(":checked").val()
                }
            }, {
                selector: 'input[type="checkbox"]',
                events: ["change"],
                update: function(v, P, H, ae) {
                    if (v.length > 1) P || (P = []), v.each(function(ve, f) {
                        var Ee = n.$(f),
                            Oe = e.contains(P, Ee.val());
                        Ee.prop("checked", Oe)
                    });
                    else {
                        var se = e.isBoolean(P) ? P : P === v.val();
                        v.prop("checked", se)
                    }
                },
                getVal: function(v) {
                    var P;
                    if (v.length > 1) P = e.reduce(v, function(ae, se) {
                        var ve = n.$(se);
                        return ve.prop("checked") && ae.push(ve.val()), ae
                    }, []);
                    else {
                        P = v.prop("checked");
                        var H = v.val();
                        H !== "on" && H != null && (P = P ? v.val() : null)
                    }
                    return P
                }
            }, {
                selector: "select",
                events: ["change"],
                update: function(v, P, H, ae) {
                    var se, ve = ae.selectOptions,
                        f = ve && ve.collection || void 0,
                        Ee = v.prop("multiple");
                    if (!ve) {
                        ve = {};
                        var Oe = function(ue) {
                            return ue.map(function(Se, Te) {
                                var Be = n.$(Te).data("stickit-bind-val");
                                return {
                                    value: Be !== void 0 ? Be : Te.value,
                                    label: Te.text
                                }
                            }).get()
                        };
                        v.find("optgroup").length ? (f = {
                            opt_labels: []
                        }, v.find("> option").length && (f.opt_labels.push(void 0), e.each(v.find("> option"), function(ue) {
                            f[void 0] = Oe(n.$(ue))
                        })), e.each(v.find("optgroup"), function(ue) {
                            var Se = n.$(ue).attr("label");
                            f.opt_labels.push(Se), f[Se] = Oe(n.$(ue).find("option"))
                        })) : f = Oe(v.find("option"))
                    }
                    ve.valuePath = ve.valuePath || "value", ve.labelPath = ve.labelPath || "label", ve.disabledPath = ve.disabledPath || "disabled";
                    var Pe = function(ue, Se, Te) {
                        e.each(ue, function(Be) {
                            var Ke = n.$("<option/>"),
                                dt = Be,
                                Bt = function(k, R, L) {
                                    Ke.text(k), dt = R, Ke.data("stickit-bind-val", dt), !e.isArray(dt) && !e.isObject(dt) && Ke.val(dt), L === !0 && Ke.prop("disabled", "disabled")
                                },
                                Ht, E, l;
                            Be === "__default__" ? (Ht = Te.label, E = Te.value, l = Te.disabled) : (Ht = d(Be, ve.labelPath), E = d(Be, ve.valuePath), l = d(Be, ve.disabledPath)), Bt(Ht, E, l);
                            var g = function() {
                                return !Ee && dt != null && Te != null && dt === Te ? !0 : !!(e.isObject(Te) && e.isEqual(dt, Te))
                            };
                            g() ? Ke.prop("selected", !0) : Ee && e.isArray(Te) && e.each(Te, function(k) {
                                e.isObject(k) && (k = d(k, ve.valuePath)), (k === dt || e.isObject(k) && e.isEqual(dt, k)) && Ke.prop("selected", !0)
                            }), Se.append(Ke)
                        })
                    };
                    if (v.find("*").remove(), e.isString(f)) {
                        var lt = window;
                        f.indexOf("this.") === 0 && (lt = this), f = f.replace(/^[a-z]*\.(.+)$/, "$1"), se = d(lt, f)
                    } else e.isFunction(f) ? se = m.call(this, f, v, ae) : se = f;
                    if (se instanceof n.Collection) {
                        var Ve = se,
                            J = function() {
                                var ue = D(H, ae.observe, ae);
                                m.call(this, ae.update, v, ue, H, ae)
                            },
                            je = function() {
                                Ve.off("add remove reset sort", J)
                            },
                            z = function() {
                                je(), Ve.off("stickit:selectRefresh"), H.off("stickit:selectRefresh")
                            };
                        Ve.trigger("stickit:selectRefresh"), Ve.once("stickit:selectRefresh", je, this), Ve.on("add remove reset sort", J, this), H.trigger("stickit:selectRefresh"), H.once("stickit:selectRefresh", function() {
                            H.off("stickit:unstuck", z)
                        }), H.once("stickit:unstuck", z, this), se = se.toJSON()
                    }
                    if (ve.defaultOption) {
                        var oe = e.isFunction(ve.defaultOption) ? ve.defaultOption.call(this, v, ae) : ve.defaultOption;
                        Pe(["__default__"], v, oe)
                    }
                    if (e.isArray(se)) Pe(se, v, P);
                    else if (se.opt_labels) e.each(se.opt_labels, function(ue) {
                        var Se = n.$("<optgroup/>").attr("label", ue);
                        Pe(se[ue], Se, P), v.append(Se)
                    });
                    else {
                        var Ae = [],
                            we;
                        for (var ye in se) we = {}, we[ve.valuePath] = ye, we[ve.labelPath] = se[ye], Ae.push(we);
                        Ae = e.sortBy(Ae, ve.comparator || ve.labelPath), Pe(Ae, v, P)
                    }
                },
                getVal: function(v) {
                    var P = v.find("option:selected");
                    return v.prop("multiple") ? e.map(P, function(H) {
                        return n.$(H).data("stickit-bind-val")
                    }) : P.data("stickit-bind-val")
                }
            }]), i
        })
    })(NC);
    const VC = `<button type="button" class='button choice-button btn btn-lg'></button>
<button data-action='censor' class='button censor-button btn btn-lg'></button>`,
        mh = xt.View.extend({
            template: Ze.template(VC),
            model: new at.Model({}),
            className() {
                let t = "button-group btn-group";
                return this.options.block !== !1 && (t += " btn-block"), t
            },
            events: {
                "click .button": "onClick"
            },
            bindings: {
                ":el": {
                    observe: "visible",
                    visible(t) {
                        return t !== !1
                    },
                    visibleFn(t, e) {
                        t.css("display", e ? "" : "none")
                    },
                    attributes: [{
                        name: "class",
                        observe: ["className", "selected", "disabled", "active"],
                        onGet([t, e, n, i]) {
                            let o = "";
                            return t && (o += t), e && (o += " selected"), n && (o += " disabled"), i && (o += " active"), o
                        }
                    }]
                },
                "button:first": {
                    observe: ["text", "html", "label"],
                    updateMethod: "html",
                    onGet([t, e, n]) {
                        return n ? this.$el.find("button:first").attr("aria-label", n) : this.$el.find("button:first").removeAttr("aria-label"), e || be("<div />").text(t).html()
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "disabled"
                    }, {
                        name: "data-action",
                        observe: "action",
                        onGet(t) {
                            return t || "choose"
                        }
                    }, {
                        name: "data-index",
                        observe: "index"
                    }, {
                        name: "data-key",
                        observe: "key"
                    }, {
                        name: "style",
                        observe: "color",
                        onGet(t) {
                            if (!t) return "";
                            let e = "";
                            return t.text && (e += `color: ${t.text};`), t.background && (e += `background-color: ${t.background};`), e
                        }
                    }, {
                        name: "type",
                        observe: "action",
                        onGet(t) {
                            return t === "submit" ? "submit" : "button"
                        }
                    }]
                },
                ".censor-button": {
                    observe: "censorable",
                    visible: !0,
                    visibleFn(t, e) {
                        e || t.remove()
                    },
                    attributes: [{
                        name: "data-index",
                        observe: "index"
                    }, {
                        name: "class",
                        observe: ["className", "isWarned"],
                        onGet(t) {
                            if (!t) return null;
                            let e = "";
                            return t[0] && (e += t[0]), t[1] && (e += " isWarned"), e
                        }
                    }]
                }
            },
            onRender() {
                this.model.set("index", this.getOption("index")), this.getOption("action") && this.model.set("action", this.getOption("action")), this.stickit()
            },
            onClick(t) {
                const e = be(t.target).data("action");
                this.triggerMethod(`button:${e}`, this.model)
            }
        });
    var Di, Gs, cs = typeof Map == "function" ? new Map : (Di = [], Gs = [], {
            has: function(t) {
                return Di.indexOf(t) > -1
            },
            get: function(t) {
                return Gs[Di.indexOf(t)]
            },
            set: function(t, e) {
                Di.indexOf(t) === -1 && (Di.push(t), Gs.push(e))
            },
            delete: function(t) {
                var e = Di.indexOf(t);
                e > -1 && (Di.splice(e, 1), Gs.splice(e, 1))
            }
        }),
        vh = function(t) {
            return new Event(t, {
                bubbles: !0
            })
        };
    try {
        new Event("test")
    } catch {
        vh = function(e) {
            var n = document.createEvent("Event");
            return n.initEvent(e, !0, !1), n
        }
    }

    function BC(t) {
        var e = cs.get(t);
        e && e.destroy()
    }

    function qC(t) {
        var e = cs.get(t);
        e && e.update()
    }
    var ts = null;
    typeof window > "u" || typeof window.getComputedStyle != "function" ? ((ts = function(t) {
        return t
    }).destroy = function(t) {
        return t
    }, ts.update = function(t) {
        return t
    }) : ((ts = function(t, e) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], function(n) {
            return function(i) {
                if (i && i.nodeName && i.nodeName === "TEXTAREA" && !cs.has(i)) {
                    var o, d = null,
                        m = null,
                        C = null,
                        S = function() {
                            i.clientWidth !== m && Y()
                        },
                        T = function(ie) {
                            window.removeEventListener("resize", S, !1), i.removeEventListener("input", Y, !1), i.removeEventListener("keyup", Y, !1), i.removeEventListener("autosize:destroy", T, !1), i.removeEventListener("autosize:update", Y, !1), Object.keys(ie).forEach(function(K) {
                                i.style[K] = ie[K]
                            }), cs.delete(i)
                        }.bind(i, {
                            height: i.style.height,
                            resize: i.style.resize,
                            overflowY: i.style.overflowY,
                            overflowX: i.style.overflowX,
                            wordWrap: i.style.wordWrap
                        });
                    i.addEventListener("autosize:destroy", T, !1), "onpropertychange" in i && "oninput" in i && i.addEventListener("keyup", Y, !1), window.addEventListener("resize", S, !1), i.addEventListener("input", Y, !1), i.addEventListener("autosize:update", Y, !1), i.style.overflowX = "hidden", i.style.wordWrap = "break-word", cs.set(i, {
                        destroy: T,
                        update: Y
                    }), (o = window.getComputedStyle(i, null)).resize === "vertical" ? i.style.resize = "none" : o.resize === "both" && (i.style.resize = "horizontal"), d = o.boxSizing === "content-box" ? -(parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)) : parseFloat(o.borderTopWidth) + parseFloat(o.borderBottomWidth), isNaN(d) && (d = 0), Y()
                }

                function D(ie) {
                    var K = i.style.width;
                    i.style.width = "0px", i.style.width = K, i.style.overflowY = ie
                }

                function V() {
                    if (i.scrollHeight !== 0) {
                        var ie = function(re) {
                                for (var v = []; re && re.parentNode && re.parentNode instanceof Element;) re.parentNode.scrollTop && v.push({
                                    node: re.parentNode,
                                    scrollTop: re.parentNode.scrollTop
                                }), re = re.parentNode;
                                return v
                            }(i),
                            K = document.documentElement && document.documentElement.scrollTop;
                        i.style.height = "", i.style.height = i.scrollHeight + d + "px", m = i.clientWidth, ie.forEach(function(re) {
                            re.node.scrollTop = re.scrollTop
                        }), K && (document.documentElement.scrollTop = K)
                    }
                }

                function Y() {
                    V();
                    var ie = Math.round(parseFloat(i.style.height)),
                        K = window.getComputedStyle(i, null),
                        re = K.boxSizing === "content-box" ? Math.round(parseFloat(K.height)) : i.offsetHeight;
                    if (re < ie ? K.overflowY === "hidden" && (D("scroll"), V(), re = K.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight) : K.overflowY !== "hidden" && (D("hidden"), V(), re = K.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight), C !== re) {
                        C = re;
                        var v = vh("autosize:resized");
                        try {
                            i.dispatchEvent(v)
                        } catch {}
                    }
                }
            }(n)
        }), t
    }).destroy = function(t) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], BC), t
    }, ts.update = function(t) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], qC), t
    });
    var _c = ts;
    const jC = `<form>\r
    <div class="form-group">\r
        <div class="inputGroup">\r
            <textarea id="input-text-textarea" rows="1" class="form-control jbg-input" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"></textarea>\r
            <span class="inlineSubmit">\r
                <button type="submit" class="btn btn-default inlineSubmitButton" type="button"><span class="inlineSubmitText">Send</span></button>\r
            </span>\r
            <span id="helpBlock2" class="help-block errorText"></span>\r
            <div class="charCountDisplay"><span class="charRemaining">70</span></div>\r
        </div>\r
    </div>\r
</form>`,
        co = xt.View.extend({
            tagName: "div",
            className: "input",
            model: new at.Model({}),
            template: Ze.template(jC),
            events: {
                "keypress textarea": "onKeypress",
                "click .inlineSubmitButton": "onSubmitClick",
                "input textarea": "onInputChange"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "hidden",
                        onGet(t) {
                            return t === !0 ? "display: none;" : "display: block;"
                        }
                    }, {
                        name: "class",
                        observe: "className",
                        onGet(t) {
                            return `input ${t!==void 0?t:""}`
                        }
                    }]
                },
                textarea: {
                    attributes: [{
                        name: "maxlength",
                        observe: "maxLength"
                    }, {
                        name: "placeholder",
                        observe: "placeholder"
                    }, {
                        name: "autocapitalize",
                        observe: "autocapitalize"
                    }, {
                        name: "class",
                        observe: "className",
                        onGet(t) {
                            return `form-control ${t!==void 0?t:""}`
                        }
                    }]
                },
                ".inputGroup": {
                    attributes: [{
                        name: "class",
                        observe: "inlineSubmit",
                        onGet(t) {
                            return t === !0 ? "input-group" : ""
                        }
                    }]
                },
                ".inlineSubmit": {
                    attributes: [{
                        name: "class",
                        observe: "inlineSubmit",
                        onGet(t) {
                            return t === !0 ? "input-group-btn" : ""
                        }
                    }, {
                        name: "style",
                        observe: "inlineSubmit",
                        onGet(t) {
                            return t === !0 ? "" : "display:none;"
                        }
                    }]
                },
                ".inlineSubmitText": {
                    observe: "inlineSubmitText",
                    onGet(t) {
                        return t !== void 0 ? t : "Send"
                    }
                },
                ".form-group": {
                    attributes: [{
                        name: "class",
                        observe: "error",
                        onGet(t) {
                            return t ? "has-error" : ""
                        }
                    }]
                },
                ".errorText": {
                    observe: "error",
                    updateMethod: "html",
                    visible: !0,
                    updateView: !0,
                    onGet(t) {
                        return t ? typeof t == "object" ? t.html ? t.html : be("<div />").text(t.text).html() : t : null
                    }
                },
                ".charRemaining": "remaining",
                ".maxChars": "maxLength",
                ".charCountDisplay": {
                    observe: ["maxLength", "counter"],
                    visible(t) {
                        return t[0] && t[1]
                    }
                }
            },
            render() {
                this.$el.html(this.template()), this.stickit(), this.model.set("remaining", this.model.get("maxLength"))
            },
            onAttach() {
                this.getOption("preventAutosize") || _c(be("textarea"))
            },
            onSubmitClick() {
                return be("textarea").blur(), this.triggerMethod("input:submit", this), !1
            },
            onKeypress(t) {
                return this.model.set("error", ""), t.keyCode === 13 ? (be("textarea").blur(), this.triggerMethod("input:submit", this), !1) : !0
            },
            onInputChange() {
                const t = this.$("textarea").first();
                if (this.triggerMethod("input:text", this), !t) return;
                const e = t.val() || "";
                this.model.set("remaining", this.model.get("maxLength") - e.length)
            },
            focus() {
                be(this.$el).find("textarea").focus()
            },
            clearInput() {
                const t = be(this.$el).find("textarea");
                be(t).val(""), this.getOption("preventAutosize") || _c.update(t), this.onInputChange()
            },
            setValue(t) {
                const e = be(this.$el).find("textarea");
                e[0].value = t, this.onInputChange()
            },
            getValue() {
                return this.$("textarea").val()
            },
            getSanitizedValue() {
                return Mt.sanitize(this.getValue())
            },
            sanitize(t) {
                return Mt.sanitize(t)
            },
            sanitizeInput(t) {
                return Mt.sanitizeInput(t)
            }
        }),
        FC = '<div class="text"></div>',
        Ui = xt.View.extend({
            tagName: "div",
            template: Ze.template(FC),
            model: new at.Model({
                text: "",
                className: ""
            }),
            bindings: {
                ".text": {
                    observe: ["text", "html"],
                    updateMethod: "html",
                    onGet([t, e]) {
                        return e !== void 0 ? e : be("<div />").text(t).html()
                    }
                },
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "background",
                        onGet(t) {
                            return t ? `background-color: ${t};` : ""
                        }
                    }, {
                        name: "class",
                        observe: "className"
                    }]
                }
            },
            onRender() {
                this.stickit()
            }
        }),
        mi = xt.CollectionView.extend({
            tagName: "div",
            className: "choices",
            childView(t) {
                return t.get("type") === "input" ? co : t.get("type") === "text" ? Ui : mh
            },
            collection: new at.Collection([]),
            initialize(t) {
                this.listenTo(this.collection, "sync", this.render), this.mergeOptions(t, ["block", "action"])
            },
            childViewOptions(t, e) {
                let n = !0,
                    i;
                return t.get("block") !== void 0 ? n = t.get("block") : this.getOption("block") !== void 0 && (n = this.getOption("block")), t.get("action") !== void 0 ? i = t.get("action") : this.getOption("action") !== void 0 && (i = this.getOption("action")), {
                    block: n,
                    action: i,
                    index: t.get("key") !== void 0 ? t.get("key") : e
                }
            }
        });
    let xc = {};

    function yh(t, ...e) {
        !xc[t] || xc[t].map(n => n(...e))
    }
    let ns, Qs;

    function Vi() {
        return ns
    }

    function So() {
        return Qs
    }

    function UC(t) {
        if (ns = document.getElementById(t) || t || document.querySelector("canvas"), !ns) throw Error("You must provide a canvas element for the game");
        return Qs = ns.getContext("2d"), Qs.imageSmoothingEnabled = !1, yh("init"), {
            canvas: ns,
            context: Qs
        }
    }
    class yl {
        constructor({
            spriteSheet: e,
            frames: n,
            frameRate: i,
            loop: o = !0
        } = {}) {
            this.spriteSheet = e, this.frames = n, this.frameRate = i, this.loop = o;
            let {
                width: d,
                height: m,
                margin: C = 0
            } = e.frame;
            this.width = d, this.height = m, this.margin = C, this._f = 0, this._a = 0
        }
        clone() {
            return ko(this)
        }
        reset() {
            this._f = 0, this._a = 0
        }
        update(e = 1 / 60) {
            if (!(!this.loop && this._f == this.frames.length - 1))
                for (this._a += e; this._a * this.frameRate >= 1;) this._f = ++this._f % this.frames.length, this._a -= 1 / this.frameRate
        }
        render({
            x: e,
            y: n,
            width: i = this.width,
            height: o = this.height,
            context: d = So()
        } = {}) {
            let m = this.frames[this._f] / this.spriteSheet._f | 0,
                C = this.frames[this._f] % this.spriteSheet._f | 0;
            d.drawImage(this.spriteSheet.image, C * this.width + (C * 2 + 1) * this.margin, m * this.height + (m * 2 + 1) * this.margin, this.width, this.height, e, n, i, o)
        }
    }

    function ko(t) {
        return new yl(t)
    }
    ko.prototype = yl.prototype;
    ko.class = yl;
    const zC = () => {};

    function GC() {
        let t = Vi();
        So().clearRect(0, 0, t.width, t.height)
    }

    function HC({
        fps: t = 60,
        clearCanvas: e = !0,
        update: n,
        render: i
    } = {}) {
        if (!(n && i)) throw Error("You must provide update() and render() functions");
        let o = 0,
            d = 1e3 / t,
            m = 1 / t,
            C = e ? GC : zC,
            S, T, D, V, Y;
        const ie = window.performance || Date;

        function K() {
            if (T = requestAnimationFrame(K), D = ie.now(), V = D - S, S = D, !(V > 1e3)) {
                for (yh("tick"), o += V; o >= d;) Y.update(m), o -= d;
                C(), Y.render()
            }
        }
        return Y = {
            update: n,
            render: i,
            isStopped: !0,
            start() {
                S = ie.now(), this.isStopped = !1, requestAnimationFrame(K)
            },
            stop() {
                this.isStopped = !0, cancelAnimationFrame(T)
            },
            _frame: K,
            set _last(re) {
                S = re
            }
        }, Y
    }
    class WC {
        constructor({
            create: e,
            maxSize: n = 1024
        } = {}) {
            let i;
            if (!e || !(i = e()) || !(i.update && i.init && i.isAlive)) throw Error("Must provide create() function which returns an object with init(), update(), and isAlive() functions");
            this._c = e, this.objects = [e()], this.size = 0, this.maxSize = n
        }
        get(e = {}) {
            if (this.size === this.objects.length) {
                if (this.size === this.maxSize) return;
                for (let i = 0; i < this.size && this.objects.length < this.maxSize; i++) this.objects.push(this._c())
            }
            let n = this.objects[this.size];
            return this.size++, n.init(e), n
        }
        getAliveObjects() {
            return this.objects.slice(0, this.size)
        }
        clear() {
            this.size = this.objects.length = 0, this.objects.push(this._c())
        }
        update(e) {
            let n, i = !1;
            for (let o = this.size; o--;) n = this.objects[o], n.update(e), n.isAlive() || (i = !0, this.size--);
            i && this.objects.sort((o, d) => d.isAlive() - o.isAlive())
        }
        render() {
            for (let e = this.size; e--;) this.objects[e].render()
        }
    }
    WC.prototype;

    function Ec(t, e) {
        let n = [],
            i = e.x + e.width / 2,
            o = e.y + e.height / 2,
            d = t.y < o && t.y + t.height >= e.y,
            m = t.y + t.height >= o && t.y < e.y + e.height;
        return t.x < i && t.x + t.width >= e.x && (d && n.push(0), m && n.push(2)), t.x + t.width >= i && t.x < e.x + e.width && (d && n.push(1), m && n.push(3)), n
    }
    class bl {
        constructor({
            maxDepth: e = 3,
            maxObjects: n = 25,
            bounds: i
        } = {}) {
            this.maxDepth = e, this.maxObjects = n;
            let o = Vi();
            this.bounds = i || {
                x: 0,
                y: 0,
                width: o.width,
                height: o.height
            }, this._b = !1, this._d = 0, this._o = [], this._s = [], this._p = null
        }
        clear() {
            this._s.map(function(e) {
                e.clear()
            }), this._b = !1, this._o.length = 0
        }
        get(e) {
            let n = new Set,
                i, o;
            for (; this._s.length && this._b;) {
                for (i = Ec(e, this.bounds), o = 0; o < i.length; o++) this._s[i[o]].get(e).forEach(d => n.add(d));
                return Array.from(n)
            }
            return this._o.filter(d => d !== e)
        }
        add() {
            let e, n, i, o;
            for (n = 0; n < arguments.length; n++) {
                if (i = arguments[n], Array.isArray(i)) {
                    this.add.apply(this, i);
                    continue
                }
                if (this._b) {
                    this._a(i);
                    continue
                }
                if (this._o.push(i), this._o.length > this.maxObjects && this._d < this.maxDepth) {
                    for (this._sp(), e = 0; o = this._o[e]; e++) this._a(o);
                    this._o.length = 0
                }
            }
        }
        _a(e, n, i) {
            for (n = Ec(e, this.bounds), i = 0; i < n.length; i++) this._s[n[i]].add(e)
        }
        _sp(e, n, i) {
            if (this._b = !0, !this._s.length)
                for (e = this.bounds.width / 2 | 0, n = this.bounds.height / 2 | 0, i = 0; i < 4; i++) this._s[i] = wl({
                    bounds: {
                        x: this.bounds.x + (i % 2 === 1 ? e : 0),
                        y: this.bounds.y + (i >= 2 ? n : 0),
                        width: e,
                        height: n
                    },
                    maxDepth: this.maxDepth,
                    maxObjects: this.maxObjects
                }), this._s[i]._d = this._d + 1, this._s[i]._p = this
        }
    }

    function wl(t) {
        return new bl(t)
    }
    wl.prototype = bl.prototype;
    wl.class = bl;
    class Cl {
        constructor(e = 0, n = 0) {
            this._x = e, this._y = n
        }
        add(e, n = 1) {
            return yr(this.x + (e.x || 0) * n, this.y + (e.y || 0) * n, this)
        }
        clamp(e, n, i, o) {
            this._c = !0, this._a = e, this._b = n, this._d = i, this._e = o
        }
        get x() {
            return this._x
        }
        get y() {
            return this._y
        }
        set x(e) {
            this._x = this._c ? Math.min(Math.max(this._a, e), this._d) : e
        }
        set y(e) {
            this._y = this._c ? Math.min(Math.max(this._b, e), this._e) : e
        }
    }

    function yr(t, e, n = {}) {
        let i = new Cl(t, e);
        return n._c && (i.clamp(n._a, n._b, n._d, n._e), i.x = t, i.y = e), i
    }
    yr.prototype = Cl.prototype;
    yr.class = Cl;
    class _l {
        constructor(e) {
            this.init(e)
        }
        init(e = {}) {
            let {
                x: n,
                y: i,
                dx: o,
                dy: d,
                ddx: m,
                ddy: C,
                width: S,
                height: T,
                image: D
            } = e;
            this.position = yr(n, i), this.velocity = yr(o, d), this.acceleration = yr(m, C), this._fx = this._fy = 1, this.width = this.height = this.rotation = 0, this.ttl = 1 / 0, this.anchor = {
                x: 0,
                y: 0
            }, this.context = So();
            for (let V in e) this[V] = e[V];
            D && (this.width = S !== void 0 ? S : D.width, this.height = T !== void 0 ? T : D.height), this.sx = 0, this.sy = 0
        }
        get x() {
            return this.position.x
        }
        get y() {
            return this.position.y
        }
        get dx() {
            return this.velocity.x
        }
        get dy() {
            return this.velocity.y
        }
        get ddx() {
            return this.acceleration.x
        }
        get ddy() {
            return this.acceleration.y
        }
        get animations() {
            return this._a
        }
        get viewX() {
            return this.x - this.sx
        }
        get viewY() {
            return this.y - this.sy
        }
        get width() {
            return this._w
        }
        get height() {
            return this._h
        }
        set x(e) {
            this.position.x = e
        }
        set y(e) {
            this.position.y = e
        }
        set dx(e) {
            this.velocity.x = e
        }
        set dy(e) {
            this.velocity.y = e
        }
        set ddx(e) {
            this.acceleration.x = e
        }
        set ddy(e) {
            this.acceleration.y = e
        }
        set animations(e) {
            let n, i;
            this._a = {};
            for (n in e) this._a[n] = e[n].clone(), i = i || this._a[n];
            this.currentAnimation = i, this.width = this.width || i.width, this.height = this.height || i.height
        }
        set viewX(e) {}
        set viewY(e) {}
        set width(e) {
            let n = e < 0 ? -1 : 1;
            this._fx = n, this._w = e * n
        }
        set height(e) {
            let n = e < 0 ? -1 : 1;
            this._fy = n, this._h = e * n
        }
        isAlive() {
            return this.ttl > 0
        }
        collidesWith(e) {
            if (this.rotation || e.rotation) return null;
            let n = this.x - this.width * this.anchor.x,
                i = this.y - this.height * this.anchor.y,
                o = e.x,
                d = e.y;
            return e.anchor && (o -= e.width * e.anchor.x, d -= e.height * e.anchor.y), n < o + e.width && n + this.width > o && i < d + e.height && i + this.height > d
        }
        update(e) {
            this.advance(e)
        }
        render() {
            this.draw()
        }
        playAnimation(e) {
            this.currentAnimation = this.animations[e], this.currentAnimation.loop || this.currentAnimation.reset()
        }
        advance(e) {
            this.velocity = this.velocity.add(this.acceleration, e), this.position = this.position.add(this.velocity, e), this.ttl--, this.currentAnimation && this.currentAnimation.update(e)
        }
        draw() {
            let e = -this.width * this.anchor.x,
                n = -this.height * this.anchor.y;
            if (this.context.save(), this.context.translate(this.viewX, this.viewY), this.rotation && this.context.rotate(this.rotation), this._fx == -1 || this._fy == -1) {
                let i = this.width / 2 + e,
                    o = this.height / 2 + n;
                this.context.translate(i, o), this.context.scale(this._fx, this._fy), this.context.translate(-i, -o)
            }
            this.image ? this.context.drawImage(this.image, e, n, this.width, this.height) : this.currentAnimation ? this.currentAnimation.render({
                x: e,
                y: n,
                width: this.width,
                height: this.height,
                context: this.context
            }) : (this.context.fillStyle = this.color, this.context.fillRect(e, n, this.width, this.height)), this.context.restore()
        }
    }

    function xl(t) {
        return new _l(t)
    }
    xl.prototype = _l.prototype;
    xl.class = _l;

    function XC(t) {
        if (+t === t) return t;
        let e = [],
            n = t.split(".."),
            i = +n[0],
            o = +n[1],
            d = i;
        if (i < o)
            for (; d <= o; d++) e.push(d);
        else
            for (; d >= o; d--) e.push(d);
        return e
    }
    class YC {
        constructor({
            image: e,
            frameWidth: n,
            frameHeight: i,
            frameMargin: o,
            animations: d
        } = {}) {
            if (!e) throw Error("You must provide an Image for the SpriteSheet");
            this.animations = {}, this.image = e, this.frame = {
                width: n,
                height: i,
                margin: o
            }, this._f = e.width / n | 0, this.createAnimations(d)
        }
        createAnimations(e) {
            let n, i;
            for (i in e) {
                let {
                    frames: o,
                    frameRate: d,
                    loop: m
                } = e[i];
                if (n = [], o === void 0) throw Error("Animation " + i + " must provide a frames property");
                [].concat(o).map(C => {
                    n = n.concat(XC(C))
                }), this.animations[i] = ko({
                    spriteSheet: this,
                    frames: n,
                    frameRate: d,
                    loop: m
                })
            }
        }
    }
    YC.prototype;
    var bh = {
        exports: {}
    };
    /*!
     * sweetalert2 v11.4.26
     * Released under the MIT License.
     */
    (function(t, e) {
        (function(n, i) {
            t.exports = i()
        })(vt, function() {
            const n = "SweetAlert2:",
                i = c => {
                    const h = [];
                    for (let w = 0; w < c.length; w++) h.indexOf(c[w]) === -1 && h.push(c[w]);
                    return h
                },
                o = c => c.charAt(0).toUpperCase() + c.slice(1),
                d = c => {
                    console.warn("".concat(n, " ").concat(typeof c == "object" ? c.join(" ") : c))
                },
                m = c => {
                    console.error("".concat(n, " ").concat(c))
                },
                C = [],
                S = c => {
                    C.includes(c) || (C.push(c), d(c))
                },
                T = (c, h) => {
                    S('"'.concat(c, '" is deprecated and will be removed in the next major release. Please use "').concat(h, '" instead.'))
                },
                D = c => typeof c == "function" ? c() : c,
                V = c => c && typeof c.toPromise == "function",
                Y = c => V(c) ? c.toPromise() : Promise.resolve(c),
                ie = c => c && Promise.resolve(c) === c,
                K = c => c[Math.floor(Math.random() * c.length)],
                re = {
                    title: "",
                    titleText: "",
                    text: "",
                    html: "",
                    footer: "",
                    icon: void 0,
                    iconColor: void 0,
                    iconHtml: void 0,
                    template: void 0,
                    toast: !1,
                    showClass: {
                        popup: "swal2-show",
                        backdrop: "swal2-backdrop-show",
                        icon: "swal2-icon-show"
                    },
                    hideClass: {
                        popup: "swal2-hide",
                        backdrop: "swal2-backdrop-hide",
                        icon: "swal2-icon-hide"
                    },
                    customClass: {},
                    target: "body",
                    color: void 0,
                    backdrop: !0,
                    heightAuto: !0,
                    allowOutsideClick: !0,
                    allowEscapeKey: !0,
                    allowEnterKey: !0,
                    stopKeydownPropagation: !0,
                    keydownListenerCapture: !1,
                    showConfirmButton: !0,
                    showDenyButton: !1,
                    showCancelButton: !1,
                    preConfirm: void 0,
                    preDeny: void 0,
                    confirmButtonText: "OK",
                    confirmButtonAriaLabel: "",
                    confirmButtonColor: void 0,
                    denyButtonText: "No",
                    denyButtonAriaLabel: "",
                    denyButtonColor: void 0,
                    cancelButtonText: "Cancel",
                    cancelButtonAriaLabel: "",
                    cancelButtonColor: void 0,
                    buttonsStyling: !0,
                    reverseButtons: !1,
                    focusConfirm: !0,
                    focusDeny: !1,
                    focusCancel: !1,
                    returnFocus: !0,
                    showCloseButton: !1,
                    closeButtonHtml: "&times;",
                    closeButtonAriaLabel: "Close this dialog",
                    loaderHtml: "",
                    showLoaderOnConfirm: !1,
                    showLoaderOnDeny: !1,
                    imageUrl: void 0,
                    imageWidth: void 0,
                    imageHeight: void 0,
                    imageAlt: "",
                    timer: void 0,
                    timerProgressBar: !1,
                    width: void 0,
                    padding: void 0,
                    background: void 0,
                    input: void 0,
                    inputPlaceholder: "",
                    inputLabel: "",
                    inputValue: "",
                    inputOptions: {},
                    inputAutoTrim: !0,
                    inputAttributes: {},
                    inputValidator: void 0,
                    returnInputValueOnDeny: !1,
                    validationMessage: void 0,
                    grow: !1,
                    position: "center",
                    progressSteps: [],
                    currentProgressStep: void 0,
                    progressStepsDistance: void 0,
                    willOpen: void 0,
                    didOpen: void 0,
                    didRender: void 0,
                    willClose: void 0,
                    didClose: void 0,
                    didDestroy: void 0,
                    scrollbarPadding: !0
                },
                v = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
                P = {},
                H = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
                ae = c => Object.prototype.hasOwnProperty.call(re, c),
                se = c => v.indexOf(c) !== -1,
                ve = c => P[c],
                f = c => {
                    ae(c) || d('Unknown parameter "'.concat(c, '"'))
                },
                Ee = c => {
                    H.includes(c) && d('The parameter "'.concat(c, '" is incompatible with toasts'))
                },
                Oe = c => {
                    ve(c) && T(c, ve(c))
                },
                Pe = c => {
                    !c.backdrop && c.allowOutsideClick && d('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
                    for (const h in c) f(h), c.toast && Ee(h), Oe(h)
                },
                lt = "swal2-",
                Ve = c => {
                    const h = {};
                    for (const w in c) h[c[w]] = lt + c[w];
                    return h
                },
                J = Ve(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "no-war"]),
                je = Ve(["success", "warning", "info", "question", "error"]),
                z = () => document.body.querySelector(".".concat(J.container)),
                oe = c => {
                    const h = z();
                    return h ? h.querySelector(c) : null
                },
                Ae = c => oe(".".concat(c)),
                we = () => Ae(J.popup),
                ye = () => Ae(J.icon),
                ue = () => Ae(J.title),
                Se = () => Ae(J["html-container"]),
                Te = () => Ae(J.image),
                Be = () => Ae(J["progress-steps"]),
                Ke = () => Ae(J["validation-message"]),
                dt = () => oe(".".concat(J.actions, " .").concat(J.confirm)),
                Bt = () => oe(".".concat(J.actions, " .").concat(J.deny)),
                Ht = () => Ae(J["input-label"]),
                E = () => oe(".".concat(J.loader)),
                l = () => oe(".".concat(J.actions, " .").concat(J.cancel)),
                g = () => Ae(J.actions),
                k = () => Ae(J.footer),
                R = () => Ae(J["timer-progress-bar"]),
                L = () => Ae(J.close),
                N = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`,
                te = () => {
                    const c = Array.from(we().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((w, B) => {
                            const ge = parseInt(w.getAttribute("tabindex")),
                                Ue = parseInt(B.getAttribute("tabindex"));
                            return ge > Ue ? 1 : ge < Ue ? -1 : 0
                        }),
                        h = Array.from(we().querySelectorAll(N)).filter(w => w.getAttribute("tabindex") !== "-1");
                    return i(c.concat(h)).filter(w => pe(w))
                },
                ke = () => Ct(document.body, J.shown) && !Ct(document.body, J["toast-shown"]) && !Ct(document.body, J["no-backdrop"]),
                he = () => we() && Ct(we(), J.toast),
                De = () => we().hasAttribute("data-loading"),
                Me = {
                    previousBodyPadding: null
                },
                rt = (c, h) => {
                    if (c.textContent = "", h) {
                        const B = new DOMParser().parseFromString(h, "text/html");
                        Array.from(B.querySelector("head").childNodes).forEach(ge => {
                            c.appendChild(ge)
                        }), Array.from(B.querySelector("body").childNodes).forEach(ge => {
                            c.appendChild(ge)
                        })
                    }
                },
                Ct = (c, h) => {
                    if (!h) return !1;
                    const w = h.split(/\s+/);
                    for (let B = 0; B < w.length; B++)
                        if (!c.classList.contains(w[B])) return !1;
                    return !0
                },
                rn = (c, h) => {
                    Array.from(c.classList).forEach(w => {
                        !Object.values(J).includes(w) && !Object.values(je).includes(w) && !Object.values(h.showClass).includes(w) && c.classList.remove(w)
                    })
                },
                ct = (c, h, w) => {
                    if (rn(c, h), h.customClass && h.customClass[w]) {
                        if (typeof h.customClass[w] != "string" && !h.customClass[w].forEach) return d("Invalid type of customClass.".concat(w, '! Expected string or iterable object, got "').concat(typeof h.customClass[w], '"'));
                        Je(c, h.customClass[w])
                    }
                },
                yt = (c, h) => {
                    if (!h) return null;
                    switch (h) {
                        case "select":
                        case "textarea":
                        case "file":
                            return c.querySelector(".".concat(J.popup, " > .").concat(J[h]));
                        case "checkbox":
                            return c.querySelector(".".concat(J.popup, " > .").concat(J.checkbox, " input"));
                        case "radio":
                            return c.querySelector(".".concat(J.popup, " > .").concat(J.radio, " input:checked")) || c.querySelector(".".concat(J.popup, " > .").concat(J.radio, " input:first-child"));
                        case "range":
                            return c.querySelector(".".concat(J.popup, " > .").concat(J.range, " input"));
                        default:
                            return c.querySelector(".".concat(J.popup, " > .").concat(J.input))
                    }
                },
                wt = c => {
                    if (c.focus(), c.type !== "file") {
                        const h = c.value;
                        c.value = "", c.value = h
                    }
                },
                Jt = (c, h, w) => {
                    !c || !h || (typeof h == "string" && (h = h.split(/\s+/).filter(Boolean)), h.forEach(B => {
                        Array.isArray(c) ? c.forEach(ge => {
                            w ? ge.classList.add(B) : ge.classList.remove(B)
                        }) : w ? c.classList.add(B) : c.classList.remove(B)
                    }))
                },
                Je = (c, h) => {
                    Jt(c, h, !0)
                },
                Pt = (c, h) => {
                    Jt(c, h, !1)
                },
                q = (c, h) => {
                    const w = Array.from(c.children);
                    for (let B = 0; B < w.length; B++) {
                        const ge = w[B];
                        if (ge instanceof HTMLElement && Ct(ge, h)) return ge
                    }
                },
                $ = (c, h, w) => {
                    w === "".concat(parseInt(w)) && (w = parseInt(w)), w || parseInt(w) === 0 ? c.style[h] = typeof w == "number" ? "".concat(w, "px") : w : c.style.removeProperty(h)
                },
                W = function(c) {
                    let h = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "flex";
                    c.style.display = h
                },
                M = c => {
                    c.style.display = "none"
                },
                G = (c, h, w, B) => {
                    const ge = c.querySelector(h);
                    ge && (ge.style[w] = B)
                },
                fe = function(c, h) {
                    let w = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "flex";
                    h ? W(c, w) : M(c)
                },
                pe = c => !!(c && (c.offsetWidth || c.offsetHeight || c.getClientRects().length)),
                $e = () => !pe(dt()) && !pe(Bt()) && !pe(l()),
                Ne = c => c.scrollHeight > c.clientHeight,
                pt = c => {
                    const h = window.getComputedStyle(c),
                        w = parseFloat(h.getPropertyValue("animation-duration") || "0"),
                        B = parseFloat(h.getPropertyValue("transition-duration") || "0");
                    return w > 0 || B > 0
                },
                jt = function(c) {
                    let h = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
                    const w = R();
                    pe(w) && (h && (w.style.transition = "none", w.style.width = "100%"), setTimeout(() => {
                        w.style.transition = "width ".concat(c / 1e3, "s linear"), w.style.width = "0%"
                    }, 10))
                },
                Ye = () => {
                    const c = R(),
                        h = parseInt(window.getComputedStyle(c).width);
                    c.style.removeProperty("transition"), c.style.width = "100%";
                    const w = parseInt(window.getComputedStyle(c).width),
                        B = h / w * 100;
                    c.style.removeProperty("transition"), c.style.width = "".concat(B, "%")
                },
                In = () => typeof window > "u" || typeof document > "u",
                Pn = 100,
                st = {},
                Dn = () => {
                    st.previousActiveElement instanceof HTMLElement ? (st.previousActiveElement.focus(), st.previousActiveElement = null) : document.body && document.body.focus()
                },
                wi = c => new Promise(h => {
                    if (!c) return h();
                    const w = window.scrollX,
                        B = window.scrollY;
                    st.restoreFocusTimeout = setTimeout(() => {
                        Dn(), h()
                    }, Pn), window.scrollTo(w, B)
                }),
                Rr = `
 <div aria-labelledby="`.concat(J.title, '" aria-describedby="').concat(J["html-container"], '" class="').concat(J.popup, `" tabindex="-1">
   <button type="button" class="`).concat(J.close, `"></button>
   <ul class="`).concat(J["progress-steps"], `"></ul>
   <div class="`).concat(J.icon, `"></div>
   <img class="`).concat(J.image, `" />
   <h2 class="`).concat(J.title, '" id="').concat(J.title, `"></h2>
   <div class="`).concat(J["html-container"], '" id="').concat(J["html-container"], `"></div>
   <input class="`).concat(J.input, `" />
   <input type="file" class="`).concat(J.file, `" />
   <div class="`).concat(J.range, `">
     <input type="range" />
     <output></output>
   </div>
   <select class="`).concat(J.select, `"></select>
   <div class="`).concat(J.radio, `"></div>
   <label for="`).concat(J.checkbox, '" class="').concat(J.checkbox, `">
     <input type="checkbox" />
     <span class="`).concat(J.label, `"></span>
   </label>
   <textarea class="`).concat(J.textarea, `"></textarea>
   <div class="`).concat(J["validation-message"], '" id="').concat(J["validation-message"], `"></div>
   <div class="`).concat(J.actions, `">
     <div class="`).concat(J.loader, `"></div>
     <button type="button" class="`).concat(J.confirm, `"></button>
     <button type="button" class="`).concat(J.deny, `"></button>
     <button type="button" class="`).concat(J.cancel, `"></button>
   </div>
   <div class="`).concat(J.footer, `"></div>
   <div class="`).concat(J["timer-progress-bar-container"], `">
     <div class="`).concat(J["timer-progress-bar"], `"></div>
   </div>
 </div>
`).replace(/(^|\n)\s*/g, ""),
                kn = () => {
                    const c = z();
                    return c ? (c.remove(), Pt([document.documentElement, document.body], [J["no-backdrop"], J["toast-shown"], J["has-column"]]), !0) : !1
                },
                sn = () => {
                    st.currentInstance.resetValidationMessage()
                },
                Ir = () => {
                    const c = we(),
                        h = q(c, J.input),
                        w = q(c, J.file),
                        B = c.querySelector(".".concat(J.range, " input")),
                        ge = c.querySelector(".".concat(J.range, " output")),
                        Ue = q(c, J.select),
                        Gt = c.querySelector(".".concat(J.checkbox, " input")),
                        Nn = q(c, J.textarea);
                    h.oninput = sn, w.onchange = sn, Ue.onchange = sn, Gt.onchange = sn, Nn.oninput = sn, B.oninput = () => {
                        sn(), ge.value = B.value
                    }, B.onchange = () => {
                        sn(), ge.value = B.value
                    }
                },
                Dr = c => typeof c == "string" ? document.querySelector(c) : c,
                Ci = c => {
                    const h = we();
                    h.setAttribute("role", c.toast ? "alert" : "dialog"), h.setAttribute("aria-live", c.toast ? "polite" : "assertive"), c.toast || h.setAttribute("aria-modal", "true")
                },
                zi = c => {
                    window.getComputedStyle(c).direction === "rtl" && Je(z(), J.rtl)
                },
                _i = c => {
                    const h = kn();
                    if (In()) {
                        m("SweetAlert2 requires document to initialize");
                        return
                    }
                    const w = document.createElement("div");
                    w.className = J.container, h && Je(w, J["no-transition"]), rt(w, Rr);
                    const B = Dr(c.target);
                    B.appendChild(w), Ci(c), zi(B), Ir()
                },
                xi = (c, h) => {
                    c instanceof HTMLElement ? h.appendChild(c) : typeof c == "object" ? Gi(c, h) : c && rt(h, c)
                },
                Gi = (c, h) => {
                    c.jquery ? Hi(h, c) : rt(h, c.toString())
                },
                Hi = (c, h) => {
                    if (c.textContent = "", 0 in h)
                        for (let w = 0; w in h; w++) c.appendChild(h[w].cloneNode(!0));
                    else c.appendChild(h.cloneNode(!0))
                },
                mn = (() => {
                    if (In()) return !1;
                    const c = document.createElement("div"),
                        h = {
                            WebkitAnimation: "webkitAnimationEnd",
                            animation: "animationend"
                        };
                    for (const w in h)
                        if (Object.prototype.hasOwnProperty.call(h, w) && typeof c.style[w] < "u") return h[w];
                    return !1
                })(),
                Wi = () => {
                    const c = document.createElement("div");
                    c.className = J["scrollbar-measure"], document.body.appendChild(c);
                    const h = c.getBoundingClientRect().width - c.clientWidth;
                    return document.body.removeChild(c), h
                },
                Ei = (c, h) => {
                    const w = g(),
                        B = E();
                    !h.showConfirmButton && !h.showDenyButton && !h.showCancelButton ? M(w) : W(w), ct(w, h, "actions"), zn(w, B, h), rt(B, h.loaderHtml), ct(B, h, "loader")
                };

            function zn(c, h, w) {
                const B = dt(),
                    ge = Bt(),
                    Ue = l();
                Si(B, "confirm", w), Si(ge, "deny", w), Si(Ue, "cancel", w), Xi(B, ge, Ue, w), w.reverseButtons && (w.toast ? (c.insertBefore(Ue, B), c.insertBefore(ge, B)) : (c.insertBefore(Ue, h), c.insertBefore(ge, h), c.insertBefore(B, h)))
            }

            function Xi(c, h, w, B) {
                if (!B.buttonsStyling) return Pt([c, h, w], J.styled);
                Je([c, h, w], J.styled), B.confirmButtonColor && (c.style.backgroundColor = B.confirmButtonColor, Je(c, J["default-outline"])), B.denyButtonColor && (h.style.backgroundColor = B.denyButtonColor, Je(h, J["default-outline"])), B.cancelButtonColor && (w.style.backgroundColor = B.cancelButtonColor, Je(w, J["default-outline"]))
            }

            function Si(c, h, w) {
                fe(c, w["show".concat(o(h), "Button")], "inline-block"), rt(c, w["".concat(h, "ButtonText")]), c.setAttribute("aria-label", w["".concat(h, "ButtonAriaLabel")]), c.className = J[h], ct(c, w, "".concat(h, "Button")), Je(c, w["".concat(h, "ButtonClass")])
            }
            const et = (c, h) => {
                const w = z();
                !w || (y(w, h.backdrop), a(w, h.position), _(w, h.grow), ct(w, h, "container"))
            };

            function y(c, h) {
                typeof h == "string" ? c.style.background = h : h || Je([document.documentElement, document.body], J["no-backdrop"])
            }

            function a(c, h) {
                h in J ? Je(c, J[h]) : (d('The "position" parameter is not valid, defaulting to "center"'), Je(c, J.center))
            }

            function _(c, h) {
                if (h && typeof h == "string") {
                    const w = "grow-".concat(h);
                    w in J && Je(c, J[w])
                }
            }
            var O = {
                awaitingPromise: new WeakMap,
                promise: new WeakMap,
                innerParams: new WeakMap,
                domCache: new WeakMap
            };
            const Q = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
                _e = (c, h) => {
                    const w = we(),
                        B = O.innerParams.get(c),
                        ge = !B || h.input !== B.input;
                    Q.forEach(Ue => {
                        const Gt = q(w, J[Ue]);
                        Xt(Ue, h.inputAttributes), Gt.className = J[Ue], ge && M(Gt)
                    }), h.input && (ge && He(h), Gn(h))
                },
                He = c => {
                    if (!Ft[c.input]) return m('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(c.input, '"'));
                    const h = Mr(c.input),
                        w = Ft[c.input](h, c);
                    W(h), setTimeout(() => {
                        wt(w)
                    })
                },
                It = c => {
                    for (let h = 0; h < c.attributes.length; h++) {
                        const w = c.attributes[h].name;
                        ["type", "value", "style"].includes(w) || c.removeAttribute(w)
                    }
                },
                Xt = (c, h) => {
                    const w = yt(we(), c);
                    if (!!w) {
                        It(w);
                        for (const B in h) w.setAttribute(B, h[B])
                    }
                },
                Gn = c => {
                    const h = Mr(c.input);
                    typeof c.customClass == "object" && Je(h, c.customClass.input)
                },
                $n = (c, h) => {
                    (!c.placeholder || h.inputPlaceholder) && (c.placeholder = h.inputPlaceholder)
                },
                Hn = (c, h, w) => {
                    if (w.inputLabel) {
                        c.id = J.input;
                        const B = document.createElement("label"),
                            ge = J["input-label"];
                        B.setAttribute("for", c.id), B.className = ge, typeof w.customClass == "object" && Je(B, w.customClass.inputLabel), B.innerText = w.inputLabel, h.insertAdjacentElement("beforebegin", B)
                    }
                },
                Mr = c => q(we(), J[c] || J.input),
                Yt = (c, h) => {
                    ["string", "number"].includes(typeof h) ? c.value = "".concat(h) : ie(h) || d('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof h, '"'))
                },
                Ft = {};
            Ft.text = Ft.email = Ft.password = Ft.number = Ft.tel = Ft.url = (c, h) => (Yt(c, h.inputValue), Hn(c, c, h), $n(c, h), c.type = h.input, c), Ft.file = (c, h) => (Hn(c, c, h), $n(c, h), c), Ft.range = (c, h) => {
                const w = c.querySelector("input"),
                    B = c.querySelector("output");
                return Yt(w, h.inputValue), w.type = h.input, Yt(B, h.inputValue), Hn(w, c, h), c
            }, Ft.select = (c, h) => {
                if (c.textContent = "", h.inputPlaceholder) {
                    const w = document.createElement("option");
                    rt(w, h.inputPlaceholder), w.value = "", w.disabled = !0, w.selected = !0, c.appendChild(w)
                }
                return Hn(c, c, h), c
            }, Ft.radio = c => (c.textContent = "", c), Ft.checkbox = (c, h) => {
                const w = yt(we(), "checkbox");
                w.value = "1", w.id = J.checkbox, w.checked = Boolean(h.inputValue);
                const B = c.querySelector("span");
                return rt(B, h.inputPlaceholder), w
            }, Ft.textarea = (c, h) => {
                Yt(c, h.inputValue), $n(c, h), Hn(c, c, h);
                const w = B => parseInt(window.getComputedStyle(B).marginLeft) + parseInt(window.getComputedStyle(B).marginRight);
                return setTimeout(() => {
                    if ("MutationObserver" in window) {
                        const B = parseInt(window.getComputedStyle(we()).width),
                            ge = () => {
                                const Ue = c.offsetWidth + w(c);
                                Ue > B ? we().style.width = "".concat(Ue, "px") : we().style.width = null
                            };
                        new MutationObserver(ge).observe(c, {
                            attributes: !0,
                            attributeFilter: ["style"]
                        })
                    }
                }), c
            };
            const Yi = (c, h) => {
                    const w = Se();
                    ct(w, h, "htmlContainer"), h.html ? (xi(h.html, w), W(w, "block")) : h.text ? (w.textContent = h.text, W(w, "block")) : M(w), _e(c, h)
                },
                Ro = (c, h) => {
                    const w = k();
                    fe(w, h.footer), h.footer && xi(h.footer, w), ct(w, h, "footer")
                },
                Io = (c, h) => {
                    const w = L();
                    rt(w, h.closeButtonHtml), ct(w, h, "closeButton"), fe(w, h.showCloseButton), w.setAttribute("aria-label", h.closeButtonAriaLabel)
                },
                Lr = (c, h) => {
                    const w = O.innerParams.get(c),
                        B = ye();
                    if (w && h.icon === w.icon) {
                        Es(B, h), Pr(B, h);
                        return
                    }
                    if (!h.icon && !h.iconHtml) {
                        M(B);
                        return
                    }
                    if (h.icon && Object.keys(je).indexOf(h.icon) === -1) {
                        m('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(h.icon, '"')), M(B);
                        return
                    }
                    W(B), Es(B, h), Pr(B, h), Je(B, h.showClass.icon)
                },
                Pr = (c, h) => {
                    for (const w in je) h.icon !== w && Pt(c, je[w]);
                    Je(c, je[h.icon]), wn(c, h), Ki(), ct(c, h, "icon")
                },
                Ki = () => {
                    const c = we(),
                        h = window.getComputedStyle(c).getPropertyValue("background-color"),
                        w = c.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
                    for (let B = 0; B < w.length; B++) w[B].style.backgroundColor = h
                },
                xs = `
  <div class="swal2-success-circular-line-left"></div>
  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>
  <div class="swal2-success-circular-line-right"></div>
`,
                Do = `
  <span class="swal2-x-mark">
    <span class="swal2-x-mark-line-left"></span>
    <span class="swal2-x-mark-line-right"></span>
  </span>
`,
                Es = (c, h) => {
                    let w = c.innerHTML,
                        B;
                    h.iconHtml ? B = $r(h.iconHtml) : h.icon === "success" ? (B = xs, w = w.replace(/ style=".*?"/g, "")) : h.icon === "error" ? B = Do : B = $r({
                        question: "?",
                        warning: "!",
                        info: "i"
                    } [h.icon]), w.trim() !== B.trim() && rt(c, B)
                },
                wn = (c, h) => {
                    if (!!h.iconColor) {
                        c.style.color = h.iconColor, c.style.borderColor = h.iconColor;
                        for (const w of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) G(c, w, "backgroundColor", h.iconColor);
                        G(c, ".swal2-success-ring", "borderColor", h.iconColor)
                    }
                },
                $r = c => '<div class="'.concat(J["icon-content"], '">').concat(c, "</div>"),
                ki = (c, h) => {
                    const w = Te();
                    if (!h.imageUrl) return M(w);
                    W(w, ""), w.setAttribute("src", h.imageUrl), w.setAttribute("alt", h.imageAlt), $(w, "width", h.imageWidth), $(w, "height", h.imageHeight), w.className = J.image, ct(w, h, "image")
                },
                Mo = (c, h) => {
                    const w = Be();
                    if (!h.progressSteps || h.progressSteps.length === 0) return M(w);
                    W(w), w.textContent = "", h.currentProgressStep >= h.progressSteps.length && d("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), h.progressSteps.forEach((B, ge) => {
                        const Ue = Lo(B);
                        if (w.appendChild(Ue), ge === h.currentProgressStep && Je(Ue, J["active-progress-step"]), ge !== h.progressSteps.length - 1) {
                            const Gt = Wn(h);
                            w.appendChild(Gt)
                        }
                    })
                },
                Lo = c => {
                    const h = document.createElement("li");
                    return Je(h, J["progress-step"]), rt(h, c), h
                },
                Wn = c => {
                    const h = document.createElement("li");
                    return Je(h, J["progress-step-line"]), c.progressStepsDistance && $(h, "width", c.progressStepsDistance), h
                },
                Xn = (c, h) => {
                    const w = ue();
                    fe(w, h.title || h.titleText, "block"), h.title && xi(h.title, w), h.titleText && (w.innerText = h.titleText), ct(w, h, "title")
                },
                Nr = (c, h) => {
                    const w = z(),
                        B = we();
                    h.toast ? ($(w, "width", h.width), B.style.width = "100%", B.insertBefore(E(), ye())) : $(B, "width", h.width), $(B, "padding", h.padding), h.color && (B.style.color = h.color), h.background && (B.style.background = h.background), M(Ke()), Po(B, h)
                },
                Po = (c, h) => {
                    c.className = "".concat(J.popup, " ").concat(pe(c) ? h.showClass.popup : ""), h.toast ? (Je([document.documentElement, document.body], J["toast-shown"]), Je(c, J.toast)) : Je(c, J.modal), ct(c, h, "popup"), typeof h.customClass == "string" && Je(c, h.customClass), h.icon && Je(c, J["icon-".concat(h.icon)])
                },
                Vr = (c, h) => {
                    Nr(c, h), et(c, h), Mo(c, h), Lr(c, h), ki(c, h), Xn(c, h), Io(c, h), Yi(c, h), Ei(c, h), Ro(c, h), typeof h.didRender == "function" && h.didRender(we())
                },
                Yn = Object.freeze({
                    cancel: "cancel",
                    backdrop: "backdrop",
                    close: "close",
                    esc: "esc",
                    timer: "timer"
                }),
                Ti = () => {
                    Array.from(document.body.children).forEach(h => {
                        h === z() || h.contains(z()) || (h.hasAttribute("aria-hidden") && h.setAttribute("data-previous-aria-hidden", h.getAttribute("aria-hidden")), h.setAttribute("aria-hidden", "true"))
                    })
                },
                Br = () => {
                    Array.from(document.body.children).forEach(h => {
                        h.hasAttribute("data-previous-aria-hidden") ? (h.setAttribute("aria-hidden", h.getAttribute("data-previous-aria-hidden")), h.removeAttribute("data-previous-aria-hidden")) : h.removeAttribute("aria-hidden")
                    })
                },
                Ji = ["swal-title", "swal-html", "swal-footer"],
                $o = c => {
                    const h = typeof c.template == "string" ? document.querySelector(c.template) : c.template;
                    if (!h) return {};
                    const w = h.content;
                    return jo(w), Object.assign(Ss(w), No(w), Vo(w), qr(w), Bo(w), qo(w, Ji))
                },
                Ss = c => {
                    const h = {};
                    return Array.from(c.querySelectorAll("swal-param")).forEach(B => {
                        Kn(B, ["name", "value"]);
                        const ge = B.getAttribute("name"),
                            Ue = B.getAttribute("value");
                        typeof re[ge] == "boolean" && Ue === "false" && (h[ge] = !1), typeof re[ge] == "object" && (h[ge] = JSON.parse(Ue))
                    }), h
                },
                No = c => {
                    const h = {};
                    return Array.from(c.querySelectorAll("swal-button")).forEach(B => {
                        Kn(B, ["type", "color", "aria-label"]);
                        const ge = B.getAttribute("type");
                        h["".concat(ge, "ButtonText")] = B.innerHTML, h["show".concat(o(ge), "Button")] = !0, B.hasAttribute("color") && (h["".concat(ge, "ButtonColor")] = B.getAttribute("color")), B.hasAttribute("aria-label") && (h["".concat(ge, "ButtonAriaLabel")] = B.getAttribute("aria-label"))
                    }), h
                },
                Vo = c => {
                    const h = {},
                        w = c.querySelector("swal-image");
                    return w && (Kn(w, ["src", "width", "height", "alt"]), w.hasAttribute("src") && (h.imageUrl = w.getAttribute("src")), w.hasAttribute("width") && (h.imageWidth = w.getAttribute("width")), w.hasAttribute("height") && (h.imageHeight = w.getAttribute("height")), w.hasAttribute("alt") && (h.imageAlt = w.getAttribute("alt"))), h
                },
                qr = c => {
                    const h = {},
                        w = c.querySelector("swal-icon");
                    return w && (Kn(w, ["type", "color"]), w.hasAttribute("type") && (h.icon = w.getAttribute("type")), w.hasAttribute("color") && (h.iconColor = w.getAttribute("color")), h.iconHtml = w.innerHTML), h
                },
                Bo = c => {
                    const h = {},
                        w = c.querySelector("swal-input");
                    w && (Kn(w, ["type", "label", "placeholder", "value"]), h.input = w.getAttribute("type") || "text", w.hasAttribute("label") && (h.inputLabel = w.getAttribute("label")), w.hasAttribute("placeholder") && (h.inputPlaceholder = w.getAttribute("placeholder")), w.hasAttribute("value") && (h.inputValue = w.getAttribute("value")));
                    const B = Array.from(c.querySelectorAll("swal-input-option"));
                    return B.length && (h.inputOptions = {}, B.forEach(ge => {
                        Kn(ge, ["value"]);
                        const Ue = ge.getAttribute("value"),
                            Gt = ge.innerHTML;
                        h.inputOptions[Ue] = Gt
                    })), h
                },
                qo = (c, h) => {
                    const w = {};
                    for (const B in h) {
                        const ge = h[B],
                            Ue = c.querySelector(ge);
                        Ue && (Kn(Ue, []), w[ge.replace(/^swal-/, "")] = Ue.innerHTML.trim())
                    }
                    return w
                },
                jo = c => {
                    const h = Ji.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                    Array.from(c.children).forEach(w => {
                        const B = w.tagName.toLowerCase();
                        h.indexOf(B) === -1 && d("Unrecognized element <".concat(B, ">"))
                    })
                },
                Kn = (c, h) => {
                    Array.from(c.attributes).forEach(w => {
                        h.indexOf(w.name) === -1 && d(['Unrecognized attribute "'.concat(w.name, '" on <').concat(c.tagName.toLowerCase(), ">."), "".concat(h.length ? "Allowed attributes are: ".concat(h.join(", ")) : "To set the value, use HTML within the element.")])
                    })
                };
            var ks = {
                email: (c, h) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(c) ? Promise.resolve() : Promise.resolve(h || "Invalid email address"),
                url: (c, h) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(c) ? Promise.resolve() : Promise.resolve(h || "Invalid URL")
            };

            function Fo(c) {
                c.inputValidator || Object.keys(ks).forEach(h => {
                    c.input === h && (c.inputValidator = ks[h])
                })
            }

            function Uo(c) {
                (!c.target || typeof c.target == "string" && !document.querySelector(c.target) || typeof c.target != "string" && !c.target.appendChild) && (d('Target parameter is not valid, defaulting to "body"'), c.target = "body")
            }

            function Ts(c) {
                Fo(c), c.showLoaderOnConfirm && !c.preConfirm && d(`showLoaderOnConfirm is set to true, but preConfirm is not defined.
showLoaderOnConfirm should be used together with preConfirm, see usage example:
https://sweetalert2.github.io/#ajax-request`), Uo(c), typeof c.title == "string" && (c.title = c.title.split(`
`).join("<br />")), _i(c)
            }
            class jr {
                constructor(h, w) {
                    this.callback = h, this.remaining = w, this.running = !1, this.start()
                }
                start() {
                    return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining
                }
                stop() {
                    return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date().getTime() - this.started.getTime()), this.remaining
                }
                increase(h) {
                    const w = this.running;
                    return w && this.stop(), this.remaining += h, w && this.start(), this.remaining
                }
                getTimerLeft() {
                    return this.running && (this.stop(), this.start()), this.remaining
                }
                isRunning() {
                    return this.running
                }
            }
            const As = () => {
                    Me.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight && (Me.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(Me.previousBodyPadding + Wi(), "px"))
                },
                Fr = () => {
                    Me.previousBodyPadding !== null && (document.body.style.paddingRight = "".concat(Me.previousBodyPadding, "px"), Me.previousBodyPadding = null)
                },
                Os = () => {
                    if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !Ct(document.body, J.iosfix)) {
                        const h = document.body.scrollTop;
                        document.body.style.top = "".concat(h * -1, "px"), Je(document.body, J.iosfix), Ur(), Rs()
                    }
                },
                Rs = () => {
                    const c = navigator.userAgent,
                        h = !!c.match(/iPad/i) || !!c.match(/iPhone/i),
                        w = !!c.match(/WebKit/i);
                    h && w && !c.match(/CriOS/i) && we().scrollHeight > window.innerHeight - 44 && (z().style.paddingBottom = "".concat(44, "px"))
                },
                Ur = () => {
                    const c = z();
                    let h;
                    c.ontouchstart = w => {
                        h = zo(w)
                    }, c.ontouchmove = w => {
                        h && (w.preventDefault(), w.stopPropagation())
                    }
                },
                zo = c => {
                    const h = c.target,
                        w = z();
                    return Go(c) || Ho(c) ? !1 : h === w || !Ne(w) && h.tagName !== "INPUT" && h.tagName !== "TEXTAREA" && !(Ne(Se()) && Se().contains(h))
                },
                Go = c => c.touches && c.touches.length && c.touches[0].touchType === "stylus",
                Ho = c => c.touches && c.touches.length > 1,
                Ai = () => {
                    if (Ct(document.body, J.iosfix)) {
                        const c = parseInt(document.body.style.top, 10);
                        Pt(document.body, J.iosfix), document.body.style.top = "", document.body.scrollTop = c * -1
                    }
                },
                zr = 10,
                Gr = c => {
                    const h = z(),
                        w = we();
                    typeof c.willOpen == "function" && c.willOpen(w);
                    const ge = window.getComputedStyle(document.body).overflowY;
                    r(h, w, c), setTimeout(() => {
                        Wo(h, w)
                    }, zr), ke() && (Xo(h, c.scrollbarPadding, ge), Ti()), !he() && !st.previousActiveElement && (st.previousActiveElement = document.activeElement), typeof c.didOpen == "function" && setTimeout(() => c.didOpen(w)), Pt(h, J["no-transition"])
                },
                Is = c => {
                    const h = we();
                    if (c.target !== h) return;
                    const w = z();
                    h.removeEventListener(mn, Is), w.style.overflowY = "auto"
                },
                Wo = (c, h) => {
                    mn && pt(h) ? (c.style.overflowY = "hidden", h.addEventListener(mn, Is)) : c.style.overflowY = "auto"
                },
                Xo = (c, h, w) => {
                    Os(), h && w !== "hidden" && As(), setTimeout(() => {
                        c.scrollTop = 0
                    })
                },
                r = (c, h, w) => {
                    Je(c, w.showClass.backdrop), h.style.setProperty("opacity", "0", "important"), W(h, "grid"), setTimeout(() => {
                        Je(h, w.showClass.popup), h.style.removeProperty("opacity")
                    }, zr), Je([document.documentElement, document.body], J.shown), w.heightAuto && w.backdrop && !w.toast && Je([document.documentElement, document.body], J["height-auto"])
                },
                s = c => {
                    let h = we();
                    h || new Ot, h = we();
                    const w = E();
                    he() ? M(ye()) : u(h, c), W(w), h.setAttribute("data-loading", "true"), h.setAttribute("aria-busy", "true"), h.focus()
                },
                u = (c, h) => {
                    const w = g(),
                        B = E();
                    !h && pe(dt()) && (h = dt()), W(w), h && (M(h), B.setAttribute("data-button-to-replace", h.className)), B.parentNode.insertBefore(B, h), Je([c, w], J.loading)
                },
                p = (c, h) => {
                    h.input === "select" || h.input === "radio" ? U(c, h) : ["text", "email", "number", "tel", "textarea"].includes(h.input) && (V(h.inputValue) || ie(h.inputValue)) && (s(dt()), Z(c, h))
                },
                b = (c, h) => {
                    const w = c.getInput();
                    if (!w) return null;
                    switch (h.input) {
                        case "checkbox":
                            return x(w);
                        case "radio":
                            return A(w);
                        case "file":
                            return F(w);
                        default:
                            return h.inputAutoTrim ? w.value.trim() : w.value
                    }
                },
                x = c => c.checked ? 1 : 0,
                A = c => c.checked ? c.value : null,
                F = c => c.files.length ? c.getAttribute("multiple") !== null ? c.files : c.files[0] : null,
                U = (c, h) => {
                    const w = we(),
                        B = ge => le[h.input](w, Ce(ge), h);
                    V(h.inputOptions) || ie(h.inputOptions) ? (s(dt()), Y(h.inputOptions).then(ge => {
                        c.hideLoading(), B(ge)
                    })) : typeof h.inputOptions == "object" ? B(h.inputOptions) : m("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof h.inputOptions))
                },
                Z = (c, h) => {
                    const w = c.getInput();
                    M(w), Y(h.inputValue).then(B => {
                        w.value = h.input === "number" ? parseFloat(B) || 0 : "".concat(B), W(w), w.focus(), c.hideLoading()
                    }).catch(B => {
                        m("Error in inputValue promise: ".concat(B)), w.value = "", W(w), w.focus(), c.hideLoading()
                    })
                },
                le = {
                    select: (c, h, w) => {
                        const B = q(c, J.select),
                            ge = (Ue, Gt, Nn) => {
                                const pn = document.createElement("option");
                                pn.value = Nn, rt(pn, Gt), pn.selected = ne(Nn, w.inputValue), Ue.appendChild(pn)
                            };
                        h.forEach(Ue => {
                            const Gt = Ue[0],
                                Nn = Ue[1];
                            if (Array.isArray(Nn)) {
                                const pn = document.createElement("optgroup");
                                pn.label = Gt, pn.disabled = !1, B.appendChild(pn), Nn.forEach(ar => ge(pn, ar[1], ar[0]))
                            } else ge(B, Nn, Gt)
                        }), B.focus()
                    },
                    radio: (c, h, w) => {
                        const B = q(c, J.radio);
                        h.forEach(Ue => {
                            const Gt = Ue[0],
                                Nn = Ue[1],
                                pn = document.createElement("input"),
                                ar = document.createElement("label");
                            pn.type = "radio", pn.name = J.radio, pn.value = Gt, ne(Gt, w.inputValue) && (pn.checked = !0);
                            const oa = document.createElement("span");
                            rt(oa, Nn), oa.className = J.label, ar.appendChild(pn), ar.appendChild(oa), B.appendChild(ar)
                        });
                        const ge = B.querySelectorAll("input");
                        ge.length && ge[0].focus()
                    }
                },
                Ce = c => {
                    const h = [];
                    return typeof Map < "u" && c instanceof Map ? c.forEach((w, B) => {
                        let ge = w;
                        typeof ge == "object" && (ge = Ce(ge)), h.push([B, ge])
                    }) : Object.keys(c).forEach(w => {
                        let B = c[w];
                        typeof B == "object" && (B = Ce(B)), h.push([w, B])
                    }), h
                },
                ne = (c, h) => h && h.toString() === c.toString();

            function ce() {
                const c = O.innerParams.get(this);
                if (!c) return;
                const h = O.domCache.get(this);
                M(h.loader), he() ? c.icon && W(ye()) : Ge(h), Pt([h.popup, h.actions], J.loading), h.popup.removeAttribute("aria-busy"), h.popup.removeAttribute("data-loading"), h.confirmButton.disabled = !1, h.denyButton.disabled = !1, h.cancelButton.disabled = !1
            }
            const Ge = c => {
                const h = c.popup.getElementsByClassName(c.loader.getAttribute("data-button-to-replace"));
                h.length ? W(h[0], "inline-block") : $e() && M(c.actions)
            };

            function ot(c) {
                const h = O.innerParams.get(c || this),
                    w = O.domCache.get(c || this);
                return w ? yt(w.popup, h.input) : null
            }
            var qe = {
                swalPromiseResolve: new WeakMap,
                swalPromiseReject: new WeakMap
            };
            const Ut = () => pe(we()),
                Nt = () => dt() && dt().click(),
                un = () => Bt() && Bt().click(),
                Et = () => l() && l().click(),
                tt = c => {
                    c.keydownTarget && c.keydownHandlerAdded && (c.keydownTarget.removeEventListener("keydown", c.keydownHandler, {
                        capture: c.keydownListenerCapture
                    }), c.keydownHandlerAdded = !1)
                },
                on = (c, h, w, B) => {
                    tt(h), w.toast || (h.keydownHandler = ge => Qi(c, ge, B), h.keydownTarget = w.keydownListenerCapture ? window : we(), h.keydownListenerCapture = w.keydownListenerCapture, h.keydownTarget.addEventListener("keydown", h.keydownHandler, {
                        capture: h.keydownListenerCapture
                    }), h.keydownHandlerAdded = !0)
                },
                ft = (c, h, w) => {
                    const B = te();
                    if (B.length) return h = h + w, h === B.length ? h = 0 : h === -1 && (h = B.length - 1), B[h].focus();
                    we().focus()
                },
                Dt = ["ArrowRight", "ArrowDown"],
                Oi = ["ArrowLeft", "ArrowUp"],
                Qi = (c, h, w) => {
                    const B = O.innerParams.get(c);
                    !B || h.isComposing || h.keyCode === 229 || (B.stopKeydownPropagation && h.stopPropagation(), h.key === "Enter" ? hn(c, h, B) : h.key === "Tab" ? Jn(h, B) : [...Dt, ...Oi].includes(h.key) ? Qn(h.key) : h.key === "Escape" && an(h, B, w))
                },
                hn = (c, h, w) => {
                    if (!!D(w.allowEnterKey) && h.target && c.getInput() && h.target instanceof HTMLElement && h.target.outerHTML === c.getInput().outerHTML) {
                        if (["textarea", "file"].includes(w.input)) return;
                        Nt(), h.preventDefault()
                    }
                },
                Jn = (c, h) => {
                    const w = c.target,
                        B = te();
                    let ge = -1;
                    for (let Ue = 0; Ue < B.length; Ue++)
                        if (w === B[Ue]) {
                            ge = Ue;
                            break
                        } c.shiftKey ? ft(h, ge, -1) : ft(h, ge, 1), c.stopPropagation(), c.preventDefault()
                },
                Qn = c => {
                    const h = dt(),
                        w = Bt(),
                        B = l();
                    if (document.activeElement instanceof HTMLElement && ![h, w, B].includes(document.activeElement)) return;
                    const ge = Dt.includes(c) ? "nextElementSibling" : "previousElementSibling";
                    let Ue = document.activeElement;
                    for (let Gt = 0; Gt < g().children.length; Gt++) {
                        if (Ue = Ue[ge], !Ue) return;
                        if (Ue instanceof HTMLButtonElement && pe(Ue)) break
                    }
                    Ue instanceof HTMLButtonElement && Ue.focus()
                },
                an = (c, h, w) => {
                    D(h.allowEscapeKey) && (c.preventDefault(), w(Yn.esc))
                };

            function Mn(c, h, w, B) {
                he() ? Ls(c, B) : (wi(w).then(() => Ls(c, B)), tt(st)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (h.setAttribute("style", "display:none !important"), h.removeAttribute("class"), h.innerHTML = "") : h.remove(), ke() && (Fr(), Ai(), Br()), vn()
            }

            function vn() {
                Pt([document.documentElement, document.body], [J.shown, J["height-auto"], J["no-backdrop"], J["toast-shown"]])
            }

            function Cn(c) {
                c = ei(c);
                const h = qe.swalPromiseResolve.get(this),
                    w = Zn(this);
                this.isAwaitingPromise() ? c.isDismissed || (gt(this), h(c)) : w && h(c)
            }

            function Ds() {
                return !!O.awaitingPromise.get(this)
            }
            const Zn = c => {
                const h = we();
                if (!h) return !1;
                const w = O.innerParams.get(c);
                if (!w || Ct(h, w.hideClass.popup)) return !1;
                Pt(h, w.showClass.popup), Je(h, w.hideClass.popup);
                const B = z();
                return Pt(B, w.showClass.backdrop), Je(B, w.hideClass.backdrop), Ms(c, h, w), !0
            };

            function Hr(c) {
                const h = qe.swalPromiseReject.get(this);
                gt(this), h && h(c)
            }
            const gt = c => {
                    c.isAwaitingPromise() && (O.awaitingPromise.delete(c), O.innerParams.get(c) || c._destroy())
                },
                ei = c => typeof c > "u" ? {
                    isConfirmed: !1,
                    isDenied: !1,
                    isDismissed: !0
                } : Object.assign({
                    isConfirmed: !1,
                    isDenied: !1,
                    isDismissed: !1
                }, c),
                Ms = (c, h, w) => {
                    const B = z(),
                        ge = mn && pt(h);
                    typeof w.willClose == "function" && w.willClose(h), ge ? Wr(c, h, B, w.returnFocus, w.didClose) : Mn(c, B, w.returnFocus, w.didClose)
                },
                Wr = (c, h, w, B, ge) => {
                    st.swalCloseEventFinishedCallback = Mn.bind(null, c, w, B, ge), h.addEventListener(mn, function(Ue) {
                        Ue.target === h && (st.swalCloseEventFinishedCallback(), delete st.swalCloseEventFinishedCallback)
                    })
                },
                Ls = (c, h) => {
                    setTimeout(() => {
                        typeof h == "function" && h.bind(c.params)(), c._destroy()
                    })
                };

            function Ri(c, h, w) {
                const B = O.domCache.get(c);
                h.forEach(ge => {
                    B[ge].disabled = w
                })
            }

            function Ps(c, h) {
                if (!c) return !1;
                if (c.type === "radio") {
                    const B = c.parentNode.parentNode.querySelectorAll("input");
                    for (let ge = 0; ge < B.length; ge++) B[ge].disabled = h
                } else c.disabled = h
            }

            function $s() {
                Ri(this, ["confirmButton", "denyButton", "cancelButton"], !1)
            }

            function Yo() {
                Ri(this, ["confirmButton", "denyButton", "cancelButton"], !0)
            }

            function Ko() {
                return Ps(this.getInput(), !1)
            }

            function Jo() {
                return Ps(this.getInput(), !0)
            }

            function Zi(c) {
                const h = O.domCache.get(this),
                    w = O.innerParams.get(this);
                rt(h.validationMessage, c), h.validationMessage.className = J["validation-message"], w.customClass && w.customClass.validationMessage && Je(h.validationMessage, w.customClass.validationMessage), W(h.validationMessage);
                const B = this.getInput();
                B && (B.setAttribute("aria-invalid", !0), B.setAttribute("aria-describedby", J["validation-message"]), wt(B), Je(B, J.inputerror))
            }

            function Qo() {
                const c = O.domCache.get(this);
                c.validationMessage && M(c.validationMessage);
                const h = this.getInput();
                h && (h.removeAttribute("aria-invalid"), h.removeAttribute("aria-describedby"), Pt(h, J.inputerror))
            }

            function Zo() {
                return O.domCache.get(this).progressSteps
            }

            function ea(c) {
                const h = we(),
                    w = O.innerParams.get(this);
                if (!h || Ct(h, w.hideClass.popup)) return d("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
                const B = Ii(c),
                    ge = Object.assign({}, w, B);
                Vr(this, ge), O.innerParams.set(this, ge), Object.defineProperties(this, {
                    params: {
                        value: Object.assign({}, this.params, c),
                        writable: !1,
                        enumerable: !0
                    }
                })
            }
            const Ii = c => {
                const h = {};
                return Object.keys(c).forEach(w => {
                    se(w) ? h[w] = c[w] : d("Invalid parameter to update: ".concat(w))
                }), h
            };

            function ta() {
                const c = O.domCache.get(this),
                    h = O.innerParams.get(this);
                if (!h) {
                    Tn(this);
                    return
                }
                c.popup && st.swalCloseEventFinishedCallback && (st.swalCloseEventFinishedCallback(), delete st.swalCloseEventFinishedCallback), typeof h.didDestroy == "function" && h.didDestroy(), Xr(this)
            }
            const Xr = c => {
                    Tn(c), delete c.params, delete st.keydownHandler, delete st.keydownTarget, delete st.currentInstance
                },
                Tn = c => {
                    c.isAwaitingPromise() ? (_n(O, c), O.awaitingPromise.set(c, !0)) : (_n(qe, c), _n(O, c))
                },
                _n = (c, h) => {
                    for (const w in c) c[w].delete(h)
                };
            var Yr = Object.freeze({
                hideLoading: ce,
                disableLoading: ce,
                getInput: ot,
                close: Cn,
                isAwaitingPromise: Ds,
                rejectPromise: Hr,
                handleAwaitingPromise: gt,
                closePopup: Cn,
                closeModal: Cn,
                closeToast: Cn,
                enableButtons: $s,
                disableButtons: Yo,
                enableInput: Ko,
                disableInput: Jo,
                showValidationMessage: Zi,
                resetValidationMessage: Qo,
                getProgressSteps: Zo,
                update: ea,
                _destroy: ta
            });
            const Ns = c => {
                    const h = O.innerParams.get(c);
                    c.disableButtons(), h.input ? St(c, "confirm") : nr(c, !0)
                },
                Vs = c => {
                    const h = O.innerParams.get(c);
                    c.disableButtons(), h.returnInputValueOnDeny ? St(c, "deny") : dn(c, !1)
                },
                na = (c, h) => {
                    c.disableButtons(), h(Yn.cancel)
                },
                St = (c, h) => {
                    const w = O.innerParams.get(c);
                    if (!w.input) {
                        m('The "input" parameter is needed to be set when using returnInputValueOn'.concat(o(h)));
                        return
                    }
                    const B = b(c, w);
                    w.inputValidator ? er(c, B, h) : c.getInput().checkValidity() ? h === "deny" ? dn(c, B) : nr(c, B) : (c.enableButtons(), c.showValidationMessage(w.validationMessage))
                },
                er = (c, h, w) => {
                    const B = O.innerParams.get(c);
                    c.disableInput(), Promise.resolve().then(() => Y(B.inputValidator(h, B.validationMessage))).then(Ue => {
                        c.enableButtons(), c.enableInput(), Ue ? c.showValidationMessage(Ue) : w === "deny" ? dn(c, h) : nr(c, h)
                    })
                },
                dn = (c, h) => {
                    const w = O.innerParams.get(c || void 0);
                    w.showLoaderOnDeny && s(Bt()), w.preDeny ? (O.awaitingPromise.set(c || void 0, !0), Promise.resolve().then(() => Y(w.preDeny(h, w.validationMessage))).then(ge => {
                        ge === !1 ? (c.hideLoading(), gt(c)) : c.close({
                            isDenied: !0,
                            value: typeof ge > "u" ? h : ge
                        })
                    }).catch(ge => tr(c || void 0, ge))) : c.close({
                        isDenied: !0,
                        value: h
                    })
                },
                yn = (c, h) => {
                    c.close({
                        isConfirmed: !0,
                        value: h
                    })
                },
                tr = (c, h) => {
                    c.rejectPromise(h)
                },
                nr = (c, h) => {
                    const w = O.innerParams.get(c || void 0);
                    w.showLoaderOnConfirm && s(), w.preConfirm ? (c.resetValidationMessage(), O.awaitingPromise.set(c || void 0, !0), Promise.resolve().then(() => Y(w.preConfirm(h, w.validationMessage))).then(ge => {
                        pe(Ke()) || ge === !1 ? (c.hideLoading(), gt(c)) : yn(c, typeof ge > "u" ? h : ge)
                    }).catch(ge => tr(c || void 0, ge))) : yn(c, h)
                },
                ia = (c, h, w) => {
                    O.innerParams.get(c).toast ? ra(c, h, w) : (Kr(h), qs(h), ir(c, h, w))
                },
                ra = (c, h, w) => {
                    h.popup.onclick = () => {
                        const B = O.innerParams.get(c);
                        B && (Bs(B) || B.timer || B.input) || w(Yn.close)
                    }
                },
                Bs = c => c.showConfirmButton || c.showDenyButton || c.showCancelButton || c.showCloseButton;
            let An = !1;
            const Kr = c => {
                    c.popup.onmousedown = () => {
                        c.container.onmouseup = function(h) {
                            c.container.onmouseup = void 0, h.target === c.container && (An = !0)
                        }
                    }
                },
                qs = c => {
                    c.container.onmousedown = () => {
                        c.popup.onmouseup = function(h) {
                            c.popup.onmouseup = void 0, (h.target === c.popup || c.popup.contains(h.target)) && (An = !0)
                        }
                    }
                },
                ir = (c, h, w) => {
                    h.container.onclick = B => {
                        const ge = O.innerParams.get(c);
                        if (An) {
                            An = !1;
                            return
                        }
                        B.target === h.container && D(ge.allowOutsideClick) && w(Yn.backdrop)
                    }
                },
                rr = c => typeof c == "object" && c.jquery,
                sr = c => c instanceof Element || rr(c),
                sa = c => {
                    const h = {};
                    return typeof c[0] == "object" && !sr(c[0]) ? Object.assign(h, c[0]) : ["title", "html", "icon"].forEach((w, B) => {
                        const ge = c[B];
                        typeof ge == "string" || sr(ge) ? h[w] = ge : ge !== void 0 && m("Unexpected type of ".concat(w, '! Expected "string" or "Element", got ').concat(typeof ge))
                    }), h
                };

            function or() {
                const c = this;
                for (var h = arguments.length, w = new Array(h), B = 0; B < h; B++) w[B] = arguments[B];
                return new c(...w)
            }

            function Jr(c) {
                class h extends this {
                    _main(B, ge) {
                        return super._main(B, Object.assign({}, c, ge))
                    }
                }
                return h
            }
            const Qr = () => st.timeout && st.timeout.getTimerLeft(),
                js = () => {
                    if (st.timeout) return Ye(), st.timeout.stop()
                },
                I = () => {
                    if (st.timeout) {
                        const c = st.timeout.start();
                        return jt(c), c
                    }
                },
                j = () => {
                    const c = st.timeout;
                    return c && (c.running ? js() : I())
                },
                X = c => {
                    if (st.timeout) {
                        const h = st.timeout.increase(c);
                        return jt(h, !0), h
                    }
                },
                de = () => st.timeout && st.timeout.isRunning();
            let ee = !1;
            const me = {};

            function xe() {
                let c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "data-swal-template";
                me[c] = this, ee || (document.body.addEventListener("click", Re), ee = !0)
            }
            const Re = c => {
                for (let h = c.target; h && h !== document; h = h.parentNode)
                    for (const w in me) {
                        const B = h.getAttribute(w);
                        if (B) {
                            me[w].fire({
                                template: B
                            });
                            return
                        }
                    }
            };
            var Le = Object.freeze({
                isValidParameter: ae,
                isUpdatableParameter: se,
                isDeprecatedParameter: ve,
                argsToParams: sa,
                isVisible: Ut,
                clickConfirm: Nt,
                clickDeny: un,
                clickCancel: Et,
                getContainer: z,
                getPopup: we,
                getTitle: ue,
                getHtmlContainer: Se,
                getImage: Te,
                getIcon: ye,
                getInputLabel: Ht,
                getCloseButton: L,
                getActions: g,
                getConfirmButton: dt,
                getDenyButton: Bt,
                getCancelButton: l,
                getLoader: E,
                getFooter: k,
                getTimerProgressBar: R,
                getFocusableElements: te,
                getValidationMessage: Ke,
                isLoading: De,
                fire: or,
                mixin: Jr,
                showLoading: s,
                enableLoading: s,
                getTimerLeft: Qr,
                stopTimer: js,
                resumeTimer: I,
                toggleTimer: j,
                increaseTimer: X,
                isTimerRunning: de,
                bindClickHandler: xe
            });
            let Fe;
            class ze {
                constructor() {
                    if (typeof window > "u") return;
                    Fe = this;
                    for (var h = arguments.length, w = new Array(h), B = 0; B < h; B++) w[B] = arguments[B];
                    const ge = Object.freeze(this.constructor.argsToParams(w));
                    Object.defineProperties(this, {
                        params: {
                            value: ge,
                            writable: !1,
                            enumerable: !0,
                            configurable: !0
                        }
                    });
                    const Ue = Fe._main(Fe.params);
                    O.promise.set(this, Ue)
                }
                _main(h) {
                    let w = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    Pe(Object.assign({}, w, h)), st.currentInstance && (st.currentInstance._destroy(), ke() && Br()), st.currentInstance = Fe;
                    const B = ht(h, w);
                    Ts(B), Object.freeze(B), st.timeout && (st.timeout.stop(), delete st.timeout), clearTimeout(st.restoreFocusTimeout);
                    const ge = At(Fe);
                    return Vr(Fe, B), O.innerParams.set(Fe, B), Xe(Fe, ge, B)
                }
                then(h) {
                    return O.promise.get(this).then(h)
                } finally(h) {
                    return O.promise.get(this).finally(h)
                }
            }
            const Xe = (c, h, w) => new Promise((B, ge) => {
                    const Ue = Gt => {
                        c.closePopup({
                            isDismissed: !0,
                            dismiss: Gt
                        })
                    };
                    qe.swalPromiseResolve.set(c, B), qe.swalPromiseReject.set(c, ge), h.confirmButton.onclick = () => Ns(c), h.denyButton.onclick = () => Vs(c), h.cancelButton.onclick = () => na(c, Ue), h.closeButton.onclick = () => Ue(Yn.close), ia(c, h, Ue), on(c, st, w, Ue), p(c, w), Gr(w), We(st, w, Ue), zt(h, w), setTimeout(() => {
                        h.container.scrollTop = 0
                    })
                }),
                ht = (c, h) => {
                    const w = $o(c),
                        B = Object.assign({}, re, h, w, c);
                    return B.showClass = Object.assign({}, re.showClass, B.showClass), B.hideClass = Object.assign({}, re.hideClass, B.hideClass), B
                },
                At = c => {
                    const h = {
                        popup: we(),
                        container: z(),
                        actions: g(),
                        confirmButton: dt(),
                        denyButton: Bt(),
                        cancelButton: l(),
                        loader: E(),
                        closeButton: L(),
                        validationMessage: Ke(),
                        progressSteps: Be()
                    };
                    return O.domCache.set(c, h), h
                },
                We = (c, h, w) => {
                    const B = R();
                    M(B), h.timer && (c.timeout = new jr(() => {
                        w("timer"), delete c.timeout
                    }, h.timer), h.timerProgressBar && (W(B), ct(B, h, "timerProgressBar"), setTimeout(() => {
                        c.timeout && c.timeout.running && jt(h.timer)
                    })))
                },
                zt = (c, h) => {
                    if (!h.toast) {
                        if (!D(h.allowEnterKey)) return fn();
                        Qt(c, h) || ft(h, -1, 1)
                    }
                },
                Qt = (c, h) => h.focusDeny && pe(c.denyButton) ? (c.denyButton.focus(), !0) : h.focusCancel && pe(c.cancelButton) ? (c.cancelButton.focus(), !0) : h.focusConfirm && pe(c.confirmButton) ? (c.confirmButton.focus(), !0) : !1,
                fn = () => {
                    document.activeElement instanceof HTMLElement && typeof document.activeElement.blur == "function" && document.activeElement.blur()
                };
            if (typeof window < "u" && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|xn--p1ai)$/) && Math.random() < .1) {
                const c = document.createElement("div");
                c.className = "leave-russia-now-and-apply-your-skills-to-the-world";
                const h = K([{
                    text: `\u0412 \u043D\u0438\u0436\u0435\u043F\u0440\u0438\u0432\u0435\u0434\u0451\u043D\u043D\u043E\u043C \u0432\u0438\u0434\u0435\u043E \u043E\u0431\u044A\u044F\u0441\u043D\u044F\u0435\u0442\u0441\u044F \u043A\u0430\u043A \u043A\u0430\u0436\u0434\u044B\u0439 \u0438\u0437 \u043D\u0430\u0441 \u043C\u043E\u0436\u0435\u0442 \u043F\u043E\u043C\u043E\u0447\u044C \u0432 \u0442\u043E\u043C,
        <strong>\u0447\u0442\u043E\u0431\u044B \u044D\u0442\u0430 \u0431\u0435\u0441\u0441\u043C\u044B\u0441\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0431\u0435\u0441\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u043D\u0430\u044F \u0432\u043E\u0439\u043D\u0430 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430\u0441\u044C</strong>:`,
                    id: "4CfDhaRkw7I"
                }, {
                    text: "\u042D\u043C\u043F\u0430\u0442\u0438\u044F - \u0433\u043B\u0430\u0432\u043D\u043E\u0435 <strong>\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u0435\u0441\u043A\u043E\u0435</strong> \u0447\u0443\u0432\u0441\u0442\u0432\u043E. \u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u0441\u043E\u043F\u0435\u0440\u0435\u0436\u0438\u0432\u0430\u0442\u044C. <strong>\u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0441\u0435\u0431\u044F \u043D\u0430 \u043C\u0435\u0441\u0442\u043E \u0434\u0440\u0443\u0433\u043E\u0433\u043E.</strong>",
                    id: "s-GLAIY4DXA"
                }]);
                rt(c, `
      <div>
        \u0415\u0441\u043B\u0438 \u043C\u044B \u043D\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043C \u0432\u043E\u0439\u043D\u0443, \u043E\u043D\u0430 \u043F\u0440\u0438\u0434\u0435\u0442 \u0432 \u0434\u043E\u043C <strong>\u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0438\u0437 \u043D\u0430\u0441</strong> \u0438 \u0435\u0451 \u043F\u043E\u0441\u043B\u0435\u0434\u0441\u0442\u0432\u0438\u044F \u0431\u0443\u0434\u0443\u0442 <strong>\u0443\u0436\u0430\u0441\u0430\u044E\u0449\u0438\u043C\u0438</strong>.
      </div>
      <div>
        \u041F\u0443\u0442\u0438\u043D\u0441\u043A\u0438\u0439 \u0440\u0435\u0436\u0438\u043C \u0437\u0430 20 \u0441 \u043B\u0438\u0448\u043D\u0438\u043C \u043B\u0435\u0442 \u0441\u0432\u043E\u0435\u0433\u043E \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043E\u0432\u0430\u043D\u0438\u044F \u0432\u0434\u043E\u043B\u0431\u0438\u043B \u043D\u0430\u043C, \u0447\u0442\u043E \u043C\u044B \u0431\u0435\u0441\u0441\u0438\u043B\u044C\u043D\u044B \u0438 \u043E\u0434\u0438\u043D \u0447\u0435\u043B\u043E\u0432\u0435\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u043D\u0438\u0447\u0435\u0433\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C. <strong>\u042D\u0442\u043E \u043D\u0435 \u0442\u0430\u043A!</strong>
      </div>
      <div>
        `.concat(h.text, `
      </div>
      <iframe width="560" height="315" src="https://www.youtube.com/embed/`).concat(h.id, `" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
      <div>
        \u041D\u0435\u0442 \u0432\u043E\u0439\u043D\u0435!
      </div>
      `));
                const w = document.createElement("button");
                w.innerHTML = "&times;", w.onclick = () => c.remove(), c.appendChild(w), window.addEventListener("load", () => {
                    setTimeout(() => {
                        document.body.appendChild(c)
                    }, 1e3)
                })
            }
            Object.assign(ze.prototype, Yr), Object.assign(ze, Le), Object.keys(Yr).forEach(c => {
                ze[c] = function() {
                    if (Fe) return Fe[c](...arguments)
                }
            }), ze.DismissReason = Yn, ze.version = "11.4.26";
            const Ot = ze;
            return Ot.default = Ot, Ot
        }), typeof vt < "u" && vt.Sweetalert2 && (vt.swal = vt.sweetAlert = vt.Swal = vt.SweetAlert = vt.Sweetalert2), typeof document < "u" && function(n, i) {
            var o = n.createElement("style");
            if (n.getElementsByTagName("head")[0].appendChild(o), o.styleSheet) o.styleSheet.disabled || (o.styleSheet.cssText = i);
            else try {
                o.innerHTML = i
            } catch {
                o.innerText = i
            }
        }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.leave-russia-now-and-apply-your-skills-to-the-world{display:flex;position:fixed;z-index:1939;top:0;right:0;bottom:0;left:0;flex-direction:column;align-items:center;justify-content:center;padding:25px 0 20px;background:#20232a;color:#fff;text-align:center}.leave-russia-now-and-apply-your-skills-to-the-world div{max-width:560px;margin:10px;line-height:146%}.leave-russia-now-and-apply-your-skills-to-the-world iframe{max-width:100%;max-height:55.5555555556vmin;margin:16px auto}.leave-russia-now-and-apply-your-skills-to-the-world strong{border-bottom:2px dashed #fff}.leave-russia-now-and-apply-your-skills-to-the-world button{display:flex;position:fixed;z-index:1940;top:0;right:0;align-items:center;justify-content:center;width:48px;height:48px;margin-right:10px;margin-bottom:-10px;border:none;background:0 0;color:#aaa;font-size:48px;font-weight:700;cursor:pointer}.leave-russia-now-and-apply-your-skills-to-the-world button:hover{color:#fff}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}')
    })(bh);
    const Rn = bh.exports;
    class kt {
        static get DismissReason() {
            return Rn.DismissReason
        }
        static show(e, n = {}) {
            switch (Rn.isVisible() && Rn.close(), e instanceof Error && (n.text = e.message, e = "error"), e) {
                case "alert":
                    return this.showAlert(n);
                case "custom":
                    return this.showCustom(n);
                case "error":
                    return this.showError(n);
                case "toast":
                    return this.showToast(n);
                default:
                    console.warn("Unknown alert type", e)
            }
            return !1
        }
        static close() {
            Rn.close()
        }
        static vibrate(e = [100, 100]) {
            !window.navigator || !window.navigator.vibrate || window.navigator.vibrate(e)
        }
        static async showAlert(e) {
            const n = e.customClass || {};
            return e.customClass = {
                ...n,
                popup: "jbgModal"
            }, e.titleText = e.titleText || "Error", Rn.fire(e)
        }
        static async showError(e) {
            const n = new URL("main/pp3/quiplash2/assets/8cdd50e7.png", self.location).href,
                i = e.customClass || {};
            return e.customClass = {
                ...i,
                popup: "jbgModal"
            }, e.titleText = e.titleText || "Error", n && (e.imageUrl = n), Rn.fire(e)
        }
        static async showCustom(e) {
            return Rn.fire(e)
        }
        static async showToast(e) {
            return e.toast = !0, e.showConfirmButton = !1, e.timer = e.timer || 2500, e.position = e.position || "bottom", Rn.fire(e)
        }
    }
    const KC = `<div class="canvasContainer">\r
    <video id="cameraVideo" class="cameraVideo" autoplay playsinline crossorigin="anonymous" class=""></video>\r
    <canvas id='cameraCanvas' class="cameraCanvas resizableCanvas" width="300px" height="408px" class=""></canvas>\r
    <img id="cameraImage" crossorigin="anonymous" class="cameraImage visuallyhidden" />\r
</div>\r
<div class="cameraControls">\r
    <button id="exitButton" class="button exitButton"></button>\r
    <div class="buttons pre">\r
        <button id="switchButton" class="button switchButton"></button>\r
        <button id="snapshotButton" class="button snapshotButton"></button>\r
    </div>\r
    <div class="buttons post">\r
        <button id="cancelButton" class="button cancelButton"></button>\r
        <button id="confirmButton" class="button confirmButton"></button>\r
    </div>\r
</div>\r
<div style="display:none;">\r
    <img id="Mask" src='../../general/images/oval.png' />\r
</div>`,
        JC = {
            type: "camera",
            width: 300,
            height: 408,
            offsetX: 0,
            offsetY: 0,
            transmitting: !1,
            previewImage: null,
            mirror: !0,
            mask: !0,
            update(t) {
                if (this.video || (this.video = document.getElementById("cameraVideo")), this.image || (this.image = document.getElementById("Mask")), !this.video || !this.image) return;
                const e = this.video.videoWidth,
                    n = this.video.videoHeight,
                    i = Vi().width,
                    o = Vi().height,
                    d = Math.max(i / e, o / n);
                this.width = i, this.height = o, this.finalWidth = e * d, this.finalHeight = n * d, this.offsetX = .5 * (i - this.finalWidth), this.offsetY = .5 * (o - this.finalHeight), this.dy = this.transmitting ? Math.min(-100, this.dy) : 0, this.ddy = this.transmitting ? -1200 : 0, this.transmitting || (this.y = 0), this.advance(t)
            },
            render() {
                if (console.log("render"), !this.video) return;
                const t = So();
                t.save(), t.translate(this.x, this.y), this.preview ? t.drawImage(this.preview, 0, 0) : this.mirror ? (t.scale(-1, 1), t.drawImage(this.video, this.offsetX - Vi().width, this.offsetY, this.finalWidth, this.finalHeight)) : t.drawImage(this.video, this.offsetX, this.offsetY, this.finalWidth, this.finalHeight), t.restore(), !this.preview && this.mask && this.image && (t.scale(1, 1), t.drawImage(this.image, this.x, this.y, Vi().width, Vi().height))
            }
        },
        QC = xt.View.extend({
            template: Ze.template(KC),
            className: "CameraUser",
            model: new at.Model({
                image: null,
                width: 300,
                height: 408,
                transmitting: !1,
                access: !1,
                showSwitchButton: !1
            }),
            sprites: [],
            bindings: {
                ".pre": {
                    classes: {
                        visible: {
                            observe: "image",
                            onGet(t) {
                                return !t
                            }
                        }
                    }
                },
                ".post": {
                    classes: {
                        visible: {
                            observe: "image",
                            onGet(t) {
                                return t
                            }
                        }
                    }
                }
            },
            events: {
                "click #switchButton": "switchClicked",
                "click #snapshotButton": "snapshotClicked",
                "click #confirmButton": "confirmClicked",
                "click #cancelButton": "cancelClicked",
                "click #exitButton": "exitClicked"
            },
            initialize() {
                this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), this.update()
            },
            update() {
                !this.cameraSprite || (this.model.get("image") ? (this.previewImage = this.previewImage || new Image, this.previewImage.onload = () => {
                    this.cameraSprite.preview = this.previewImage
                }, this.previewImage.src = this.model.get("image")) : this.cameraSprite.preview = null, this.cameraSprite.transmitting = this.model.get("transmitting"), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), this.$("#cameraCanvas").width(`${this.model.get("width")}px`), this.$("#cameraCanvas").height(`${this.model.get("height")}px`), this.onResize())
            },
            onRender() {
                this.stickit()
            },
            onAttach() {
                const t = this;
                UC("cameraCanvas"), t.sprites = [], t.gameLoop = HC({
                    fps: 60,
                    update(e) {
                        t.sprites.forEach(n => n.update(e)), t.sprites = t.sprites.filter(n => n.isAlive())
                    },
                    render(e) {
                        t.sprites.forEach(n => n.render(e))
                    }
                });
                for (let e = 0; e < t.sprites.length; e++) t.sprites[e].ttl = 0;
                this.cameraSprite = xl(JC), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), t.sprites.push(this.cameraSprite), t.gameLoop.start(), this.facingMode = "user", this.startCamera(), this.onResize()
            },
            async startCamera() {
                this.canvas = document.getElementById("cameraCanvas"), this.image = document.getElementById("cameraImage"), this.video = document.getElementById("cameraVideo");
                const t = this.altOption || "drawing";
                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                    const n = {
                        video: {
                            facingMode: this.facingMode,
                            width: 1280
                        },
                        audio: !1
                    };
                    try {
                        const i = await navigator.mediaDevices.getUserMedia(n),
                            o = await navigator.mediaDevices.enumerateDevices();
                        this.currentStream = i, this.video.srcObject = i, await this.video.play(), this.gotDevices(o)
                    } catch (i) {
                        console.error(i), kt.show("alert", {
                            titleText: "Unable to Access Camera",
                            text: `Looks like we don't have access to your device's camera. You can refresh and try again, or choose the ${t} option instead.`,
                            willClose: () => {
                                this.cameraAccessDenied()
                            }
                        })
                    }
                } else kt.show("alert", {
                    titleText: "No Camera Access",
                    text: `It looks like camera access isn't available from this browser. Try the ${t} option instead.`,
                    willClose: () => {
                        this.cameraAccessDenied()
                    }
                })
            },
            gotDevices(t) {
                let e = 0;
                t.forEach(n => {
                    n.kind === "videoinput" && (e += 1)
                }), this.model.set("showSwitchButton", e > 1)
            },
            stopMediaTracks() {
                this.currentStream.getTracks().forEach(e => {
                    e.stop()
                }), this.video.srcObject = null, this.model.unset("image")
            },
            onBeforeDestroy() {
                window.removeEventListener("resize", this.onResizeWithContext);
                const t = this;
                for (let n = 0; n < t.sprites.length; n++) t.sprites[n].ttl = 0;
                t.gameLoop.update(1 / 60), t.gameLoop.stop(), this.currentStream && this.stopMediaTracks();
                const e = document.getElementsByClassName("pt-page");
                !e.length || (e[0].style.display = "table", e[0].style.display = "block")
            },
            switchClicked() {
                this.currentStream && this.stopMediaTracks(), this.facingMode = this.facingMode === "user" ? "environment" : "user", this.cameraSprite.mirror = this.facingMode === "user", this.startCamera()
            },
            snapshotClicked() {
                const t = new Image;
                t.crossOrigin = "anonymous", t.src = this.canvas.toDataURL(), this.model.set("image", t), this.model.set("transmitting", !1)
            },
            confirmClicked() {
                const t = this.model.get("sizesToSend") || [{
                        width: this.model.get("width"),
                        height: this.model.get("height")
                    }],
                    e = [];
                t.forEach(n => {
                    if (!n.width || !n.height) return;
                    const i = document.createElement("canvas");
                    i.width = n.width, i.height = n.height;
                    const o = i.getContext("2d");
                    this.previewImage && o.drawImage(this.previewImage, 0, 0, i.width, i.height), this.model.set("transmitting", !0);
                    const d = i.toDataURL().split(",")[1];
                    e.push({
                        size: n,
                        picture: d
                    })
                }), this.triggerMethod("camera:snapshot", e)
            },
            cancelClicked() {
                this.model.unset("image")
            },
            exitClicked() {
                this.triggerMethod("camera:exit")
            },
            cameraAccessDenied() {
                this.model.set("failed", !0), this.triggerMethod("camera:exit")
            },
            onResize() {
                const t = this.model.get("width"),
                    e = this.model.get("height");
                if (!t || !e) return;
                const n = document.getElementById("cameraCanvas"),
                    i = be(".canvasContainer");
                if (!n || !i) return;
                const o = i.width(),
                    d = Math.max(be(window).innerHeight(), 250),
                    m = Math.min(o / t, d / e),
                    C = t * m,
                    S = e * m;
                n.style.width = `${C}px`, n.style.height = `${S}px`, n.width = C, n.height = S
            }
        }),
        ai = at.Model.extend({
            defaults: {},
            set(t, e) {
                const n = Ze.extend({}, this.attributes, this.defaults, t);
                return at.Model.prototype.set.apply(this, [n, e]), this
            },
            setUpdate(t, e) {
                const n = Ze.extend({}, this.defaults, this.attributes, t);
                return at.Model.prototype.set.apply(this, [n, e]), this
            }
        }),
        ZC = ai.extend({
            defaults: {
                size: {
                    width: 300,
                    height: 408
                },
                sizesToSend: null,
                mask: !0,
                strings: {
                    exitButton: "X",
                    switchButton: `
                <svg width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-switch"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                <path
                    d="M 7.96875 2.578125 C 7.144531 2.578125 6.371094 2.8125 5.652344 3.289062
                        C 4.933594 3.753906 4.367188 4.394531 3.945312 5.210938
                        C 3.527344 6.03125 3.316406 6.921875 3.316406 7.878906 L 3.316406 8.058594 L 3.324219 8.242188
                        L 1.917969 8.347656 L 1.90625 7.878906 C 1.882812 7.273438 1.945312 6.683594 2.085938 6.113281
                        C 2.226562 5.542969 2.433594 4.992188 2.703125 4.457031
                        C 3.242188 3.378906 3.972656 2.527344 4.898438 1.898438
                        C 5.832031 1.273438 6.851562 0.960938 7.957031 0.960938
                        C 8.984375 0.960938 9.949219 1.242188 10.851562 1.808594 L 12.203125 0.15625 L 12.558594 4.71875
                        L 8.328125 4.882812 L 9.847656 3.023438 C 9.546875 2.875 9.238281 2.761719 8.925781 2.6875
                        C 8.617188 2.613281 8.296875 2.578125 7.96875 2.578125 Z M 12.632812 7.558594
                        L 14.03125 7.453125 L 14.039062 7.6875 L 14.039062 7.921875
                        C 14.039062 9.160156 13.761719 10.316406 13.210938 11.394531
                        C 12.664062 12.476562 11.929688 13.320312 11.007812 13.929688
                        C 10.089844 14.53125 9.082031 14.832031 7.980469 14.832031
                        C 6.992188 14.832031 6.035156 14.554688 5.105469 13.992188 L 3.746094 15.644531
                        L 3.394531 11.074219 L 7.621094 10.917969 L 6.101562 12.777344
                        C 6.402344 12.925781 6.710938 13.039062 7.027344 13.113281
                        C 7.339844 13.1875 7.65625 13.222656 7.980469 13.222656
                        C 8.835938 13.222656 9.613281 12.988281 10.316406 12.511719
                        C 11.039062 12.035156 11.601562 11.378906 12.007812 10.554688
                        C 12.433594 9.726562 12.644531 8.839844 12.644531 7.898438 L 12.644531 7.738281
                        Z M 12.632812 7.558594 "
                />
            </svg>`,
                    snapshotButton: `
                <svg
                    width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-camera"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        fill-rule="evenodd"
                        d="M15 12V6a1 1 0 0 0-1-1h-1.172a3 3 0 0 1-2.12-.879l-.83-.828A1 1 0 0 0 9.173 3
                            H6.828a1 1 0 0 0-.707.293l-.828.828A3 3 0 0 1 3.172 5H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h12
                            a1 1 0 0 0 1-1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172
                            a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828
                            A2 2 0 0 1 3.172 4H2z"
                    />
                    <path
                        fill-rule="evenodd"
                        d="M8 11a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"
                    />
                    <path d="M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z" />
                </svg>
            `,
                    cancelButton: "Cancel",
                    confirmButton: "Confirm"
                }
            }
        }),
        e_ = xt.View.extend({
            template: Ze.template('<div id="cameraRegion" class="cameraRegion"></div>'),
            className: "Camera",
            model: new ZC,
            regions: {
                camera: "#cameraRegion"
            },
            bindings: {
                "#exitButton": {
                    observe: "strings",
                    onGet: t => t.exitButton
                },
                "#switchButton": {
                    observe: "strings",
                    updateMethod: "html",
                    onGet: t => t.switchButton
                },
                "#snapshotButton": {
                    observe: "strings",
                    updateMethod: "html",
                    onGet: t => t.snapshotButton
                },
                "#cancelButton": {
                    observe: "strings",
                    onGet: t => t.cancelButton
                },
                "#confirmButton": {
                    observe: "strings",
                    onGet: t => t.confirmButton
                }
            },
            initialize(t) {
                this.cameraView = this.cameraView || new QC(t), this.listenTo(this.model, "change", this.update, this), this.update()
            },
            update() {
                this.cameraView.model.set("width", this.model.get("size").width), this.cameraView.model.set("height", this.model.get("size").height), this.cameraView.model.set("mask", this.model.get("mask")), this.cameraView.model.set("sizesToSend", this.model.get("sizesToSend"))
            },
            onBeforeDestroy() {
                this.getRegion("camera").empty()
            },
            onRender() {
                this.showChildView("camera", this.cameraView)
            },
            onChildviewCameraSnapshot(t) {
                t.length === 1 ? this.triggerMethod("client:message", {
                    action: "camera",
                    ...t[0]
                }) : this.triggerMethod("client:message", {
                    action: "camera",
                    pictures: t
                })
            },
            onAttach() {
                this.stickit()
            },
            onChildviewCameraExit() {
                this.triggerMethod("client:message", {
                    action: "cancel"
                })
            }
        }),
        t_ = '<a class="change-color button-color btn"></a>',
        n_ = xt.View.extend({
            tagName: "div",
            className: "colorSwatch",
            template: Ze.template(t_),
            events: {
                click: "onClick"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        observe: ["className", "selected"],
                        name: "class",
                        onGet(t) {
                            let e = "";
                            return t[0] && (e += t[0]), t[1] && (e += " selected"), e
                        }
                    }, {
                        name: "data-thickness",
                        observe: "thickness"
                    }, {
                        name: "data-color",
                        observe: "hex"
                    }]
                },
                "a.button-color": {
                    attributes: [{
                        name: "data-color",
                        observe: "hex"
                    }, {
                        name: "style",
                        observe: "hex",
                        onGet(t) {
                            return this.getOption("transparent") ? "" : `background-color: ${t};`
                        }
                    }]
                }
            },
            onRender() {
                this.stickit()
            },
            onClick() {
                this.triggerMethod("palette:select", this.model)
            }
        }),
        i_ = xt.CollectionView.extend({
            tagName: "div",
            id: "color-buttons",
            className: "colorPalette",
            childView: n_,
            collection: new at.Collection([]),
            initialize() {
                this.listenTo(this.collection, "sync", this.render)
            },
            childViewOptions() {
                return {
                    transparent: this.getOption("transparent")
                }
            }
        }),
        r_ = `<ul class="nav nav-colors">\r
    <li class="pull-left button-pad">\r
        <button id="undoButton" class="undo button">\r
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 64 64"><image x="12" y="20" width="41" height="39" xlink:href="main/pp3/quiplash2/assets/5f12600b.png"/></svg>\r
        </button>\r
    </li>\r
    <li class="pull-left button-pad"> \r
        <button id="thicknessButton" class="thickness button">  \r
            <div class="thickness-circle"></div>  \r
        </button>  \r
    </li> \r
    <li class="pull-right button-pad">\r
        <button id="showPaletteButton" class="showPalette button">\r
        </button>\r
    </li>\r
    <li class="pull-right button-pad">\r
        <button aria-label="choose color" id="currentColorButton" class="button currentColorButton">\r
            <div id="currentColor" class="currentColor"></div>\r
        </button>\r
    </li>\r
    <li id="color-palette" class="hide">\r
    </li>\r
</ul>\r
<div id="colorPaletteRegion" class="colorPaletteRegion">\r
`,
        s_ = xt.View.extend({
            tagName: "div",
            className: "picker",
            template: Ze.template(r_),
            model: new at.Model({}),
            regions: {
                colorPalette: "#colorPaletteRegion"
            },
            events: {
                "click #currentColorButton": "onPaletteClick",
                "click #showPaletteButton": "onPaletteClick"
            },
            triggers: {
                "click #thicknessButton": "choose:thickness",
                "click #undoButton": "choose:undo"
            },
            bindings: {
                "#currentColor": {
                    attributes: [{
                        name: "style",
                        observe: "currentColor",
                        onGet(t) {
                            return `background-color: ${t}`
                        }
                    }]
                },
                ".colorPaletteRegion": {
                    classes: {
                        visible: {
                            observe: "visiblePalette"
                        }
                    }
                },
                ".thickness-circle": {
                    attributes: [{
                        name: "style",
                        observe: "thickness",
                        onGet(t) {
                            return `width: ${t*3}px; height: ${t*3}px;`
                        }
                    }]
                }
            },
            initialize() {
                this.colorPaletteComponent = this.colorPaletteComponent || new i_({
                    collection: new at.Collection
                }), this.listenTo(this.model, "change", this.update, this)
            },
            onRender() {
                this.showChildView("colorPalette", this.colorPaletteComponent)
            },
            onAttach() {
                this.stickit()
            },
            update() {
                const t = this.model.get("colors").map(e => typeof e == "object" ? e : {
                    hex: e
                });
                this.colorPaletteComponent.collection.set(t)
            },
            onLine() {
                this.showPalette(!1)
            },
            onPaletteClick() {
                this.showPalette(!0)
            },
            showPalette(t = !0) {
                this.model.set("visiblePalette", t)
            },
            onChildviewChildviewPaletteSelect(t) {
                this.triggerMethod("choose:color", t), this.showPalette(!1)
            }
        });
    class wh {
        constructor(e, n, i) {
            it(this, "options");
            it(this, "canvas");
            it(this, "canvasCTX");
            it(this, "tipCanvas");
            it(this, "tipCanvasCTX");
            it(this, "lines", []);
            it(this, "image");
            it(this, "startX", null);
            it(this, "startY", null);
            it(this, "smoothedMouseX", null);
            it(this, "smoothedMouseY", null);
            it(this, "lastMouse", {});
            it(this, "lastMouseChangeVector", {});
            it(this, "lastSmoothedMouse", {});
            it(this, "lastThickness");
            it(this, "lastRotation");
            it(this, "colorLevel");
            this.options = i, this.canvas = document.createElement("canvas"), this.canvas.width = e, this.canvas.height = n, this.canvasCTX = this.canvas.getContext("2d"), this.tipCanvas = document.createElement("canvas"), this.tipCanvas.width = e, this.tipCanvas.height = n, this.tipCanvasCTX = this.tipCanvas.getContext("2d")
        }
        addLine(e, n, i, o) {
            this.lines.push({
                thickness: e,
                color: n,
                highlighter: i,
                points: []
            }), this.addPoint(o), this.update()
        }
        updateSize(e, n) {
            this.canvas.width = e, this.canvas.height = n
        }
        addPoint(e) {
            const n = {
                    x: parseInt(e.x, 10),
                    y: parseInt(e.y, 10)
                },
                i = this.lines[this.lines.length - 1];
            if (!(!i || !i.points)) {
                if (i.points.length !== 0) {
                    const o = i.points[i.points.length - 1];
                    if (o.x === n.x && o.y === n.y) return
                }
                i.points.push(n), i.points.length === 2 && i.points.unshift(i.points[1]), this.update()
            }
        }
        setLines(e) {
            const n = e.map(i => {
                let o = i.points;
                return typeof o == "string" ? o = i.points.split("|").map(d => ({
                    x: parseInt(d.split(",")[0], 10),
                    y: parseInt(d.split(",")[1], 10)
                })) : o = o.map(d => ({
                    x: parseInt(d.x, 10),
                    y: parseInt(d.y, 10)
                })), {
                    color: i.color,
                    thickness: i.thickness,
                    points: o
                }
            });
            this.lines = n, this.update()
        }
        setImage(e) {
            this.image = e, this.update()
        }
        reset() {
            this.lines = [], this.image = null, this.update()
        }
        getLastLine() {
            const e = this.lines[this.lines.length - 1];
            return e ? {
                thickness: e.thickness,
                color: e.color,
                points: e.points.map(n => `${n.x},${n.y}`).join("|")
            } : null
        }
        getLines() {
            return this.lines.map(e => ({
                thickness: e.thickness,
                color: e.color,
                points: e.points.map(n => `${n.x},${n.y}`).join("|")
            }))
        }
        update() {
            this.canvasCTX && this.canvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.tipCanvasCTX && this.tipCanvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.image && this.canvasCTX.drawImage(this.image, 0, 0), this.lines && this.lines.forEach(e => this.drawLine(e))
        }
        startLineInContext(e, n, i) {
            const o = e * this.options.minThickness;
            this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, o * this.options.dotMultiplier, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.options.cappedEnds && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.lastMouseChangeVector = {
                x: 0,
                y: 0
            }, this.startX = n, this.lastMouse.x = n, this.smoothedMouseX = n, this.lastSmoothedMouse.x = n, this.startY = i, this.lastMouse.y = i, this.smoothedMouseY = i, this.lastSmoothedMouse.y = i, this.lastThickness = o, this.lastRotation = void 0, this.colorLevel = 0
        }
        continueLineInContext(e, n, i) {
            const o = n - this.lastMouse.x,
                d = i - this.lastMouse.y;
            o * this.lastMouseChangeVector.x + d * this.lastMouseChangeVector.y < 0 && (this.tipCanvasCTX && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.smoothedMouseX = this.lastMouse.x, this.lastSmoothedMouse.x = this.lastMouse.x, this.smoothedMouseY = this.lastMouse.y, this.lastSmoothedMouse.y = this.lastMouse.y, this.lastRotation += Math.PI, this.lastThickness *= this.options.tipTaperFactor), this.smoothedMouseX += this.options.smoothingFactor * (n - this.smoothedMouseX), this.smoothedMouseY += this.options.smoothingFactor * (i - this.smoothedMouseY);
            const m = this.smoothedMouseX - this.lastSmoothedMouse.x,
                C = this.smoothedMouseY - this.lastSmoothedMouse.y,
                S = Math.sqrt(m * m + C * C);
            let T;
            S !== 0 ? T = Math.PI / 2 + Math.atan2(C, m) : T = 0;
            const D = this.options.minThickness * e + this.options.thicknessFactor * S,
                V = this.lastThickness + this.options.thicknessSmoothingFactor * (D - this.lastThickness);
            this.lastRotation === void 0 && (this.lastRotation = T);
            const Y = this.lastRotation !== null ? Math.sin(this.lastRotation) : Math.sin(T),
                ie = this.lastRotation !== null ? Math.cos(this.lastRotation) : Math.sin(T),
                K = Math.sin(T),
                re = Math.cos(T),
                v = this.lastThickness * Y,
                P = this.lastThickness * ie,
                H = V * K,
                ae = V * re,
                se = .33 * S * Y,
                ve = -.33 * S * ie,
                f = this.lastSmoothedMouse.x + P + se,
                Ee = this.lastSmoothedMouse.y + v + ve,
                Oe = this.lastSmoothedMouse.x - P + se,
                Pe = this.lastSmoothedMouse.y - v + ve;
            this.canvasCTX.beginPath(), this.canvasCTX.moveTo(this.lastSmoothedMouse.x + P, this.lastSmoothedMouse.y + v), this.canvasCTX.quadraticCurveTo(f, Ee, this.smoothedMouseX + ae, this.smoothedMouseY + H), this.canvasCTX.lineTo(this.smoothedMouseX - ae, this.smoothedMouseY - H), this.canvasCTX.quadraticCurveTo(Oe, Pe, this.lastSmoothedMouse.x - P, this.lastSmoothedMouse.y - v), this.canvasCTX.closePath(), this.canvasCTX.fill(), this.canvasCTX.stroke();
            const lt = this.options.tipTaperFactor * V;
            this.tipCanvasCTX.clearRect(0, 0, this.tipCanvasCTX.canvas.width, this.tipCanvasCTX.canvas.height), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, lt, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.moveTo(this.smoothedMouseX + ae, this.smoothedMouseY + H), this.tipCanvasCTX.lineTo(n + this.options.tipTaperFactor * ae, i + this.options.tipTaperFactor * H), this.tipCanvasCTX.lineTo(n - this.options.tipTaperFactor * ae, i - this.options.tipTaperFactor * H), this.tipCanvasCTX.lineTo(this.smoothedMouseX - ae, this.smoothedMouseY - H), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.lastSmoothedMouse = {
                x: this.smoothedMouseX,
                y: this.smoothedMouseY
            }, this.lastRotation = T, this.lastThickness = V, this.lastMouseChangeVector = {
                x: o,
                y: d
            }, this.lastMouse = {
                x: n,
                y: i
            }
        }
        drawLine(e) {
            if (!(!e || !e.color || !e.points || !e.thickness) && !(!this.canvasCTX || !this.tipCanvasCTX)) {
                this.canvasCTX.strokeStyle = e.color, this.canvasCTX.lineWidth = this.options.borderWidth, this.canvasCTX.lineCap = "round", this.canvasCTX.lineJoin = "bevel", this.canvasCTX.fillStyle = e.color, this.canvasCTX.strokeStyle = e.color, this.tipCanvasCTX.lineWidth = this.options.borderWidth, this.tipCanvasCTX.fillStyle = e.color, this.tipCanvasCTX.strokeStyle = e.color;
                for (let n = 0; n < e.points.length; n++) {
                    const i = e.points[n];
                    n === 0 && this.startLineInContext(e.thickness, i.x, i.y), this.continueLineInContext(e.thickness, i.x, i.y)
                }
                this.canvasCTX.drawImage(this.tipCanvas, 0, 0)
            }
        }
    }
    const Sc = {
        color: "#000000",
        thickness: 3,
        highlighter: !1,
        sketchOptions: {
            minThickness: .5,
            thicknessFactor: .1,
            smoothingFactor: .55,
            thicknessSmoothingFactor: .6,
            tipTaperFactor: .7,
            cappedEnds: !1,
            borderWidth: 2,
            dotMultiplier: 2
        }
    };
    class o_ {
        constructor(e, n = {}) {
            it(this, "canvasSelector");
            it(this, "canvas");
            it(this, "ctx");
            it(this, "options");
            it(this, "history");
            it(this, "layerNames", ["backgroundSketch", "highlighterSketch", "highlighterLineSketch", "markerSketch", "markerLineSketch"]);
            this.canvasSelector = e, this.canvas = be(this.canvasSelector)[0], this.ctx = this.canvas.getContext("2d"), this.options = Object.assign(Sc, n), this.history = [], this.layerNames.forEach(i => {
                const o = new wh(this.canvas.width, this.canvas.height, this.options.sketchOptions);
                o.name = i, this[i] = o
            })
        }
        update() {
            !this.ctx || (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.layerNames.forEach(e => {
                this.ctx.drawImage(this[e].canvas, 0, 0)
            }))
        }
        updateSize(e) {
            this.layerNames.forEach(n => {
                this[n].updateSize(e.width, e.height)
            })
        }
        setThickness(e) {
            this.options.thickness = e
        }
        setColor(e) {
            this.options.color = e
        }
        getHighlighter() {
            return !!this.options.highlighter
        }
        setHighlighter(e) {
            this.options.highlighter = e
        }
        setOptions(e) {
            const n = Object.assign(Sc.sketchOptions, e);
            this.layerNames.forEach(i => {
                this[i].options = n, this[i].update()
            }), this.update()
        }
        startLine(e) {
            (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addLine(this.options.thickness, this.options.color, this.options.highlighter, e)
        }
        moveLine(e) {
            (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addPoint(e), this.update()
        }
        endLine() {
            const e = this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch,
                n = e.lines.pop();
            n.points && n.points.length > 1 && n.points.push(n.points[n.points.length - 2]), this.options.highlighter ? (this.highlighterSketch.lines.push(n), this.highlighterSketch.update(), this.history.push("highlighterSketch")) : (this.markerSketch.lines.push(n), this.markerSketch.update(), this.history.push("markerSketch")), e.reset(), this.update()
        }
        undoLine() {
            if (!this.history.length) return;
            const e = this.history.pop();
            this[e].lines.pop() && this[e].update()
        }
        isClean() {
            return !this.history.length
        }
        setLayerLines(e, n) {
            if (this.layerNames.indexOf(e) === -1) {
                console.error("invalid layer name", e);
                return
            }
            this[e].setLines(n), this.update()
        }
        setLayerImage(e, n) {
            this[e].setImage(n), this.update()
        }
        getLastLine() {
            return this.history.length === 0 ? null : this[this.history[this.history.length - 1]].getLastLine() || null
        }
        getLines() {
            return [...this.highlighterSketch.getLines(), ...this.markerSketch.getLines()]
        }
        getDataURL(e, n) {
            e === void 0 && (e = 1);
            const i = document.createElement("canvas"),
                o = this.canvas.width * e,
                d = this.canvas.height * e;
            i.width = o, i.height = d;
            const m = i.getContext("2d");
            return n && (m.fillStyle = n, m.fillRect(0, 0, o, d)), m.drawImage(this.highlighterSketch.canvas, 0, 0, o, d), m.drawImage(this.markerSketch.canvas, 0, 0, o, d), i.toDataURL()
        }
        resetAll() {
            this.layerNames.forEach(e => {
                this[e].reset()
            }), this.update()
        }
    }
    const a_ = `<canvas id="fullLayer" class="sketchpad fullLayer" width='480' height='600' style=''></canvas>`,
        l_ = xt.View.extend({
            className: "Sketchpad canvasContainer",
            template: Ze.template(a_),
            images: {},
            myViewOptions: ["color", "thickness", "background", "image"],
            sketchpad: null,
            bindings: {
                ".sketchpad": {
                    attributes: [{
                        name: "width",
                        observe: "size",
                        onGet(t) {
                            return t ? t.width : ""
                        }
                    }, {
                        name: "height",
                        observe: "size",
                        onGet(t) {
                            return t ? t.height : ""
                        }
                    }, {
                        name: "style",
                        observe: ["background", "backgroundImageUrl"],
                        onGet([t, e]) {
                            let n = "";
                            return e && (n += `background-image:url(${e});`), t && (n += `background-color:${t};`), n
                        }
                    }]
                }
            },
            events: {
                "contextmenu canvas": "handleContextMenu",
                "mousedown canvas": "start",
                "touchstart canvas": "start",
                "mousemove canvas": "move",
                "touchmove canvas": "move"
            },
            initialize(t) {
                this.color = "black", this.thicknessScale = -1, this.mergeOptions(t, this.myViewOptions), this.model.on("change:size", this.onUpdateSize, this), this.endWithContext = this.end.bind(this)
            },
            onUpdateSize() {
                this.sketchpad && this.sketchpad.updateSize(this.model.get("size"))
            },
            onRender() {
                this.stickit(), document.addEventListener("touchend", this.endWithContext), document.addEventListener("mouseup", this.endWithContext)
            },
            onAttach() {
                const t = `sketchpad-${this.model.cid}`;
                this.$("#fullLayer").addClass(t), this.sketchpad = new o_(`#fullLayer.${t}`), this.model.get("thicknesses") ? this.model.get("thicknesses").length === 1 && this.sketchpad.setThickness(this.model.get("thicknesses")[0]) : this.sketchpad.setThickness(1), this.triggerMethod("sketchpad:ready")
            },
            getCoords(t) {
                let e = t;
                e.preventDefault(), ["touchstart", "touchmove"].indexOf(e.type) !== -1 && (e = e.originalEvent.touches[0]);
                const n = this.sketchpad.canvas,
                    i = be(n)[0].width / be(n).width(),
                    o = n.getBoundingClientRect(),
                    d = this.model.get("size"),
                    m = this.sketchpad.options.thickness;
                let C = (e.clientX - o.left) * i;
                C = Math.min(d.width - m, Math.max(m, C));
                let S = (e.clientY - o.top) * i;
                return S = Math.min(d.height - m, Math.max(m, S)), {
                    x: C,
                    y: S
                }
            },
            fullImageCoord(t) {
                return `${parseInt(t.x+this.viewportOffset.x,10)},${parseInt(t.y+this.viewportOffset.y,10)}`
            },
            start(t) {
                const e = this.getCoords(t);
                this.sketchpad.startLine(e), this.isDrawing = !0
            },
            move(t) {
                if (!this.isDrawing) return;
                const e = this.getCoords(t);
                this.sketchpad.moveLine(e)
            },
            end(t, e) {
                !this.isDrawing || (this.isDrawing = !1, this.sketchpad.endLine(), e || this.triggerMethod("sketchpad:line", this.sketchpad.getLastLine()))
            },
            onBeforeDestroy() {
                this.getOption("mode") !== null && this.end(null, !0), document.removeEventListener("touchend", this.endWithContext), document.removeEventListener("mouseup", this.endWithContext)
            },
            leave() {
                this.getOption("mode") !== "draw" && this.tipShape.graphics.clear()
            },
            undoLine() {
                this.sketchpad.undoLine(), this.sketchpad.update(), this.triggerMethod("sketchpad:undo", this.sketchpad.history.length)
            },
            resetAll() {
                this.sketchpad && this.sketchpad.resetAll()
            },
            getColor() {
                return this.color
            },
            setColor(t) {
                this.color = t, this.sketchpad && this.sketchpad.setColor(t)
            },
            getThickness() {
                return this.thicknessScale
            },
            setThickness(t) {
                this.thicknessScale = t, this.sketchpad && this.sketchpad.setThickness(t)
            },
            getHighlighter() {
                return this.sketchpad ? this.sketchpad.getHighlighter() : !1
            },
            setHighlighter(t) {
                this.sketchpad && this.sketchpad.setHighlighter(t)
            },
            setOptions(t) {
                this.sketchpad && this.sketchpad.setOptions(t)
            },
            getLines() {
                return this.sketchpad ? this.sketchpad.getLines() : []
            },
            getImageData() {
                return this.sketchpad ? this.sketchpad.getDataURL(1, this.model.get("background")) : null
            },
            getThumbnailImage() {
                return this.sketchpad ? this.sketchpad.getDataURL(.33) : null
            },
            setLines(t) {
                !this.sketchpad || this.sketchpad.setLayerLines("backgroundSketch", t)
            },
            setImage(t) {
                const e = this.getOption("images")[t];
                if (!e) return;
                const n = new Image;
                n.onload = i => {
                    const o = i.target;
                    this.sketchpad.setLayerImage("backgroundSketch", o)
                }, n.src = e
            },
            handleContextMenu(t) {
                t.preventDefault()
            }
        }),
        c_ = `<div class="controller-content">\r
    <div class="canvas-container">\r
        <div id="prompt" class="prompt"></div>\r
        <div id="toolbar" class="toolbar"></div>\r
        <div id="sketchpad"></div>\r
        <div id="buttons" class="buttons"></div>\r
        <div id="post-sketchpad" class="post-sketchpad">\r
            <div id="submit">\r
                <button id='submitdrawing' class="button submitDrawing">Submit</button><br/>\r
            </div>\r
            <button id='censorOptions' class='button'>Censor Options</button>\r
            <div class="footer"></div>\r
        </div>\r
        </div>\r
    </div>\r
</div>\r
`,
        u_ = ai.extend({
            defaults: {
                drawId: 0,
                objectKey: void 0,
                size: {
                    width: 240,
                    height: 300
                },
                actions: !1,
                colors: ["#3c6e6f", "#007727", "#b8aa01", "#0350a0", "#000000", "#966401", "#48019d", "#730075", "#9c0e3e"],
                background: "",
                thicknesses: [3, 6],
                defaultIndex: 4,
                classes: [],
                prompt: {
                    html: ""
                },
                live: !1,
                image: !1,
                backgroundImageUrl: !1,
                lines: !1,
                hideSubmit: !1,
                autoSubmit: !1,
                allowEmpty: !1,
                disabled: !1,
                debug: !1,
                strings: {
                    drawing_empty: "You must draw something!",
                    submit: "submit",
                    ERROR_REJECTED_OBJECT: "That's not allowed, enter something else!"
                }
            }
        }),
        h_ = xt.View.extend({
            className: "Draw",
            template: Ze.template(c_),
            model: new u_,
            regions: {
                prompt: "#prompt",
                sketchpad: "#sketchpad",
                toolbar: "#toolbar",
                buttons: "#buttons"
            },
            events: {
                "click #submitdrawing": "onChildviewButtonSubmit"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return t ? t.join(" ") : ""
                        }
                    }]
                },
                "#censorOptions": {
                    visible: !1
                },
                ".footer": {
                    observe: "footer",
                    updateMethod: "html",
                    onGet(t) {
                        return t ? t.html ? t.html : be("<div />").text(t.text).html() : null
                    }
                },
                ".submitDrawing": {
                    observe: ["hideSubmit", "actions", "strings"],
                    visible: !0,
                    updateView: !0,
                    onGet(t) {
                        return t[0] || t[1] ? !1 : t[2] === void 0 ? "" : t[2].submit || "Submit"
                    }
                }
            },
            initialize() {
                this.promptComponent = this.promptComponent || new Ui({}), this.toolbarComponent = this.toolbarComponent || new s_({
                    model: new at.Model({})
                }), this.sketchpadComponent = this.sketchpadComponent || new l_({
                    model: new at.Model
                }), this.buttonsCollection = this.buttonsCollection || new at.Collection([]), this.buttonsComponent = this.buttonsComponent || new mi({
                    block: !1,
                    collection: this.buttonsCollection
                }), this.options.thicknessIndex = -1, this.options.colorIndex = -1, this.drawId = this.model.get("drawId"), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
            },
            update() {
                this.model.get("drawId") !== this.getOption("drawId") && (this.resetDrawing(), this.drawId = this.model.get("drawId")), this.model.get("prompt") && this.promptComponent.model.set(this.model.get("prompt")), this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                    width: 720,
                    height: 900
                }), this.model.get("image") && (this.sketchpadComponent.setImage(this.images[this.model.get("image")]), this.onResize()), this.model.get("background") && this.sketchpadComponent.model.set("background", this.model.get("background")), this.model.get("backgroundImageUrl") && this.sketchpadComponent.model.set("backgroundImageUrl", this.model.get("backgroundImageUrl")), this.toolbarComponent && this.toolbarComponent.model.set("colors", this.model.get("colors")), this.model.get("actions") && this.buttonsCollection.set(this.model.get("actions")), this.model.get("autoSubmit") && this.autoSubmit(), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.onResize()
            },
            onRender() {
                this.showChildView("prompt", this.promptComponent), this.showChildView("toolbar", this.toolbarComponent), this.showChildView("sketchpad", this.sketchpadComponent), this.showChildView("buttons", this.buttonsComponent)
            },
            onChildviewAttach() {
                this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                    width: 720,
                    height: 900
                })
            },
            onAttach() {
                this.stickit(), this.update(), this.onResize(), kt.vibrate()
            },
            onBeforeDestroy() {
                window.removeEventListener("resize", this.onResizeWithContext)
            },
            resetDrawing() {
                this.sketchpadComponent.resetAll(), this.onChildviewSketchpadReady()
            },
            onChildviewSketchpadReady() {
                this.model.get("thicknesses") && this.options.thicknessIndex === -1 && this.onChildviewChooseThickness(), this.model.get("colors") && this.options.colorIndex === -1 && this.model.get("colors") && this.model.get("defaultIndex") !== void 0 && this.chooseColorByIndex(this.model.get("defaultIndex")), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.model.get("lines") && this.sketchpadComponent.setLines(this.model.get("lines"))
            },
            chooseColorByIndex(t) {
                (t < 0 || t > this.model.get("colors").length) && (t = 0);
                let e = this.model.get("colors")[t];
                typeof e != "object" && (e = {
                    hex: e
                }), this.chooseColor(e.hex, e)
            },
            onChildviewChooseColor(t) {
                this.chooseColor(t.get("hex"), t.attributes)
            },
            onChildviewChooseThickness() {
                this.options.thicknessIndex = (this.options.thicknessIndex + 1) % this.model.get("thicknesses").length;
                const t = this.model.get("thicknesses")[this.options.thicknessIndex];
                this.sketchpadComponent.setThickness(t), this.toolbarComponent && this.toolbarComponent.model.set("thickness", t)
            },
            onChildviewChooseUndo() {
                this.sketchpadComponent.undoLine()
            },
            chooseColor(t, e = {}) {
                this.sketchpadComponent.setColor(t), this.sketchpadComponent.setHighlighter(e.highlighter), this.toolbarComponent.model.set("highlighter", e.highlighter), e.thickness !== void 0 && this.sketchpadComponent.setThickness(e.thickness), this.toolbarComponent.model.set("currentColor", t)
            },
            onChildviewSketchpadLine(t) {
                if (this.toolbarComponent && this.toolbarComponent.onLine && this.toolbarComponent.onLine(), this.model.get("live")) {
                    const e = {
                            line: t,
                            highlighter: this.sketchpadComponent.getHighlighter(),
                            action: "line"
                        },
                        n = this.model.get("objectKey");
                    if (n !== void 0) {
                        const i = this.sketchpadComponent.getLines();
                        e.objectKey = n, e.val = {
                            lines: i
                        }
                    }
                    this.triggerMethod("client:message", e)
                }
            },
            onChildviewSketchpadUndo(t) {
                if (this.model.get("live")) {
                    const e = {
                            action: "undo",
                            linesLength: t
                        },
                        n = this.model.get("objectKey");
                    n !== void 0 && (e.objectKey = n, e.val = {
                        lines: this.sketchpadComponent.getLines()
                    }), this.triggerMethod("client:message", e)
                }
            },
            autoSubmit() {
                this.sketchpadComponent.end(), this.sketchpadComponent.getLines().length > 0 && this.onChildviewButtonSubmit()
            },
            onChildviewChildviewButtonChoose(t) {
                this.onChildviewButtonChoose(t)
            },
            onChildviewButtonChoose(t) {
                this.triggerMethod("client:message", {
                    action: "choose",
                    index: t.get("key")
                })
            },
            onChildviewChildviewButtonSubmit() {
                this.onChildviewButtonSubmit()
            },
            onChildviewButtonSubmit() {
                const t = this.sketchpadComponent.getLines();
                if (t.length === 0 && !this.model.get("allowEmpty")) return kt.show(Error(this.model.get("strings").drawing_empty)), !1;
                const e = {
                        lines: t,
                        action: "submit"
                    },
                    n = this.model.get("objectKey");
                return n && (e.objectKey = n, e.val = {
                    lines: t,
                    submit: !0
                }), this.triggerMethod("client:message", e), this.model.get("debug") && kt.show("custom", {
                    html: `<textarea id="lines" style='width:100%; height:400px;'>${JSON.stringify(t)}</textarea><button type="button" onclick="(function(){var copyText = document.querySelector('#lines'); copyText.select(); document.execCommand('copy');})();">Copy to clipboard</button>`
                }), !1
            },
            onObjectFilterError() {
                kt.show(Error(this.model.get("strings").ERROR_REJECTED_OBJECT))
            },
            onResize() {
                const t = be("#sketchpad"),
                    e = be("#sketchpad canvas")[0];
                if (!e) return;
                const n = parseInt(be(".controller-content").css("border-top-width"), 10) * 2 + be(".playerTopBar").innerHeight() + be("#prompt").innerHeight() + be("#toolbar").innerHeight() + parseInt(be(".canvasContainer").css("border-top-width"), 10) * 2 + be("#buttons").innerHeight() + be("#post-sketchpad").innerHeight() + 10,
                    i = parseInt(parseInt(be(".canvasContainer").css("border-left-width"), 10) * 2 || 0 + parseInt(be(".canvasContainer").css("padding-left"), 10) * 2 || 0 + parseInt(be(".Draw").css("padding-left"), 10) * 2 || 0, 10),
                    o = e.width,
                    d = e.height,
                    m = 2,
                    C = Math.min(t.width() - i, o * m),
                    S = Math.max(be("#controller-container").innerHeight() - n, 250),
                    T = Math.min(C / o, S / d),
                    D = o * T,
                    V = d * T;
                e.style.width = `${D}px`, e.style.height = `${V}px`, window.scrollTo(0, 0)
            }
        }),
        d_ = `<div>
    <div id="controller" class="state-controller controller-content">
        <form class="enterSingleTextForm">
            <fieldset class="enterSingleTextFieldset">
                <div id="prompt" class="prompt">prompt</div>
                <div id="input-region" class=""></div>
                <div id="buttons" class="">buttons</div>
            </fieldset>
        </form>
        <div class="enterSingleTextDone">
            <span class="doneText"></span>
        </div>
    </div>
</div>
`,
        f_ = ai.extend({
            defaults: {
                state: "EnterSingleText",
                actions: [{
                    text: "submit",
                    action: "submit"
                }],
                allowEmpty: !1,
                autoSubmit: !1,
                classes: [],
                doneText: "",
                entryId: void 0,
                entry: null,
                live: !1,
                maxLength: 500,
                textKey: void 0,
                textRingName: null,
                placeholder: "",
                autocapitalize: !1,
                className: "",
                inlineSubmit: !1,
                inlineSubmitText: "Submit",
                error: "",
                strings: {
                    ERROR_NOTHING_ENTERED: "You need to enter something!",
                    ERROR_REJECTED_TEXT: "That's not allowed, enter something else! (You can change the level of filtering in the game's settings menu)"
                }
            }
        }),
        p_ = xt.View.extend({
            className: "EnterSingleText scrollable",
            template: Ze.template(d_),
            model: new f_,
            sessionModule: "comment",
            sessionName: " Comments",
            regions: {
                prompt: "#prompt",
                input: "#input-region",
                buttons: "#buttons"
            },
            events: {
                "submit form": "onChildviewInputSubmit"
            },
            bindings: {
                ".enterSingleTextForm": {
                    observe: "entry",
                    visible(t) {
                        return !t
                    }
                },
                ".enterSingleTextDone": {
                    observe: "entry",
                    visible: !0
                },
                ".doneText": {
                    observe: "doneText",
                    updateMethod: "html",
                    onGet(t) {
                        return t ? t.html ? t.html : be("<div />").text(t.text).html() : ""
                    }
                },
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return !t || !t.bgColor ? "" : `background-color: ${t.bgColor}`
                        }
                    }, {
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return t ? t.join(" ") : ""
                        }
                    }]
                },
                ".choice-button": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return t && t.buttonColor ? `background-color: ${t.buttonColor}` : null
                        }
                    }]
                }
            },
            initialize() {
                this.currentEntry = null, this.shouldSubmit = !1, this.promptComponent = new Ui({
                    model: new at.Model({
                        text: "",
                        className: ""
                    })
                }), this.inputComponent = this.inputComponent || new co({
                    model: new at.Model({})
                }), this.buttonsCollection = this.buttonsCollection || new at.Collection([{
                    text: "submit"
                }]), this.buttonsComponent = this.buttonsComponent || new mi({
                    block: !0,
                    collection: this.buttonsCollection
                }), this.listenTo(this.model, "change", this.update, this)
            },
            update() {
                this.model.get("isAudience") && ((this.model.get("entryId") === void 0 || this.model.get("entryId") !== this.entryId) && (this.audienceEntry = void 0), this.audienceEntry && this.model.setUpdate({
                    entry: this.audienceEntry,
                    entryId: this.model.get("entryId") || 0
                })), this.promptComponent.model.clear({
                    silent: !0
                }).set(this.model.get("prompt")), this.inputComponent.model.set(this.model.attributes), this.buttonsComponent.options.block = this.model.get("block"), this.buttonsCollection.set(this.model.get("actions") || [{
                    text: "submit",
                    action: "submit"
                }]), this.model.get("entryId") && this.model.get("entryId") !== this.currentEntry && (this.inputComponent.clearInput(), this.currentEntry = this.model.get("entryId")), this.$el.find(".enterSingleTextFieldset").prop("disabled", !1), this.$el.find("textarea").focus(), this.stickit(), this.model.get("autoSubmit") && this.shouldSubmit && this.onChildviewInputSubmit()
            },
            onRender() {
                this.showChildView("prompt", this.promptComponent), this.showChildView("input", this.inputComponent), this.showChildView("buttons", this.buttonsComponent), this.stickit()
            },
            onAttach() {
                this.update(), kt.vibrate()
            },
            onChildviewInputText(t) {
                let e = t.getValue();
                e.length > this.model.get("maxLength") && (e = e.substr(0, this.model.get("maxLength")), t.setValue(e)), this.shouldSubmit = e.length > 0, this.model.get("live") && (this.throttledSend || (this.throttledSend = Ze.throttle(() => {
                    const n = t.getSanitizedValue();
                    if (n.length === 0) return;
                    const i = {
                            action: "write-live",
                            entry: n
                        },
                        o = this.model.get("textKey");
                    o !== void 0 && (i.textKey = o, i.val = n), this.triggerMethod("client:message", i)
                }, 500)), this.throttledSend())
            },
            onChildviewInputSubmit() {
                let t = this.inputComponent.getValue(),
                    e = this.inputComponent.getSanitizedValue();
                if (this.model.setUpdate({
                        error: null
                    }), e.length === 0 && !this.model.get("allowEmpty")) return this.model.setUpdate({
                    error: this.model.get("strings").ERROR_NOTHING_ENTERED
                }), !1;
                t.length > this.model.get("maxLength") && (this.inputComponent.setValue(t.substr(0, this.model.get("maxLength"))), t = this.inputComponent.getValue(), e = this.inputComponent.getSanitizedValue()), this.shouldSubmit = !1;
                const n = {
                        action: "write",
                        entry: e
                    },
                    i = this.model.get("textKey");
                return i && (n.textKey = i, n.val = e), this.triggerMethod("client:message", n), this.model.get("isAudience") ? this.model.get("repeating") ? this.inputComponent.clearInput() : (this.audienceEntry = e, this.entryId = this.model.get("entryId") || 0, this.model.setUpdate({
                    entry: this.audienceEntry,
                    shotId: this.entryId
                })) : this.model.get("repeating") || this.$el.find(".enterSingleTextFieldset").prop("disabled", !0), !1
            },
            onTextFilterError() {
                this.model.setUpdate({
                    error: this.model.get("strings").ERROR_REJECTED_TEXT
                })
            },
            onChildviewChildviewButtonSuggestion() {
                const t = this.model.get("suggestions"),
                    e = this.inputComponent.getSanitizedValue(),
                    n = Ze.without(t, e);
                return this.inputComponent.setValue(Ze.shuffle(n)[0]), !1
            },
            onChildviewChildviewButtonChoose(t) {
                return this.triggerMethod("client:message", {
                    action: t.get("key")
                }), !1
            },
            onChildviewChildviewButtonHelp() {
                return this.triggerMethod("client:message", {
                    action: "help"
                }), !1
            }
        });
    xt.View.extend({
        model: new at.Model({}),
        myViewOptions: ["width", "height", "sketchOptions"],
        template: Ze.template(`
        <h1 class='title'>ImageView</h1>
        <img class='imageData'>
    `),
        initialize(t) {
            this.mergeOptions(t, this.myViewOptions), this.model.on({
                "change:lines": this.setImageFromLines.bind(this)
            })
        },
        bindings: {
            ".title": {
                observe: "title",
                visible: !0,
                updateView: !0
            },
            ".imageData": {
                attributes: [{
                    name: "src",
                    observe: "src"
                }]
            }
        },
        setImageFromLines() {
            const t = this.getOption("width") || 640,
                e = this.getOption("height") || 640,
                n = this.getOption("sketchOptions"),
                i = this.model.get("lines") || [];
            if (!i.length || !n) return;
            const o = new wh(t, e, n);
            o.setLines(i), this.model.set("src", o.canvas.toDataURL("image/png"))
        },
        onRender() {
            this.stickit()
        }
    });
    const kc = xt.View.extend({
        appId: "legacymain",
        appTag: "legacymain",
        template: null,
        client: null,
        initialize(t) {
            this.client = t.client, this.mergeOptions(t, ["appId", "appTag"]), this.model = new at.Model({});
            const e = this.client.parseEntities();
            this.model.set(e), this.model.on("change", this.controllerUpdate, this), this.model.on("change", () => {
                this.update().catch(this.caughtError)
            }), this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.on("client:connection", this.onConnectionMessageWithContext), this.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.on("client:disconnected", this.onDisconnectedWithContext)
        },
        render() {
            this.model.set("username", Mt.safeText(this.client.name), {
                silent: !0
            }), this.$el.html(this.template(this.model.toJSON())), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
        },
        onEntityDidChange(t, e) {
            this.model.unset(t, {
                silent: !0
            }), this.model.set(t, e)
        },
        controllerUpdate() {
            const t = this.model.get("room") || {},
                e = t.state || "";
            let n = t.lobbyState;
            !n && e.indexOf("_") !== -1 && (n = t.state.split("_")[1]), n === "PostGame" || e === "Credits" || e === "GameOver" || e === "PostGame" || e === "DayEnd" || t.gameResults ? ri.isInitialized ? ri.show() : ri.init(this.getOption("appTag")).then(() => {
                ri.show()
            }) : ri.hide(), t.platformId && en.setTag(`platform-${t.platformId}`)
        },
        async update() {
            return null
        },
        caughtError(t) {
            throw t
        },
        onAttach() {
            this.update().catch(this.caughtError), be(".gallery-link").click(this.artifactClicked.bind(this)), this.client.isRole("broadcaster") && this.showTwitchBroadcasterDialog(20 * 1e3)
        },
        showTwitchBroadcasterDialog(t) {
            let e = `<div class='icon-${this.client.roles.broadcaster.platform}'>${this.client.roles.broadcaster.name}</div>`;
            e += "<div class='success'>You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.</div>", this.lacksAudience ? e += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (e += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), kt.show("custom", {
                html: e,
                position: "bottom",
                timer: t,
                backdrop: "transparent",
                customClass: {
                    container: "jbgTwitchContainer",
                    popup: "jbgTwitchPopup",
                    htmlContainer: "jbgTwitchContent",
                    closeButton: "jbgCloseButton"
                },
                showCloseButton: !0,
                closeButtonHtml: '<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path><path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" /></svg >',
                showConfirmButton: !1,
                showClass: {
                    popup: "jbgTwitchShow"
                },
                hideClass: {
                    popup: "jbgTwitchHide"
                }
            })
        },
        onBeforeDestroy() {
            this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext)
        },
        artifactClicked() {
            vi.setAsViewed(0)
        },
        showScreen(t, e) {
            const n = be(t);
            return this.activeScreen && t === this.activeScreen || (this.activeScreen && (be(this.activeScreen).fadeOut("fast", () => {}), be(this.activeScreen).show(), be(this.activeScreen).addClass("pt-page-off")), n.hide(), n.removeClass("pt-page-off"), n.removeClass("pt-page-moveToLeft"), n.fadeIn("fast", () => {
                e && e()
            }), this.activeScreen = t, this.onResize()), !1
        },
        notify() {
            kt.vibrate()
        },
        onRoomWasDestroyed() {
            en.remove("roomCode"), en.remove("reconnect"), kt.show("error", {
                titleText: "Disconnected",
                text: "Thanks for playing!",
                willClose: () => {
                    window.location.reload(!0)
                }
            })
        },
        onDisconnected() {
            kt.show("error", {
                titleText: "Disconnected",
                text: "You have been disconnected.",
                willClose: () => {
                    window.location.reload(!0)
                }
            })
        },
        onConnectionMessage(t) {
            const e = `${t.status} ${t.attempt?`${t.attempt}/5'`:""}`;
            if (kt.show("toast", {
                    text: e
                }), t.status === "connected") {
                const n = this.client.parseEntities();
                this.model.set(n)
            }
        },
        onResize() {
            const t = be("#player").outerHeight(!0) || 0,
                e = ri.isVisible ? be("#slide-in-banner").outerHeight(!0) : 0,
                n = be(window).width(),
                i = be(window).height() - t;
            be(`.${this.getOption("appTag")}-page`).css("height", i - e), be(`.${this.getOption("appTag")}-page`).attr("height", i - e), be(`.${this.getOption("appTag")}-page`).css("top", t), be(`.${this.getOption("appTag")}-page`).css("width", n), be(`.${this.getOption("appTag")}-page`).attr("width", n)
        }
    });
    class g_ {
        constructor(e) {
            it(this, "topNode");
            this.topNode = e
        }
        reset() {
            this.nodeStack = [this.topNode], this.resetNode(this.topNode), this.topNode.e.show()
        }
        resetNode(e) {
            e.e.hide(), e.branches && e.branches.forEach(n => this.resetNode(n.node))
        }
        input(e) {
            if (e === "back") {
                if (this.nodeStack.length <= 1) return;
                this.nodeStack.pop().e.hide(), this.nodeStack[this.nodeStack.length - 1].e.show();
                return
            }
            const n = this.nodeStack[this.nodeStack.length - 1];
            !n.branches || n.branches.forEach(i => {
                if (i.input === e) {
                    this.nodeStack[this.nodeStack.length - 1].e.hide();
                    const d = i.node;
                    d.e.show(), this.nodeStack.push(d)
                }
            })
        }
    }
    const m_ = `<div id="controller" class="state-controller controller-content">
    <div id="title" class="lobbyTitle">title</div>
    <div id="vipMenu" class="vipMenu">
        <div id="choices" class="choicesContainer">choices</div>
    </div>
    <div class="characterSelect">
        <div id="charactersPrompt" class="charactersPrompt">
            <span id="charactersPromptText" class="charactersPromptText"></span>
        </div>
        <div id="characters" class="charactersContainer"></div>
    </div>
    <div id="artifactId" class="artifactContainer text">
        <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
            <button id="artifactButton" class="artifactButton"></button>
        </a>
    </div>
</div>`,
        v_ = ai.extend({
            defaults: {
                canChangeName: !1,
                playerIsVIP: !1,
                playerCanStartGame: !1,
                playerCanCensor: !1,
                gameCanStart: !1,
                gameIsStarting: !1,
                gameEnded: !1,
                game: {
                    familyFriendly: !1,
                    extendedTimers: !1,
                    requireTwitch: !1,
                    controllerOnly: !1,
                    skipTutorials: !1
                },
                choices: [],
                artifact: null,
                characters: null,
                censorablePlayers: [],
                playerCanDoEpisodes: !1,
                playerCanReport: !1,
                playerCanViewAuthor: !1,
                lastUGCResult: null,
                history: [],
                activeContentId: null,
                formattedActiveContentId: null,
                isLocal: !1,
                strings: {
                    wait: "Sit back and relax!",
                    vip_waiting: "Waiting for all players to join",
                    vip_canStart: "Press this button when everybody has joined",
                    vip_cancel: "Press this button to cancel game start",
                    vip_postgame: "What would you like to do now?",
                    vip_episodes_menu: "Episodes Menu",
                    vip_episodes_unload: "Unload Episode",
                    vip_episodes_report: "Report Episode",
                    vip_episodes_warning: "Warning: user generated content is not rated",
                    vip_episodes_load: "Load an episode by id:",
                    vip_episodes_select: "Or select an episode:",
                    vip_episodes_back: "Back",
                    vip_episodes_submit: "SUBMIT",
                    vip_episodes_view_author: "View Author",
                    button_start: "Everybody's In",
                    button_cancel: "Cancel",
                    button_changename: "Change Name",
                    button_sameplayers: "Same Players",
                    button_newplayers: "New Players",
                    prompt_entername: "Enter your name",
                    prompt_choosecharacter: "Select your character",
                    button_censorOptions: "Censor Options",
                    censor_prompt: ""
                }
            }
        }),
        y_ = xt.View.extend({
            tagName: "button",
            template: Ze.template('<span class="flex-item"></span>'),
            className() {
                return `characters ${this.model.get("name")}`
            },
            events: {
                click: "onCharacterClick"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "bgcolor",
                        onGet(t) {
                            return t ? `background-color: ${t};` : ""
                        }
                    }, {
                        name: "aria-label",
                        observe: "name"
                    }, {
                        name: "disabled",
                        observe: "available",
                        onGet(t) {
                            return t !== void 0 ? !t : null
                        }
                    }],
                    classes: {
                        active: "active",
                        selected: {
                            observe: "selected",
                            onGet(t) {
                                return t
                            }
                        },
                        disabled: {
                            observe: "available",
                            onGet(t) {
                                return !t
                            }
                        }
                    }
                }
            },
            onCharacterClick() {
                this.trigger("character:click", this.model)
            },
            onRender() {
                this.stickit()
            }
        }),
        b_ = xt.View.extend({
            className: "Lobby scrollable",
            template: Ze.template(m_),
            model: new v_,
            titleComponent: null,
            choicesListView: null,
            charactersListView: null,
            regions: {
                title: "#title",
                choices: "#choices",
                characters: "#characters"
            },
            events: {
                "click .choice-button": "onButtonClick",
                "click .artifactLink": "onArtifactClick"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return !t || !t.bgColor ? "" : `background-color: ${t.bgColor};`
                        }
                    }, {
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return t ? t.join(" ") : ""
                        }
                    }]
                },
                ".artifactContainer": {
                    observe: "artifact",
                    visible: !0
                },
                ".artifactLink": {
                    attributes: [{
                        name: "href",
                        observe: "artifact",
                        onGet(t) {
                            if (!t) return null;
                            let e = "games.jackbox.tv";
                            return t.rootId.indexOf("test") !== -1 && (e = "games-test.jackbox.tv"), `https://${e}/artifact/${t.categoryId}/${t.artifactId}/`
                        }
                    }]
                },
                ".choice-button": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return t && t.buttonColor ? `background-color: ${t.buttonColor}` : null
                        }
                    }]
                },
                ".characterSelect": {
                    observe: "characters",
                    visible: !0
                },
                ".charactersPrompt": {
                    observe: "characters",
                    visible: !0,
                    onGet(t) {
                        return t && !Ze.isEmpty(t)
                    }
                },
                ".charactersPromptText": {
                    observe: "strings",
                    onGet() {
                        return this.getOption("strings").prompt_choosecharacter
                    }
                }
            },
            strings: {},
            initialize() {
                this.titleComponent = new Ui({
                    model: new at.Model({})
                }), this.choicesListView = this.choicesListView || new mi, this.charactersListView = new xt.CollectionView({
                    childView: y_,
                    className: "charactersList",
                    collection: new at.Collection
                }), this.listenTo(this.model, "change", this.update, this)
            },
            update() {
                if (this.strings = this.model.get("strings"), this.choicesListView.collection.reset(), this.titleComponent.model.set("html", this.getOption("strings").wait), this.model.get("playerIsVIP") && (this.model.get("gameCanStart") ? this.model.get("playerCanStartGame") && (this.model.get("gameIsStarting") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_cancel), this.choicesListView.collection.add({
                        className: "vipCancel",
                        html: this.getOption("strings").button_cancel,
                        action: "cancel"
                    })) : this.model.get("gameFinished") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_postgame), this.choicesListView.collection.add({
                        html: this.getOption("strings").button_sameplayers,
                        action: "PostGame_Continue"
                    }), this.choicesListView.collection.add({
                        html: this.getOption("strings").button_newplayers,
                        action: "PostGame_NewGame"
                    })) : (this.titleComponent.model.set("html", this.getOption("strings").vip_canStart), this.choicesListView.collection.add({
                        className: "vipStart",
                        html: this.getOption("strings").button_start,
                        action: "start"
                    }), this.model.get("playerCanCensor") && this.model.get("censorablePlayers").length > 0 && this.choicesListView.collection.add({
                        className: "vipCensorOptions",
                        html: this.getOption("strings").button_censorOptions,
                        action: "censorOptions"
                    }))) : this.titleComponent.model.set("html", this.getOption("strings").vip_waiting)), this.model.get("playerCanDoEpisodes")) {
                    if (this.model.get("activeContentId")) {
                        const n = this.model.get("activeContentId"),
                            i = this.model.get("history").find(d => n === (d.remoteContentId || d.localContentId)),
                            o = i && i.metadata ? Mt.htmlUnescape(i.metadata.title) : null;
                        o && this.choicesListView.collection.add({
                            type: "text",
                            text: o
                        }), this.choicesListView.collection.add({
                            html: this.getOption("strings").vip_episodes_unload,
                            action: "ugc-unload",
                            block: !1
                        }), this.model.get("playerCanReport") && this.choicesListView.collection.add({
                            html: this.getOption("strings").vip_episodes_report,
                            action: "ugc-report",
                            block: !1
                        }), this.model.get("playerCanViewAuthor") && this.choicesListView.collection.add({
                            html: this.getOption("strings").vip_episodes_view_author,
                            action: "ugc-view-author",
                            block: !1
                        })
                    } else this.choicesListView.collection.add({
                        className: "vipEpisodesMenu",
                        html: this.getOption("strings").vip_episodes_menu,
                        action: "ugc"
                    });
                    const e = this.model.get("lastUGCResult");
                    e && e.error && this.lastUGCResultId !== e.id && (kt.show("alert", {
                        text: e.error
                    }), this.lastUGCResultId = e.id)
                }
                this.model.get("canChangeName") && this.choicesListView.collection.add({
                    html: this.getOption("strings").button_changename,
                    action: "changeName"
                }), this.model.get("choices") && this.choicesListView.collection.add(this.model.get("choices"));
                const t = this.model.get("characters") || [];
                this.charactersListView.collection.set(Ze.map(t, e => {
                    const n = this.model.get("playerInfo") || {},
                        i = e;
                    return i.bgcolor = n.buttonColor, i.selected = n.avatar === i.name, i
                })), this.stickit()
            },
            onRender() {
                this.showChildView("title", this.titleComponent), this.showChildView("choices", this.choicesListView), this.showChildView("characters", this.charactersListView), this.update()
            },
            onArtifactClick() {
                this.triggerMethod("track:event", {
                    category: "PostGame",
                    action: "galleryClicked"
                }), vi.setAsViewed(0)
            },
            async onButtonClick(t) {
                const e = this;
                t.preventDefault();
                const i = be(t.currentTarget).data("action");
                if (i !== "back" && i !== "censorConfirm" && i !== "activateContentId")
                    if (i === "changeName") try {
                            const o = await kt.show("custom", {
                                input: "text",
                                title: this.getOption("strings").prompt_entername,
                                customClass: {
                                    input: "playerName"
                                },
                                inputAttributes: {
                                    maxlength: 12
                                },
                                inputValidator: d => d ? d.length > 12 ? "Limit 12 characters" : null : "You need to write something!"
                            });
                            if (o.dismiss) return;
                            this.triggerMethod("client:message", {
                                name: o.value
                            })
                        } catch {} else if (i === "censorOptions") kt.show("custom", {
                            target: this.el,
                            html: "",
                            confirmButtonText: this.model.get("strings").button_cancel,
                            customClass: {
                                popup: "censorOptionsModal",
                                confirmButton: "cancelButton"
                            },
                            didOpen() {
                                const o = new mi({
                                        el: ".censorOptionsModal",
                                        action: "censor",
                                        collection: new at.Collection
                                    }),
                                    d = [{
                                        type: "text",
                                        className: "prompt",
                                        html: e.model.get("strings").censor_prompt
                                    }, ...e.model.get("censorablePlayers").map(m => ({
                                        action: "censorConfirm",
                                        html: m.name,
                                        key: m.id
                                    }))];
                                o.collection.set(d), o.render(), e.listenTo(o, "childview:button:censorConfirm", e.censorPlayer)
                            }
                        });
                        else if (i === "ugc-unload") this.triggerMethod("client:message", {
                    clearContentId: !0
                });
                else if (i === "ugc-report") {
                    const o = "http://support.jackboxgames.com/",
                        d = this.model.get("formattedActiveContentId");
                    window.open(`${o}?episodeID=${d}`, "_blank")
                } else i === "ugc-view-author" ? this.triggerMethod("client:message", {
                    viewAuthor: !0
                }) : i === "ugc" ? kt.show("custom", {
                    target: this.el,
                    html: "",
                    showConfirmButton: !1,
                    customClass: {
                        popup: "episodesModal"
                    },
                    background: e.model.get("playerInfo") && e.model.get("playerInfo").bgColor ? e.model.get("playerInfo").bgColor : null,
                    padding: "10px 5px",
                    didOpen: () => {
                        const o = new mi({
                            el: ".episodesModal",
                            action: "episode",
                            collection: new at.Collection([])
                        });
                        o.collection.add({
                            html: this.model.get("strings").vip_episodes_back || "Back",
                            action: "back",
                            className: "backButton"
                        }), o.collection.add({
                            type: "text",
                            html: this.model.get("strings").vip_episodes_load || "Load an episode by id:",
                            className: "header"
                        }), o.collection.add({
                            type: "input",
                            preventAutosize: !0,
                            placeholder: "???-????",
                            inlineSubmit: !0,
                            inlineSubmitText: this.model.get("strings").vip_episodes_submit || "SUBMIT",
                            className: "lobbyUgcInput"
                        }), o.collection.add({
                            type: "text",
                            html: this.model.get("strings").vip_episodes_warning || "Warning: user generated content is not rated",
                            className: "danger"
                        }), e.model.get("history").length && (o.collection.add({
                            type: "text",
                            html: this.model.get("strings").vip_episodes_select || "Or select an episode:",
                            className: "episodesListHeader"
                        }), o.collection.add(e.model.get("history").map(d => ({
                            action: "activateContentId",
                            html: d.remoteContentId ? `${d.metadata.title}<br/>${d.formattedRemoteContentId}` : `${d.metadata.title}`,
                            key: d.remoteContentId || d.localContentId
                        })))), o.render(), be(".lobbyUgcInput").mask("aaa-aaaa", {
                            placeholder: "???-????"
                        }), e.listenTo(o, "childview:button:activateContentId", e.activateContentId), e.listenTo(o, "childview:button:back", () => {
                            kt.close()
                        }), e.listenTo(o, "childview:input:submit", e.activateContentIdFromInput)
                    }
                }) : this.triggerMethod("client:message", {
                    action: i
                })
            },
            censorPlayer(t) {
                kt.close(), this.triggerMethod("client:message", {
                    action: "censor",
                    id: t.get("key")
                })
            },
            activateContentId(t) {
                kt.close(), this.triggerMethod("client:message", {
                    activateContentId: !0,
                    contentId: t.get("key")
                })
            },
            activateContentIdFromInput(t) {
                (t.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase() || "").length < 7 || (this.triggerMethod("client:message", {
                    activateContentId: !0,
                    contentId: t.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase()
                }), kt.close())
            },
            onChildviewChildviewCharacterClick(t) {
                t.get("available") && !t.get("selected") && (this.triggerMethod("client:message", {
                    action: "avatar",
                    name: t.get("name")
                }), this.charactersListView.collection.forEach(e => {
                    e.unset("active"), e.set("bgcolor", this.model.get("playerInfo").buttonColor)
                }), t.set("active", !0), t.set("bgcolor", this.model.get("playerInfo").textColor))
            }
        }),
        w_ = `<div id="image" class="logo logo-image"></div>
<div id="message" class="message"><h2 class="messageText"></h2></div>
<div id="action" class="action"></div>
<div id="artifactId" class="artifactContainer text">
    <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
        <button id="artifactButton" class="artifactButton"></button>
    </a>
</div>
`,
        C_ = ai.extend({
            defaults: {
                message: {
                    text: null
                },
                classes: [],
                artifact: null
            }
        }),
        __ = xt.View.extend({
            className: "Logo",
            template: Ze.template(w_),
            model: new C_,
            events: {
                touchstart: "onTouchStart",
                "click .artifactButton": "onArtifactClick"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return (t || []).join(" ")
                        }
                    }]
                },
                ".message": {
                    attributes: [{
                        name: "style",
                        observe: "message",
                        onGet(t) {
                            let e = "";
                            return t && (t.html || t.text) || (e += "display: none;"), e
                        }
                    }]
                },
                ".messageText": {
                    observe: "message",
                    updateMethod: "html",
                    onGet(t) {
                        return !t || !t.html && !t.text ? null : t.html ? t.html : be("<div />").text(t.text).html()
                    }
                },
                "#action": "action",
                ".artifactContainer": {
                    observe: "artifact",
                    visible: !0
                },
                ".artifactLink": {
                    attributes: [{
                        name: "href",
                        observe: "artifact",
                        onGet(t) {
                            const e = t || {
                                rootId: "",
                                categoryId: "",
                                artifactId: ""
                            };
                            let n = "games.jackbox.tv";
                            return e.rootId.indexOf("test") !== -1 && (n = "games-test.jackbox.tv"), `https://${n}/artifact/${e.categoryId}/${e.artifactId}/`
                        }
                    }]
                }
            },
            onRender() {
                this.stickit()
            },
            onTouchStart(t) {
                t.target.tagName.toLowerCase() !== "button" && t.preventDefault()
            },
            onArtifactClick() {
                this.triggerMethod("track:event", {
                    category: "PostGame",
                    action: "galleryClicked"
                }), vi.setAsViewed(0)
            }
        }),
        Hs = {
            en: {
                LANGUAGE_NAME: "English",
                SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
                SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
                LANGUAGE: "Language",
                LOGIN: "Login",
                STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnected",
                STRING_ERROR_SERVER_ROOM_DESTROYED: "Thanks for playing!"
            },
            fr: {
                LANGUAGE_NAME: "Fran\xE7ais",
                SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
                SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
                LANGUAGE: "Langue",
                LOGIN: "Connexion",
                STRING_ERROR_SERVER_ROOM_DISCONNECTED: "D\xE9connect\xE9",
                STRING_ERROR_SERVER_ROOM_DESTROYED: "Vous avez \xE9t\xE9 d\xE9connect\xE9"
            },
            it: {
                LANGUAGE_NAME: "Italiano",
                SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
                SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
                LANGUAGE: "Lingua",
                LOGIN: "Accesso",
                STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnesso",
                STRING_ERROR_SERVER_ROOM_DESTROYED: "Disconnesso"
            },
            de: {
                LANGUAGE_NAME: "Deutsche",
                SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
                SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
                LANGUAGE: "Sprache",
                LOGIN: "Login",
                STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Getrennt",
                STRING_ERROR_SERVER_ROOM_DESTROYED: "Getrennt"
            },
            es: {
                LANGUAGE_NAME: "Espa\xF1ol",
                SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
                SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
                LANGUAGE: "idioma",
                LOGIN: "Iniciar sesi\xF3n",
                STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Desconectado",
                STRING_ERROR_SERVER_ROOM_DESTROYED: "Desconectado"
            }
        },
        x_ = `<div id="player" class="playerTopBar">
    <div id="playericon" class="playerIcon"></div>
    <div id="playername" class="playerName controller-text"></div>
</div>`,
        E_ = xt.View.extend({
            className: "playerTopBarView",
            template: Ze.template(x_),
            model: new at.Model,
            bindings: {
                ":el": {
                    observe: ["username", "hidden"],
                    visible(t) {
                        return t[0] && !t[1]
                    },
                    attributes: [{
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return (t || []).join(" ")
                        }
                    }]
                },
                "#playername": {
                    observe: "username",
                    attributes: [{
                        name: "style",
                        observe: "textColor",
                        onGet(t) {
                            return t ? `color: ${t}` : ""
                        }
                    }]
                },
                ".playerTopBar": {
                    observe: "username",
                    visible: !0,
                    attributes: [{
                        name: "style",
                        observe: "topBarColor",
                        onGet(t) {
                            return t ? `background-color: ${t}` : ""
                        }
                    }]
                },
                "#playericon": {
                    observe: "avatar",
                    visible: !0,
                    attributes: [{
                        name: "class",
                        observe: "avatar"
                    }]
                }
            },
            onRender() {
                this.stickit()
            }
        }),
        S_ = `<div id="controller" class="state-controller controller-content">
    <div id="prompt" class="prompt text"></div>
    <div class="error text-danger"></div>
    <div id="choicesRegion"></div>
    <div id="chosen" class="chosen text"></div>
    <div class="makeSingleChoiceDone">
        <span class="doneText"></span>
    </div>
</div>`,
        k_ = ai.extend({
            defaults: {
                choiceId: void 0,
                type: "single",
                censorDialog: "none",
                chosen: null,
                choices: [],
                prompt: {},
                error: null,
                block: !0,
                classes: [],
                maxVotes: 16,
                doneText: {},
                announcePrompt: !1,
                countGroupName: null,
                strings: {
                    your_choice: "Thank you. Your choice: ",
                    censor_prompt: "Censor this?",
                    censor_confirm: "Yes, Censor!",
                    censor_cancel: "No!"
                }
            }
        }),
        T_ = xt.View.extend({
            className: "MakeSingleChoice scrollable",
            template: Ze.template(S_),
            model: new k_,
            sessionModule: "vote",
            sessionName: " Vote",
            regions: {
                prompt: "#prompt",
                choices: "#choicesRegion"
            },
            bindings: {
                ".chosen": {
                    observe: "chosen",
                    updateMethod: "html",
                    onGet(t) {
                        return t ? t.html ? t.html : be("<div />").text(t.text).html() : null
                    }
                },
                ".choices": {
                    observe: "chosen",
                    visible(t) {
                        return t === "" || t === null
                    }
                },
                ".error": {
                    observe: "error",
                    visible: !0,
                    updateView: !0
                },
                ".makeSingleChoiceDone": {
                    observe: "chosen",
                    visible(t) {
                        return t !== null && t !== ""
                    }
                },
                ".doneText": {
                    observe: "doneText",
                    updateMethod: "html",
                    onGet(t) {
                        return t ? t.html ? t.html : be("<div />").text(t.text).html() : null
                    }
                },
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return !t || !t.bgColor ? "" : `background-color: ${t.bgColor}`
                        }
                    }, {
                        name: "class",
                        observe: "classes",
                        onGet(t) {
                            return t ? t.join(" ") : ""
                        }
                    }]
                },
                ".choice-button": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return t && t.buttonColor ? `background-color:${t.buttonColor}` : null
                        }
                    }]
                }
            },
            initialize() {
                this.promptComponent = this.promptComponent || new Ui({
                    model: new at.Model
                }), this.choicesList = this.choicesList || new mi({
                    action: "choose",
                    collection: new at.Collection
                }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
            },
            onBeforeDestroy() {
                this.model.get("type") === "multiple" && this.onChildviewChildviewButtonSubmit()
            },
            update() {
                this.promptComponent.model.clear({
                    silent: !0
                }).set(this.model.get("prompt")), this.choicesList.options.block = this.model.get("block"), this.choicesList.collection.set(this.model.get("choices")), this.model.get("type") === "multiple" && Ze.all(this.model.get("choices"), t => !t.disabled) && this.choicesList.collection.push({
                    text: "Submit",
                    action: "submit",
                    block: !1
                }), this.model.get("isAudience") && ((this.model.get("choiceId") === void 0 || this.model.get("choiceId") !== this.getOption("choiceId")) && (this.selected = [], this.audienceChoice = void 0, this.votesLeft = void 0), this.selected.length > 0 && (this.model.get("type") === "multiple" ? this.choicesList.children.forEach(t => {
                    this.selected.find(e => e === t.getOption("index")) !== void 0 && t.model.set("selected", !0)
                }) : this.model.setUpdate({
                    chosen: this.displayAudienceChoice(this.selected),
                    choiceId: this.model.get("choiceId") || 0
                }))), this.choiceId = this.model.get("choiceId") || 0, this.stickit()
            },
            onRender() {
                this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.choicesList), this.stickit()
            },
            onAttach() {
                this.update(), kt.vibrate()
            },
            onChildviewChildviewButtonChoose(t) {
                const e = t.get("action") || "choose",
                    n = t.get("index"),
                    i = this.model.get("type");
                switch (this.choicesList.children.forEach(o => {
                        o.model.set("disabled", i === "single"), o.model.set("active", !1)
                    }), i) {
                    case "multiple":
                        if (this.model.get("toggle") ? t.set("selected", !t.get("selected")) : t.set("selected", !0), this.model.get("isAudience")) {
                            const o = [];
                            this.choicesList.children.forEach(d => {
                                d.model.get("selected") && o.push(d.getOption("index"))
                            }), this.selected = o
                        }
                        return !1;
                    case "repeating":
                        if (this.votesLeft === void 0 && (this.votesLeft = this.model.get("maxVotes")), this.delaySubmit || this.votesLeft <= 0 && this.model.get("isAudience")) return !1;
                        this.delaySubmit = !0, window.setTimeout(() => {
                            this.delaySubmit = !1
                        }, 101), this.votesLeft -= 1;
                        break;
                    case "single":
                        t.set("selected", !0), t.set("active", !0);
                        break
                }
                return this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                    action: e,
                    choice: n
                }) : this.model.get("isAudience") && (this.selected = [t.get("index")], this.triggerMethod("client:countGroup", {
                    name: this.model.get("countGroupName"),
                    vote: n
                }), i !== "repeating" && this.model.setUpdate({
                    chosen: this.displayAudienceChoice(this.selected),
                    choiceId: this.choiceId
                })), !1
            },
            displayAudienceChoice(t) {
                let e = "Thank you.";
                const n = t.map(o => {
                    const d = this.choicesList.children.find(m => m.model.get("index") === o);
                    return d ? d.model.get("html") || d.model.get("text") : ""
                });
                return t !== void 0 && this.model.get("strings") && (e = this.model.get("strings").your_choice + n.join(", ")), {
                    html: e
                }
            },
            onChildviewChildviewButtonCensor(t) {
                const e = t.get("index"),
                    n = t.get("html");
                if (this.model.get("censorDialog") === "confirm") t.get("isWarned") ? this.triggerMethod("client:message", {
                    action: "censor",
                    choice: e
                }) : t.set("isWarned", !0);
                else {
                    if (this.model.get("censorDialog") === "warning") return Rn.close(), Rn.fire({
                        customClass: {
                            popup: "Dialog",
                            container: "container",
                            content: "content",
                            title: "title",
                            closeButton: "button closeButton",
                            cancelButton: "button cancelButton",
                            confirmButton: "button confirmButton",
                            denyButton: "button denyButton"
                        },
                        title: this.model.get("strings").censor_prompt,
                        text: n,
                        showCancelButton: !0,
                        confirmButtonText: this.model.get("strings").censor_confirm,
                        cancelButtonText: this.model.get("strings").censor_cancel,
                        confirmButtonColor: "#900"
                    }).then(i => {
                        i.value && this.triggerMethod("client:message", {
                            action: "censor",
                            choice: e
                        })
                    }), !1;
                    this.triggerMethod("client:message", {
                        action: "censor",
                        choice: e
                    })
                }
                return !1
            },
            onChildviewChildviewButtonSubmit() {
                let t = [];
                this.choicesList.children.forEach(n => {
                    n.model.get("selected") && t.push(n.getOption("index"))
                });
                const e = t.join(",");
                this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                    action: "submit",
                    choice: e
                }) : this.model.get("isAudience") && (this.triggerMethod("client:countGroup", {
                    name: this.model.get("countGroupName"),
                    vote: e
                }), this.model.get("type") !== "repeating" && (t = [], this.choicesList.children.forEach(n => {
                    n.model.get("selected") && t.push(n.getOption("index"))
                }), this.selected = t, this.model.setUpdate({
                    chosen: this.displayAudienceChoice(this.selected),
                    choiceId: this.choiceId
                })))
            }
        });
    /**!
     * Sortable 1.15.0
     * @author	RubaXa   <trash@rubaxa.org>
     * @author	owenm    <owen23355@gmail.com>
     * @license MIT
     */
    function Tc(t, e) {
        var n = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(t);
            e && (i = i.filter(function(o) {
                return Object.getOwnPropertyDescriptor(t, o).enumerable
            })), n.push.apply(n, i)
        }
        return n
    }

    function Un(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e] != null ? arguments[e] : {};
            e % 2 ? Tc(Object(n), !0).forEach(function(i) {
                A_(t, i, n[i])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Tc(Object(n)).forEach(function(i) {
                Object.defineProperty(t, i, Object.getOwnPropertyDescriptor(n, i))
            })
        }
        return t
    }

    function Zs(t) {
        return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Zs = function(e) {
            return typeof e
        } : Zs = function(e) {
            return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }, Zs(t)
    }

    function A_(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n, t
    }

    function oi() {
        return oi = Object.assign || function(t) {
            for (var e = 1; e < arguments.length; e++) {
                var n = arguments[e];
                for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i])
            }
            return t
        }, oi.apply(this, arguments)
    }

    function O_(t, e) {
        if (t == null) return {};
        var n = {},
            i = Object.keys(t),
            o, d;
        for (d = 0; d < i.length; d++) o = i[d], !(e.indexOf(o) >= 0) && (n[o] = t[o]);
        return n
    }

    function R_(t, e) {
        if (t == null) return {};
        var n = O_(t, e),
            i, o;
        if (Object.getOwnPropertySymbols) {
            var d = Object.getOwnPropertySymbols(t);
            for (o = 0; o < d.length; o++) i = d[o], !(e.indexOf(i) >= 0) && (!Object.prototype.propertyIsEnumerable.call(t, i) || (n[i] = t[i]))
        }
        return n
    }
    var I_ = "1.15.0";

    function si(t) {
        if (typeof window < "u" && window.navigator) return !!navigator.userAgent.match(t)
    }
    var li = si(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i),
        ws = si(/Edge/i),
        Ac = si(/firefox/i),
        us = si(/safari/i) && !si(/chrome/i) && !si(/android/i),
        Ch = si(/iP(ad|od|hone)/i),
        _h = si(/chrome/i) && si(/android/i),
        xh = {
            capture: !1,
            passive: !1
        };

    function _t(t, e, n) {
        t.addEventListener(e, n, !li && xh)
    }

    function bt(t, e, n) {
        t.removeEventListener(e, n, !li && xh)
    }

    function uo(t, e) {
        if (!!e) {
            if (e[0] === ">" && (e = e.substring(1)), t) try {
                if (t.matches) return t.matches(e);
                if (t.msMatchesSelector) return t.msMatchesSelector(e);
                if (t.webkitMatchesSelector) return t.webkitMatchesSelector(e)
            } catch {
                return !1
            }
            return !1
        }
    }

    function D_(t) {
        return t.host && t !== document && t.host.nodeType ? t.host : t.parentNode
    }

    function qn(t, e, n, i) {
        if (t) {
            n = n || document;
            do {
                if (e != null && (e[0] === ">" ? t.parentNode === n && uo(t, e) : uo(t, e)) || i && t === n) return t;
                if (t === n) break
            } while (t = D_(t))
        }
        return null
    }
    var Oc = /\s+/g;

    function xn(t, e, n) {
        if (t && e)
            if (t.classList) t.classList[n ? "add" : "remove"](e);
            else {
                var i = (" " + t.className + " ").replace(Oc, " ").replace(" " + e + " ", " ");
                t.className = (i + (n ? " " + e : "")).replace(Oc, " ")
            }
    }

    function nt(t, e, n) {
        var i = t && t.style;
        if (i) {
            if (n === void 0) return document.defaultView && document.defaultView.getComputedStyle ? n = document.defaultView.getComputedStyle(t, "") : t.currentStyle && (n = t.currentStyle), e === void 0 ? n : n[e];
            !(e in i) && e.indexOf("webkit") === -1 && (e = "-webkit-" + e), i[e] = n + (typeof n == "string" ? "" : "px")
        }
    }

    function br(t, e) {
        var n = "";
        if (typeof t == "string") n = t;
        else
            do {
                var i = nt(t, "transform");
                i && i !== "none" && (n = i + " " + n)
            } while (!e && (t = t.parentNode));
        var o = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
        return o && new o(n)
    }

    function Eh(t, e, n) {
        if (t) {
            var i = t.getElementsByTagName(e),
                o = 0,
                d = i.length;
            if (n)
                for (; o < d; o++) n(i[o], o);
            return i
        }
        return []
    }

    function Fn() {
        var t = document.scrollingElement;
        return t || document.documentElement
    }

    function Kt(t, e, n, i, o) {
        if (!(!t.getBoundingClientRect && t !== window)) {
            var d, m, C, S, T, D, V;
            if (t !== window && t.parentNode && t !== Fn() ? (d = t.getBoundingClientRect(), m = d.top, C = d.left, S = d.bottom, T = d.right, D = d.height, V = d.width) : (m = 0, C = 0, S = window.innerHeight, T = window.innerWidth, D = window.innerHeight, V = window.innerWidth), (e || n) && t !== window && (o = o || t.parentNode, !li))
                do
                    if (o && o.getBoundingClientRect && (nt(o, "transform") !== "none" || n && nt(o, "position") !== "static")) {
                        var Y = o.getBoundingClientRect();
                        m -= Y.top + parseInt(nt(o, "border-top-width")), C -= Y.left + parseInt(nt(o, "border-left-width")), S = m + d.height, T = C + d.width;
                        break
                    } while (o = o.parentNode);
            if (i && t !== window) {
                var ie = br(o || t),
                    K = ie && ie.a,
                    re = ie && ie.d;
                ie && (m /= re, C /= K, V /= K, D /= re, S = m + D, T = C + V)
            }
            return {
                top: m,
                left: C,
                bottom: S,
                right: T,
                width: V,
                height: D
            }
        }
    }

    function Rc(t, e, n) {
        for (var i = gi(t, !0), o = Kt(t)[e]; i;) {
            var d = Kt(i)[n],
                m = void 0;
            if (n === "top" || n === "left" ? m = o >= d : m = o <= d, !m) return i;
            if (i === Fn()) break;
            i = gi(i, !1)
        }
        return !1
    }

    function xr(t, e, n, i) {
        for (var o = 0, d = 0, m = t.children; d < m.length;) {
            if (m[d].style.display !== "none" && m[d] !== Qe.ghost && (i || m[d] !== Qe.dragged) && qn(m[d], n.draggable, t, !1)) {
                if (o === e) return m[d];
                o++
            }
            d++
        }
        return null
    }

    function El(t, e) {
        for (var n = t.lastElementChild; n && (n === Qe.ghost || nt(n, "display") === "none" || e && !uo(n, e));) n = n.previousElementSibling;
        return n || null
    }

    function On(t, e) {
        var n = 0;
        if (!t || !t.parentNode) return -1;
        for (; t = t.previousElementSibling;) t.nodeName.toUpperCase() !== "TEMPLATE" && t !== Qe.clone && (!e || uo(t, e)) && n++;
        return n
    }

    function Ic(t) {
        var e = 0,
            n = 0,
            i = Fn();
        if (t)
            do {
                var o = br(t),
                    d = o.a,
                    m = o.d;
                e += t.scrollLeft * d, n += t.scrollTop * m
            } while (t !== i && (t = t.parentNode));
        return [e, n]
    }

    function M_(t, e) {
        for (var n in t)
            if (!!t.hasOwnProperty(n)) {
                for (var i in e)
                    if (e.hasOwnProperty(i) && e[i] === t[n][i]) return Number(n)
            } return -1
    }

    function gi(t, e) {
        if (!t || !t.getBoundingClientRect) return Fn();
        var n = t,
            i = !1;
        do
            if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {
                var o = nt(n);
                if (n.clientWidth < n.scrollWidth && (o.overflowX == "auto" || o.overflowX == "scroll") || n.clientHeight < n.scrollHeight && (o.overflowY == "auto" || o.overflowY == "scroll")) {
                    if (!n.getBoundingClientRect || n === document.body) return Fn();
                    if (i || e) return n;
                    i = !0
                }
            } while (n = n.parentNode);
        return Fn()
    }

    function L_(t, e) {
        if (t && e)
            for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        return t
    }

    function Ca(t, e) {
        return Math.round(t.top) === Math.round(e.top) && Math.round(t.left) === Math.round(e.left) && Math.round(t.height) === Math.round(e.height) && Math.round(t.width) === Math.round(e.width)
    }
    var hs;

    function Sh(t, e) {
        return function() {
            if (!hs) {
                var n = arguments,
                    i = this;
                n.length === 1 ? t.call(i, n[0]) : t.apply(i, n), hs = setTimeout(function() {
                    hs = void 0
                }, e)
            }
        }
    }

    function P_() {
        clearTimeout(hs), hs = void 0
    }

    function kh(t, e, n) {
        t.scrollLeft += e, t.scrollTop += n
    }

    function Th(t) {
        var e = window.Polymer,
            n = window.jQuery || window.Zepto;
        return e && e.dom ? e.dom(t).cloneNode(!0) : n ? n(t).clone(!0)[0] : t.cloneNode(!0)
    }
    var Sn = "Sortable" + new Date().getTime();

    function $_() {
        var t = [],
            e;
        return {
            captureAnimationState: function() {
                if (t = [], !!this.options.animation) {
                    var i = [].slice.call(this.el.children);
                    i.forEach(function(o) {
                        if (!(nt(o, "display") === "none" || o === Qe.ghost)) {
                            t.push({
                                target: o,
                                rect: Kt(o)
                            });
                            var d = Un({}, t[t.length - 1].rect);
                            if (o.thisAnimationDuration) {
                                var m = br(o, !0);
                                m && (d.top -= m.f, d.left -= m.e)
                            }
                            o.fromRect = d
                        }
                    })
                }
            },
            addAnimationState: function(i) {
                t.push(i)
            },
            removeAnimationState: function(i) {
                t.splice(M_(t, {
                    target: i
                }), 1)
            },
            animateAll: function(i) {
                var o = this;
                if (!this.options.animation) {
                    clearTimeout(e), typeof i == "function" && i();
                    return
                }
                var d = !1,
                    m = 0;
                t.forEach(function(C) {
                    var S = 0,
                        T = C.target,
                        D = T.fromRect,
                        V = Kt(T),
                        Y = T.prevFromRect,
                        ie = T.prevToRect,
                        K = C.rect,
                        re = br(T, !0);
                    re && (V.top -= re.f, V.left -= re.e), T.toRect = V, T.thisAnimationDuration && Ca(Y, V) && !Ca(D, V) && (K.top - V.top) / (K.left - V.left) === (D.top - V.top) / (D.left - V.left) && (S = V_(K, Y, ie, o.options)), Ca(V, D) || (T.prevFromRect = D, T.prevToRect = V, S || (S = o.options.animation), o.animate(T, K, V, S)), S && (d = !0, m = Math.max(m, S), clearTimeout(T.animationResetTimer), T.animationResetTimer = setTimeout(function() {
                        T.animationTime = 0, T.prevFromRect = null, T.fromRect = null, T.prevToRect = null, T.thisAnimationDuration = null
                    }, S), T.thisAnimationDuration = S)
                }), clearTimeout(e), d ? e = setTimeout(function() {
                    typeof i == "function" && i()
                }, m) : typeof i == "function" && i(), t = []
            },
            animate: function(i, o, d, m) {
                if (m) {
                    nt(i, "transition", ""), nt(i, "transform", "");
                    var C = br(this.el),
                        S = C && C.a,
                        T = C && C.d,
                        D = (o.left - d.left) / (S || 1),
                        V = (o.top - d.top) / (T || 1);
                    i.animatingX = !!D, i.animatingY = !!V, nt(i, "transform", "translate3d(" + D + "px," + V + "px,0)"), this.forRepaintDummy = N_(i), nt(i, "transition", "transform " + m + "ms" + (this.options.easing ? " " + this.options.easing : "")), nt(i, "transform", "translate3d(0,0,0)"), typeof i.animated == "number" && clearTimeout(i.animated), i.animated = setTimeout(function() {
                        nt(i, "transition", ""), nt(i, "transform", ""), i.animated = !1, i.animatingX = !1, i.animatingY = !1
                    }, m)
                }
            }
        }
    }

    function N_(t) {
        return t.offsetWidth
    }

    function V_(t, e, n, i) {
        return Math.sqrt(Math.pow(e.top - t.top, 2) + Math.pow(e.left - t.left, 2)) / Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) * i.animation
    }
    var cr = [],
        _a = {
            initializeByDefault: !0
        },
        Cs = {
            mount: function(e) {
                for (var n in _a) _a.hasOwnProperty(n) && !(n in e) && (e[n] = _a[n]);
                cr.forEach(function(i) {
                    if (i.pluginName === e.pluginName) throw "Sortable: Cannot mount plugin ".concat(e.pluginName, " more than once")
                }), cr.push(e)
            },
            pluginEvent: function(e, n, i) {
                var o = this;
                this.eventCanceled = !1, i.cancel = function() {
                    o.eventCanceled = !0
                };
                var d = e + "Global";
                cr.forEach(function(m) {
                    !n[m.pluginName] || (n[m.pluginName][d] && n[m.pluginName][d](Un({
                        sortable: n
                    }, i)), n.options[m.pluginName] && n[m.pluginName][e] && n[m.pluginName][e](Un({
                        sortable: n
                    }, i)))
                })
            },
            initializePlugins: function(e, n, i, o) {
                cr.forEach(function(C) {
                    var S = C.pluginName;
                    if (!(!e.options[S] && !C.initializeByDefault)) {
                        var T = new C(e, n, e.options);
                        T.sortable = e, T.options = e.options, e[S] = T, oi(i, T.defaults)
                    }
                });
                for (var d in e.options)
                    if (!!e.options.hasOwnProperty(d)) {
                        var m = this.modifyOption(e, d, e.options[d]);
                        typeof m < "u" && (e.options[d] = m)
                    }
            },
            getEventProperties: function(e, n) {
                var i = {};
                return cr.forEach(function(o) {
                    typeof o.eventProperties == "function" && oi(i, o.eventProperties.call(n[o.pluginName], e))
                }), i
            },
            modifyOption: function(e, n, i) {
                var o;
                return cr.forEach(function(d) {
                    !e[d.pluginName] || d.optionListeners && typeof d.optionListeners[n] == "function" && (o = d.optionListeners[n].call(e[d.pluginName], i))
                }), o
            }
        };

    function B_(t) {
        var e = t.sortable,
            n = t.rootEl,
            i = t.name,
            o = t.targetEl,
            d = t.cloneEl,
            m = t.toEl,
            C = t.fromEl,
            S = t.oldIndex,
            T = t.newIndex,
            D = t.oldDraggableIndex,
            V = t.newDraggableIndex,
            Y = t.originalEvent,
            ie = t.putSortable,
            K = t.extraEventProperties;
        if (e = e || n && n[Sn], !!e) {
            var re, v = e.options,
                P = "on" + i.charAt(0).toUpperCase() + i.substr(1);
            window.CustomEvent && !li && !ws ? re = new CustomEvent(i, {
                bubbles: !0,
                cancelable: !0
            }) : (re = document.createEvent("Event"), re.initEvent(i, !0, !0)), re.to = m || n, re.from = C || n, re.item = o || n, re.clone = d, re.oldIndex = S, re.newIndex = T, re.oldDraggableIndex = D, re.newDraggableIndex = V, re.originalEvent = Y, re.pullMode = ie ? ie.lastPutMode : void 0;
            var H = Un(Un({}, K), Cs.getEventProperties(i, e));
            for (var ae in H) re[ae] = H[ae];
            n && n.dispatchEvent(re), v[P] && v[P].call(e, re)
        }
    }
    var q_ = ["evt"],
        bn = function(e, n) {
            var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
                o = i.evt,
                d = R_(i, q_);
            Cs.pluginEvent.bind(Qe)(e, n, Un({
                dragEl: Ie,
                parentEl: qt,
                ghostEl: ut,
                rootEl: $t,
                nextEl: $i,
                lastDownEl: eo,
                cloneEl: Vt,
                cloneHidden: di,
                dragStarted: is,
                putSortable: tn,
                activeSortable: Qe.active,
                originalEvent: o,
                oldIndex: pr,
                oldDraggableIndex: ds,
                newIndex: En,
                newDraggableIndex: hi,
                hideGhostForTarget: Ih,
                unhideGhostForTarget: Dh,
                cloneNowHidden: function() {
                    di = !0
                },
                cloneNowShown: function() {
                    di = !1
                },
                dispatchSortableEvent: function(C) {
                    gn({
                        sortable: n,
                        name: C,
                        originalEvent: o
                    })
                }
            }, d))
        };

    function gn(t) {
        B_(Un({
            putSortable: tn,
            cloneEl: Vt,
            targetEl: Ie,
            rootEl: $t,
            oldIndex: pr,
            oldDraggableIndex: ds,
            newIndex: En,
            newDraggableIndex: hi
        }, t))
    }
    var Ie, qt, ut, $t, $i, eo, Vt, di, pr, En, ds, hi, Ws, tn, fr = !1,
        ho = !1,
        fo = [],
        Mi, Ln, xa, Ea, Dc, Mc, is, ur, fs, ps = !1,
        Xs = !1,
        to, ln, Sa = [],
        Ua = !1,
        po = [],
        To = typeof document < "u",
        Ys = Ch,
        Lc = ws || li ? "cssFloat" : "float",
        j_ = To && !_h && !Ch && "draggable" in document.createElement("div"),
        Ah = function() {
            if (!!To) {
                if (li) return !1;
                var t = document.createElement("x");
                return t.style.cssText = "pointer-events:auto", t.style.pointerEvents === "auto"
            }
        }(),
        Oh = function(e, n) {
            var i = nt(e),
                o = parseInt(i.width) - parseInt(i.paddingLeft) - parseInt(i.paddingRight) - parseInt(i.borderLeftWidth) - parseInt(i.borderRightWidth),
                d = xr(e, 0, n),
                m = xr(e, 1, n),
                C = d && nt(d),
                S = m && nt(m),
                T = C && parseInt(C.marginLeft) + parseInt(C.marginRight) + Kt(d).width,
                D = S && parseInt(S.marginLeft) + parseInt(S.marginRight) + Kt(m).width;
            if (i.display === "flex") return i.flexDirection === "column" || i.flexDirection === "column-reverse" ? "vertical" : "horizontal";
            if (i.display === "grid") return i.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
            if (d && C.float && C.float !== "none") {
                var V = C.float === "left" ? "left" : "right";
                return m && (S.clear === "both" || S.clear === V) ? "vertical" : "horizontal"
            }
            return d && (C.display === "block" || C.display === "flex" || C.display === "table" || C.display === "grid" || T >= o && i[Lc] === "none" || m && i[Lc] === "none" && T + D > o) ? "vertical" : "horizontal"
        },
        F_ = function(e, n, i) {
            var o = i ? e.left : e.top,
                d = i ? e.right : e.bottom,
                m = i ? e.width : e.height,
                C = i ? n.left : n.top,
                S = i ? n.right : n.bottom,
                T = i ? n.width : n.height;
            return o === C || d === S || o + m / 2 === C + T / 2
        },
        U_ = function(e, n) {
            var i;
            return fo.some(function(o) {
                var d = o[Sn].options.emptyInsertThreshold;
                if (!(!d || El(o))) {
                    var m = Kt(o),
                        C = e >= m.left - d && e <= m.right + d,
                        S = n >= m.top - d && n <= m.bottom + d;
                    if (C && S) return i = o
                }
            }), i
        },
        Rh = function(e) {
            function n(d, m) {
                return function(C, S, T, D) {
                    var V = C.options.group.name && S.options.group.name && C.options.group.name === S.options.group.name;
                    if (d == null && (m || V)) return !0;
                    if (d == null || d === !1) return !1;
                    if (m && d === "clone") return d;
                    if (typeof d == "function") return n(d(C, S, T, D), m)(C, S, T, D);
                    var Y = (m ? C : S).options.group.name;
                    return d === !0 || typeof d == "string" && d === Y || d.join && d.indexOf(Y) > -1
                }
            }
            var i = {},
                o = e.group;
            (!o || Zs(o) != "object") && (o = {
                name: o
            }), i.name = o.name, i.checkPull = n(o.pull, !0), i.checkPut = n(o.put), i.revertClone = o.revertClone, e.group = i
        },
        Ih = function() {
            !Ah && ut && nt(ut, "display", "none")
        },
        Dh = function() {
            !Ah && ut && nt(ut, "display", "")
        };
    To && !_h && document.addEventListener("click", function(t) {
        if (ho) return t.preventDefault(), t.stopPropagation && t.stopPropagation(), t.stopImmediatePropagation && t.stopImmediatePropagation(), ho = !1, !1
    }, !0);
    var Li = function(e) {
            if (Ie) {
                e = e.touches ? e.touches[0] : e;
                var n = U_(e.clientX, e.clientY);
                if (n) {
                    var i = {};
                    for (var o in e) e.hasOwnProperty(o) && (i[o] = e[o]);
                    i.target = i.rootEl = n, i.preventDefault = void 0, i.stopPropagation = void 0, n[Sn]._onDragOver(i)
                }
            }
        },
        z_ = function(e) {
            Ie && Ie.parentNode[Sn]._isOutsideThisEl(e.target)
        };

    function Qe(t, e) {
        if (!(t && t.nodeType && t.nodeType === 1)) throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(t));
        this.el = t, this.options = e = oi({}, e), t[Sn] = this;
        var n = {
            group: null,
            sort: !0,
            disabled: !1,
            store: null,
            handle: null,
            draggable: /^[uo]l$/i.test(t.nodeName) ? ">li" : ">*",
            swapThreshold: 1,
            invertSwap: !1,
            invertedSwapThreshold: null,
            removeCloneOnHide: !0,
            direction: function() {
                return Oh(t, this.options)
            },
            ghostClass: "sortable-ghost",
            chosenClass: "sortable-chosen",
            dragClass: "sortable-drag",
            ignore: "a, img",
            filter: null,
            preventOnFilter: !0,
            animation: 0,
            easing: null,
            setData: function(m, C) {
                m.setData("Text", C.textContent)
            },
            dropBubble: !1,
            dragoverBubble: !1,
            dataIdAttr: "data-id",
            delay: 0,
            delayOnTouchOnly: !1,
            touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
            forceFallback: !1,
            fallbackClass: "sortable-fallback",
            fallbackOnBody: !1,
            fallbackTolerance: 0,
            fallbackOffset: {
                x: 0,
                y: 0
            },
            supportPointer: Qe.supportPointer !== !1 && "PointerEvent" in window && !us,
            emptyInsertThreshold: 5
        };
        Cs.initializePlugins(this, t, n);
        for (var i in n) !(i in e) && (e[i] = n[i]);
        Rh(e);
        for (var o in this) o.charAt(0) === "_" && typeof this[o] == "function" && (this[o] = this[o].bind(this));
        this.nativeDraggable = e.forceFallback ? !1 : j_, this.nativeDraggable && (this.options.touchStartThreshold = 1), e.supportPointer ? _t(t, "pointerdown", this._onTapStart) : (_t(t, "mousedown", this._onTapStart), _t(t, "touchstart", this._onTapStart)), this.nativeDraggable && (_t(t, "dragover", this), _t(t, "dragenter", this)), fo.push(this.el), e.store && e.store.get && this.sort(e.store.get(this) || []), oi(this, $_())
    }
    Qe.prototype = {
        constructor: Qe,
        _isOutsideThisEl: function(e) {
            !this.el.contains(e) && e !== this.el && (ur = null)
        },
        _getDirection: function(e, n) {
            return typeof this.options.direction == "function" ? this.options.direction.call(this, e, n, Ie) : this.options.direction
        },
        _onTapStart: function(e) {
            if (!!e.cancelable) {
                var n = this,
                    i = this.el,
                    o = this.options,
                    d = o.preventOnFilter,
                    m = e.type,
                    C = e.touches && e.touches[0] || e.pointerType && e.pointerType === "touch" && e,
                    S = (C || e).target,
                    T = e.target.shadowRoot && (e.path && e.path[0] || e.composedPath && e.composedPath()[0]) || S,
                    D = o.filter;
                if (Q_(i), !Ie && !(/mousedown|pointerdown/.test(m) && e.button !== 0 || o.disabled) && !T.isContentEditable && !(!this.nativeDraggable && us && S && S.tagName.toUpperCase() === "SELECT") && (S = qn(S, o.draggable, i, !1), !(S && S.animated) && eo !== S)) {
                    if (pr = On(S), ds = On(S, o.draggable), typeof D == "function") {
                        if (D.call(this, e, S, this)) {
                            gn({
                                sortable: n,
                                rootEl: T,
                                name: "filter",
                                targetEl: S,
                                toEl: i,
                                fromEl: i
                            }), bn("filter", n, {
                                evt: e
                            }), d && e.cancelable && e.preventDefault();
                            return
                        }
                    } else if (D && (D = D.split(",").some(function(V) {
                            if (V = qn(T, V.trim(), i, !1), V) return gn({
                                sortable: n,
                                rootEl: V,
                                name: "filter",
                                targetEl: S,
                                fromEl: i,
                                toEl: i
                            }), bn("filter", n, {
                                evt: e
                            }), !0
                        }), D)) {
                        d && e.cancelable && e.preventDefault();
                        return
                    }
                    o.handle && !qn(T, o.handle, i, !1) || this._prepareDragStart(e, C, S)
                }
            }
        },
        _prepareDragStart: function(e, n, i) {
            var o = this,
                d = o.el,
                m = o.options,
                C = d.ownerDocument,
                S;
            if (i && !Ie && i.parentNode === d) {
                var T = Kt(i);
                if ($t = d, Ie = i, qt = Ie.parentNode, $i = Ie.nextSibling, eo = i, Ws = m.group, Qe.dragged = Ie, Mi = {
                        target: Ie,
                        clientX: (n || e).clientX,
                        clientY: (n || e).clientY
                    }, Dc = Mi.clientX - T.left, Mc = Mi.clientY - T.top, this._lastX = (n || e).clientX, this._lastY = (n || e).clientY, Ie.style["will-change"] = "all", S = function() {
                        if (bn("delayEnded", o, {
                                evt: e
                            }), Qe.eventCanceled) {
                            o._onDrop();
                            return
                        }
                        o._disableDelayedDragEvents(), !Ac && o.nativeDraggable && (Ie.draggable = !0), o._triggerDragStart(e, n), gn({
                            sortable: o,
                            name: "choose",
                            originalEvent: e
                        }), xn(Ie, m.chosenClass, !0)
                    }, m.ignore.split(",").forEach(function(D) {
                        Eh(Ie, D.trim(), ka)
                    }), _t(C, "dragover", Li), _t(C, "mousemove", Li), _t(C, "touchmove", Li), _t(C, "mouseup", o._onDrop), _t(C, "touchend", o._onDrop), _t(C, "touchcancel", o._onDrop), Ac && this.nativeDraggable && (this.options.touchStartThreshold = 4, Ie.draggable = !0), bn("delayStart", this, {
                        evt: e
                    }), m.delay && (!m.delayOnTouchOnly || n) && (!this.nativeDraggable || !(ws || li))) {
                    if (Qe.eventCanceled) {
                        this._onDrop();
                        return
                    }
                    _t(C, "mouseup", o._disableDelayedDrag), _t(C, "touchend", o._disableDelayedDrag), _t(C, "touchcancel", o._disableDelayedDrag), _t(C, "mousemove", o._delayedDragTouchMoveHandler), _t(C, "touchmove", o._delayedDragTouchMoveHandler), m.supportPointer && _t(C, "pointermove", o._delayedDragTouchMoveHandler), o._dragStartTimer = setTimeout(S, m.delay)
                } else S()
            }
        },
        _delayedDragTouchMoveHandler: function(e) {
            var n = e.touches ? e.touches[0] : e;
            Math.max(Math.abs(n.clientX - this._lastX), Math.abs(n.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag()
        },
        _disableDelayedDrag: function() {
            Ie && ka(Ie), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents()
        },
        _disableDelayedDragEvents: function() {
            var e = this.el.ownerDocument;
            bt(e, "mouseup", this._disableDelayedDrag), bt(e, "touchend", this._disableDelayedDrag), bt(e, "touchcancel", this._disableDelayedDrag), bt(e, "mousemove", this._delayedDragTouchMoveHandler), bt(e, "touchmove", this._delayedDragTouchMoveHandler), bt(e, "pointermove", this._delayedDragTouchMoveHandler)
        },
        _triggerDragStart: function(e, n) {
            n = n || e.pointerType == "touch" && e, !this.nativeDraggable || n ? this.options.supportPointer ? _t(document, "pointermove", this._onTouchMove) : n ? _t(document, "touchmove", this._onTouchMove) : _t(document, "mousemove", this._onTouchMove) : (_t(Ie, "dragend", this), _t($t, "dragstart", this._onDragStart));
            try {
                document.selection ? no(function() {
                    document.selection.empty()
                }) : window.getSelection().removeAllRanges()
            } catch {}
        },
        _dragStarted: function(e, n) {
            if (fr = !1, $t && Ie) {
                bn("dragStarted", this, {
                    evt: n
                }), this.nativeDraggable && _t(document, "dragover", z_);
                var i = this.options;
                !e && xn(Ie, i.dragClass, !1), xn(Ie, i.ghostClass, !0), Qe.active = this, e && this._appendGhost(), gn({
                    sortable: this,
                    name: "start",
                    originalEvent: n
                })
            } else this._nulling()
        },
        _emulateDragOver: function() {
            if (Ln) {
                this._lastX = Ln.clientX, this._lastY = Ln.clientY, Ih();
                for (var e = document.elementFromPoint(Ln.clientX, Ln.clientY), n = e; e && e.shadowRoot && (e = e.shadowRoot.elementFromPoint(Ln.clientX, Ln.clientY), e !== n);) n = e;
                if (Ie.parentNode[Sn]._isOutsideThisEl(e), n)
                    do {
                        if (n[Sn]) {
                            var i = void 0;
                            if (i = n[Sn]._onDragOver({
                                    clientX: Ln.clientX,
                                    clientY: Ln.clientY,
                                    target: e,
                                    rootEl: n
                                }), i && !this.options.dragoverBubble) break
                        }
                        e = n
                    } while (n = n.parentNode);
                Dh()
            }
        },
        _onTouchMove: function(e) {
            if (Mi) {
                var n = this.options,
                    i = n.fallbackTolerance,
                    o = n.fallbackOffset,
                    d = e.touches ? e.touches[0] : e,
                    m = ut && br(ut, !0),
                    C = ut && m && m.a,
                    S = ut && m && m.d,
                    T = Ys && ln && Ic(ln),
                    D = (d.clientX - Mi.clientX + o.x) / (C || 1) + (T ? T[0] - Sa[0] : 0) / (C || 1),
                    V = (d.clientY - Mi.clientY + o.y) / (S || 1) + (T ? T[1] - Sa[1] : 0) / (S || 1);
                if (!Qe.active && !fr) {
                    if (i && Math.max(Math.abs(d.clientX - this._lastX), Math.abs(d.clientY - this._lastY)) < i) return;
                    this._onDragStart(e, !0)
                }
                if (ut) {
                    m ? (m.e += D - (xa || 0), m.f += V - (Ea || 0)) : m = {
                        a: 1,
                        b: 0,
                        c: 0,
                        d: 1,
                        e: D,
                        f: V
                    };
                    var Y = "matrix(".concat(m.a, ",").concat(m.b, ",").concat(m.c, ",").concat(m.d, ",").concat(m.e, ",").concat(m.f, ")");
                    nt(ut, "webkitTransform", Y), nt(ut, "mozTransform", Y), nt(ut, "msTransform", Y), nt(ut, "transform", Y), xa = D, Ea = V, Ln = d
                }
                e.cancelable && e.preventDefault()
            }
        },
        _appendGhost: function() {
            if (!ut) {
                var e = this.options.fallbackOnBody ? document.body : $t,
                    n = Kt(Ie, !0, Ys, !0, e),
                    i = this.options;
                if (Ys) {
                    for (ln = e; nt(ln, "position") === "static" && nt(ln, "transform") === "none" && ln !== document;) ln = ln.parentNode;
                    ln !== document.body && ln !== document.documentElement ? (ln === document && (ln = Fn()), n.top += ln.scrollTop, n.left += ln.scrollLeft) : ln = Fn(), Sa = Ic(ln)
                }
                ut = Ie.cloneNode(!0), xn(ut, i.ghostClass, !1), xn(ut, i.fallbackClass, !0), xn(ut, i.dragClass, !0), nt(ut, "transition", ""), nt(ut, "transform", ""), nt(ut, "box-sizing", "border-box"), nt(ut, "margin", 0), nt(ut, "top", n.top), nt(ut, "left", n.left), nt(ut, "width", n.width), nt(ut, "height", n.height), nt(ut, "opacity", "0.8"), nt(ut, "position", Ys ? "absolute" : "fixed"), nt(ut, "zIndex", "100000"), nt(ut, "pointerEvents", "none"), Qe.ghost = ut, e.appendChild(ut), nt(ut, "transform-origin", Dc / parseInt(ut.style.width) * 100 + "% " + Mc / parseInt(ut.style.height) * 100 + "%")
            }
        },
        _onDragStart: function(e, n) {
            var i = this,
                o = e.dataTransfer,
                d = i.options;
            if (bn("dragStart", this, {
                    evt: e
                }), Qe.eventCanceled) {
                this._onDrop();
                return
            }
            bn("setupClone", this), Qe.eventCanceled || (Vt = Th(Ie), Vt.removeAttribute("id"), Vt.draggable = !1, Vt.style["will-change"] = "", this._hideClone(), xn(Vt, this.options.chosenClass, !1), Qe.clone = Vt), i.cloneId = no(function() {
                bn("clone", i), !Qe.eventCanceled && (i.options.removeCloneOnHide || $t.insertBefore(Vt, Ie), i._hideClone(), gn({
                    sortable: i,
                    name: "clone"
                }))
            }), !n && xn(Ie, d.dragClass, !0), n ? (ho = !0, i._loopId = setInterval(i._emulateDragOver, 50)) : (bt(document, "mouseup", i._onDrop), bt(document, "touchend", i._onDrop), bt(document, "touchcancel", i._onDrop), o && (o.effectAllowed = "move", d.setData && d.setData.call(i, o, Ie)), _t(document, "drop", i), nt(Ie, "transform", "translateZ(0)")), fr = !0, i._dragStartId = no(i._dragStarted.bind(i, n, e)), _t(document, "selectstart", i), is = !0, us && nt(document.body, "user-select", "none")
        },
        _onDragOver: function(e) {
            var n = this.el,
                i = e.target,
                o, d, m, C = this.options,
                S = C.group,
                T = Qe.active,
                D = Ws === S,
                V = C.sort,
                Y = tn || T,
                ie, K = this,
                re = !1;
            if (Ua) return;

            function v(ye, ue) {
                bn(ye, K, Un({
                    evt: e,
                    isOwner: D,
                    axis: ie ? "vertical" : "horizontal",
                    revert: m,
                    dragRect: o,
                    targetRect: d,
                    canSort: V,
                    fromSortable: Y,
                    target: i,
                    completed: H,
                    onMove: function(Te, Be) {
                        return Ks($t, n, Ie, o, Te, Kt(Te), e, Be)
                    },
                    changed: ae
                }, ue))
            }

            function P() {
                v("dragOverAnimationCapture"), K.captureAnimationState(), K !== Y && Y.captureAnimationState()
            }

            function H(ye) {
                return v("dragOverCompleted", {
                    insertion: ye
                }), ye && (D ? T._hideClone() : T._showClone(K), K !== Y && (xn(Ie, tn ? tn.options.ghostClass : T.options.ghostClass, !1), xn(Ie, C.ghostClass, !0)), tn !== K && K !== Qe.active ? tn = K : K === Qe.active && tn && (tn = null), Y === K && (K._ignoreWhileAnimating = i), K.animateAll(function() {
                    v("dragOverAnimationComplete"), K._ignoreWhileAnimating = null
                }), K !== Y && (Y.animateAll(), Y._ignoreWhileAnimating = null)), (i === Ie && !Ie.animated || i === n && !i.animated) && (ur = null), !C.dragoverBubble && !e.rootEl && i !== document && (Ie.parentNode[Sn]._isOutsideThisEl(e.target), !ye && Li(e)), !C.dragoverBubble && e.stopPropagation && e.stopPropagation(), re = !0
            }

            function ae() {
                En = On(Ie), hi = On(Ie, C.draggable), gn({
                    sortable: K,
                    name: "change",
                    toEl: n,
                    newIndex: En,
                    newDraggableIndex: hi,
                    originalEvent: e
                })
            }
            if (e.preventDefault !== void 0 && e.cancelable && e.preventDefault(), i = qn(i, C.draggable, n, !0), v("dragOver"), Qe.eventCanceled) return re;
            if (Ie.contains(e.target) || i.animated && i.animatingX && i.animatingY || K._ignoreWhileAnimating === i) return H(!1);
            if (ho = !1, T && !C.disabled && (D ? V || (m = qt !== $t) : tn === this || (this.lastPutMode = Ws.checkPull(this, T, Ie, e)) && S.checkPut(this, T, Ie, e))) {
                if (ie = this._getDirection(e, i) === "vertical", o = Kt(Ie), v("dragOverValid"), Qe.eventCanceled) return re;
                if (m) return qt = $t, P(), this._hideClone(), v("revert"), Qe.eventCanceled || ($i ? $t.insertBefore(Ie, $i) : $t.appendChild(Ie)), H(!0);
                var se = El(n, C.draggable);
                if (!se || X_(e, ie, this) && !se.animated) {
                    if (se === Ie) return H(!1);
                    if (se && n === e.target && (i = se), i && (d = Kt(i)), Ks($t, n, Ie, o, i, d, e, !!i) !== !1) return P(), se && se.nextSibling ? n.insertBefore(Ie, se.nextSibling) : n.appendChild(Ie), qt = n, ae(), H(!0)
                } else if (se && W_(e, ie, this)) {
                    var ve = xr(n, 0, C, !0);
                    if (ve === Ie) return H(!1);
                    if (i = ve, d = Kt(i), Ks($t, n, Ie, o, i, d, e, !1) !== !1) return P(), n.insertBefore(Ie, ve), qt = n, ae(), H(!0)
                } else if (i.parentNode === n) {
                    d = Kt(i);
                    var f = 0,
                        Ee, Oe = Ie.parentNode !== n,
                        Pe = !F_(Ie.animated && Ie.toRect || o, i.animated && i.toRect || d, ie),
                        lt = ie ? "top" : "left",
                        Ve = Rc(i, "top", "top") || Rc(Ie, "top", "top"),
                        J = Ve ? Ve.scrollTop : void 0;
                    ur !== i && (Ee = d[lt], ps = !1, Xs = !Pe && C.invertSwap || Oe), f = Y_(e, i, d, ie, Pe ? 1 : C.swapThreshold, C.invertedSwapThreshold == null ? C.swapThreshold : C.invertedSwapThreshold, Xs, ur === i);
                    var je;
                    if (f !== 0) {
                        var z = On(Ie);
                        do z -= f, je = qt.children[z]; while (je && (nt(je, "display") === "none" || je === ut))
                    }
                    if (f === 0 || je === i) return H(!1);
                    ur = i, fs = f;
                    var oe = i.nextElementSibling,
                        Ae = !1;
                    Ae = f === 1;
                    var we = Ks($t, n, Ie, o, i, d, e, Ae);
                    if (we !== !1) return (we === 1 || we === -1) && (Ae = we === 1), Ua = !0, setTimeout(H_, 30), P(), Ae && !oe ? n.appendChild(Ie) : i.parentNode.insertBefore(Ie, Ae ? oe : i), Ve && kh(Ve, 0, J - Ve.scrollTop), qt = Ie.parentNode, Ee !== void 0 && !Xs && (to = Math.abs(Ee - Kt(i)[lt])), ae(), H(!0)
                }
                if (n.contains(Ie)) return H(!1)
            }
            return !1
        },
        _ignoreWhileAnimating: null,
        _offMoveEvents: function() {
            bt(document, "mousemove", this._onTouchMove), bt(document, "touchmove", this._onTouchMove), bt(document, "pointermove", this._onTouchMove), bt(document, "dragover", Li), bt(document, "mousemove", Li), bt(document, "touchmove", Li)
        },
        _offUpEvents: function() {
            var e = this.el.ownerDocument;
            bt(e, "mouseup", this._onDrop), bt(e, "touchend", this._onDrop), bt(e, "pointerup", this._onDrop), bt(e, "touchcancel", this._onDrop), bt(document, "selectstart", this)
        },
        _onDrop: function(e) {
            var n = this.el,
                i = this.options;
            if (En = On(Ie), hi = On(Ie, i.draggable), bn("drop", this, {
                    evt: e
                }), qt = Ie && Ie.parentNode, En = On(Ie), hi = On(Ie, i.draggable), Qe.eventCanceled) {
                this._nulling();
                return
            }
            fr = !1, Xs = !1, ps = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), za(this.cloneId), za(this._dragStartId), this.nativeDraggable && (bt(document, "drop", this), bt(n, "dragstart", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), us && nt(document.body, "user-select", ""), nt(Ie, "transform", ""), e && (is && (e.cancelable && e.preventDefault(), !i.dropBubble && e.stopPropagation()), ut && ut.parentNode && ut.parentNode.removeChild(ut), ($t === qt || tn && tn.lastPutMode !== "clone") && Vt && Vt.parentNode && Vt.parentNode.removeChild(Vt), Ie && (this.nativeDraggable && bt(Ie, "dragend", this), ka(Ie), Ie.style["will-change"] = "", is && !fr && xn(Ie, tn ? tn.options.ghostClass : this.options.ghostClass, !1), xn(Ie, this.options.chosenClass, !1), gn({
                sortable: this,
                name: "unchoose",
                toEl: qt,
                newIndex: null,
                newDraggableIndex: null,
                originalEvent: e
            }), $t !== qt ? (En >= 0 && (gn({
                rootEl: qt,
                name: "add",
                toEl: qt,
                fromEl: $t,
                originalEvent: e
            }), gn({
                sortable: this,
                name: "remove",
                toEl: qt,
                originalEvent: e
            }), gn({
                rootEl: qt,
                name: "sort",
                toEl: qt,
                fromEl: $t,
                originalEvent: e
            }), gn({
                sortable: this,
                name: "sort",
                toEl: qt,
                originalEvent: e
            })), tn && tn.save()) : En !== pr && En >= 0 && (gn({
                sortable: this,
                name: "update",
                toEl: qt,
                originalEvent: e
            }), gn({
                sortable: this,
                name: "sort",
                toEl: qt,
                originalEvent: e
            })), Qe.active && ((En == null || En === -1) && (En = pr, hi = ds), gn({
                sortable: this,
                name: "end",
                toEl: qt,
                originalEvent: e
            }), this.save()))), this._nulling()
        },
        _nulling: function() {
            bn("nulling", this), $t = Ie = qt = ut = $i = Vt = eo = di = Mi = Ln = is = En = hi = pr = ds = ur = fs = tn = Ws = Qe.dragged = Qe.ghost = Qe.clone = Qe.active = null, po.forEach(function(e) {
                e.checked = !0
            }), po.length = xa = Ea = 0
        },
        handleEvent: function(e) {
            switch (e.type) {
                case "drop":
                case "dragend":
                    this._onDrop(e);
                    break;
                case "dragenter":
                case "dragover":
                    Ie && (this._onDragOver(e), G_(e));
                    break;
                case "selectstart":
                    e.preventDefault();
                    break
            }
        },
        toArray: function() {
            for (var e = [], n, i = this.el.children, o = 0, d = i.length, m = this.options; o < d; o++) n = i[o], qn(n, m.draggable, this.el, !1) && e.push(n.getAttribute(m.dataIdAttr) || J_(n));
            return e
        },
        sort: function(e, n) {
            var i = {},
                o = this.el;
            this.toArray().forEach(function(d, m) {
                var C = o.children[m];
                qn(C, this.options.draggable, o, !1) && (i[d] = C)
            }, this), n && this.captureAnimationState(), e.forEach(function(d) {
                i[d] && (o.removeChild(i[d]), o.appendChild(i[d]))
            }), n && this.animateAll()
        },
        save: function() {
            var e = this.options.store;
            e && e.set && e.set(this)
        },
        closest: function(e, n) {
            return qn(e, n || this.options.draggable, this.el, !1)
        },
        option: function(e, n) {
            var i = this.options;
            if (n === void 0) return i[e];
            var o = Cs.modifyOption(this, e, n);
            typeof o < "u" ? i[e] = o : i[e] = n, e === "group" && Rh(i)
        },
        destroy: function() {
            bn("destroy", this);
            var e = this.el;
            e[Sn] = null, bt(e, "mousedown", this._onTapStart), bt(e, "touchstart", this._onTapStart), bt(e, "pointerdown", this._onTapStart), this.nativeDraggable && (bt(e, "dragover", this), bt(e, "dragenter", this)), Array.prototype.forEach.call(e.querySelectorAll("[draggable]"), function(n) {
                n.removeAttribute("draggable")
            }), this._onDrop(), this._disableDelayedDragEvents(), fo.splice(fo.indexOf(this.el), 1), this.el = e = null
        },
        _hideClone: function() {
            if (!di) {
                if (bn("hideClone", this), Qe.eventCanceled) return;
                nt(Vt, "display", "none"), this.options.removeCloneOnHide && Vt.parentNode && Vt.parentNode.removeChild(Vt), di = !0
            }
        },
        _showClone: function(e) {
            if (e.lastPutMode !== "clone") {
                this._hideClone();
                return
            }
            if (di) {
                if (bn("showClone", this), Qe.eventCanceled) return;
                Ie.parentNode == $t && !this.options.group.revertClone ? $t.insertBefore(Vt, Ie) : $i ? $t.insertBefore(Vt, $i) : $t.appendChild(Vt), this.options.group.revertClone && this.animate(Ie, Vt), nt(Vt, "display", ""), di = !1
            }
        }
    };

    function G_(t) {
        t.dataTransfer && (t.dataTransfer.dropEffect = "move"), t.cancelable && t.preventDefault()
    }

    function Ks(t, e, n, i, o, d, m, C) {
        var S, T = t[Sn],
            D = T.options.onMove,
            V;
        return window.CustomEvent && !li && !ws ? S = new CustomEvent("move", {
            bubbles: !0,
            cancelable: !0
        }) : (S = document.createEvent("Event"), S.initEvent("move", !0, !0)), S.to = e, S.from = t, S.dragged = n, S.draggedRect = i, S.related = o || e, S.relatedRect = d || Kt(e), S.willInsertAfter = C, S.originalEvent = m, t.dispatchEvent(S), D && (V = D.call(T, S, m)), V
    }

    function ka(t) {
        t.draggable = !1
    }

    function H_() {
        Ua = !1
    }

    function W_(t, e, n) {
        var i = Kt(xr(n.el, 0, n.options, !0)),
            o = 10;
        return e ? t.clientX < i.left - o || t.clientY < i.top && t.clientX < i.right : t.clientY < i.top - o || t.clientY < i.bottom && t.clientX < i.left
    }

    function X_(t, e, n) {
        var i = Kt(El(n.el, n.options.draggable)),
            o = 10;
        return e ? t.clientX > i.right + o || t.clientX <= i.right && t.clientY > i.bottom && t.clientX >= i.left : t.clientX > i.right && t.clientY > i.top || t.clientX <= i.right && t.clientY > i.bottom + o
    }

    function Y_(t, e, n, i, o, d, m, C) {
        var S = i ? t.clientY : t.clientX,
            T = i ? n.height : n.width,
            D = i ? n.top : n.left,
            V = i ? n.bottom : n.right,
            Y = !1;
        if (!m) {
            if (C && to < T * o) {
                if (!ps && (fs === 1 ? S > D + T * d / 2 : S < V - T * d / 2) && (ps = !0), ps) Y = !0;
                else if (fs === 1 ? S < D + to : S > V - to) return -fs
            } else if (S > D + T * (1 - o) / 2 && S < V - T * (1 - o) / 2) return K_(e)
        }
        return Y = Y || m, Y && (S < D + T * d / 2 || S > V - T * d / 2) ? S > D + T / 2 ? 1 : -1 : 0
    }

    function K_(t) {
        return On(Ie) < On(t) ? 1 : -1
    }

    function J_(t) {
        for (var e = t.tagName + t.className + t.src + t.href + t.textContent, n = e.length, i = 0; n--;) i += e.charCodeAt(n);
        return i.toString(36)
    }

    function Q_(t) {
        po.length = 0;
        for (var e = t.getElementsByTagName("input"), n = e.length; n--;) {
            var i = e[n];
            i.checked && po.push(i)
        }
    }

    function no(t) {
        return setTimeout(t, 0)
    }

    function za(t) {
        return clearTimeout(t)
    }
    To && _t(document, "touchmove", function(t) {
        (Qe.active || fr) && t.cancelable && t.preventDefault()
    });
    Qe.utils = {
        on: _t,
        off: bt,
        css: nt,
        find: Eh,
        is: function(e, n) {
            return !!qn(e, n, e, !1)
        },
        extend: L_,
        throttle: Sh,
        closest: qn,
        toggleClass: xn,
        clone: Th,
        index: On,
        nextTick: no,
        cancelNextTick: za,
        detectDirection: Oh,
        getChild: xr
    };
    Qe.get = function(t) {
        return t[Sn]
    };
    Qe.mount = function() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
        e[0].constructor === Array && (e = e[0]), e.forEach(function(i) {
            if (!i.prototype || !i.prototype.constructor) throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(i));
            i.utils && (Qe.utils = Un(Un({}, Qe.utils), i.utils)), Cs.mount(i)
        })
    };
    Qe.create = function(t, e) {
        return new Qe(t, e)
    };
    Qe.version = I_;
    var Wt = [],
        rs, Ga, Ha = !1,
        Ta, Aa, go, ss;

    function Z_() {
        function t() {
            this.defaults = {
                scroll: !0,
                forceAutoScrollFallback: !1,
                scrollSensitivity: 30,
                scrollSpeed: 10,
                bubbleScroll: !0
            };
            for (var e in this) e.charAt(0) === "_" && typeof this[e] == "function" && (this[e] = this[e].bind(this))
        }
        return t.prototype = {
            dragStarted: function(n) {
                var i = n.originalEvent;
                this.sortable.nativeDraggable ? _t(document, "dragover", this._handleAutoScroll) : this.options.supportPointer ? _t(document, "pointermove", this._handleFallbackAutoScroll) : i.touches ? _t(document, "touchmove", this._handleFallbackAutoScroll) : _t(document, "mousemove", this._handleFallbackAutoScroll)
            },
            dragOverCompleted: function(n) {
                var i = n.originalEvent;
                !this.options.dragOverBubble && !i.rootEl && this._handleAutoScroll(i)
            },
            drop: function() {
                this.sortable.nativeDraggable ? bt(document, "dragover", this._handleAutoScroll) : (bt(document, "pointermove", this._handleFallbackAutoScroll), bt(document, "touchmove", this._handleFallbackAutoScroll), bt(document, "mousemove", this._handleFallbackAutoScroll)), Pc(), io(), P_()
            },
            nulling: function() {
                go = Ga = rs = Ha = ss = Ta = Aa = null, Wt.length = 0
            },
            _handleFallbackAutoScroll: function(n) {
                this._handleAutoScroll(n, !0)
            },
            _handleAutoScroll: function(n, i) {
                var o = this,
                    d = (n.touches ? n.touches[0] : n).clientX,
                    m = (n.touches ? n.touches[0] : n).clientY,
                    C = document.elementFromPoint(d, m);
                if (go = n, i || this.options.forceAutoScrollFallback || ws || li || us) {
                    Oa(n, this.options, C, i);
                    var S = gi(C, !0);
                    Ha && (!ss || d !== Ta || m !== Aa) && (ss && Pc(), ss = setInterval(function() {
                        var T = gi(document.elementFromPoint(d, m), !0);
                        T !== S && (S = T, io()), Oa(n, o.options, T, i)
                    }, 10), Ta = d, Aa = m)
                } else {
                    if (!this.options.bubbleScroll || gi(C, !0) === Fn()) {
                        io();
                        return
                    }
                    Oa(n, this.options, gi(C, !1), !1)
                }
            }
        }, oi(t, {
            pluginName: "scroll",
            initializeByDefault: !0
        })
    }

    function io() {
        Wt.forEach(function(t) {
            clearInterval(t.pid)
        }), Wt = []
    }

    function Pc() {
        clearInterval(ss)
    }
    var Oa = Sh(function(t, e, n, i) {
            if (!!e.scroll) {
                var o = (t.touches ? t.touches[0] : t).clientX,
                    d = (t.touches ? t.touches[0] : t).clientY,
                    m = e.scrollSensitivity,
                    C = e.scrollSpeed,
                    S = Fn(),
                    T = !1,
                    D;
                Ga !== n && (Ga = n, io(), rs = e.scroll, D = e.scrollFn, rs === !0 && (rs = gi(n, !0)));
                var V = 0,
                    Y = rs;
                do {
                    var ie = Y,
                        K = Kt(ie),
                        re = K.top,
                        v = K.bottom,
                        P = K.left,
                        H = K.right,
                        ae = K.width,
                        se = K.height,
                        ve = void 0,
                        f = void 0,
                        Ee = ie.scrollWidth,
                        Oe = ie.scrollHeight,
                        Pe = nt(ie),
                        lt = ie.scrollLeft,
                        Ve = ie.scrollTop;
                    ie === S ? (ve = ae < Ee && (Pe.overflowX === "auto" || Pe.overflowX === "scroll" || Pe.overflowX === "visible"), f = se < Oe && (Pe.overflowY === "auto" || Pe.overflowY === "scroll" || Pe.overflowY === "visible")) : (ve = ae < Ee && (Pe.overflowX === "auto" || Pe.overflowX === "scroll"), f = se < Oe && (Pe.overflowY === "auto" || Pe.overflowY === "scroll"));
                    var J = ve && (Math.abs(H - o) <= m && lt + ae < Ee) - (Math.abs(P - o) <= m && !!lt),
                        je = f && (Math.abs(v - d) <= m && Ve + se < Oe) - (Math.abs(re - d) <= m && !!Ve);
                    if (!Wt[V])
                        for (var z = 0; z <= V; z++) Wt[z] || (Wt[z] = {});
                    (Wt[V].vx != J || Wt[V].vy != je || Wt[V].el !== ie) && (Wt[V].el = ie, Wt[V].vx = J, Wt[V].vy = je, clearInterval(Wt[V].pid), (J != 0 || je != 0) && (T = !0, Wt[V].pid = setInterval(function() {
                        i && this.layer === 0 && Qe.active._onTouchMove(go);
                        var oe = Wt[this.layer].vy ? Wt[this.layer].vy * C : 0,
                            Ae = Wt[this.layer].vx ? Wt[this.layer].vx * C : 0;
                        typeof D == "function" && D.call(Qe.dragged.parentNode[Sn], Ae, oe, t, go, Wt[this.layer].el) !== "continue" || kh(Wt[this.layer].el, Ae, oe)
                    }.bind({
                        layer: V
                    }), 24))), V++
                } while (e.bubbleScroll && Y !== S && (Y = gi(Y, !1)));
                Ha = T
            }
        }, 30),
        Mh = function(e) {
            var n = e.originalEvent,
                i = e.putSortable,
                o = e.dragEl,
                d = e.activeSortable,
                m = e.dispatchSortableEvent,
                C = e.hideGhostForTarget,
                S = e.unhideGhostForTarget;
            if (!!n) {
                var T = i || d;
                C();
                var D = n.changedTouches && n.changedTouches.length ? n.changedTouches[0] : n,
                    V = document.elementFromPoint(D.clientX, D.clientY);
                S(), T && !T.el.contains(V) && (m("spill"), this.onSpill({
                    dragEl: o,
                    putSortable: i
                }))
            }
        };

    function Sl() {}
    Sl.prototype = {
        startIndex: null,
        dragStart: function(e) {
            var n = e.oldDraggableIndex;
            this.startIndex = n
        },
        onSpill: function(e) {
            var n = e.dragEl,
                i = e.putSortable;
            this.sortable.captureAnimationState(), i && i.captureAnimationState();
            var o = xr(this.sortable.el, this.startIndex, this.options);
            o ? this.sortable.el.insertBefore(n, o) : this.sortable.el.appendChild(n), this.sortable.animateAll(), i && i.animateAll()
        },
        drop: Mh
    };
    oi(Sl, {
        pluginName: "revertOnSpill"
    });

    function kl() {}
    kl.prototype = {
        onSpill: function(e) {
            var n = e.dragEl,
                i = e.putSortable,
                o = i || this.sortable;
            o.captureAnimationState(), n.parentNode && n.parentNode.removeChild(n), o.animateAll()
        },
        drop: Mh
    };
    oi(kl, {
        pluginName: "removeOnSpill"
    });
    Qe.mount(new Z_);
    Qe.mount(kl, Sl);
    const ex = `<div id="controller" class="state-controller controller-content">\r
    <div id="prompt" class="prompt text"></div>\r
    <div class="error text-danger"></div>\r
    <div id="choicesRegion"></div>\r
    <div id="chosen" class="chosen text"></div>\r
    <div class="makeSingleChoiceDone">\r
        <span class="doneText"></span>\r
    </div>\r
</div>`,
        tx = ai.extend({
            defaults: {
                choiceId: void 0,
                type: "single",
                censorDialog: "none",
                chosen: null,
                choices: [],
                prompt: {},
                error: null,
                block: !0,
                classes: [],
                maxVotes: 16,
                doneText: {},
                announcePrompt: !1,
                strings: {
                    your_choice: "Thank you. Your choice: ",
                    censor_prompt: "Censor this?",
                    censor_confirm: "Yes, Censor!",
                    censor_cancel: "No!"
                }
            }
        }),
        nx = xt.View.extend({
            tagName: "div",
            className: "sortable-item",
            template: Ze.template("<div class='text'></div>"),
            model: new at.Model({}),
            bindings: {
                ":el": {
                    attributes: [{
                        name: "data-id",
                        observe: "key"
                    }]
                },
                ".text": "html"
            },
            onAttach() {
                this.stickit()
            }
        }),
        $c = xt.CollectionView.extend({
            tagName: "div",
            className: "sortable-collection",
            childView: nx,
            collection: new at.Collection([]),
            initialize(t) {
                this.listenTo(this.collection, "sync", this.render), this.mergeOptions(t, ["block"])
            }
        }),
        ix = xt.View.extend({
            className: "SorterView",
            template: Ze.template(`
        <div id="rankedChoicesRegion"></div>
        <div class="instructions">Choose where this item ranks:</div>
        <div id="unrankedChoicesRegion"></div>
        <div id="lockInRegion"></div>
    `),
            model: new at.Model({
                rankedLength: 1,
                choices: []
            }),
            bindings: {
                ".instructions": {
                    observe: "rankedLength",
                    visible: !0,
                    onGet(t) {
                        return t < 3
                    }
                },
                "#unrankedChoicesRegion": {
                    observe: ["rankedLength", "choices"],
                    visible: !0,
                    onGet(t) {
                        return t[0] !== t[1].length
                    }
                },
                "#lockInRegion": {
                    observe: ["rankedLength", "choices"],
                    visible: !0,
                    onGet(t) {
                        return t[0] === t[1].length
                    }
                }
            },
            regions: {
                rankedChoices: "#rankedChoicesRegion",
                unrankedChoices: "#unrankedChoicesRegion",
                lockInRegion: "#lockInRegion"
            },
            initialize() {
                this.rankedCollectionView = this.rankedCollectionView || new $c({
                    collection: new at.Collection([])
                }), this.unrankedCollectionView = this.unrankedCollectionView || new $c({
                    className: "sortable-collection unranked",
                    collection: new at.Collection([])
                }), this.lockInView = this.lockInView || new mh({
                    block: !1,
                    model: new at.Model({
                        action: "lock",
                        html: "Lock In"
                    })
                }), this.listenTo(this.model, "change:choices", this.update, this)
            },
            onAttach() {
                this.showChildView("rankedChoices", this.rankedCollectionView), this.showChildView("unrankedChoices", this.unrankedCollectionView), this.showChildView("lockInRegion", this.lockInView), this.stickit(), this.update()
            },
            update() {
                const t = this.model.get("choices"),
                    e = t.slice(0, 1),
                    n = t.slice(1);
                this.rankedSortable && this.rankedSortable.destroy(), this.rankedCollectionView.collection.set(e), this.rankedSortable = Qe.create(this.rankedCollectionView.el, {
                    group: "shared",
                    onSort: this.handleOnSort.bind(this),
                    animation: 100,
                    delay: 100
                }), this.unrankedSortable && this.unrankedSortable.destroy(), this.unrankedCollectionView.collection.set(n), this.unrankedSortable = Qe.create(this.unrankedCollectionView.el, {
                    className: "unranked",
                    group: {
                        name: "shared",
                        put: !1
                    },
                    sort: !1
                })
            },
            moveItemInArray(t, e, n) {
                const i = t.slice(0);
                if (e === n) return i;
                const o = i[e];
                return i.splice(e, 1), i.splice(n, 0, o), i
            },
            handleOnSort() {
                const t = this.model.get("choices"),
                    e = this.rankedSortable.toArray();
                e.length === t.length && this.triggerMethod("sorted", e), this.model.set("rankedLength", e.length)
            },
            onChildviewButtonLock() {
                const t = this.rankedSortable.toArray();
                this.triggerMethod("lock", t)
            }
        }),
        rx = xt.View.extend({
            className: "Sortable scrollable",
            template: Ze.template(ex),
            model: new tx,
            regions: {
                prompt: "#prompt",
                choices: "#choicesRegion"
            },
            initialize() {
                this.promptComponent = this.promptComponent || new Ui({
                    model: new at.Model
                }), this.sorterView = this.sorterView || new ix({}), this.listenTo(this.model, "change", this.update, this)
            },
            onAttach() {
                this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.sorterView)
            },
            update() {
                this.promptComponent.model.set(this.model.get("prompt")), this.model.get("choices").length !== this.sorterView.model.get("choices").length && this.sorterView.model.set("choices", this.model.get("choices"))
            },
            onChildviewSorted(t) {
                this.triggerMethod("client:message", {
                    action: "sort",
                    order: t
                })
            },
            onChildviewLock(t) {
                this.triggerMethod("client:message", {
                    action: "sort",
                    lock: !0,
                    order: t
                })
            }
        }),
        sx = `<div id="controller" class="state-controller controller-content">
	<div class="ugc-action-toggle-visibility">
    	<span class="text toggle_prompts_prompt">toggle_prompts_prompt</span><br/>
    	<button id="ugc-toggle-visibility-button-controller" class="ugc-toggle-visibility-button ugc-toggle-visibility-button-controller" data-target="controller"></button>
    	<button id="ugc-toggle-visibility-button-screen" class="ugc-toggle-visibility-button  ugc-toggle-visibility-button-screen" data-target="screen"></button>
    </div>
    <div class="ugc-action-play">
        <div class="ugc-episode-name"></div>
    </div>
	<div class="ugc-action-new">
		<button class="button action-button create_new_episode" type="button" id="ugc-new-button">create_new_episode</button>
	</div>

	<div class="ugc-action-load">
    	<p class="ugc-option text-box ugc-load previous_episodes">previous_episodes</p>
		<div id="episodesRegion"></div>
	</div>

    <div id="prompt" class="prompt ugc-text"></div>
    <div id="ugc-no-actions">
    	<div id="ugc-no-actions-text"></div>
    </div>

    <div class="ugc-action-add">
    	<div id="inputRegion"></div>
    </div>

    <div class="ugc-action-title">
		<p class="text-box">
            <span class='text create_new_name_prompt'>create_new_name_prompt</span>
        </p>
    	<div id="titleInputRegion"></div>
    </div>

    <div class="ugc-action-close">
    	<button class="button action-button button_close" data-action="close">button_close</button>
    </div>
    <div class="ugc-action-unlock">
    	<button class="button action-button button_edit" data-action="unlock">button_edit</button>
    </div>
	<div class="ugc-action-done">
    	<button class="button action-button button_done" data-action="done">button_done</button>
    </div>
	<div class="ugc-action-submit">
    	<button class="button action-button button_publish" data-action="submit">button_publish</button>
    </div>

    <div class="ugc-action-play">
        <button class="button action-button button_play" data-action="play">button_play</button>
    </div>

    <div class="ugc-action-remove-content">
        <button class="button action-button button_delete" data-action="remove-content">button_delete</button>
    </div>

    <div class="ugc-action-exit">
        <button class="button action-button button_back_to_menu" data-action="exit">button_back_to_menu</button>
    </div>

    <div class="ugc-action-episodes">
        <button class="button action-button button_back_to_episodes" data-action="episodes">button_back_to_episodes</button>
    </div>

    <div class="ugc-action-remove">
        <div id="promptsCount" class="promptsCount"></div>
    	<div id="promptsRegion"></div>
    </div>
</div>`,
        ox = ai.extend({
            defaults: {
                controllerVisibility: !0,
                episodes: [],
                episodeTitle: "",
                index: 0,
                maxContentLength: 45,
                maxTitleLength: 20,
                name: "",
                noActionsText: "",
                prompts: [],
                screenVisibility: !0,
                state: "UGC",
                text: "",
                validActions: [],
                strings: {
                    tos_warning: "By sharing content, you agree to our Terms of service",
                    tos_warning_agree: "agree and share",
                    tos_warning_back: "back to menu",
                    create_new_episode: "create a new episode",
                    create_new_name_prompt: "first things first, enter a name for the episode that will contain all your prompts and hit create.",
                    create_new_button: "create",
                    button_back_to_episodes: "back to episodes",
                    button_back_to_menu: "back to menu",
                    previous_episodes: "previous episodes:",
                    toggle_prompts_prompt: "tap to show/hide prompts",
                    button_close: "close",
                    button_done: "done",
                    button_add: "add prompt",
                    input_placeholder: "enter a prompt",
                    label_hidden: "hidden",
                    button_edit: "edit",
                    button_save: "save",
                    button_publish: "publish",
                    button_play: "play",
                    button_delete: "delete",
                    delete_warning: "Are you sure you want to delete this episode?",
                    delete_warning_confirm: "Yes",
                    delete_warning_cancel: "No"
                }
            }
        }),
        ax = xt.View.extend({
            className: "UGC scrollable",
            template: Ze.template(sx),
            model: new ox,
            regions: {
                prompt: "#prompt",
                episodes: "#episodesRegion",
                input: "#inputRegion",
                titleInput: "#titleInputRegion",
                prompts: "#promptsRegion"
            },
            events: {
                "click #ugc-new-button": "onNewButtonClicked",
                "click #ugc-toggle-visibility-button-controller": "onToggleVisibilityController",
                "click #ugc-toggle-visibility-button-screen": "onToggleVisibilityScreen",
                "click .action-button": "onActionButtonClicked"
            },
            bindings: {
                ".ugc-text": {
                    observe: "text",
                    visible: !0,
                    updateView: !0
                },
                ".ugc-action-add": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("add") !== -1
                    }
                },
                ".ugc-action-close": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("close") !== -1
                    }
                },
                ".ugc-action-exit": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("exit") !== -1
                    }
                },
                ".ugc-action-load": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("load") !== -1
                    }
                },
                ".ugc-action-new": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("new") !== -1
                    }
                },
                ".ugc-action-play": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("play") !== -1
                    }
                },
                ".ugc-action-remove": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("remove") !== -1
                    }
                },
                ".ugc-action-remove-content": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("remove-content") !== -1
                    }
                },
                ".ugc-action-done": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("done") !== -1
                    }
                },
                ".ugc-action-submit": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("submit") !== -1
                    }
                },
                ".ugc-action-title": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("title") !== -1
                    }
                },
                ".ugc-action-toggle-visibility": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("toggle-visibility") !== -1
                    }
                },
                ".ugc-action-unlock": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("unlock") !== -1
                    }
                },
                ".ugc-action-episodes": {
                    observe: "validActions",
                    visible(t) {
                        return t && t.indexOf("episodes") !== -1
                    }
                },
                "#ugc-no-actions": {
                    observe: "validActions",
                    visible(t) {
                        return !t || t.length === 0
                    }
                },
                "#ugc-no-actions-text": {
                    observe: "noActionsText",
                    onGet(t) {
                        return typeof t == "string" ? t : ""
                    }
                },
                "#ugc-toggle-visibility-button-controller": {
                    classes: {
                        on: "controllerVisibility"
                    }
                },
                "#ugc-toggle-visibility-button-screen": {
                    classes: {
                        on: "screenVisibility"
                    }
                },
                ".ugc-episode-name": "episodeTitle",
                ".create_new_episode": {
                    observe: "strings",
                    onGet(t) {
                        return t.create_new_episode || "create_new_episode"
                    }
                },
                ".previous_episodes": {
                    observe: "strings",
                    onGet(t) {
                        return t.previous_episodes || "previous_episodes"
                    }
                },
                ".toggle_prompts_prompt": {
                    observe: "strings",
                    onGet(t) {
                        return t.toggle_prompts_prompt || "toggle_prompts_prompt"
                    }
                },
                ".create_new_name_prompt": {
                    observe: "strings",
                    onGet(t) {
                        return t.create_new_name_prompt || "create_new_name_prompt"
                    }
                },
                ".button_close": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_close || "button_close"
                    }
                },
                ".button_edit": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_edit || "button_edit"
                    }
                },
                ".button_done": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_done || "button_done"
                    }
                },
                ".button_publish": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_publish || "button_publish"
                    }
                },
                ".button_play": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_play || "button_play"
                    }
                },
                ".button_delete": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_delete || "button_delete"
                    }
                },
                ".button_back_to_episodes": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_back_to_episodes || "button_back_to_episodes"
                    }
                },
                ".button_back_to_menu": {
                    observe: "strings",
                    onGet(t) {
                        return t.button_back_to_menu || "button_back_to_menu"
                    }
                },
                "#promptsCount": {
                    observe: ["prompts", "strings", "count", "maxCount"],
                    onGet() {
                        const t = this.model.get("count"),
                            e = this.model.get("maxCount"),
                            n = this.model.get("prompts") || [],
                            i = this.model.get("strings").label_hidden || "hidden",
                            o = n.length;
                        let d = `${t}/${e}`;
                        return o < t && (d += ` (${t-o} ${i})`), d
                    }
                }
            },
            initialize(t) {
                this.client = t.client, this.promptComponent = this.promptComponent || new Ui({
                    model: new at.Model
                }), this.episodesList = this.episodesList || new mi({
                    action: "load",
                    collection: new at.Collection
                }), this.inputComponent = this.inputComponent || new co({
                    model: new at.Model({
                        inlineSubmit: !0,
                        inlineSubmitText: "",
                        className: "addPrompt",
                        counter: !0
                    })
                }), this.titleInputComponent = this.titleInputComponent || new co({
                    model: new at.Model({
                        inlineSubmit: !0,
                        counter: !0
                    })
                }), this.promptsList = this.promptsList || new mi({
                    action: "remove",
                    collection: new at.Collection
                }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
            },
            onRender() {
                this.showChildView("prompt", this.promptComponent), this.showChildView("episodes", this.episodesList), this.showChildView("input", this.inputComponent), this.showChildView("titleInput", this.titleInputComponent), this.showChildView("prompts", this.promptsList)
            },
            onAttach() {
                this.stickit(), this.update(), kt.vibrate()
            },
            update() {
                const t = this.model.get("validActions").length === 0 ? this.model.get("noActionsText") : this.model.get("text");
                this.promptComponent.model.set("text", t);
                const e = this.model.get("episodes").map(n => {
                    const i = Mt.htmlUnescape(n.metadata.title);
                    let o = Mt.safeText(i);
                    return o += n.remoteContentId !== null ? `<br><div class='episodeId'>${n.formattedRemoteContentId}</div>` : "", {
                        key: n.remoteContentId || n.localContentId,
                        html: o
                    }
                });
                this.episodesList.collection.set(e), this.inputComponent.model.set("maxLength", this.model.get("maxContentLength")), this.inputComponent.model.set("inlineSubmitText", this.model.get("strings").button_add), this.titleInputComponent.model.set("maxLength", this.model.get("maxTitleLength")), this.titleInputComponent.model.set("inlineSubmitText", this.model.get("strings").create_new_button), this.promptsList.collection.set(this.model.get("prompts").map(n => {
                    const i = Ze.extend({}, n);
                    i.text = Mt.htmlUnescape(n.text);
                    let o = n.author !== this.client.userId ? "other" : "self";
                    return n.className && (o += ` ${n.className}`), {
                        ...i,
                        className: o
                    }
                }))
            },
            onNewButtonClicked() {
                this.triggerMethod("client:message", {
                    action: "new"
                })
            },
            onChildviewInputSubmit() {
                let t, e;
                this.model.get("validActions").indexOf("add") !== -1 ? (t = "add", e = this.inputComponent.getSanitizedValue(), this.inputComponent.clearInput(), this.inputComponent.focus()) : this.model.get("validActions").indexOf("title") !== -1 && (t = "title", e = this.titleInputComponent.getValue(), this.titleInputComponent.clearInput()), !(!t || !e) && this.triggerMethod("client:message", {
                    action: t,
                    text: e
                })
            },
            onChildviewChildviewButtonLoad(t) {
                this.triggerMethod("client:message", {
                    action: "load",
                    contentId: t.get("key")
                })
            },
            onChildviewChildviewButtonRemove(t) {
                this.triggerMethod("client:message", {
                    action: "remove",
                    key: t.get("key")
                })
            },
            onToggleVisibilityController() {
                this.triggerMethod("client:message", {
                    action: "toggle-visibility",
                    target: "controller"
                })
            },
            onToggleVisibilityScreen() {
                this.triggerMethod("client:message", {
                    action: "toggle-visibility",
                    target: "screen"
                })
            },
            onActionButtonClicked(t) {
                const e = be(t.currentTarget).data("action");
                if (e === "submit") {
                    this.showTermsOfService();
                    return
                }
                if (e === "remove-content") {
                    this.showConfirmDeleteDialog();
                    return
                }
                this.triggerMethod("client:message", {
                    action: e
                })
            },
            showTermsOfService() {
                const t = `
            <a href='https://www.jackboxgames.com/terms-of-service/' target='_blank' >
                <br>
                <div class="tosLink">
                    <svg
                        class="bi bi-link-45deg"
                        width="1em"
                        height="1em"
                        viewBox="0 0 16 16"
                        fill="currentColor"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M4.715 6.542L3.343 7.914a3 3 0 1 0 4.243 4.243
                                l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.001 1.001 0 0 0-.154.199 2 2 0 0 1 .861 3.337
                                L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"
                        />
                        <path
                            d="M5.712 6.96l.167-.167a1.99 1.99 0 0 1 .896-.518 1.99 1.99 0 0 1 .518-.896
                                l.167-.167A3.004 3.004 0 0 0 6 5.499c-.22.46-.316.963-.288 1.46z"
                        />
                        <path
                            d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346
                                L9.12 3.55a2 2 0 0 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287
                                l1.372-1.372a3 3 0 0 0-4.243-4.243L6.586 4.672z"
                        />
                        <path
                            d="M10 9.5a2.99 2.99 0 0 0 .288-1.46
                                l-.167.167a1.99 1.99 0 0 1-.896.518 1.99 1.99 0 0 1-.518.896
                                l-.167.167A3.004 3.004 0 0 0 10 9.501z"
                        />
                    </svg>
                </div>
            </a>
        `;
                Rn.fire({
                    target: this.el,
                    html: `${this.model.get("strings").tos_warning}${t}`,
                    showCancelButton: !0,
                    confirmButtonText: this.model.get("strings").tos_warning_agree,
                    cancelButtonText: this.model.get("strings").tos_warning_back,
                    customClass: {
                        popup: "ugcModal",
                        confirmButton: "button confirmButton",
                        cancelButton: "button cancelButton"
                    }
                }).then(e => {
                    e.value && this.triggerMethod("client:message", {
                        action: "submit"
                    })
                })
            },
            showConfirmDeleteDialog() {
                Rn.fire({
                    target: this.el,
                    text: this.model.get("strings").delete_warning,
                    showCancelButton: !0,
                    confirmButtonText: this.model.get("strings").delete_warning_confirm,
                    cancelButtonText: this.model.get("strings").delete_warning_cancel,
                    customClass: {
                        popup: "ugcModal",
                        confirmButton: "button confirmButton",
                        cancelButton: "button cancelButton"
                    }
                }).then(t => {
                    t.value && this.triggerMethod("client:message", {
                        action: "remove-content"
                    })
                })
            },
            onChildviewChildviewButtonChoose(t) {
                const e = t.get("text");
                this.triggerMethod("client:message", {
                    action: "remove",
                    text: e
                })
            }
        }),
        lx = `<svg id="range-picker" class="range-picker" viewBox="-40 -40 80 80">
    <defs>
        <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
            <stop offset="0%" style="stop-color:rgb(0,0,0); stop-opacity:0.5" />
            <stop offset="60%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="80%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0.7" />
        </radialGradient>
        <svg id="Layer_3" data-name="Layer 3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.67 271.33">
            <title>astroIcon</title>
            <path class="cls-1" d="M253.83,108.17H210.89A57.83,57.83,0,0,1,160,138.5H140a57.83,57.83,0,0,1-50.89-30.33H46.17a19.5,19.5,0,0,0-19.5,19.5v11a19.5,19.5,0,0,0,19.5,19.5H70.4a19.5,19.5,0,0,1,19.5,19.5V259.8a17.37,17.37,0,0,0,17.36,17.37H115A17.37,17.37,0,0,0,132.4,259.8V236.53a17.37,17.37,0,0,1,17.37-17.36h0a17.36,17.36,0,0,1,17.36,17.36V259.8a17.37,17.37,0,0,0,17.37,17.37h9a17.37,17.37,0,0,0,17.36-17.37V177.67a19.5,19.5,0,0,1,19.5-19.5h23.49a19.5,19.5,0,0,0,19.5-19.5v-11A19.5,19.5,0,0,0,253.83,108.17Z" transform="translate(-18.17 -14.33)"/>
            <rect class="cls-1" x="64" y="8.5" width="135.67" height="115.67" rx="57.83" ry="57.83"/>
        </svg>
        <svg
           xmlns:dc="http://purl.org/dc/elements/1.1/"
           xmlns:cc="http://creativecommons.org/ns#"
           xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns="http://www.w3.org/2000/svg"
           height="55"
           width="40"
           xml:space="preserve"
           viewBox="-20 -27.5 40 55"
           y="0px"
           x="0px"
           id="Layer_1"
           version="1.1"><metadata
           id="metadata10"><rdf:RDF><cc:Work
               rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
                 rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
           id="defs8" />
        <path
           style="fill:#ffffff"
           d="m -20,27.5 20,-55 20,55 -20,-13 z"
           class="st0"
           id="aimArrow" />
        </svg>

    </defs>

    <circle class="background" r="16" cx="0" cy="0" />
    <circle class="background-gradient" r="32" cx="0" cy="0" fill="url(#grad1)" />
    <circle class="background-border" r=33 cx=0 cy=0 stroke="black" stroke-width="2" fill="none" />
    <circle id="health-display" class="health-display" r="33" cx="0" cy="0" />
    <circle class="circle-deadzone" fill="black" fill-opacity="0.8" r=1 cx=0 cy=0 stroke="white" stroke-width="0.3" stroke-dasharray="3.5 1.52" />
    
    <circle class="crosshair-center" r=1 cx=0 cy=0 />
    <circle class="circle-border-white" r="32" cx="0" cy="0" stroke="#ffffff" stroke-width="0.3" fill="none"/>
    <line class="line-helper-left" x1="-32" y1="0" x2="0" y2="0" ></line>
    <line class="line-helper-right" x1="32" y1="0" x2="0" y2="0" ></line>
    <circle class="locked-in-fade" r="17" cx="0" cy="0" />
    <line class="locked-in-line" x1="0" y1="0" x2="0" y2="0" display="inline"></line>
    <use class="aimArrow" xlink:href="#Layer_1" transform="rotate(180)" x="-2" y="-2.5" width="4" height="5"></use>
    <use class="astro" xlink:href="#Layer_3" transform="translate(-8, -8)" width="16" height="16"></use>
    <text id="text" class="text" x=0 y=10 text-anchor="middle" font-size=30 stroke="white">H</text>
</svg>`,
        cx = xt.View.extend({
            className: "RadialView",
            template: Ze.template(lx),
            model: new at.Model({
                isTouching: !1,
                angle: 0,
                vector: {
                    x: 0,
                    y: 0
                },
                touchBuffer: 5
            }),
            events: {
                "mousedown .range-picker": "start",
                "touchstart .range-picker": "start",
                "touchmove .range-picker": "start",
                touchmove: "move",
                touchend: "end"
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "class",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "lockedIn" : ""
                        }
                    }]
                },
                ".background": {
                    attributes: [{
                        name: "style",
                        observe: "accentColor",
                        onGet(t) {
                            return `stroke: ${t}`
                        }
                    }]
                },
                ".health-display": {
                    attributes: [{
                        name: "style",
                        observe: ["selector", "accentColor"],
                        onGet(t) {
                            let e = "";
                            const n = t[0],
                                i = t[1];
                            i && (e += `stroke:${i};`);
                            const o = n * 207,
                                d = 207 * (1 - n);
                            return e += `stroke-dasharray:${o} ${d};`, e += `transform:rotate(${-360*n-90}deg);`, e
                        }
                    }]
                },
                ".line-helper-left": {
                    attributes: [{
                        name: "display",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "none" : "inline"
                        }
                    }, {
                        name: "x2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.x : 1
                        }
                    }, {
                        name: "y2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.y : 1
                        }
                    }]
                },
                ".line-helper-right": {
                    attributes: [{
                        name: "display",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "none" : "inline"
                        }
                    }, {
                        name: "x2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.x : 1
                        }
                    }, {
                        name: "y2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.y : 1
                        }
                    }]
                },
                ".locked-in-line": {
                    attributes: [{
                        name: "display",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "inline" : "none"
                        }
                    }, {
                        name: "x2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.x : 1
                        }
                    }, {
                        name: "y2",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.y : 1
                        }
                    }]
                },
                ".circle-deadzone": {
                    attributes: [{
                        name: "r",
                        observe: "isTouching",
                        onGet(t) {
                            return "9.6"
                        }
                    }]
                },
                ".text": "text",
                ".astro": {
                    attributes: [{
                        name: "style",
                        observe: ["accentColor", "lockedIn"],
                        onGet(t) {
                            let e = "";
                            return e += `fill:${t[1]?"black":t[0]};`, e += `stroke:${t[1]?"#cccccc":"#ff00ff"};`, e
                        }
                    }, {
                        name: "x",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.x : 1
                        }
                    }, {
                        name: "y",
                        observe: "vector",
                        onGet(t) {
                            return t ? t.y : 1
                        }
                    }, {
                        name: "width",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? 8 : 16
                        }
                    }, {
                        name: "height",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? 8 : 16
                        }
                    }, {
                        name: "transform",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "translate(-4, -4)" : "translate(-8,-8)"
                        }
                    }]
                },
                ".locked-in-fade": {
                    attributes: [{
                        name: "display",
                        observe: "lockedIn",
                        onGet(t) {
                            return t ? "inline" : "none"
                        }
                    }]
                },
                ".aimArrow": {
                    attributes: [{
                        name: "transform",
                        observe: "angle",
                        onGet(t) {
                            let e = "";
                            return e += ` rotate(${t+180})`, e
                        }
                    }, {
                        name: "display",
                        observe: ["lockedIn", "vector"],
                        onGet(t) {
                            return t[0] && this.getDistance(t[1]) > 0 ? "inline" : "none"
                        }
                    }]
                }
            },
            initialize() {
                this.model.on("change:angle", this.updateAngle, this), this.model.on("change:vector", this.updateVector, this), this.model.on("change:isTouching", this.updateIsTouching, this)
            },
            updateAngle() {
                this.triggerMethod("angle", this.model.get("angle"))
            },
            updateVector() {
                this.triggerMethod("vector", this.getNormalizedVector())
            },
            updateIsTouching() {
                this.triggerMethod("isTouching", this.model.get("isTouching"))
            },
            onRender() {
                this.stickit()
            },
            start(t) {
                const e = this.eventToCoord(t);
                this.startCoord || (this.startCoord = e)
            },
            move(t) {
                t.preventDefault();
                const e = this.eventToCoord(t);
                if (!this.model.get("isTouching") && this.startCoord && this.getDistance(e, this.startCoord) > this.model.get("touchBuffer") && this.model.set("isTouching", !0), !this.model.get("isTouching") || this.model.get("lockedIn")) return;
                const n = this.coordToVector(e);
                this.model.set("vector", n);
                const i = this.coordToAngle(e);
                this.model.set("angle", i)
            },
            end() {
                this.startCoord = null, this.model.get("isTouching") && (this.model.set("isTouching", !1), this.triggerMethod("end", this.model))
            },
            getDistance(t, e) {
                e || (e = {
                    x: 0,
                    y: 0
                });
                const n = {
                    x: e.x - t.x,
                    y: e.y - t.y
                };
                return Math.sqrt(n.x ** 2 + n.y ** 2)
            },
            getNormalizedVector() {
                const t = Ze.extend({}, this.model.get("vector"));
                return t.x /= 32, t.y /= 32, t
            },
            eventToCoord(t) {
                const e = this.$el[0].getBoundingClientRect();
                return t.targetTouches && t.targetTouches instanceof TouchList && t.targetTouches.length > 0 ? {
                    x: t.targetTouches[0].pageX - e.left,
                    y: t.targetTouches[0].pageY - e.top
                } : {
                    x: t.clientX - e.left,
                    y: t.clientY - e.top
                }
            },
            coordToAngle(t) {
                const e = this.coordToVector(t);
                let n = Math.atan2(-e.x, e.y);
                return n += Math.PI, n = parseInt(n * 180 / Math.PI, 10), n
            },
            coordToVector(t) {
                const e = this.$el[0].getBoundingClientRect(),
                    n = {
                        x: t.x - parseInt(e.width, 10) / 2,
                        y: t.y - parseInt(e.height, 10) / 2
                    },
                    i = 76 / e.width;
                n.x *= i, n.y *= i;
                const o = this.getDistance(n);
                if (o > 32) {
                    const d = 32 / o;
                    n.x *= d, n.y *= d
                }
                return n
            }
        }),
        ux = `<div id="status-bar" class="health text">\r
    <div id="weaponBorder" class="weaponBorder">\r
        <div id="weaponIcon" class="weaponIcon"></div>\r
    </div>\r
</div>\r
<div id="radial" class="radial"></div>\r
<div id="control-panel" class="control-panel">\r
    <div class="message text">message</div>\r
    <div class="weaponNameContainer text">\r
        <div class="weaponIcon small"></div>\r
        <span class="weaponName">weapon name</span>\r
    </div>\r
    <div class="weaponText text">weapon text</div>\r
</div>`,
        hx = ai.extend({
            defaults: {
                shotId: void 0,
                state: "Shoot",
                throttle: 44,
                weapon: {},
                playerCanSwap: !1,
                characterCurrentHealth: null,
                characterMaxHealth: null,
                lockedIn: !1,
                selectorCircle: !0,
                classes: [],
                message: ""
            }
        }),
        dx = xt.View.extend({
            model: new hx,
            template: Ze.template(ux),
            className: "Shoot",
            client: null,
            regions: {
                radial: "#radial"
            },
            events: {
                "click .swap-button": "swapPlayer",
                touchstart: "eat",
                "click #reconnect": "reconnect"
            },
            eat(t) {
                t.preventDefault()
            },
            move(t) {
                this.radialComponent.move(t)
            },
            end(t) {
                this.radialComponent.end(t)
            },
            bindings: {
                ":el": {
                    attributes: [{
                        name: "style",
                        observe: "playerInfo",
                        onGet(t) {
                            return t && t.bgcolor ? `background-color:${t.bgcolor}` : ""
                        }
                    }]
                },
                ".swap-button": {
                    observe: "playerCanSwap",
                    visible: !0
                },
                ".health": {
                    observe: "characterCurrentHealth",
                    visible(t) {
                        return t !== null
                    }
                },
                ".currentHealth": "characterCurrentHealth",
                ".maxHealth": "characterMaxHealth",
                ".weaponText": {
                    observe: "weapon",
                    onGet(t) {
                        return t.text
                    }
                },
                ".message": "message",
                ".weaponBorder": {
                    attributes: [{
                        name: "class",
                        observe: "weapon",
                        onGet(t) {
                            return t ? t.count ? `count-${t.count}` : "" : null
                        }
                    }]
                },
                ".weaponIcon": {
                    attributes: [{
                        name: "class",
                        observe: "weapon",
                        onGet(t) {
                            return t ? t.id : ""
                        }
                    }]
                },
                ".weaponName": {
                    observe: "weapon",
                    onGet(t) {
                        return t ? t.name ? t.name : t.id : ""
                    }
                }
            },
            onChildviewVector(t) {
                this.throttledUpdate && this.throttledUpdate(t)
            },
            updateVector(t) {
                this.model.get("isAudience") || t.x === 0 && t.y === 0 || !this.radialComponent.model.get("isTouching") || this.triggerMethod("client:message", {
                    action: "move",
                    type: "move",
                    vector: t
                })
            },
            onChildviewEnd() {
                if (this.model.get("lockedIn")) return;
                const t = this.radialComponent.getNormalizedVector();
                if (Math.sqrt(t.x * t.x + t.y * t.y) < .3) {
                    this.radialComponent.model.set("vector", {
                        x: 0,
                        y: 0
                    }), this.radialComponent.model.set("angle", 180), this.model.get("isPlayer") && this.triggerMethod("client:message", {
                        action: "cancel",
                        type: "cancel"
                    });
                    return
                }
                const n = this.model.get("weapon"),
                    i = n.id ? n.id : this.model.get("weapon"),
                    o = this.radialComponent.model.get("angle"),
                    d = Math.floor(o / 10);
                this.triggerMethod("client:message", {
                    action: "fire",
                    type: "fire",
                    weapon: i,
                    vector: t
                }), this.model.get("isAudience") && (this.audienceShot = d * 10, this.shotId = this.model.get("shotId") || 0, this.model.setUpdate({
                    lockedIn: !0,
                    shotId: this.shotId
                }))
            },
            initialize(t) {
                this.client = t.client, this.radialComponent = new cx({
                    model: new at.Model({
                        isTouching: !1,
                        angle: 0,
                        vector: {
                            x: 0,
                            y: 0
                        },
                        touchBuffer: 5
                    })
                }), this.throttledUpdate = Ze.throttle(this.updateVector, this.model.get("throttle")), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), be(window).on("mousemove", this.move.bind(this)), be(window).on("mouseup", this.end.bind(this))
            },
            onBeforeDestroy() {
                window.removeEventListener("resize", this.onResizeWithContext), be(window).off("mousemove"), be(window).off("mouseup")
            },
            update() {
                const t = this.model.get("characterCurrentHealth"),
                    e = this.model.get("characterMaxHealth");
                if (this.radialComponent.model.set("selector", t / e), this.radialComponent.model.set("accentColor", this.model.get("characterColor")), this.radialComponent.model.set("lockedIn", this.model.get("lockedIn")), this.radialComponent.model.set("text", ""), this.client.isRole("audience") && ((this.model.get("shotId") === void 0 || this.model.get("shotId") !== this.shotId) && (this.audienceShot = void 0), this.audienceShot && (this.model.setUpdate({
                        lockedIn: !0,
                        shotId: this.model.get("shotId") || 0
                    }), this.radialComponent.model.set("text", `${this.audienceShot}\xB0`))), !this.model.get("lockedIn") && !this.radialComponent.model.get("isTouching") && this.radialComponent.model.set("vector", {
                        x: 0,
                        y: 0
                    }), this.throttledUpdate = Ze.throttle(this.updateVector, this.model.get("throttle")), this.model.get("lockedIn")) this.notified = !1;
                else {
                    if (!this.notified && this.model.get("state") === "Shoot") {
                        const n = {
                            ClusterBombs: [45, 60, 45, 60, 45, 60],
                            PlayerWeapon: [100, 100],
                            RainbowCannon: [45, 60, 45, 60, 45, 60],
                            Repeater: [45, 60, 45, 60, 45, 60],
                            Seeker: [45, 60, 45, 60, 45, 60],
                            Shield: [45, 60, 45, 60, 45, 60],
                            Stun: [45, 60, 45, 60, 45, 60],
                            SuperBlaster: [45, 60, 45, 60, 45, 60]
                        } [this.model.get("weapon").id];
                        kt.vibrate(n)
                    }
                    this.notified = !0
                }
            },
            onRender() {
                this.showChildView("radial", this.radialComponent), this.stickit()
            },
            onAttach() {
                this.update(), this.onResize(), kt.vibrate()
            },
            onResize() {
                const t = be(".radial"),
                    e = be("#status-bar").outerHeight() + be(".playerTopBar").outerHeight() + be("#control-panel").outerHeight() + 10,
                    n = be(".controller-page").width(),
                    i = window.innerHeight - e,
                    o = Math.max(150, Math.min(n, i));
                t.css("width", `${o}px`), t.css("height", `${o}px`), window.scrollTo(0, 0)
            }
        }),
        fx = `<div id="textDescriptions" class="textDescriptions" role="log" aria-atomic="false" aria-relevant="additions" aria-live="polite"></div>
<div id="controller-container" class="state-controller controller-page">
    <div id="playerRegion"></div>
    <div id="controller-main">
        <div class="loadingSpinner">
            <i class="fas fa-spinner fa-spin" style="font-size:48px"></i>
        </div>
    </div>
</div>
<div id="broadcaster" role="button" aria-label="twitch broadcaster information" style="display:none;" class="twitchBroadcasterIcon"></div>
`;
    xt.View.extend({
        client: null,
        template: Ze.template(fx),
        playerTopBar: null,
        className() {
            return `pt-page ${this.getOption("appTag")}`
        },
        regions: {
            player: "#playerRegion",
            controller: {
                el: "#controller-main",
                replaceElement: !0
            }
        },
        events: {
            "click .twitchBroadcasterIcon": "onTwitchBroadcasterIconClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "blob",
                    onGet(t) {
                        let e = `pt-page ${this.getOption("appTag")}`;
                        return t && t.locale && (e += ` ${t.locale}`), e
                    }
                }]
            },
            ".twitchBroadcasterIcon": {
                observe: ["broadcaster", "blob"],
                visible: !0,
                onGet([t, e]) {
                    return t && e && !e.artifact && ["Lobby", "Logo"].includes(e.state)
                }
            }
        },
        initialize(t) {
            this.mergeOptions(t, ["appId", "appTag"]), this.locale = "en", this.client = t.client, this.playerTopBar = this.playerTopBar || new E_, this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onTextDescriptionsWithContext = this.onTextDescriptions.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), t.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), t.client.on("client:textDescriptions", this.onTextDescriptionsWithContext), t.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), t.client.on("client:disconnected", this.onDisconnectedWithContext), t.client.on("client:connection", this.onConnectionMessageWithContext), this.model = new at.Model({});
            const e = t.client.parseEntities();
            this.model.set(e), this.model.on({
                "change:player": this.setBlob,
                "change:room": this.setBlob,
                "change:audiencePlayer": this.setBlob,
                "change:blob": this.update
            }, this), this.render(), this.setBlob(), window.addEventListener("resize", this.onResize)
        },
        onRender() {
            this.update(), this.stickit()
        },
        onAttach() {
            this.showChildView("player", this.playerTopBar), this.onResize(), this.client.isRole("broadcaster") && (this.model.set("broadcaster", this.client.isRole("broadcaster")), this.showTwitchBroadcasterDialog(20 * 1e3))
        },
        onBeforeDestroy() {
            this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:textDescriptions", this.onTextDescriptionsWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext)
        },
        updateLayout() {
            const e = this.model.get("blob").state;
            if (this.getGameLayout(e) !== -1) return null;
            switch (e) {
                case "Draw":
                    return this.setLayout(h_);
                case "EnterSingleText":
                    return this.setLayout(p_);
                case "Lobby":
                    return this.setLayout(b_);
                case "Logo":
                    return this.setLayout(__);
                case "MakeSingleChoice":
                    return this.setLayout(T_);
                case "Shoot":
                    return this.setLayout(dx);
                case "Sortable":
                    return this.setLayout(rx);
                case "Camera":
                    return this.setLayout(e_);
                case "UGC":
                    return this.setLayout(ax);
                default:
                    return new Error("No common layout found")
            }
        },
        setLayout(t) {
            const e = new t(this.options),
                n = this.getRegion("controller");
            !n || (n.reset(), e.model.set(this.model.get("blob")), this.showChildView("controller", e), this.currentLayout = e, this.currentState = this.model.get("blob").state)
        },
        onEntityDidChange(t, e) {
            this.model.unset(t, {
                silent: !0
            }), this.model.set(t, e)
        },
        onTextDescriptions(t, e) {
            this.setTextDescriptions(e.latestDescriptions)
        },
        setBlob() {
            const t = this.model.get("player"),
                e = this.model.get("room"),
                n = this.model.get("audiencePlayer");
            let i = {};
            t && !Ze.isEmpty(t) ? i = {
                ...Ze.omit(e, "audience"),
                ...t
            } : this.client.isRole("audience") && n ? i = {
                ...Ze.omit(e, "audience"),
                ...n.audience
            } : this.client.isRole("audience") && e && e.audience ? i = {
                ...Ze.omit(e, "audience"),
                ...e.audience
            } : i = e || {}, i.isPlayer = this.client.isRole("player"), i.isAudience = this.client.isRole("audience"), i = this.parseBlob(i), !i.state && i.isAudience && (i.state = "Logo"), i.platformId && en.set(`platform-${i.platformId}`), i.locale && typeof i.locale == "string" && (this.locale = i.locale), this.model.set({
                blob: i
            })
        },
        update: Ze.debounce(function() {
            const e = this.model.get("blob");
            !e || (this.willUpdate(), e.playerInfo ? this.playerTopBar.model.set(e.playerInfo) : this.playerTopBar.model.clear(), !this.currentState || this.currentState !== e.state ? (this.updateLayout(), this.currentLayout && this.currentLayout.model.set(e)) : this.currentLayout && this.currentLayout.model.set(e), e.textDescriptions && this.setTextDescriptions(e.textDescriptions), e.artifact && vi.add(e.artifact, this.client.appTag), this.didUpdate())
        }, 25),
        willUpdate() {},
        didUpdate() {},
        setTextDescriptions(t) {
            t && t.length && (this.textDescriptions = this.textDescriptions || [], t.forEach(e => {
                (e.id === void 0 || !this.textDescriptions.slice(-10).find(n => n.id === e.id)) && (this.textDescriptions.push(e), be("#textDescriptions").append(be("<p />").text(e.text)))
            }))
        },
        parseBlob(t) {
            return t
        },
        getGameLayout() {
            return -1
        },
        formatSessionMessage(t) {
            return t
        },
        onTwitchBroadcasterIconClick() {
            this.showTwitchBroadcasterDialog()
        },
        showTwitchBroadcasterDialog(t) {
            let e = `
            <div class='icon-${this.client.roles.broadcaster.platform}'>
                ${this.client.roles.broadcaster.name}
            </div>`;
            e += `
            <div class='success'>
                You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.
            </div>`, this.lacksAudience ? e += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (e += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), kt.show("custom", {
                html: e,
                position: "bottom",
                timer: t,
                backdrop: "transparent",
                customClass: {
                    container: "jbgTwitchContainer",
                    popup: "jbgTwitchPopup",
                    htmlContainer: "jbgTwitchContent",
                    closeButton: "jbgCloseButton"
                },
                showCloseButton: !0,
                closeButtonHtml: `
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path>
                    <path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" />
                </svg>`,
                showConfirmButton: !1,
                showClass: {
                    popup: "jbgTwitchShow"
                },
                hideClass: {
                    popup: "jbgTwitchHide"
                }
            })
        },
        onResize() {
            const t = be(window).width(),
                e = be(window).height();
            be(".content,.controller-page").css({
                height: e,
                width: t
            })
        },
        onRoomWasDestroyed() {
            en.remove("roomCode"), en.remove("reconnect"), kt.show("error", {
                titleText: Hs[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
                text: Hs[this.locale].STRING_ERROR_SERVER_ROOM_DESTROYED,
                willClose: () => {
                    window.location.reload(!0)
                }
            })
        },
        onDisconnected() {
            kt.show("error", {
                titleText: Hs[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
                text: Hs[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
                willClose: () => {
                    window.location.reload(!0)
                }
            })
        },
        onConnectionMessage(t) {
            const e = `${t.status} ${t.attempt?`${t.attempt}/5`:""}`;
            if (kt.show("toast", {
                    text: e
                }), t.status === "connected") {
                const n = this.client.parseEntities();
                this.model.set(n)
            }
        },
        async onChildviewClientMessage(t) {
            if (this.client.isRole("player"))
                if (t.textKey) try {
                    await this.client.updateText(t.textKey, t.val)
                } catch (e) {
                    if (e instanceof ii.EcastEntityNotFound || e instanceof ii.EcastPermissionDenied) console.error(`Couldn't update text entity ${t.textKey}: ${e.message}`);
                    else if (e instanceof ii.EcastFilterError) this.currentLayout.onTextFilterError && this.currentLayout.onTextFilterError(e);
                    else throw console.error(`Unhandled error updating text entity ${t.textKey}`), e
                } else if (t.objectKey) try {
                    await this.client.updateObject(t.objectKey, t.val)
                } catch (e) {
                    if (e instanceof ii.EcastEntityNotFound || e instanceof ii.EcastPermissionDenied) console.error(`Couldn't update object entity ${t.objectKey}: ${e.message}`);
                    else if (e instanceof ii.EcastFilterError) this.currentLayout.onObjectFilterError && this.currentLayout.onObjectFilterError(e);
                    else throw console.error(`Unhandled error updating object entity ${t.objectKey}`), e
                } else {
                    const e = this.formatSessionMessage(t);
                    this.client.send("SendMessageToRoomOwner", e)
                } else if (this.client.isRole("audience")) {
                    const e = this.currentLayout.sessionModule,
                        n = this.formatSessionMessage(t);
                    if (!e) return;
                    if (e === "vote") {
                        const i = this.currentLayout.model.get("countGroupName"),
                            o = n.vote;
                        this.onChildviewClientCountGroup({
                            name: i,
                            vote: o
                        })
                    }
                    if (e === "comment") {
                        const i = this.currentLayout.model.get("textRingName"),
                            o = n.entry;
                        this.onChildviewClientTextRing({
                            name: i,
                            text: o
                        })
                    }
                }
        },
        onChildviewClientSessionMessage(t) {
            this.client.sessionSend(t.sessionModule, t.sessionName, t.sessionMessage)
        },
        onChildviewClientCountGroup({
            name: t,
            vote: e
        }) {
            t || (t = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.incrementCountGroupCounter(t, e)
        },
        onChildviewClientGCounter({
            key: t,
            times: e
        }) {
            this.client.incrementGCounter(t, e)
        },
        onChildviewClientTextRing({
            name: t,
            text: e
        }) {
            t || (t = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.pushTextRing(t, e)
        }
    });
    var Lh = {
        exports: {}
    };
    /*!
     * EventEmitter v5.2.9 - git.io/ee
     * Unlicense - http://unlicense.org/
     * Oliver Caldwell - https://oli.me.uk/
     * @preserve
     */
    (function(t) {
        (function(e) {
            function n() {}
            var i = n.prototype,
                o = e.EventEmitter;

            function d(S, T) {
                for (var D = S.length; D--;)
                    if (S[D].listener === T) return D;
                return -1
            }

            function m(S) {
                return function() {
                    return this[S].apply(this, arguments)
                }
            }
            i.getListeners = function(T) {
                var D = this._getEvents(),
                    V, Y;
                if (T instanceof RegExp) {
                    V = {};
                    for (Y in D) D.hasOwnProperty(Y) && T.test(Y) && (V[Y] = D[Y])
                } else V = D[T] || (D[T] = []);
                return V
            }, i.flattenListeners = function(T) {
                var D = [],
                    V;
                for (V = 0; V < T.length; V += 1) D.push(T[V].listener);
                return D
            }, i.getListenersAsObject = function(T) {
                var D = this.getListeners(T),
                    V;
                return D instanceof Array && (V = {}, V[T] = D), V || D
            };

            function C(S) {
                return typeof S == "function" || S instanceof RegExp ? !0 : S && typeof S == "object" ? C(S.listener) : !1
            }
            i.addListener = function(T, D) {
                if (!C(D)) throw new TypeError("listener must be a function");
                var V = this.getListenersAsObject(T),
                    Y = typeof D == "object",
                    ie;
                for (ie in V) V.hasOwnProperty(ie) && d(V[ie], D) === -1 && V[ie].push(Y ? D : {
                    listener: D,
                    once: !1
                });
                return this
            }, i.on = m("addListener"), i.addOnceListener = function(T, D) {
                return this.addListener(T, {
                    listener: D,
                    once: !0
                })
            }, i.once = m("addOnceListener"), i.defineEvent = function(T) {
                return this.getListeners(T), this
            }, i.defineEvents = function(T) {
                for (var D = 0; D < T.length; D += 1) this.defineEvent(T[D]);
                return this
            }, i.removeListener = function(T, D) {
                var V = this.getListenersAsObject(T),
                    Y, ie;
                for (ie in V) V.hasOwnProperty(ie) && (Y = d(V[ie], D), Y !== -1 && V[ie].splice(Y, 1));
                return this
            }, i.off = m("removeListener"), i.addListeners = function(T, D) {
                return this.manipulateListeners(!1, T, D)
            }, i.removeListeners = function(T, D) {
                return this.manipulateListeners(!0, T, D)
            }, i.manipulateListeners = function(T, D, V) {
                var Y, ie, K = T ? this.removeListener : this.addListener,
                    re = T ? this.removeListeners : this.addListeners;
                if (typeof D == "object" && !(D instanceof RegExp))
                    for (Y in D) D.hasOwnProperty(Y) && (ie = D[Y]) && (typeof ie == "function" ? K.call(this, Y, ie) : re.call(this, Y, ie));
                else
                    for (Y = V.length; Y--;) K.call(this, D, V[Y]);
                return this
            }, i.removeEvent = function(T) {
                var D = typeof T,
                    V = this._getEvents(),
                    Y;
                if (D === "string") delete V[T];
                else if (T instanceof RegExp)
                    for (Y in V) V.hasOwnProperty(Y) && T.test(Y) && delete V[Y];
                else delete this._events;
                return this
            }, i.removeAllListeners = m("removeEvent"), i.emitEvent = function(T, D) {
                var V = this.getListenersAsObject(T),
                    Y, ie, K, re, v;
                for (re in V)
                    if (V.hasOwnProperty(re))
                        for (Y = V[re].slice(0), K = 0; K < Y.length; K++) ie = Y[K], ie.once === !0 && this.removeListener(T, ie.listener), v = ie.listener.apply(this, D || []), v === this._getOnceReturnValue() && this.removeListener(T, ie.listener);
                return this
            }, i.trigger = m("emitEvent"), i.emit = function(T) {
                var D = Array.prototype.slice.call(arguments, 1);
                return this.emitEvent(T, D)
            }, i.setOnceReturnValue = function(T) {
                return this._onceReturnValue = T, this
            }, i._getOnceReturnValue = function() {
                return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0
            }, i._getEvents = function() {
                return this._events || (this._events = {})
            }, n.noConflict = function() {
                return e.EventEmitter = o, n
            }, t.exports ? t.exports = n : e.EventEmitter = n
        })(typeof window < "u" ? window : vt || {})
    })(Lh);
    const px = Lh.exports;
    class gx extends px {
        constructor(n, i) {
            super();
            it(this, "wsClient");
            it(this, "name");
            it(this, "id");
            it(this, "userId");
            it(this, "uuid");
            it(this, "joinAs", "player");
            it(this, "room");
            it(this, "roles", {});
            it(this, "code", null);
            it(this, "host");
            it(this, "onPlayerWelcome", n => {
                this.id = n.id, this.roles = n.profile ? n.profile.roles : {}, n.here && (this.host = Object.values(n.here).find(({
                    roles: i
                }) => i.host)), this.emit("client:didJoinRoom", {
                    appId: this.room.appId,
                    appTag: this.room.appTag,
                    id: n.id,
                    reconnect: `${n.id}:${this.joinAs}:${n.secret}`
                })
            });
            it(this, "parseEntities", () => {
                if (!this.wsClient) return {};
                const n = this.wsClient.entities,
                    i = {};
                return Object.keys(n).forEach(o => {
                    const d = n[o];
                    o === "room" || o === "bc:room" || o === "roomBlob" ? (d instanceof Pi.TextEntity && (i.room = d.toBlob()), d instanceof Pi.ObjectEntity && (i.room = d.val)) : o === "player" || o === `player:${this.id}` || o === `bc:customer:${this.userId}` ? (d instanceof Pi.TextEntity && (i.player = d.toBlob()), d instanceof Pi.ObjectEntity && (i.player = d.val)) : o === "audiencePlayer" && (d instanceof Pi.TextEntity && (i.audiencePlayer = d.toBlob()), d instanceof Pi.ObjectEntity && (i.audiencePlayer = d.val))
                }), i
            });
            this.wsClient = n, this.name = n.name, this.userId = n.userId, this.uuid = n.userId, this.joinAs = n.role, this.room = i.room, n.on("object", this.onObject.bind(this)), n.on("room/exit", this.onRoomExit.bind(this)), n.on("socketClose", this.onSocketClose.bind(this)), n.on("connection", this.onConnection.bind(this)), n.on("text", this.onText.bind(this)), this.onPlayerWelcome(i.welcome)
        }
        get entities() {
            return this.wsClient ? this.wsClient.entities : {
                none: !0
            }
        }
        get isReady() {
            var n;
            return ((n = this.wsClient) == null ? void 0 : n.conn.readyState) === WebSocket.OPEN
        }
        isRole(n) {
            const i = Object.keys(this.roles);
            return !i.length && n === "audience" ? !0 : i.includes(n)
        }
        disconnect() {
            !this.wsClient || (this.wsClient.disconnect(), this.wsClient = null)
        }
        onText(n) {
            const i = n.key,
                o = n.text;
            let d = n.text;
            try {
                d = JSON.parse(d)
            } catch {
                wc(`[Ecast Client] Unhandled text notification: ${n.key} ${o}`);
                return
            }
            const m = d;
            i === "room" ? this.emit("client:entityDidChange", i, m) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", m) : i === "bc:room" ? this.emit("client:entityDidChange", "room", m) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", m) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", m) : wc(`[Ecast Client] Unhandled json notification: ${i}`)
        }
        onObject(n) {
            const i = n.key,
                o = n.val;
            i === "room" ? this.emit("client:entityDidChange", i, o) : i === "player" ? this.emit("client:entityDidChange", "player", o) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", o) : i === "textDescriptions" ? this.emit("client:textDescriptions", i, o) : i === "bc:room" ? this.emit("client:entityDidChange", "room", o) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", o) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", o) : console.warn(`[Ecast Client] Unhandled json notification: ${i}`)
        }
        onSocketClose(n) {
            n instanceof ii.EcastServerError || n.code === 1005 || n.code === 1e3 ? this.emit("client:roomWasDestroyed") : this.emit("client:disconnected"), this.disconnect(), this.code = null
        }
        onRoomExit(n) {
            this.emit("client:disconnected", n), this.disconnect()
        }
        onConnection(n) {
            this.emit("client:connection", n)
        }
        async send(n, i) {
            var o, d;
            if (!!this.isReady) try {
                if (n === "SendMessageToRoomOwner") {
                    const m = (d = (o = this.host) == null ? void 0 : o.id) != null ? d : "1";
                    await this.wsClient.mail(m, i)
                } else await this.wsClient.send(n, i)
            } catch (m) {
                console.error(m)
            }
        }
        sessionSend(n, i, o) {
            !this.isReady || (n === "vote" && this.incrementCountGroupCounter(i, `${o.vote}`), n === "comment" && this.pushTextRing(i, `${o.comment}`))
        }
        async updateText(n, i) {
            if (!!this.isReady) try {
                await this.wsClient.updateText(n, i)
            } catch (o) {
                throw console.warn("Text update rejected.", o), o
            }
        }
        async updateObject(n, i) {
            if (!!this.isReady) try {
                await this.wsClient.updateObject(n, i)
            } catch (o) {
                throw console.warn("Object update rejected.", o), o
            }
        }
        async incrementCountGroupCounter(n, i) {
            if (!!this.isReady) try {
                await this.wsClient.incrementCountGroupCounter(n, `${i}`)
            } catch (o) {
                console.error(o)
            }
        }
        async incrementGCounter(n, i) {
            if (!!this.isReady) try {
                await this.wsClient.incrementGCounter(n, i)
            } catch (o) {
                console.error(o)
            }
        }
        async pushTextRing(n, i) {
            if (!!this.isReady) try {
                await this.wsClient.pushTextRing(n, `${i}`)
            } catch (o) {
                console.error(o)
            }
        }
    }
    const mx = `<div id="content-region" class="content"></div>
<div id="debug-region" class="debug"></div>
<div id="banner" class="post-banner"></div>`;
    (function(t) {
        t(be)
    })(function(t) {
        var e, n = navigator.userAgent,
            i = /iphone/i.test(n),
            o = /chrome/i.test(n),
            d = /android/i.test(n);
        t.mask = {
            definitions: {
                9: "[0-9]",
                a: "[A-Za-z]",
                "*": "[A-Za-z0-9]"
            },
            autoclear: !0,
            dataName: "rawMaskFn",
            placeholder: "_"
        }, t.fn.extend({
            caret: function(m, C) {
                var S;
                if (this.length !== 0 && !this.is(":hidden")) return typeof m == "number" ? (C = typeof C == "number" ? C : m, this.each(function() {
                    this.setSelectionRange ? this.setSelectionRange(m, C) : this.createTextRange && (S = this.createTextRange(), S.collapse(!0), S.moveEnd("character", C), S.moveStart("character", m), S.select())
                })) : (this[0].setSelectionRange ? (m = this[0].selectionStart, C = this[0].selectionEnd) : document.selection && document.selection.createRange && (S = document.selection.createRange(), m = 0 - S.duplicate().moveStart("character", -1e5), C = m + S.text.length), {
                    begin: m,
                    end: C
                })
            },
            unmask: function() {
                return this.trigger("unmask")
            },
            mask: function(m, C) {
                var S, T, D, V, Y, ie, K, re;
                if (!m && this.length > 0) {
                    S = t(this[0]);
                    var v = S.data(t.mask.dataName);
                    return v ? v() : void 0
                }
                return C = t.extend({
                    autoclear: t.mask.autoclear,
                    placeholder: t.mask.placeholder,
                    completed: null
                }, C), T = t.mask.definitions, D = [], V = K = m.length, Y = null, t.each(m.split(""), function(P, H) {
                    H == "?" ? (K--, V = P) : T[H] ? (D.push(new RegExp(T[H])), Y === null && (Y = D.length - 1), V > P && (ie = D.length - 1)) : D.push(null)
                }), this.trigger("unmask").each(function() {
                    function P() {
                        if (C.completed) {
                            for (var ye = Y; ie >= ye; ye++)
                                if (D[ye] && oe[ye] === H(ye)) return;
                            C.completed.call(z)
                        }
                    }

                    function H(ye) {
                        return C.placeholder.charAt(ye < C.placeholder.length ? ye : 0)
                    }

                    function ae(ye) {
                        for (; ++ye < K && !D[ye];);
                        return ye
                    }

                    function se(ye) {
                        for (; --ye >= 0 && !D[ye];);
                        return ye
                    }

                    function ve(ye, ue) {
                        var Se, Te;
                        if (!(0 > ye)) {
                            for (Se = ye, Te = ae(ue); K > Se; Se++)
                                if (D[Se]) {
                                    if (!(K > Te && D[Se].test(oe[Te]))) break;
                                    oe[Se] = oe[Te], oe[Te] = H(Te), Te = ae(Te)
                                } J(), z.caret(Math.max(Y, ye))
                        }
                    }

                    function f(ye) {
                        var ue, Se, Te, Be;
                        for (ue = ye, Se = H(ye); K > ue; ue++)
                            if (D[ue]) {
                                if (Te = ae(ue), Be = oe[ue], oe[ue] = Se, !(K > Te && D[Te].test(Be))) break;
                                Se = Be
                            }
                    }

                    function Ee() {
                        var ye = z.val(),
                            ue = z.caret();
                        if (re && re.length && re.length > ye.length) {
                            for (je(!0); ue.begin > 0 && !D[ue.begin - 1];) ue.begin--;
                            if (ue.begin === 0)
                                for (; ue.begin < Y && !D[ue.begin];) ue.begin++;
                            z.caret(ue.begin, ue.begin)
                        } else {
                            for (je(!0); ue.begin < K && !D[ue.begin];) ue.begin++;
                            z.caret(ue.begin, ue.begin)
                        }
                        P()
                    }

                    function Oe() {
                        je(), z.val() != we && z.change()
                    }

                    function Pe(ye) {
                        if (!z.prop("readonly")) {
                            var ue, Se, Te, Be = ye.which || ye.keyCode;
                            re = z.val(), Be === 8 || Be === 46 || i && Be === 127 ? (ue = z.caret(), Se = ue.begin, Te = ue.end, Te - Se === 0 && (Se = Be !== 46 ? se(Se) : Te = ae(Se - 1), Te = Be === 46 ? ae(Te) : Te), Ve(Se, Te), ve(Se, Te - 1), ye.preventDefault()) : Be === 13 ? Oe.call(this, ye) : Be === 27 && (z.val(we), z.caret(0, je()), ye.preventDefault())
                        }
                    }

                    function lt(ye) {
                        if (!z.prop("readonly")) {
                            var ue, Se, Te, Be = ye.which || ye.keyCode,
                                Ke = z.caret();
                            if (!(ye.ctrlKey || ye.altKey || ye.metaKey || 32 > Be) && Be && Be !== 13) {
                                if (Ke.end - Ke.begin !== 0 && (Ve(Ke.begin, Ke.end), ve(Ke.begin, Ke.end - 1)), ue = ae(Ke.begin - 1), K > ue && (Se = String.fromCharCode(Be), D[ue].test(Se))) {
                                    if (f(ue), oe[ue] = Se, J(), Te = ae(ue), d) {
                                        var dt = function() {
                                            t.proxy(t.fn.caret, z, Te)()
                                        };
                                        setTimeout(dt, 0)
                                    } else z.caret(Te);
                                    Ke.begin <= ie && P()
                                }
                                ye.preventDefault()
                            }
                        }
                    }

                    function Ve(ye, ue) {
                        var Se;
                        for (Se = ye; ue > Se && K > Se; Se++) D[Se] && (oe[Se] = H(Se))
                    }

                    function J() {
                        z.val(oe.join(""))
                    }

                    function je(ye) {
                        var ue, Se, Te, Be = z.val(),
                            Ke = -1;
                        for (ue = 0, Te = 0; K > ue; ue++)
                            if (D[ue]) {
                                for (oe[ue] = H(ue); Te++ < Be.length;)
                                    if (Se = Be.charAt(Te - 1), D[ue].test(Se)) {
                                        oe[ue] = Se, Ke = ue;
                                        break
                                    } if (Te > Be.length) {
                                    Ve(ue + 1, K);
                                    break
                                }
                            } else oe[ue] === Be.charAt(Te) && Te++, V > ue && (Ke = ue);
                        return ye ? J() : V > Ke + 1 ? C.autoclear || oe.join("") === Ae ? (z.val() && z.val(""), Ve(0, K)) : J() : (J(), z.val(z.val().substring(0, Ke + 1))), V ? ue : Y
                    }
                    var z = t(this),
                        oe = t.map(m.split(""), function(ye, ue) {
                            return ye != "?" ? T[ye] ? H(ue) : ye : void 0
                        }),
                        Ae = oe.join(""),
                        we = z.val();
                    z.data(t.mask.dataName, function() {
                        return t.map(oe, function(ye, ue) {
                            return D[ue] && ye != H(ue) ? ye : null
                        }).join("")
                    }), z.one("unmask", function() {
                        z.off(".mask").removeData(t.mask.dataName)
                    }).on("focus.mask", function() {
                        if (!z.prop("readonly")) {
                            clearTimeout(e);
                            var ye;
                            we = z.val(), ye = je(), e = setTimeout(function() {
                                z.get(0) === document.activeElement && (J(), ye == m.replace("?", "").length ? z.caret(0, ye) : z.caret(ye))
                            }, 10)
                        }
                    }).on("blur.mask", Oe).on("keydown.mask", Pe).on("keypress.mask", lt).on("input.mask paste.mask", function() {
                        z.prop("readonly") || setTimeout(function() {
                            var ye = je(!0);
                            z.caret(ye), P()
                        }, 0)
                    }), o && d && z.off("input.mask").on("input.mask", Ee), je()
                })
            }
        })
    });
    window.$ = be;
    window.jQuery = be;
    const vx = xt.View.extend({
            className: "app-root",
            template: Ze.template(mx),
            regions: {
                content: "#content-region",
                dialog: "#dialog-region",
                debug: "#debug-region"
            },
            showView(t, e = {}) {
                const n = new t(e);
                this.showChildView("content", n)
            }
        }),
        yx = t => {
            let e;
            window.tv.register({
                connect: n => (e = new Pi.WSClient(n), e.connect()),
                mount: n => {
                    const i = new gx(e, n);
                    let o = new xt.Application({
                        region: "#app",
                        onStart() {
                            const d = new vx;
                            this.showView(d), d.showView(t.MainView, {
                                appId: n.room.appId,
                                appTag: n.room.appTag,
                                replayer: n.replayer,
                                client: i
                            })
                        }
                    });
                    return o.start(), () => {
                        o.destroy(), o = null
                    }
                },
                info: n => ({
                    branch: n.branch,
                    tag: n.app,
                    type: n.type,
                    version: n.version,
                    wrapper: "marionette"
                })
            })
        };

    function bx() {
        return typeof __SENTRY_BROWSER_BUNDLE__ < "u" && !!__SENTRY_BROWSER_BUNDLE__
    }

    function Tl() {
        return !bx() && Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]"
    }

    function wx(t, e) {
        return t.require(e)
    }
    var Cx = {};

    function bi() {
        return Tl() ? global : typeof window < "u" ? window : typeof self < "u" ? self : Cx
    }

    function Al(t, e, n) {
        var i = n || bi(),
            o = i.__SENTRY__ = i.__SENTRY__ || {},
            d = o[t] || (o[t] = e());
        return d
    }
    var _x = Object.prototype.toString;

    function xx(t, e) {
        return _x.call(t) === `[object ${e}]`
    }

    function Ph(t) {
        return xx(t, "Object")
    }

    function $h(t) {
        return Boolean(t && t.then && typeof t.then == "function")
    }
    var Ex = bi(),
        Sx = "Sentry Logger ",
        Wa = ["debug", "info", "warn", "error", "log", "assert", "trace"];

    function Nh(t) {
        var e = bi();
        if (!("console" in e)) return t();
        var n = e.console,
            i = {};
        Wa.forEach(o => {
            var d = n[o] && n[o].__sentry_original__;
            o in e.console && d && (i[o] = n[o], n[o] = d)
        });
        try {
            return t()
        } finally {
            Object.keys(i).forEach(o => {
                n[o] = i[o]
            })
        }
    }

    function Nc() {
        let t = !1;
        var e = {
            enable: () => {
                t = !0
            },
            disable: () => {
                t = !1
            }
        };
        return typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__ ? Wa.forEach(n => {
            e[n] = (...i) => {
                t && Nh(() => {
                    Ex.console[n](`${Sx}[${n}]:`, ...i)
                })
            }
        }) : Wa.forEach(n => {
            e[n] = () => {}
        }), e
    }
    let ms;
    typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__ ? ms = Al("logger", Nc) : ms = Nc();

    function kx(t) {
        var e = new Map;
        return Xa(t, e)
    }

    function Xa(t, e) {
        if (Ph(t)) {
            var n = e.get(t);
            if (n !== void 0) return n;
            var i = {};
            e.set(t, i);
            for (var o of Object.keys(t)) typeof t[o] < "u" && (i[o] = Xa(t[o], e));
            return i
        }
        if (Array.isArray(t)) {
            var n = e.get(t);
            if (n !== void 0) return n;
            var i = [];
            return e.set(t, i), t.forEach(C => {
                i.push(Xa(C, e))
            }), i
        }
        return t
    }

    function gs() {
        var t = bi(),
            e = t.crypto || t.msCrypto;
        if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
        var n = e && e.getRandomValues ? () => e.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;
        return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, i => (i ^ (n() & 15) >> i / 4).toString(16))
    }
    var ti;
    (function(t) {
        var e = 0;
        t[t.PENDING = e] = "PENDING";
        var n = 1;
        t[t.RESOLVED = n] = "RESOLVED";
        var i = 2;
        t[t.REJECTED = i] = "REJECTED"
    })(ti || (ti = {}));
    class Bn {
        __init() {
            this._state = ti.PENDING
        }
        __init2() {
            this._handlers = []
        }
        constructor(e) {
            Bn.prototype.__init.call(this), Bn.prototype.__init2.call(this), Bn.prototype.__init3.call(this), Bn.prototype.__init4.call(this), Bn.prototype.__init5.call(this), Bn.prototype.__init6.call(this);
            try {
                e(this._resolve, this._reject)
            } catch (n) {
                this._reject(n)
            }
        }
        then(e, n) {
            return new Bn((i, o) => {
                this._handlers.push([!1, d => {
                    if (!e) i(d);
                    else try {
                        i(e(d))
                    } catch (m) {
                        o(m)
                    }
                }, d => {
                    if (!n) o(d);
                    else try {
                        i(n(d))
                    } catch (m) {
                        o(m)
                    }
                }]), this._executeHandlers()
            })
        } catch (e) {
            return this.then(n => n, e)
        } finally(e) {
            return new Bn((n, i) => {
                let o, d;
                return this.then(m => {
                    d = !1, o = m, e && e()
                }, m => {
                    d = !0, o = m, e && e()
                }).then(() => {
                    if (d) {
                        i(o);
                        return
                    }
                    n(o)
                })
            })
        }
        __init3() {
            this._resolve = e => {
                this._setResult(ti.RESOLVED, e)
            }
        }
        __init4() {
            this._reject = e => {
                this._setResult(ti.REJECTED, e)
            }
        }
        __init5() {
            this._setResult = (e, n) => {
                if (this._state === ti.PENDING) {
                    if ($h(n)) {
                        n.then(this._resolve, this._reject);
                        return
                    }
                    this._state = e, this._value = n, this._executeHandlers()
                }
            }
        }
        __init6() {
            this._executeHandlers = () => {
                if (this._state !== ti.PENDING) {
                    var e = this._handlers.slice();
                    this._handlers = [], e.forEach(n => {
                        n[0] || (this._state === ti.RESOLVED && n[1](this._value), this._state === ti.REJECTED && n[2](this._value), n[0] = !0)
                    })
                }
            }
        }
    }
    var Ya = {
        nowSeconds: () => Date.now() / 1e3
    };

    function Tx() {
        const {
            performance: t
        } = bi();
        if (!(!t || !t.now)) {
            var e = Date.now() - t.now();
            return {
                now: () => t.now(),
                timeOrigin: e
            }
        }
    }

    function Ax() {
        try {
            var t = wx(jh, "perf_hooks");
            return t.performance
        } catch {
            return
        }
    }
    var Ra = Tl() ? Ax() : Tx(),
        Vc = Ra === void 0 ? Ya : {
            nowSeconds: () => (Ra.timeOrigin + Ra.now()) / 1e3
        },
        Vh = Ya.nowSeconds.bind(Ya),
        Bh = Vc.nowSeconds.bind(Vc);
    (() => {
        const {
            performance: t
        } = bi();
        if (!(!t || !t.now)) {
            var e = 3600 * 1e3,
                n = t.now(),
                i = Date.now(),
                o = t.timeOrigin ? Math.abs(t.timeOrigin + n - i) : e,
                d = o < e,
                m = t.timing && t.timing.navigationStart,
                C = typeof m == "number",
                S = C ? Math.abs(m + n - i) : e,
                T = S < e;
            return d || T ? o <= S ? t.timeOrigin : m : i
        }
    })();

    function Ox(t) {
        var e = Bh(),
            n = {
                sid: gs(),
                init: !0,
                timestamp: e,
                started: e,
                duration: 0,
                status: "ok",
                errors: 0,
                ignoreDuration: !1,
                toJSON: () => Ix(n)
            };
        return t && Ao(n, t), n
    }

    function Ao(t, e = {}) {
        if (e.user && (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address), !t.did && !e.did && (t.did = e.user.id || e.user.email || e.user.username)), t.timestamp = e.timestamp || Bh(), e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration), e.sid && (t.sid = e.sid.length === 32 ? e.sid : gs()), e.init !== void 0 && (t.init = e.init), !t.did && e.did && (t.did = `${e.did}`), typeof e.started == "number" && (t.started = e.started), t.ignoreDuration) t.duration = void 0;
        else if (typeof e.duration == "number") t.duration = e.duration;
        else {
            var n = t.timestamp - t.started;
            t.duration = n >= 0 ? n : 0
        }
        e.release && (t.release = e.release), e.environment && (t.environment = e.environment), !t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress), !t.userAgent && e.userAgent && (t.userAgent = e.userAgent), typeof e.errors == "number" && (t.errors = e.errors), e.status && (t.status = e.status)
    }

    function Rx(t, e) {
        let n = {};
        e ? n = {
            status: e
        } : t.status === "ok" && (n = {
            status: "exited"
        }), Ao(t, n)
    }

    function Ix(t) {
        return kx({
            sid: `${t.sid}`,
            init: t.init,
            started: new Date(t.started * 1e3).toISOString(),
            timestamp: new Date(t.timestamp * 1e3).toISOString(),
            status: t.status,
            errors: t.errors,
            did: typeof t.did == "number" || typeof t.did == "string" ? `${t.did}` : void 0,
            duration: t.duration,
            attrs: {
                release: t.release,
                environment: t.environment,
                ip_address: t.ipAddress,
                user_agent: t.userAgent
            }
        })
    }
    var Bc = 100;
    class qi {
        constructor() {
            this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}
        }
        static clone(e) {
            var n = new qi;
            return e && (n._breadcrumbs = [...e._breadcrumbs], n._tags = {
                ...e._tags
            }, n._extra = {
                ...e._extra
            }, n._contexts = {
                ...e._contexts
            }, n._user = e._user, n._level = e._level, n._span = e._span, n._session = e._session, n._transactionName = e._transactionName, n._fingerprint = e._fingerprint, n._eventProcessors = [...e._eventProcessors], n._requestSession = e._requestSession, n._attachments = [...e._attachments]), n
        }
        addScopeListener(e) {
            this._scopeListeners.push(e)
        }
        addEventProcessor(e) {
            return this._eventProcessors.push(e), this
        }
        setUser(e) {
            return this._user = e || {}, this._session && Ao(this._session, {
                user: e
            }), this._notifyScopeListeners(), this
        }
        getUser() {
            return this._user
        }
        getRequestSession() {
            return this._requestSession
        }
        setRequestSession(e) {
            return this._requestSession = e, this
        }
        setTags(e) {
            return this._tags = {
                ...this._tags,
                ...e
            }, this._notifyScopeListeners(), this
        }
        setTag(e, n) {
            return this._tags = {
                ...this._tags,
                [e]: n
            }, this._notifyScopeListeners(), this
        }
        setExtras(e) {
            return this._extra = {
                ...this._extra,
                ...e
            }, this._notifyScopeListeners(), this
        }
        setExtra(e, n) {
            return this._extra = {
                ...this._extra,
                [e]: n
            }, this._notifyScopeListeners(), this
        }
        setFingerprint(e) {
            return this._fingerprint = e, this._notifyScopeListeners(), this
        }
        setLevel(e) {
            return this._level = e, this._notifyScopeListeners(), this
        }
        setTransactionName(e) {
            return this._transactionName = e, this._notifyScopeListeners(), this
        }
        setContext(e, n) {
            return n === null ? delete this._contexts[e] : this._contexts = {
                ...this._contexts,
                [e]: n
            }, this._notifyScopeListeners(), this
        }
        setSpan(e) {
            return this._span = e, this._notifyScopeListeners(), this
        }
        getSpan() {
            return this._span
        }
        getTransaction() {
            var e = this.getSpan();
            return e && e.transaction
        }
        setSession(e) {
            return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this
        }
        getSession() {
            return this._session
        }
        update(e) {
            if (!e) return this;
            if (typeof e == "function") {
                var n = e(this);
                return n instanceof qi ? n : this
            }
            return e instanceof qi ? (this._tags = {
                ...this._tags,
                ...e._tags
            }, this._extra = {
                ...this._extra,
                ...e._extra
            }, this._contexts = {
                ...this._contexts,
                ...e._contexts
            }, e._user && Object.keys(e._user).length && (this._user = e._user), e._level && (this._level = e._level), e._fingerprint && (this._fingerprint = e._fingerprint), e._requestSession && (this._requestSession = e._requestSession)) : Ph(e) && (e = e, this._tags = {
                ...this._tags,
                ...e.tags
            }, this._extra = {
                ...this._extra,
                ...e.extra
            }, this._contexts = {
                ...this._contexts,
                ...e.contexts
            }, e.user && (this._user = e.user), e.level && (this._level = e.level), e.fingerprint && (this._fingerprint = e.fingerprint), e.requestSession && (this._requestSession = e.requestSession)), this
        }
        clear() {
            return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this
        }
        addBreadcrumb(e, n) {
            var i = typeof n == "number" ? Math.min(n, Bc) : Bc;
            if (i <= 0) return this;
            var o = {
                timestamp: Vh(),
                ...e
            };
            return this._breadcrumbs = [...this._breadcrumbs, o].slice(-i), this._notifyScopeListeners(), this
        }
        clearBreadcrumbs() {
            return this._breadcrumbs = [], this._notifyScopeListeners(), this
        }
        addAttachment(e) {
            return this._attachments.push(e), this
        }
        getAttachments() {
            return this._attachments
        }
        clearAttachments() {
            return this._attachments = [], this
        }
        applyToEvent(e, n = {}) {
            if (this._extra && Object.keys(this._extra).length && (e.extra = {
                    ...this._extra,
                    ...e.extra
                }), this._tags && Object.keys(this._tags).length && (e.tags = {
                    ...this._tags,
                    ...e.tags
                }), this._user && Object.keys(this._user).length && (e.user = {
                    ...this._user,
                    ...e.user
                }), this._contexts && Object.keys(this._contexts).length && (e.contexts = {
                    ...this._contexts,
                    ...e.contexts
                }), this._level && (e.level = this._level), this._transactionName && (e.transaction = this._transactionName), this._span) {
                e.contexts = {
                    trace: this._span.getTraceContext(),
                    ...e.contexts
                };
                var i = this._span.transaction && this._span.transaction.name;
                i && (e.tags = {
                    transaction: i,
                    ...e.tags
                })
            }
            return this._applyFingerprint(e), e.breadcrumbs = [...e.breadcrumbs || [], ...this._breadcrumbs], e.breadcrumbs = e.breadcrumbs.length > 0 ? e.breadcrumbs : void 0, e.sdkProcessingMetadata = {
                ...e.sdkProcessingMetadata,
                ...this._sdkProcessingMetadata
            }, this._notifyEventProcessors([...Dx(), ...this._eventProcessors], e, n)
        }
        setSDKProcessingMetadata(e) {
            return this._sdkProcessingMetadata = {
                ...this._sdkProcessingMetadata,
                ...e
            }, this
        }
        _notifyEventProcessors(e, n, i, o = 0) {
            return new Bn((d, m) => {
                var C = e[o];
                if (n === null || typeof C != "function") d(n);
                else {
                    var S = C({
                        ...n
                    }, i);
                    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && C.id && S === null && ms.log(`Event processor "${C.id}" dropped event`), $h(S) ? S.then(T => this._notifyEventProcessors(e, T, i, o + 1).then(d)).then(null, m) : this._notifyEventProcessors(e, S, i, o + 1).then(d).then(null, m)
                }
            })
        }
        _notifyScopeListeners() {
            this._notifyingListeners || (this._notifyingListeners = !0, this._scopeListeners.forEach(e => {
                e(this)
            }), this._notifyingListeners = !1)
        }
        _applyFingerprint(e) {
            e.fingerprint = e.fingerprint ? Array.isArray(e.fingerprint) ? e.fingerprint : [e.fingerprint] : [], this._fingerprint && (e.fingerprint = e.fingerprint.concat(this._fingerprint)), e.fingerprint && !e.fingerprint.length && delete e.fingerprint
        }
    }

    function Dx() {
        return Al("globalEventProcessors", () => [])
    }
    var Ol = 4,
        Mx = 100;
    class _s {
        __init() {
            this._stack = [{}]
        }
        constructor(e, n = new qi, i = Ol) {
            this._version = i, _s.prototype.__init.call(this), this.getStackTop().scope = n, e && this.bindClient(e)
        }
        isOlderThan(e) {
            return this._version < e
        }
        bindClient(e) {
            var n = this.getStackTop();
            n.client = e, e && e.setupIntegrations && e.setupIntegrations()
        }
        pushScope() {
            var e = qi.clone(this.getScope());
            return this.getStack().push({
                client: this.getClient(),
                scope: e
            }), e
        }
        popScope() {
            return this.getStack().length <= 1 ? !1 : !!this.getStack().pop()
        }
        withScope(e) {
            var n = this.pushScope();
            try {
                e(n)
            } finally {
                this.popScope()
            }
        }
        getClient() {
            return this.getStackTop().client
        }
        getScope() {
            return this.getStackTop().scope
        }
        getStack() {
            return this._stack
        }
        getStackTop() {
            return this._stack[this._stack.length - 1]
        }
        captureException(e, n) {
            var i = this._lastEventId = n && n.event_id ? n.event_id : gs(),
                o = new Error("Sentry syntheticException");
            return this._withClient((d, m) => {
                d.captureException(e, {
                    originalException: e,
                    syntheticException: o,
                    ...n,
                    event_id: i
                }, m)
            }), i
        }
        captureMessage(e, n, i) {
            var o = this._lastEventId = i && i.event_id ? i.event_id : gs(),
                d = new Error(e);
            return this._withClient((m, C) => {
                m.captureMessage(e, n, {
                    originalException: e,
                    syntheticException: d,
                    ...i,
                    event_id: o
                }, C)
            }), o
        }
        captureEvent(e, n) {
            var i = n && n.event_id ? n.event_id : gs();
            return e.type !== "transaction" && (this._lastEventId = i), this._withClient((o, d) => {
                o.captureEvent(e, {
                    ...n,
                    event_id: i
                }, d)
            }), i
        }
        lastEventId() {
            return this._lastEventId
        }
        addBreadcrumb(e, n) {
            const {
                scope: i,
                client: o
            } = this.getStackTop();
            if (!i || !o) return;
            const {
                beforeBreadcrumb: d = null,
                maxBreadcrumbs: m = Mx
            } = o.getOptions && o.getOptions() || {};
            if (!(m <= 0)) {
                var C = Vh(),
                    S = {
                        timestamp: C,
                        ...e
                    },
                    T = d ? Nh(() => d(S, n)) : S;
                T !== null && i.addBreadcrumb(T, m)
            }
        }
        setUser(e) {
            var n = this.getScope();
            n && n.setUser(e)
        }
        setTags(e) {
            var n = this.getScope();
            n && n.setTags(e)
        }
        setExtras(e) {
            var n = this.getScope();
            n && n.setExtras(e)
        }
        setTag(e, n) {
            var i = this.getScope();
            i && i.setTag(e, n)
        }
        setExtra(e, n) {
            var i = this.getScope();
            i && i.setExtra(e, n)
        }
        setContext(e, n) {
            var i = this.getScope();
            i && i.setContext(e, n)
        }
        configureScope(e) {
            const {
                scope: n,
                client: i
            } = this.getStackTop();
            n && i && e(n)
        }
        run(e) {
            var n = qc(this);
            try {
                e(this)
            } finally {
                qc(n)
            }
        }
        getIntegration(e) {
            var n = this.getClient();
            if (!n) return null;
            try {
                return n.getIntegration(e)
            } catch {
                return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && ms.warn(`Cannot retrieve integration ${e.id} from the current Hub`), null
            }
        }
        startTransaction(e, n) {
            return this._callExtensionMethod("startTransaction", e, n)
        }
        traceHeaders() {
            return this._callExtensionMethod("traceHeaders")
        }
        captureSession(e = !1) {
            if (e) return this.endSession();
            this._sendSessionUpdate()
        }
        endSession() {
            var e = this.getStackTop(),
                n = e && e.scope,
                i = n && n.getSession();
            i && Rx(i), this._sendSessionUpdate(), n && n.setSession()
        }
        startSession(e) {
            const {
                scope: n,
                client: i
            } = this.getStackTop(), {
                release: o,
                environment: d
            } = i && i.getOptions() || {};
            var m = bi();
            const {
                userAgent: C
            } = m.navigator || {};
            var S = Ox({
                release: o,
                environment: d,
                ...n && {
                    user: n.getUser()
                },
                ...C && {
                    userAgent: C
                },
                ...e
            });
            if (n) {
                var T = n.getSession && n.getSession();
                T && T.status === "ok" && Ao(T, {
                    status: "exited"
                }), this.endSession(), n.setSession(S)
            }
            return S
        }
        shouldSendDefaultPii() {
            var e = this.getClient(),
                n = e && e.getOptions();
            return Boolean(n && n.sendDefaultPii)
        }
        _sendSessionUpdate() {
            const {
                scope: e,
                client: n
            } = this.getStackTop();
            if (!!e) {
                var i = e.getSession();
                i && n && n.captureSession && n.captureSession(i)
            }
        }
        _withClient(e) {
            const {
                scope: n,
                client: i
            } = this.getStackTop();
            i && e(i, n)
        }
        _callExtensionMethod(e, ...n) {
            var i = Oo(),
                o = i.__SENTRY__;
            if (o && o.extensions && typeof o.extensions[e] == "function") return o.extensions[e].apply(this, n);
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && ms.warn(`Extension method ${e} couldn't be found, doing nothing.`)
        }
    }

    function Oo() {
        var t = bi();
        return t.__SENTRY__ = t.__SENTRY__ || {
            extensions: {},
            hub: void 0
        }, t
    }

    function qc(t) {
        var e = Oo(),
            n = fi(e);
        return Rl(e, t), n
    }

    function Lx() {
        var t = Oo();
        return (!qh(t) || fi(t).isOlderThan(Ol)) && Rl(t, new _s), Tl() ? Px(t) : fi(t)
    }

    function Px(t) {
        try {
            var e = Oo().__SENTRY__,
                n = e && e.extensions && e.extensions.domain && e.extensions.domain.active;
            if (!n) return fi(t);
            if (!qh(n) || fi(n).isOlderThan(Ol)) {
                var i = fi(t).getStackTop();
                Rl(n, new _s(i.client, qi.clone(i.scope)))
            }
            return fi(n)
        } catch {
            return fi(t)
        }
    }

    function qh(t) {
        return !!(t && t.__SENTRY__ && t.__SENTRY__.hub)
    }

    function fi(t) {
        return Al("hub", () => new _s, t)
    }

    function Rl(t, e) {
        if (!t) return !1;
        var n = t.__SENTRY__ = t.__SENTRY__ || {};
        return n.hub = e, !0
    }

    function jc(t, e) {
        var n = typeof e == "string" ? e : void 0,
            i = typeof e != "string" ? {
                captureContext: e
            } : void 0;
        return Lx().captureMessage(t, n, i)
    }
    const $x = `<div id="page-quiplash" class="page">
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Rokkitt:400,700" />
    <!-- Not sure why, but repeating the stylesheet makes Edge work -->
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Rokkitt:400,700" />
    <template id="quiplash2-vote-button"> 
        <div class="quiplash2-button-group"> 
            <button type="button" style='flex-grow:2;' data-vote='{{ order }}' class='quiplash2-vote-button quiplash2-button {{ quiplash2Disabled }} btn btn-lg'>{{ choiceString }}</button> 
            {{# if (censorable) { }} 
                <button data-censor='{{ order }}' class='quiplash2-censor-button quiplash2-button btn btn-lg' style="flex-grow:0;flex-basis:35px;">X</button> 
            {{# } }} 
        </div> 
    </template> 

    <div id="player">
        <h1><%=username%></h1>
    </div>
    
    <div id="quiplash-preload" class="quiplash-preload"></div>

    <div id="game" class="game pt-pageholder">    
        
        <div id="state-lobby" class="pt-page-off quiplash2-page">
            <div class="container">
                <div class="pure-u-1"></div>
                
                <div id="lobby-main-menu">
                    <p id="quiplash-lobby-text" class='quiplash-text'></p>
                    <form class="pure-form">
                        <button type="button" id="quiplash-startgame" class="lobby-button quiplash2-button btn btn-lg btn-block">everybody's in</button>
                        <button type="button" id="quiplash-stopcountdown" class="lobby-button quiplash2-button btn btn-lg btn-block">cancel</button>
                        <button type="button" id="quiplash-sameplayers" class="lobby-button quiplash2-button btn btn-lg btn-block quiplash-endbuttons">same players</button>
                        <button type="button" id="quiplash-newplayers" class="lobby-button quiplash2-button btn btn-lg btn-block quiplash-endbuttons">new players</button>    
                    </form>
                    
                    <div class="pure-u-1"></div>
                    
                    <form class="pure-form">
                        <button type="button" id="quiplash-lobby-menu-ugc" class="menu-button lobby-button quiplash2-button btn btn-lg btn-block">EPISODES MENU</button><br>
                        <button type="button" id="quiplash-lobby-menu-censor" class="menu-button lobby-button quiplash2-button btn btn-lg btn-block">Censor Menu</button><br>
                    </form>
                    <div id="quiplash2-lobby-postgame" class="quiplash2-quips">
                        <a target="_blank" class="gallery-link" href=""></a>
                    </div>
                </div>
                
                <div id="lobby-ugc">
                    <p id="lobby-ugc-error"></p>
                    <button type="button" class="quiplash-lobby-menu-back quiplash2-button btn btn-lg btn-block">back</button><br>
                    <div id="lobby-ugc-enter" class="lobby-ugc-option">
                        <form class="">
                            <div class="row">
                                <div class="col-xs-12">
                                    <p id="lobby-ugc-help" class='quiplash-text'>to load a custom episode, go to "make your own" or enter a 7-letter episode id</p>
                                    <p class="quiplash-text-box quiplash-text">Load an episode by id:</p>
                                </div>
                                <div class="col-xs-12">
                                    <div class="quiplash2-button-group">
                                        <input id="lobby-ugc-input" type="text" style="flex-grow:2;" class="capitalized jbg-input " placeholder="???-????" />
                                        <button type="submit" id="lobby-ugc-submit" style="flex-grow:0;min-width:120px;" class="quiplash2-button btn quiplash-text">submit</button>
                                    </div>
                                </div>
                            </div>
                            <small class="help quiplash-text quiplash-text-danger">warning : user generated content is not rated.</small>
                        </form>
                        
                        <div class="quiplash-ugc-previous">
                            <p class="quiplash-text">Or select an episode:</p>
    						<!-- <div id="lobby-ugc-history"></div> -->
                            <table id="lobby-ugc-history" class="quiplash-list"></table>
                        </div>
                    </div>
                    
                    <div id="lobby-ugc-choices" class="lobby-ugc-option">
                        <div class="quiplash-text-box" id="lobby-ugc-choices-content-id quiplash-text"></div>
                        <button type="button" id="lobby-ugc-clear" class="quiplash2-button quiplash2-button-black button-xlarge pure-button">unload</button><br>
						<button type="button" id="lobby-ugc-report" class="quiplash2-button quiplash2-button-black button-xlarge pure-button">report</button>
						<button type="button" id="lobby-ugc-view-author" class="quiplash2-button button-xlarge pure-button">view author</button>
                    </div>
                    
                </div>
                
                <div id="lobby-censor">
                    
                    <div class="pure-u-1"></div>
                    
                    <form class="pure-form">
                        <div class="pure-u-1">
                            <button type="button" class="quiplash-lobby-menu-back quiplash2-button btn btn-lg btn-block" style="margin-left: 0px; margin-right: 0px;">back</button>
                        </div>
                        
                        <div class="pure-u-1"></div>
                        
                        <div id="lobby-censor-players" class="pure-u-1"></div>
                        <div class="quiplash-text quiplash-text-alt">Hit X to CENSOR player for rest of the game, removing their answers and name. (It's kind of intense.)</div>
                    </form>
                </div>
                
            </div>
        </div>

        <div id="state-logo" class="pt-page-off quiplash2-page quiplash2-logo-image">
        </div>
        
        <div id="state-round" class="pt-page-off quiplash2-page">
            <div class="quiplash2-round-image quiplash2-round-0"></div>
            <div class="quiplash2-round-image quiplash2-round-1"></div>
            <div class="quiplash2-round-image quiplash2-round-2"></div>
        </div>
        
        <div id="state-answer-question" class="pt-page-off quiplash2-page">
            <div class="container">
                <p id="question-text-alt" class="quiplash-text-alt"></p>
                <p id="question-text" class="quiplash-text"></p>

                <span id="quiplash-submit-alert" class="alert alert-info">Alert message goes here</span>
                <form class="pure-form" id="quiplash-answer-field">
                    <div class="pure-u-1 gridmargin">
                        <input id="quiplash-answer-input" name="quiplash-answer" class="pure-input-1 capitalize jbg-input quiplash2-answer-input" type="text" maxlength="45" placeholder="ANSWER HERE" autocapitalize="off" autocorrect="off" autocomplete="off">
                    </div>
                    
                    <div class="pure-u-1 gridmargin">
                    <button type="submit" id="quiplash-submit-answer" class="quiplash2-button button-large pure-button capitalize" style="width:100%;"><i class="fas fa-paper-plane"></i>&nbsp;&nbsp;SEND</button>
                    </div>
                    
                    <div class="pure-u-1 gridmargin"></div>
                        
                    <div class="pure-u-1 gridmargin">
                    <button type="button" id="quiplash-submit-safetyquip" class="quiplash2-button button-large pure-button capitalize" style="width:100%;">SAFETY QUIP<br />(HALF POINTS)</button>
                    </div>
                    
                    <div class="pure-u-1 gridmargin">
                    <button type="button" id="quiplash-audience-censor" class="quiplash2-button button-large pure-button capitalize" style="width:100%; display:none;">CENSOR AUDIENCE</button>
                    </div>
                    
                    <div id="quiplash-submit-answer-loading" style="display:none;" class="quiplash2-button-loading"></div>
                </form>
                
                
                
                <div id="quiplash-suggestions" class="pure-g"></div>
            </div>
        </div>
        
        <div id="state-done-answering" class="pt-page-off quiplash2-page">
            <div style="padding-top:5px;">
                <p class="quiplash-text">Thanks for your answers!</p>
            </div>
            
            <div class="pure-u-1 gridmargin">
            <button type="button" id="quiplash-audience-censor-done" class="quiplash2-button button-large pure-button capitalize" style="width:100%;">CENSOR AUDIENCE</button>
            </div>
        </div>
        
        <div id="state-vote" class="pt-page-off quiplash2-page">
            <div class="container">
                <p id="question-text-alt" class="quiplash-text-alt"></p>
                <p id="question-text" class="quiplash-text"></p>
                <p id="vote-text"></p>
                <form id="quiplash-vote" class="pure-form"></form>
            </div>
        </div>
        
        
        
        <div class="pt-page-off quiplash2-page background-yellow" id="state-ugc">
            <div id="ugc-submit-dialog" style="display:none;" class="container">
                <div class="quiplash-text-box">By sharing content, you agree to our <a href="http://www.jackboxgames.com/terms-of-service/" target="_blank">Terms of service</a></div>
                <button id="ugc-submit-confirm" class="quiplash2-button quiplash2-button-black button-xlarge pure-button">agree and share</button><br />
                <button id="ugc-submit-cancel" class="quiplash2-button quiplash2-button-black button-xlarge pure-button">back to menu</button>
            </div>
            <div id="ugc-container" class="container">
                    <div id="ugc-toggle-visibility" class="ugc-option">
                        <span class="quiplash-text">Tap to show/hide prompts</span><br/>
                        <div class="quiplash-text-box">
                            <div id="ugc-toggle-visibility-button-controller" class="ugc-toggle-visibility-button quiplash-image-controller ugc-toggle-visibility-button pure-u-1-2" data-target="controller"></div>
                            <div id="ugc-toggle-visibility-button-screen" class="ugc-toggle-visibility-button quiplash-image-screen ugc-toggle-visibility-button-screen pure-u-1-2" data-target="screen"></div>
                        </div>
                    </div>
                <div id="ugc-episode-name"></div>
                <div id="ugc-new" class="ugc-option">
                    <button type="button" id="ugc-new-button" class="quiplash2-button quiplash2-button-black btn btn-lg">create a new episode</button>
                </div>

                <h3 class="ugc-option quiplash-text-box quiplash-text ugc-load">Previous episodes:</h3>
                <table id="ugc-load" class="ugc-option quiplash-list">
                </table>
                
                <!--<div id="ugc-screen-main" class="ugc-screen">-->
                    <div id="ugc-text"></div>
                    <div id="ugc-no-actions-text"></div>

                    <div id="ugc-title" class="ugc-option">
                        <p class="quiplash-text-box">
                            
                        </p>
                        <form class="">
                            <div class="form-group">
                                <p class='quiplash-text'>First things first, enter a name for the episode that will contain all your prompts and hit create.</p>
                                <input id="ugc-title-input" class="lowercase form-control quiplash2-answer-input input-lg" type="text" placeholder="" autocapitalize="off" autocorrect="off" autocomplete="off"/>
                            </div>
                            <div class="form-group">
                                <button type="submit" id="ugc-title-button" name="ugc-title-button" class="ugc-form-button quiplash2-button quiplash2-button-black btn btn-lg pull-right">create</button>
                                <button type="button" id="ugc-exit-button" class="ugc-form-button quiplash2-button quiplash2-button-black btn btn-lg pull-left">back to episodes</button>
                            </div>
                                
                            
                        </form>
                    </div>

                    
                        <form class="pure-form">
                            <div class="pure-u-1">
                                <input id="ugc-add-input" class="lowercase ugc-input pure-input-1 quiplash2-answer-input ugc-option ugc-add" type="text" placeholder="enter a prompt" autocapitalize="off" autocorrect="off" autocomplete="off"/>
                            </div>
                            <div class="ugc-option ugc-add">
                                <button type="submit" id="ugc-add-button" name="ugc-add-button" class="ugc-form-button quiplash2-button quiplash2-button-black button-xlarge pure-button gridmargin right">add prompt</button>
                            </div>
                            <div id="ugc-close" class="ugc-option">
                                <button type="button" id="ugc-close-button" class="ugc-form-button quiplash2-button quiplash2-button-black button-xlarge pure-button gridmargin left">close</button>
                            </div>
                            <div id="ugc-save" class="ugc-option">
                                <button type="save" id="ugc-save-button" class="ugc-form-button quiplash2-button quiplash2-button-black button-xlarge pure-button gridmargin left">done</button>
                            </div>
                        </form>
                    
                    
                    <table id="ugc-remove" class="ugc-option quiplash-list">
                        <thead></thead>
                        <tbody></tbody>
                    </table>
                <!--</div>-->
                
                <!--<div id="ugc-screen-confirm" class="ugc-screen">-->
                    <div id="ugc-unlock" class="ugc-option">
                        <button type="button" id="ugc-unlock-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block">edit</button>
                    </div>
                    
                    <div id="ugc-save" class="ugc-option">
                        <button type="save" id="ugc-save-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block">save</button>
                    </div>
                <!--</div>-->
                
                <!--<div id="ugc-screen-post-save" class="ugc-screen">-->
    			    <div id="ugc-submit" class="ugc-option">
                        <button type="button" id="ugc-submit-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block">publish</button>
                    </div>
                    <div id="ugc-play" class="ugc-option">
                        <button type="button" id="ugc-play-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block">play</button>
                    </div>
                    <div id="ugc-remove-content" class="ugc-option">
                        <button type="button" id="ugc-delete-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block ugc-remove-content-button">delete</button>
                        <div id="ugc-remove-content-dialog" style="display:none;" class="well well-sm quiplash-confirm-dialog">
                            <p class="quiplash-text quiplash-text-box quiplash-text-danger">Are you sure you want to delete this episode?</p>
                            <button id="ugc-remove-content-confirm" class="quiplash2-button quiplash2-button-black">Yes</button>
                            <button id="ugc-remove-content-cancel" class="quiplash2-button">No</button>
                        </div>

                    </div>

                    <div id="ugc-exit" class="ugc-option">
                        <button type="button" id="ugc-exit-button" class="quiplash2-button quiplash2-button-black btn btn-lg btn-block">back to episodes</button>
                    </div>
                <!--</div>-->
            </div>
        </div>
    </div>
</div>
`,
        Nx = kc.extend({
            template: Ze.template($x),
            testBlob: null,
            prevRoomState: "",
            prevPlayerState: "",
            doneAnswering: !1,
            lobbyMenu: null,
            events: {
                "click #quiplash-startgame": "startGame",
                "click #quiplash-stopcountdown": "stopCountdown",
                "click #quiplash-sameplayers": "newGameSamePlayers",
                "click #quiplash-newplayers": "newGameNewPlayers",
                "click #quiplash-submit-answer": "submitAnswer",
                "click #quiplash-submit-safetyquip": "submitSafetyQuip",
                "click #quiplash-audience-censor": "submitAudienceCensor",
                "click #quiplash-audience-censor-done": "submitAudienceCensor",
                "click .quiplash2-vote-button": "vote",
                "click .quiplash-lobby-menu-back": "lobbyMenuBack",
                "click #quiplash-lobby-menu-ugc": "lobbyMenuUgc",
                "click #quiplash-lobby-menu-censor": "lobbyMenuCensor",
                "click .quiplash-censor-player-button": "censorPlayer",
                "click .quiplash2-censor-button": "censor",
                "click #lobby-ugc-submit": "lobbyUgcSubmit",
                "click .quiplash-history-button": "lobbyUgcHistory",
                "click #lobby-ugc-clear": "lobbyUgcClear",
                "click #lobby-ugc-report": "lobbyUgcReport",
                "click #lobby-ugc-view-author": "lobbyUgcViewAuthor",
                "click #ugc-new-button": "ugcNew",
                "click .ugc-load-button": "ugcLoad",
                "click .ugc-remove-content-button": "ugcRemoveContent",
                "click #ugc-remove-content-confirm": "ugcRemoveContentConfirm",
                "click #ugc-remove-content-cancel": "ugcRemoveContentCancel",
                "click #ugc-close-button": "ugcClose",
                "click #ugc-title-button": "ugcTitle",
                "click #ugc-add-button": "ugcAdd",
                "click .ugc-remove-button": "ugcRemove",
                "click #ugc-clear-button": "ugcClear",
                "click .ugc-toggle-visibility-button": "ugcToggleVisibility",
                "click #ugc-save-button": "ugcSave",
                "click #ugc-submit-button": "ugcSubmit",
                "click #ugc-submit-confirm": "ugcSubmitConfirm",
                "click #ugc-submit-cancel": "ugcSubmitCancel",
                "click #ugc-unlock-button": "ugcUnlock",
                "click #ugc-play-button": "ugcPlay",
                "click #ugc-exit-button": "ugcExit"
            },
            onAttach() {
                kc.prototype.onAttach.apply(this), this.lobbyMenu = new g_({
                    e: this.$el.find("#lobby-main-menu"),
                    branches: [{
                        input: "ugc",
                        node: {
                            e: this.$el.find("#lobby-ugc")
                        }
                    }, {
                        input: "censor",
                        node: {
                            e: this.$el.find("#lobby-censor")
                        }
                    }]
                }), this.lobbyMenu.reset(), be(".quiplash2-button").hover(function() {
                    be(this).toggleClass("quiplash2-button-hover")
                }), this.$el.find("#lobby-ugc-input").mask("aaa-aaaa", {
                    placeholder: "???-????"
                }), be("input").bind("input propertychange", this.validateInput.bind(this)), this.update().catch(this.caughtError)
            },
            renderTemplate(t, e) {
                const n = Ze.templateSettings;
                Ze.templateSettings = {
                    evaluate: /\{\{#([\s\S]+?)\}\}/g,
                    interpolate: /\{\{\{(\s*\w+?\s*)\}\}\}/g,
                    escape: /\{\{(\s*\w+?\s*)\}\}(?!\})/g
                };
                const o = Ze.template(t)(e);
                return Ze.templateSettings = n, o
            },
            async update() {
                if (!this.model.get("room")) {
                    this.showScreen("#state-logo");
                    return
                }
                const t = this.model.get("room") || {},
                    e = this.model.get("player") || {},
                    n = e ? e.state : "",
                    i = t ? t.state : "",
                    o = e.playerColor ? e.playerColor : "#E4BC65";
                this.$el.find("#player").css("background-color", o);
                const d = Mt.adjustColor(o, .52);
                if (this.$el.find("#state-lobby").css("background-color", d), this.$el.find("#state-answer-question-audience").css("background-color", d), this.$el.find("#state-answer-question").css("background-color", d), this.$el.find("#state-done-answering").css("background-color", d), this.$el.find("#state-vote").css("background-color", d), this.$el.find("#state-ugc").css("background-color", d), this.currentAnswerQuestionId = -1, this.$el.find("#quiplash-submit-alert").hide(), i === "UGC") {
                    this.updateUGC(t, e);
                    return
                }
                if (be(".ugc-option").hide(), n === "RoomFull") {
                    kt.show(Error("The room is full"), {
                        willClose: () => {
                            window.location.reload(!0)
                        }
                    });
                    return
                }
                if (n === "GameLocked") {
                    kt.show(Error("Game is in progress. Please wait for a new game to start."), {
                        willClose: () => {
                            window.location.reload(!0)
                        }
                    });
                    return
                }
                if (i && i === "Lobby") {
                    if (!this.client.isRole("player") && t.lobbyState !== "PostGame") {
                        this.showScreen("#state-logo");
                        return
                    }
                    if (this.formattedActiveContentId = t.formattedActiveContentId, this.hideLobbyButtons(), be(".menu-button").hide(), e.canDoUGC) {
                        if (be(".lobby-ugc-option").hide(), t.formattedActiveContentId ? (t.isLocal ? this.$el.find("#lobby-ugc-choices-content-id").html("local content loaded") : this.$el.find("#lobby-ugc-choices-content-id").html(`published content loaded<br><span class="lobby-episode-id quiplash-text capitalize">${t.formattedActiveContentId}</span>`), this.$el.find("#lobby-ugc-choices").show(), !t.isLocal && e.canReport ? this.$el.find("#lobby-ugc-report").show() : this.$el.find("#lobby-ugc-report").hide(), !t.isLocal && e.canViewAuthor ? this.$el.find("#lobby-ugc-view-author").show() : this.$el.find("#lobby-ugc-view-author").hide()) : this.$el.find("#lobby-ugc-enter").show(), e.history) {
                            this.$el.find("#lobby-ugc-help").hide();
                            let S = "";
                            e.history.forEach(T => {
                                if (!T.metadata || !T.metadata.title) {
                                    jc("Quiplash2 update - invalid metadata detected", {
                                        extra: {
                                            episode: T,
                                            playerBlob: e,
                                            roomBlob: t
                                        }
                                    });
                                    return
                                }
                                S += `<tr data-id="${T.remoteContentId?T.remoteContentId:T.localContentId}" class="quiplash-history-button">`, S += `<td class="quiplash-list-fill quiplash-text">${T.metadata.title}`, T.remoteContentId && (S += `<br><span class="lobby-episode-id quiplash-text capitalize">${T.formattedRemoteContentId}</span>`), S += "</td>", S += "</tr>"
                            }), this.$el.find("#lobby-ugc-history").html(S), e.history && e.history.length > 0 ? be(".quiplash-ugc-previous").show() : be(".quiplash-ugc-previous").hide()
                        } else this.$el.find("#lobby-ugc-help").show();
                        this.$el.find("#quiplash-lobby-menu-ugc").show()
                    }
                    if (e.canCensor) {
                        if (e.censorablePlayers) {
                            let S = "";
                            e.censorablePlayers.forEach(T => {
                                S += '<div class="pure-u-1">', S += `<div class="quiplash-censorable left quiplash-text"><span>${T.name}</span></div>`, S += `<button type="button" data-censor="${Mt.htmlEscape(T.id)}" class="quiplash-censor-player-button button-large pure-button quiplash2-button right">X</button>`, S += "</div>"
                            }), this.$el.find("#lobby-censor-players").html(S)
                        }
                        e.censorablePlayers && e.censorablePlayers.length > 0 && this.$el.find("#quiplash-lobby-menu-censor").show()
                    }
                    e.lastUGCResult ? !e.lastUGCResult.success && e.lastUGCResult.error ? this.$el.find("#lobby-ugc-error").html(`<span>${e.lastUGCResult.error}</span>`) : this.$el.find("#lobby-ugc-error").html("") : this.$el.find("#lobby-ugc-error").html("");
                    const m = t.artifact;
                    if (m && m.success && m.rootId) {
                        let S = "games.jackbox.tv";
                        m.rootId.indexOf("test") !== -1 && (S = "games-test.jackbox.tv");
                        const T = "Quiplash2Game";
                        m.categoryId = T;
                        const D = `https://${S}/artifact/${T}/${m.artifactId}/`;
                        try {
                            const V = new URL("main/pp3/quiplash2/assets/ff97dfcc.png", self.location).href;
                            this.$el.find(".gallery-link").attr("href", D);
                            const Y = `<img src="${V}" />`;
                            this.$el.find(".gallery-link").html(Y), vi.add(m, this.getOption("appTag"))
                        } catch {
                            console.error("failed to load gallery image")
                        }
                    } else this.$el.find("#quiplash2-lobby-postgame").html("");
                    if (!e.isAllowedToStartGame) {
                        this.$el.find("#quiplash-lobby-text").html("Sit back and relax!"), this.showScreen("#state-lobby");
                        return
                    }
                    const C = t.lobbyState;
                    C === "WaitingForMore" ? this.$el.find("#quiplash-lobby-text").html("Waiting for all players to join") : C === "CanStart" ? (this.$el.find("#quiplash-lobby-text").html("Press this button when everybody has joined"), this.$el.find("#quiplash-startgame").show()) : C === "Countdown" ? (this.$el.find("#quiplash-lobby-text").html("Press this button to cancel game start"), this.$el.find("#quiplash-stopcountdown").show()) : C === "PostGame" && (this.$el.find("#quiplash-lobby-text").html("What do you want to do?"), be(".quiplash-endbuttons").show()), this.showScreen("#state-lobby")
                } else if (i === "Gameplay_Logo" || i === "Logo") {
                    if (this.showScreen("#state-logo"), this.prevPlayerState === "Gameplay_AnswerQuestion" && this.doneAnswering === !1) {
                        const m = this.$el.find("#quiplash-answer-input").val();
                        m !== "" && (this.client.send("SendMessageToRoomOwner", {
                            answer: m,
                            questionId: this.prevAnswerQuestionId
                        }), this.prevAnswerQuestionId = -1, this.doneAnswering = !0)
                    }
                } else if (i === "Gameplay_Round") be(".quiplash2-round-image").hide(), be(`.quiplash2-round-image.quiplash2-round-${t.round}`).show(), this.showScreen("#state-round");
                else if (i === "Gameplay_AnswerQuestion")
                    if (n === "Gameplay_AnswerQuestion") {
                        if (!e.question) {
                            this.$el.find("#quiplash-audience-censor-done").hide(), e.canCensor && this.$el.find("#quiplash-audience-censor-done").show(), this.showScreen("#state-done-answering"), this.doneAnswering = !0;
                            return
                        }
                        if (this.doneAnswering = !1, this.$el.find("#quiplash-answer-input").val(""), this.$el.find("#quiplash-submit-answer").removeAttr("disabled"), this.$el.find("#quiplash-answer-field").show(), this.$el.find("#quiplash-submit-alert").hide(), this.$el.find("#quiplash-submit-answer").show(), this.$el.find("#quiplash-audience-censor").hide(), t.safetyQuip === !0 ? this.$el.find("#quiplash-submit-safetyquip").show() : this.$el.find("#quiplash-submit-safetyquip").hide(), e.canCensor && this.$el.find("#quiplash-audience-censor").show(), this.$el.find("#state-answer-question #question-text").html(e.question.prompt.replace(/<BLANK>/gi, "________")), this.$el.find("#state-answer-question #question-text-alt").html(""), e.question.quip !== void 0 ? (this.$el.find("#state-answer-question #question-text-alt").html(e.question.quip.replace(/<BLANK>/gi, "________")), this.$el.find("#state-answer-question #question-text").removeClass("quiplash-text"), this.$el.find("#state-answer-question #question-text").addClass("quiplash-text-big")) : (this.$el.find("#state-answer-question #question-text").addClass("quiplash-text"), this.$el.find("#state-answer-question #question-text").removeClass("quiplash-text-big")), e.showError) {
                            const m = this.$el.find("#quiplash-submit-alert");
                            this.$el.find("#quiplash-submit-alert").html("You entered the same thing as someone else! Try again."), m.addClass("alert-info"), m.removeClass("alert-danger"), m.show()
                        }
                        this.prevAnswerQuestionId = e.question.id, this.currentAnswerQuestionId = e.question.id, this.showScreen("#state-answer-question")
                    } else this.$el.find("#quiplash-answer-input").val(""), this.$el.find("#quiplash-submit-answer").removeAttr("disabled"), this.$el.find("#quiplash-answer-field").hide(), this.$el.find("#quiplash-submit-alert").hide(), this.$el.find("#quiplash-submit-safetyquip").hide(), this.$el.find("#quiplash-submit-answer").hide(), this.$el.find("#quiplash-audience-censor").hide(), t.audienceQuip && t.canDoAudiencePlay ? (this.$el.find("#state-answer-question #question-text").html(t.audienceQuip.replace(/<BLANK>/gi, "________")), this.$el.find("#quiplash-answer-field").show(), this.$el.find("#quiplash-submit-answer").show()) : this.$el.find("#state-answer-question #question-text").html("You\u2019re in the audience! Wait for the time to vote."), this.showScreen("#state-answer-question");
                else if (i === "Gameplay_Vote") {
                    if (this.$el.find("#state-vote #question-text-alt").html(""), !e.canCensor && e.doneVoting) {
                        this.$el.find("#state-vote #vote-text").html("Wait for the other players!"), this.$el.find("#quiplash-vote").html(""), this.showScreen("#state-vote");
                        return
                    }
                    t.question ? this.$el.find("#state-vote #question-text").html(t.question.prompt.replace(/<BLANK>/gi, "________")) : this.$el.find("#state-vote #question-text").html("");
                    const m = e.censorOnly || e.doneVoting ? "" : "Which one do you like more?";
                    this.$el.find("#state-vote #vote-text").html(m);
                    let C = "";
                    if (t.choices && t.order)
                        for (let S = 0; S < t.order.length; S++) {
                            const T = t.order[S];
                            if (e.ignore) {
                                let V = !1;
                                for (let Y = 0; Y < e.ignore.length; Y++)
                                    if (e.ignore[Y] === T) {
                                        V = !0;
                                        break
                                    } if (V) continue
                            }
                            const D = {
                                order: t.order[S].toString(),
                                choiceString: Mt.htmlUnescape(t.choices[T].toString()),
                                censorable: t.isCensored && !t.isCensored[T] && e.canCensor,
                                quiplash2Disabled: e.censorOnly || e.doneVoting ? "quiplash2-disabled" : ""
                            };
                            C += this.renderTemplate(this.$el.find("#quiplash2-vote-button").html(), D)
                        }
                    this.notify(), this.$el.find("#quiplash-vote").html(C), be(".quiplash2-disabled").attr("disabled", "disabled"), this.showScreen("#state-vote")
                } else if (i === "Gameplay_R3Vote") {
                    if (this.$el.find("#state-vote #question-text-alt").html(""), !e.canCensor && e.doneVoting) {
                        this.$el.find("#state-vote #vote-text").html("Wait for the other players!"), this.$el.find("#quiplash-vote").html(""), this.showScreen("#state-vote");
                        return
                    }
                    this.$el.find("#state-vote #question-text").html(t.question.prompt.replace(/<BLANK>/gi, "________")), t.question.quip !== void 0 ? (this.$el.find("#state-vote #question-text-alt").html(t.question.quip.replace(/<BLANK>/gi, "________")), this.$el.find("#state-vote #question-text").removeClass("quiplash-text"), this.$el.find("#state-vote #question-text").addClass("quiplash-text-big")) : (this.$el.find("#state-vote #question-text").addClass("quiplash-text"), this.$el.find("#state-vote #question-text").removeClass("quiplash-text-big"));
                    let m = "Which one do you like more?";
                    if (e.currentVote) switch (e.currentVote) {
                        case 0:
                            m = "Award your gold medal to your favorite answer!";
                            break;
                        case 1:
                            m = "Now award your silver medal!";
                            break;
                        case 2:
                            m = "And hand out a bronze medal to your third favorite.";
                            break
                    }
                    this.$el.find("#state-vote #vote-text").html(m);
                    let C = "",
                        S = [];
                    this.client.isRole("player") ? e.votes ? S = e.votes : e.canCensor && (S = Ze.filter(t.choices, T => T.playerIndex !== e.playerIndex)) : t.choices && (S = t.choices);
                    for (let T = 0; T < S.length; ++T) {
                        const D = S[T],
                            V = D.isCensored || D.hasVote || e.doneVoting || e.censorOnly,
                            Y = {
                                order: D.playerIndex.toString(),
                                choiceString: D.isCensored ? "********" : Mt.htmlUnescape(D.answer),
                                censorable: !D.isCensored && e.canCensor,
                                quiplash2Disabled: V ? "quiplash2-disabled" : ""
                            };
                        C += this.renderTemplate(this.$el.find("#quiplash2-vote-button").html(), Y)
                    }
                    this.notify(), this.$el.find("#quiplash-vote").html(C), be(".quiplash2-disabled").attr("disabled", "disabled"), this.showScreen("#state-vote")
                }
                this.prevPlayerState = n, this.prevRoomState = i
            },
            cancelConfirm() {
                be(".quiplash2-button-red").removeClass("quiplash-censor-confirm quiplash2-button-red"), be(".quiplash-confirm-dialog").hide()
            },
            hideLobbyButtons() {
                this.$el.find("#quiplash-startgame").hide(), this.$el.find("#quiplash-stopcountdown").hide(), be(".quiplash-endbuttons").hide()
            },
            lobbyMenuBack() {
                this.lobbyMenu.input("back")
            },
            lobbyMenuUgc() {
                this.lobbyMenu.input("ugc")
            },
            lobbyMenuCensor() {
                this.lobbyMenu.input("censor")
            },
            lobbyUgcSubmit() {
                let t = this.sanitize(this.$el.find("#lobby-ugc-input").val());
                return t = t.replace(/[^A-Za-z]/gi, ""), t = t.toUpperCase(), this.activateContentId(t), !1
            },
            activateContentId(t) {
                return t.length && this.client.send("SendMessageToRoomOwner", {
                    activateContentId: !0,
                    contentId: t
                }), !1
            },
            lobbyUgcHistory(t) {
                const e = be(t.currentTarget).data("id");
                this.activateContentId(e)
            },
            lobbyUgcClear() {
                return this.client.send("SendMessageToRoomOwner", {
                    clearContentId: !0
                }), !1
            },
            lobbyUgcReport() {
                const t = "http://support.jackboxgames.com/",
                    e = this.model.get("room").formattedActiveContentId;
                return window.open(`${t}?episodeID=${e}`, "_blank"), !1
            },
            lobbyUgcViewAuthor() {
                return this.client.send("SendMessageToRoomOwner", {
                    viewAuthor: !0
                }), !1
            },
            startGame() {
                return this.client.send("SendMessageToRoomOwner", {
                    start: !0
                }), !1
            },
            stopCountdown() {
                return this.client.send("SendMessageToRoomOwner", {
                    cancel: !0
                }), !1
            },
            chooseCategory(t) {
                const e = be(t.target).data("num");
                return this.client.send("SendMessageToRoomOwner", {
                    chosenCategory: e
                }), !1
            },
            submitAnswer() {
                const t = this.sanitize(this.$el.find("#quiplash-answer-input").val()).toUpperCase();
                if (t.length === 0) {
                    const e = this.$el.find("#quiplash-submit-alert");
                    return e.html("You can't enter nothing!"), e.removeClass("alert-info"), e.addClass("alert-danger"), e.show(), this.alertTimeout && clearTimeout(this.alertTimeout), this.alertTimeout = setTimeout(() => {
                        this.$el.find("#quiplash-submit-alert").hide()
                    }, 5e3), !1
                }
                return this.client.isRole("player") ? (this.$el.find("#quiplash-submit-answer").attr("disabled", "true"), this.client.send("SendMessageToRoomOwner", {
                    answer: t,
                    questionId: this.currentAnswerQuestionId
                }), this.$el.find("#quiplash-answer-input").val("")) : this.client.isRole("audience") && (this.client.sessionSend("comment", "Quiplash2 Comments", {
                    type: "comment",
                    comment: t
                }), this.$el.find("#quiplash-answer-input").val("")), !1
            },
            submitSafetyQuip() {
                return this.client.send("SendMessageToRoomOwner", {
                    safetyQuip: !0,
                    questionId: this.currentAnswerQuestionId
                }), !1
            },
            submitAudienceCensor() {
                return this.client.send("SendMessageToRoomOwner", {
                    censorAudience: !0,
                    questionId: this.currentAnswerQuestionId
                }), !1
            },
            vote(t) {
                const e = be(t.target).data("vote");
                return this.client.isRole("player") ? this.client.send("SendMessageToRoomOwner", {
                    vote: e
                }) : this.client.isRole("audience") && (this.client.sessionSend("vote", "Quiplash2 Vote", {
                    type: "vote",
                    vote: e
                }), this.$el.find("#vote-text").html("Thanks, audience member!"), this.$el.find("#quiplash-vote").html(""), this.showScreen("#state-vote")), be(".quiplash2-button").removeClass("selected"), be(t.target).addClass("selected"), !1
            },
            newGameSamePlayers() {
                return this.client.send("SendMessageToRoomOwner", {
                    start: !0,
                    decision: "PostGame_Continue"
                }), !1
            },
            newGameNewPlayers() {
                return this.client.send("SendMessageToRoomOwner", {
                    start: !0,
                    decision: "PostGame_NewGame"
                }), !1
            },
            censorPlayer(t) {
                if (t.preventDefault(), !this.client.isRole("player")) return !1;
                const e = be(t.target);
                if (e.hasClass("quiplash2-button-red")) {
                    const n = Mt.htmlUnescape(e.data("censor"));
                    this.client.send("SendMessageToRoomOwner", {
                        censorPlayerId: n
                    })
                } else e.html("?"), e.addClass("quiplash2-button-red");
                return !1
            },
            censor(t) {
                if (t.preventDefault(), !this.client.isRole("player")) return;
                const e = be(t.target);
                if (e.hasClass("quiplash2-button-red")) {
                    const n = Mt.htmlUnescape(e.data("censor"));
                    this.client.send("SendMessageToRoomOwner", {
                        censor: n
                    })
                } else e.html("?"), e.addClass("quiplash2-button-red")
            },
            updateUGC(t, e) {
                if (be(".ugc-screen").hide(), be(".ugc-option").hide(), this.$el.find("#ugc-text").hide(), this.$el.find("#ugc-no-actions-text").hide(), t.controllerVisibility ? be(".quiplash-image-controller").removeClass("off") : be(".quiplash-image-controller").addClass("off"), t.screenVisibility ? be(".quiplash-image-screen").removeClass("off") : be(".quiplash-image-screen").addClass("off"), this.$el.find("#ugc-remove-content-confirm").data("id", t.localContentId), !e.validActions || !e.prompts) {
                    this.onResize();
                    return
                }
                for (let m = 0; m < e.validActions.length; m++) {
                    const C = e.validActions[m];
                    be(`#ugc-${C}`).show()
                }
                if (e.validActions.indexOf("add") >= 0 ? (be(".ugc-add").show(), this.$el.find("#ugc-add-input").focus()) : this.$el.find("#ugc-add-input").val(""), e.validActions.indexOf("save") >= 0 && this.$el.find("#ugc-close").hide(), e.validActions.indexOf("exit") >= 0 && this.$el.find("#ugc-close").hide(), e.validActions.indexOf("title") >= 0 && (this.$el.find("#ugc-title-input").val(""), this.$el.find("#ugc-close").hide()), e.validActions.indexOf("remove-content") >= 0 && this.$el.find("#ugc-delete").show(), e.validActions.indexOf("load") >= 0 && be(".ugc-load").show(), !e.validActions.length && t.noActionsText && (this.$el.find("#ugc-no-actions-text").html(`<span class="quiplash-text">${t.noActionsText}</span>`), this.$el.find("#ugc-no-actions-text").show()), e.validActions.indexOf("play") < 0 ? this.$el.find("#ugc-episode-name").hide() : this.$el.find("#ugc-episode-name").show(), t.text && (this.$el.find("#ugc-text").html(`<div class="pure-u-1"><span>${t.text}</span></div>`), this.$el.find("#ugc-text").show()), e.episodes) {
                    let m = "";
                    e.episodes = Ze.sortBy(e.episodes, C => !!C.remoteContentId), e.episodes.forEach(C => {
                        if (!C.metadata || !C.metadata.title) {
                            jc("Quiplash2 updateUGC - invalid metadata detected", {
                                extra: {
                                    episode: C,
                                    playerBlob: e,
                                    roomBlob: t
                                }
                            });
                            return
                        }
                        m += "<tr>", m += `<td class="ugc-load-button quiplash-list-fill quiplash-text" data-id="${C.localContentId}" >${C.metadata.title}`, C.remoteContentId && (m += `<br><span class="quiplash-text lobby-episode-id capitalize">${C.formattedRemoteContentId}</span>`), m += "</td>", m += "</tr>"
                    }), this.$el.find("#ugc-load").html(m)
                }
                this.$el.find("#ugc-title-input").prop("maxLength", t.maxTitleLength), this.$el.find("#ugc-add-input").prop("maxLength", t.maxContentLength);
                let n = `${t.count}/${t.maxCount}`;
                e.prompts.length < t.count && (n += ` (${t.count-e.prompts.length} hidden)`);
                const i = `<tr><td colspan='2'><h3 style='color:black;'>${n}</h3></td></tr>`;
                this.$el.find("#ugc-remove thead").html(i);
                let o = "",
                    d = "";
                for (let m = e.prompts.length - 1; m >= 0; m--) d = e.prompts[m].author === e.userId ? "" : " quiplash-list-other ", o += "<tr>", o += `<td class="quiplash-list-fill quiplash-text${d}">${e.prompts[m].prompt}</td>`, o += `<td class="quiplash-list-black ugc-remove-button" data-text="${Mt.htmlEscape(e.prompts[m].prompt)}"><div class="ugc-remove-x"></div></td>`, o += "</tr>";
                this.$el.find("#ugc-remove tbody").html(o), this.showScreen("#state-ugc"), this.onResize()
            },
            ugcNew() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "new"
                }), this.$el.find("#ugc-remove-content-confirm").data("id", null)
            },
            ugcLoad(t) {
                const e = be(t.currentTarget).data("id");
                this.cancelConfirm(), this.client.send("SendMessageToRoomOwner", {
                    action: "load",
                    contentId: e
                });
                const n = be(t.currentTarget).data("name");
                this.$el.find("#ugc-episode-name").html(n)
            },
            ugcRemoveContent(t) {
                const e = be(t.currentTarget);
                this.$el.find("#ugc-remove-content-dialog").show(), be(".quiplash2-button-red").removeClass("quiplash-censor-confirm quiplash2-button-red"), e.addClass("quiplash2-button-red"), t.stopPropagation()
            },
            ugcRemoveContentConfirm(t) {
                const e = be(t.target),
                    n = Mt.htmlUnescape(e.data("id"));
                return this.$el.find("#ugc-delete-dialog").hide(), this.client.send("SendMessageToRoomOwner", {
                    action: "remove-content",
                    contentId: n
                }), this.cancelConfirm(), !1
            },
            ugcRemoveContentCancel() {
                return this.cancelConfirm(), !1
            },
            ugcClose() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "close"
                })
            },
            ugcTitle() {
                const t = this.sanitize(this.$el.find("#ugc-title-input").val());
                return t.length === 0 || (this.client.send("SendMessageToRoomOwner", {
                    text: t,
                    action: "title"
                }), this.$el.find("#ugc-title-input").val("")), !1
            },
            ugcAdd() {
                const t = this.sanitize(this.$el.find("#ugc-add-input").val());
                return t.length === 0 || (this.client.send("SendMessageToRoomOwner", {
                    text: t,
                    action: "add"
                }), this.$el.find("#ugc-add-input").val(""), this.$el.find("#ugc-add-input").focus()), !1
            },
            ugcKeyUp(t) {
                t.which === 13 && (t.preventDefault(), this.ugcAdd(t))
            },
            ugcRemove(t) {
                let e = be(t.target);
                e.data("text") || (e = e.parent());
                const n = e.data("text");
                this.client.send("SendMessageToRoomOwner", {
                    action: "remove",
                    text: n
                })
            },
            ugcClear() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "clear"
                })
            },
            ugcToggleVisibility(t) {
                const e = be(t.target);
                this.client.send("SendMessageToRoomOwner", {
                    action: "toggle-visibility",
                    target: e.data("target")
                })
            },
            ugcUnlock() {
                this.cancelConfirm(), this.client.send("SendMessageToRoomOwner", {
                    action: "unlock"
                })
            },
            ugcSave(t) {
                t.preventDefault(), this.client.send("SendMessageToRoomOwner", {
                    action: "save"
                })
            },
            ugcSubmit() {
                this.cancelConfirm(), this.$el.find("#ugc-submit-dialog").show(), this.$el.find("#ugc-container").hide()
            },
            ugcSubmitConfirm() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "submit"
                }), this.$el.find("#ugc-submit-dialog").hide(), this.$el.find("#ugc-container").show()
            },
            ugcSubmitCancel() {
                this.$el.find("#ugc-submit-dialog").hide(), this.$el.find("#ugc-container").show()
            },
            ugcPlay() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "play"
                })
            },
            ugcExit() {
                this.client.send("SendMessageToRoomOwner", {
                    action: "close"
                }), this.$el.find("#ugc-episode-name").html("")
            },
            sanitize(t) {
                const e = this.sanitizeInput(t).replace(/'/g, "\u2019");
                return Mt.htmlEscape(e).trim()
            },
            sanitizeInput(t) {
                return t.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF!?*$+\-’'_ .,=<>:;]/gi, "")
            },
            validateInput(t) {
                const e = be(t.target);
                let n = e.val();
                const i = n.length,
                    o = e.attr("maxLength");
                if (n = this.sanitizeInput(n), o)
                    for (; n.length > o;) n = n.slice(0, -1);
                n.length !== i && e.val(n)
            }
        });
    yx({
        MainView: Nx
    })
});
export default Vx();
//# sourceMappingURL=305e136e.js.map