var gh = Object.defineProperty;
var mh = (e, t, n) => t in e ? gh(e, t, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: n
}) : e[t] = n;
var me = (e, t, n) => (mh(e, typeof t != "symbol" ? t + "" : t, n), n);
const vh = function() {
    const t = document.createElement("link").relList;
    if (t && t.supports && t.supports("modulepreload")) return;
    for (const o of document.querySelectorAll('link[rel="modulepreload"]')) i(o);
    new MutationObserver(o => {
        for (const f of o)
            if (f.type === "childList")
                for (const v of f.addedNodes) v.tagName === "LINK" && v.rel === "modulepreload" && i(v)
    }).observe(document, {
        childList: !0,
        subtree: !0
    });

    function n(o) {
        const f = {};
        return o.integrity && (f.integrity = o.integrity), o.referrerpolicy && (f.referrerPolicy = o.referrerpolicy), o.crossorigin === "use-credentials" ? f.credentials = "include" : o.crossorigin === "anonymous" ? f.credentials = "omit" : f.credentials = "same-origin", f
    }

    function i(o) {
        if (o.ep) return;
        o.ep = !0;
        const f = n(o);
        fetch(o.href, f)
    }
};
vh();
var Re = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

function yh(e) {
    var t = e.default;
    if (typeof t == "function") {
        var n = function() {
            return t.apply(this, arguments)
        };
        n.prototype = t.prototype
    } else n = {};
    return Object.defineProperty(n, "__esModule", {
        value: !0
    }), Object.keys(e).forEach(function(i) {
        var o = Object.getOwnPropertyDescriptor(e, i);
        Object.defineProperty(n, i, o.get ? o : {
            enumerable: !0,
            get: function() {
                return e[i]
            }
        })
    }), n
}
var Ui = {
    exports: {}
};
(function(e, t) {
    (function() {
        var n = this,
            i = n._,
            o = Array.prototype,
            f = Object.prototype,
            v = Function.prototype,
            y = o.push,
            k = o.slice,
            A = f.toString,
            D = f.hasOwnProperty,
            $ = Array.isArray,
            tt = Object.keys,
            st = v.bind,
            V = Object.create,
            ot = function() {},
            m = function(l) {
                if (l instanceof m) return l;
                if (!(this instanceof m)) return new m(l);
                this._wrapped = l
            };
        e.exports && (t = e.exports = m), t._ = m, m.VERSION = "1.8.3";
        var L = function(l, g, S) {
                if (g === void 0) return l;
                switch (S == null ? 3 : S) {
                    case 1:
                        return function(R) {
                            return l.call(g, R)
                        };
                    case 2:
                        return function(R, P) {
                            return l.call(g, R, P)
                        };
                    case 3:
                        return function(R, P, j) {
                            return l.call(g, R, P, j)
                        };
                    case 4:
                        return function(R, P, j, ct) {
                            return l.call(g, R, P, j, ct)
                        }
                }
                return function() {
                    return l.apply(g, arguments)
                }
            },
            X = function(l, g, S) {
                return l == null ? m.identity : m.isFunction(l) ? L(l, g, S) : m.isObject(l) ? m.matcher(l) : m.property(l)
            };
        m.iteratee = function(l, g) {
            return X(l, g, 1 / 0)
        };
        var ut = function(l, g) {
                return function(S) {
                    var R = arguments.length;
                    if (R < 2 || S == null) return S;
                    for (var P = 1; P < R; P++)
                        for (var j = arguments[P], ct = l(j), Mt = ct.length, yt = 0; yt < Mt; yt++) {
                            var Ft = ct[yt];
                            (!g || S[Ft] === void 0) && (S[Ft] = j[Ft])
                        }
                    return S
                }
            },
            ht = function(l) {
                if (!m.isObject(l)) return {};
                if (V) return V(l);
                ot.prototype = l;
                var g = new ot;
                return ot.prototype = null, g
            },
            bt = function(l) {
                return function(g) {
                    return g == null ? void 0 : g[l]
                }
            },
            d = Math.pow(2, 53) - 1,
            kt = bt("length"),
            Vt = function(l) {
                var g = kt(l);
                return typeof g == "number" && g >= 0 && g <= d
            };
        m.each = m.forEach = function(l, g, S) {
            g = L(g, S);
            var R, P;
            if (Vt(l))
                for (R = 0, P = l.length; R < P; R++) g(l[R], R, l);
            else {
                var j = m.keys(l);
                for (R = 0, P = j.length; R < P; R++) g(l[j[R]], j[R], l)
            }
            return l
        }, m.map = m.collect = function(l, g, S) {
            g = X(g, S);
            for (var R = !Vt(l) && m.keys(l), P = (R || l).length, j = Array(P), ct = 0; ct < P; ct++) {
                var Mt = R ? R[ct] : ct;
                j[ct] = g(l[Mt], Mt, l)
            }
            return j
        };

        function Pt(l) {
            function g(S, R, P, j, ct, Mt) {
                for (; ct >= 0 && ct < Mt; ct += l) {
                    var yt = j ? j[ct] : ct;
                    P = R(P, S[yt], yt, S)
                }
                return P
            }
            return function(S, R, P, j) {
                R = L(R, j, 4);
                var ct = !Vt(S) && m.keys(S),
                    Mt = (ct || S).length,
                    yt = l > 0 ? 0 : Mt - 1;
                return arguments.length < 3 && (P = S[ct ? ct[yt] : yt], yt += l), g(S, R, P, ct, yt, Mt)
            }
        }
        m.reduce = m.foldl = m.inject = Pt(1), m.reduceRight = m.foldr = Pt(-1), m.find = m.detect = function(l, g, S) {
            var R;
            if (Vt(l) ? R = m.findIndex(l, g, S) : R = m.findKey(l, g, S), R !== void 0 && R !== -1) return l[R]
        }, m.filter = m.select = function(l, g, S) {
            var R = [];
            return g = X(g, S), m.each(l, function(P, j, ct) {
                g(P, j, ct) && R.push(P)
            }), R
        }, m.reject = function(l, g, S) {
            return m.filter(l, m.negate(X(g)), S)
        }, m.every = m.all = function(l, g, S) {
            g = X(g, S);
            for (var R = !Vt(l) && m.keys(l), P = (R || l).length, j = 0; j < P; j++) {
                var ct = R ? R[j] : j;
                if (!g(l[ct], ct, l)) return !1
            }
            return !0
        }, m.some = m.any = function(l, g, S) {
            g = X(g, S);
            for (var R = !Vt(l) && m.keys(l), P = (R || l).length, j = 0; j < P; j++) {
                var ct = R ? R[j] : j;
                if (g(l[ct], ct, l)) return !0
            }
            return !1
        }, m.contains = m.includes = m.include = function(l, g, S, R) {
            return Vt(l) || (l = m.values(l)), (typeof S != "number" || R) && (S = 0), m.indexOf(l, g, S) >= 0
        }, m.invoke = function(l, g) {
            var S = k.call(arguments, 2),
                R = m.isFunction(g);
            return m.map(l, function(P) {
                var j = R ? g : P[g];
                return j == null ? j : j.apply(P, S)
            })
        }, m.pluck = function(l, g) {
            return m.map(l, m.property(g))
        }, m.where = function(l, g) {
            return m.filter(l, m.matcher(g))
        }, m.findWhere = function(l, g) {
            return m.find(l, m.matcher(g))
        }, m.max = function(l, g, S) {
            var R = -1 / 0,
                P = -1 / 0,
                j, ct;
            if (g == null && l != null) {
                l = Vt(l) ? l : m.values(l);
                for (var Mt = 0, yt = l.length; Mt < yt; Mt++) j = l[Mt], j > R && (R = j)
            } else g = X(g, S), m.each(l, function(Ft, Ht, fe) {
                ct = g(Ft, Ht, fe), (ct > P || ct === -1 / 0 && R === -1 / 0) && (R = Ft, P = ct)
            });
            return R
        }, m.min = function(l, g, S) {
            var R = 1 / 0,
                P = 1 / 0,
                j, ct;
            if (g == null && l != null) {
                l = Vt(l) ? l : m.values(l);
                for (var Mt = 0, yt = l.length; Mt < yt; Mt++) j = l[Mt], j < R && (R = j)
            } else g = X(g, S), m.each(l, function(Ft, Ht, fe) {
                ct = g(Ft, Ht, fe), (ct < P || ct === 1 / 0 && R === 1 / 0) && (R = Ft, P = ct)
            });
            return R
        }, m.shuffle = function(l) {
            for (var g = Vt(l) ? l : m.values(l), S = g.length, R = Array(S), P = 0, j; P < S; P++) j = m.random(0, P), j !== P && (R[P] = R[j]), R[j] = g[P];
            return R
        }, m.sample = function(l, g, S) {
            return g == null || S ? (Vt(l) || (l = m.values(l)), l[m.random(l.length - 1)]) : m.shuffle(l).slice(0, Math.max(0, g))
        }, m.sortBy = function(l, g, S) {
            return g = X(g, S), m.pluck(m.map(l, function(R, P, j) {
                return {
                    value: R,
                    index: P,
                    criteria: g(R, P, j)
                }
            }).sort(function(R, P) {
                var j = R.criteria,
                    ct = P.criteria;
                if (j !== ct) {
                    if (j > ct || j === void 0) return 1;
                    if (j < ct || ct === void 0) return -1
                }
                return R.index - P.index
            }), "value")
        };
        var Ce = function(l) {
            return function(g, S, R) {
                var P = {};
                return S = X(S, R), m.each(g, function(j, ct) {
                    var Mt = S(j, ct, g);
                    l(P, j, Mt)
                }), P
            }
        };
        m.groupBy = Ce(function(l, g, S) {
            m.has(l, S) ? l[S].push(g) : l[S] = [g]
        }), m.indexBy = Ce(function(l, g, S) {
            l[S] = g
        }), m.countBy = Ce(function(l, g, S) {
            m.has(l, S) ? l[S]++ : l[S] = 1
        }), m.toArray = function(l) {
            return l ? m.isArray(l) ? k.call(l) : Vt(l) ? m.map(l, m.identity) : m.values(l) : []
        }, m.size = function(l) {
            return l == null ? 0 : Vt(l) ? l.length : m.keys(l).length
        }, m.partition = function(l, g, S) {
            g = X(g, S);
            var R = [],
                P = [];
            return m.each(l, function(j, ct, Mt) {
                (g(j, ct, Mt) ? R : P).push(j)
            }), [R, P]
        }, m.first = m.head = m.take = function(l, g, S) {
            if (l != null) return g == null || S ? l[0] : m.initial(l, l.length - g)
        }, m.initial = function(l, g, S) {
            return k.call(l, 0, Math.max(0, l.length - (g == null || S ? 1 : g)))
        }, m.last = function(l, g, S) {
            if (l != null) return g == null || S ? l[l.length - 1] : m.rest(l, Math.max(0, l.length - g))
        }, m.rest = m.tail = m.drop = function(l, g, S) {
            return k.call(l, g == null || S ? 1 : g)
        }, m.compact = function(l) {
            return m.filter(l, m.identity)
        };
        var Xt = function(l, g, S, R) {
            for (var P = [], j = 0, ct = R || 0, Mt = kt(l); ct < Mt; ct++) {
                var yt = l[ct];
                if (Vt(yt) && (m.isArray(yt) || m.isArguments(yt))) {
                    g || (yt = Xt(yt, g, S));
                    var Ft = 0,
                        Ht = yt.length;
                    for (P.length += Ht; Ft < Ht;) P[j++] = yt[Ft++]
                } else S || (P[j++] = yt)
            }
            return P
        };
        m.flatten = function(l, g) {
            return Xt(l, g, !1)
        }, m.without = function(l) {
            return m.difference(l, k.call(arguments, 1))
        }, m.uniq = m.unique = function(l, g, S, R) {
            m.isBoolean(g) || (R = S, S = g, g = !1), S != null && (S = X(S, R));
            for (var P = [], j = [], ct = 0, Mt = kt(l); ct < Mt; ct++) {
                var yt = l[ct],
                    Ft = S ? S(yt, ct, l) : yt;
                g ? ((!ct || j !== Ft) && P.push(yt), j = Ft) : S ? m.contains(j, Ft) || (j.push(Ft), P.push(yt)) : m.contains(P, yt) || P.push(yt)
            }
            return P
        }, m.union = function() {
            return m.uniq(Xt(arguments, !0, !0))
        }, m.intersection = function(l) {
            for (var g = [], S = arguments.length, R = 0, P = kt(l); R < P; R++) {
                var j = l[R];
                if (!m.contains(g, j)) {
                    for (var ct = 1; ct < S && m.contains(arguments[ct], j); ct++);
                    ct === S && g.push(j)
                }
            }
            return g
        }, m.difference = function(l) {
            var g = Xt(arguments, !0, !0, 1);
            return m.filter(l, function(S) {
                return !m.contains(g, S)
            })
        }, m.zip = function() {
            return m.unzip(arguments)
        }, m.unzip = function(l) {
            for (var g = l && m.max(l, kt).length || 0, S = Array(g), R = 0; R < g; R++) S[R] = m.pluck(l, R);
            return S
        }, m.object = function(l, g) {
            for (var S = {}, R = 0, P = kt(l); R < P; R++) g ? S[l[R]] = g[R] : S[l[R][0]] = l[R][1];
            return S
        };

        function et(l) {
            return function(g, S, R) {
                S = X(S, R);
                for (var P = kt(g), j = l > 0 ? 0 : P - 1; j >= 0 && j < P; j += l)
                    if (S(g[j], j, g)) return j;
                return -1
            }
        }
        m.findIndex = et(1), m.findLastIndex = et(-1), m.sortedIndex = function(l, g, S, R) {
            S = X(S, R, 1);
            for (var P = S(g), j = 0, ct = kt(l); j < ct;) {
                var Mt = Math.floor((j + ct) / 2);
                S(l[Mt]) < P ? j = Mt + 1 : ct = Mt
            }
            return j
        };

        function Jt(l, g, S) {
            return function(R, P, j) {
                var ct = 0,
                    Mt = kt(R);
                if (typeof j == "number") l > 0 ? ct = j >= 0 ? j : Math.max(j + Mt, ct) : Mt = j >= 0 ? Math.min(j + 1, Mt) : j + Mt + 1;
                else if (S && j && Mt) return j = S(R, P), R[j] === P ? j : -1;
                if (P !== P) return j = g(k.call(R, ct, Mt), m.isNaN), j >= 0 ? j + ct : -1;
                for (j = l > 0 ? ct : Mt - 1; j >= 0 && j < Mt; j += l)
                    if (R[j] === P) return j;
                return -1
            }
        }
        m.indexOf = Jt(1, m.findIndex, m.sortedIndex), m.lastIndexOf = Jt(-1, m.findLastIndex), m.range = function(l, g, S) {
            g == null && (g = l || 0, l = 0), S = S || 1;
            for (var R = Math.max(Math.ceil((g - l) / S), 0), P = Array(R), j = 0; j < R; j++, l += S) P[j] = l;
            return P
        };
        var G = function(l, g, S, R, P) {
            if (!(R instanceof g)) return l.apply(S, P);
            var j = ht(l.prototype),
                ct = l.apply(j, P);
            return m.isObject(ct) ? ct : j
        };
        m.bind = function(l, g) {
            if (st && l.bind === st) return st.apply(l, k.call(arguments, 1));
            if (!m.isFunction(l)) throw new TypeError("Bind must be called on a function");
            var S = k.call(arguments, 2),
                R = function() {
                    return G(l, R, g, this, S.concat(k.call(arguments)))
                };
            return R
        }, m.partial = function(l) {
            var g = k.call(arguments, 1),
                S = function() {
                    for (var R = 0, P = g.length, j = Array(P), ct = 0; ct < P; ct++) j[ct] = g[ct] === m ? arguments[R++] : g[ct];
                    for (; R < arguments.length;) j.push(arguments[R++]);
                    return G(l, S, this, this, j)
                };
            return S
        }, m.bindAll = function(l) {
            var g, S = arguments.length,
                R;
            if (S <= 1) throw new Error("bindAll must be passed function names");
            for (g = 1; g < S; g++) R = arguments[g], l[R] = m.bind(l[R], l);
            return l
        }, m.memoize = function(l, g) {
            var S = function(R) {
                var P = S.cache,
                    j = "" + (g ? g.apply(this, arguments) : R);
                return m.has(P, j) || (P[j] = l.apply(this, arguments)), P[j]
            };
            return S.cache = {}, S
        }, m.delay = function(l, g) {
            var S = k.call(arguments, 2);
            return setTimeout(function() {
                return l.apply(null, S)
            }, g)
        }, m.defer = m.partial(m.delay, m, 1), m.throttle = function(l, g, S) {
            var R, P, j, ct = null,
                Mt = 0;
            S || (S = {});
            var yt = function() {
                Mt = S.leading === !1 ? 0 : m.now(), ct = null, j = l.apply(R, P), ct || (R = P = null)
            };
            return function() {
                var Ft = m.now();
                !Mt && S.leading === !1 && (Mt = Ft);
                var Ht = g - (Ft - Mt);
                return R = this, P = arguments, Ht <= 0 || Ht > g ? (ct && (clearTimeout(ct), ct = null), Mt = Ft, j = l.apply(R, P), ct || (R = P = null)) : !ct && S.trailing !== !1 && (ct = setTimeout(yt, Ht)), j
            }
        }, m.debounce = function(l, g, S) {
            var R, P, j, ct, Mt, yt = function() {
                var Ft = m.now() - ct;
                Ft < g && Ft >= 0 ? R = setTimeout(yt, g - Ft) : (R = null, S || (Mt = l.apply(j, P), R || (j = P = null)))
            };
            return function() {
                j = this, P = arguments, ct = m.now();
                var Ft = S && !R;
                return R || (R = setTimeout(yt, g)), Ft && (Mt = l.apply(j, P), j = P = null), Mt
            }
        }, m.wrap = function(l, g) {
            return m.partial(g, l)
        }, m.negate = function(l) {
            return function() {
                return !l.apply(this, arguments)
            }
        }, m.compose = function() {
            var l = arguments,
                g = l.length - 1;
            return function() {
                for (var S = g, R = l[g].apply(this, arguments); S--;) R = l[S].call(this, R);
                return R
            }
        }, m.after = function(l, g) {
            return function() {
                if (--l < 1) return g.apply(this, arguments)
            }
        }, m.before = function(l, g) {
            var S;
            return function() {
                return --l > 0 && (S = g.apply(this, arguments)), l <= 1 && (g = null), S
            }
        }, m.once = m.partial(m.before, 2);
        var pt = !{
                toString: null
            }.propertyIsEnumerable("toString"),
            $t = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];

        function At(l, g) {
            var S = $t.length,
                R = l.constructor,
                P = m.isFunction(R) && R.prototype || f,
                j = "constructor";
            for (m.has(l, j) && !m.contains(g, j) && g.push(j); S--;) j = $t[S], j in l && l[j] !== P[j] && !m.contains(g, j) && g.push(j)
        }
        m.keys = function(l) {
            if (!m.isObject(l)) return [];
            if (tt) return tt(l);
            var g = [];
            for (var S in l) m.has(l, S) && g.push(S);
            return pt && At(l, g), g
        }, m.allKeys = function(l) {
            if (!m.isObject(l)) return [];
            var g = [];
            for (var S in l) g.push(S);
            return pt && At(l, g), g
        }, m.values = function(l) {
            for (var g = m.keys(l), S = g.length, R = Array(S), P = 0; P < S; P++) R[P] = l[g[P]];
            return R
        }, m.mapObject = function(l, g, S) {
            g = X(g, S);
            for (var R = m.keys(l), P = R.length, j = {}, ct, Mt = 0; Mt < P; Mt++) ct = R[Mt], j[ct] = g(l[ct], ct, l);
            return j
        }, m.pairs = function(l) {
            for (var g = m.keys(l), S = g.length, R = Array(S), P = 0; P < S; P++) R[P] = [g[P], l[g[P]]];
            return R
        }, m.invert = function(l) {
            for (var g = {}, S = m.keys(l), R = 0, P = S.length; R < P; R++) g[l[S[R]]] = S[R];
            return g
        }, m.functions = m.methods = function(l) {
            var g = [];
            for (var S in l) m.isFunction(l[S]) && g.push(S);
            return g.sort()
        }, m.extend = ut(m.allKeys), m.extendOwn = m.assign = ut(m.keys), m.findKey = function(l, g, S) {
            g = X(g, S);
            for (var R = m.keys(l), P, j = 0, ct = R.length; j < ct; j++)
                if (P = R[j], g(l[P], P, l)) return P
        }, m.pick = function(l, g, S) {
            var R = {},
                P = l,
                j, ct;
            if (P == null) return R;
            m.isFunction(g) ? (ct = m.allKeys(P), j = L(g, S)) : (ct = Xt(arguments, !1, !1, 1), j = function(fe, Le, hn) {
                return Le in hn
            }, P = Object(P));
            for (var Mt = 0, yt = ct.length; Mt < yt; Mt++) {
                var Ft = ct[Mt],
                    Ht = P[Ft];
                j(Ht, Ft, P) && (R[Ft] = Ht)
            }
            return R
        }, m.omit = function(l, g, S) {
            if (m.isFunction(g)) g = m.negate(g);
            else {
                var R = m.map(Xt(arguments, !1, !1, 1), String);
                g = function(P, j) {
                    return !m.contains(R, j)
                }
            }
            return m.pick(l, g, S)
        }, m.defaults = ut(m.allKeys, !0), m.create = function(l, g) {
            var S = ht(l);
            return g && m.extendOwn(S, g), S
        }, m.clone = function(l) {
            return m.isObject(l) ? m.isArray(l) ? l.slice() : m.extend({}, l) : l
        }, m.tap = function(l, g) {
            return g(l), l
        }, m.isMatch = function(l, g) {
            var S = m.keys(g),
                R = S.length;
            if (l == null) return !R;
            for (var P = Object(l), j = 0; j < R; j++) {
                var ct = S[j];
                if (g[ct] !== P[ct] || !(ct in P)) return !1
            }
            return !0
        };
        var Tt = function(l, g, S, R) {
            if (l === g) return l !== 0 || 1 / l === 1 / g;
            if (l == null || g == null) return l === g;
            l instanceof m && (l = l._wrapped), g instanceof m && (g = g._wrapped);
            var P = A.call(l);
            if (P !== A.call(g)) return !1;
            switch (P) {
                case "[object RegExp]":
                case "[object String]":
                    return "" + l == "" + g;
                case "[object Number]":
                    return +l != +l ? +g != +g : +l == 0 ? 1 / +l === 1 / g : +l == +g;
                case "[object Date]":
                case "[object Boolean]":
                    return +l == +g
            }
            var j = P === "[object Array]";
            if (!j) {
                if (typeof l != "object" || typeof g != "object") return !1;
                var ct = l.constructor,
                    Mt = g.constructor;
                if (ct !== Mt && !(m.isFunction(ct) && ct instanceof ct && m.isFunction(Mt) && Mt instanceof Mt) && "constructor" in l && "constructor" in g) return !1
            }
            S = S || [], R = R || [];
            for (var yt = S.length; yt--;)
                if (S[yt] === l) return R[yt] === g;
            if (S.push(l), R.push(g), j) {
                if (yt = l.length, yt !== g.length) return !1;
                for (; yt--;)
                    if (!Tt(l[yt], g[yt], S, R)) return !1
            } else {
                var Ft = m.keys(l),
                    Ht;
                if (yt = Ft.length, m.keys(g).length !== yt) return !1;
                for (; yt--;)
                    if (Ht = Ft[yt], !(m.has(g, Ht) && Tt(l[Ht], g[Ht], S, R))) return !1
            }
            return S.pop(), R.pop(), !0
        };
        m.isEqual = function(l, g) {
            return Tt(l, g)
        }, m.isEmpty = function(l) {
            return l == null ? !0 : Vt(l) && (m.isArray(l) || m.isString(l) || m.isArguments(l)) ? l.length === 0 : m.keys(l).length === 0
        }, m.isElement = function(l) {
            return !!(l && l.nodeType === 1)
        }, m.isArray = $ || function(l) {
            return A.call(l) === "[object Array]"
        }, m.isObject = function(l) {
            var g = typeof l;
            return g === "function" || g === "object" && !!l
        }, m.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(l) {
            m["is" + l] = function(g) {
                return A.call(g) === "[object " + l + "]"
            }
        }), m.isArguments(arguments) || (m.isArguments = function(l) {
            return m.has(l, "callee")
        }), typeof /./ != "function" && typeof Int8Array != "object" && (m.isFunction = function(l) {
            return typeof l == "function" || !1
        }), m.isFinite = function(l) {
            return isFinite(l) && !isNaN(parseFloat(l))
        }, m.isNaN = function(l) {
            return m.isNumber(l) && l !== +l
        }, m.isBoolean = function(l) {
            return l === !0 || l === !1 || A.call(l) === "[object Boolean]"
        }, m.isNull = function(l) {
            return l === null
        }, m.isUndefined = function(l) {
            return l === void 0
        }, m.has = function(l, g) {
            return l != null && D.call(l, g)
        }, m.noConflict = function() {
            return n._ = i, this
        }, m.identity = function(l) {
            return l
        }, m.constant = function(l) {
            return function() {
                return l
            }
        }, m.noop = function() {}, m.property = bt, m.propertyOf = function(l) {
            return l == null ? function() {} : function(g) {
                return l[g]
            }
        }, m.matcher = m.matches = function(l) {
            return l = m.extendOwn({}, l),
                function(g) {
                    return m.isMatch(g, l)
                }
        }, m.times = function(l, g, S) {
            var R = Array(Math.max(0, l));
            g = L(g, S, 1);
            for (var P = 0; P < l; P++) R[P] = g(P);
            return R
        }, m.random = function(l, g) {
            return g == null && (g = l, l = 0), l + Math.floor(Math.random() * (g - l + 1))
        }, m.now = Date.now || function() {
            return new Date().getTime()
        };
        var vt = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            },
            Dt = m.invert(vt),
            Nt = function(l) {
                var g = function(j) {
                        return l[j]
                    },
                    S = "(?:" + m.keys(l).join("|") + ")",
                    R = RegExp(S),
                    P = RegExp(S, "g");
                return function(j) {
                    return j = j == null ? "" : "" + j, R.test(j) ? j.replace(P, g) : j
                }
            };
        m.escape = Nt(vt), m.unescape = Nt(Dt), m.result = function(l, g, S) {
            var R = l == null ? void 0 : l[g];
            return R === void 0 && (R = S), m.isFunction(R) ? R.call(l) : R
        };
        var Kt = 0;
        m.uniqueId = function(l) {
            var g = ++Kt + "";
            return l ? l + g : g
        }, m.templateSettings = {
            evaluate: /<%([\s\S]+?)%>/g,
            interpolate: /<%=([\s\S]+?)%>/g,
            escape: /<%-([\s\S]+?)%>/g
        };
        var le = /(.)^/,
            Ee = {
                "'": "'",
                "\\": "\\",
                "\r": "r",
                "\n": "n",
                "\u2028": "u2028",
                "\u2029": "u2029"
            },
            Ye = /\\|'|\r|\n|\u2028|\u2029/g,
            nn = function(l) {
                return "\\" + Ee[l]
            };
        m.template = function(l, g, S) {
            !g && S && (g = S), g = m.defaults({}, g, m.templateSettings);
            var R = RegExp([(g.escape || le).source, (g.interpolate || le).source, (g.evaluate || le).source].join("|") + "|$", "g"),
                P = 0,
                j = "__p+='";
            l.replace(R, function(Ft, Ht, fe, Le, hn) {
                return j += l.slice(P, hn).replace(Ye, nn), P = hn + Ft.length, Ht ? j += `'+
((__t=(` + Ht + `))==null?'':_.escape(__t))+
'` : fe ? j += `'+
((__t=(` + fe + `))==null?'':__t)+
'` : Le && (j += `';
` + Le + `
__p+='`), Ft
            }), j += `';
`, g.variable || (j = `with(obj||{}){
` + j + `}
`), j = `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` + j + `return __p;
`;
            try {
                var ct = new Function(g.variable || "obj", "_", j)
            } catch (Ft) {
                throw Ft.source = j, Ft
            }
            var Mt = function(Ft) {
                    return ct.call(this, Ft, m)
                },
                yt = g.variable || "obj";
            return Mt.source = "function(" + yt + `){
` + j + "}", Mt
        }, m.chain = function(l) {
            var g = m(l);
            return g._chain = !0, g
        };
        var E = function(l, g) {
            return l._chain ? m(g).chain() : g
        };
        m.mixin = function(l) {
            m.each(m.functions(l), function(g) {
                var S = m[g] = l[g];
                m.prototype[g] = function() {
                    var R = [this._wrapped];
                    return y.apply(R, arguments), E(this, S.apply(m, R))
                }
            })
        }, m.mixin(m), m.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(l) {
            var g = o[l];
            m.prototype[l] = function() {
                var S = this._wrapped;
                return g.apply(S, arguments), (l === "shift" || l === "splice") && S.length === 0 && delete S[0], E(this, S)
            }
        }), m.each(["concat", "join", "slice"], function(l) {
            var g = o[l];
            m.prototype[l] = function() {
                return E(this, g.apply(this._wrapped, arguments))
            }
        }), m.prototype.value = function() {
            return this._wrapped
        }, m.prototype.valueOf = m.prototype.toJSON = m.prototype.value, m.prototype.toString = function() {
            return "" + this._wrapped
        }
    }).call(Re)
})(Ui, Ui.exports);
const ve = Ui.exports;
var Na = {
    exports: {}
};
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
(function(e) {
    (function(t, n) {
        e.exports = t.document ? n(t, !0) : function(i) {
            if (!i.document) throw new Error("jQuery requires a window with a document");
            return n(i)
        }
    })(typeof window < "u" ? window : Re, function(t, n) {
        var i = [],
            o = Object.getPrototypeOf,
            f = i.slice,
            v = i.flat ? function(r) {
                return i.flat.call(r)
            } : function(r) {
                return i.concat.apply([], r)
            },
            y = i.push,
            k = i.indexOf,
            A = {},
            D = A.toString,
            $ = A.hasOwnProperty,
            tt = $.toString,
            st = tt.call(Object),
            V = {},
            ot = function(s) {
                return typeof s == "function" && typeof s.nodeType != "number" && typeof s.item != "function"
            },
            m = function(s) {
                return s != null && s === s.window
            },
            L = t.document,
            X = {
                type: !0,
                src: !0,
                nonce: !0,
                noModule: !0
            };

        function ut(r, s, u) {
            u = u || L;
            var p, b, _ = u.createElement("script");
            if (_.text = r, s)
                for (p in X) b = s[p] || s.getAttribute && s.getAttribute(p), b && _.setAttribute(p, b);
            u.head.appendChild(_).parentNode.removeChild(_)
        }

        function ht(r) {
            return r == null ? r + "" : typeof r == "object" || typeof r == "function" ? A[D.call(r)] || "object" : typeof r
        }
        var bt = "3.6.0",
            d = function(r, s) {
                return new d.fn.init(r, s)
            };
        d.fn = d.prototype = {
            jquery: bt,
            constructor: d,
            length: 0,
            toArray: function() {
                return f.call(this)
            },
            get: function(r) {
                return r == null ? f.call(this) : r < 0 ? this[r + this.length] : this[r]
            },
            pushStack: function(r) {
                var s = d.merge(this.constructor(), r);
                return s.prevObject = this, s
            },
            each: function(r) {
                return d.each(this, r)
            },
            map: function(r) {
                return this.pushStack(d.map(this, function(s, u) {
                    return r.call(s, u, s)
                }))
            },
            slice: function() {
                return this.pushStack(f.apply(this, arguments))
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            even: function() {
                return this.pushStack(d.grep(this, function(r, s) {
                    return (s + 1) % 2
                }))
            },
            odd: function() {
                return this.pushStack(d.grep(this, function(r, s) {
                    return s % 2
                }))
            },
            eq: function(r) {
                var s = this.length,
                    u = +r + (r < 0 ? s : 0);
                return this.pushStack(u >= 0 && u < s ? [this[u]] : [])
            },
            end: function() {
                return this.prevObject || this.constructor()
            },
            push: y,
            sort: i.sort,
            splice: i.splice
        }, d.extend = d.fn.extend = function() {
            var r, s, u, p, b, _, T = arguments[0] || {},
                q = 1,
                W = arguments.length,
                rt = !1;
            for (typeof T == "boolean" && (rt = T, T = arguments[q] || {}, q++), typeof T != "object" && !ot(T) && (T = {}), q === W && (T = this, q--); q < W; q++)
                if ((r = arguments[q]) != null)
                    for (s in r) p = r[s], !(s === "__proto__" || T === p) && (rt && p && (d.isPlainObject(p) || (b = Array.isArray(p))) ? (u = T[s], b && !Array.isArray(u) ? _ = [] : !b && !d.isPlainObject(u) ? _ = {} : _ = u, b = !1, T[s] = d.extend(rt, _, p)) : p !== void 0 && (T[s] = p));
            return T
        }, d.extend({
            expando: "jQuery" + (bt + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(r) {
                throw new Error(r)
            },
            noop: function() {},
            isPlainObject: function(r) {
                var s, u;
                return !r || D.call(r) !== "[object Object]" ? !1 : (s = o(r), s ? (u = $.call(s, "constructor") && s.constructor, typeof u == "function" && tt.call(u) === st) : !0)
            },
            isEmptyObject: function(r) {
                var s;
                for (s in r) return !1;
                return !0
            },
            globalEval: function(r, s, u) {
                ut(r, {
                    nonce: s && s.nonce
                }, u)
            },
            each: function(r, s) {
                var u, p = 0;
                if (kt(r))
                    for (u = r.length; p < u && s.call(r[p], p, r[p]) !== !1; p++);
                else
                    for (p in r)
                        if (s.call(r[p], p, r[p]) === !1) break;
                return r
            },
            makeArray: function(r, s) {
                var u = s || [];
                return r != null && (kt(Object(r)) ? d.merge(u, typeof r == "string" ? [r] : r) : y.call(u, r)), u
            },
            inArray: function(r, s, u) {
                return s == null ? -1 : k.call(s, r, u)
            },
            merge: function(r, s) {
                for (var u = +s.length, p = 0, b = r.length; p < u; p++) r[b++] = s[p];
                return r.length = b, r
            },
            grep: function(r, s, u) {
                for (var p, b = [], _ = 0, T = r.length, q = !u; _ < T; _++) p = !s(r[_], _), p !== q && b.push(r[_]);
                return b
            },
            map: function(r, s, u) {
                var p, b, _ = 0,
                    T = [];
                if (kt(r))
                    for (p = r.length; _ < p; _++) b = s(r[_], _, u), b != null && T.push(b);
                else
                    for (_ in r) b = s(r[_], _, u), b != null && T.push(b);
                return v(T)
            },
            guid: 1,
            support: V
        }), typeof Symbol == "function" && (d.fn[Symbol.iterator] = i[Symbol.iterator]), d.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(r, s) {
            A["[object " + s + "]"] = s.toLowerCase()
        });

        function kt(r) {
            var s = !!r && "length" in r && r.length,
                u = ht(r);
            return ot(r) || m(r) ? !1 : u === "array" || s === 0 || typeof s == "number" && s > 0 && s - 1 in r
        }
        var Vt = function(r) {
            var s, u, p, b, _, T, q, W, rt, gt, Ot, ft, wt, ne, ye, Qt, an, tn, An, Be = "sizzle" + 1 * new Date,
                pe = r.document,
                xn = 0,
                Ae = 0,
                Ge = Qi(),
                Di = Qi(),
                Ki = Qi(),
                On = Qi(),
                ui = function(I, U) {
                    return I === U && (Ot = !0), 0
                },
                hi = {}.hasOwnProperty,
                En = [],
                Yn = En.pop,
                Mn = En.push,
                Vn = En.push,
                _s = En.slice,
                di = function(I, U) {
                    for (var Z = 0, xt = I.length; Z < xt; Z++)
                        if (I[Z] === U) return Z;
                    return -1
                },
                Fr = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                Oe = "[\\x20\\t\\r\\n\\f]",
                fi = "(?:\\\\[\\da-fA-F]{1,6}" + Oe + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                Ss = "\\[" + Oe + "*(" + fi + ")(?:" + Oe + "*([*^$|!~]?=)" + Oe + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + fi + "))|)" + Oe + "*\\]",
                zr = ":(" + fi + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + Ss + ")*)|.*)\\)|)",
                ks = new RegExp(Oe + "+", "g"),
                Mi = new RegExp("^" + Oe + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Oe + "+$", "g"),
                Ts = new RegExp("^" + Oe + "*," + Oe + "*"),
                As = new RegExp("^" + Oe + "*([>+~]|" + Oe + ")" + Oe + "*"),
                Vo = new RegExp(Oe + "|>"),
                jo = new RegExp(zr),
                Fo = new RegExp("^" + fi + "$"),
                Ji = {
                    ID: new RegExp("^#(" + fi + ")"),
                    CLASS: new RegExp("^\\.(" + fi + ")"),
                    TAG: new RegExp("^(" + fi + "|[*])"),
                    ATTR: new RegExp("^" + Ss),
                    PSEUDO: new RegExp("^" + zr),
                    CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + Oe + "*(even|odd|(([+-]|)(\\d*)n|)" + Oe + "*(?:([+-]|)" + Oe + "*(\\d+)|))" + Oe + "*\\)|)", "i"),
                    bool: new RegExp("^(?:" + Fr + ")$", "i"),
                    needsContext: new RegExp("^" + Oe + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + Oe + "*((?:-\\d)?\\d*)" + Oe + "*\\)|)(?=[^-]|$)", "i")
                },
                zo = /HTML$/i,
                Ho = /^(?:input|select|textarea|button)$/i,
                Uo = /^h\d$/i,
                Pi = /^[^{]+\{\s*\[native \w/,
                qo = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                Hr = /[+~]/,
                qn = new RegExp("\\\\[\\da-fA-F]{1,6}" + Oe + "?|\\\\([^\\r\\n\\f])", "g"),
                jn = function(I, U) {
                    var Z = "0x" + I.slice(1) - 65536;
                    return U || (Z < 0 ? String.fromCharCode(Z + 65536) : String.fromCharCode(Z >> 10 | 55296, Z & 1023 | 56320))
                },
                Ur = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                Os = function(I, U) {
                    return U ? I === "\0" ? "\uFFFD" : I.slice(0, -1) + "\\" + I.charCodeAt(I.length - 1).toString(16) + " " : "\\" + I
                },
                Rs = function() {
                    ft()
                },
                Wo = nr(function(I) {
                    return I.disabled === !0 && I.nodeName.toLowerCase() === "fieldset"
                }, {
                    dir: "parentNode",
                    next: "legend"
                });
            try {
                Vn.apply(En = _s.call(pe.childNodes), pe.childNodes), En[pe.childNodes.length].nodeType
            } catch {
                Vn = {
                    apply: En.length ? function(U, Z) {
                        Mn.apply(U, _s.call(Z))
                    } : function(U, Z) {
                        for (var xt = U.length, at = 0; U[xt++] = Z[at++];);
                        U.length = xt - 1
                    }
                }
            }

            function $e(I, U, Z, xt) {
                var at, St, Lt, jt, qt, Zt, ee, ae = U && U.ownerDocument,
                    _e = U ? U.nodeType : 9;
                if (Z = Z || [], typeof I != "string" || !I || _e !== 1 && _e !== 9 && _e !== 11) return Z;
                if (!xt && (ft(U), U = U || wt, ye)) {
                    if (_e !== 11 && (qt = qo.exec(I)))
                        if (at = qt[1]) {
                            if (_e === 9)
                                if (Lt = U.getElementById(at)) {
                                    if (Lt.id === at) return Z.push(Lt), Z
                                } else return Z;
                            else if (ae && (Lt = ae.getElementById(at)) && An(U, Lt) && Lt.id === at) return Z.push(Lt), Z
                        } else {
                            if (qt[2]) return Vn.apply(Z, U.getElementsByTagName(I)), Z;
                            if ((at = qt[3]) && u.getElementsByClassName && U.getElementsByClassName) return Vn.apply(Z, U.getElementsByClassName(at)), Z
                        } if (u.qsa && !On[I + " "] && (!Qt || !Qt.test(I)) && (_e !== 1 || U.nodeName.toLowerCase() !== "object")) {
                        if (ee = I, ae = U, _e === 1 && (Vo.test(I) || As.test(I))) {
                            for (ae = Hr.test(I) && qr(U.parentNode) || U, (ae !== U || !u.scope) && ((jt = U.getAttribute("id")) ? jt = jt.replace(Ur, Os) : U.setAttribute("id", jt = Be)), Zt = T(I), St = Zt.length; St--;) Zt[St] = (jt ? "#" + jt : ":scope") + " " + er(Zt[St]);
                            ee = Zt.join(",")
                        }
                        try {
                            return Vn.apply(Z, ae.querySelectorAll(ee)), Z
                        } catch {
                            On(I, !0)
                        } finally {
                            jt === Be && U.removeAttribute("id")
                        }
                    }
                }
                return W(I.replace(Mi, "$1"), U, Z, xt)
            }

            function Qi() {
                var I = [];

                function U(Z, xt) {
                    return I.push(Z + " ") > p.cacheLength && delete U[I.shift()], U[Z + " "] = xt
                }
                return U
            }

            function Rn(I) {
                return I[Be] = !0, I
            }

            function Pn(I) {
                var U = wt.createElement("fieldset");
                try {
                    return !!I(U)
                } catch {
                    return !1
                } finally {
                    U.parentNode && U.parentNode.removeChild(U), U = null
                }
            }

            function Zi(I, U) {
                for (var Z = I.split("|"), xt = Z.length; xt--;) p.attrHandle[Z[xt]] = U
            }

            function tr(I, U) {
                var Z = U && I,
                    xt = Z && I.nodeType === 1 && U.nodeType === 1 && I.sourceIndex - U.sourceIndex;
                if (xt) return xt;
                if (Z) {
                    for (; Z = Z.nextSibling;)
                        if (Z === U) return -1
                }
                return I ? 1 : -1
            }

            function Go(I) {
                return function(U) {
                    var Z = U.nodeName.toLowerCase();
                    return Z === "input" && U.type === I
                }
            }

            function Xo(I) {
                return function(U) {
                    var Z = U.nodeName.toLowerCase();
                    return (Z === "input" || Z === "button") && U.type === I
                }
            }

            function Is(I) {
                return function(U) {
                    return "form" in U ? U.parentNode && U.disabled === !1 ? "label" in U ? "label" in U.parentNode ? U.parentNode.disabled === I : U.disabled === I : U.isDisabled === I || U.isDisabled !== !I && Wo(U) === I : U.disabled === I : "label" in U ? U.disabled === I : !1
                }
            }

            function Wn(I) {
                return Rn(function(U) {
                    return U = +U, Rn(function(Z, xt) {
                        for (var at, St = I([], Z.length, U), Lt = St.length; Lt--;) Z[at = St[Lt]] && (Z[at] = !(xt[at] = Z[at]))
                    })
                })
            }

            function qr(I) {
                return I && typeof I.getElementsByTagName < "u" && I
            }
            u = $e.support = {}, _ = $e.isXML = function(I) {
                var U = I && I.namespaceURI,
                    Z = I && (I.ownerDocument || I).documentElement;
                return !zo.test(U || Z && Z.nodeName || "HTML")
            }, ft = $e.setDocument = function(I) {
                var U, Z, xt = I ? I.ownerDocument || I : pe;
                return xt == wt || xt.nodeType !== 9 || !xt.documentElement || (wt = xt, ne = wt.documentElement, ye = !_(wt), pe != wt && (Z = wt.defaultView) && Z.top !== Z && (Z.addEventListener ? Z.addEventListener("unload", Rs, !1) : Z.attachEvent && Z.attachEvent("onunload", Rs)), u.scope = Pn(function(at) {
                    return ne.appendChild(at).appendChild(wt.createElement("div")), typeof at.querySelectorAll < "u" && !at.querySelectorAll(":scope fieldset div").length
                }), u.attributes = Pn(function(at) {
                    return at.className = "i", !at.getAttribute("className")
                }), u.getElementsByTagName = Pn(function(at) {
                    return at.appendChild(wt.createComment("")), !at.getElementsByTagName("*").length
                }), u.getElementsByClassName = Pi.test(wt.getElementsByClassName), u.getById = Pn(function(at) {
                    return ne.appendChild(at).id = Be, !wt.getElementsByName || !wt.getElementsByName(Be).length
                }), u.getById ? (p.filter.ID = function(at) {
                    var St = at.replace(qn, jn);
                    return function(Lt) {
                        return Lt.getAttribute("id") === St
                    }
                }, p.find.ID = function(at, St) {
                    if (typeof St.getElementById < "u" && ye) {
                        var Lt = St.getElementById(at);
                        return Lt ? [Lt] : []
                    }
                }) : (p.filter.ID = function(at) {
                    var St = at.replace(qn, jn);
                    return function(Lt) {
                        var jt = typeof Lt.getAttributeNode < "u" && Lt.getAttributeNode("id");
                        return jt && jt.value === St
                    }
                }, p.find.ID = function(at, St) {
                    if (typeof St.getElementById < "u" && ye) {
                        var Lt, jt, qt, Zt = St.getElementById(at);
                        if (Zt) {
                            if (Lt = Zt.getAttributeNode("id"), Lt && Lt.value === at) return [Zt];
                            for (qt = St.getElementsByName(at), jt = 0; Zt = qt[jt++];)
                                if (Lt = Zt.getAttributeNode("id"), Lt && Lt.value === at) return [Zt]
                        }
                        return []
                    }
                }), p.find.TAG = u.getElementsByTagName ? function(at, St) {
                    if (typeof St.getElementsByTagName < "u") return St.getElementsByTagName(at);
                    if (u.qsa) return St.querySelectorAll(at)
                } : function(at, St) {
                    var Lt, jt = [],
                        qt = 0,
                        Zt = St.getElementsByTagName(at);
                    if (at === "*") {
                        for (; Lt = Zt[qt++];) Lt.nodeType === 1 && jt.push(Lt);
                        return jt
                    }
                    return Zt
                }, p.find.CLASS = u.getElementsByClassName && function(at, St) {
                    if (typeof St.getElementsByClassName < "u" && ye) return St.getElementsByClassName(at)
                }, an = [], Qt = [], (u.qsa = Pi.test(wt.querySelectorAll)) && (Pn(function(at) {
                    var St;
                    ne.appendChild(at).innerHTML = "<a id='" + Be + "'></a><select id='" + Be + "-\r\\' msallowcapture=''><option selected=''></option></select>", at.querySelectorAll("[msallowcapture^='']").length && Qt.push("[*^$]=" + Oe + `*(?:''|"")`), at.querySelectorAll("[selected]").length || Qt.push("\\[" + Oe + "*(?:value|" + Fr + ")"), at.querySelectorAll("[id~=" + Be + "-]").length || Qt.push("~="), St = wt.createElement("input"), St.setAttribute("name", ""), at.appendChild(St), at.querySelectorAll("[name='']").length || Qt.push("\\[" + Oe + "*name" + Oe + "*=" + Oe + `*(?:''|"")`), at.querySelectorAll(":checked").length || Qt.push(":checked"), at.querySelectorAll("a#" + Be + "+*").length || Qt.push(".#.+[+~]"), at.querySelectorAll("\\\f"), Qt.push("[\\r\\n\\f]")
                }), Pn(function(at) {
                    at.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var St = wt.createElement("input");
                    St.setAttribute("type", "hidden"), at.appendChild(St).setAttribute("name", "D"), at.querySelectorAll("[name=d]").length && Qt.push("name" + Oe + "*[*^$|!~]?="), at.querySelectorAll(":enabled").length !== 2 && Qt.push(":enabled", ":disabled"), ne.appendChild(at).disabled = !0, at.querySelectorAll(":disabled").length !== 2 && Qt.push(":enabled", ":disabled"), at.querySelectorAll("*,:x"), Qt.push(",.*:")
                })), (u.matchesSelector = Pi.test(tn = ne.matches || ne.webkitMatchesSelector || ne.mozMatchesSelector || ne.oMatchesSelector || ne.msMatchesSelector)) && Pn(function(at) {
                    u.disconnectedMatch = tn.call(at, "*"), tn.call(at, "[s!='']:x"), an.push("!=", zr)
                }), Qt = Qt.length && new RegExp(Qt.join("|")), an = an.length && new RegExp(an.join("|")), U = Pi.test(ne.compareDocumentPosition), An = U || Pi.test(ne.contains) ? function(at, St) {
                    var Lt = at.nodeType === 9 ? at.documentElement : at,
                        jt = St && St.parentNode;
                    return at === jt || !!(jt && jt.nodeType === 1 && (Lt.contains ? Lt.contains(jt) : at.compareDocumentPosition && at.compareDocumentPosition(jt) & 16))
                } : function(at, St) {
                    if (St) {
                        for (; St = St.parentNode;)
                            if (St === at) return !0
                    }
                    return !1
                }, ui = U ? function(at, St) {
                    if (at === St) return Ot = !0, 0;
                    var Lt = !at.compareDocumentPosition - !St.compareDocumentPosition;
                    return Lt || (Lt = (at.ownerDocument || at) == (St.ownerDocument || St) ? at.compareDocumentPosition(St) : 1, Lt & 1 || !u.sortDetached && St.compareDocumentPosition(at) === Lt ? at == wt || at.ownerDocument == pe && An(pe, at) ? -1 : St == wt || St.ownerDocument == pe && An(pe, St) ? 1 : gt ? di(gt, at) - di(gt, St) : 0 : Lt & 4 ? -1 : 1)
                } : function(at, St) {
                    if (at === St) return Ot = !0, 0;
                    var Lt, jt = 0,
                        qt = at.parentNode,
                        Zt = St.parentNode,
                        ee = [at],
                        ae = [St];
                    if (!qt || !Zt) return at == wt ? -1 : St == wt ? 1 : qt ? -1 : Zt ? 1 : gt ? di(gt, at) - di(gt, St) : 0;
                    if (qt === Zt) return tr(at, St);
                    for (Lt = at; Lt = Lt.parentNode;) ee.unshift(Lt);
                    for (Lt = St; Lt = Lt.parentNode;) ae.unshift(Lt);
                    for (; ee[jt] === ae[jt];) jt++;
                    return jt ? tr(ee[jt], ae[jt]) : ee[jt] == pe ? -1 : ae[jt] == pe ? 1 : 0
                }), wt
            }, $e.matches = function(I, U) {
                return $e(I, null, null, U)
            }, $e.matchesSelector = function(I, U) {
                if (ft(I), u.matchesSelector && ye && !On[U + " "] && (!an || !an.test(U)) && (!Qt || !Qt.test(U))) try {
                    var Z = tn.call(I, U);
                    if (Z || u.disconnectedMatch || I.document && I.document.nodeType !== 11) return Z
                } catch {
                    On(U, !0)
                }
                return $e(U, wt, null, [I]).length > 0
            }, $e.contains = function(I, U) {
                return (I.ownerDocument || I) != wt && ft(I), An(I, U)
            }, $e.attr = function(I, U) {
                (I.ownerDocument || I) != wt && ft(I);
                var Z = p.attrHandle[U.toLowerCase()],
                    xt = Z && hi.call(p.attrHandle, U.toLowerCase()) ? Z(I, U, !ye) : void 0;
                return xt !== void 0 ? xt : u.attributes || !ye ? I.getAttribute(U) : (xt = I.getAttributeNode(U)) && xt.specified ? xt.value : null
            }, $e.escape = function(I) {
                return (I + "").replace(Ur, Os)
            }, $e.error = function(I) {
                throw new Error("Syntax error, unrecognized expression: " + I)
            }, $e.uniqueSort = function(I) {
                var U, Z = [],
                    xt = 0,
                    at = 0;
                if (Ot = !u.detectDuplicates, gt = !u.sortStable && I.slice(0), I.sort(ui), Ot) {
                    for (; U = I[at++];) U === I[at] && (xt = Z.push(at));
                    for (; xt--;) I.splice(Z[xt], 1)
                }
                return gt = null, I
            }, b = $e.getText = function(I) {
                var U, Z = "",
                    xt = 0,
                    at = I.nodeType;
                if (at) {
                    if (at === 1 || at === 9 || at === 11) {
                        if (typeof I.textContent == "string") return I.textContent;
                        for (I = I.firstChild; I; I = I.nextSibling) Z += b(I)
                    } else if (at === 3 || at === 4) return I.nodeValue
                } else
                    for (; U = I[xt++];) Z += b(U);
                return Z
            }, p = $e.selectors = {
                cacheLength: 50,
                createPseudo: Rn,
                match: Ji,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(I) {
                        return I[1] = I[1].replace(qn, jn), I[3] = (I[3] || I[4] || I[5] || "").replace(qn, jn), I[2] === "~=" && (I[3] = " " + I[3] + " "), I.slice(0, 4)
                    },
                    CHILD: function(I) {
                        return I[1] = I[1].toLowerCase(), I[1].slice(0, 3) === "nth" ? (I[3] || $e.error(I[0]), I[4] = +(I[4] ? I[5] + (I[6] || 1) : 2 * (I[3] === "even" || I[3] === "odd")), I[5] = +(I[7] + I[8] || I[3] === "odd")) : I[3] && $e.error(I[0]), I
                    },
                    PSEUDO: function(I) {
                        var U, Z = !I[6] && I[2];
                        return Ji.CHILD.test(I[0]) ? null : (I[3] ? I[2] = I[4] || I[5] || "" : Z && jo.test(Z) && (U = T(Z, !0)) && (U = Z.indexOf(")", Z.length - U) - Z.length) && (I[0] = I[0].slice(0, U), I[2] = Z.slice(0, U)), I.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(I) {
                        var U = I.replace(qn, jn).toLowerCase();
                        return I === "*" ? function() {
                            return !0
                        } : function(Z) {
                            return Z.nodeName && Z.nodeName.toLowerCase() === U
                        }
                    },
                    CLASS: function(I) {
                        var U = Ge[I + " "];
                        return U || (U = new RegExp("(^|" + Oe + ")" + I + "(" + Oe + "|$)")) && Ge(I, function(Z) {
                            return U.test(typeof Z.className == "string" && Z.className || typeof Z.getAttribute < "u" && Z.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(I, U, Z) {
                        return function(xt) {
                            var at = $e.attr(xt, I);
                            return at == null ? U === "!=" : U ? (at += "", U === "=" ? at === Z : U === "!=" ? at !== Z : U === "^=" ? Z && at.indexOf(Z) === 0 : U === "*=" ? Z && at.indexOf(Z) > -1 : U === "$=" ? Z && at.slice(-Z.length) === Z : U === "~=" ? (" " + at.replace(ks, " ") + " ").indexOf(Z) > -1 : U === "|=" ? at === Z || at.slice(0, Z.length + 1) === Z + "-" : !1) : !0
                        }
                    },
                    CHILD: function(I, U, Z, xt, at) {
                        var St = I.slice(0, 3) !== "nth",
                            Lt = I.slice(-4) !== "last",
                            jt = U === "of-type";
                        return xt === 1 && at === 0 ? function(qt) {
                            return !!qt.parentNode
                        } : function(qt, Zt, ee) {
                            var ae, _e, Fe, se, ln, mn, In = St !== Lt ? "nextSibling" : "previousSibling",
                                ze = qt.parentNode,
                                c = jt && qt.nodeName.toLowerCase(),
                                h = !ee && !jt,
                                C = !1;
                            if (ze) {
                                if (St) {
                                    for (; In;) {
                                        for (se = qt; se = se[In];)
                                            if (jt ? se.nodeName.toLowerCase() === c : se.nodeType === 1) return !1;
                                        mn = In = I === "only" && !mn && "nextSibling"
                                    }
                                    return !0
                                }
                                if (mn = [Lt ? ze.firstChild : ze.lastChild], Lt && h) {
                                    for (se = ze, Fe = se[Be] || (se[Be] = {}), _e = Fe[se.uniqueID] || (Fe[se.uniqueID] = {}), ae = _e[I] || [], ln = ae[0] === xn && ae[1], C = ln && ae[2], se = ln && ze.childNodes[ln]; se = ++ln && se && se[In] || (C = ln = 0) || mn.pop();)
                                        if (se.nodeType === 1 && ++C && se === qt) {
                                            _e[I] = [xn, ln, C];
                                            break
                                        }
                                } else if (h && (se = qt, Fe = se[Be] || (se[Be] = {}), _e = Fe[se.uniqueID] || (Fe[se.uniqueID] = {}), ae = _e[I] || [], ln = ae[0] === xn && ae[1], C = ln), C === !1)
                                    for (;
                                        (se = ++ln && se && se[In] || (C = ln = 0) || mn.pop()) && !((jt ? se.nodeName.toLowerCase() === c : se.nodeType === 1) && ++C && (h && (Fe = se[Be] || (se[Be] = {}), _e = Fe[se.uniqueID] || (Fe[se.uniqueID] = {}), _e[I] = [xn, C]), se === qt)););
                                return C -= at, C === xt || C % xt === 0 && C / xt >= 0
                            }
                        }
                    },
                    PSEUDO: function(I, U) {
                        var Z, xt = p.pseudos[I] || p.setFilters[I.toLowerCase()] || $e.error("unsupported pseudo: " + I);
                        return xt[Be] ? xt(U) : xt.length > 1 ? (Z = [I, I, "", U], p.setFilters.hasOwnProperty(I.toLowerCase()) ? Rn(function(at, St) {
                            for (var Lt, jt = xt(at, U), qt = jt.length; qt--;) Lt = di(at, jt[qt]), at[Lt] = !(St[Lt] = jt[qt])
                        }) : function(at) {
                            return xt(at, 0, Z)
                        }) : xt
                    }
                },
                pseudos: {
                    not: Rn(function(I) {
                        var U = [],
                            Z = [],
                            xt = q(I.replace(Mi, "$1"));
                        return xt[Be] ? Rn(function(at, St, Lt, jt) {
                            for (var qt, Zt = xt(at, null, jt, []), ee = at.length; ee--;)(qt = Zt[ee]) && (at[ee] = !(St[ee] = qt))
                        }) : function(at, St, Lt) {
                            return U[0] = at, xt(U, null, Lt, Z), U[0] = null, !Z.pop()
                        }
                    }),
                    has: Rn(function(I) {
                        return function(U) {
                            return $e(I, U).length > 0
                        }
                    }),
                    contains: Rn(function(I) {
                        return I = I.replace(qn, jn),
                            function(U) {
                                return (U.textContent || b(U)).indexOf(I) > -1
                            }
                    }),
                    lang: Rn(function(I) {
                        return Fo.test(I || "") || $e.error("unsupported lang: " + I), I = I.replace(qn, jn).toLowerCase(),
                            function(U) {
                                var Z;
                                do
                                    if (Z = ye ? U.lang : U.getAttribute("xml:lang") || U.getAttribute("lang")) return Z = Z.toLowerCase(), Z === I || Z.indexOf(I + "-") === 0; while ((U = U.parentNode) && U.nodeType === 1);
                                return !1
                            }
                    }),
                    target: function(I) {
                        var U = r.location && r.location.hash;
                        return U && U.slice(1) === I.id
                    },
                    root: function(I) {
                        return I === ne
                    },
                    focus: function(I) {
                        return I === wt.activeElement && (!wt.hasFocus || wt.hasFocus()) && !!(I.type || I.href || ~I.tabIndex)
                    },
                    enabled: Is(!1),
                    disabled: Is(!0),
                    checked: function(I) {
                        var U = I.nodeName.toLowerCase();
                        return U === "input" && !!I.checked || U === "option" && !!I.selected
                    },
                    selected: function(I) {
                        return I.parentNode && I.parentNode.selectedIndex, I.selected === !0
                    },
                    empty: function(I) {
                        for (I = I.firstChild; I; I = I.nextSibling)
                            if (I.nodeType < 6) return !1;
                        return !0
                    },
                    parent: function(I) {
                        return !p.pseudos.empty(I)
                    },
                    header: function(I) {
                        return Uo.test(I.nodeName)
                    },
                    input: function(I) {
                        return Ho.test(I.nodeName)
                    },
                    button: function(I) {
                        var U = I.nodeName.toLowerCase();
                        return U === "input" && I.type === "button" || U === "button"
                    },
                    text: function(I) {
                        var U;
                        return I.nodeName.toLowerCase() === "input" && I.type === "text" && ((U = I.getAttribute("type")) == null || U.toLowerCase() === "text")
                    },
                    first: Wn(function() {
                        return [0]
                    }),
                    last: Wn(function(I, U) {
                        return [U - 1]
                    }),
                    eq: Wn(function(I, U, Z) {
                        return [Z < 0 ? Z + U : Z]
                    }),
                    even: Wn(function(I, U) {
                        for (var Z = 0; Z < U; Z += 2) I.push(Z);
                        return I
                    }),
                    odd: Wn(function(I, U) {
                        for (var Z = 1; Z < U; Z += 2) I.push(Z);
                        return I
                    }),
                    lt: Wn(function(I, U, Z) {
                        for (var xt = Z < 0 ? Z + U : Z > U ? U : Z; --xt >= 0;) I.push(xt);
                        return I
                    }),
                    gt: Wn(function(I, U, Z) {
                        for (var xt = Z < 0 ? Z + U : Z; ++xt < U;) I.push(xt);
                        return I
                    })
                }
            }, p.pseudos.nth = p.pseudos.eq;
            for (s in {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                }) p.pseudos[s] = Go(s);
            for (s in {
                    submit: !0,
                    reset: !0
                }) p.pseudos[s] = Xo(s);

            function Ls() {}
            Ls.prototype = p.filters = p.pseudos, p.setFilters = new Ls, T = $e.tokenize = function(I, U) {
                var Z, xt, at, St, Lt, jt, qt, Zt = Di[I + " "];
                if (Zt) return U ? 0 : Zt.slice(0);
                for (Lt = I, jt = [], qt = p.preFilter; Lt;) {
                    (!Z || (xt = Ts.exec(Lt))) && (xt && (Lt = Lt.slice(xt[0].length) || Lt), jt.push(at = [])), Z = !1, (xt = As.exec(Lt)) && (Z = xt.shift(), at.push({
                        value: Z,
                        type: xt[0].replace(Mi, " ")
                    }), Lt = Lt.slice(Z.length));
                    for (St in p.filter)(xt = Ji[St].exec(Lt)) && (!qt[St] || (xt = qt[St](xt))) && (Z = xt.shift(), at.push({
                        value: Z,
                        type: St,
                        matches: xt
                    }), Lt = Lt.slice(Z.length));
                    if (!Z) break
                }
                return U ? Lt.length : Lt ? $e.error(I) : Di(I, jt).slice(0)
            };

            function er(I) {
                for (var U = 0, Z = I.length, xt = ""; U < Z; U++) xt += I[U].value;
                return xt
            }

            function nr(I, U, Z) {
                var xt = U.dir,
                    at = U.next,
                    St = at || xt,
                    Lt = Z && St === "parentNode",
                    jt = Ae++;
                return U.first ? function(qt, Zt, ee) {
                    for (; qt = qt[xt];)
                        if (qt.nodeType === 1 || Lt) return I(qt, Zt, ee);
                    return !1
                } : function(qt, Zt, ee) {
                    var ae, _e, Fe, se = [xn, jt];
                    if (ee) {
                        for (; qt = qt[xt];)
                            if ((qt.nodeType === 1 || Lt) && I(qt, Zt, ee)) return !0
                    } else
                        for (; qt = qt[xt];)
                            if (qt.nodeType === 1 || Lt)
                                if (Fe = qt[Be] || (qt[Be] = {}), _e = Fe[qt.uniqueID] || (Fe[qt.uniqueID] = {}), at && at === qt.nodeName.toLowerCase()) qt = qt[xt] || qt;
                                else {
                                    if ((ae = _e[St]) && ae[0] === xn && ae[1] === jt) return se[2] = ae[2];
                                    if (_e[St] = se, se[2] = I(qt, Zt, ee)) return !0
                                } return !1
                }
            }

            function ir(I) {
                return I.length > 1 ? function(U, Z, xt) {
                    for (var at = I.length; at--;)
                        if (!I[at](U, Z, xt)) return !1;
                    return !0
                } : I[0]
            }

            function Yo(I, U, Z) {
                for (var xt = 0, at = U.length; xt < at; xt++) $e(I, U[xt], Z);
                return Z
            }

            function rr(I, U, Z, xt, at) {
                for (var St, Lt = [], jt = 0, qt = I.length, Zt = U != null; jt < qt; jt++)(St = I[jt]) && (!Z || Z(St, xt, at)) && (Lt.push(St), Zt && U.push(jt));
                return Lt
            }

            function Wr(I, U, Z, xt, at, St) {
                return xt && !xt[Be] && (xt = Wr(xt)), at && !at[Be] && (at = Wr(at, St)), Rn(function(Lt, jt, qt, Zt) {
                    var ee, ae, _e, Fe = [],
                        se = [],
                        ln = jt.length,
                        mn = Lt || Yo(U || "*", qt.nodeType ? [qt] : qt, []),
                        In = I && (Lt || !U) ? rr(mn, Fe, I, qt, Zt) : mn,
                        ze = Z ? at || (Lt ? I : ln || xt) ? [] : jt : In;
                    if (Z && Z(In, ze, qt, Zt), xt)
                        for (ee = rr(ze, se), xt(ee, [], qt, Zt), ae = ee.length; ae--;)(_e = ee[ae]) && (ze[se[ae]] = !(In[se[ae]] = _e));
                    if (Lt) {
                        if (at || I) {
                            if (at) {
                                for (ee = [], ae = ze.length; ae--;)(_e = ze[ae]) && ee.push(In[ae] = _e);
                                at(null, ze = [], ee, Zt)
                            }
                            for (ae = ze.length; ae--;)(_e = ze[ae]) && (ee = at ? di(Lt, _e) : Fe[ae]) > -1 && (Lt[ee] = !(jt[ee] = _e))
                        }
                    } else ze = rr(ze === jt ? ze.splice(ln, ze.length) : ze), at ? at(null, jt, ze, Zt) : Vn.apply(jt, ze)
                })
            }

            function Gr(I) {
                for (var U, Z, xt, at = I.length, St = p.relative[I[0].type], Lt = St || p.relative[" "], jt = St ? 1 : 0, qt = nr(function(ae) {
                        return ae === U
                    }, Lt, !0), Zt = nr(function(ae) {
                        return di(U, ae) > -1
                    }, Lt, !0), ee = [function(ae, _e, Fe) {
                        var se = !St && (Fe || _e !== rt) || ((U = _e).nodeType ? qt(ae, _e, Fe) : Zt(ae, _e, Fe));
                        return U = null, se
                    }]; jt < at; jt++)
                    if (Z = p.relative[I[jt].type]) ee = [nr(ir(ee), Z)];
                    else {
                        if (Z = p.filter[I[jt].type].apply(null, I[jt].matches), Z[Be]) {
                            for (xt = ++jt; xt < at && !p.relative[I[xt].type]; xt++);
                            return Wr(jt > 1 && ir(ee), jt > 1 && er(I.slice(0, jt - 1).concat({
                                value: I[jt - 2].type === " " ? "*" : ""
                            })).replace(Mi, "$1"), Z, jt < xt && Gr(I.slice(jt, xt)), xt < at && Gr(I = I.slice(xt)), xt < at && er(I))
                        }
                        ee.push(Z)
                    } return ir(ee)
            }

            function Ds(I, U) {
                var Z = U.length > 0,
                    xt = I.length > 0,
                    at = function(St, Lt, jt, qt, Zt) {
                        var ee, ae, _e, Fe = 0,
                            se = "0",
                            ln = St && [],
                            mn = [],
                            In = rt,
                            ze = St || xt && p.find.TAG("*", Zt),
                            c = xn += In == null ? 1 : Math.random() || .1,
                            h = ze.length;
                        for (Zt && (rt = Lt == wt || Lt || Zt); se !== h && (ee = ze[se]) != null; se++) {
                            if (xt && ee) {
                                for (ae = 0, !Lt && ee.ownerDocument != wt && (ft(ee), jt = !ye); _e = I[ae++];)
                                    if (_e(ee, Lt || wt, jt)) {
                                        qt.push(ee);
                                        break
                                    } Zt && (xn = c)
                            }
                            Z && ((ee = !_e && ee) && Fe--, St && ln.push(ee))
                        }
                        if (Fe += se, Z && se !== Fe) {
                            for (ae = 0; _e = U[ae++];) _e(ln, mn, Lt, jt);
                            if (St) {
                                if (Fe > 0)
                                    for (; se--;) ln[se] || mn[se] || (mn[se] = Yn.call(qt));
                                mn = rr(mn)
                            }
                            Vn.apply(qt, mn), Zt && !St && mn.length > 0 && Fe + U.length > 1 && $e.uniqueSort(qt)
                        }
                        return Zt && (xn = c, rt = In), ln
                    };
                return Z ? Rn(at) : at
            }
            return q = $e.compile = function(I, U) {
                var Z, xt = [],
                    at = [],
                    St = Ki[I + " "];
                if (!St) {
                    for (U || (U = T(I)), Z = U.length; Z--;) St = Gr(U[Z]), St[Be] ? xt.push(St) : at.push(St);
                    St = Ki(I, Ds(at, xt)), St.selector = I
                }
                return St
            }, W = $e.select = function(I, U, Z, xt) {
                var at, St, Lt, jt, qt, Zt = typeof I == "function" && I,
                    ee = !xt && T(I = Zt.selector || I);
                if (Z = Z || [], ee.length === 1) {
                    if (St = ee[0] = ee[0].slice(0), St.length > 2 && (Lt = St[0]).type === "ID" && U.nodeType === 9 && ye && p.relative[St[1].type]) {
                        if (U = (p.find.ID(Lt.matches[0].replace(qn, jn), U) || [])[0], U) Zt && (U = U.parentNode);
                        else return Z;
                        I = I.slice(St.shift().value.length)
                    }
                    for (at = Ji.needsContext.test(I) ? 0 : St.length; at-- && (Lt = St[at], !p.relative[jt = Lt.type]);)
                        if ((qt = p.find[jt]) && (xt = qt(Lt.matches[0].replace(qn, jn), Hr.test(St[0].type) && qr(U.parentNode) || U))) {
                            if (St.splice(at, 1), I = xt.length && er(St), !I) return Vn.apply(Z, xt), Z;
                            break
                        }
                }
                return (Zt || q(I, ee))(xt, U, !ye, Z, !U || Hr.test(I) && qr(U.parentNode) || U), Z
            }, u.sortStable = Be.split("").sort(ui).join("") === Be, u.detectDuplicates = !!Ot, ft(), u.sortDetached = Pn(function(I) {
                return I.compareDocumentPosition(wt.createElement("fieldset")) & 1
            }), Pn(function(I) {
                return I.innerHTML = "<a href='#'></a>", I.firstChild.getAttribute("href") === "#"
            }) || Zi("type|href|height|width", function(I, U, Z) {
                if (!Z) return I.getAttribute(U, U.toLowerCase() === "type" ? 1 : 2)
            }), (!u.attributes || !Pn(function(I) {
                return I.innerHTML = "<input/>", I.firstChild.setAttribute("value", ""), I.firstChild.getAttribute("value") === ""
            })) && Zi("value", function(I, U, Z) {
                if (!Z && I.nodeName.toLowerCase() === "input") return I.defaultValue
            }), Pn(function(I) {
                return I.getAttribute("disabled") == null
            }) || Zi(Fr, function(I, U, Z) {
                var xt;
                if (!Z) return I[U] === !0 ? U.toLowerCase() : (xt = I.getAttributeNode(U)) && xt.specified ? xt.value : null
            }), $e
        }(t);
        d.find = Vt, d.expr = Vt.selectors, d.expr[":"] = d.expr.pseudos, d.uniqueSort = d.unique = Vt.uniqueSort, d.text = Vt.getText, d.isXMLDoc = Vt.isXML, d.contains = Vt.contains, d.escapeSelector = Vt.escape;
        var Pt = function(r, s, u) {
                for (var p = [], b = u !== void 0;
                    (r = r[s]) && r.nodeType !== 9;)
                    if (r.nodeType === 1) {
                        if (b && d(r).is(u)) break;
                        p.push(r)
                    } return p
            },
            Ce = function(r, s) {
                for (var u = []; r; r = r.nextSibling) r.nodeType === 1 && r !== s && u.push(r);
                return u
            },
            Xt = d.expr.match.needsContext;

        function et(r, s) {
            return r.nodeName && r.nodeName.toLowerCase() === s.toLowerCase()
        }
        var Jt = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

        function G(r, s, u) {
            return ot(s) ? d.grep(r, function(p, b) {
                return !!s.call(p, b, p) !== u
            }) : s.nodeType ? d.grep(r, function(p) {
                return p === s !== u
            }) : typeof s != "string" ? d.grep(r, function(p) {
                return k.call(s, p) > -1 !== u
            }) : d.filter(s, r, u)
        }
        d.filter = function(r, s, u) {
            var p = s[0];
            return u && (r = ":not(" + r + ")"), s.length === 1 && p.nodeType === 1 ? d.find.matchesSelector(p, r) ? [p] : [] : d.find.matches(r, d.grep(s, function(b) {
                return b.nodeType === 1
            }))
        }, d.fn.extend({
            find: function(r) {
                var s, u, p = this.length,
                    b = this;
                if (typeof r != "string") return this.pushStack(d(r).filter(function() {
                    for (s = 0; s < p; s++)
                        if (d.contains(b[s], this)) return !0
                }));
                for (u = this.pushStack([]), s = 0; s < p; s++) d.find(r, b[s], u);
                return p > 1 ? d.uniqueSort(u) : u
            },
            filter: function(r) {
                return this.pushStack(G(this, r || [], !1))
            },
            not: function(r) {
                return this.pushStack(G(this, r || [], !0))
            },
            is: function(r) {
                return !!G(this, typeof r == "string" && Xt.test(r) ? d(r) : r || [], !1).length
            }
        });
        var pt, $t = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
            At = d.fn.init = function(r, s, u) {
                var p, b;
                if (!r) return this;
                if (u = u || pt, typeof r == "string")
                    if (r[0] === "<" && r[r.length - 1] === ">" && r.length >= 3 ? p = [null, r, null] : p = $t.exec(r), p && (p[1] || !s))
                        if (p[1]) {
                            if (s = s instanceof d ? s[0] : s, d.merge(this, d.parseHTML(p[1], s && s.nodeType ? s.ownerDocument || s : L, !0)), Jt.test(p[1]) && d.isPlainObject(s))
                                for (p in s) ot(this[p]) ? this[p](s[p]) : this.attr(p, s[p]);
                            return this
                        } else return b = L.getElementById(p[2]), b && (this[0] = b, this.length = 1), this;
                else return !s || s.jquery ? (s || u).find(r) : this.constructor(s).find(r);
                else {
                    if (r.nodeType) return this[0] = r, this.length = 1, this;
                    if (ot(r)) return u.ready !== void 0 ? u.ready(r) : r(d)
                }
                return d.makeArray(r, this)
            };
        At.prototype = d.fn, pt = d(L);
        var Tt = /^(?:parents|prev(?:Until|All))/,
            vt = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
        d.fn.extend({
            has: function(r) {
                var s = d(r, this),
                    u = s.length;
                return this.filter(function() {
                    for (var p = 0; p < u; p++)
                        if (d.contains(this, s[p])) return !0
                })
            },
            closest: function(r, s) {
                var u, p = 0,
                    b = this.length,
                    _ = [],
                    T = typeof r != "string" && d(r);
                if (!Xt.test(r)) {
                    for (; p < b; p++)
                        for (u = this[p]; u && u !== s; u = u.parentNode)
                            if (u.nodeType < 11 && (T ? T.index(u) > -1 : u.nodeType === 1 && d.find.matchesSelector(u, r))) {
                                _.push(u);
                                break
                            }
                }
                return this.pushStack(_.length > 1 ? d.uniqueSort(_) : _)
            },
            index: function(r) {
                return r ? typeof r == "string" ? k.call(d(r), this[0]) : k.call(this, r.jquery ? r[0] : r) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function(r, s) {
                return this.pushStack(d.uniqueSort(d.merge(this.get(), d(r, s))))
            },
            addBack: function(r) {
                return this.add(r == null ? this.prevObject : this.prevObject.filter(r))
            }
        });

        function Dt(r, s) {
            for (;
                (r = r[s]) && r.nodeType !== 1;);
            return r
        }
        d.each({
            parent: function(r) {
                var s = r.parentNode;
                return s && s.nodeType !== 11 ? s : null
            },
            parents: function(r) {
                return Pt(r, "parentNode")
            },
            parentsUntil: function(r, s, u) {
                return Pt(r, "parentNode", u)
            },
            next: function(r) {
                return Dt(r, "nextSibling")
            },
            prev: function(r) {
                return Dt(r, "previousSibling")
            },
            nextAll: function(r) {
                return Pt(r, "nextSibling")
            },
            prevAll: function(r) {
                return Pt(r, "previousSibling")
            },
            nextUntil: function(r, s, u) {
                return Pt(r, "nextSibling", u)
            },
            prevUntil: function(r, s, u) {
                return Pt(r, "previousSibling", u)
            },
            siblings: function(r) {
                return Ce((r.parentNode || {}).firstChild, r)
            },
            children: function(r) {
                return Ce(r.firstChild)
            },
            contents: function(r) {
                return r.contentDocument != null && o(r.contentDocument) ? r.contentDocument : (et(r, "template") && (r = r.content || r), d.merge([], r.childNodes))
            }
        }, function(r, s) {
            d.fn[r] = function(u, p) {
                var b = d.map(this, s, u);
                return r.slice(-5) !== "Until" && (p = u), p && typeof p == "string" && (b = d.filter(p, b)), this.length > 1 && (vt[r] || d.uniqueSort(b), Tt.test(r) && b.reverse()), this.pushStack(b)
            }
        });
        var Nt = /[^\x20\t\r\n\f]+/g;

        function Kt(r) {
            var s = {};
            return d.each(r.match(Nt) || [], function(u, p) {
                s[p] = !0
            }), s
        }
        d.Callbacks = function(r) {
            r = typeof r == "string" ? Kt(r) : d.extend({}, r);
            var s, u, p, b, _ = [],
                T = [],
                q = -1,
                W = function() {
                    for (b = b || r.once, p = s = !0; T.length; q = -1)
                        for (u = T.shift(); ++q < _.length;) _[q].apply(u[0], u[1]) === !1 && r.stopOnFalse && (q = _.length, u = !1);
                    r.memory || (u = !1), s = !1, b && (u ? _ = [] : _ = "")
                },
                rt = {
                    add: function() {
                        return _ && (u && !s && (q = _.length - 1, T.push(u)), function gt(Ot) {
                            d.each(Ot, function(ft, wt) {
                                ot(wt) ? (!r.unique || !rt.has(wt)) && _.push(wt) : wt && wt.length && ht(wt) !== "string" && gt(wt)
                            })
                        }(arguments), u && !s && W()), this
                    },
                    remove: function() {
                        return d.each(arguments, function(gt, Ot) {
                            for (var ft;
                                (ft = d.inArray(Ot, _, ft)) > -1;) _.splice(ft, 1), ft <= q && q--
                        }), this
                    },
                    has: function(gt) {
                        return gt ? d.inArray(gt, _) > -1 : _.length > 0
                    },
                    empty: function() {
                        return _ && (_ = []), this
                    },
                    disable: function() {
                        return b = T = [], _ = u = "", this
                    },
                    disabled: function() {
                        return !_
                    },
                    lock: function() {
                        return b = T = [], !u && !s && (_ = u = ""), this
                    },
                    locked: function() {
                        return !!b
                    },
                    fireWith: function(gt, Ot) {
                        return b || (Ot = Ot || [], Ot = [gt, Ot.slice ? Ot.slice() : Ot], T.push(Ot), s || W()), this
                    },
                    fire: function() {
                        return rt.fireWith(this, arguments), this
                    },
                    fired: function() {
                        return !!p
                    }
                };
            return rt
        };

        function le(r) {
            return r
        }

        function Ee(r) {
            throw r
        }

        function Ye(r, s, u, p) {
            var b;
            try {
                r && ot(b = r.promise) ? b.call(r).done(s).fail(u) : r && ot(b = r.then) ? b.call(r, s, u) : s.apply(void 0, [r].slice(p))
            } catch (_) {
                u.apply(void 0, [_])
            }
        }
        d.extend({
            Deferred: function(r) {
                var s = [
                        ["notify", "progress", d.Callbacks("memory"), d.Callbacks("memory"), 2],
                        ["resolve", "done", d.Callbacks("once memory"), d.Callbacks("once memory"), 0, "resolved"],
                        ["reject", "fail", d.Callbacks("once memory"), d.Callbacks("once memory"), 1, "rejected"]
                    ],
                    u = "pending",
                    p = {
                        state: function() {
                            return u
                        },
                        always: function() {
                            return b.done(arguments).fail(arguments), this
                        },
                        catch: function(_) {
                            return p.then(null, _)
                        },
                        pipe: function() {
                            var _ = arguments;
                            return d.Deferred(function(T) {
                                d.each(s, function(q, W) {
                                    var rt = ot(_[W[4]]) && _[W[4]];
                                    b[W[1]](function() {
                                        var gt = rt && rt.apply(this, arguments);
                                        gt && ot(gt.promise) ? gt.promise().progress(T.notify).done(T.resolve).fail(T.reject) : T[W[0] + "With"](this, rt ? [gt] : arguments)
                                    })
                                }), _ = null
                            }).promise()
                        },
                        then: function(_, T, q) {
                            var W = 0;

                            function rt(gt, Ot, ft, wt) {
                                return function() {
                                    var ne = this,
                                        ye = arguments,
                                        Qt = function() {
                                            var tn, An;
                                            if (!(gt < W)) {
                                                if (tn = ft.apply(ne, ye), tn === Ot.promise()) throw new TypeError("Thenable self-resolution");
                                                An = tn && (typeof tn == "object" || typeof tn == "function") && tn.then, ot(An) ? wt ? An.call(tn, rt(W, Ot, le, wt), rt(W, Ot, Ee, wt)) : (W++, An.call(tn, rt(W, Ot, le, wt), rt(W, Ot, Ee, wt), rt(W, Ot, le, Ot.notifyWith))) : (ft !== le && (ne = void 0, ye = [tn]), (wt || Ot.resolveWith)(ne, ye))
                                            }
                                        },
                                        an = wt ? Qt : function() {
                                            try {
                                                Qt()
                                            } catch (tn) {
                                                d.Deferred.exceptionHook && d.Deferred.exceptionHook(tn, an.stackTrace), gt + 1 >= W && (ft !== Ee && (ne = void 0, ye = [tn]), Ot.rejectWith(ne, ye))
                                            }
                                        };
                                    gt ? an() : (d.Deferred.getStackHook && (an.stackTrace = d.Deferred.getStackHook()), t.setTimeout(an))
                                }
                            }
                            return d.Deferred(function(gt) {
                                s[0][3].add(rt(0, gt, ot(q) ? q : le, gt.notifyWith)), s[1][3].add(rt(0, gt, ot(_) ? _ : le)), s[2][3].add(rt(0, gt, ot(T) ? T : Ee))
                            }).promise()
                        },
                        promise: function(_) {
                            return _ != null ? d.extend(_, p) : p
                        }
                    },
                    b = {};
                return d.each(s, function(_, T) {
                    var q = T[2],
                        W = T[5];
                    p[T[1]] = q.add, W && q.add(function() {
                        u = W
                    }, s[3 - _][2].disable, s[3 - _][3].disable, s[0][2].lock, s[0][3].lock), q.add(T[3].fire), b[T[0]] = function() {
                        return b[T[0] + "With"](this === b ? void 0 : this, arguments), this
                    }, b[T[0] + "With"] = q.fireWith
                }), p.promise(b), r && r.call(b, b), b
            },
            when: function(r) {
                var s = arguments.length,
                    u = s,
                    p = Array(u),
                    b = f.call(arguments),
                    _ = d.Deferred(),
                    T = function(q) {
                        return function(W) {
                            p[q] = this, b[q] = arguments.length > 1 ? f.call(arguments) : W, --s || _.resolveWith(p, b)
                        }
                    };
                if (s <= 1 && (Ye(r, _.done(T(u)).resolve, _.reject, !s), _.state() === "pending" || ot(b[u] && b[u].then))) return _.then();
                for (; u--;) Ye(b[u], T(u), _.reject);
                return _.promise()
            }
        });
        var nn = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        d.Deferred.exceptionHook = function(r, s) {
            t.console && t.console.warn && r && nn.test(r.name) && t.console.warn("jQuery.Deferred exception: " + r.message, r.stack, s)
        }, d.readyException = function(r) {
            t.setTimeout(function() {
                throw r
            })
        };
        var E = d.Deferred();
        d.fn.ready = function(r) {
            return E.then(r).catch(function(s) {
                d.readyException(s)
            }), this
        }, d.extend({
            isReady: !1,
            readyWait: 1,
            ready: function(r) {
                (r === !0 ? --d.readyWait : d.isReady) || (d.isReady = !0, !(r !== !0 && --d.readyWait > 0) && E.resolveWith(L, [d]))
            }
        }), d.ready.then = E.then;

        function l() {
            L.removeEventListener("DOMContentLoaded", l), t.removeEventListener("load", l), d.ready()
        }
        L.readyState === "complete" || L.readyState !== "loading" && !L.documentElement.doScroll ? t.setTimeout(d.ready) : (L.addEventListener("DOMContentLoaded", l), t.addEventListener("load", l));
        var g = function(r, s, u, p, b, _, T) {
                var q = 0,
                    W = r.length,
                    rt = u == null;
                if (ht(u) === "object") {
                    b = !0;
                    for (q in u) g(r, s, q, u[q], !0, _, T)
                } else if (p !== void 0 && (b = !0, ot(p) || (T = !0), rt && (T ? (s.call(r, p), s = null) : (rt = s, s = function(gt, Ot, ft) {
                        return rt.call(d(gt), ft)
                    })), s))
                    for (; q < W; q++) s(r[q], u, T ? p : p.call(r[q], q, s(r[q], u)));
                return b ? r : rt ? s.call(r) : W ? s(r[0], u) : _
            },
            S = /^-ms-/,
            R = /-([a-z])/g;

        function P(r, s) {
            return s.toUpperCase()
        }

        function j(r) {
            return r.replace(S, "ms-").replace(R, P)
        }
        var ct = function(r) {
            return r.nodeType === 1 || r.nodeType === 9 || !+r.nodeType
        };

        function Mt() {
            this.expando = d.expando + Mt.uid++
        }
        Mt.uid = 1, Mt.prototype = {
            cache: function(r) {
                var s = r[this.expando];
                return s || (s = {}, ct(r) && (r.nodeType ? r[this.expando] = s : Object.defineProperty(r, this.expando, {
                    value: s,
                    configurable: !0
                }))), s
            },
            set: function(r, s, u) {
                var p, b = this.cache(r);
                if (typeof s == "string") b[j(s)] = u;
                else
                    for (p in s) b[j(p)] = s[p];
                return b
            },
            get: function(r, s) {
                return s === void 0 ? this.cache(r) : r[this.expando] && r[this.expando][j(s)]
            },
            access: function(r, s, u) {
                return s === void 0 || s && typeof s == "string" && u === void 0 ? this.get(r, s) : (this.set(r, s, u), u !== void 0 ? u : s)
            },
            remove: function(r, s) {
                var u, p = r[this.expando];
                if (p !== void 0) {
                    if (s !== void 0)
                        for (Array.isArray(s) ? s = s.map(j) : (s = j(s), s = s in p ? [s] : s.match(Nt) || []), u = s.length; u--;) delete p[s[u]];
                    (s === void 0 || d.isEmptyObject(p)) && (r.nodeType ? r[this.expando] = void 0 : delete r[this.expando])
                }
            },
            hasData: function(r) {
                var s = r[this.expando];
                return s !== void 0 && !d.isEmptyObject(s)
            }
        };
        var yt = new Mt,
            Ft = new Mt,
            Ht = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
            fe = /[A-Z]/g;

        function Le(r) {
            return r === "true" ? !0 : r === "false" ? !1 : r === "null" ? null : r === +r + "" ? +r : Ht.test(r) ? JSON.parse(r) : r
        }

        function hn(r, s, u) {
            var p;
            if (u === void 0 && r.nodeType === 1)
                if (p = "data-" + s.replace(fe, "-$&").toLowerCase(), u = r.getAttribute(p), typeof u == "string") {
                    try {
                        u = Le(u)
                    } catch {}
                    Ft.set(r, s, u)
                } else u = void 0;
            return u
        }
        d.extend({
            hasData: function(r) {
                return Ft.hasData(r) || yt.hasData(r)
            },
            data: function(r, s, u) {
                return Ft.access(r, s, u)
            },
            removeData: function(r, s) {
                Ft.remove(r, s)
            },
            _data: function(r, s, u) {
                return yt.access(r, s, u)
            },
            _removeData: function(r, s) {
                yt.remove(r, s)
            }
        }), d.fn.extend({
            data: function(r, s) {
                var u, p, b, _ = this[0],
                    T = _ && _.attributes;
                if (r === void 0) {
                    if (this.length && (b = Ft.get(_), _.nodeType === 1 && !yt.get(_, "hasDataAttrs"))) {
                        for (u = T.length; u--;) T[u] && (p = T[u].name, p.indexOf("data-") === 0 && (p = j(p.slice(5)), hn(_, p, b[p])));
                        yt.set(_, "hasDataAttrs", !0)
                    }
                    return b
                }
                return typeof r == "object" ? this.each(function() {
                    Ft.set(this, r)
                }) : g(this, function(q) {
                    var W;
                    if (_ && q === void 0) return W = Ft.get(_, r), W !== void 0 || (W = hn(_, r), W !== void 0) ? W : void 0;
                    this.each(function() {
                        Ft.set(this, r, q)
                    })
                }, null, s, arguments.length > 1, null, !0)
            },
            removeData: function(r) {
                return this.each(function() {
                    Ft.remove(this, r)
                })
            }
        }), d.extend({
            queue: function(r, s, u) {
                var p;
                if (r) return s = (s || "fx") + "queue", p = yt.get(r, s), u && (!p || Array.isArray(u) ? p = yt.access(r, s, d.makeArray(u)) : p.push(u)), p || []
            },
            dequeue: function(r, s) {
                s = s || "fx";
                var u = d.queue(r, s),
                    p = u.length,
                    b = u.shift(),
                    _ = d._queueHooks(r, s),
                    T = function() {
                        d.dequeue(r, s)
                    };
                b === "inprogress" && (b = u.shift(), p--), b && (s === "fx" && u.unshift("inprogress"), delete _.stop, b.call(r, T, _)), !p && _ && _.empty.fire()
            },
            _queueHooks: function(r, s) {
                var u = s + "queueHooks";
                return yt.get(r, u) || yt.access(r, u, {
                    empty: d.Callbacks("once memory").add(function() {
                        yt.remove(r, [s + "queue", u])
                    })
                })
            }
        }), d.fn.extend({
            queue: function(r, s) {
                var u = 2;
                return typeof r != "string" && (s = r, r = "fx", u--), arguments.length < u ? d.queue(this[0], r) : s === void 0 ? this : this.each(function() {
                    var p = d.queue(this, r, s);
                    d._queueHooks(this, r), r === "fx" && p[0] !== "inprogress" && d.dequeue(this, r)
                })
            },
            dequeue: function(r) {
                return this.each(function() {
                    d.dequeue(this, r)
                })
            },
            clearQueue: function(r) {
                return this.queue(r || "fx", [])
            },
            promise: function(r, s) {
                var u, p = 1,
                    b = d.Deferred(),
                    _ = this,
                    T = this.length,
                    q = function() {
                        --p || b.resolveWith(_, [_])
                    };
                for (typeof r != "string" && (s = r, r = void 0), r = r || "fx"; T--;) u = yt.get(_[T], r + "queueHooks"), u && u.empty && (p++, u.empty.add(q));
                return q(), b.promise(s)
            }
        });
        var be = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
            ke = new RegExp("^(?:([+-])=|)(" + be + ")([a-z%]*)$", "i"),
            Te = ["Top", "Right", "Bottom", "Left"],
            sn = L.documentElement,
            oe = function(r) {
                return d.contains(r.ownerDocument, r)
            },
            Ue = {
                composed: !0
            };
        sn.getRootNode && (oe = function(r) {
            return d.contains(r.ownerDocument, r) || r.getRootNode(Ue) === r.ownerDocument
        });
        var H = function(r, s) {
            return r = s || r, r.style.display === "none" || r.style.display === "" && oe(r) && d.css(r, "display") === "none"
        };

        function N(r, s, u, p) {
            var b, _, T = 20,
                q = p ? function() {
                    return p.cur()
                } : function() {
                    return d.css(r, s, "")
                },
                W = q(),
                rt = u && u[3] || (d.cssNumber[s] ? "" : "px"),
                gt = r.nodeType && (d.cssNumber[s] || rt !== "px" && +W) && ke.exec(d.css(r, s));
            if (gt && gt[3] !== rt) {
                for (W = W / 2, rt = rt || gt[3], gt = +W || 1; T--;) d.style(r, s, gt + rt), (1 - _) * (1 - (_ = q() / W || .5)) <= 0 && (T = 0), gt = gt / _;
                gt = gt * 2, d.style(r, s, gt + rt), u = u || []
            }
            return u && (gt = +gt || +W || 0, b = u[1] ? gt + (u[1] + 1) * u[2] : +u[2], p && (p.unit = rt, p.start = gt, p.end = b)), b
        }
        var J = {};

        function M(r) {
            var s, u = r.ownerDocument,
                p = r.nodeName,
                b = J[p];
            return b || (s = u.body.appendChild(u.createElement(p)), b = d.css(s, "display"), s.parentNode.removeChild(s), b === "none" && (b = "block"), J[p] = b, b)
        }

        function Y(r, s) {
            for (var u, p, b = [], _ = 0, T = r.length; _ < T; _++) p = r[_], p.style && (u = p.style.display, s ? (u === "none" && (b[_] = yt.get(p, "display") || null, b[_] || (p.style.display = "")), p.style.display === "" && H(p) && (b[_] = M(p))) : u !== "none" && (b[_] = "none", yt.set(p, "display", u)));
            for (_ = 0; _ < T; _++) b[_] != null && (r[_].style.display = b[_]);
            return r
        }
        d.fn.extend({
            show: function() {
                return Y(this, !0)
            },
            hide: function() {
                return Y(this)
            },
            toggle: function(r) {
                return typeof r == "boolean" ? r ? this.show() : this.hide() : this.each(function() {
                    H(this) ? d(this).show() : d(this).hide()
                })
            }
        });
        var Ct = /^(?:checkbox|radio)$/i,
            Et = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
            Wt = /^$|^module$|\/(?:java|ecma)script/i;
        (function() {
            var r = L.createDocumentFragment(),
                s = r.appendChild(L.createElement("div")),
                u = L.createElement("input");
            u.setAttribute("type", "radio"), u.setAttribute("checked", "checked"), u.setAttribute("name", "t"), s.appendChild(u), V.checkClone = s.cloneNode(!0).cloneNode(!0).lastChild.checked, s.innerHTML = "<textarea>x</textarea>", V.noCloneChecked = !!s.cloneNode(!0).lastChild.defaultValue, s.innerHTML = "<option></option>", V.option = !!s.lastChild
        })();
        var Yt = {
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
        Yt.tbody = Yt.tfoot = Yt.colgroup = Yt.caption = Yt.thead, Yt.th = Yt.td, V.option || (Yt.optgroup = Yt.option = [1, "<select multiple='multiple'>", "</select>"]);

        function Se(r, s) {
            var u;
            return typeof r.getElementsByTagName < "u" ? u = r.getElementsByTagName(s || "*") : typeof r.querySelectorAll < "u" ? u = r.querySelectorAll(s || "*") : u = [], s === void 0 || s && et(r, s) ? d.merge([r], u) : u
        }

        function Ke(r, s) {
            for (var u = 0, p = r.length; u < p; u++) yt.set(r[u], "globalEval", !s || yt.get(s[u], "globalEval"))
        }
        var re = /<|&#?\w+;/;

        function Bn(r, s, u, p, b) {
            for (var _, T, q, W, rt, gt, Ot = s.createDocumentFragment(), ft = [], wt = 0, ne = r.length; wt < ne; wt++)
                if (_ = r[wt], _ || _ === 0)
                    if (ht(_) === "object") d.merge(ft, _.nodeType ? [_] : _);
                    else if (!re.test(_)) ft.push(s.createTextNode(_));
            else {
                for (T = T || Ot.appendChild(s.createElement("div")), q = (Et.exec(_) || ["", ""])[1].toLowerCase(), W = Yt[q] || Yt._default, T.innerHTML = W[1] + d.htmlPrefilter(_) + W[2], gt = W[0]; gt--;) T = T.lastChild;
                d.merge(ft, T.childNodes), T = Ot.firstChild, T.textContent = ""
            }
            for (Ot.textContent = "", wt = 0; _ = ft[wt++];) {
                if (p && d.inArray(_, p) > -1) {
                    b && b.push(_);
                    continue
                }
                if (rt = oe(_), T = Se(Ot.appendChild(_), "script"), rt && Ke(T), u)
                    for (gt = 0; _ = T[gt++];) Wt.test(_.type || "") && u.push(_)
            }
            return Ot
        }
        var Un = /^([^.]*)(?:\.(.+)|)/;

        function B() {
            return !0
        }

        function F() {
            return !1
        }

        function Q(r, s) {
            return r === K() == (s === "focus")
        }

        function K() {
            try {
                return L.activeElement
            } catch {}
        }

        function dt(r, s, u, p, b, _) {
            var T, q;
            if (typeof s == "object") {
                typeof u != "string" && (p = p || u, u = void 0);
                for (q in s) dt(r, q, u, p, s[q], _);
                return r
            }
            if (p == null && b == null ? (b = u, p = u = void 0) : b == null && (typeof u == "string" ? (b = p, p = void 0) : (b = p, p = u, u = void 0)), b === !1) b = F;
            else if (!b) return r;
            return _ === 1 && (T = b, b = function(W) {
                return d().off(W), T.apply(this, arguments)
            }, b.guid = T.guid || (T.guid = d.guid++)), r.each(function() {
                d.event.add(this, s, b, p, u)
            })
        }
        d.event = {
            global: {},
            add: function(r, s, u, p, b) {
                var _, T, q, W, rt, gt, Ot, ft, wt, ne, ye, Qt = yt.get(r);
                if (!!ct(r))
                    for (u.handler && (_ = u, u = _.handler, b = _.selector), b && d.find.matchesSelector(sn, b), u.guid || (u.guid = d.guid++), (W = Qt.events) || (W = Qt.events = Object.create(null)), (T = Qt.handle) || (T = Qt.handle = function(an) {
                            return typeof d < "u" && d.event.triggered !== an.type ? d.event.dispatch.apply(r, arguments) : void 0
                        }), s = (s || "").match(Nt) || [""], rt = s.length; rt--;) q = Un.exec(s[rt]) || [], wt = ye = q[1], ne = (q[2] || "").split(".").sort(), wt && (Ot = d.event.special[wt] || {}, wt = (b ? Ot.delegateType : Ot.bindType) || wt, Ot = d.event.special[wt] || {}, gt = d.extend({
                        type: wt,
                        origType: ye,
                        data: p,
                        handler: u,
                        guid: u.guid,
                        selector: b,
                        needsContext: b && d.expr.match.needsContext.test(b),
                        namespace: ne.join(".")
                    }, _), (ft = W[wt]) || (ft = W[wt] = [], ft.delegateCount = 0, (!Ot.setup || Ot.setup.call(r, p, ne, T) === !1) && r.addEventListener && r.addEventListener(wt, T)), Ot.add && (Ot.add.call(r, gt), gt.handler.guid || (gt.handler.guid = u.guid)), b ? ft.splice(ft.delegateCount++, 0, gt) : ft.push(gt), d.event.global[wt] = !0)
            },
            remove: function(r, s, u, p, b) {
                var _, T, q, W, rt, gt, Ot, ft, wt, ne, ye, Qt = yt.hasData(r) && yt.get(r);
                if (!(!Qt || !(W = Qt.events))) {
                    for (s = (s || "").match(Nt) || [""], rt = s.length; rt--;) {
                        if (q = Un.exec(s[rt]) || [], wt = ye = q[1], ne = (q[2] || "").split(".").sort(), !wt) {
                            for (wt in W) d.event.remove(r, wt + s[rt], u, p, !0);
                            continue
                        }
                        for (Ot = d.event.special[wt] || {}, wt = (p ? Ot.delegateType : Ot.bindType) || wt, ft = W[wt] || [], q = q[2] && new RegExp("(^|\\.)" + ne.join("\\.(?:.*\\.|)") + "(\\.|$)"), T = _ = ft.length; _--;) gt = ft[_], (b || ye === gt.origType) && (!u || u.guid === gt.guid) && (!q || q.test(gt.namespace)) && (!p || p === gt.selector || p === "**" && gt.selector) && (ft.splice(_, 1), gt.selector && ft.delegateCount--, Ot.remove && Ot.remove.call(r, gt));
                        T && !ft.length && ((!Ot.teardown || Ot.teardown.call(r, ne, Qt.handle) === !1) && d.removeEvent(r, wt, Qt.handle), delete W[wt])
                    }
                    d.isEmptyObject(W) && yt.remove(r, "handle events")
                }
            },
            dispatch: function(r) {
                var s, u, p, b, _, T, q = new Array(arguments.length),
                    W = d.event.fix(r),
                    rt = (yt.get(this, "events") || Object.create(null))[W.type] || [],
                    gt = d.event.special[W.type] || {};
                for (q[0] = W, s = 1; s < arguments.length; s++) q[s] = arguments[s];
                if (W.delegateTarget = this, !(gt.preDispatch && gt.preDispatch.call(this, W) === !1)) {
                    for (T = d.event.handlers.call(this, W, rt), s = 0;
                        (b = T[s++]) && !W.isPropagationStopped();)
                        for (W.currentTarget = b.elem, u = 0;
                            (_ = b.handlers[u++]) && !W.isImmediatePropagationStopped();)(!W.rnamespace || _.namespace === !1 || W.rnamespace.test(_.namespace)) && (W.handleObj = _, W.data = _.data, p = ((d.event.special[_.origType] || {}).handle || _.handler).apply(b.elem, q), p !== void 0 && (W.result = p) === !1 && (W.preventDefault(), W.stopPropagation()));
                    return gt.postDispatch && gt.postDispatch.call(this, W), W.result
                }
            },
            handlers: function(r, s) {
                var u, p, b, _, T, q = [],
                    W = s.delegateCount,
                    rt = r.target;
                if (W && rt.nodeType && !(r.type === "click" && r.button >= 1)) {
                    for (; rt !== this; rt = rt.parentNode || this)
                        if (rt.nodeType === 1 && !(r.type === "click" && rt.disabled === !0)) {
                            for (_ = [], T = {}, u = 0; u < W; u++) p = s[u], b = p.selector + " ", T[b] === void 0 && (T[b] = p.needsContext ? d(b, this).index(rt) > -1 : d.find(b, this, null, [rt]).length), T[b] && _.push(p);
                            _.length && q.push({
                                elem: rt,
                                handlers: _
                            })
                        }
                }
                return rt = this, W < s.length && q.push({
                    elem: rt,
                    handlers: s.slice(W)
                }), q
            },
            addProp: function(r, s) {
                Object.defineProperty(d.Event.prototype, r, {
                    enumerable: !0,
                    configurable: !0,
                    get: ot(s) ? function() {
                        if (this.originalEvent) return s(this.originalEvent)
                    } : function() {
                        if (this.originalEvent) return this.originalEvent[r]
                    },
                    set: function(u) {
                        Object.defineProperty(this, r, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: u
                        })
                    }
                })
            },
            fix: function(r) {
                return r[d.expando] ? r : new d.Event(r)
            },
            special: {
                load: {
                    noBubble: !0
                },
                click: {
                    setup: function(r) {
                        var s = this || r;
                        return Ct.test(s.type) && s.click && et(s, "input") && nt(s, "click", B), !1
                    },
                    trigger: function(r) {
                        var s = this || r;
                        return Ct.test(s.type) && s.click && et(s, "input") && nt(s, "click"), !0
                    },
                    _default: function(r) {
                        var s = r.target;
                        return Ct.test(s.type) && s.click && et(s, "input") && yt.get(s, "click") || et(s, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function(r) {
                        r.result !== void 0 && r.originalEvent && (r.originalEvent.returnValue = r.result)
                    }
                }
            }
        };

        function nt(r, s, u) {
            if (!u) {
                yt.get(r, s) === void 0 && d.event.add(r, s, B);
                return
            }
            yt.set(r, s, !1), d.event.add(r, s, {
                namespace: !1,
                handler: function(p) {
                    var b, _, T = yt.get(this, s);
                    if (p.isTrigger & 1 && this[s]) {
                        if (T.length)(d.event.special[s] || {}).delegateType && p.stopPropagation();
                        else if (T = f.call(arguments), yt.set(this, s, T), b = u(this, s), this[s](), _ = yt.get(this, s), T !== _ || b ? yt.set(this, s, !1) : _ = {}, T !== _) return p.stopImmediatePropagation(), p.preventDefault(), _ && _.value
                    } else T.length && (yt.set(this, s, {
                        value: d.event.trigger(d.extend(T[0], d.Event.prototype), T.slice(1), this)
                    }), p.stopImmediatePropagation())
                }
            })
        }
        d.removeEvent = function(r, s, u) {
            r.removeEventListener && r.removeEventListener(s, u)
        }, d.Event = function(r, s) {
            if (!(this instanceof d.Event)) return new d.Event(r, s);
            r && r.type ? (this.originalEvent = r, this.type = r.type, this.isDefaultPrevented = r.defaultPrevented || r.defaultPrevented === void 0 && r.returnValue === !1 ? B : F, this.target = r.target && r.target.nodeType === 3 ? r.target.parentNode : r.target, this.currentTarget = r.currentTarget, this.relatedTarget = r.relatedTarget) : this.type = r, s && d.extend(this, s), this.timeStamp = r && r.timeStamp || Date.now(), this[d.expando] = !0
        }, d.Event.prototype = {
            constructor: d.Event,
            isDefaultPrevented: F,
            isPropagationStopped: F,
            isImmediatePropagationStopped: F,
            isSimulated: !1,
            preventDefault: function() {
                var r = this.originalEvent;
                this.isDefaultPrevented = B, r && !this.isSimulated && r.preventDefault()
            },
            stopPropagation: function() {
                var r = this.originalEvent;
                this.isPropagationStopped = B, r && !this.isSimulated && r.stopPropagation()
            },
            stopImmediatePropagation: function() {
                var r = this.originalEvent;
                this.isImmediatePropagationStopped = B, r && !this.isSimulated && r.stopImmediatePropagation(), this.stopPropagation()
            }
        }, d.each({
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            code: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: !0
        }, d.event.addProp), d.each({
            focus: "focusin",
            blur: "focusout"
        }, function(r, s) {
            d.event.special[r] = {
                setup: function() {
                    return nt(this, r, Q), !1
                },
                trigger: function() {
                    return nt(this, r), !0
                },
                _default: function() {
                    return !0
                },
                delegateType: s
            }
        }), d.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function(r, s) {
            d.event.special[r] = {
                delegateType: s,
                bindType: s,
                handle: function(u) {
                    var p, b = this,
                        _ = u.relatedTarget,
                        T = u.handleObj;
                    return (!_ || _ !== b && !d.contains(b, _)) && (u.type = T.origType, p = T.handler.apply(this, arguments), u.type = s), p
                }
            }
        }), d.fn.extend({
            on: function(r, s, u, p) {
                return dt(this, r, s, u, p)
            },
            one: function(r, s, u, p) {
                return dt(this, r, s, u, p, 1)
            },
            off: function(r, s, u) {
                var p, b;
                if (r && r.preventDefault && r.handleObj) return p = r.handleObj, d(r.delegateTarget).off(p.namespace ? p.origType + "." + p.namespace : p.origType, p.selector, p.handler), this;
                if (typeof r == "object") {
                    for (b in r) this.off(b, s, r[b]);
                    return this
                }
                return (s === !1 || typeof s == "function") && (u = s, s = void 0), u === !1 && (u = F), this.each(function() {
                    d.event.remove(this, r, u, s)
                })
            }
        });
        var mt = /<script|<style|<link/i,
            Rt = /checked\s*(?:[^=]|=\s*.checked.)/i,
            Bt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

        function Gt(r, s) {
            return et(r, "table") && et(s.nodeType !== 11 ? s : s.firstChild, "tr") && d(r).children("tbody")[0] || r
        }

        function Ut(r) {
            return r.type = (r.getAttribute("type") !== null) + "/" + r.type, r
        }

        function ue(r) {
            return (r.type || "").slice(0, 5) === "true/" ? r.type = r.type.slice(5) : r.removeAttribute("type"), r
        }

        function he(r, s) {
            var u, p, b, _, T, q, W;
            if (s.nodeType === 1) {
                if (yt.hasData(r) && (_ = yt.get(r), W = _.events, W)) {
                    yt.remove(s, "handle events");
                    for (b in W)
                        for (u = 0, p = W[b].length; u < p; u++) d.event.add(s, b, W[b][u])
                }
                Ft.hasData(r) && (T = Ft.access(r), q = d.extend({}, T), Ft.set(s, q))
            }
        }

        function qe(r, s) {
            var u = s.nodeName.toLowerCase();
            u === "input" && Ct.test(r.type) ? s.checked = r.checked : (u === "input" || u === "textarea") && (s.defaultValue = r.defaultValue)
        }

        function Me(r, s, u, p) {
            s = v(s);
            var b, _, T, q, W, rt, gt = 0,
                Ot = r.length,
                ft = Ot - 1,
                wt = s[0],
                ne = ot(wt);
            if (ne || Ot > 1 && typeof wt == "string" && !V.checkClone && Rt.test(wt)) return r.each(function(ye) {
                var Qt = r.eq(ye);
                ne && (s[0] = wt.call(this, ye, Qt.html())), Me(Qt, s, u, p)
            });
            if (Ot && (b = Bn(s, r[0].ownerDocument, !1, r, p), _ = b.firstChild, b.childNodes.length === 1 && (b = _), _ || p)) {
                for (T = d.map(Se(b, "script"), Ut), q = T.length; gt < Ot; gt++) W = b, gt !== ft && (W = d.clone(W, !0, !0), q && d.merge(T, Se(W, "script"))), u.call(r[gt], W, gt);
                if (q)
                    for (rt = T[T.length - 1].ownerDocument, d.map(T, ue), gt = 0; gt < q; gt++) W = T[gt], Wt.test(W.type || "") && !yt.access(W, "globalEval") && d.contains(rt, W) && (W.src && (W.type || "").toLowerCase() !== "module" ? d._evalUrl && !W.noModule && d._evalUrl(W.src, {
                        nonce: W.nonce || W.getAttribute("nonce")
                    }, rt) : ut(W.textContent.replace(Bt, ""), W, rt))
            }
            return r
        }

        function Je(r, s, u) {
            for (var p, b = s ? d.filter(s, r) : r, _ = 0;
                (p = b[_]) != null; _++) !u && p.nodeType === 1 && d.cleanData(Se(p)), p.parentNode && (u && oe(p) && Ke(Se(p, "script")), p.parentNode.removeChild(p));
            return r
        }
        d.extend({
            htmlPrefilter: function(r) {
                return r
            },
            clone: function(r, s, u) {
                var p, b, _, T, q = r.cloneNode(!0),
                    W = oe(r);
                if (!V.noCloneChecked && (r.nodeType === 1 || r.nodeType === 11) && !d.isXMLDoc(r))
                    for (T = Se(q), _ = Se(r), p = 0, b = _.length; p < b; p++) qe(_[p], T[p]);
                if (s)
                    if (u)
                        for (_ = _ || Se(r), T = T || Se(q), p = 0, b = _.length; p < b; p++) he(_[p], T[p]);
                    else he(r, q);
                return T = Se(q, "script"), T.length > 0 && Ke(T, !W && Se(r, "script")), q
            },
            cleanData: function(r) {
                for (var s, u, p, b = d.event.special, _ = 0;
                    (u = r[_]) !== void 0; _++)
                    if (ct(u)) {
                        if (s = u[yt.expando]) {
                            if (s.events)
                                for (p in s.events) b[p] ? d.event.remove(u, p) : d.removeEvent(u, p, s.handle);
                            u[yt.expando] = void 0
                        }
                        u[Ft.expando] && (u[Ft.expando] = void 0)
                    }
            }
        }), d.fn.extend({
            detach: function(r) {
                return Je(this, r, !0)
            },
            remove: function(r) {
                return Je(this, r)
            },
            text: function(r) {
                return g(this, function(s) {
                    return s === void 0 ? d.text(this) : this.empty().each(function() {
                        (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = s)
                    })
                }, null, r, arguments.length)
            },
            append: function() {
                return Me(this, arguments, function(r) {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                        var s = Gt(this, r);
                        s.appendChild(r)
                    }
                })
            },
            prepend: function() {
                return Me(this, arguments, function(r) {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                        var s = Gt(this, r);
                        s.insertBefore(r, s.firstChild)
                    }
                })
            },
            before: function() {
                return Me(this, arguments, function(r) {
                    this.parentNode && this.parentNode.insertBefore(r, this)
                })
            },
            after: function() {
                return Me(this, arguments, function(r) {
                    this.parentNode && this.parentNode.insertBefore(r, this.nextSibling)
                })
            },
            empty: function() {
                for (var r, s = 0;
                    (r = this[s]) != null; s++) r.nodeType === 1 && (d.cleanData(Se(r, !1)), r.textContent = "");
                return this
            },
            clone: function(r, s) {
                return r = r == null ? !1 : r, s = s == null ? r : s, this.map(function() {
                    return d.clone(this, r, s)
                })
            },
            html: function(r) {
                return g(this, function(s) {
                    var u = this[0] || {},
                        p = 0,
                        b = this.length;
                    if (s === void 0 && u.nodeType === 1) return u.innerHTML;
                    if (typeof s == "string" && !mt.test(s) && !Yt[(Et.exec(s) || ["", ""])[1].toLowerCase()]) {
                        s = d.htmlPrefilter(s);
                        try {
                            for (; p < b; p++) u = this[p] || {}, u.nodeType === 1 && (d.cleanData(Se(u, !1)), u.innerHTML = s);
                            u = 0
                        } catch {}
                    }
                    u && this.empty().append(s)
                }, null, r, arguments.length)
            },
            replaceWith: function() {
                var r = [];
                return Me(this, arguments, function(s) {
                    var u = this.parentNode;
                    d.inArray(this, r) < 0 && (d.cleanData(Se(this)), u && u.replaceChild(s, this))
                }, r)
            }
        }), d.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(r, s) {
            d.fn[r] = function(u) {
                for (var p, b = [], _ = d(u), T = _.length - 1, q = 0; q <= T; q++) p = q === T ? this : this.clone(!0), d(_[q])[s](p), y.apply(b, p.get());
                return this.pushStack(b)
            }
        });
        var Cn = new RegExp("^(" + be + ")(?!px)[a-z%]+$", "i"),
            gn = function(r) {
                var s = r.ownerDocument.defaultView;
                return (!s || !s.opener) && (s = t), s.getComputedStyle(r)
            },
            kn = function(r, s, u) {
                var p, b, _ = {};
                for (b in s) _[b] = r.style[b], r.style[b] = s[b];
                p = u.call(r);
                for (b in s) r.style[b] = _[b];
                return p
            },
            Tn = new RegExp(Te.join("|"), "i");
        (function() {
            function r() {
                if (!!rt) {
                    W.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", rt.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", sn.appendChild(W).appendChild(rt);
                    var gt = t.getComputedStyle(rt);
                    u = gt.top !== "1%", q = s(gt.marginLeft) === 12, rt.style.right = "60%", _ = s(gt.right) === 36, p = s(gt.width) === 36, rt.style.position = "absolute", b = s(rt.offsetWidth / 3) === 12, sn.removeChild(W), rt = null
                }
            }

            function s(gt) {
                return Math.round(parseFloat(gt))
            }
            var u, p, b, _, T, q, W = L.createElement("div"),
                rt = L.createElement("div");
            !rt.style || (rt.style.backgroundClip = "content-box", rt.cloneNode(!0).style.backgroundClip = "", V.clearCloneStyle = rt.style.backgroundClip === "content-box", d.extend(V, {
                boxSizingReliable: function() {
                    return r(), p
                },
                pixelBoxStyles: function() {
                    return r(), _
                },
                pixelPosition: function() {
                    return r(), u
                },
                reliableMarginLeft: function() {
                    return r(), q
                },
                scrollboxSize: function() {
                    return r(), b
                },
                reliableTrDimensions: function() {
                    var gt, Ot, ft, wt;
                    return T == null && (gt = L.createElement("table"), Ot = L.createElement("tr"), ft = L.createElement("div"), gt.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", Ot.style.cssText = "border:1px solid", Ot.style.height = "1px", ft.style.height = "9px", ft.style.display = "block", sn.appendChild(gt).appendChild(Ot).appendChild(ft), wt = t.getComputedStyle(Ot), T = parseInt(wt.height, 10) + parseInt(wt.borderTopWidth, 10) + parseInt(wt.borderBottomWidth, 10) === Ot.offsetHeight, sn.removeChild(gt)), T
                }
            }))
        })();

        function ce(r, s, u) {
            var p, b, _, T, q = r.style;
            return u = u || gn(r), u && (T = u.getPropertyValue(s) || u[s], T === "" && !oe(r) && (T = d.style(r, s)), !V.pixelBoxStyles() && Cn.test(T) && Tn.test(s) && (p = q.width, b = q.minWidth, _ = q.maxWidth, q.minWidth = q.maxWidth = q.width = T, T = u.width, q.width = p, q.minWidth = b, q.maxWidth = _)), T !== void 0 ? T + "" : T
        }

        function w(r, s) {
            return {
                get: function() {
                    if (r()) {
                        delete this.get;
                        return
                    }
                    return (this.get = s).apply(this, arguments)
                }
            }
        }
        var a = ["Webkit", "Moz", "ms"],
            x = L.createElement("div").style,
            O = {};

        function it(r) {
            for (var s = r[0].toUpperCase() + r.slice(1), u = a.length; u--;)
                if (r = a[u] + s, r in x) return r
        }

        function It(r) {
            var s = d.cssProps[r] || O[r];
            return s || (r in x ? r : O[r] = it(r) || r)
        }
        var ie = /^(none|table(?!-c[ea]).+)/,
            We = /^--/,
            dn = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            },
            ri = {
                letterSpacing: "0",
                fontWeight: "400"
            };

        function Jn(r, s, u) {
            var p = ke.exec(s);
            return p ? Math.max(0, p[2] - (u || 0)) + (p[3] || "px") : s
        }

        function si(r, s, u, p, b, _) {
            var T = s === "width" ? 1 : 0,
                q = 0,
                W = 0;
            if (u === (p ? "border" : "content")) return 0;
            for (; T < 4; T += 2) u === "margin" && (W += d.css(r, u + Te[T], !0, b)), p ? (u === "content" && (W -= d.css(r, "padding" + Te[T], !0, b)), u !== "margin" && (W -= d.css(r, "border" + Te[T] + "Width", !0, b))) : (W += d.css(r, "padding" + Te[T], !0, b), u !== "padding" ? W += d.css(r, "border" + Te[T] + "Width", !0, b) : q += d.css(r, "border" + Te[T] + "Width", !0, b));
            return !p && _ >= 0 && (W += Math.max(0, Math.ceil(r["offset" + s[0].toUpperCase() + s.slice(1)] - _ - W - q - .5)) || 0), W
        }

        function Ar(r, s, u) {
            var p = gn(r),
                b = !V.boxSizingReliable() || u,
                _ = b && d.css(r, "boxSizing", !1, p) === "border-box",
                T = _,
                q = ce(r, s, p),
                W = "offset" + s[0].toUpperCase() + s.slice(1);
            if (Cn.test(q)) {
                if (!u) return q;
                q = "auto"
            }
            return (!V.boxSizingReliable() && _ || !V.reliableTrDimensions() && et(r, "tr") || q === "auto" || !parseFloat(q) && d.css(r, "display", !1, p) === "inline") && r.getClientRects().length && (_ = d.css(r, "boxSizing", !1, p) === "border-box", T = W in r, T && (q = r[W])), q = parseFloat(q) || 0, q + si(r, s, u || (_ ? "border" : "content"), T, p, q) + "px"
        }
        d.extend({
            cssHooks: {
                opacity: {
                    get: function(r, s) {
                        if (s) {
                            var u = ce(r, "opacity");
                            return u === "" ? "1" : u
                        }
                    }
                }
            },
            cssNumber: {
                animationIterationCount: !0,
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                gridArea: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnStart: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowStart: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {},
            style: function(r, s, u, p) {
                if (!(!r || r.nodeType === 3 || r.nodeType === 8 || !r.style)) {
                    var b, _, T, q = j(s),
                        W = We.test(s),
                        rt = r.style;
                    if (W || (s = It(q)), T = d.cssHooks[s] || d.cssHooks[q], u !== void 0) {
                        if (_ = typeof u, _ === "string" && (b = ke.exec(u)) && b[1] && (u = N(r, s, b), _ = "number"), u == null || u !== u) return;
                        _ === "number" && !W && (u += b && b[3] || (d.cssNumber[q] ? "" : "px")), !V.clearCloneStyle && u === "" && s.indexOf("background") === 0 && (rt[s] = "inherit"), (!T || !("set" in T) || (u = T.set(r, u, p)) !== void 0) && (W ? rt.setProperty(s, u) : rt[s] = u)
                    } else return T && "get" in T && (b = T.get(r, !1, p)) !== void 0 ? b : rt[s]
                }
            },
            css: function(r, s, u, p) {
                var b, _, T, q = j(s),
                    W = We.test(s);
                return W || (s = It(q)), T = d.cssHooks[s] || d.cssHooks[q], T && "get" in T && (b = T.get(r, !0, u)), b === void 0 && (b = ce(r, s, p)), b === "normal" && s in ri && (b = ri[s]), u === "" || u ? (_ = parseFloat(b), u === !0 || isFinite(_) ? _ || 0 : b) : b
            }
        }), d.each(["height", "width"], function(r, s) {
            d.cssHooks[s] = {
                get: function(u, p, b) {
                    if (p) return ie.test(d.css(u, "display")) && (!u.getClientRects().length || !u.getBoundingClientRect().width) ? kn(u, dn, function() {
                        return Ar(u, s, b)
                    }) : Ar(u, s, b)
                },
                set: function(u, p, b) {
                    var _, T = gn(u),
                        q = !V.scrollboxSize() && T.position === "absolute",
                        W = q || b,
                        rt = W && d.css(u, "boxSizing", !1, T) === "border-box",
                        gt = b ? si(u, s, b, rt, T) : 0;
                    return rt && q && (gt -= Math.ceil(u["offset" + s[0].toUpperCase() + s.slice(1)] - parseFloat(T[s]) - si(u, s, "border", !1, T) - .5)), gt && (_ = ke.exec(p)) && (_[3] || "px") !== "px" && (u.style[s] = p, p = d.css(u, s)), Jn(u, p, gt)
                }
            }
        }), d.cssHooks.marginLeft = w(V.reliableMarginLeft, function(r, s) {
            if (s) return (parseFloat(ce(r, "marginLeft")) || r.getBoundingClientRect().left - kn(r, {
                marginLeft: 0
            }, function() {
                return r.getBoundingClientRect().left
            })) + "px"
        }), d.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(r, s) {
            d.cssHooks[r + s] = {
                expand: function(u) {
                    for (var p = 0, b = {}, _ = typeof u == "string" ? u.split(" ") : [u]; p < 4; p++) b[r + Te[p] + s] = _[p] || _[p - 2] || _[0];
                    return b
                }
            }, r !== "margin" && (d.cssHooks[r + s].set = Jn)
        }), d.fn.extend({
            css: function(r, s) {
                return g(this, function(u, p, b) {
                    var _, T, q = {},
                        W = 0;
                    if (Array.isArray(p)) {
                        for (_ = gn(u), T = p.length; W < T; W++) q[p[W]] = d.css(u, p[W], !1, _);
                        return q
                    }
                    return b !== void 0 ? d.style(u, p, b) : d.css(u, p)
                }, r, s, arguments.length > 1)
            }
        });

        function fn(r, s, u, p, b) {
            return new fn.prototype.init(r, s, u, p, b)
        }
        d.Tween = fn, fn.prototype = {
            constructor: fn,
            init: function(r, s, u, p, b, _) {
                this.elem = r, this.prop = u, this.easing = b || d.easing._default, this.options = s, this.start = this.now = this.cur(), this.end = p, this.unit = _ || (d.cssNumber[u] ? "" : "px")
            },
            cur: function() {
                var r = fn.propHooks[this.prop];
                return r && r.get ? r.get(this) : fn.propHooks._default.get(this)
            },
            run: function(r) {
                var s, u = fn.propHooks[this.prop];
                return this.options.duration ? this.pos = s = d.easing[this.easing](r, this.options.duration * r, 0, 1, this.options.duration) : this.pos = s = r, this.now = (this.end - this.start) * s + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), u && u.set ? u.set(this) : fn.propHooks._default.set(this), this
            }
        }, fn.prototype.init.prototype = fn.prototype, fn.propHooks = {
            _default: {
                get: function(r) {
                    var s;
                    return r.elem.nodeType !== 1 || r.elem[r.prop] != null && r.elem.style[r.prop] == null ? r.elem[r.prop] : (s = d.css(r.elem, r.prop, ""), !s || s === "auto" ? 0 : s)
                },
                set: function(r) {
                    d.fx.step[r.prop] ? d.fx.step[r.prop](r) : r.elem.nodeType === 1 && (d.cssHooks[r.prop] || r.elem.style[It(r.prop)] != null) ? d.style(r.elem, r.prop, r.now + r.unit) : r.elem[r.prop] = r.now
                }
            }
        }, fn.propHooks.scrollTop = fn.propHooks.scrollLeft = {
            set: function(r) {
                r.elem.nodeType && r.elem.parentNode && (r.elem[r.prop] = r.now)
            }
        }, d.easing = {
            linear: function(r) {
                return r
            },
            swing: function(r) {
                return .5 - Math.cos(r * Math.PI) / 2
            },
            _default: "swing"
        }, d.fx = fn.prototype.init, d.fx.step = {};
        var on, Gi, bo = /^(?:toggle|show|hide)$/,
            Co = /queueHooks$/;

        function Or() {
            Gi && (L.hidden === !1 && t.requestAnimationFrame ? t.requestAnimationFrame(Or) : t.setTimeout(Or, d.fx.interval), d.fx.tick())
        }

        function Rr() {
            return t.setTimeout(function() {
                on = void 0
            }), on = Date.now()
        }

        function Xi(r, s) {
            var u, p = 0,
                b = {
                    height: r
                };
            for (s = s ? 1 : 0; p < 4; p += 2 - s) u = Te[p], b["margin" + u] = b["padding" + u] = r;
            return s && (b.opacity = b.width = r), b
        }

        function gs(r, s, u) {
            for (var p, b = ($n.tweeners[s] || []).concat($n.tweeners["*"]), _ = 0, T = b.length; _ < T; _++)
                if (p = b[_].call(u, s, r)) return p
        }

        function xo(r, s, u) {
            var p, b, _, T, q, W, rt, gt, Ot = "width" in s || "height" in s,
                ft = this,
                wt = {},
                ne = r.style,
                ye = r.nodeType && H(r),
                Qt = yt.get(r, "fxshow");
            u.queue || (T = d._queueHooks(r, "fx"), T.unqueued == null && (T.unqueued = 0, q = T.empty.fire, T.empty.fire = function() {
                T.unqueued || q()
            }), T.unqueued++, ft.always(function() {
                ft.always(function() {
                    T.unqueued--, d.queue(r, "fx").length || T.empty.fire()
                })
            }));
            for (p in s)
                if (b = s[p], bo.test(b)) {
                    if (delete s[p], _ = _ || b === "toggle", b === (ye ? "hide" : "show"))
                        if (b === "show" && Qt && Qt[p] !== void 0) ye = !0;
                        else continue;
                    wt[p] = Qt && Qt[p] || d.style(r, p)
                } if (W = !d.isEmptyObject(s), !(!W && d.isEmptyObject(wt))) {
                Ot && r.nodeType === 1 && (u.overflow = [ne.overflow, ne.overflowX, ne.overflowY], rt = Qt && Qt.display, rt == null && (rt = yt.get(r, "display")), gt = d.css(r, "display"), gt === "none" && (rt ? gt = rt : (Y([r], !0), rt = r.style.display || rt, gt = d.css(r, "display"), Y([r]))), (gt === "inline" || gt === "inline-block" && rt != null) && d.css(r, "float") === "none" && (W || (ft.done(function() {
                    ne.display = rt
                }), rt == null && (gt = ne.display, rt = gt === "none" ? "" : gt)), ne.display = "inline-block")), u.overflow && (ne.overflow = "hidden", ft.always(function() {
                    ne.overflow = u.overflow[0], ne.overflowX = u.overflow[1], ne.overflowY = u.overflow[2]
                })), W = !1;
                for (p in wt) W || (Qt ? "hidden" in Qt && (ye = Qt.hidden) : Qt = yt.access(r, "fxshow", {
                    display: rt
                }), _ && (Qt.hidden = !ye), ye && Y([r], !0), ft.done(function() {
                    ye || Y([r]), yt.remove(r, "fxshow");
                    for (p in wt) d.style(r, p, wt[p])
                })), W = gs(ye ? Qt[p] : 0, p, ft), p in Qt || (Qt[p] = W.start, ye && (W.end = W.start, W.start = 0))
            }
        }

        function ms(r, s) {
            var u, p, b, _, T;
            for (u in r)
                if (p = j(u), b = s[p], _ = r[u], Array.isArray(_) && (b = _[1], _ = r[u] = _[0]), u !== p && (r[p] = _, delete r[u]), T = d.cssHooks[p], T && "expand" in T) {
                    _ = T.expand(_), delete r[p];
                    for (u in _) u in r || (r[u] = _[u], s[u] = b)
                } else s[p] = b
        }

        function $n(r, s, u) {
            var p, b, _ = 0,
                T = $n.prefilters.length,
                q = d.Deferred().always(function() {
                    delete W.elem
                }),
                W = function() {
                    if (b) return !1;
                    for (var Ot = on || Rr(), ft = Math.max(0, rt.startTime + rt.duration - Ot), wt = ft / rt.duration || 0, ne = 1 - wt, ye = 0, Qt = rt.tweens.length; ye < Qt; ye++) rt.tweens[ye].run(ne);
                    return q.notifyWith(r, [rt, ne, ft]), ne < 1 && Qt ? ft : (Qt || q.notifyWith(r, [rt, 1, 0]), q.resolveWith(r, [rt]), !1)
                },
                rt = q.promise({
                    elem: r,
                    props: d.extend({}, s),
                    opts: d.extend(!0, {
                        specialEasing: {},
                        easing: d.easing._default
                    }, u),
                    originalProperties: s,
                    originalOptions: u,
                    startTime: on || Rr(),
                    duration: u.duration,
                    tweens: [],
                    createTween: function(Ot, ft) {
                        var wt = d.Tween(r, rt.opts, Ot, ft, rt.opts.specialEasing[Ot] || rt.opts.easing);
                        return rt.tweens.push(wt), wt
                    },
                    stop: function(Ot) {
                        var ft = 0,
                            wt = Ot ? rt.tweens.length : 0;
                        if (b) return this;
                        for (b = !0; ft < wt; ft++) rt.tweens[ft].run(1);
                        return Ot ? (q.notifyWith(r, [rt, 1, 0]), q.resolveWith(r, [rt, Ot])) : q.rejectWith(r, [rt, Ot]), this
                    }
                }),
                gt = rt.props;
            for (ms(gt, rt.opts.specialEasing); _ < T; _++)
                if (p = $n.prefilters[_].call(rt, r, gt, rt.opts), p) return ot(p.stop) && (d._queueHooks(rt.elem, rt.opts.queue).stop = p.stop.bind(p)), p;
            return d.map(gt, gs, rt), ot(rt.opts.start) && rt.opts.start.call(r, rt), rt.progress(rt.opts.progress).done(rt.opts.done, rt.opts.complete).fail(rt.opts.fail).always(rt.opts.always), d.fx.timer(d.extend(W, {
                elem: r,
                anim: rt,
                queue: rt.opts.queue
            })), rt
        }
        d.Animation = d.extend($n, {
                tweeners: {
                    "*": [function(r, s) {
                        var u = this.createTween(r, s);
                        return N(u.elem, r, ke.exec(s), u), u
                    }]
                },
                tweener: function(r, s) {
                    ot(r) ? (s = r, r = ["*"]) : r = r.match(Nt);
                    for (var u, p = 0, b = r.length; p < b; p++) u = r[p], $n.tweeners[u] = $n.tweeners[u] || [], $n.tweeners[u].unshift(s)
                },
                prefilters: [xo],
                prefilter: function(r, s) {
                    s ? $n.prefilters.unshift(r) : $n.prefilters.push(r)
                }
            }), d.speed = function(r, s, u) {
                var p = r && typeof r == "object" ? d.extend({}, r) : {
                    complete: u || !u && s || ot(r) && r,
                    duration: r,
                    easing: u && s || s && !ot(s) && s
                };
                return d.fx.off ? p.duration = 0 : typeof p.duration != "number" && (p.duration in d.fx.speeds ? p.duration = d.fx.speeds[p.duration] : p.duration = d.fx.speeds._default), (p.queue == null || p.queue === !0) && (p.queue = "fx"), p.old = p.complete, p.complete = function() {
                    ot(p.old) && p.old.call(this), p.queue && d.dequeue(this, p.queue)
                }, p
            }, d.fn.extend({
                fadeTo: function(r, s, u, p) {
                    return this.filter(H).css("opacity", 0).show().end().animate({
                        opacity: s
                    }, r, u, p)
                },
                animate: function(r, s, u, p) {
                    var b = d.isEmptyObject(r),
                        _ = d.speed(s, u, p),
                        T = function() {
                            var q = $n(this, d.extend({}, r), _);
                            (b || yt.get(this, "finish")) && q.stop(!0)
                        };
                    return T.finish = T, b || _.queue === !1 ? this.each(T) : this.queue(_.queue, T)
                },
                stop: function(r, s, u) {
                    var p = function(b) {
                        var _ = b.stop;
                        delete b.stop, _(u)
                    };
                    return typeof r != "string" && (u = s, s = r, r = void 0), s && this.queue(r || "fx", []), this.each(function() {
                        var b = !0,
                            _ = r != null && r + "queueHooks",
                            T = d.timers,
                            q = yt.get(this);
                        if (_) q[_] && q[_].stop && p(q[_]);
                        else
                            for (_ in q) q[_] && q[_].stop && Co.test(_) && p(q[_]);
                        for (_ = T.length; _--;) T[_].elem === this && (r == null || T[_].queue === r) && (T[_].anim.stop(u), b = !1, T.splice(_, 1));
                        (b || !u) && d.dequeue(this, r)
                    })
                },
                finish: function(r) {
                    return r !== !1 && (r = r || "fx"), this.each(function() {
                        var s, u = yt.get(this),
                            p = u[r + "queue"],
                            b = u[r + "queueHooks"],
                            _ = d.timers,
                            T = p ? p.length : 0;
                        for (u.finish = !0, d.queue(this, r, []), b && b.stop && b.stop.call(this, !0), s = _.length; s--;) _[s].elem === this && _[s].queue === r && (_[s].anim.stop(!0), _.splice(s, 1));
                        for (s = 0; s < T; s++) p[s] && p[s].finish && p[s].finish.call(this);
                        delete u.finish
                    })
                }
            }), d.each(["toggle", "show", "hide"], function(r, s) {
                var u = d.fn[s];
                d.fn[s] = function(p, b, _) {
                    return p == null || typeof p == "boolean" ? u.apply(this, arguments) : this.animate(Xi(s, !0), p, b, _)
                }
            }), d.each({
                slideDown: Xi("show"),
                slideUp: Xi("hide"),
                slideToggle: Xi("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function(r, s) {
                d.fn[r] = function(u, p, b) {
                    return this.animate(s, u, p, b)
                }
            }), d.timers = [], d.fx.tick = function() {
                var r, s = 0,
                    u = d.timers;
                for (on = Date.now(); s < u.length; s++) r = u[s], !r() && u[s] === r && u.splice(s--, 1);
                u.length || d.fx.stop(), on = void 0
            }, d.fx.timer = function(r) {
                d.timers.push(r), d.fx.start()
            }, d.fx.interval = 13, d.fx.start = function() {
                Gi || (Gi = !0, Or())
            }, d.fx.stop = function() {
                Gi = null
            }, d.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            }, d.fn.delay = function(r, s) {
                return r = d.fx && d.fx.speeds[r] || r, s = s || "fx", this.queue(s, function(u, p) {
                    var b = t.setTimeout(u, r);
                    p.stop = function() {
                        t.clearTimeout(b)
                    }
                })
            },
            function() {
                var r = L.createElement("input"),
                    s = L.createElement("select"),
                    u = s.appendChild(L.createElement("option"));
                r.type = "checkbox", V.checkOn = r.value !== "", V.optSelected = u.selected, r = L.createElement("input"), r.value = "t", r.type = "radio", V.radioValue = r.value === "t"
            }();
        var Ir, Ri = d.expr.attrHandle;
        d.fn.extend({
            attr: function(r, s) {
                return g(this, d.attr, r, s, arguments.length > 1)
            },
            removeAttr: function(r) {
                return this.each(function() {
                    d.removeAttr(this, r)
                })
            }
        }), d.extend({
            attr: function(r, s, u) {
                var p, b, _ = r.nodeType;
                if (!(_ === 3 || _ === 8 || _ === 2)) {
                    if (typeof r.getAttribute > "u") return d.prop(r, s, u);
                    if ((_ !== 1 || !d.isXMLDoc(r)) && (b = d.attrHooks[s.toLowerCase()] || (d.expr.match.bool.test(s) ? Ir : void 0)), u !== void 0) {
                        if (u === null) {
                            d.removeAttr(r, s);
                            return
                        }
                        return b && "set" in b && (p = b.set(r, u, s)) !== void 0 ? p : (r.setAttribute(s, u + ""), u)
                    }
                    return b && "get" in b && (p = b.get(r, s)) !== null ? p : (p = d.find.attr(r, s), p == null ? void 0 : p)
                }
            },
            attrHooks: {
                type: {
                    set: function(r, s) {
                        if (!V.radioValue && s === "radio" && et(r, "input")) {
                            var u = r.value;
                            return r.setAttribute("type", s), u && (r.value = u), s
                        }
                    }
                }
            },
            removeAttr: function(r, s) {
                var u, p = 0,
                    b = s && s.match(Nt);
                if (b && r.nodeType === 1)
                    for (; u = b[p++];) r.removeAttribute(u)
            }
        }), Ir = {
            set: function(r, s, u) {
                return s === !1 ? d.removeAttr(r, u) : r.setAttribute(u, u), u
            }
        }, d.each(d.expr.match.bool.source.match(/\w+/g), function(r, s) {
            var u = Ri[s] || d.find.attr;
            Ri[s] = function(p, b, _) {
                var T, q, W = b.toLowerCase();
                return _ || (q = Ri[W], Ri[W] = T, T = u(p, b, _) != null ? W : null, Ri[W] = q), T
            }
        });
        var Eo = /^(?:input|select|textarea|button)$/i,
            _o = /^(?:a|area)$/i;
        d.fn.extend({
            prop: function(r, s) {
                return g(this, d.prop, r, s, arguments.length > 1)
            },
            removeProp: function(r) {
                return this.each(function() {
                    delete this[d.propFix[r] || r]
                })
            }
        }), d.extend({
            prop: function(r, s, u) {
                var p, b, _ = r.nodeType;
                if (!(_ === 3 || _ === 8 || _ === 2)) return (_ !== 1 || !d.isXMLDoc(r)) && (s = d.propFix[s] || s, b = d.propHooks[s]), u !== void 0 ? b && "set" in b && (p = b.set(r, u, s)) !== void 0 ? p : r[s] = u : b && "get" in b && (p = b.get(r, s)) !== null ? p : r[s]
            },
            propHooks: {
                tabIndex: {
                    get: function(r) {
                        var s = d.find.attr(r, "tabindex");
                        return s ? parseInt(s, 10) : Eo.test(r.nodeName) || _o.test(r.nodeName) && r.href ? 0 : -1
                    }
                }
            },
            propFix: {
                for: "htmlFor",
                class: "className"
            }
        }), V.optSelected || (d.propHooks.selected = {
            get: function(r) {
                var s = r.parentNode;
                return s && s.parentNode && s.parentNode.selectedIndex, null
            },
            set: function(r) {
                var s = r.parentNode;
                s && (s.selectedIndex, s.parentNode && s.parentNode.selectedIndex)
            }
        }), d.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
            d.propFix[this.toLowerCase()] = this
        });

        function oi(r) {
            var s = r.match(Nt) || [];
            return s.join(" ")
        }

        function ai(r) {
            return r.getAttribute && r.getAttribute("class") || ""
        }

        function Lr(r) {
            return Array.isArray(r) ? r : typeof r == "string" ? r.match(Nt) || [] : []
        }
        d.fn.extend({
            addClass: function(r) {
                var s, u, p, b, _, T, q, W = 0;
                if (ot(r)) return this.each(function(rt) {
                    d(this).addClass(r.call(this, rt, ai(this)))
                });
                if (s = Lr(r), s.length) {
                    for (; u = this[W++];)
                        if (b = ai(u), p = u.nodeType === 1 && " " + oi(b) + " ", p) {
                            for (T = 0; _ = s[T++];) p.indexOf(" " + _ + " ") < 0 && (p += _ + " ");
                            q = oi(p), b !== q && u.setAttribute("class", q)
                        }
                }
                return this
            },
            removeClass: function(r) {
                var s, u, p, b, _, T, q, W = 0;
                if (ot(r)) return this.each(function(rt) {
                    d(this).removeClass(r.call(this, rt, ai(this)))
                });
                if (!arguments.length) return this.attr("class", "");
                if (s = Lr(r), s.length) {
                    for (; u = this[W++];)
                        if (b = ai(u), p = u.nodeType === 1 && " " + oi(b) + " ", p) {
                            for (T = 0; _ = s[T++];)
                                for (; p.indexOf(" " + _ + " ") > -1;) p = p.replace(" " + _ + " ", " ");
                            q = oi(p), b !== q && u.setAttribute("class", q)
                        }
                }
                return this
            },
            toggleClass: function(r, s) {
                var u = typeof r,
                    p = u === "string" || Array.isArray(r);
                return typeof s == "boolean" && p ? s ? this.addClass(r) : this.removeClass(r) : ot(r) ? this.each(function(b) {
                    d(this).toggleClass(r.call(this, b, ai(this), s), s)
                }) : this.each(function() {
                    var b, _, T, q;
                    if (p)
                        for (_ = 0, T = d(this), q = Lr(r); b = q[_++];) T.hasClass(b) ? T.removeClass(b) : T.addClass(b);
                    else(r === void 0 || u === "boolean") && (b = ai(this), b && yt.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || r === !1 ? "" : yt.get(this, "__className__") || ""))
                })
            },
            hasClass: function(r) {
                var s, u, p = 0;
                for (s = " " + r + " "; u = this[p++];)
                    if (u.nodeType === 1 && (" " + oi(ai(u)) + " ").indexOf(s) > -1) return !0;
                return !1
            }
        });
        var So = /\r/g;
        d.fn.extend({
            val: function(r) {
                var s, u, p, b = this[0];
                return arguments.length ? (p = ot(r), this.each(function(_) {
                    var T;
                    this.nodeType === 1 && (p ? T = r.call(this, _, d(this).val()) : T = r, T == null ? T = "" : typeof T == "number" ? T += "" : Array.isArray(T) && (T = d.map(T, function(q) {
                        return q == null ? "" : q + ""
                    })), s = d.valHooks[this.type] || d.valHooks[this.nodeName.toLowerCase()], (!s || !("set" in s) || s.set(this, T, "value") === void 0) && (this.value = T))
                })) : b ? (s = d.valHooks[b.type] || d.valHooks[b.nodeName.toLowerCase()], s && "get" in s && (u = s.get(b, "value")) !== void 0 ? u : (u = b.value, typeof u == "string" ? u.replace(So, "") : u == null ? "" : u)) : void 0
            }
        }), d.extend({
            valHooks: {
                option: {
                    get: function(r) {
                        var s = d.find.attr(r, "value");
                        return s != null ? s : oi(d.text(r))
                    }
                },
                select: {
                    get: function(r) {
                        var s, u, p, b = r.options,
                            _ = r.selectedIndex,
                            T = r.type === "select-one",
                            q = T ? null : [],
                            W = T ? _ + 1 : b.length;
                        for (_ < 0 ? p = W : p = T ? _ : 0; p < W; p++)
                            if (u = b[p], (u.selected || p === _) && !u.disabled && (!u.parentNode.disabled || !et(u.parentNode, "optgroup"))) {
                                if (s = d(u).val(), T) return s;
                                q.push(s)
                            } return q
                    },
                    set: function(r, s) {
                        for (var u, p, b = r.options, _ = d.makeArray(s), T = b.length; T--;) p = b[T], (p.selected = d.inArray(d.valHooks.option.get(p), _) > -1) && (u = !0);
                        return u || (r.selectedIndex = -1), _
                    }
                }
            }
        }), d.each(["radio", "checkbox"], function() {
            d.valHooks[this] = {
                set: function(r, s) {
                    if (Array.isArray(s)) return r.checked = d.inArray(d(r).val(), s) > -1
                }
            }, V.checkOn || (d.valHooks[this].get = function(r) {
                return r.getAttribute("value") === null ? "on" : r.value
            })
        }), V.focusin = "onfocusin" in t;
        var Dr = /^(?:focusinfocus|focusoutblur)$/,
            li = function(r) {
                r.stopPropagation()
            };
        d.extend(d.event, {
            trigger: function(r, s, u, p) {
                var b, _, T, q, W, rt, gt, Ot, ft = [u || L],
                    wt = $.call(r, "type") ? r.type : r,
                    ne = $.call(r, "namespace") ? r.namespace.split(".") : [];
                if (_ = Ot = T = u = u || L, !(u.nodeType === 3 || u.nodeType === 8) && !Dr.test(wt + d.event.triggered) && (wt.indexOf(".") > -1 && (ne = wt.split("."), wt = ne.shift(), ne.sort()), W = wt.indexOf(":") < 0 && "on" + wt, r = r[d.expando] ? r : new d.Event(wt, typeof r == "object" && r), r.isTrigger = p ? 2 : 3, r.namespace = ne.join("."), r.rnamespace = r.namespace ? new RegExp("(^|\\.)" + ne.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, r.result = void 0, r.target || (r.target = u), s = s == null ? [r] : d.makeArray(s, [r]), gt = d.event.special[wt] || {}, !(!p && gt.trigger && gt.trigger.apply(u, s) === !1))) {
                    if (!p && !gt.noBubble && !m(u)) {
                        for (q = gt.delegateType || wt, Dr.test(q + wt) || (_ = _.parentNode); _; _ = _.parentNode) ft.push(_), T = _;
                        T === (u.ownerDocument || L) && ft.push(T.defaultView || T.parentWindow || t)
                    }
                    for (b = 0;
                        (_ = ft[b++]) && !r.isPropagationStopped();) Ot = _, r.type = b > 1 ? q : gt.bindType || wt, rt = (yt.get(_, "events") || Object.create(null))[r.type] && yt.get(_, "handle"), rt && rt.apply(_, s), rt = W && _[W], rt && rt.apply && ct(_) && (r.result = rt.apply(_, s), r.result === !1 && r.preventDefault());
                    return r.type = wt, !p && !r.isDefaultPrevented() && (!gt._default || gt._default.apply(ft.pop(), s) === !1) && ct(u) && W && ot(u[wt]) && !m(u) && (T = u[W], T && (u[W] = null), d.event.triggered = wt, r.isPropagationStopped() && Ot.addEventListener(wt, li), u[wt](), r.isPropagationStopped() && Ot.removeEventListener(wt, li), d.event.triggered = void 0, T && (u[W] = T)), r.result
                }
            },
            simulate: function(r, s, u) {
                var p = d.extend(new d.Event, u, {
                    type: r,
                    isSimulated: !0
                });
                d.event.trigger(p, null, s)
            }
        }), d.fn.extend({
            trigger: function(r, s) {
                return this.each(function() {
                    d.event.trigger(r, s, this)
                })
            },
            triggerHandler: function(r, s) {
                var u = this[0];
                if (u) return d.event.trigger(r, s, u, !0)
            }
        }), V.focusin || d.each({
            focus: "focusin",
            blur: "focusout"
        }, function(r, s) {
            var u = function(p) {
                d.event.simulate(s, p.target, d.event.fix(p))
            };
            d.event.special[s] = {
                setup: function() {
                    var p = this.ownerDocument || this.document || this,
                        b = yt.access(p, s);
                    b || p.addEventListener(r, u, !0), yt.access(p, s, (b || 0) + 1)
                },
                teardown: function() {
                    var p = this.ownerDocument || this.document || this,
                        b = yt.access(p, s) - 1;
                    b ? yt.access(p, s, b) : (p.removeEventListener(r, u, !0), yt.remove(p, s))
                }
            }
        });
        var Ii = t.location,
            Mr = {
                guid: Date.now()
            },
            Yi = /\?/;
        d.parseXML = function(r) {
            var s, u;
            if (!r || typeof r != "string") return null;
            try {
                s = new t.DOMParser().parseFromString(r, "text/xml")
            } catch {}
            return u = s && s.getElementsByTagName("parsererror")[0], (!s || u) && d.error("Invalid XML: " + (u ? d.map(u.childNodes, function(p) {
                return p.textContent
            }).join(`
`) : r)), s
        };
        var ko = /\[\]$/,
            vs = /\r?\n/g,
            To = /^(?:submit|button|image|reset|file)$/i,
            Ao = /^(?:input|select|textarea|keygen)/i;

        function Pr(r, s, u, p) {
            var b;
            if (Array.isArray(s)) d.each(s, function(_, T) {
                u || ko.test(r) ? p(r, T) : Pr(r + "[" + (typeof T == "object" && T != null ? _ : "") + "]", T, u, p)
            });
            else if (!u && ht(s) === "object")
                for (b in s) Pr(r + "[" + b + "]", s[b], u, p);
            else p(r, s)
        }
        d.param = function(r, s) {
            var u, p = [],
                b = function(_, T) {
                    var q = ot(T) ? T() : T;
                    p[p.length] = encodeURIComponent(_) + "=" + encodeURIComponent(q == null ? "" : q)
                };
            if (r == null) return "";
            if (Array.isArray(r) || r.jquery && !d.isPlainObject(r)) d.each(r, function() {
                b(this.name, this.value)
            });
            else
                for (u in r) Pr(u, r[u], s, b);
            return p.join("&")
        }, d.fn.extend({
            serialize: function() {
                return d.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map(function() {
                    var r = d.prop(this, "elements");
                    return r ? d.makeArray(r) : this
                }).filter(function() {
                    var r = this.type;
                    return this.name && !d(this).is(":disabled") && Ao.test(this.nodeName) && !To.test(r) && (this.checked || !Ct.test(r))
                }).map(function(r, s) {
                    var u = d(this).val();
                    return u == null ? null : Array.isArray(u) ? d.map(u, function(p) {
                        return {
                            name: s.name,
                            value: p.replace(vs, `\r
`)
                        }
                    }) : {
                        name: s.name,
                        value: u.replace(vs, `\r
`)
                    }
                }).get()
            }
        });
        var Oo = /%20/g,
            Ro = /#.*$/,
            Io = /([?&])_=[^&]*/,
            ci = /^(.*?):[ \t]*([^\r\n]*)$/mg,
            ys = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
            Lo = /^(?:GET|HEAD)$/,
            Do = /^\/\//,
            ws = {},
            Nr = {},
            bs = "*/".concat("*"),
            Br = L.createElement("a");
        Br.href = Ii.href;

        function Cs(r) {
            return function(s, u) {
                typeof s != "string" && (u = s, s = "*");
                var p, b = 0,
                    _ = s.toLowerCase().match(Nt) || [];
                if (ot(u))
                    for (; p = _[b++];) p[0] === "+" ? (p = p.slice(1) || "*", (r[p] = r[p] || []).unshift(u)) : (r[p] = r[p] || []).push(u)
            }
        }

        function xs(r, s, u, p) {
            var b = {},
                _ = r === Nr;

            function T(q) {
                var W;
                return b[q] = !0, d.each(r[q] || [], function(rt, gt) {
                    var Ot = gt(s, u, p);
                    if (typeof Ot == "string" && !_ && !b[Ot]) return s.dataTypes.unshift(Ot), T(Ot), !1;
                    if (_) return !(W = Ot)
                }), W
            }
            return T(s.dataTypes[0]) || !b["*"] && T("*")
        }

        function $r(r, s) {
            var u, p, b = d.ajaxSettings.flatOptions || {};
            for (u in s) s[u] !== void 0 && ((b[u] ? r : p || (p = {}))[u] = s[u]);
            return p && d.extend(!0, r, p), r
        }

        function Mo(r, s, u) {
            for (var p, b, _, T, q = r.contents, W = r.dataTypes; W[0] === "*";) W.shift(), p === void 0 && (p = r.mimeType || s.getResponseHeader("Content-Type"));
            if (p) {
                for (b in q)
                    if (q[b] && q[b].test(p)) {
                        W.unshift(b);
                        break
                    }
            }
            if (W[0] in u) _ = W[0];
            else {
                for (b in u) {
                    if (!W[0] || r.converters[b + " " + W[0]]) {
                        _ = b;
                        break
                    }
                    T || (T = b)
                }
                _ = _ || T
            }
            if (_) return _ !== W[0] && W.unshift(_), u[_]
        }

        function Po(r, s, u, p) {
            var b, _, T, q, W, rt = {},
                gt = r.dataTypes.slice();
            if (gt[1])
                for (T in r.converters) rt[T.toLowerCase()] = r.converters[T];
            for (_ = gt.shift(); _;)
                if (r.responseFields[_] && (u[r.responseFields[_]] = s), !W && p && r.dataFilter && (s = r.dataFilter(s, r.dataType)), W = _, _ = gt.shift(), _) {
                    if (_ === "*") _ = W;
                    else if (W !== "*" && W !== _) {
                        if (T = rt[W + " " + _] || rt["* " + _], !T) {
                            for (b in rt)
                                if (q = b.split(" "), q[1] === _ && (T = rt[W + " " + q[0]] || rt["* " + q[0]], T)) {
                                    T === !0 ? T = rt[b] : rt[b] !== !0 && (_ = q[0], gt.unshift(q[1]));
                                    break
                                }
                        }
                        if (T !== !0)
                            if (T && r.throws) s = T(s);
                            else try {
                                s = T(s)
                            } catch (Ot) {
                                return {
                                    state: "parsererror",
                                    error: T ? Ot : "No conversion from " + W + " to " + _
                                }
                            }
                    }
                } return {
                state: "success",
                data: s
            }
        }
        d.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: Ii.href,
                type: "GET",
                isLocal: ys.test(Ii.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": bs,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /\bxml\b/,
                    html: /\bhtml/,
                    json: /\bjson\b/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": JSON.parse,
                    "text xml": d.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(r, s) {
                return s ? $r($r(r, d.ajaxSettings), s) : $r(d.ajaxSettings, r)
            },
            ajaxPrefilter: Cs(ws),
            ajaxTransport: Cs(Nr),
            ajax: function(r, s) {
                typeof r == "object" && (s = r, r = void 0), s = s || {};
                var u, p, b, _, T, q, W, rt, gt, Ot, ft = d.ajaxSetup({}, s),
                    wt = ft.context || ft,
                    ne = ft.context && (wt.nodeType || wt.jquery) ? d(wt) : d.event,
                    ye = d.Deferred(),
                    Qt = d.Callbacks("once memory"),
                    an = ft.statusCode || {},
                    tn = {},
                    An = {},
                    Be = "canceled",
                    pe = {
                        readyState: 0,
                        getResponseHeader: function(Ae) {
                            var Ge;
                            if (W) {
                                if (!_)
                                    for (_ = {}; Ge = ci.exec(b);) _[Ge[1].toLowerCase() + " "] = (_[Ge[1].toLowerCase() + " "] || []).concat(Ge[2]);
                                Ge = _[Ae.toLowerCase() + " "]
                            }
                            return Ge == null ? null : Ge.join(", ")
                        },
                        getAllResponseHeaders: function() {
                            return W ? b : null
                        },
                        setRequestHeader: function(Ae, Ge) {
                            return W == null && (Ae = An[Ae.toLowerCase()] = An[Ae.toLowerCase()] || Ae, tn[Ae] = Ge), this
                        },
                        overrideMimeType: function(Ae) {
                            return W == null && (ft.mimeType = Ae), this
                        },
                        statusCode: function(Ae) {
                            var Ge;
                            if (Ae)
                                if (W) pe.always(Ae[pe.status]);
                                else
                                    for (Ge in Ae) an[Ge] = [an[Ge], Ae[Ge]];
                            return this
                        },
                        abort: function(Ae) {
                            var Ge = Ae || Be;
                            return u && u.abort(Ge), xn(0, Ge), this
                        }
                    };
                if (ye.promise(pe), ft.url = ((r || ft.url || Ii.href) + "").replace(Do, Ii.protocol + "//"), ft.type = s.method || s.type || ft.method || ft.type, ft.dataTypes = (ft.dataType || "*").toLowerCase().match(Nt) || [""], ft.crossDomain == null) {
                    q = L.createElement("a");
                    try {
                        q.href = ft.url, q.href = q.href, ft.crossDomain = Br.protocol + "//" + Br.host != q.protocol + "//" + q.host
                    } catch {
                        ft.crossDomain = !0
                    }
                }
                if (ft.data && ft.processData && typeof ft.data != "string" && (ft.data = d.param(ft.data, ft.traditional)), xs(ws, ft, s, pe), W) return pe;
                rt = d.event && ft.global, rt && d.active++ === 0 && d.event.trigger("ajaxStart"), ft.type = ft.type.toUpperCase(), ft.hasContent = !Lo.test(ft.type), p = ft.url.replace(Ro, ""), ft.hasContent ? ft.data && ft.processData && (ft.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (ft.data = ft.data.replace(Oo, "+")) : (Ot = ft.url.slice(p.length), ft.data && (ft.processData || typeof ft.data == "string") && (p += (Yi.test(p) ? "&" : "?") + ft.data, delete ft.data), ft.cache === !1 && (p = p.replace(Io, "$1"), Ot = (Yi.test(p) ? "&" : "?") + "_=" + Mr.guid++ + Ot), ft.url = p + Ot), ft.ifModified && (d.lastModified[p] && pe.setRequestHeader("If-Modified-Since", d.lastModified[p]), d.etag[p] && pe.setRequestHeader("If-None-Match", d.etag[p])), (ft.data && ft.hasContent && ft.contentType !== !1 || s.contentType) && pe.setRequestHeader("Content-Type", ft.contentType), pe.setRequestHeader("Accept", ft.dataTypes[0] && ft.accepts[ft.dataTypes[0]] ? ft.accepts[ft.dataTypes[0]] + (ft.dataTypes[0] !== "*" ? ", " + bs + "; q=0.01" : "") : ft.accepts["*"]);
                for (gt in ft.headers) pe.setRequestHeader(gt, ft.headers[gt]);
                if (ft.beforeSend && (ft.beforeSend.call(wt, pe, ft) === !1 || W)) return pe.abort();
                if (Be = "abort", Qt.add(ft.complete), pe.done(ft.success), pe.fail(ft.error), u = xs(Nr, ft, s, pe), !u) xn(-1, "No Transport");
                else {
                    if (pe.readyState = 1, rt && ne.trigger("ajaxSend", [pe, ft]), W) return pe;
                    ft.async && ft.timeout > 0 && (T = t.setTimeout(function() {
                        pe.abort("timeout")
                    }, ft.timeout));
                    try {
                        W = !1, u.send(tn, xn)
                    } catch (Ae) {
                        if (W) throw Ae;
                        xn(-1, Ae)
                    }
                }

                function xn(Ae, Ge, Di, Ki) {
                    var On, ui, hi, En, Yn, Mn = Ge;
                    W || (W = !0, T && t.clearTimeout(T), u = void 0, b = Ki || "", pe.readyState = Ae > 0 ? 4 : 0, On = Ae >= 200 && Ae < 300 || Ae === 304, Di && (En = Mo(ft, pe, Di)), !On && d.inArray("script", ft.dataTypes) > -1 && d.inArray("json", ft.dataTypes) < 0 && (ft.converters["text script"] = function() {}), En = Po(ft, En, pe, On), On ? (ft.ifModified && (Yn = pe.getResponseHeader("Last-Modified"), Yn && (d.lastModified[p] = Yn), Yn = pe.getResponseHeader("etag"), Yn && (d.etag[p] = Yn)), Ae === 204 || ft.type === "HEAD" ? Mn = "nocontent" : Ae === 304 ? Mn = "notmodified" : (Mn = En.state, ui = En.data, hi = En.error, On = !hi)) : (hi = Mn, (Ae || !Mn) && (Mn = "error", Ae < 0 && (Ae = 0))), pe.status = Ae, pe.statusText = (Ge || Mn) + "", On ? ye.resolveWith(wt, [ui, Mn, pe]) : ye.rejectWith(wt, [pe, Mn, hi]), pe.statusCode(an), an = void 0, rt && ne.trigger(On ? "ajaxSuccess" : "ajaxError", [pe, ft, On ? ui : hi]), Qt.fireWith(wt, [pe, Mn]), rt && (ne.trigger("ajaxComplete", [pe, ft]), --d.active || d.event.trigger("ajaxStop")))
                }
                return pe
            },
            getJSON: function(r, s, u) {
                return d.get(r, s, u, "json")
            },
            getScript: function(r, s) {
                return d.get(r, void 0, s, "script")
            }
        }), d.each(["get", "post"], function(r, s) {
            d[s] = function(u, p, b, _) {
                return ot(p) && (_ = _ || b, b = p, p = void 0), d.ajax(d.extend({
                    url: u,
                    type: s,
                    dataType: _,
                    data: p,
                    success: b
                }, d.isPlainObject(u) && u))
            }
        }), d.ajaxPrefilter(function(r) {
            var s;
            for (s in r.headers) s.toLowerCase() === "content-type" && (r.contentType = r.headers[s] || "")
        }), d._evalUrl = function(r, s, u) {
            return d.ajax({
                url: r,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                converters: {
                    "text script": function() {}
                },
                dataFilter: function(p) {
                    d.globalEval(p, s, u)
                }
            })
        }, d.fn.extend({
            wrapAll: function(r) {
                var s;
                return this[0] && (ot(r) && (r = r.call(this[0])), s = d(r, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && s.insertBefore(this[0]), s.map(function() {
                    for (var u = this; u.firstElementChild;) u = u.firstElementChild;
                    return u
                }).append(this)), this
            },
            wrapInner: function(r) {
                return ot(r) ? this.each(function(s) {
                    d(this).wrapInner(r.call(this, s))
                }) : this.each(function() {
                    var s = d(this),
                        u = s.contents();
                    u.length ? u.wrapAll(r) : s.append(r)
                })
            },
            wrap: function(r) {
                var s = ot(r);
                return this.each(function(u) {
                    d(this).wrapAll(s ? r.call(this, u) : r)
                })
            },
            unwrap: function(r) {
                return this.parent(r).not("body").each(function() {
                    d(this).replaceWith(this.childNodes)
                }), this
            }
        }), d.expr.pseudos.hidden = function(r) {
            return !d.expr.pseudos.visible(r)
        }, d.expr.pseudos.visible = function(r) {
            return !!(r.offsetWidth || r.offsetHeight || r.getClientRects().length)
        }, d.ajaxSettings.xhr = function() {
            try {
                return new t.XMLHttpRequest
            } catch {}
        };
        var No = {
                0: 200,
                1223: 204
            },
            Li = d.ajaxSettings.xhr();
        V.cors = !!Li && "withCredentials" in Li, V.ajax = Li = !!Li, d.ajaxTransport(function(r) {
            var s, u;
            if (V.cors || Li && !r.crossDomain) return {
                send: function(p, b) {
                    var _, T = r.xhr();
                    if (T.open(r.type, r.url, r.async, r.username, r.password), r.xhrFields)
                        for (_ in r.xhrFields) T[_] = r.xhrFields[_];
                    r.mimeType && T.overrideMimeType && T.overrideMimeType(r.mimeType), !r.crossDomain && !p["X-Requested-With"] && (p["X-Requested-With"] = "XMLHttpRequest");
                    for (_ in p) T.setRequestHeader(_, p[_]);
                    s = function(q) {
                        return function() {
                            s && (s = u = T.onload = T.onerror = T.onabort = T.ontimeout = T.onreadystatechange = null, q === "abort" ? T.abort() : q === "error" ? typeof T.status != "number" ? b(0, "error") : b(T.status, T.statusText) : b(No[T.status] || T.status, T.statusText, (T.responseType || "text") !== "text" || typeof T.responseText != "string" ? {
                                binary: T.response
                            } : {
                                text: T.responseText
                            }, T.getAllResponseHeaders()))
                        }
                    }, T.onload = s(), u = T.onerror = T.ontimeout = s("error"), T.onabort !== void 0 ? T.onabort = u : T.onreadystatechange = function() {
                        T.readyState === 4 && t.setTimeout(function() {
                            s && u()
                        })
                    }, s = s("abort");
                    try {
                        T.send(r.hasContent && r.data || null)
                    } catch (q) {
                        if (s) throw q
                    }
                },
                abort: function() {
                    s && s()
                }
            }
        }), d.ajaxPrefilter(function(r) {
            r.crossDomain && (r.contents.script = !1)
        }), d.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /\b(?:java|ecma)script\b/
            },
            converters: {
                "text script": function(r) {
                    return d.globalEval(r), r
                }
            }
        }), d.ajaxPrefilter("script", function(r) {
            r.cache === void 0 && (r.cache = !1), r.crossDomain && (r.type = "GET")
        }), d.ajaxTransport("script", function(r) {
            if (r.crossDomain || r.scriptAttrs) {
                var s, u;
                return {
                    send: function(p, b) {
                        s = d("<script>").attr(r.scriptAttrs || {}).prop({
                            charset: r.scriptCharset,
                            src: r.url
                        }).on("load error", u = function(_) {
                            s.remove(), u = null, _ && b(_.type === "error" ? 404 : 200, _.type)
                        }), L.head.appendChild(s[0])
                    },
                    abort: function() {
                        u && u()
                    }
                }
            }
        });
        var Vr = [],
            jr = /(=)\?(?=&|$)|\?\?/;
        d.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var r = Vr.pop() || d.expando + "_" + Mr.guid++;
                return this[r] = !0, r
            }
        }), d.ajaxPrefilter("json jsonp", function(r, s, u) {
            var p, b, _, T = r.jsonp !== !1 && (jr.test(r.url) ? "url" : typeof r.data == "string" && (r.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && jr.test(r.data) && "data");
            if (T || r.dataTypes[0] === "jsonp") return p = r.jsonpCallback = ot(r.jsonpCallback) ? r.jsonpCallback() : r.jsonpCallback, T ? r[T] = r[T].replace(jr, "$1" + p) : r.jsonp !== !1 && (r.url += (Yi.test(r.url) ? "&" : "?") + r.jsonp + "=" + p), r.converters["script json"] = function() {
                return _ || d.error(p + " was not called"), _[0]
            }, r.dataTypes[0] = "json", b = t[p], t[p] = function() {
                _ = arguments
            }, u.always(function() {
                b === void 0 ? d(t).removeProp(p) : t[p] = b, r[p] && (r.jsonpCallback = s.jsonpCallback, Vr.push(p)), _ && ot(b) && b(_[0]), _ = b = void 0
            }), "script"
        }), V.createHTMLDocument = function() {
            var r = L.implementation.createHTMLDocument("").body;
            return r.innerHTML = "<form></form><form></form>", r.childNodes.length === 2
        }(), d.parseHTML = function(r, s, u) {
            if (typeof r != "string") return [];
            typeof s == "boolean" && (u = s, s = !1);
            var p, b, _;
            return s || (V.createHTMLDocument ? (s = L.implementation.createHTMLDocument(""), p = s.createElement("base"), p.href = L.location.href, s.head.appendChild(p)) : s = L), b = Jt.exec(r), _ = !u && [], b ? [s.createElement(b[1])] : (b = Bn([r], s, _), _ && _.length && d(_).remove(), d.merge([], b.childNodes))
        }, d.fn.load = function(r, s, u) {
            var p, b, _, T = this,
                q = r.indexOf(" ");
            return q > -1 && (p = oi(r.slice(q)), r = r.slice(0, q)), ot(s) ? (u = s, s = void 0) : s && typeof s == "object" && (b = "POST"), T.length > 0 && d.ajax({
                url: r,
                type: b || "GET",
                dataType: "html",
                data: s
            }).done(function(W) {
                _ = arguments, T.html(p ? d("<div>").append(d.parseHTML(W)).find(p) : W)
            }).always(u && function(W, rt) {
                T.each(function() {
                    u.apply(this, _ || [W.responseText, rt, W])
                })
            }), this
        }, d.expr.pseudos.animated = function(r) {
            return d.grep(d.timers, function(s) {
                return r === s.elem
            }).length
        }, d.offset = {
            setOffset: function(r, s, u) {
                var p, b, _, T, q, W, rt, gt = d.css(r, "position"),
                    Ot = d(r),
                    ft = {};
                gt === "static" && (r.style.position = "relative"), q = Ot.offset(), _ = d.css(r, "top"), W = d.css(r, "left"), rt = (gt === "absolute" || gt === "fixed") && (_ + W).indexOf("auto") > -1, rt ? (p = Ot.position(), T = p.top, b = p.left) : (T = parseFloat(_) || 0, b = parseFloat(W) || 0), ot(s) && (s = s.call(r, u, d.extend({}, q))), s.top != null && (ft.top = s.top - q.top + T), s.left != null && (ft.left = s.left - q.left + b), "using" in s ? s.using.call(r, ft) : Ot.css(ft)
            }
        }, d.fn.extend({
            offset: function(r) {
                if (arguments.length) return r === void 0 ? this : this.each(function(b) {
                    d.offset.setOffset(this, r, b)
                });
                var s, u, p = this[0];
                if (!!p) return p.getClientRects().length ? (s = p.getBoundingClientRect(), u = p.ownerDocument.defaultView, {
                    top: s.top + u.pageYOffset,
                    left: s.left + u.pageXOffset
                }) : {
                    top: 0,
                    left: 0
                }
            },
            position: function() {
                if (!!this[0]) {
                    var r, s, u, p = this[0],
                        b = {
                            top: 0,
                            left: 0
                        };
                    if (d.css(p, "position") === "fixed") s = p.getBoundingClientRect();
                    else {
                        for (s = this.offset(), u = p.ownerDocument, r = p.offsetParent || u.documentElement; r && (r === u.body || r === u.documentElement) && d.css(r, "position") === "static";) r = r.parentNode;
                        r && r !== p && r.nodeType === 1 && (b = d(r).offset(), b.top += d.css(r, "borderTopWidth", !0), b.left += d.css(r, "borderLeftWidth", !0))
                    }
                    return {
                        top: s.top - b.top - d.css(p, "marginTop", !0),
                        left: s.left - b.left - d.css(p, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var r = this.offsetParent; r && d.css(r, "position") === "static";) r = r.offsetParent;
                    return r || sn
                })
            }
        }), d.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(r, s) {
            var u = s === "pageYOffset";
            d.fn[r] = function(p) {
                return g(this, function(b, _, T) {
                    var q;
                    if (m(b) ? q = b : b.nodeType === 9 && (q = b.defaultView), T === void 0) return q ? q[s] : b[_];
                    q ? q.scrollTo(u ? q.pageXOffset : T, u ? T : q.pageYOffset) : b[_] = T
                }, r, p, arguments.length)
            }
        }), d.each(["top", "left"], function(r, s) {
            d.cssHooks[s] = w(V.pixelPosition, function(u, p) {
                if (p) return p = ce(u, s), Cn.test(p) ? d(u).position()[s] + "px" : p
            })
        }), d.each({
            Height: "height",
            Width: "width"
        }, function(r, s) {
            d.each({
                padding: "inner" + r,
                content: s,
                "": "outer" + r
            }, function(u, p) {
                d.fn[p] = function(b, _) {
                    var T = arguments.length && (u || typeof b != "boolean"),
                        q = u || (b === !0 || _ === !0 ? "margin" : "border");
                    return g(this, function(W, rt, gt) {
                        var Ot;
                        return m(W) ? p.indexOf("outer") === 0 ? W["inner" + r] : W.document.documentElement["client" + r] : W.nodeType === 9 ? (Ot = W.documentElement, Math.max(W.body["scroll" + r], Ot["scroll" + r], W.body["offset" + r], Ot["offset" + r], Ot["client" + r])) : gt === void 0 ? d.css(W, rt, q) : d.style(W, rt, gt, q)
                    }, s, T ? b : void 0, T)
                }
            })
        }), d.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(r, s) {
            d.fn[s] = function(u) {
                return this.on(s, u)
            }
        }), d.fn.extend({
            bind: function(r, s, u) {
                return this.on(r, null, s, u)
            },
            unbind: function(r, s) {
                return this.off(r, null, s)
            },
            delegate: function(r, s, u, p) {
                return this.on(s, r, u, p)
            },
            undelegate: function(r, s, u) {
                return arguments.length === 1 ? this.off(r, "**") : this.off(s, r || "**", u)
            },
            hover: function(r, s) {
                return this.mouseenter(r).mouseleave(s || r)
            }
        }), d.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(r, s) {
            d.fn[s] = function(u, p) {
                return arguments.length > 0 ? this.on(s, null, u, p) : this.trigger(s)
            }
        });
        var Es = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        d.proxy = function(r, s) {
            var u, p, b;
            if (typeof s == "string" && (u = r[s], s = r, r = u), !!ot(r)) return p = f.call(arguments, 2), b = function() {
                return r.apply(s || this, p.concat(f.call(arguments)))
            }, b.guid = r.guid = r.guid || d.guid++, b
        }, d.holdReady = function(r) {
            r ? d.readyWait++ : d.ready(!0)
        }, d.isArray = Array.isArray, d.parseJSON = JSON.parse, d.nodeName = et, d.isFunction = ot, d.isWindow = m, d.camelCase = j, d.type = ht, d.now = Date.now, d.isNumeric = function(r) {
            var s = d.type(r);
            return (s === "number" || s === "string") && !isNaN(r - parseFloat(r))
        }, d.trim = function(r) {
            return r == null ? "" : (r + "").replace(Es, "")
        };
        var Bo = t.jQuery,
            $o = t.$;
        return d.noConflict = function(r) {
            return t.$ === d && (t.$ = $o), r && t.jQuery === d && (t.jQuery = Bo), d
        }, typeof n > "u" && (t.jQuery = t.$ = d), d
    })
})(Na);
const lt = Na.exports;
var we = {};
(function(e) {
    (function(t) {
        var n = typeof self == "object" && self.self === self && self || typeof Re == "object" && Re.global === Re && Re; {
            var i = Ui.exports,
                o;
            try {
                o = Na.exports
            } catch {}
            t(n, e, i, o)
        }
    })(function(t, n, i, o) {
        var f = t.Backbone,
            v = Array.prototype.slice;
        n.VERSION = "1.3.3", n.$ = o, n.noConflict = function() {
            return t.Backbone = f, this
        }, n.emulateHTTP = !1, n.emulateJSON = !1;
        var y = function(E, l, g) {
                switch (E) {
                    case 1:
                        return function() {
                            return i[l](this[g])
                        };
                    case 2:
                        return function(S) {
                            return i[l](this[g], S)
                        };
                    case 3:
                        return function(S, R) {
                            return i[l](this[g], A(S, this), R)
                        };
                    case 4:
                        return function(S, R, P) {
                            return i[l](this[g], A(S, this), R, P)
                        };
                    default:
                        return function() {
                            var S = v.call(arguments);
                            return S.unshift(this[g]), i[l].apply(i, S)
                        }
                }
            },
            k = function(E, l, g) {
                i.each(l, function(S, R) {
                    i[R] && (E.prototype[R] = y(S, R, g))
                })
            },
            A = function(E, l) {
                return i.isFunction(E) ? E : i.isObject(E) && !l._isModel(E) ? D(E) : i.isString(E) ? function(g) {
                    return g.get(E)
                } : E
            },
            D = function(E) {
                var l = i.matches(E);
                return function(g) {
                    return l(g.attributes)
                }
            },
            $ = n.Events = {},
            tt = /\s+/,
            st = function(E, l, g, S, R) {
                var P = 0,
                    j;
                if (g && typeof g == "object")
                    for (S !== void 0 && ("context" in R) && R.context === void 0 && (R.context = S), j = i.keys(g); P < j.length; P++) l = st(E, l, j[P], g[j[P]], R);
                else if (g && tt.test(g))
                    for (j = g.split(tt); P < j.length; P++) l = E(l, j[P], S, R);
                else l = E(l, g, S, R);
                return l
            };
        $.on = function(E, l, g) {
            return V(this, E, l, g)
        };
        var V = function(E, l, g, S, R) {
            if (E._events = st(ot, E._events || {}, l, g, {
                    context: S,
                    ctx: E,
                    listening: R
                }), R) {
                var P = E._listeners || (E._listeners = {});
                P[R.id] = R
            }
            return E
        };
        $.listenTo = function(E, l, g) {
            if (!E) return this;
            var S = E._listenId || (E._listenId = i.uniqueId("l")),
                R = this._listeningTo || (this._listeningTo = {}),
                P = R[S];
            if (!P) {
                var j = this._listenId || (this._listenId = i.uniqueId("l"));
                P = R[S] = {
                    obj: E,
                    objId: S,
                    id: j,
                    listeningTo: R,
                    count: 0
                }
            }
            return V(E, l, g, this, P), this
        };
        var ot = function(E, l, g, S) {
            if (g) {
                var R = E[l] || (E[l] = []),
                    P = S.context,
                    j = S.ctx,
                    ct = S.listening;
                ct && ct.count++, R.push({
                    callback: g,
                    context: P,
                    ctx: P || j,
                    listening: ct
                })
            }
            return E
        };
        $.off = function(E, l, g) {
            return this._events ? (this._events = st(m, this._events, E, l, {
                context: g,
                listeners: this._listeners
            }), this) : this
        }, $.stopListening = function(E, l, g) {
            var S = this._listeningTo;
            if (!S) return this;
            for (var R = E ? [E._listenId] : i.keys(S), P = 0; P < R.length; P++) {
                var j = S[R[P]];
                if (!j) break;
                j.obj.off(l, g, this)
            }
            return this
        };
        var m = function(E, l, g, S) {
            if (!!E) {
                var R = 0,
                    P, j = S.context,
                    ct = S.listeners;
                if (!l && !g && !j) {
                    for (var Mt = i.keys(ct); R < Mt.length; R++) P = ct[Mt[R]], delete ct[P.id], delete P.listeningTo[P.objId];
                    return
                }
                for (var yt = l ? [l] : i.keys(E); R < yt.length; R++) {
                    l = yt[R];
                    var Ft = E[l];
                    if (!Ft) break;
                    for (var Ht = [], fe = 0; fe < Ft.length; fe++) {
                        var Le = Ft[fe];
                        g && g !== Le.callback && g !== Le.callback._callback || j && j !== Le.context ? Ht.push(Le) : (P = Le.listening, P && --P.count === 0 && (delete ct[P.id], delete P.listeningTo[P.objId]))
                    }
                    Ht.length ? E[l] = Ht : delete E[l]
                }
                return E
            }
        };
        $.once = function(E, l, g) {
            var S = st(L, {}, E, l, i.bind(this.off, this));
            return typeof E == "string" && g == null && (l = void 0), this.on(S, l, g)
        }, $.listenToOnce = function(E, l, g) {
            var S = st(L, {}, l, g, i.bind(this.stopListening, this, E));
            return this.listenTo(E, S)
        };
        var L = function(E, l, g, S) {
            if (g) {
                var R = E[l] = i.once(function() {
                    S(l, R), g.apply(this, arguments)
                });
                R._callback = g
            }
            return E
        };
        $.trigger = function(E) {
            if (!this._events) return this;
            for (var l = Math.max(0, arguments.length - 1), g = Array(l), S = 0; S < l; S++) g[S] = arguments[S + 1];
            return st(X, this._events, E, void 0, g), this
        };
        var X = function(E, l, g, S) {
                if (E) {
                    var R = E[l],
                        P = E.all;
                    R && P && (P = P.slice()), R && ut(R, S), P && ut(P, [l].concat(S))
                }
                return E
            },
            ut = function(E, l) {
                var g, S = -1,
                    R = E.length,
                    P = l[0],
                    j = l[1],
                    ct = l[2];
                switch (l.length) {
                    case 0:
                        for (; ++S < R;)(g = E[S]).callback.call(g.ctx);
                        return;
                    case 1:
                        for (; ++S < R;)(g = E[S]).callback.call(g.ctx, P);
                        return;
                    case 2:
                        for (; ++S < R;)(g = E[S]).callback.call(g.ctx, P, j);
                        return;
                    case 3:
                        for (; ++S < R;)(g = E[S]).callback.call(g.ctx, P, j, ct);
                        return;
                    default:
                        for (; ++S < R;)(g = E[S]).callback.apply(g.ctx, l);
                        return
                }
            };
        $.bind = $.on, $.unbind = $.off, i.extend(n, $);
        var ht = n.Model = function(E, l) {
            var g = E || {};
            l || (l = {}), this.cid = i.uniqueId(this.cidPrefix), this.attributes = {}, l.collection && (this.collection = l.collection), l.parse && (g = this.parse(g, l) || {});
            var S = i.result(this, "defaults");
            g = i.defaults(i.extend({}, S, g), S), this.set(g, l), this.changed = {}, this.initialize.apply(this, arguments)
        };
        i.extend(ht.prototype, $, {
            changed: null,
            validationError: null,
            idAttribute: "id",
            cidPrefix: "c",
            initialize: function() {},
            toJSON: function(E) {
                return i.clone(this.attributes)
            },
            sync: function() {
                return n.sync.apply(this, arguments)
            },
            get: function(E) {
                return this.attributes[E]
            },
            escape: function(E) {
                return i.escape(this.get(E))
            },
            has: function(E) {
                return this.get(E) != null
            },
            matches: function(E) {
                return !!i.iteratee(E, this)(this.attributes)
            },
            set: function(E, l, g) {
                if (E == null) return this;
                var S;
                if (typeof E == "object" ? (S = E, g = l) : (S = {})[E] = l, g || (g = {}), !this._validate(S, g)) return !1;
                var R = g.unset,
                    P = g.silent,
                    j = [],
                    ct = this._changing;
                this._changing = !0, ct || (this._previousAttributes = i.clone(this.attributes), this.changed = {});
                var Mt = this.attributes,
                    yt = this.changed,
                    Ft = this._previousAttributes;
                for (var Ht in S) l = S[Ht], i.isEqual(Mt[Ht], l) || j.push(Ht), i.isEqual(Ft[Ht], l) ? delete yt[Ht] : yt[Ht] = l, R ? delete Mt[Ht] : Mt[Ht] = l;
                if (this.idAttribute in S && (this.id = this.get(this.idAttribute)), !P) {
                    j.length && (this._pending = g);
                    for (var fe = 0; fe < j.length; fe++) this.trigger("change:" + j[fe], this, Mt[j[fe]], g)
                }
                if (ct) return this;
                if (!P)
                    for (; this._pending;) g = this._pending, this._pending = !1, this.trigger("change", this, g);
                return this._pending = !1, this._changing = !1, this
            },
            unset: function(E, l) {
                return this.set(E, void 0, i.extend({}, l, {
                    unset: !0
                }))
            },
            clear: function(E) {
                var l = {};
                for (var g in this.attributes) l[g] = void 0;
                return this.set(l, i.extend({}, E, {
                    unset: !0
                }))
            },
            hasChanged: function(E) {
                return E == null ? !i.isEmpty(this.changed) : i.has(this.changed, E)
            },
            changedAttributes: function(E) {
                if (!E) return this.hasChanged() ? i.clone(this.changed) : !1;
                var l = this._changing ? this._previousAttributes : this.attributes,
                    g = {};
                for (var S in E) {
                    var R = E[S];
                    i.isEqual(l[S], R) || (g[S] = R)
                }
                return i.size(g) ? g : !1
            },
            previous: function(E) {
                return E == null || !this._previousAttributes ? null : this._previousAttributes[E]
            },
            previousAttributes: function() {
                return i.clone(this._previousAttributes)
            },
            fetch: function(E) {
                E = i.extend({
                    parse: !0
                }, E);
                var l = this,
                    g = E.success;
                return E.success = function(S) {
                    var R = E.parse ? l.parse(S, E) : S;
                    if (!l.set(R, E)) return !1;
                    g && g.call(E.context, l, S, E), l.trigger("sync", l, S, E)
                }, nn(this, E), this.sync("read", this, E)
            },
            save: function(E, l, g) {
                var S;
                E == null || typeof E == "object" ? (S = E, g = l) : (S = {})[E] = l, g = i.extend({
                    validate: !0,
                    parse: !0
                }, g);
                var R = g.wait;
                if (S && !R) {
                    if (!this.set(S, g)) return !1
                } else if (!this._validate(S, g)) return !1;
                var P = this,
                    j = g.success,
                    ct = this.attributes;
                g.success = function(Ft) {
                    P.attributes = ct;
                    var Ht = g.parse ? P.parse(Ft, g) : Ft;
                    if (R && (Ht = i.extend({}, S, Ht)), Ht && !P.set(Ht, g)) return !1;
                    j && j.call(g.context, P, Ft, g), P.trigger("sync", P, Ft, g)
                }, nn(this, g), S && R && (this.attributes = i.extend({}, ct, S));
                var Mt = this.isNew() ? "create" : g.patch ? "patch" : "update";
                Mt === "patch" && !g.attrs && (g.attrs = S);
                var yt = this.sync(Mt, this, g);
                return this.attributes = ct, yt
            },
            destroy: function(E) {
                E = E ? i.clone(E) : {};
                var l = this,
                    g = E.success,
                    S = E.wait,
                    R = function() {
                        l.stopListening(), l.trigger("destroy", l, l.collection, E)
                    };
                E.success = function(j) {
                    S && R(), g && g.call(E.context, l, j, E), l.isNew() || l.trigger("sync", l, j, E)
                };
                var P = !1;
                return this.isNew() ? i.defer(E.success) : (nn(this, E), P = this.sync("delete", this, E)), S || R(), P
            },
            url: function() {
                var E = i.result(this, "urlRoot") || i.result(this.collection, "url") || Ye();
                if (this.isNew()) return E;
                var l = this.get(this.idAttribute);
                return E.replace(/[^\/]$/, "$&/") + encodeURIComponent(l)
            },
            parse: function(E, l) {
                return E
            },
            clone: function() {
                return new this.constructor(this.attributes)
            },
            isNew: function() {
                return !this.has(this.idAttribute)
            },
            isValid: function(E) {
                return this._validate({}, i.extend({}, E, {
                    validate: !0
                }))
            },
            _validate: function(E, l) {
                if (!l.validate || !this.validate) return !0;
                E = i.extend({}, this.attributes, E);
                var g = this.validationError = this.validate(E, l) || null;
                return g ? (this.trigger("invalid", this, g, i.extend(l, {
                    validationError: g
                })), !1) : !0
            }
        });
        var bt = {
            keys: 1,
            values: 1,
            pairs: 1,
            invert: 1,
            pick: 0,
            omit: 0,
            chain: 1,
            isEmpty: 1
        };
        k(ht, bt, "attributes");
        var d = n.Collection = function(E, l) {
                l || (l = {}), l.model && (this.model = l.model), l.comparator !== void 0 && (this.comparator = l.comparator), this._reset(), this.initialize.apply(this, arguments), E && this.reset(E, i.extend({
                    silent: !0
                }, l))
            },
            kt = {
                add: !0,
                remove: !0,
                merge: !0
            },
            Vt = {
                add: !0,
                remove: !1
            },
            Pt = function(E, l, g) {
                g = Math.min(Math.max(g, 0), E.length);
                var S = Array(E.length - g),
                    R = l.length,
                    P;
                for (P = 0; P < S.length; P++) S[P] = E[P + g];
                for (P = 0; P < R; P++) E[P + g] = l[P];
                for (P = 0; P < S.length; P++) E[P + R + g] = S[P]
            };
        i.extend(d.prototype, $, {
            model: ht,
            initialize: function() {},
            toJSON: function(E) {
                return this.map(function(l) {
                    return l.toJSON(E)
                })
            },
            sync: function() {
                return n.sync.apply(this, arguments)
            },
            add: function(E, l) {
                return this.set(E, i.extend({
                    merge: !1
                }, l, Vt))
            },
            remove: function(E, l) {
                l = i.extend({}, l);
                var g = !i.isArray(E);
                E = g ? [E] : E.slice();
                var S = this._removeModels(E, l);
                return !l.silent && S.length && (l.changes = {
                    added: [],
                    merged: [],
                    removed: S
                }, this.trigger("update", this, l)), g ? S[0] : S
            },
            set: function(E, l) {
                if (E != null) {
                    l = i.extend({}, kt, l), l.parse && !this._isModel(E) && (E = this.parse(E, l) || []);
                    var g = !i.isArray(E);
                    E = g ? [E] : E.slice();
                    var S = l.at;
                    S != null && (S = +S), S > this.length && (S = this.length), S < 0 && (S += this.length + 1);
                    var R = [],
                        P = [],
                        j = [],
                        ct = [],
                        Mt = {},
                        yt = l.add,
                        Ft = l.merge,
                        Ht = l.remove,
                        fe = !1,
                        Le = this.comparator && S == null && l.sort !== !1,
                        hn = i.isString(this.comparator) ? this.comparator : null,
                        be, ke;
                    for (ke = 0; ke < E.length; ke++) {
                        be = E[ke];
                        var Te = this.get(be);
                        if (Te) {
                            if (Ft && be !== Te) {
                                var sn = this._isModel(be) ? be.attributes : be;
                                l.parse && (sn = Te.parse(sn, l)), Te.set(sn, l), j.push(Te), Le && !fe && (fe = Te.hasChanged(hn))
                            }
                            Mt[Te.cid] || (Mt[Te.cid] = !0, R.push(Te)), E[ke] = Te
                        } else yt && (be = E[ke] = this._prepareModel(be, l), be && (P.push(be), this._addReference(be, l), Mt[be.cid] = !0, R.push(be)))
                    }
                    if (Ht) {
                        for (ke = 0; ke < this.length; ke++) be = this.models[ke], Mt[be.cid] || ct.push(be);
                        ct.length && this._removeModels(ct, l)
                    }
                    var oe = !1,
                        Ue = !Le && yt && Ht;
                    if (R.length && Ue ? (oe = this.length !== R.length || i.some(this.models, function(H, N) {
                            return H !== R[N]
                        }), this.models.length = 0, Pt(this.models, R, 0), this.length = this.models.length) : P.length && (Le && (fe = !0), Pt(this.models, P, S == null ? this.length : S), this.length = this.models.length), fe && this.sort({
                            silent: !0
                        }), !l.silent) {
                        for (ke = 0; ke < P.length; ke++) S != null && (l.index = S + ke), be = P[ke], be.trigger("add", be, this, l);
                        (fe || oe) && this.trigger("sort", this, l), (P.length || ct.length || j.length) && (l.changes = {
                            added: P,
                            removed: ct,
                            merged: j
                        }, this.trigger("update", this, l))
                    }
                    return g ? E[0] : E
                }
            },
            reset: function(E, l) {
                l = l ? i.clone(l) : {};
                for (var g = 0; g < this.models.length; g++) this._removeReference(this.models[g], l);
                return l.previousModels = this.models, this._reset(), E = this.add(E, i.extend({
                    silent: !0
                }, l)), l.silent || this.trigger("reset", this, l), E
            },
            push: function(E, l) {
                return this.add(E, i.extend({
                    at: this.length
                }, l))
            },
            pop: function(E) {
                var l = this.at(this.length - 1);
                return this.remove(l, E)
            },
            unshift: function(E, l) {
                return this.add(E, i.extend({
                    at: 0
                }, l))
            },
            shift: function(E) {
                var l = this.at(0);
                return this.remove(l, E)
            },
            slice: function() {
                return v.apply(this.models, arguments)
            },
            get: function(E) {
                if (E != null) return this._byId[E] || this._byId[this.modelId(E.attributes || E)] || E.cid && this._byId[E.cid]
            },
            has: function(E) {
                return this.get(E) != null
            },
            at: function(E) {
                return E < 0 && (E += this.length), this.models[E]
            },
            where: function(E, l) {
                return this[l ? "find" : "filter"](E)
            },
            findWhere: function(E) {
                return this.where(E, !0)
            },
            sort: function(E) {
                var l = this.comparator;
                if (!l) throw new Error("Cannot sort a set without a comparator");
                E || (E = {});
                var g = l.length;
                return i.isFunction(l) && (l = i.bind(l, this)), g === 1 || i.isString(l) ? this.models = this.sortBy(l) : this.models.sort(l), E.silent || this.trigger("sort", this, E), this
            },
            pluck: function(E) {
                return this.map(E + "")
            },
            fetch: function(E) {
                E = i.extend({
                    parse: !0
                }, E);
                var l = E.success,
                    g = this;
                return E.success = function(S) {
                    var R = E.reset ? "reset" : "set";
                    g[R](S, E), l && l.call(E.context, g, S, E), g.trigger("sync", g, S, E)
                }, nn(this, E), this.sync("read", this, E)
            },
            create: function(E, l) {
                l = l ? i.clone(l) : {};
                var g = l.wait;
                if (E = this._prepareModel(E, l), !E) return !1;
                g || this.add(E, l);
                var S = this,
                    R = l.success;
                return l.success = function(P, j, ct) {
                    g && S.add(P, ct), R && R.call(ct.context, P, j, ct)
                }, E.save(null, l), E
            },
            parse: function(E, l) {
                return E
            },
            clone: function() {
                return new this.constructor(this.models, {
                    model: this.model,
                    comparator: this.comparator
                })
            },
            modelId: function(E) {
                return E[this.model.prototype.idAttribute || "id"]
            },
            _reset: function() {
                this.length = 0, this.models = [], this._byId = {}
            },
            _prepareModel: function(E, l) {
                if (this._isModel(E)) return E.collection || (E.collection = this), E;
                l = l ? i.clone(l) : {}, l.collection = this;
                var g = new this.model(E, l);
                return g.validationError ? (this.trigger("invalid", this, g.validationError, l), !1) : g
            },
            _removeModels: function(E, l) {
                for (var g = [], S = 0; S < E.length; S++) {
                    var R = this.get(E[S]);
                    if (!!R) {
                        var P = this.indexOf(R);
                        this.models.splice(P, 1), this.length--, delete this._byId[R.cid];
                        var j = this.modelId(R.attributes);
                        j != null && delete this._byId[j], l.silent || (l.index = P, R.trigger("remove", R, this, l)), g.push(R), this._removeReference(R, l)
                    }
                }
                return g
            },
            _isModel: function(E) {
                return E instanceof ht
            },
            _addReference: function(E, l) {
                this._byId[E.cid] = E;
                var g = this.modelId(E.attributes);
                g != null && (this._byId[g] = E), E.on("all", this._onModelEvent, this)
            },
            _removeReference: function(E, l) {
                delete this._byId[E.cid];
                var g = this.modelId(E.attributes);
                g != null && delete this._byId[g], this === E.collection && delete E.collection, E.off("all", this._onModelEvent, this)
            },
            _onModelEvent: function(E, l, g, S) {
                if (l) {
                    if ((E === "add" || E === "remove") && g !== this) return;
                    if (E === "destroy" && this.remove(l, S), E === "change") {
                        var R = this.modelId(l.previousAttributes()),
                            P = this.modelId(l.attributes);
                        R !== P && (R != null && delete this._byId[R], P != null && (this._byId[P] = l))
                    }
                }
                this.trigger.apply(this, arguments)
            }
        });
        var Ce = {
            forEach: 3,
            each: 3,
            map: 3,
            collect: 3,
            reduce: 0,
            foldl: 0,
            inject: 0,
            reduceRight: 0,
            foldr: 0,
            find: 3,
            detect: 3,
            filter: 3,
            select: 3,
            reject: 3,
            every: 3,
            all: 3,
            some: 3,
            any: 3,
            include: 3,
            includes: 3,
            contains: 3,
            invoke: 0,
            max: 3,
            min: 3,
            toArray: 1,
            size: 1,
            first: 3,
            head: 3,
            take: 3,
            initial: 3,
            rest: 3,
            tail: 3,
            drop: 3,
            last: 3,
            without: 0,
            difference: 0,
            indexOf: 3,
            shuffle: 1,
            lastIndexOf: 3,
            isEmpty: 1,
            chain: 1,
            sample: 3,
            partition: 3,
            groupBy: 3,
            countBy: 3,
            sortBy: 3,
            indexBy: 3,
            findIndex: 3,
            findLastIndex: 3
        };
        k(d, Ce, "models");
        var Xt = n.View = function(E) {
                this.cid = i.uniqueId("view"), i.extend(this, i.pick(E, Jt)), this._ensureElement(), this.initialize.apply(this, arguments)
            },
            et = /^(\S+)\s*(.*)$/,
            Jt = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
        i.extend(Xt.prototype, $, {
            tagName: "div",
            $: function(E) {
                return this.$el.find(E)
            },
            initialize: function() {},
            render: function() {
                return this
            },
            remove: function() {
                return this._removeElement(), this.stopListening(), this
            },
            _removeElement: function() {
                this.$el.remove()
            },
            setElement: function(E) {
                return this.undelegateEvents(), this._setElement(E), this.delegateEvents(), this
            },
            _setElement: function(E) {
                this.$el = E instanceof n.$ ? E : n.$(E), this.el = this.$el[0]
            },
            delegateEvents: function(E) {
                if (E || (E = i.result(this, "events")), !E) return this;
                this.undelegateEvents();
                for (var l in E) {
                    var g = E[l];
                    if (i.isFunction(g) || (g = this[g]), !!g) {
                        var S = l.match(et);
                        this.delegate(S[1], S[2], i.bind(g, this))
                    }
                }
                return this
            },
            delegate: function(E, l, g) {
                return this.$el.on(E + ".delegateEvents" + this.cid, l, g), this
            },
            undelegateEvents: function() {
                return this.$el && this.$el.off(".delegateEvents" + this.cid), this
            },
            undelegate: function(E, l, g) {
                return this.$el.off(E + ".delegateEvents" + this.cid, l, g), this
            },
            _createElement: function(E) {
                return document.createElement(E)
            },
            _ensureElement: function() {
                if (this.el) this.setElement(i.result(this, "el"));
                else {
                    var E = i.extend({}, i.result(this, "attributes"));
                    this.id && (E.id = i.result(this, "id")), this.className && (E.class = i.result(this, "className")), this.setElement(this._createElement(i.result(this, "tagName"))), this._setAttributes(E)
                }
            },
            _setAttributes: function(E) {
                this.$el.attr(E)
            }
        }), n.sync = function(E, l, g) {
            var S = G[E];
            i.defaults(g || (g = {}), {
                emulateHTTP: n.emulateHTTP,
                emulateJSON: n.emulateJSON
            });
            var R = {
                type: S,
                dataType: "json"
            };
            if (g.url || (R.url = i.result(l, "url") || Ye()), g.data == null && l && (E === "create" || E === "update" || E === "patch") && (R.contentType = "application/json", R.data = JSON.stringify(g.attrs || l.toJSON(g))), g.emulateJSON && (R.contentType = "application/x-www-form-urlencoded", R.data = R.data ? {
                    model: R.data
                } : {}), g.emulateHTTP && (S === "PUT" || S === "DELETE" || S === "PATCH")) {
                R.type = "POST", g.emulateJSON && (R.data._method = S);
                var P = g.beforeSend;
                g.beforeSend = function(Mt) {
                    if (Mt.setRequestHeader("X-HTTP-Method-Override", S), P) return P.apply(this, arguments)
                }
            }
            R.type !== "GET" && !g.emulateJSON && (R.processData = !1);
            var j = g.error;
            g.error = function(Mt, yt, Ft) {
                g.textStatus = yt, g.errorThrown = Ft, j && j.call(g.context, Mt, yt, Ft)
            };
            var ct = g.xhr = n.ajax(i.extend(R, g));
            return l.trigger("request", l, ct, g), ct
        };
        var G = {
            create: "POST",
            update: "PUT",
            patch: "PATCH",
            delete: "DELETE",
            read: "GET"
        };
        n.ajax = function() {
            return n.$.ajax.apply(n.$, arguments)
        };
        var pt = n.Router = function(E) {
                E || (E = {}), E.routes && (this.routes = E.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
            },
            $t = /\((.*?)\)/g,
            At = /(\(\?)?:\w+/g,
            Tt = /\*\w+/g,
            vt = /[\-{}\[\]+?.,\\\^$|#\s]/g;
        i.extend(pt.prototype, $, {
            initialize: function() {},
            route: function(E, l, g) {
                i.isRegExp(E) || (E = this._routeToRegExp(E)), i.isFunction(l) && (g = l, l = ""), g || (g = this[l]);
                var S = this;
                return n.history.route(E, function(R) {
                    var P = S._extractParameters(E, R);
                    S.execute(g, P, l) !== !1 && (S.trigger.apply(S, ["route:" + l].concat(P)), S.trigger("route", l, P), n.history.trigger("route", S, l, P))
                }), this
            },
            execute: function(E, l, g) {
                E && E.apply(this, l)
            },
            navigate: function(E, l) {
                return n.history.navigate(E, l), this
            },
            _bindRoutes: function() {
                if (!!this.routes) {
                    this.routes = i.result(this, "routes");
                    for (var E, l = i.keys(this.routes);
                        (E = l.pop()) != null;) this.route(E, this.routes[E])
                }
            },
            _routeToRegExp: function(E) {
                return E = E.replace(vt, "\\$&").replace($t, "(?:$1)?").replace(At, function(l, g) {
                    return g ? l : "([^/?]+)"
                }).replace(Tt, "([^?]*?)"), new RegExp("^" + E + "(?:\\?([\\s\\S]*))?$")
            },
            _extractParameters: function(E, l) {
                var g = E.exec(l).slice(1);
                return i.map(g, function(S, R) {
                    return R === g.length - 1 ? S || null : S ? decodeURIComponent(S) : null
                })
            }
        });
        var Dt = n.History = function() {
                this.handlers = [], this.checkUrl = i.bind(this.checkUrl, this), typeof window < "u" && (this.location = window.location, this.history = window.history)
            },
            Nt = /^[#\/]|\s+$/g,
            Kt = /^\/+|\/+$/g,
            le = /#.*$/;
        Dt.started = !1, i.extend(Dt.prototype, $, {
            interval: 50,
            atRoot: function() {
                var E = this.location.pathname.replace(/[^\/]$/, "$&/");
                return E === this.root && !this.getSearch()
            },
            matchRoot: function() {
                var E = this.decodeFragment(this.location.pathname),
                    l = E.slice(0, this.root.length - 1) + "/";
                return l === this.root
            },
            decodeFragment: function(E) {
                return decodeURI(E.replace(/%25/g, "%2525"))
            },
            getSearch: function() {
                var E = this.location.href.replace(/#.*/, "").match(/\?.+/);
                return E ? E[0] : ""
            },
            getHash: function(E) {
                var l = (E || this).location.href.match(/#(.*)$/);
                return l ? l[1] : ""
            },
            getPath: function() {
                var E = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
                return E.charAt(0) === "/" ? E.slice(1) : E
            },
            getFragment: function(E) {
                return E == null && (this._usePushState || !this._wantsHashChange ? E = this.getPath() : E = this.getHash()), E.replace(Nt, "")
            },
            start: function(E) {
                if (Dt.started) throw new Error("Backbone.history has already been started");
                if (Dt.started = !0, this.options = i.extend({
                        root: "/"
                    }, this.options, E), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._hasHashChange = "onhashchange" in window && (document.documentMode === void 0 || document.documentMode > 7), this._useHashChange = this._wantsHashChange && this._hasHashChange, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.history && this.history.pushState), this._usePushState = this._wantsPushState && this._hasPushState, this.fragment = this.getFragment(), this.root = ("/" + this.root + "/").replace(Kt, "/"), this._wantsHashChange && this._wantsPushState)
                    if (!this._hasPushState && !this.atRoot()) {
                        var l = this.root.slice(0, -1) || "/";
                        return this.location.replace(l + "#" + this.getPath()), !0
                    } else this._hasPushState && this.atRoot() && this.navigate(this.getHash(), {
                        replace: !0
                    });
                if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
                    this.iframe = document.createElement("iframe"), this.iframe.src = "javascript:0", this.iframe.style.display = "none", this.iframe.tabIndex = -1;
                    var g = document.body,
                        S = g.insertBefore(this.iframe, g.firstChild).contentWindow;
                    S.document.open(), S.document.close(), S.location.hash = "#" + this.fragment
                }
                var R = window.addEventListener || function(P, j) {
                    return attachEvent("on" + P, j)
                };
                if (this._usePushState ? R("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe ? R("hashchange", this.checkUrl, !1) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), !this.options.silent) return this.loadUrl()
            },
            stop: function() {
                var E = window.removeEventListener || function(l, g) {
                    return detachEvent("on" + l, g)
                };
                this._usePushState ? E("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe && E("hashchange", this.checkUrl, !1), this.iframe && (document.body.removeChild(this.iframe), this.iframe = null), this._checkUrlInterval && clearInterval(this._checkUrlInterval), Dt.started = !1
            },
            route: function(E, l) {
                this.handlers.unshift({
                    route: E,
                    callback: l
                })
            },
            checkUrl: function(E) {
                var l = this.getFragment();
                if (l === this.fragment && this.iframe && (l = this.getHash(this.iframe.contentWindow)), l === this.fragment) return !1;
                this.iframe && this.navigate(l), this.loadUrl()
            },
            loadUrl: function(E) {
                return this.matchRoot() ? (E = this.fragment = this.getFragment(E), i.some(this.handlers, function(l) {
                    if (l.route.test(E)) return l.callback(E), !0
                })) : !1
            },
            navigate: function(E, l) {
                if (!Dt.started) return !1;
                (!l || l === !0) && (l = {
                    trigger: !!l
                }), E = this.getFragment(E || "");
                var g = this.root;
                (E === "" || E.charAt(0) === "?") && (g = g.slice(0, -1) || "/");
                var S = g + E;
                if (E = this.decodeFragment(E.replace(le, "")), this.fragment !== E) {
                    if (this.fragment = E, this._usePushState) this.history[l.replace ? "replaceState" : "pushState"]({}, document.title, S);
                    else if (this._wantsHashChange) {
                        if (this._updateHash(this.location, E, l.replace), this.iframe && E !== this.getHash(this.iframe.contentWindow)) {
                            var R = this.iframe.contentWindow;
                            l.replace || (R.document.open(), R.document.close()), this._updateHash(R.location, E, l.replace)
                        }
                    } else return this.location.assign(S);
                    if (l.trigger) return this.loadUrl(E)
                }
            },
            _updateHash: function(E, l, g) {
                if (g) {
                    var S = E.href.replace(/(javascript:|#).*$/, "");
                    E.replace(S + "#" + l)
                } else E.hash = "#" + l
            }
        }), n.history = new Dt;
        var Ee = function(E, l) {
            var g = this,
                S;
            return E && i.has(E, "constructor") ? S = E.constructor : S = function() {
                return g.apply(this, arguments)
            }, i.extend(S, g, l), S.prototype = i.create(g.prototype, E), S.prototype.constructor = S, S.__super__ = g.prototype, S
        };
        ht.extend = d.extend = pt.extend = Xt.extend = Dt.extend = Ee;
        var Ye = function() {
                throw new Error('A "url" property or function must be specified')
            },
            nn = function(E, l) {
                var g = l.error;
                l.error = function(S) {
                    g && g.call(l.context, E, S, l), E.trigger("error", E, S, l)
                }
            };
        return n
    })
})(we);
var bc = {
        exports: {}
    },
    Jo = {
        exports: {}
    },
    pl;

function wh() {
    return pl || (pl = 1, function(e, t) {
        (function(n, i) {
            e.exports = i(Ui.exports, we)
        })(Re, function(n, i) {
            n = "default" in n ? n.default : n, i = "default" in i ? i.default : i;
            var o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
                    return typeof m
                } : function(m) {
                    return m && typeof Symbol == "function" && m.constructor === Symbol ? "symbol" : typeof m
                },
                f = i.Radio,
                v = i.Radio = {};
            v.VERSION = "2.0.0", v.noConflict = function() {
                return i.Radio = f, this
            }, v.DEBUG = !1, v._debugText = function(m, L, X) {
                return m + (X ? " on the " + X + " channel" : "") + ': "' + L + '"'
            }, v.debugLog = function(m, L, X) {
                v.DEBUG && console && console.warn && console.warn(v._debugText(m, L, X))
            };
            var y = /\s+/;
            v._eventsApi = function(m, L, X, ut) {
                if (!X) return !1;
                var ht = {};
                if ((typeof X > "u" ? "undefined" : o(X)) === "object") {
                    for (var bt in X) {
                        var d = m[L].apply(m, [bt, X[bt]].concat(ut));
                        y.test(bt) ? n.extend(ht, d) : ht[bt] = d
                    }
                    return ht
                }
                if (y.test(X)) {
                    for (var kt = X.split(y), Vt = 0, Pt = kt.length; Vt < Pt; Vt++) ht[kt[Vt]] = m[L].apply(m, [kt[Vt]].concat(ut));
                    return ht
                }
                return !1
            }, v._callHandler = function(m, L, X) {
                var ut = X[0],
                    ht = X[1],
                    bt = X[2];
                switch (X.length) {
                    case 0:
                        return m.call(L);
                    case 1:
                        return m.call(L, ut);
                    case 2:
                        return m.call(L, ut, ht);
                    case 3:
                        return m.call(L, ut, ht, bt);
                    default:
                        return m.apply(L, X)
                }
            };

            function k(m, L, X, ut) {
                var ht = m[L];
                if ((!X || X === ht.callback || X === ht.callback._callback) && (!ut || ut === ht.context)) return delete m[L], !0
            }

            function A(m, L, X, ut) {
                m || (m = {});
                for (var ht = L ? [L] : n.keys(m), bt = !1, d = 0, kt = ht.length; d < kt; d++) L = ht[d], !!m[L] && k(m, L, X, ut) && (bt = !0);
                return bt
            }
            var D = {};

            function $(m) {
                return D[m] || (D[m] = n.bind(v.log, v, m))
            }
            n.extend(v, {
                log: function(L, X) {
                    if (!(typeof console > "u")) {
                        var ut = n.toArray(arguments).slice(2);
                        console.log("[" + L + '] "' + X + '"', ut)
                    }
                },
                tuneIn: function(L) {
                    var X = v.channel(L);
                    return X._tunedIn = !0, X.on("all", $(L)), this
                },
                tuneOut: function(L) {
                    var X = v.channel(L);
                    return X._tunedIn = !1, X.off("all", $(L)), delete D[L], this
                }
            });

            function tt(m) {
                return n.isFunction(m) ? m : function() {
                    return m
                }
            }
            v.Requests = {
                request: function(L) {
                    var X = n.toArray(arguments).slice(1),
                        ut = v._eventsApi(this, "request", L, X);
                    if (ut) return ut;
                    var ht = this.channelName,
                        bt = this._requests;
                    if (ht && this._tunedIn && v.log.apply(this, [ht, L].concat(X)), bt && (bt[L] || bt.default)) {
                        var d = bt[L] || bt.default;
                        return X = bt[L] ? X : arguments, v._callHandler(d.callback, d.context, X)
                    } else v.debugLog("An unhandled request was fired", L, ht)
                },
                reply: function(L, X, ut) {
                    return v._eventsApi(this, "reply", L, [X, ut]) ? this : (this._requests || (this._requests = {}), this._requests[L] && v.debugLog("A request was overwritten", L, this.channelName), this._requests[L] = {
                        callback: tt(X),
                        context: ut || this
                    }, this)
                },
                replyOnce: function(L, X, ut) {
                    if (v._eventsApi(this, "replyOnce", L, [X, ut])) return this;
                    var ht = this,
                        bt = n.once(function() {
                            return ht.stopReplying(L), tt(X).apply(this, arguments)
                        });
                    return this.reply(L, bt, ut)
                },
                stopReplying: function(L, X, ut) {
                    return v._eventsApi(this, "stopReplying", L) ? this : (!L && !X && !ut ? delete this._requests : A(this._requests, L, X, ut) || v.debugLog("Attempted to remove the unregistered request", L, this.channelName), this)
                }
            }, v._channels = {}, v.channel = function(m) {
                if (!m) throw new Error("You must provide a name for the channel.");
                return v._channels[m] ? v._channels[m] : v._channels[m] = new v.Channel(m)
            }, v.Channel = function(m) {
                this.channelName = m
            }, n.extend(v.Channel.prototype, i.Events, v.Requests, {
                reset: function() {
                    return this.off(), this.stopListening(), this.stopReplying(), this
                }
            });
            var st, V, ot = [i.Events, v.Requests];
            return n.each(ot, function(m) {
                n.each(m, function(L, X) {
                    v[X] = function(ut) {
                        return V = n.toArray(arguments).slice(1), st = this.channel(ut), st[X].apply(st, V)
                    }
                })
            }), v.reset = function(m) {
                var L = m ? [this._channels[m]] : this._channels;
                n.each(L, function(X) {
                    X.reset()
                })
            }, v
        })
    }(Jo)), Jo.exports
}
/**
 * @license
 * MarionetteJS (Backbone.Marionette)
 * ----------------------------------
 * v3.5.1
 *
 * Copyright (c)2017 Derick Bailey, Muted Solutions, LLC.
 * Distributed under MIT license
 *
 * http://marionettejs.com
 */
(function(e, t) {
    (function(n, i) {
        e.exports = i(we, Ui.exports, wh())
    })(Re, function(n, i, o) {
        n = n && n.hasOwnProperty("default") ? n.default : n, i = i && i.hasOwnProperty("default") ? i.default : i, o = o && o.hasOwnProperty("default") ? o.default : o;
        var f = "3.5.1",
            v = function(a) {
                return function(x) {
                    for (var O = arguments.length, it = Array(O > 1 ? O - 1 : 0), It = 1; It < O; It++) it[It - 1] = arguments[It];
                    return a.apply(x, it)
                }
            },
            y = n.Model.extend,
            k = function w(a, x) {
                i.isObject(a) && (a = a.prev + " is going to be removed in the future. Please use " + a.next + " instead." + (a.url ? " See: " + a.url : "")), !!ce.DEV_MODE && (x === void 0 || !x) && !w._cache[a] && (w._warn("Deprecation warning: " + a), w._cache[a] = !0)
            };
        k._console = typeof console < "u" ? console : {}, k._warn = function() {
            var w = k._console.warn || k._console.log || i.noop;
            return w.apply(k._console, arguments)
        }, k._cache = {};
        var A = function(a) {
                return document.documentElement.contains(a && a.parentNode)
            },
            D = function(a, x) {
                var O = this;
                !a || i.each(x, function(it) {
                    var It = a[it];
                    It !== void 0 && (O[it] = It)
                })
            },
            $ = function(a) {
                if (!!a) return this.options && this.options[a] !== void 0 ? this.options[a] : this[a]
            },
            tt = function(a) {
                var x = this;
                return i.reduce(a, function(O, it, It) {
                    return i.isFunction(it) || (it = x[it]), it && (O[It] = it), O
                }, {})
            },
            st = /(^|:)(\w)/gi;

        function V(w, a, x) {
            return x.toUpperCase()
        }
        var ot = i.memoize(function(w) {
            return "on" + w.replace(st, V)
        });

        function m(w) {
            for (var a = arguments.length, x = Array(a > 1 ? a - 1 : 0), O = 1; O < a; O++) x[O - 1] = arguments[O];
            var it = ot(w),
                It = $.call(this, it),
                ie = void 0;
            return i.isFunction(It) && (ie = It.apply(this, x)), this.trigger.apply(this, arguments), ie
        }

        function L(w) {
            for (var a = arguments.length, x = Array(a > 1 ? a - 1 : 0), O = 1; O < a; O++) x[O - 1] = arguments[O];
            return i.isFunction(w.triggerMethod) ? w.triggerMethod.apply(w, x) : m.apply(w, x)
        }

        function X(w, a, x) {
            !w._getImmediateChildren || i.each(w._getImmediateChildren(), function(O) {
                !x(O) || L(O, a, O)
            })
        }

        function ut(w) {
            return !w._isAttached
        }

        function ht(w) {
            return ut(w) ? (w._isAttached = !0, !0) : !1
        }

        function bt(w) {
            return w._isAttached
        }

        function d(w) {
            return bt(w) ? (w._isAttached = !1, !0) : !1
        }

        function kt(w) {
            w._isAttached && w._isRendered && L(w, "dom:refresh", w)
        }

        function Vt(w) {
            w._isAttached && w._isRendered && L(w, "dom:remove", w)
        }

        function Pt() {
            X(this, "before:attach", ut)
        }

        function Ce() {
            X(this, "attach", ht), kt(this)
        }

        function Xt() {
            X(this, "before:detach", bt), Vt(this)
        }

        function et() {
            X(this, "detach", d)
        }

        function Jt() {
            Vt(this)
        }

        function G() {
            kt(this)
        }

        function pt(w) {
            w._areViewEventsMonitored || w.monitorViewEvents === !1 || (w._areViewEventsMonitored = !0, w.on({
                "before:attach": Pt,
                attach: Ce,
                "before:detach": Xt,
                detach: et,
                "before:render": Jt,
                render: G
            }))
        }
        var $t = ["description", "fileName", "lineNumber", "name", "message", "number"],
            At = y.call(Error, {
                urlRoot: "http://marionettejs.com/docs/v" + f + "/",
                constructor: function(a, x) {
                    i.isObject(a) ? (x = a, a = x.message) : x || (x = {});
                    var O = Error.call(this, a);
                    i.extend(this, i.pick(O, $t), i.pick(x, $t)), this.captureStackTrace(), x.url && (this.url = this.urlRoot + x.url)
                },
                captureStackTrace: function() {
                    Error.captureStackTrace && Error.captureStackTrace(this, At)
                },
                toString: function() {
                    return this.name + ": " + this.message + (this.url ? " See: " + this.url : "")
                }
            });
        At.extend = y;

        function Tt(w, a, x, O, it) {
            var It = O.split(/\s+/);
            It.length > 1 && k("Multiple handlers for a single event are deprecated. If needed, use a single handler to call multiple methods."), i.each(It, function(ie) {
                var We = w[ie];
                if (!We) throw new At('Method "' + ie + '" was configured as an event handler, but does not exist.');
                w[it](a, x, We)
            })
        }

        function vt(w, a, x, O) {
            if (!i.isObject(x)) throw new At({
                message: "Bindings must be an object.",
                url: "marionette.functions.html#marionettebindevents"
            });
            i.each(x, function(it, It) {
                if (i.isString(it)) {
                    Tt(w, a, It, it, O);
                    return
                }
                w[O](a, It, it)
            })
        }

        function Dt(w, a) {
            return !w || !a ? this : (vt(this, w, a, "listenTo"), this)
        }

        function Nt(w, a) {
            return w ? a ? (vt(this, w, a, "stopListening"), this) : (this.stopListening(w), this) : this
        }

        function Kt(w, a, x, O) {
            if (!i.isObject(x)) throw new At({
                message: "Bindings must be an object.",
                url: "marionette.functions.html#marionettebindrequests"
            });
            var it = tt.call(w, x);
            a[O](it, w)
        }

        function le(w, a) {
            return !w || !a ? this : (Kt(this, w, a, "reply"), this)
        }

        function Ee(w, a) {
            return w ? a ? (Kt(this, w, a, "stopReplying"), this) : (w.stopReplying(null, null, this), this) : this
        }
        var Ye = function(a) {
                this.options = i.extend({}, i.result(this, "options"), a)
            },
            nn = {
                normalizeMethods: tt,
                _setOptions: Ye,
                mergeOptions: D,
                getOption: $,
                bindEvents: Dt,
                unbindEvents: Nt
            },
            E = {
                _initRadio: function() {
                    var a = i.result(this, "channelName");
                    if (!!a) {
                        if (!o) throw new At({
                            name: "BackboneRadioMissing",
                            message: 'The dependency "backbone.radio" is missing.'
                        });
                        var x = this._channel = o.channel(a),
                            O = i.result(this, "radioEvents");
                        this.bindEvents(x, O);
                        var it = i.result(this, "radioRequests");
                        this.bindRequests(x, it), this.on("destroy", this._destroyRadio)
                    }
                },
                _destroyRadio: function() {
                    this._channel.stopReplying(null, null, this)
                },
                getChannel: function() {
                    return this._channel
                },
                bindEvents: Dt,
                unbindEvents: Nt,
                bindRequests: le,
                unbindRequests: Ee
            },
            l = ["channelName", "radioEvents", "radioRequests"],
            g = function(a) {
                this.hasOwnProperty("options") || this._setOptions(a), this.mergeOptions(a, l), this._setCid(), this._initRadio(), this.initialize.apply(this, arguments)
            };
        g.extend = y, i.extend(g.prototype, n.Events, nn, E, {
            cidPrefix: "mno",
            _isDestroyed: !1,
            isDestroyed: function() {
                return this._isDestroyed
            },
            initialize: function() {},
            _setCid: function() {
                this.cid || (this.cid = i.uniqueId(this.cidPrefix))
            },
            destroy: function() {
                if (this._isDestroyed) return this;
                for (var a = arguments.length, x = Array(a), O = 0; O < a; O++) x[O] = arguments[O];
                return this.triggerMethod.apply(this, ["before:destroy", this].concat(x)), this._isDestroyed = !0, this.triggerMethod.apply(this, ["destroy", this].concat(x)), this.stopListening(), this
            },
            triggerMethod: m
        });
        var S = function(a) {
            this.templateId = a
        };
        i.extend(S, {
            templateCaches: {},
            get: function(a, x) {
                var O = this.templateCaches[a];
                return O || (O = new S(a), this.templateCaches[a] = O), O.load(x)
            },
            clear: function() {
                for (var a = void 0, x = arguments.length, O = Array(x), it = 0; it < x; it++) O[it] = arguments[it];
                var It = O.length;
                if (It > 0)
                    for (a = 0; a < It; a++) delete this.templateCaches[O[a]];
                else this.templateCaches = {}
            }
        }), i.extend(S.prototype, {
            load: function(a) {
                if (this.compiledTemplate) return this.compiledTemplate;
                var x = this.loadTemplate(this.templateId, a);
                return this.compiledTemplate = this.compileTemplate(x, a), this.compiledTemplate
            },
            loadTemplate: function(a, x) {
                var O = n.$(a);
                if (!O.length) throw new At({
                    name: "NoTemplateError",
                    message: 'Could not find template: "' + a + '"'
                });
                return O.html()
            },
            compileTemplate: function(a, x) {
                return i.template(a, x)
            }
        });
        var R = i.invokeMap || i.invoke;

        function P(w, a) {
            return w.behaviorClass ? w.behaviorClass : i.isFunction(w) ? w : i.isFunction(ce.Behaviors.behaviorsLookup) ? ce.Behaviors.behaviorsLookup(w, a)[a] : ce.Behaviors.behaviorsLookup[a]
        }

        function j(w, a) {
            return i.chain(a).map(function(x, O) {
                var it = P(x, O),
                    It = x === it ? {} : x,
                    ie = new it(It, w),
                    We = j(w, i.result(ie, "behaviors"));
                return [ie].concat(We)
            }).flatten().value()
        }
        var ct = {
                _initBehaviors: function() {
                    this._behaviors = this._getBehaviors()
                },
                _getBehaviors: function() {
                    var a = i.result(this, "behaviors");
                    return i.isObject(a) ? j(this, a) : {}
                },
                _getBehaviorTriggers: function() {
                    var a = R(this._behaviors, "getTriggers");
                    return i.reduce(a, function(x, O) {
                        return i.extend(x, O)
                    }, {})
                },
                _getBehaviorEvents: function() {
                    var a = R(this._behaviors, "getEvents");
                    return i.reduce(a, function(x, O) {
                        return i.extend(x, O)
                    }, {})
                },
                _proxyBehaviorViewProperties: function() {
                    R(this._behaviors, "proxyViewProperties")
                },
                _delegateBehaviorEntityEvents: function() {
                    R(this._behaviors, "delegateEntityEvents")
                },
                _undelegateBehaviorEntityEvents: function() {
                    R(this._behaviors, "undelegateEntityEvents")
                },
                _destroyBehaviors: function() {
                    for (var a = arguments.length, x = Array(a), O = 0; O < a; O++) x[O] = arguments[O];
                    R.apply(void 0, [this._behaviors, "destroy"].concat(x))
                },
                _removeBehavior: function(a) {
                    this._isDestroyed || (this.undelegate(".trig" + a.cid + " ." + a.cid), this._behaviors = i.without(this._behaviors, a))
                },
                _bindBehaviorUIElements: function() {
                    R(this._behaviors, "bindUIElements")
                },
                _unbindBehaviorUIElements: function() {
                    R(this._behaviors, "unbindUIElements")
                },
                _triggerEventOnBehaviors: function() {
                    for (var a = this._behaviors, x = 0, O = a && a.length; x < O; x++) m.apply(a[x], arguments)
                }
            },
            Mt = {
                _delegateEntityEvents: function(a, x) {
                    var O = i.result(this, "modelEvents");
                    O && (Nt.call(this, a, O), Dt.call(this, a, O));
                    var it = i.result(this, "collectionEvents");
                    it && (Nt.call(this, x, it), Dt.call(this, x, it))
                },
                _undelegateEntityEvents: function(a, x) {
                    var O = i.result(this, "modelEvents");
                    Nt.call(this, a, O);
                    var it = i.result(this, "collectionEvents");
                    Nt.call(this, x, it)
                }
            },
            yt = /^(\S+)\s*(.*)$/,
            Ft = function(a, x) {
                var O = a.match(yt);
                return O[1] + "." + x + " " + O[2]
            },
            Ht = {
                childViewEventPrefix: !0,
                triggersStopPropagation: !0,
                triggersPreventDefault: !0
            };

        function fe(w) {
            return !!Ht[w]
        }

        function Le(w, a) {
            return Ht[w] = a
        }

        function hn(w, a) {
            i.isString(a) && (a = {
                event: a
            });
            var x = a.event,
                O = !!a.preventDefault;
            fe("triggersPreventDefault") && (O = a.preventDefault !== !1);
            var it = !!a.stopPropagation;
            return fe("triggersStopPropagation") && (it = a.stopPropagation !== !1),
                function(It) {
                    O && It.preventDefault(), it && It.stopPropagation(), w.triggerMethod(x, w, It)
                }
        }
        var be = {
                _getViewTriggers: function(a, x) {
                    var O = this;
                    return i.reduce(x, function(it, It, ie) {
                        return ie = Ft(ie, "trig" + O.cid), it[ie] = hn(a, It), it
                    }, {})
                }
            },
            ke = function(a, x) {
                return i.reduce(a, function(O, it, It) {
                    var ie = Te(It, x);
                    return O[ie] = it, O
                }, {})
            },
            Te = function(a, x) {
                return a.replace(/@ui\.[a-zA-Z-_$0-9]*/g, function(O) {
                    return x[O.slice(4)]
                })
            },
            sn = function w(a, x, O) {
                return i.each(a, function(it, It) {
                    i.isString(it) ? a[It] = Te(it, x) : i.isObject(it) && i.isArray(O) && (i.extend(it, w(i.pick(it, O), x)), i.each(O, function(ie) {
                        var We = it[ie];
                        i.isString(We) && (it[ie] = Te(We, x))
                    }))
                }), a
            },
            oe = {
                normalizeUIKeys: function(a) {
                    var x = this._getUIBindings();
                    return ke(a, x)
                },
                normalizeUIString: function(a) {
                    var x = this._getUIBindings();
                    return Te(a, x)
                },
                normalizeUIValues: function(a, x) {
                    var O = this._getUIBindings();
                    return sn(a, O, x)
                },
                _getUIBindings: function() {
                    var a = i.result(this, "_uiBindings"),
                        x = i.result(this, "ui");
                    return a || x
                },
                _bindUIElements: function() {
                    var a = this;
                    if (!!this.ui) {
                        this._uiBindings || (this._uiBindings = this.ui);
                        var x = i.result(this, "_uiBindings");
                        this._ui = {}, i.each(x, function(O, it) {
                            a._ui[it] = a.$(O)
                        }), this.ui = this._ui
                    }
                },
                _unbindUIElements: function() {
                    var a = this;
                    !this.ui || !this._uiBindings || (i.each(this.ui, function(x, O) {
                        delete a.ui[O]
                    }), this.ui = this._uiBindings, delete this._uiBindings, delete this._ui)
                },
                _getUI: function(a) {
                    return this._ui[a]
                }
            };

        function Ue(w) {
            return w instanceof n.$ ? w : n.$(w)
        }

        function H(w) {
            return this.prototype.Dom = i.extend({}, this.prototype.Dom, w), this
        }
        var N = {
                createBuffer: function() {
                    return document.createDocumentFragment()
                },
                getEl: function(a) {
                    return Ue(a)
                },
                findEl: function(a, x) {
                    var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Ue(a);
                    return O.find(x)
                },
                hasEl: function(a, x) {
                    return a.contains(x && x.parentNode)
                },
                detachEl: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ue(a);
                    x.detach()
                },
                replaceEl: function(a, x) {
                    if (a !== x) {
                        var O = x.parentNode;
                        !O || O.replaceChild(a, x)
                    }
                },
                swapEl: function(a, x) {
                    if (a !== x) {
                        var O = a.parentNode,
                            it = x.parentNode;
                        if (!(!O || !it)) {
                            var It = a.nextSibling,
                                ie = x.nextSibling;
                            O.insertBefore(x, It), it.insertBefore(a, ie)
                        }
                    }
                },
                setContents: function(a, x) {
                    var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Ue(a);
                    O.html(x)
                },
                appendContents: function(a, x) {
                    var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
                        it = O._$el,
                        It = it === void 0 ? Ue(a) : it,
                        ie = O._$contents,
                        We = ie === void 0 ? Ue(x) : ie;
                    It.append(We)
                },
                hasContents: function(a) {
                    return !!a && a.hasChildNodes()
                },
                detachContents: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ue(a);
                    x.contents().detach()
                }
            },
            J = {
                Dom: N,
                supportsRenderLifecycle: !0,
                supportsDestroyLifecycle: !0,
                _isDestroyed: !1,
                isDestroyed: function() {
                    return !!this._isDestroyed
                },
                _isRendered: !1,
                isRendered: function() {
                    return !!this._isRendered
                },
                _isAttached: !1,
                isAttached: function() {
                    return !!this._isAttached
                },
                delegateEvents: function(a) {
                    this._proxyBehaviorViewProperties(), this._buildEventProxies();
                    var x = this._getEvents(a);
                    typeof a > "u" && (this.events = x);
                    var O = i.extend({}, this._getBehaviorEvents(), x, this._getBehaviorTriggers(), this.getTriggers());
                    return n.View.prototype.delegateEvents.call(this, O), this
                },
                _getEvents: function(a) {
                    var x = a || this.events;
                    return i.isFunction(x) ? this.normalizeUIKeys(x.call(this)) : this.normalizeUIKeys(x)
                },
                getTriggers: function() {
                    if (!!this.triggers) {
                        var a = this.normalizeUIKeys(i.result(this, "triggers"));
                        return this._getViewTriggers(this, a)
                    }
                },
                delegateEntityEvents: function() {
                    return this._delegateEntityEvents(this.model, this.collection), this._delegateBehaviorEntityEvents(), this
                },
                undelegateEntityEvents: function() {
                    return this._undelegateEntityEvents(this.model, this.collection), this._undelegateBehaviorEntityEvents(), this
                },
                destroy: function() {
                    if (this._isDestroyed) return this;
                    for (var a = this._isAttached && !this._shouldDisableEvents, x = arguments.length, O = Array(x), it = 0; it < x; it++) O[it] = arguments[it];
                    return this.triggerMethod.apply(this, ["before:destroy", this].concat(O)), a && this.triggerMethod("before:detach", this), this.unbindUIElements(), this._removeElement(), a && (this._isAttached = !1, this.triggerMethod("detach", this)), this._removeChildren(), this._isDestroyed = !0, this._isRendered = !1, this._destroyBehaviors.apply(this, O), this.triggerMethod.apply(this, ["destroy", this].concat(O)), this.stopListening(), this
                },
                _removeElement: function() {
                    this.$el.off().removeData(), this.Dom.detachEl(this.el, this.$el)
                },
                bindUIElements: function() {
                    return this._bindUIElements(), this._bindBehaviorUIElements(), this
                },
                unbindUIElements: function() {
                    return this._unbindUIElements(), this._unbindBehaviorUIElements(), this
                },
                getUI: function(a) {
                    return this._getUI(a)
                },
                childViewEventPrefix: function() {
                    return fe("childViewEventPrefix") ? "childview" : !1
                },
                triggerMethod: function() {
                    var a = m.apply(this, arguments);
                    return this._triggerEventOnBehaviors.apply(this, arguments), a
                },
                _buildEventProxies: function() {
                    this._childViewEvents = i.result(this, "childViewEvents"), this._childViewTriggers = i.result(this, "childViewTriggers")
                },
                _proxyChildViewEvents: function(a) {
                    this.listenTo(a, "all", this._childViewEventHandler)
                },
                _childViewEventHandler: function(a) {
                    for (var x = this.normalizeMethods(this._childViewEvents), O = arguments.length, it = Array(O > 1 ? O - 1 : 0), It = 1; It < O; It++) it[It - 1] = arguments[It];
                    typeof x < "u" && i.isFunction(x[a]) && x[a].apply(this, it);
                    var ie = this._childViewTriggers;
                    ie && i.isString(ie[a]) && this.triggerMethod.apply(this, [ie[a]].concat(it));
                    var We = i.result(this, "childViewEventPrefix");
                    if (We !== !1) {
                        var dn = We + ":" + a;
                        this.triggerMethod.apply(this, [dn].concat(it))
                    }
                }
            };
        i.extend(J, ct, nn, Mt, be, oe);

        function M(w) {
            w._isRendered || (w.supportsRenderLifecycle || L(w, "before:render", w), w.render(), w.supportsRenderLifecycle || (w._isRendered = !0, L(w, "render", w)))
        }

        function Y(w) {
            if (w.destroy) {
                w.destroy();
                return
            }
            w.supportsDestroyLifecycle || L(w, "before:destroy", w);
            var a = w._isAttached && !w._shouldDisableEvents;
            a && L(w, "before:detach", w), w.remove(), a && (w._isAttached = !1, L(w, "detach", w)), w._isDestroyed = !0, w.supportsDestroyLifecycle || L(w, "destroy", w)
        }
        var Ct = ["allowMissingEl", "parentEl", "replaceElement"],
            Et = g.extend({
                Dom: N,
                cidPrefix: "mnr",
                replaceElement: !1,
                _isReplaced: !1,
                _isSwappingView: !1,
                constructor: function(a) {
                    if (this._setOptions(a), this.mergeOptions(a, Ct), this._initEl = this.el = this.getOption("el"), this.el = this.el instanceof n.$ ? this.el[0] : this.el, !this.el) throw new At({
                        name: "NoElError",
                        message: 'An "el" must be specified for a region.'
                    });
                    this.$el = this.getEl(this.el), g.call(this, a)
                },
                show: function(a, x) {
                    if (!!this._ensureElement(x)) return a = this._getView(a, x), a === this.currentView ? this : (this._isSwappingView = !!this.currentView, this.triggerMethod("before:show", this, a, x), a._isAttached || this.empty(x), this._setupChildView(a), this.currentView = a, M(a), this._attachView(a, x), this.triggerMethod("show", this, a, x), this._isSwappingView = !1, this)
                },
                _setupChildView: function(a) {
                    pt(a), this._proxyChildViewEvents(a), a.on("destroy", this._empty, this)
                },
                _proxyChildViewEvents: function(a) {
                    var x = this._parentView;
                    !x || x._proxyChildViewEvents(a)
                },
                _shouldDisableMonitoring: function() {
                    return this._parentView && this._parentView.monitorViewEvents === !1
                },
                _attachView: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        O = !a._isAttached && A(this.el) && !this._shouldDisableMonitoring(),
                        it = typeof x.replaceElement > "u" ? !!i.result(this, "replaceElement") : !!x.replaceElement;
                    O && L(a, "before:attach", a), it ? this._replaceEl(a) : this.attachHtml(a), O && (a._isAttached = !0, L(a, "attach", a))
                },
                _ensureElement: function() {
                    var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    if (i.isObject(this.el) || (this.$el = this.getEl(this.el), this.el = this.$el[0], this.$el = this.Dom.getEl(this.el)), !this.$el || this.$el.length === 0) {
                        var x = typeof a.allowMissingEl > "u" ? !!i.result(this, "allowMissingEl") : !!a.allowMissingEl;
                        if (x) return !1;
                        throw new At('An "el" must exist in DOM for this region ' + this.cid)
                    }
                    return !0
                },
                _getView: function(a) {
                    if (!a) throw new At({
                        name: "ViewNotValid",
                        message: "The view passed is undefined and therefore invalid. You must pass a view instance to show."
                    });
                    if (a._isDestroyed) throw new At({
                        name: "ViewDestroyedError",
                        message: 'View (cid: "' + a.cid + '") has already been destroyed and cannot be used.'
                    });
                    if (a instanceof n.View) return a;
                    var x = this._getViewOptions(a);
                    return new Un(x)
                },
                _getViewOptions: function(a) {
                    if (i.isFunction(a)) return {
                        template: a
                    };
                    if (i.isObject(a)) return a;
                    var x = function() {
                        return a
                    };
                    return {
                        template: x
                    }
                },
                getEl: function(a) {
                    var x = i.result(this, "parentEl");
                    return x && i.isString(a) ? this.Dom.findEl(x, a) : this.Dom.getEl(a)
                },
                _replaceEl: function(a) {
                    this._restoreEl(), a.on("before:destroy", this._restoreEl, this), this.Dom.replaceEl(a.el, this.el), this._isReplaced = !0
                },
                _restoreEl: function() {
                    if (!!this._isReplaced) {
                        var a = this.currentView;
                        !a || (this._detachView(a), this._isReplaced = !1)
                    }
                },
                isReplaced: function() {
                    return !!this._isReplaced
                },
                isSwappingView: function() {
                    return !!this._isSwappingView
                },
                attachHtml: function(a) {
                    this.Dom.appendContents(this.el, a.el, {
                        _$el: this.$el,
                        _$contents: a.$el
                    })
                },
                empty: function() {
                    var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
                            allowMissingEl: !0
                        },
                        x = this.currentView;
                    if (!x) return this._ensureElement(a) && this.detachHtml(), this;
                    var O = !a.preventDestroy;
                    return O || k("The preventDestroy option is deprecated. Use Region#detachView"), this._empty(x, O), this
                },
                _empty: function(a, x) {
                    a.off("destroy", this._empty, this), this.triggerMethod("before:empty", this, a), this._restoreEl(), delete this.currentView, a._isDestroyed || (x ? this.removeView(a) : this._detachView(a), this._stopChildViewEvents(a)), this.triggerMethod("empty", this, a)
                },
                _stopChildViewEvents: function(a) {
                    var x = this._parentView;
                    !x || this._parentView.stopListening(a)
                },
                destroyView: function(a) {
                    return a._isDestroyed || (a._shouldDisableEvents = this._shouldDisableMonitoring(), Y(a)), a
                },
                removeView: function(a) {
                    this.destroyView(a)
                },
                detachView: function() {
                    var a = this.currentView;
                    if (!!a) return this._empty(a), a
                },
                _detachView: function(a) {
                    var x = a._isAttached && !this._shouldDisableMonitoring(),
                        O = this._isReplaced;
                    x && L(a, "before:detach", a), O ? this.Dom.replaceEl(this.el, a.el) : this.detachHtml(), x && (a._isAttached = !1, L(a, "detach", a))
                },
                detachHtml: function() {
                    this.Dom.detachContents(this.el, this.$el)
                },
                hasView: function() {
                    return !!this.currentView
                },
                reset: function(a) {
                    return this.empty(a), this.$el && (this.el = this._initEl), delete this.$el, this
                },
                destroy: function(a) {
                    return this._isDestroyed ? this : (this.reset(a), this._name && this._parentView._removeReferences(this._name), delete this._parentView, delete this._name, g.prototype.destroy.apply(this, arguments))
                }
            }, {
                setDomApi: H
            }),
            Wt = function(w, a) {
                return w instanceof Et ? w : Yt(w, a)
            };

        function Yt(w, a) {
            var x = i.extend({}, a);
            if (i.isString(w)) return i.extend(x, {
                el: w
            }), Se(x);
            if (i.isFunction(w)) return i.extend(x, {
                regionClass: w
            }), Se(x);
            if (i.isObject(w)) return w.selector && k("The selector option on a Region definition object is deprecated. Use el to pass a selector string"), i.extend(x, {
                el: w.selector
            }, w), Se(x);
            throw new At({
                message: "Improper region configuration type.",
                url: "marionette.region.html#region-configuration-types"
            })
        }

        function Se(w) {
            var a = w.regionClass,
                x = i.omit(w, "regionClass");
            return new a(x)
        }
        var Ke = {
                regionClass: Et,
                _initRegions: function() {
                    this.regions = this.regions || {}, this._regions = {}, this.addRegions(i.result(this, "regions"))
                },
                _reInitRegions: function() {
                    R(this._regions, "reset")
                },
                addRegion: function(a, x) {
                    var O = {};
                    return O[a] = x, this.addRegions(O)[a]
                },
                addRegions: function(a) {
                    if (!i.isEmpty(a)) return a = this.normalizeUIValues(a, ["selector", "el"]), this.regions = i.extend({}, this.regions, a), this._addRegions(a)
                },
                _addRegions: function(a) {
                    var x = this,
                        O = {
                            regionClass: this.regionClass,
                            parentEl: i.partial(i.result, this, "el")
                        };
                    return i.reduce(a, function(it, It, ie) {
                        return it[ie] = Wt(It, O), x._addRegion(it[ie], ie), it
                    }, {})
                },
                _addRegion: function(a, x) {
                    this.triggerMethod("before:add:region", this, x, a), a._parentView = this, a._name = x, this._regions[x] = a, this.triggerMethod("add:region", this, x, a)
                },
                removeRegion: function(a) {
                    var x = this._regions[a];
                    return this._removeRegion(x, a), x
                },
                removeRegions: function() {
                    var a = this._getRegions();
                    return i.each(this._regions, i.bind(this._removeRegion, this)), a
                },
                _removeRegion: function(a, x) {
                    this.triggerMethod("before:remove:region", this, x, a), a.destroy(), this.triggerMethod("remove:region", this, x, a)
                },
                _removeReferences: function(a) {
                    delete this.regions[a], delete this._regions[a]
                },
                emptyRegions: function() {
                    var a = this.getRegions();
                    return R(a, "empty"), a
                },
                hasRegion: function(a) {
                    return !!this.getRegion(a)
                },
                getRegion: function(a) {
                    return this._isRendered || this.render(), this._regions[a]
                },
                _getRegions: function() {
                    return i.clone(this._regions)
                },
                getRegions: function() {
                    return this._isRendered || this.render(), this._getRegions()
                },
                showChildView: function(a, x) {
                    for (var O = this.getRegion(a), it = arguments.length, It = Array(it > 2 ? it - 2 : 0), ie = 2; ie < it; ie++) It[ie - 2] = arguments[ie];
                    return O.show.apply(O, [x].concat(It))
                },
                detachChildView: function(a) {
                    return this.getRegion(a).detachView()
                },
                getChildView: function(a) {
                    return this.getRegion(a).currentView
                }
            },
            re = {
                render: function(a, x) {
                    if (!a) throw new At({
                        name: "TemplateNotFoundError",
                        message: "Cannot render the template since its false, null or undefined."
                    });
                    var O = i.isFunction(a) ? a : S.get(a);
                    return O(x)
                }
            },
            Bn = ["behaviors", "childViewEventPrefix", "childViewEvents", "childViewTriggers", "collectionEvents", "events", "modelEvents", "regionClass", "regions", "template", "templateContext", "triggers", "ui"],
            Un = n.View.extend({
                constructor: function(a) {
                    this.render = i.bind(this.render, this), this._setOptions(a), this.mergeOptions(a, Bn), pt(this), this._initBehaviors(), this._initRegions();
                    var x = Array.prototype.slice.call(arguments);
                    x[0] = this.options, n.View.prototype.constructor.apply(this, x), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                serializeData: function() {
                    return !this.model && !this.collection ? {} : this.model ? this.serializeModel() : {
                        items: this.serializeCollection()
                    }
                },
                serializeModel: function() {
                    return this.model ? i.clone(this.model.attributes) : {}
                },
                serializeCollection: function() {
                    return this.collection ? this.collection.map(function(a) {
                        return i.clone(a.attributes)
                    }) : {}
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isRendered = this.Dom.hasContents(this.el), this._isAttached = A(this.el), this._isRendered && this.bindUIElements(), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._isRendered && this._reInitRegions(), this._renderTemplate(), this.bindUIElements(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                _renderTemplate: function() {
                    var a = this.getTemplate();
                    if (a === !1) {
                        k("template:false is deprecated.  Use _.noop.");
                        return
                    }
                    var x = this.mixinTemplateContext(this.serializeData()),
                        O = this._renderHtml(a, x);
                    this.attachElContent(O)
                },
                _renderHtml: function(a, x) {
                    return re.render(a, x, this)
                },
                getTemplate: function() {
                    return this.template
                },
                mixinTemplateContext: function() {
                    var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        x = i.result(this, "templateContext");
                    return i.extend(a, x)
                },
                attachElContent: function(a) {
                    return this.Dom.setContents(this.el, a, this.$el), this
                },
                _removeChildren: function() {
                    this.removeRegions()
                },
                _getImmediateChildren: function() {
                    return i.chain(this._getRegions()).map("currentView").compact().value()
                }
            }, {
                setRenderer: function(a) {
                    return this.prototype._renderHtml = a, this
                },
                setDomApi: H
            });
        i.extend(Un.prototype, J, Ke);
        var B = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck", "reduce", "partition"],
            F = function(a, x) {
                i.each(B, function(O) {
                    a[O] = function() {
                        var it = i.result(this, x),
                            It = Array.prototype.slice.call(arguments);
                        return i[O].apply(i, [it].concat(It))
                    }
                })
            },
            Q = function(a) {
                this._views = {}, this._indexByModel = {}, this._indexByCustom = {}, this._updateLength(), i.each(a, i.bind(this.add, this))
            };
        F(Q.prototype, "_getViews"), i.extend(Q.prototype, {
            _getViews: function() {
                return i.values(this._views)
            },
            add: function(a, x) {
                return this._add(a, x)._updateLength()
            },
            _add: function(a, x) {
                var O = a.cid;
                return this._views[O] = a, a.model && (this._indexByModel[a.model.cid] = O), x && (this._indexByCustom[x] = O), this
            },
            findByModel: function(a) {
                return this.findByModelCid(a.cid)
            },
            findByModelCid: function(a) {
                var x = this._indexByModel[a];
                return this.findByCid(x)
            },
            findByCustom: function(a) {
                var x = this._indexByCustom[a];
                return this.findByCid(x)
            },
            findByIndex: function(a) {
                return i.values(this._views)[a]
            },
            findByCid: function(a) {
                return this._views[a]
            },
            remove: function(a) {
                return this._remove(a)._updateLength()
            },
            _remove: function(a) {
                var x = a.cid;
                return a.model && delete this._indexByModel[a.model.cid], i.some(this._indexByCustom, i.bind(function(O, it) {
                    if (O === x) return delete this._indexByCustom[it], !0
                }, this)), delete this._views[x], this
            },
            _updateLength: function() {
                return this.length = i.size(this._views), this
            }
        });
        var K = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "events", "filter", "emptyView", "emptyViewOptions", "modelEvents", "reorderOnSort", "sort", "triggers", "ui", "viewComparator"],
            dt = n.View.extend({
                sort: !0,
                constructor: function(a) {
                    this.render = i.bind(this.render, this), this._setOptions(a), this.mergeOptions(a, K), pt(this), this._initBehaviors(), this.once("render", this._initialEvents), this._initChildViewStorage(), this._bufferedChildren = [];
                    var x = Array.prototype.slice.call(arguments);
                    x[0] = this.options, n.View.prototype.constructor.apply(this, x), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                _startBuffering: function() {
                    this._isBuffering = !0
                },
                _endBuffering: function() {
                    var a = this._isAttached && this.monitorViewEvents !== !1,
                        x = a ? this._getImmediateChildren() : [];
                    this._isBuffering = !1, i.each(x, function(O) {
                        L(O, "before:attach", O)
                    }), this.attachBuffer(this, this._createBuffer()), i.each(x, function(O) {
                        O._isAttached = !0, L(O, "attach", O)
                    }), this._bufferedChildren = []
                },
                _getImmediateChildren: function() {
                    return i.values(this.children._views)
                },
                _initialEvents: function() {
                    this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.render), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                },
                _onCollectionAdd: function(a, x, O) {
                    var it = O.at !== void 0 && (O.index || x.indexOf(a));
                    (this.filter || it === !1) && (it = i.indexOf(this._filteredSortedModels(it), a)), this._shouldAddChild(a, it) && (this._destroyEmptyView(), this._addChild(a, it))
                },
                _onCollectionUpdate: function(a, x) {
                    var O = x.changes;
                    this._removeChildModels(O.removed)
                },
                _removeChildModels: function(a) {
                    var x = this._getRemovedViews(a);
                    !x.length || (this.children._updateLength(), this._updateIndices(x, !1), this.isEmpty() && this._showEmptyView())
                },
                _getRemovedViews: function(a) {
                    var x = this;
                    return i.reduce(a, function(O, it) {
                        var It = it && x.children.findByModel(it);
                        return !It || It._isDestroyed || (x._removeChildView(It), O.push(It)), O
                    }, [])
                },
                _removeChildView: function(a) {
                    this.triggerMethod("before:remove:child", this, a), this.children._remove(a), a._shouldDisableEvents = this.monitorViewEvents === !1, Y(a), this.stopListening(a), this.triggerMethod("remove:child", this, a)
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isAttached = A(this.el), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._renderChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                setFilter: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        O = x.preventRender,
                        it = this._isRendered && !this._isDestroyed,
                        It = this.filter !== a,
                        ie = it && It && !O;
                    if (ie) {
                        var We = this._filteredSortedModels();
                        this.filter = a;
                        var dn = this._filteredSortedModels();
                        this._applyModelDeltas(dn, We)
                    } else this.filter = a;
                    return this
                },
                removeFilter: function(a) {
                    return this.setFilter(null, a)
                },
                _applyModelDeltas: function(a, x) {
                    var O = this,
                        it = {};
                    i.each(a, function(ie, We) {
                        var dn = !O.children.findByModel(ie);
                        dn && O._onCollectionAdd(ie, O.collection, {
                            at: We
                        }), it[ie.cid] = !0
                    });
                    var It = i.filter(x, function(ie) {
                        return !it[ie.cid] && O.children.findByModel(ie)
                    });
                    this._removeChildModels(It)
                },
                reorder: function() {
                    var a = this,
                        x = this.children,
                        O = this._filteredSortedModels();
                    if (!O.length && this._showingEmptyView) return this;
                    var it = i.some(O, function(dn) {
                        return !x.findByModel(dn)
                    });
                    if (it) this.render();
                    else {
                        var It = [],
                            ie = i.reduce(this.children._views, function(dn, ri) {
                                var Jn = i.indexOf(O, ri.model);
                                return Jn === -1 ? (It.push(ri.model), dn) : (ri._index = Jn, dn[Jn] = ri.el, dn)
                            }, new Array(O.length));
                        this.triggerMethod("before:reorder", this);
                        var We = this.Dom.createBuffer();
                        i.each(ie, function(dn) {
                            a.Dom.appendContents(We, dn)
                        }), this._appendReorderedChildren(We), this._removeChildModels(It), this.triggerMethod("reorder", this)
                    }
                    return this
                },
                resortView: function() {
                    return this.reorderOnSort ? this.reorder() : this._renderChildren(), this
                },
                _sortViews: function() {
                    var a = this,
                        x = this._filteredSortedModels(),
                        O = i.find(x, function(it, It) {
                            var ie = a.children.findByModel(it);
                            return !ie || ie._index !== It
                        });
                    O && this.resortView()
                },
                _emptyViewIndex: -1,
                _appendReorderedChildren: function(a) {
                    this.Dom.appendContents(this.el, a, {
                        _$el: this.$el
                    })
                },
                _renderChildren: function() {
                    this._isRendered && (this._destroyEmptyView(), this._destroyChildren());
                    var a = this._filteredSortedModels();
                    this.isEmpty({
                        processedModels: a
                    }) ? this._showEmptyView() : (this.triggerMethod("before:render:children", this), this._startBuffering(), this._showCollection(a), this._endBuffering(), this.triggerMethod("render:children", this))
                },
                _createView: function(a, x) {
                    var O = this._getChildView(a),
                        it = this._getChildViewOptions(a, x),
                        It = this.buildChildView(a, O, it);
                    return It
                },
                _setupChildView: function(a, x) {
                    pt(a), this._proxyChildViewEvents(a), this.sort && (a._index = x)
                },
                _showCollection: function(a) {
                    i.each(a, i.bind(this._addChild, this)), this.children._updateLength()
                },
                _filteredSortedModels: function(a) {
                    if (!this.collection || !this.collection.length) return [];
                    var x = this.getViewComparator(),
                        O = this.collection.models;
                    if (a = Math.min(Math.max(a, 0), O.length - 1), x) {
                        var it = void 0;
                        a && (it = O[a], O = O.slice(0, a).concat(O.slice(a + 1))), O = this._sortModelsBy(O, x), it && O.splice(a, 0, it)
                    }
                    return O = this._filterModels(O), O
                },
                getViewComparator: function() {
                    return this.viewComparator
                },
                _filterModels: function(a) {
                    var x = this;
                    return this.filter && (a = i.filter(a, function(O, it) {
                        return x._shouldAddChild(O, it)
                    })), a
                },
                _sortModelsBy: function(a, x) {
                    return typeof x == "string" ? i.sortBy(a, function(O) {
                        return O.get(x)
                    }) : x.length === 1 ? i.sortBy(a, i.bind(x, this)) : i.clone(a).sort(i.bind(x, this))
                },
                _showEmptyView: function() {
                    var a = this._getEmptyView();
                    if (a && !this._showingEmptyView) {
                        this._showingEmptyView = !0;
                        var x = new n.Model,
                            O = this.emptyViewOptions || this.childViewOptions;
                        i.isFunction(O) && (O = O.call(this, x, this._emptyViewIndex));
                        var it = this.buildChildView(x, a, O);
                        this.triggerMethod("before:render:empty", this, it), this.addChildView(it, 0), this.triggerMethod("render:empty", this, it)
                    }
                },
                _destroyEmptyView: function() {
                    this._showingEmptyView && (this.triggerMethod("before:remove:empty", this), this._destroyChildren(), delete this._showingEmptyView, this.triggerMethod("remove:empty", this))
                },
                _getEmptyView: function() {
                    var a = this.emptyView;
                    if (!!a) return this._getView(a)
                },
                _getChildView: function(a) {
                    var x = this.childView;
                    if (!x) throw new At({
                        name: "NoChildViewError",
                        message: 'A "childView" must be specified'
                    });
                    if (x = this._getView(x, a), !x) throw new At({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return x
                },
                _getView: function(a, x) {
                    if (a.prototype instanceof n.View || a === n.View) return a;
                    if (i.isFunction(a)) return a.call(this, x)
                },
                _addChild: function(a, x) {
                    var O = this._createView(a, x);
                    return this.addChildView(O, x), O
                },
                _getChildViewOptions: function(a, x) {
                    return i.isFunction(this.childViewOptions) ? this.childViewOptions(a, x) : this.childViewOptions
                },
                addChildView: function(a, x) {
                    return this.triggerMethod("before:add:child", this, a), this._setupChildView(a, x), this._isBuffering ? this.children._add(a) : (this._updateIndices(a, !0), this.children.add(a)), M(a), this._attachView(a, x), this.triggerMethod("add:child", this, a), a
                },
                _updateIndices: function(a, x) {
                    if (!!this.sort) {
                        if (!x) {
                            i.each(i.sortBy(this.children._views, "_index"), function(it, It) {
                                it._index = It
                            });
                            return
                        }
                        var O = i.isArray(a) ? i.max(a, "_index") : a;
                        i.isObject(O) && i.each(this.children._views, function(it) {
                            it._index >= O._index && (it._index += 1)
                        })
                    }
                },
                _attachView: function(a, x) {
                    var O = !a._isAttached && !this._isBuffering && this._isAttached && this.monitorViewEvents !== !1;
                    O && L(a, "before:attach", a), this.attachHtml(this, a, x), O && (a._isAttached = !0, L(a, "attach", a))
                },
                buildChildView: function(a, x, O) {
                    var it = i.extend({
                        model: a
                    }, O);
                    return new x(it)
                },
                removeChildView: function(a) {
                    return !a || a._isDestroyed || (this._removeChildView(a), this.children._updateLength(), this._updateIndices(a, !1)), a
                },
                isEmpty: function(a) {
                    var x = void 0;
                    return i.result(a, "processedModels") ? x = a.processedModels : (x = this.collection ? this.collection.models : [], x = this._filterModels(x)), x.length === 0
                },
                attachBuffer: function(a, x) {
                    this.Dom.appendContents(a.el, x, {
                        _$el: a.$el
                    })
                },
                _createBuffer: function() {
                    var a = this,
                        x = this.Dom.createBuffer();
                    return i.each(this._bufferedChildren, function(O) {
                        a.Dom.appendContents(x, O.el, {
                            _$contents: O.$el
                        })
                    }), x
                },
                attachHtml: function(a, x, O) {
                    a._isBuffering ? a._bufferedChildren.splice(O, 0, x) : a._insertBefore(x, O) || a._insertAfter(x)
                },
                _insertBefore: function(a, x) {
                    var O = void 0,
                        it = this.sort && x < this.children.length - 1;
                    return it && (O = i.find(this.children._views, function(It) {
                        return It._index === x + 1
                    })), O ? (this.beforeEl(O.el, a.el), !0) : !1
                },
                beforeEl: function(a, x) {
                    this.$(a).before(x)
                },
                _insertAfter: function(a) {
                    this.Dom.appendContents(this.el, a.el, {
                        _$el: this.$el,
                        _$contents: a.$el
                    })
                },
                _initChildViewStorage: function() {
                    this.children = new Q
                },
                _removeChildren: function() {
                    this._destroyChildren()
                },
                _destroyChildren: function(a) {
                    !this.children.length || (this.triggerMethod("before:destroy:children", this), i.each(this.children._views, i.bind(this._removeChildView, this)), this.children._updateLength(), this.triggerMethod("destroy:children", this))
                },
                _shouldAddChild: function(a, x) {
                    var O = this.filter;
                    return !i.isFunction(O) || O.call(this, a, x, this.collection)
                }
            }, {
                setDomApi: H
            });
        i.extend(dt.prototype, J);
        var nt = function() {
            this._init()
        };
        F(nt.prototype, "_views");

        function mt(w, a) {
            return a.model && a.model.get(w)
        }
        i.extend(nt.prototype, {
            _init: function() {
                this._views = [], this._viewsByCid = {}, this._indexByModel = {}, this._updateLength()
            },
            _add: function(a) {
                var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this._views.length,
                    O = a.cid;
                this._viewsByCid[O] = a, a.model && (this._indexByModel[a.model.cid] = O), this._views.splice(x, 0, a), this._updateLength()
            },
            _sort: function(a, x) {
                return typeof a == "string" ? (a = i.partial(mt, a), this._sortBy(a)) : a.length === 1 ? this._sortBy(i.bind(a, x)) : this._views.sort(i.bind(a, x))
            },
            _sortBy: function(a) {
                var x = i.sortBy(this._views, a);
                return this._set(x), x
            },
            _set: function(a) {
                this._views.length = 0, this._views.push.apply(this._views, a.slice(0)), this._updateLength()
            },
            _swap: function(a, x) {
                var O = this.findIndexByView(a),
                    it = this.findIndexByView(x);
                if (!(O === -1 || it === -1)) {
                    var It = this._views[O];
                    this._views[O] = this._views[it], this._views[it] = It
                }
            },
            findByModel: function(a) {
                return this.findByModelCid(a.cid)
            },
            findByModelCid: function(a) {
                var x = this._indexByModel[a];
                return this.findByCid(x)
            },
            findByIndex: function(a) {
                return this._views[a]
            },
            findIndexByView: function(a) {
                return this._views.indexOf(a)
            },
            findByCid: function(a) {
                return this._viewsByCid[a]
            },
            hasView: function(a) {
                return !!this.findByCid(a.cid)
            },
            _remove: function(a) {
                if (!!this._viewsByCid[a.cid]) {
                    a.model && delete this._indexByModel[a.model.cid], delete this._viewsByCid[a.cid];
                    var x = this.findIndexByView(a);
                    this._views.splice(x, 1), this._updateLength()
                }
            },
            _updateLength: function() {
                this.length = this._views.length
            }
        });
        var Rt = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "emptyView", "emptyViewOptions", "events", "modelEvents", "sortWithCollection", "triggers", "ui", "viewComparator", "viewFilter"],
            Bt = n.View.extend({
                sortWithCollection: !0,
                constructor: function(a) {
                    this._setOptions(a), this.mergeOptions(a, Rt), pt(this), this.once("render", this._initialEvents), this._initChildViewStorage(), this._initBehaviors();
                    var x = Array.prototype.slice.call(arguments);
                    x[0] = this.options, n.View.prototype.constructor.apply(this, x), this.getEmptyRegion(), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                _initChildViewStorage: function() {
                    this.children = new nt
                },
                getEmptyRegion: function() {
                    return this._emptyRegion && !this._emptyRegion.isDestroyed() ? this._emptyRegion : (this._emptyRegion = new Et({
                        el: this.el,
                        replaceElement: !1
                    }), this._emptyRegion._parentView = this, this._emptyRegion)
                },
                _initialEvents: function() {
                    this.listenTo(this.collection, {
                        sort: this._onCollectionSort,
                        reset: this._onCollectionReset,
                        update: this._onCollectionUpdate
                    })
                },
                _onCollectionSort: function(a, x) {
                    var O = x.add,
                        it = x.merge,
                        It = x.remove;
                    !this.sortWithCollection || this.viewComparator === !1 || O || It || it || this.sort()
                },
                _onCollectionReset: function() {
                    this.render()
                },
                _onCollectionUpdate: function(a, x) {
                    var O = x.changes,
                        it = O.removed.length && this._removeChildModels(O.removed);
                    this._addedViews = O.added.length && this._addChildModels(O.added), this._detachChildren(it), this._showChildren(), this._removeChildViews(it)
                },
                _removeChildModels: function(a) {
                    var x = this;
                    return i.reduce(a, function(O, it) {
                        var It = x._removeChildModel(it);
                        return It && O.push(It), O
                    }, [])
                },
                _removeChildModel: function(a) {
                    var x = this.children.findByModel(a);
                    return x && this._removeChild(x), x
                },
                _removeChild: function(a) {
                    this.triggerMethod("before:remove:child", this, a), this.children._remove(a), this.triggerMethod("remove:child", this, a)
                },
                _addChildModels: function(a) {
                    return i.map(a, i.bind(this._addChildModel, this))
                },
                _addChildModel: function(a) {
                    var x = this._createChildView(a);
                    return this._addChild(x), x
                },
                _createChildView: function(a) {
                    var x = this._getChildView(a),
                        O = this._getChildViewOptions(a),
                        it = this.buildChildView(a, x, O);
                    return it
                },
                _addChild: function(a, x) {
                    this.triggerMethod("before:add:child", this, a), this._setupChildView(a), this.children._add(a, x), this.triggerMethod("add:child", this, a)
                },
                _getChildView: function(a) {
                    var x = this.childView;
                    if (!x) throw new At({
                        name: "NoChildViewError",
                        message: 'A "childView" must be specified'
                    });
                    if (x = this._getView(x, a), !x) throw new At({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return x
                },
                _getView: function(a, x) {
                    if (a.prototype instanceof n.View || a === n.View) return a;
                    if (i.isFunction(a)) return a.call(this, x)
                },
                _getChildViewOptions: function(a) {
                    return i.isFunction(this.childViewOptions) ? this.childViewOptions(a) : this.childViewOptions
                },
                buildChildView: function(a, x, O) {
                    var it = i.extend({
                        model: a
                    }, O);
                    return new x(it)
                },
                _setupChildView: function(a) {
                    pt(a), a.on("destroy", this.removeChildView, this), this._proxyChildViewEvents(a)
                },
                _getImmediateChildren: function() {
                    return this.children._views
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isAttached = A(this.el), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._destroyChildren(), this.children._init(), this.collection && this._addChildModels(this.collection.models), this._showChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                sort: function() {
                    return this._isDestroyed ? this : this.children.length ? (this._showChildren(), this) : this
                },
                _showChildren: function() {
                    if (this.isEmpty()) {
                        this._showEmptyView();
                        return
                    }
                    this._sortChildren(), this.filter()
                },
                isEmpty: function(a) {
                    return a || !this.children.length
                },
                _showEmptyView: function() {
                    var a = this._getEmptyView();
                    if (!!a) {
                        var x = this._getEmptyViewOptions(),
                            O = this.getEmptyRegion();
                        O.show(new a(x))
                    }
                },
                _getEmptyView: function() {
                    var a = this.emptyView;
                    if (!!a) return this._getView(a)
                },
                _destroyEmptyView: function() {
                    var a = this.getEmptyRegion();
                    a.hasView() && a.empty()
                },
                _getEmptyViewOptions: function() {
                    var a = this.emptyViewOptions || this.childViewOptions;
                    return i.isFunction(a) ? a.call(this) : a
                },
                _sortChildren: function() {
                    var a = this.getComparator();
                    !a || (delete this._addedViews, this.triggerMethod("before:sort", this), this.children._sort(a, this), this.triggerMethod("sort", this))
                },
                setComparator: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        O = x.preventRender,
                        it = this.viewComparator !== a,
                        It = it && !O;
                    return this.viewComparator = a, It && this.sort(), this
                },
                removeComparator: function(a) {
                    return this.setComparator(null, a)
                },
                getComparator: function() {
                    return this.viewComparator ? this.viewComparator : !this.sortWithCollection || this.viewComparator === !1 || !this.collection ? !1 : this._viewComparator
                },
                _viewComparator: function(a) {
                    return this.collection.indexOf(a.model)
                },
                filter: function() {
                    if (this._isDestroyed) return this;
                    if (!this.children.length) return this;
                    var a = this._filterChildren();
                    return this._renderChildren(a), this
                },
                _filterChildren: function() {
                    var a = this,
                        x = this._getFilter(),
                        O = this._addedViews;
                    if (delete this._addedViews, !x) return O || this.children._views;
                    this.triggerMethod("before:filter", this);
                    var it = [],
                        It = [];
                    return i.each(this.children._views, function(ie, We, dn) {
                        (x.call(a, ie, We, dn) ? it : It).push(ie)
                    }), this._detachChildren(It), this.triggerMethod("filter", this, it, It), it
                },
                _getFilter: function() {
                    var a = this.getFilter();
                    if (!a) return !1;
                    if (i.isFunction(a)) return a;
                    if (i.isObject(a)) {
                        var x = i.matches(a);
                        return function(O) {
                            return x(O.model && O.model.attributes)
                        }
                    }
                    if (i.isString(a)) return function(O) {
                        return O.model && O.model.get(a)
                    };
                    throw new At({
                        name: "InvalidViewFilterError",
                        message: '"viewFilter" must be a function, predicate object literal, a string indicating a model attribute, or falsy'
                    })
                },
                getFilter: function() {
                    return this.viewFilter
                },
                setFilter: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        O = x.preventRender,
                        it = this.viewFilter !== a,
                        It = it && !O;
                    return this.viewFilter = a, It && this.filter(), this
                },
                removeFilter: function(a) {
                    return this.setFilter(null, a)
                },
                _detachChildren: function(a) {
                    i.each(a, i.bind(this._detachChildView, this))
                },
                _detachChildView: function(a) {
                    var x = a._isAttached && this.monitorViewEvents !== !1;
                    x && L(a, "before:detach", a), this.detachHtml(a), x && (a._isAttached = !1, L(a, "detach", a))
                },
                detachHtml: function(a) {
                    this.Dom.detachEl(a.el, a.$el)
                },
                _renderChildren: function(a) {
                    if (this.isEmpty(!a.length)) {
                        this._showEmptyView();
                        return
                    }
                    this._destroyEmptyView(), this.triggerMethod("before:render:children", this, a);
                    var x = this._getBuffer(a);
                    this._attachChildren(x, a), this.triggerMethod("render:children", this, a)
                },
                _attachChildren: function(a, x) {
                    var O = this._isAttached && this.monitorViewEvents !== !1;
                    x = O ? x : [], i.each(x, function(it) {
                        it._isAttached || L(it, "before:attach", it)
                    }), this.attachHtml(a), i.each(x, function(it) {
                        it._isAttached || (it._isAttached = !0, L(it, "attach", it))
                    })
                },
                _getBuffer: function(a) {
                    var x = this,
                        O = this.Dom.createBuffer();
                    return i.each(a, function(it) {
                        M(it), x.Dom.appendContents(O, it.el, {
                            _$contents: it.$el
                        })
                    }), O
                },
                attachHtml: function(a) {
                    this.Dom.appendContents(this.el, a, {
                        _$el: this.$el
                    })
                },
                swapChildViews: function(a, x) {
                    if (!this.children.hasView(a) || !this.children.hasView(x)) throw new At({
                        name: "ChildSwapError",
                        message: "Both views must be children of the collection view"
                    });
                    return this.children._swap(a, x), this.Dom.swapEl(a.el, x.el), this.Dom.hasEl(this.el, a.el) !== this.Dom.hasEl(this.el, x.el) && this.filter(), this
                },
                addChildView: function(a, x) {
                    return !a || a._isDestroyed || ((!x || x >= this.children.length) && (this._addedViews = [a]), this._addChild(a, x), this._showChildren()), a
                },
                detachChildView: function(a) {
                    return this.removeChildView(a, {
                        shouldDetach: !0
                    }), a
                },
                removeChildView: function(a, x) {
                    return a && (this._removeChildView(a, x), this._removeChild(a), this.isEmpty() && this._showEmptyView(), a)
                },
                _removeChildViews: function(a) {
                    i.each(a, i.bind(this._removeChildView, this))
                },
                _removeChildView: function(a) {
                    var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        O = x.shouldDetach;
                    a.off("destroy", this.removeChildView, this), O ? this._detachChildView(a) : this._destroyChildView(a), this.stopListening(a)
                },
                _destroyChildView: function(a) {
                    a._isDestroyed || (a._shouldDisableEvents = this.monitorViewEvents === !1, Y(a))
                },
                _removeChildren: function() {
                    this._destroyChildren();
                    var a = this.getEmptyRegion();
                    a.destroy(), delete this._addedViews
                },
                _destroyChildren: function() {
                    !this.children || !this.children.length || (this.triggerMethod("before:destroy:children", this), this.monitorViewEvents === !1 && this.Dom.detachContents(this.el, this.$el), i.each(this.children._views, i.bind(this._removeChildView, this)), this.triggerMethod("destroy:children", this))
                }
            }, {
                setDomApi: H
            });
        i.extend(Bt.prototype, J);
        var Gt = ["childViewContainer", "template", "templateContext"],
            Ut = dt.extend({
                constructor: function(a) {
                    k("CompositeView is deprecated. Convert to View at your earliest convenience"), this.mergeOptions(a, Gt), dt.prototype.constructor.apply(this, arguments)
                },
                _initialEvents: function() {
                    this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.renderChildren), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                },
                _getChildView: function(a) {
                    var x = this.childView;
                    if (!x) return this.constructor;
                    if (x = this._getView(x, a), !x) throw new At({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return x
                },
                serializeData: function() {
                    return this.serializeModel()
                },
                render: function() {
                    return this._isDestroyed ? this : (this._isRendering = !0, this.resetChildViewContainer(), this.triggerMethod("before:render", this), this._renderTemplate(), this.bindUIElements(), this.renderChildren(), this._isRendering = !1, this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                renderChildren: function() {
                    (this._isRendered || this._isRendering) && dt.prototype._renderChildren.call(this)
                },
                attachBuffer: function(a, x) {
                    var O = this.getChildViewContainer(a);
                    this.Dom.appendContents(O[0], x, {
                        _$el: O
                    })
                },
                _insertAfter: function(a) {
                    var x = this.getChildViewContainer(this, a);
                    this.Dom.appendContents(x[0], a.el, {
                        _$el: x,
                        _$contents: a.$el
                    })
                },
                _appendReorderedChildren: function(a) {
                    var x = this.getChildViewContainer(this);
                    this.Dom.appendContents(x[0], a, {
                        _$el: x
                    })
                },
                getChildViewContainer: function(a, x) {
                    if (a.$childViewContainer) return a.$childViewContainer;
                    var O = void 0,
                        it = a.childViewContainer;
                    if (it) {
                        var It = i.result(a, "childViewContainer");
                        if (It.charAt(0) === "@" && a.ui ? O = a.ui[It.substr(4)] : O = this.$(It), O.length <= 0) throw new At({
                            name: "ChildViewContainerMissingError",
                            message: 'The specified "childViewContainer" was not found: ' + a.childViewContainer
                        })
                    } else O = a.$el;
                    return a.$childViewContainer = O, O
                },
                resetChildViewContainer: function() {
                    this.$childViewContainer && (this.$childViewContainer = void 0)
                }
            }),
            ue = i.pick(Un.prototype, "serializeModel", "getTemplate", "_renderTemplate", "_renderHtml", "mixinTemplateContext", "attachElContent");
        i.extend(Ut.prototype, ue);
        var he = ["collectionEvents", "events", "modelEvents", "triggers", "ui"],
            qe = g.extend({
                cidPrefix: "mnb",
                constructor: function(a, x) {
                    this.view = x, this.defaults && k("Behavior defaults are deprecated. For similar functionality set options on the Behavior class."), this.defaults = i.clone(i.result(this, "defaults", {})), this._setOptions(i.extend({}, this.defaults, a)), this.mergeOptions(this.options, he), this.ui = i.extend({}, i.result(this, "ui"), i.result(x, "ui")), g.apply(this, arguments)
                },
                $: function() {
                    return this.view.$.apply(this.view, arguments)
                },
                destroy: function() {
                    return this.stopListening(), this.view._removeBehavior(this), this
                },
                proxyViewProperties: function() {
                    return this.$el = this.view.$el, this.el = this.view.el, this
                },
                bindUIElements: function() {
                    return this._bindUIElements(), this
                },
                unbindUIElements: function() {
                    return this._unbindUIElements(), this
                },
                getUI: function(a) {
                    return this._getUI(a)
                },
                delegateEntityEvents: function() {
                    return this._delegateEntityEvents(this.view.model, this.view.collection), this
                },
                undelegateEntityEvents: function() {
                    return this._undelegateEntityEvents(this.view.model, this.view.collection), this
                },
                getEvents: function() {
                    var a = this,
                        x = this.normalizeUIKeys(i.result(this, "events"));
                    return i.reduce(x, function(O, it, It) {
                        return i.isFunction(it) || (it = a[it]), it && (It = Ft(It, a.cid), O[It] = i.bind(it, a)), O
                    }, {})
                },
                getTriggers: function() {
                    if (!!this.triggers) {
                        var a = this.normalizeUIKeys(i.result(this, "triggers"));
                        return this._getViewTriggers(this.view, a)
                    }
                }
            });
        i.extend(qe.prototype, Mt, be, oe);
        var Me = ["region", "regionClass"],
            Je = g.extend({
                cidPrefix: "mna",
                constructor: function(a) {
                    this._setOptions(a), this.mergeOptions(a, Me), this._initRegion(), g.prototype.constructor.apply(this, arguments)
                },
                regionClass: Et,
                _initRegion: function() {
                    var a = this.region;
                    if (!!a) {
                        var x = {
                            regionClass: this.regionClass
                        };
                        this._region = Wt(a, x)
                    }
                },
                getRegion: function() {
                    return this._region
                },
                showView: function(a) {
                    for (var x = this.getRegion(), O = arguments.length, it = Array(O > 1 ? O - 1 : 0), It = 1; It < O; It++) it[It - 1] = arguments[It];
                    return x.show.apply(x, [a].concat(it))
                },
                getView: function() {
                    return this.getRegion().currentView
                },
                start: function(a) {
                    return this.triggerMethod("before:start", this, a), this.triggerMethod("start", this, a), this
                }
            }),
            Cn = ["appRoutes", "controller"],
            gn = n.Router.extend({
                constructor: function(a) {
                    this._setOptions(a), this.mergeOptions(a, Cn), n.Router.apply(this, arguments);
                    var x = this.appRoutes,
                        O = this._getController();
                    this.processAppRoutes(O, x), this.on("route", this._processOnRoute, this)
                },
                appRoute: function(a, x) {
                    var O = this._getController();
                    return this._addAppRoute(O, a, x), this
                },
                _processOnRoute: function(a, x) {
                    if (i.isFunction(this.onRoute)) {
                        var O = i.invert(this.appRoutes)[a];
                        this.onRoute(a, O, x)
                    }
                },
                processAppRoutes: function(a, x) {
                    var O = this;
                    if (!x) return this;
                    var it = i.keys(x).reverse();
                    return i.each(it, function(It) {
                        O._addAppRoute(a, It, x[It])
                    }), this
                },
                _getController: function() {
                    return this.controller
                },
                _addAppRoute: function(a, x, O) {
                    var it = a[O];
                    if (!it) throw new At('Method "' + O + '" was not found on the controller');
                    this.route(x, O, i.bind(it, a))
                },
                triggerMethod: m
            });
        i.extend(gn.prototype, nn);

        function kn() {
            throw new At({
                message: "You must define where your behaviors are stored.",
                url: "marionette.behaviors.md#behaviorslookup"
            })
        }
        var Tn = n.Marionette,
            ce = n.Marionette = {};
        return ce.noConflict = function() {
            return n.Marionette = Tn, this
        }, ce.bindEvents = v(Dt), ce.unbindEvents = v(Nt), ce.bindRequests = v(le), ce.unbindRequests = v(Ee), ce.mergeOptions = v(D), ce.getOption = v($), ce.normalizeMethods = v(tt), ce.extend = y, ce.isNodeAttached = A, ce.deprecate = k, ce.triggerMethod = v(m), ce.triggerMethodOn = L, ce.isEnabled = fe, ce.setEnabled = Le, ce.monitorViewEvents = pt, ce.Behaviors = {}, ce.Behaviors.behaviorsLookup = kn, ce.Application = Je, ce.AppRouter = gn, ce.Renderer = re, ce.TemplateCache = S, ce.View = Un, ce.CollectionView = dt, ce.NextCollectionView = Bt, ce.CompositeView = Ut, ce.Behavior = qe, ce.Region = Et, ce.Error = At, ce.Object = g, ce.DEV_MODE = !1, ce.FEATURES = Ht, ce.VERSION = f, ce.DomApi = N, ce.setDomApi = function(w) {
            dt.setDomApi(w), Ut.setDomApi(w), Bt.setDomApi(w), Et.setDomApi(w), Un.setDomApi(w)
        }, ce
    }), Re && Re.Marionette && (Re.Mn = Re.Marionette)
})(bc);
const Ne = bc.exports;
class bh {
    static setup() {
        gtag("config", "G-V1QJVQMYF1", {
            send_page_view: !1
        })
    }
    static pageView(t) {
        gtag("event", "page_view", {
            page_title: t,
            page_location: `https://jackbox.tv/${t}`
        })
    }
    static gameStarted(t, n) {
        const i = {
            tag: t
        };
        n.isUGC !== void 0 && (i.is_ugc = n.isUGC), n.isSequel !== void 0 && (i.is_sequel = n.isSequel), n.locale !== void 0 && (i.locale = n.locale), n.mode !== void 0 && (i.mode = n.mode), n.numberOfPlayer !== void 0 && (i.number_of_players = n.numberOfPlayer), gtag("event", "game_start", i)
    }
    static bannerClick(t, n) {
        gtag("event", "banner_click", {
            url: t,
            location: n
        })
    }
    static externalLinkClick(t, n) {
        gtag("event", "external_link_click", {
            url: t,
            location: n
        })
    }
    static galleryClick(t, n) {
        gtag("event", "gallery_click", {
            category_id: t,
            location: n
        })
    }
    static galleryImpression(t, n) {
        gtag("event", "gallery_impression", {
            category_id: t,
            location: n
        })
    }
    static moderatorConnected(t) {
        gtag("event", "moderator_connected", {
            tag: t
        })
    }
    static itemModerated(t, n) {
        gtag("event", "item_moderated", {
            tag: t,
            was_rejected: n
        })
    }
    static playerKicked(t, n) {
        gtag("event", "player_kicked", {
            tag: t,
            is_lobby: n
        })
    }
}

function Ch() {
    this.__data__ = [], this.size = 0
}
var xh = Ch;

function Eh(e, t) {
    return e === t || e !== e && t !== t
}
var ao = Eh,
    _h = ao;

function Sh(e, t) {
    for (var n = e.length; n--;)
        if (_h(e[n][0], t)) return n;
    return -1
}
var lo = Sh,
    kh = lo,
    Th = Array.prototype,
    Ah = Th.splice;

function Oh(e) {
    var t = this.__data__,
        n = kh(t, e);
    if (n < 0) return !1;
    var i = t.length - 1;
    return n == i ? t.pop() : Ah.call(t, n, 1), --this.size, !0
}
var Rh = Oh,
    Ih = lo;

function Lh(e) {
    var t = this.__data__,
        n = Ih(t, e);
    return n < 0 ? void 0 : t[n][1]
}
var Dh = Lh,
    Mh = lo;

function Ph(e) {
    return Mh(this.__data__, e) > -1
}
var Nh = Ph,
    Bh = lo;

function $h(e, t) {
    var n = this.__data__,
        i = Bh(n, e);
    return i < 0 ? (++this.size, n.push([e, t])) : n[i][1] = t, this
}
var Vh = $h,
    jh = xh,
    Fh = Rh,
    zh = Dh,
    Hh = Nh,
    Uh = Vh;

function xr(e) {
    var t = -1,
        n = e == null ? 0 : e.length;
    for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1])
    }
}
xr.prototype.clear = jh;
xr.prototype.delete = Fh;
xr.prototype.get = zh;
xr.prototype.has = Hh;
xr.prototype.set = Uh;
var co = xr,
    qh = co;

function Wh() {
    this.__data__ = new qh, this.size = 0
}
var Gh = Wh;

function Xh(e) {
    var t = this.__data__,
        n = t.delete(e);
    return this.size = t.size, n
}
var Yh = Xh;

function Kh(e) {
    return this.__data__.get(e)
}
var Jh = Kh;

function Qh(e) {
    return this.__data__.has(e)
}
var Zh = Qh,
    td = typeof Re == "object" && Re && Re.Object === Object && Re,
    Cc = td,
    ed = Cc,
    nd = typeof self == "object" && self && self.Object === Object && self,
    id = ed || nd || Function("return this")(),
    Er = id,
    rd = Er,
    sd = rd.Symbol,
    xc = sd,
    gl = xc,
    Ec = Object.prototype,
    od = Ec.hasOwnProperty,
    ad = Ec.toString,
    Xr = gl ? gl.toStringTag : void 0;

function ld(e) {
    var t = od.call(e, Xr),
        n = e[Xr];
    try {
        e[Xr] = void 0;
        var i = !0
    } catch {}
    var o = ad.call(e);
    return i && (t ? e[Xr] = n : delete e[Xr]), o
}
var cd = ld,
    ud = Object.prototype,
    hd = ud.toString;

function dd(e) {
    return hd.call(e)
}
var fd = dd,
    ml = xc,
    pd = cd,
    gd = fd,
    md = "[object Null]",
    vd = "[object Undefined]",
    vl = ml ? ml.toStringTag : void 0;

function yd(e) {
    return e == null ? e === void 0 ? vd : md : vl && vl in Object(e) ? pd(e) : gd(e)
}
var uo = yd;

function wd(e) {
    var t = typeof e;
    return e != null && (t == "object" || t == "function")
}
var qi = wd,
    bd = uo,
    Cd = qi,
    xd = "[object AsyncFunction]",
    Ed = "[object Function]",
    _d = "[object GeneratorFunction]",
    Sd = "[object Proxy]";

function kd(e) {
    if (!Cd(e)) return !1;
    var t = bd(e);
    return t == Ed || t == _d || t == xd || t == Sd
}
var Ba = kd,
    Td = Er,
    Ad = Td["__core-js_shared__"],
    Od = Ad,
    Qo = Od,
    yl = function() {
        var e = /[^.]+$/.exec(Qo && Qo.keys && Qo.keys.IE_PROTO || "");
        return e ? "Symbol(src)_1." + e : ""
    }();

function Rd(e) {
    return !!yl && yl in e
}
var Id = Rd,
    Ld = Function.prototype,
    Dd = Ld.toString;

function Md(e) {
    if (e != null) {
        try {
            return Dd.call(e)
        } catch {}
        try {
            return e + ""
        } catch {}
    }
    return ""
}
var Pd = Md,
    Nd = Ba,
    Bd = Id,
    $d = qi,
    Vd = Pd,
    jd = /[\\^$.*+?()[\]{}|]/g,
    Fd = /^\[object .+?Constructor\]$/,
    zd = Function.prototype,
    Hd = Object.prototype,
    Ud = zd.toString,
    qd = Hd.hasOwnProperty,
    Wd = RegExp("^" + Ud.call(qd).replace(jd, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");

function Gd(e) {
    if (!$d(e) || Bd(e)) return !1;
    var t = Nd(e) ? Wd : Fd;
    return t.test(Vd(e))
}
var Xd = Gd;

function Yd(e, t) {
    return e == null ? void 0 : e[t]
}
var Kd = Yd,
    Jd = Xd,
    Qd = Kd;

function Zd(e, t) {
    var n = Qd(e, t);
    return Jd(n) ? n : void 0
}
var $a = Zd,
    tf = $a,
    ef = Er,
    nf = tf(ef, "Map"),
    _c = nf,
    rf = $a,
    sf = rf(Object, "create"),
    ho = sf,
    wl = ho;

function of() {
    this.__data__ = wl ? wl(null) : {}, this.size = 0
}
var af = of;

function lf(e) {
    var t = this.has(e) && delete this.__data__[e];
    return this.size -= t ? 1 : 0, t
}
var cf = lf,
    uf = ho,
    hf = "__lodash_hash_undefined__",
    df = Object.prototype,
    ff = df.hasOwnProperty;

function pf(e) {
    var t = this.__data__;
    if (uf) {
        var n = t[e];
        return n === hf ? void 0 : n
    }
    return ff.call(t, e) ? t[e] : void 0
}
var gf = pf,
    mf = ho,
    vf = Object.prototype,
    yf = vf.hasOwnProperty;

function wf(e) {
    var t = this.__data__;
    return mf ? t[e] !== void 0 : yf.call(t, e)
}
var bf = wf,
    Cf = ho,
    xf = "__lodash_hash_undefined__";

function Ef(e, t) {
    var n = this.__data__;
    return this.size += this.has(e) ? 0 : 1, n[e] = Cf && t === void 0 ? xf : t, this
}
var _f = Ef,
    Sf = af,
    kf = cf,
    Tf = gf,
    Af = bf,
    Of = _f;

function _r(e) {
    var t = -1,
        n = e == null ? 0 : e.length;
    for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1])
    }
}
_r.prototype.clear = Sf;
_r.prototype.delete = kf;
_r.prototype.get = Tf;
_r.prototype.has = Af;
_r.prototype.set = Of;
var Rf = _r,
    bl = Rf,
    If = co,
    Lf = _c;

function Df() {
    this.size = 0, this.__data__ = {
        hash: new bl,
        map: new(Lf || If),
        string: new bl
    }
}
var Mf = Df;

function Pf(e) {
    var t = typeof e;
    return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null
}
var Nf = Pf,
    Bf = Nf;

function $f(e, t) {
    var n = e.__data__;
    return Bf(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map
}
var fo = $f,
    Vf = fo;

function jf(e) {
    var t = Vf(this, e).delete(e);
    return this.size -= t ? 1 : 0, t
}
var Ff = jf,
    zf = fo;

function Hf(e) {
    return zf(this, e).get(e)
}
var Uf = Hf,
    qf = fo;

function Wf(e) {
    return qf(this, e).has(e)
}
var Gf = Wf,
    Xf = fo;

function Yf(e, t) {
    var n = Xf(this, e),
        i = n.size;
    return n.set(e, t), this.size += n.size == i ? 0 : 1, this
}
var Kf = Yf,
    Jf = Mf,
    Qf = Ff,
    Zf = Uf,
    tp = Gf,
    ep = Kf;

function Sr(e) {
    var t = -1,
        n = e == null ? 0 : e.length;
    for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1])
    }
}
Sr.prototype.clear = Jf;
Sr.prototype.delete = Qf;
Sr.prototype.get = Zf;
Sr.prototype.has = tp;
Sr.prototype.set = ep;
var np = Sr,
    ip = co,
    rp = _c,
    sp = np,
    op = 200;

function ap(e, t) {
    var n = this.__data__;
    if (n instanceof ip) {
        var i = n.__data__;
        if (!rp || i.length < op - 1) return i.push([e, t]), this.size = ++n.size, this;
        n = this.__data__ = new sp(i)
    }
    return n.set(e, t), this.size = n.size, this
}
var lp = ap,
    cp = co,
    up = Gh,
    hp = Yh,
    dp = Jh,
    fp = Zh,
    pp = lp;

function kr(e) {
    var t = this.__data__ = new cp(e);
    this.size = t.size
}
kr.prototype.clear = up;
kr.prototype.delete = hp;
kr.prototype.get = dp;
kr.prototype.has = fp;
kr.prototype.set = pp;
var gp = kr,
    mp = $a,
    vp = function() {
        try {
            var e = mp(Object, "defineProperty");
            return e({}, "", {}), e
        } catch {}
    }(),
    Sc = vp,
    Cl = Sc;

function yp(e, t, n) {
    t == "__proto__" && Cl ? Cl(e, t, {
        configurable: !0,
        enumerable: !0,
        value: n,
        writable: !0
    }) : e[t] = n
}
var Va = yp,
    wp = Va,
    bp = ao;

function Cp(e, t, n) {
    (n !== void 0 && !bp(e[t], n) || n === void 0 && !(t in e)) && wp(e, t, n)
}
var kc = Cp;

function xp(e) {
    return function(t, n, i) {
        for (var o = -1, f = Object(t), v = i(t), y = v.length; y--;) {
            var k = v[e ? y : ++o];
            if (n(f[k], k, f) === !1) break
        }
        return t
    }
}
var Ep = xp,
    _p = Ep,
    Sp = _p(),
    kp = Sp,
    ba = {
        exports: {}
    };
(function(e, t) {
    var n = Er,
        i = t && !t.nodeType && t,
        o = i && !0 && e && !e.nodeType && e,
        f = o && o.exports === i,
        v = f ? n.Buffer : void 0,
        y = v ? v.allocUnsafe : void 0;

    function k(A, D) {
        if (D) return A.slice();
        var $ = A.length,
            tt = y ? y($) : new A.constructor($);
        return A.copy(tt), tt
    }
    e.exports = k
})(ba, ba.exports);
var Tp = Er,
    Ap = Tp.Uint8Array,
    Op = Ap,
    xl = Op;

function Rp(e) {
    var t = new e.constructor(e.byteLength);
    return new xl(t).set(new xl(e)), t
}
var Ip = Rp,
    Lp = Ip;

function Dp(e, t) {
    var n = t ? Lp(e.buffer) : e.buffer;
    return new e.constructor(n, e.byteOffset, e.length)
}
var Mp = Dp;

function Pp(e, t) {
    var n = -1,
        i = e.length;
    for (t || (t = Array(i)); ++n < i;) t[n] = e[n];
    return t
}
var Np = Pp,
    Bp = qi,
    El = Object.create,
    $p = function() {
        function e() {}
        return function(t) {
            if (!Bp(t)) return {};
            if (El) return El(t);
            e.prototype = t;
            var n = new e;
            return e.prototype = void 0, n
        }
    }(),
    Vp = $p;

function jp(e, t) {
    return function(n) {
        return e(t(n))
    }
}
var Fp = jp,
    zp = Fp,
    Hp = zp(Object.getPrototypeOf, Object),
    Tc = Hp,
    Up = Object.prototype;

function qp(e) {
    var t = e && e.constructor,
        n = typeof t == "function" && t.prototype || Up;
    return e === n
}
var Ac = qp,
    Wp = Vp,
    Gp = Tc,
    Xp = Ac;

function Yp(e) {
    return typeof e.constructor == "function" && !Xp(e) ? Wp(Gp(e)) : {}
}
var Kp = Yp;

function Jp(e) {
    return e != null && typeof e == "object"
}
var us = Jp,
    Qp = uo,
    Zp = us,
    tg = "[object Arguments]";

function eg(e) {
    return Zp(e) && Qp(e) == tg
}
var ng = eg,
    _l = ng,
    ig = us,
    Oc = Object.prototype,
    rg = Oc.hasOwnProperty,
    sg = Oc.propertyIsEnumerable,
    og = _l(function() {
        return arguments
    }()) ? _l : function(e) {
        return ig(e) && rg.call(e, "callee") && !sg.call(e, "callee")
    },
    Rc = og,
    ag = Array.isArray,
    Ic = ag,
    lg = 9007199254740991;

function cg(e) {
    return typeof e == "number" && e > -1 && e % 1 == 0 && e <= lg
}
var Lc = cg,
    ug = Ba,
    hg = Lc;

function dg(e) {
    return e != null && hg(e.length) && !ug(e)
}
var ja = dg,
    fg = ja,
    pg = us;

function gg(e) {
    return pg(e) && fg(e)
}
var mg = gg,
    Ks = {
        exports: {}
    };

function vg() {
    return !1
}
var yg = vg;
(function(e, t) {
    var n = Er,
        i = yg,
        o = t && !t.nodeType && t,
        f = o && !0 && e && !e.nodeType && e,
        v = f && f.exports === o,
        y = v ? n.Buffer : void 0,
        k = y ? y.isBuffer : void 0,
        A = k || i;
    e.exports = A
})(Ks, Ks.exports);
var wg = uo,
    bg = Tc,
    Cg = us,
    xg = "[object Object]",
    Eg = Function.prototype,
    _g = Object.prototype,
    Dc = Eg.toString,
    Sg = _g.hasOwnProperty,
    kg = Dc.call(Object);

function Tg(e) {
    if (!Cg(e) || wg(e) != xg) return !1;
    var t = bg(e);
    if (t === null) return !0;
    var n = Sg.call(t, "constructor") && t.constructor;
    return typeof n == "function" && n instanceof n && Dc.call(n) == kg
}
var Ag = Tg,
    Og = uo,
    Rg = Lc,
    Ig = us,
    Lg = "[object Arguments]",
    Dg = "[object Array]",
    Mg = "[object Boolean]",
    Pg = "[object Date]",
    Ng = "[object Error]",
    Bg = "[object Function]",
    $g = "[object Map]",
    Vg = "[object Number]",
    jg = "[object Object]",
    Fg = "[object RegExp]",
    zg = "[object Set]",
    Hg = "[object String]",
    Ug = "[object WeakMap]",
    qg = "[object ArrayBuffer]",
    Wg = "[object DataView]",
    Gg = "[object Float32Array]",
    Xg = "[object Float64Array]",
    Yg = "[object Int8Array]",
    Kg = "[object Int16Array]",
    Jg = "[object Int32Array]",
    Qg = "[object Uint8Array]",
    Zg = "[object Uint8ClampedArray]",
    tm = "[object Uint16Array]",
    em = "[object Uint32Array]",
    Xe = {};
Xe[Gg] = Xe[Xg] = Xe[Yg] = Xe[Kg] = Xe[Jg] = Xe[Qg] = Xe[Zg] = Xe[tm] = Xe[em] = !0;
Xe[Lg] = Xe[Dg] = Xe[qg] = Xe[Mg] = Xe[Wg] = Xe[Pg] = Xe[Ng] = Xe[Bg] = Xe[$g] = Xe[Vg] = Xe[jg] = Xe[Fg] = Xe[zg] = Xe[Hg] = Xe[Ug] = !1;

function nm(e) {
    return Ig(e) && Rg(e.length) && !!Xe[Og(e)]
}
var im = nm;

function rm(e) {
    return function(t) {
        return e(t)
    }
}
var sm = rm,
    Ca = {
        exports: {}
    };
(function(e, t) {
    var n = Cc,
        i = t && !t.nodeType && t,
        o = i && !0 && e && !e.nodeType && e,
        f = o && o.exports === i,
        v = f && n.process,
        y = function() {
            try {
                var k = o && o.require && o.require("util").types;
                return k || v && v.binding && v.binding("util")
            } catch {}
        }();
    e.exports = y
})(Ca, Ca.exports);
var om = im,
    am = sm,
    Sl = Ca.exports,
    kl = Sl && Sl.isTypedArray,
    lm = kl ? am(kl) : om,
    Mc = lm;

function cm(e, t) {
    if (!(t === "constructor" && typeof e[t] == "function") && t != "__proto__") return e[t]
}
var Pc = cm,
    um = Va,
    hm = ao,
    dm = Object.prototype,
    fm = dm.hasOwnProperty;

function pm(e, t, n) {
    var i = e[t];
    (!(fm.call(e, t) && hm(i, n)) || n === void 0 && !(t in e)) && um(e, t, n)
}
var gm = pm,
    mm = gm,
    vm = Va;

function ym(e, t, n, i) {
    var o = !n;
    n || (n = {});
    for (var f = -1, v = t.length; ++f < v;) {
        var y = t[f],
            k = i ? i(n[y], e[y], y, n, e) : void 0;
        k === void 0 && (k = e[y]), o ? vm(n, y, k) : mm(n, y, k)
    }
    return n
}
var wm = ym;

function bm(e, t) {
    for (var n = -1, i = Array(e); ++n < e;) i[n] = t(n);
    return i
}
var Cm = bm,
    xm = 9007199254740991,
    Em = /^(?:0|[1-9]\d*)$/;

function _m(e, t) {
    var n = typeof e;
    return t = t == null ? xm : t, !!t && (n == "number" || n != "symbol" && Em.test(e)) && e > -1 && e % 1 == 0 && e < t
}
var Nc = _m,
    Sm = Cm,
    km = Rc,
    Tm = Ic,
    Am = Ks.exports,
    Om = Nc,
    Rm = Mc,
    Im = Object.prototype,
    Lm = Im.hasOwnProperty;

function Dm(e, t) {
    var n = Tm(e),
        i = !n && km(e),
        o = !n && !i && Am(e),
        f = !n && !i && !o && Rm(e),
        v = n || i || o || f,
        y = v ? Sm(e.length, String) : [],
        k = y.length;
    for (var A in e)(t || Lm.call(e, A)) && !(v && (A == "length" || o && (A == "offset" || A == "parent") || f && (A == "buffer" || A == "byteLength" || A == "byteOffset") || Om(A, k))) && y.push(A);
    return y
}
var Mm = Dm;

function Pm(e) {
    var t = [];
    if (e != null)
        for (var n in Object(e)) t.push(n);
    return t
}
var Nm = Pm,
    Bm = qi,
    $m = Ac,
    Vm = Nm,
    jm = Object.prototype,
    Fm = jm.hasOwnProperty;

function zm(e) {
    if (!Bm(e)) return Vm(e);
    var t = $m(e),
        n = [];
    for (var i in e) i == "constructor" && (t || !Fm.call(e, i)) || n.push(i);
    return n
}
var Hm = zm,
    Um = Mm,
    qm = Hm,
    Wm = ja;

function Gm(e) {
    return Wm(e) ? Um(e, !0) : qm(e)
}
var Bc = Gm,
    Xm = wm,
    Ym = Bc;

function Km(e) {
    return Xm(e, Ym(e))
}
var Jm = Km,
    Tl = kc,
    Qm = ba.exports,
    Zm = Mp,
    tv = Np,
    ev = Kp,
    Al = Rc,
    Ol = Ic,
    nv = mg,
    iv = Ks.exports,
    rv = Ba,
    sv = qi,
    ov = Ag,
    av = Mc,
    Rl = Pc,
    lv = Jm;

function cv(e, t, n, i, o, f, v) {
    var y = Rl(e, n),
        k = Rl(t, n),
        A = v.get(k);
    if (A) {
        Tl(e, n, A);
        return
    }
    var D = f ? f(y, k, n + "", e, t, v) : void 0,
        $ = D === void 0;
    if ($) {
        var tt = Ol(k),
            st = !tt && iv(k),
            V = !tt && !st && av(k);
        D = k, tt || st || V ? Ol(y) ? D = y : nv(y) ? D = tv(y) : st ? ($ = !1, D = Qm(k, !0)) : V ? ($ = !1, D = Zm(k, !0)) : D = [] : ov(k) || Al(k) ? (D = y, Al(y) ? D = lv(y) : (!sv(y) || rv(y)) && (D = ev(k))) : $ = !1
    }
    $ && (v.set(k, D), o(D, k, i, f, v), v.delete(k)), Tl(e, n, D)
}
var uv = cv,
    hv = gp,
    dv = kc,
    fv = kp,
    pv = uv,
    gv = qi,
    mv = Bc,
    vv = Pc;

function $c(e, t, n, i, o) {
    e !== t && fv(t, function(f, v) {
        if (o || (o = new hv), gv(f)) pv(e, t, v, n, $c, i, o);
        else {
            var y = i ? i(vv(e, v), f, v + "", e, t, o) : void 0;
            y === void 0 && (y = f), dv(e, v, y)
        }
    }, mv)
}
var yv = $c;

function wv(e) {
    return e
}
var Vc = wv;

function bv(e, t, n) {
    switch (n.length) {
        case 0:
            return e.call(t);
        case 1:
            return e.call(t, n[0]);
        case 2:
            return e.call(t, n[0], n[1]);
        case 3:
            return e.call(t, n[0], n[1], n[2])
    }
    return e.apply(t, n)
}
var Cv = bv,
    xv = Cv,
    Il = Math.max;

function Ev(e, t, n) {
    return t = Il(t === void 0 ? e.length - 1 : t, 0),
        function() {
            for (var i = arguments, o = -1, f = Il(i.length - t, 0), v = Array(f); ++o < f;) v[o] = i[t + o];
            o = -1;
            for (var y = Array(t + 1); ++o < t;) y[o] = i[o];
            return y[t] = n(v), xv(e, this, y)
        }
}
var _v = Ev;

function Sv(e) {
    return function() {
        return e
    }
}
var kv = Sv,
    Tv = kv,
    Ll = Sc,
    Av = Vc,
    Ov = Ll ? function(e, t) {
        return Ll(e, "toString", {
            configurable: !0,
            enumerable: !1,
            value: Tv(t),
            writable: !0
        })
    } : Av,
    Rv = Ov,
    Iv = 800,
    Lv = 16,
    Dv = Date.now;

function Mv(e) {
    var t = 0,
        n = 0;
    return function() {
        var i = Dv(),
            o = Lv - (i - n);
        if (n = i, o > 0) {
            if (++t >= Iv) return arguments[0]
        } else t = 0;
        return e.apply(void 0, arguments)
    }
}
var Pv = Mv,
    Nv = Rv,
    Bv = Pv,
    $v = Bv(Nv),
    Vv = $v,
    jv = Vc,
    Fv = _v,
    zv = Vv;

function Hv(e, t) {
    return zv(Fv(e, t, jv), e + "")
}
var Uv = Hv,
    qv = ao,
    Wv = ja,
    Gv = Nc,
    Xv = qi;

function Yv(e, t, n) {
    if (!Xv(n)) return !1;
    var i = typeof t;
    return (i == "number" ? Wv(n) && Gv(t, n.length) : i == "string" && t in n) ? qv(n[t], e) : !1
}
var Kv = Yv,
    Jv = Uv,
    Qv = Kv;

function Zv(e) {
    return Jv(function(t, n) {
        var i = -1,
            o = n.length,
            f = o > 1 ? n[o - 1] : void 0,
            v = o > 2 ? n[2] : void 0;
        for (f = e.length > 3 && typeof f == "function" ? (o--, f) : void 0, v && Qv(n[0], n[1], v) && (f = o < 3 ? void 0 : f, o = 1), t = Object(t); ++i < o;) {
            var y = n[i];
            y && e(t, y, i, f)
        }
        return t
    })
}
var ty = Zv,
    ey = yv,
    ny = ty,
    iy = ny(function(e, t, n) {
        ey(e, t, n)
    }),
    ry = iy;
class xa {
    static set(t) {
        if (t && this.isSupported(t)) {
            this.locale = t;
            return
        }
        this.locale = this.getPreferredDeviceLocale()
    }
    static getPreferredDeviceLocale() {
        const t = navigator.languages;
        for (let n = 0; n < t.length; n++)
            if (this.isSupported(t[n])) return t[n];
        return this.supported[0]
    }
    static isSupported(t) {
        return Object.values(this.supported).includes(t)
    }
    static mergeMessages(...t) {
        return ry(t[0], ...t)
    }
}
me(xa, "locale"), me(xa, "supported", ["en", "fr", "it", "de", "es", "es-XL"]);
const fl = class {
    static get serverUrl() {
        var n;
        const t = (n = this.getQueryParam("server")) != null ? n : this.getQueryParam("s");
        return !t || t === "live" ? window.location.hostname : t === "local" ? "https://localhost" : t.includes("localhost") ? t : `${t}.jackboxgames.com`
    }
    static get isCanvasSupported() {
        const t = document.createElement("canvas");
        return !!(t.getContext && t.getContext("2d"))
    }
    static toPrecision(t, n) {
        const i = 10 ** n;
        return Math.round((t + Number.EPSILON) * i) / i
    }
    static htmlUnescape(t) {
        return String(t).replace(/&quot;/gi, '"').replace(/&#39;/gi, "'").replace(/&lt;/gi, "<").replace(/&gt;/gi, ">").replace(/&amp;/gi, "&")
    }
    static htmlEscape(t) {
        return String(t).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
    }
    static sanitize(t) {
        const n = this.sanitizeInput(t).replace(/'/g, "\u2019");
        return this.htmlEscape(n).trim()
    }
    static sanitizeName(t) {
        return t.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF\u2026!?*$+\-'_ .,]/gi, "").replace(/'/g, "\u2019")
    }
    static sanitizeInput(t) {
        return t.replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF’]/gi, "")
    }
    static sanitizeEmoji(t) {
        return t.replace(/(\u00a9|\u00ae|[\u2000-\u2017]|[\u2020-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/, "")
    }
    static safeText(t) {
        const n = document.createElement("div");
        return n.textContent = t, n.innerHTML
    }
    static htmlTagsToBBCode(t, n) {
        if (!n.length) throw new Error("[Utils.htmlTagsToBBCode] No tag pairs were passed in");
        return n.reduce((i, o) => (i.replaceAll(`<${o[0]}>`, `[${o[1]}]`), i.replaceAll(`</${o[0]}>`, `</${o[1]}>`), i), t)
    }
    static hexToRgb(t) {
        const n = new ArrayBuffer(4);
        new DataView(n).setUint32(0, parseInt(t.replace("#", ""), 16), !1);
        const o = new Uint8Array(n);
        return `${o[1]},${o[2]},${o[3]}`
    }
    static adjustColor(t, n) {
        let i = !1,
            o = t;
        o[0] === "#" && (o = o.slice(1), i = !0);
        const f = parseInt(o, 16),
            v = Math.min(Math.max(0, (f >> 16) * n), 255),
            y = Math.min(Math.max(0, (f >> 8 & 255) * n), 255);
        let A = (Math.min(Math.max(0, (f & 255) * n), 255) | y << 8 | v << 16).toString(16);
        for (; A.length < o.length;) A = `0${A}`;
        return (i ? "#" : "") + A
    }
    static isInTolerance(t, n, i) {
        return !(Math.abs(t.x - n.x) < i || Math.abs(t.y - n.y) > i)
    }
    static getDistanceBetweenPoints(t, n) {
        const i = [t.x - n.x, t.y - n.y],
            o = Math.hypot(...i);
        return Math.round(o * 100) / 100
    }
    static getMidpoint(t, n) {
        return {
            x: (t.x + n.x) / 2,
            y: (t.y + n.y) / 2
        }
    }
    static getAngleBetweenPoints(t, n) {
        let o = Math.atan2(n.y - t.y, n.x - t.x) * (180 / Math.PI);
        return o < 0 && (o += 360), 360 - o
    }
    static getAngularDistance(t, n) {
        let i = (n - t) % 360;
        const o = i < 0 ? 1 : -1;
        return i = Math.abs(i), i > 180 ? o * (360 - i) : o * i
    }
    static getVelocity(t, n, i, o) {
        return this.getDistanceBetweenPoints(t, i) / (o - n)
    }
    static isInsideElement(t, n) {
        const i = n.getBoundingClientRect();
        return !(t.x < i.left || t.x > i.left + i.width || t.y < i.top || t.y > i.top + i.height)
    }
};
let Ze = fl;
me(Ze, "queryParams", new URLSearchParams(window.location.search)), me(Ze, "getQueryParam", t => fl.queryParams.get(t)), me(Ze, "sleep", t => new Promise(n => {
    window.setTimeout(n, t)
}));
class yn {
    static get namespace() {
        var t, n;
        return (n = (t = window.tv.storage) == null ? void 0 : t.namespace) != null ? n : this.defaultNamespace
    }
    static get isDisabled() {
        var t, n;
        return (n = (t = window.tv.storage) == null ? void 0 : t.isDisabled) != null ? n : !1
    }
    static get tag() {
        var t;
        return (t = window.tv.storage) == null ? void 0 : t.tag
    }
    static get code() {
        var t;
        return (t = window.tv.storage) == null ? void 0 : t.code
    }
    static get isSupported() {
        if (this.isDisabled) return !1;
        try {
            return window.localStorage ? (window.localStorage.setItem("support-check", "1"), window.localStorage.removeItem("support-check"), !0) : !1
        } catch {
            return !1
        }
    }
    static setup(t, n) {
        var i, o;
        delete window.tv.storage, window.tv.storage = {
            namespace: (o = (i = Ze.getQueryParam("namespace")) != null ? i : Ze.getQueryParam("ns")) != null ? o : this.defaultNamespace,
            isDisabled: Ze.queryParams.has("incognito") || Ze.queryParams.has("nc")
        }, t && (window.tv.storage.tag = t), n && (window.tv.storage.code = n.toLowerCase(), this.clearCodeScopedKeys(window.tv.storage.code)), this.migrateNamespace("blobcast", this.defaultNamespace)
    }
    static get(t, n) {
        return this.isSupported ? window.localStorage.getItem(this.getScopedKey(t, n)) : null
    }
    static set(t, n, i = "none") {
        if (!!this.isSupported) return window.localStorage.setItem(this.getScopedSetKey(t, i), n)
    }
    static remove(t, n) {
        if (!!this.isSupported) return window.localStorage.removeItem(this.getScopedKey(t, n))
    }
    static setTag(t) {
        var v;
        const n = t.toLowerCase(),
            i = (v = this.get("tags")) != null ? v : "[]",
            o = n.split("-")[0];
        let f = JSON.parse(i);
        f = f.filter(y => {
            const k = y.split("-")[0];
            return o !== k
        }), f.push(n), this.set("tags", JSON.stringify(f))
    }
    static getScopedKey(t, n) {
        const i = `${this.namespace}:${t}`,
            o = this.tag ? `${this.namespace}:${t}:tag:${this.tag}` : null,
            f = this.code ? `${this.namespace}:${t}:code:${this.code}` : null;
        if (n === "none") return i;
        if (n === "tag") {
            if (!o) throw new Error('[Storage] requested "tag" scope but tv.storage.tag is undefined');
            return o
        }
        if (n === "code") {
            if (!f) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
            return f
        }
        return f && window.localStorage.getItem(f) !== null ? f : o && window.localStorage.getItem(o) !== null ? o : i
    }
    static getScopedSetKey(t, n = "none") {
        if (n === "tag") {
            if (!this.tag) throw new Error('[Storage] requested "room" scope but tv.storage.tag is undefined');
            return `${this.namespace}:${t}:tag:${this.tag}`
        }
        if (n === "code") {
            if (!this.code) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
            return `${this.namespace}:${t}:code:${this.code}`
        }
        return `${this.namespace}:${t}`
    }
    static clearCodeScopedKeys(t) {
        !this.isSupported || Object.keys(window.localStorage).forEach(n => {
            const i = n.split(":code:");
            i.length <= 1 || i[1] !== t && window.localStorage.removeItem(n)
        })
    }
    static migrateNamespace(t, n) {
        !this.isSupported || Object.keys(window.localStorage).forEach(i => {
            if (!i.startsWith(`${t}-`)) return;
            const o = i.replace(`${t}-`, `${n}:`),
                f = window.localStorage.getItem(i);
            !f || (window.localStorage.setItem(o, f), window.localStorage.removeItem(i))
        })
    }
}
me(yn, "defaultNamespace", "tv");
class yi {
    constructor() {
        me(this, "artifacts");
        this.artifacts = this.list()
    }
    get hasUnviewed() {
        return this.artifacts.some(t => !t.viewed)
    }
    add(t, n) {
        yi.add(t, n), this.artifacts = this.list()
    }
    static add(t, n) {
        if (!yn.isSupported) return;
        const i = this.isTestArtifact(t) ? "http" : "https",
            o = this.isTestArtifact(t) ? "games-test.jackbox.tv" : "games.jackbox.tv",
            f = `${i}://${o}/artifact/${t.categoryId}/${t.artifactId}/`,
            v = yn.get("galleries") || "[]";
        try {
            const y = JSON.parse(v) || [];
            if (y.some(k => k.url === f)) return;
            y.unshift({
                url: f,
                time: new Date().getTime(),
                categoryId: t.categoryId,
                viewed: !1
            }), yn.set("galleries", JSON.stringify(y.slice(0, 40)))
        } catch {
            console.warn("[Artifacts] Unable to add artifact to local storage")
        }
    }
    remove(t) {
        if (!yn.isSupported) return;
        const n = yn.get("galleries") || "[]";
        try {
            const i = JSON.parse(n) || [];
            i.splice(t, 1), yn.set("galleries", JSON.stringify(i)), this.artifacts = this.list()
        } catch {
            console.warn("[Artifacts] Unable to remove artifact")
        }
    }
    setAsViewed(t) {
        yi.setAsViewed(t), this.artifacts = this.list()
    }
    static setAsViewed(t) {
        if (!yn.isSupported) return;
        const n = yn.get("galleries") || "[]";
        try {
            const i = JSON.parse(n) || [];
            i.length && (i[t].viewed = !0), yn.set("galleries", JSON.stringify(i))
        } catch {
            console.warn(`[Artifacts] Unable to mark artifact ${t} as viewed`)
        }
    }
    static isTestArtifact(t) {
        var n;
        return ((n = t == null ? void 0 : t.rootId) == null ? void 0 : n.indexOf("test")) !== -1
    }
    list() {
        if (!yn.isSupported) return [];
        const t = new Intl.DateTimeFormat(xa.locale, {
                year: "numeric",
                month: "short",
                day: "numeric"
            }),
            n = yn.get("galleries") || "[]",
            i = Date.now();
        try {
            return (JSON.parse(n) || []).filter(f => i - f.time < 525600 * 60 * 1e3).map(f => {
                const v = new Date(f.time),
                    y = t.format(v),
                    k = f.url.split("/"),
                    A = k[k.length - 1] === "" ? k[k.length - 2] : k[k.length - 1];
                let D = f.categoryId;
                return D || (f.url.indexOf("Quiplash2") !== -1 ? D = "Quiplash2Game" : f.url.indexOf("Drawful") !== -1 ? D = "DrawfulGame" : f.url.indexOf("TeeKO") !== -1 ? D = "TeeKOGame" : f.url.indexOf("TriviaDeath") !== -1 && (D = "TriviaDeathResults")), {
                    id: A,
                    gameName: D,
                    date: y,
                    ...f
                }
            })
        } catch {
            return console.warn("[Artifacts] Unable to parse artifacts array"), []
        }
    }
}
var Ea = {
    exports: {}
};
(function(e, t) {
    var n = typeof self < "u" ? self : Re,
        i = function() {
            function f() {
                this.fetch = !1, this.DOMException = n.DOMException
            }
            return f.prototype = n, new f
        }();
    (function(f) {
        (function(v) {
            var y = {
                searchParams: "URLSearchParams" in f,
                iterable: "Symbol" in f && "iterator" in Symbol,
                blob: "FileReader" in f && "Blob" in f && function() {
                    try {
                        return new Blob, !0
                    } catch {
                        return !1
                    }
                }(),
                formData: "FormData" in f,
                arrayBuffer: "ArrayBuffer" in f
            };

            function k(G) {
                return G && DataView.prototype.isPrototypeOf(G)
            }
            if (y.arrayBuffer) var A = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                D = ArrayBuffer.isView || function(G) {
                    return G && A.indexOf(Object.prototype.toString.call(G)) > -1
                };

            function $(G) {
                if (typeof G != "string" && (G = String(G)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(G)) throw new TypeError("Invalid character in header field name");
                return G.toLowerCase()
            }

            function tt(G) {
                return typeof G != "string" && (G = String(G)), G
            }

            function st(G) {
                var pt = {
                    next: function() {
                        var $t = G.shift();
                        return {
                            done: $t === void 0,
                            value: $t
                        }
                    }
                };
                return y.iterable && (pt[Symbol.iterator] = function() {
                    return pt
                }), pt
            }

            function V(G) {
                this.map = {}, G instanceof V ? G.forEach(function(pt, $t) {
                    this.append($t, pt)
                }, this) : Array.isArray(G) ? G.forEach(function(pt) {
                    this.append(pt[0], pt[1])
                }, this) : G && Object.getOwnPropertyNames(G).forEach(function(pt) {
                    this.append(pt, G[pt])
                }, this)
            }
            V.prototype.append = function(G, pt) {
                G = $(G), pt = tt(pt);
                var $t = this.map[G];
                this.map[G] = $t ? $t + ", " + pt : pt
            }, V.prototype.delete = function(G) {
                delete this.map[$(G)]
            }, V.prototype.get = function(G) {
                return G = $(G), this.has(G) ? this.map[G] : null
            }, V.prototype.has = function(G) {
                return this.map.hasOwnProperty($(G))
            }, V.prototype.set = function(G, pt) {
                this.map[$(G)] = tt(pt)
            }, V.prototype.forEach = function(G, pt) {
                for (var $t in this.map) this.map.hasOwnProperty($t) && G.call(pt, this.map[$t], $t, this)
            }, V.prototype.keys = function() {
                var G = [];
                return this.forEach(function(pt, $t) {
                    G.push($t)
                }), st(G)
            }, V.prototype.values = function() {
                var G = [];
                return this.forEach(function(pt) {
                    G.push(pt)
                }), st(G)
            }, V.prototype.entries = function() {
                var G = [];
                return this.forEach(function(pt, $t) {
                    G.push([$t, pt])
                }), st(G)
            }, y.iterable && (V.prototype[Symbol.iterator] = V.prototype.entries);

            function ot(G) {
                if (G.bodyUsed) return Promise.reject(new TypeError("Already read"));
                G.bodyUsed = !0
            }

            function m(G) {
                return new Promise(function(pt, $t) {
                    G.onload = function() {
                        pt(G.result)
                    }, G.onerror = function() {
                        $t(G.error)
                    }
                })
            }

            function L(G) {
                var pt = new FileReader,
                    $t = m(pt);
                return pt.readAsArrayBuffer(G), $t
            }

            function X(G) {
                var pt = new FileReader,
                    $t = m(pt);
                return pt.readAsText(G), $t
            }

            function ut(G) {
                for (var pt = new Uint8Array(G), $t = new Array(pt.length), At = 0; At < pt.length; At++) $t[At] = String.fromCharCode(pt[At]);
                return $t.join("")
            }

            function ht(G) {
                if (G.slice) return G.slice(0);
                var pt = new Uint8Array(G.byteLength);
                return pt.set(new Uint8Array(G)), pt.buffer
            }

            function bt() {
                return this.bodyUsed = !1, this._initBody = function(G) {
                    this._bodyInit = G, G ? typeof G == "string" ? this._bodyText = G : y.blob && Blob.prototype.isPrototypeOf(G) ? this._bodyBlob = G : y.formData && FormData.prototype.isPrototypeOf(G) ? this._bodyFormData = G : y.searchParams && URLSearchParams.prototype.isPrototypeOf(G) ? this._bodyText = G.toString() : y.arrayBuffer && y.blob && k(G) ? (this._bodyArrayBuffer = ht(G.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : y.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(G) || D(G)) ? this._bodyArrayBuffer = ht(G) : this._bodyText = G = Object.prototype.toString.call(G) : this._bodyText = "", this.headers.get("content-type") || (typeof G == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : y.searchParams && URLSearchParams.prototype.isPrototypeOf(G) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                }, y.blob && (this.blob = function() {
                    var G = ot(this);
                    if (G) return G;
                    if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                    if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                    if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                    return Promise.resolve(new Blob([this._bodyText]))
                }, this.arrayBuffer = function() {
                    return this._bodyArrayBuffer ? ot(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(L)
                }), this.text = function() {
                    var G = ot(this);
                    if (G) return G;
                    if (this._bodyBlob) return X(this._bodyBlob);
                    if (this._bodyArrayBuffer) return Promise.resolve(ut(this._bodyArrayBuffer));
                    if (this._bodyFormData) throw new Error("could not read FormData body as text");
                    return Promise.resolve(this._bodyText)
                }, y.formData && (this.formData = function() {
                    return this.text().then(Pt)
                }), this.json = function() {
                    return this.text().then(JSON.parse)
                }, this
            }
            var d = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

            function kt(G) {
                var pt = G.toUpperCase();
                return d.indexOf(pt) > -1 ? pt : G
            }

            function Vt(G, pt) {
                pt = pt || {};
                var $t = pt.body;
                if (G instanceof Vt) {
                    if (G.bodyUsed) throw new TypeError("Already read");
                    this.url = G.url, this.credentials = G.credentials, pt.headers || (this.headers = new V(G.headers)), this.method = G.method, this.mode = G.mode, this.signal = G.signal, !$t && G._bodyInit != null && ($t = G._bodyInit, G.bodyUsed = !0)
                } else this.url = String(G);
                if (this.credentials = pt.credentials || this.credentials || "same-origin", (pt.headers || !this.headers) && (this.headers = new V(pt.headers)), this.method = kt(pt.method || this.method || "GET"), this.mode = pt.mode || this.mode || null, this.signal = pt.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && $t) throw new TypeError("Body not allowed for GET or HEAD requests");
                this._initBody($t)
            }
            Vt.prototype.clone = function() {
                return new Vt(this, {
                    body: this._bodyInit
                })
            };

            function Pt(G) {
                var pt = new FormData;
                return G.trim().split("&").forEach(function($t) {
                    if ($t) {
                        var At = $t.split("="),
                            Tt = At.shift().replace(/\+/g, " "),
                            vt = At.join("=").replace(/\+/g, " ");
                        pt.append(decodeURIComponent(Tt), decodeURIComponent(vt))
                    }
                }), pt
            }

            function Ce(G) {
                var pt = new V,
                    $t = G.replace(/\r?\n[\t ]+/g, " ");
                return $t.split(/\r?\n/).forEach(function(At) {
                    var Tt = At.split(":"),
                        vt = Tt.shift().trim();
                    if (vt) {
                        var Dt = Tt.join(":").trim();
                        pt.append(vt, Dt)
                    }
                }), pt
            }
            bt.call(Vt.prototype);

            function Xt(G, pt) {
                pt || (pt = {}), this.type = "default", this.status = pt.status === void 0 ? 200 : pt.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in pt ? pt.statusText : "OK", this.headers = new V(pt.headers), this.url = pt.url || "", this._initBody(G)
            }
            bt.call(Xt.prototype), Xt.prototype.clone = function() {
                return new Xt(this._bodyInit, {
                    status: this.status,
                    statusText: this.statusText,
                    headers: new V(this.headers),
                    url: this.url
                })
            }, Xt.error = function() {
                var G = new Xt(null, {
                    status: 0,
                    statusText: ""
                });
                return G.type = "error", G
            };
            var et = [301, 302, 303, 307, 308];
            Xt.redirect = function(G, pt) {
                if (et.indexOf(pt) === -1) throw new RangeError("Invalid status code");
                return new Xt(null, {
                    status: pt,
                    headers: {
                        location: G
                    }
                })
            }, v.DOMException = f.DOMException;
            try {
                new v.DOMException
            } catch {
                v.DOMException = function(pt, $t) {
                    this.message = pt, this.name = $t;
                    var At = Error(pt);
                    this.stack = At.stack
                }, v.DOMException.prototype = Object.create(Error.prototype), v.DOMException.prototype.constructor = v.DOMException
            }

            function Jt(G, pt) {
                return new Promise(function($t, At) {
                    var Tt = new Vt(G, pt);
                    if (Tt.signal && Tt.signal.aborted) return At(new v.DOMException("Aborted", "AbortError"));
                    var vt = new XMLHttpRequest;

                    function Dt() {
                        vt.abort()
                    }
                    vt.onload = function() {
                        var Nt = {
                            status: vt.status,
                            statusText: vt.statusText,
                            headers: Ce(vt.getAllResponseHeaders() || "")
                        };
                        Nt.url = "responseURL" in vt ? vt.responseURL : Nt.headers.get("X-Request-URL");
                        var Kt = "response" in vt ? vt.response : vt.responseText;
                        $t(new Xt(Kt, Nt))
                    }, vt.onerror = function() {
                        At(new TypeError("Network request failed"))
                    }, vt.ontimeout = function() {
                        At(new TypeError("Network request failed"))
                    }, vt.onabort = function() {
                        At(new v.DOMException("Aborted", "AbortError"))
                    }, vt.open(Tt.method, Tt.url, !0), Tt.credentials === "include" ? vt.withCredentials = !0 : Tt.credentials === "omit" && (vt.withCredentials = !1), "responseType" in vt && y.blob && (vt.responseType = "blob"), Tt.headers.forEach(function(Nt, Kt) {
                        vt.setRequestHeader(Kt, Nt)
                    }), Tt.signal && (Tt.signal.addEventListener("abort", Dt), vt.onreadystatechange = function() {
                        vt.readyState === 4 && Tt.signal.removeEventListener("abort", Dt)
                    }), vt.send(typeof Tt._bodyInit > "u" ? null : Tt._bodyInit)
                })
            }
            return Jt.polyfill = !0, f.fetch || (f.fetch = Jt, f.Headers = V, f.Request = Vt, f.Response = Xt), v.Headers = V, v.Request = Vt, v.Response = Xt, v.fetch = Jt, Object.defineProperty(v, "__esModule", {
                value: !0
            }), v
        })({})
    })(i), i.fetch.ponyfill = !0, delete i.fetch.polyfill;
    var o = i;
    t = o.fetch, t.default = o.fetch, t.fetch = o.fetch, t.Headers = o.Headers, t.Request = o.Request, t.Response = o.Response, e.exports = t
})(Ea, Ea.exports);
var sy = function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
        if (typeof Symbol.iterator == "symbol") return !0;
        var t = {},
            n = Symbol("test"),
            i = Object(n);
        if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(i) !== "[object Symbol]") return !1;
        var o = 42;
        t[n] = o;
        for (n in t) return !1;
        if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0) return !1;
        var f = Object.getOwnPropertySymbols(t);
        if (f.length !== 1 || f[0] !== n || !Object.prototype.propertyIsEnumerable.call(t, n)) return !1;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
            var v = Object.getOwnPropertyDescriptor(t, n);
            if (v.value !== o || v.enumerable !== !0) return !1
        }
        return !0
    },
    Dl = typeof Symbol < "u" && Symbol,
    oy = sy,
    ay = function() {
        return typeof Dl != "function" || typeof Symbol != "function" || typeof Dl("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : oy()
    },
    ly = "Function.prototype.bind called on incompatible ",
    Zo = Array.prototype.slice,
    cy = Object.prototype.toString,
    uy = "[object Function]",
    hy = function(t) {
        var n = this;
        if (typeof n != "function" || cy.call(n) !== uy) throw new TypeError(ly + n);
        for (var i = Zo.call(arguments, 1), o, f = function() {
                if (this instanceof o) {
                    var D = n.apply(this, i.concat(Zo.call(arguments)));
                    return Object(D) === D ? D : this
                } else return n.apply(t, i.concat(Zo.call(arguments)))
            }, v = Math.max(0, n.length - i.length), y = [], k = 0; k < v; k++) y.push("$" + k);
        if (o = Function("binder", "return function (" + y.join(",") + "){ return binder.apply(this,arguments); }")(f), n.prototype) {
            var A = function() {};
            A.prototype = n.prototype, o.prototype = new A, A.prototype = null
        }
        return o
    },
    dy = hy,
    Fa = Function.prototype.bind || dy,
    fy = Fa,
    py = fy.call(Function.call, Object.prototype.hasOwnProperty),
    Ie, yr = SyntaxError,
    jc = Function,
    fr = TypeError,
    ta = function(e) {
        try {
            return jc('"use strict"; return (' + e + ").constructor;")()
        } catch {}
    },
    Hi = Object.getOwnPropertyDescriptor;
if (Hi) try {
    Hi({}, "")
} catch {
    Hi = null
}
var ea = function() {
        throw new fr
    },
    gy = Hi ? function() {
        try {
            return arguments.callee, ea
        } catch {
            try {
                return Hi(arguments, "callee").get
            } catch {
                return ea
            }
        }
    }() : ea,
    or = ay(),
    xi = Object.getPrototypeOf || function(e) {
        return e.__proto__
    },
    cr = {},
    my = typeof Uint8Array > "u" ? Ie : xi(Uint8Array),
    pr = {
        "%AggregateError%": typeof AggregateError > "u" ? Ie : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer > "u" ? Ie : ArrayBuffer,
        "%ArrayIteratorPrototype%": or ? xi([][Symbol.iterator]()) : Ie,
        "%AsyncFromSyncIteratorPrototype%": Ie,
        "%AsyncFunction%": cr,
        "%AsyncGenerator%": cr,
        "%AsyncGeneratorFunction%": cr,
        "%AsyncIteratorPrototype%": cr,
        "%Atomics%": typeof Atomics > "u" ? Ie : Atomics,
        "%BigInt%": typeof BigInt > "u" ? Ie : BigInt,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView > "u" ? Ie : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": Error,
        "%eval%": eval,
        "%EvalError%": EvalError,
        "%Float32Array%": typeof Float32Array > "u" ? Ie : Float32Array,
        "%Float64Array%": typeof Float64Array > "u" ? Ie : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? Ie : FinalizationRegistry,
        "%Function%": jc,
        "%GeneratorFunction%": cr,
        "%Int8Array%": typeof Int8Array > "u" ? Ie : Int8Array,
        "%Int16Array%": typeof Int16Array > "u" ? Ie : Int16Array,
        "%Int32Array%": typeof Int32Array > "u" ? Ie : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": or ? xi(xi([][Symbol.iterator]())) : Ie,
        "%JSON%": typeof JSON == "object" ? JSON : Ie,
        "%Map%": typeof Map > "u" ? Ie : Map,
        "%MapIteratorPrototype%": typeof Map > "u" || !or ? Ie : xi(new Map()[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": Object,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise > "u" ? Ie : Promise,
        "%Proxy%": typeof Proxy > "u" ? Ie : Proxy,
        "%RangeError%": RangeError,
        "%ReferenceError%": ReferenceError,
        "%Reflect%": typeof Reflect > "u" ? Ie : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set > "u" ? Ie : Set,
        "%SetIteratorPrototype%": typeof Set > "u" || !or ? Ie : xi(new Set()[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? Ie : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": or ? xi("" [Symbol.iterator]()) : Ie,
        "%Symbol%": or ? Symbol : Ie,
        "%SyntaxError%": yr,
        "%ThrowTypeError%": gy,
        "%TypedArray%": my,
        "%TypeError%": fr,
        "%Uint8Array%": typeof Uint8Array > "u" ? Ie : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? Ie : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array > "u" ? Ie : Uint16Array,
        "%Uint32Array%": typeof Uint32Array > "u" ? Ie : Uint32Array,
        "%URIError%": URIError,
        "%WeakMap%": typeof WeakMap > "u" ? Ie : WeakMap,
        "%WeakRef%": typeof WeakRef > "u" ? Ie : WeakRef,
        "%WeakSet%": typeof WeakSet > "u" ? Ie : WeakSet
    },
    vy = function e(t) {
        var n;
        if (t === "%AsyncFunction%") n = ta("async function () {}");
        else if (t === "%GeneratorFunction%") n = ta("function* () {}");
        else if (t === "%AsyncGeneratorFunction%") n = ta("async function* () {}");
        else if (t === "%AsyncGenerator%") {
            var i = e("%AsyncGeneratorFunction%");
            i && (n = i.prototype)
        } else if (t === "%AsyncIteratorPrototype%") {
            var o = e("%AsyncGenerator%");
            o && (n = xi(o.prototype))
        }
        return pr[t] = n, n
    },
    Ml = {
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
    },
    hs = Fa,
    Js = py,
    yy = hs.call(Function.call, Array.prototype.concat),
    wy = hs.call(Function.apply, Array.prototype.splice),
    Pl = hs.call(Function.call, String.prototype.replace),
    Qs = hs.call(Function.call, String.prototype.slice),
    by = hs.call(Function.call, RegExp.prototype.exec),
    Cy = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
    xy = /\\(\\)?/g,
    Ey = function(t) {
        var n = Qs(t, 0, 1),
            i = Qs(t, -1);
        if (n === "%" && i !== "%") throw new yr("invalid intrinsic syntax, expected closing `%`");
        if (i === "%" && n !== "%") throw new yr("invalid intrinsic syntax, expected opening `%`");
        var o = [];
        return Pl(t, Cy, function(f, v, y, k) {
            o[o.length] = y ? Pl(k, xy, "$1") : v || f
        }), o
    },
    _y = function(t, n) {
        var i = t,
            o;
        if (Js(Ml, i) && (o = Ml[i], i = "%" + o[0] + "%"), Js(pr, i)) {
            var f = pr[i];
            if (f === cr && (f = vy(i)), typeof f > "u" && !n) throw new fr("intrinsic " + t + " exists, but is not available. Please file an issue!");
            return {
                alias: o,
                name: i,
                value: f
            }
        }
        throw new yr("intrinsic " + t + " does not exist!")
    },
    za = function(t, n) {
        if (typeof t != "string" || t.length === 0) throw new fr("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof n != "boolean") throw new fr('"allowMissing" argument must be a boolean');
        if (by(/^%?[^%]*%?$/g, t) === null) throw new yr("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var i = Ey(t),
            o = i.length > 0 ? i[0] : "",
            f = _y("%" + o + "%", n),
            v = f.name,
            y = f.value,
            k = !1,
            A = f.alias;
        A && (o = A[0], wy(i, yy([0, 1], A)));
        for (var D = 1, $ = !0; D < i.length; D += 1) {
            var tt = i[D],
                st = Qs(tt, 0, 1),
                V = Qs(tt, -1);
            if ((st === '"' || st === "'" || st === "`" || V === '"' || V === "'" || V === "`") && st !== V) throw new yr("property names with quotes must have matching quotes");
            if ((tt === "constructor" || !$) && (k = !0), o += "." + tt, v = "%" + o + "%", Js(pr, v)) y = pr[v];
            else if (y != null) {
                if (!(tt in y)) {
                    if (!n) throw new fr("base intrinsic for " + t + " exists, but the property is not available.");
                    return
                }
                if (Hi && D + 1 >= i.length) {
                    var ot = Hi(y, tt);
                    $ = !!ot, $ && "get" in ot && !("originalValue" in ot.get) ? y = ot.get : y = y[tt]
                } else $ = Js(y, tt), y = y[tt];
                $ && !k && (pr[v] = y)
            }
        }
        return y
    },
    Fc = {
        exports: {}
    };
(function(e) {
    var t = Fa,
        n = za,
        i = n("%Function.prototype.apply%"),
        o = n("%Function.prototype.call%"),
        f = n("%Reflect.apply%", !0) || t.call(o, i),
        v = n("%Object.getOwnPropertyDescriptor%", !0),
        y = n("%Object.defineProperty%", !0),
        k = n("%Math.max%");
    if (y) try {
        y({}, "a", {
            value: 1
        })
    } catch {
        y = null
    }
    e.exports = function($) {
        var tt = f(t, o, arguments);
        if (v && y) {
            var st = v(tt, "length");
            st.configurable && y(tt, "length", {
                value: 1 + k(0, $.length - (arguments.length - 1))
            })
        }
        return tt
    };
    var A = function() {
        return f(t, i, arguments)
    };
    y ? y(e.exports, "apply", {
        value: A
    }) : e.exports.apply = A
})(Fc);
var zc = za,
    Hc = Fc.exports,
    Sy = Hc(zc("String.prototype.indexOf")),
    ky = function(t, n) {
        var i = zc(t, !!n);
        return typeof i == "function" && Sy(t, ".prototype.") > -1 ? Hc(i) : i
    };
const Ty = {},
    Ay = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Ty
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Oy = yh(Ay);
var Ha = typeof Map == "function" && Map.prototype,
    na = Object.getOwnPropertyDescriptor && Ha ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null,
    Zs = Ha && na && typeof na.get == "function" ? na.get : null,
    Ry = Ha && Map.prototype.forEach,
    Ua = typeof Set == "function" && Set.prototype,
    ia = Object.getOwnPropertyDescriptor && Ua ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null,
    to = Ua && ia && typeof ia.get == "function" ? ia.get : null,
    Iy = Ua && Set.prototype.forEach,
    Ly = typeof WeakMap == "function" && WeakMap.prototype,
    es = Ly ? WeakMap.prototype.has : null,
    Dy = typeof WeakSet == "function" && WeakSet.prototype,
    ns = Dy ? WeakSet.prototype.has : null,
    My = typeof WeakRef == "function" && WeakRef.prototype,
    Nl = My ? WeakRef.prototype.deref : null,
    Py = Boolean.prototype.valueOf,
    Ny = Object.prototype.toString,
    By = Function.prototype.toString,
    $y = String.prototype.match,
    qa = String.prototype.slice,
    ki = String.prototype.replace,
    Vy = String.prototype.toUpperCase,
    Bl = String.prototype.toLowerCase,
    Uc = RegExp.prototype.test,
    $l = Array.prototype.concat,
    ei = Array.prototype.join,
    jy = Array.prototype.slice,
    Vl = Math.floor,
    _a = typeof BigInt == "function" ? BigInt.prototype.valueOf : null,
    ra = Object.getOwnPropertySymbols,
    Sa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null,
    wr = typeof Symbol == "function" && typeof Symbol.iterator == "object",
    Sn = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === wr ? "object" : "symbol") ? Symbol.toStringTag : null,
    qc = Object.prototype.propertyIsEnumerable,
    jl = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(e) {
        return e.__proto__
    } : null);

function Fl(e, t) {
    if (e === 1 / 0 || e === -1 / 0 || e !== e || e && e > -1e3 && e < 1e3 || Uc.call(/e/, t)) return t;
    var n = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof e == "number") {
        var i = e < 0 ? -Vl(-e) : Vl(e);
        if (i !== e) {
            var o = String(i),
                f = qa.call(t, o.length + 1);
            return ki.call(o, n, "$&_") + "." + ki.call(ki.call(f, /([0-9]{3})/g, "$&_"), /_$/, "")
        }
    }
    return ki.call(t, n, "$&_")
}
var ka = Oy,
    zl = ka.custom,
    Hl = Gc(zl) ? zl : null,
    Fy = function e(t, n, i, o) {
        var f = n || {};
        if (Ei(f, "quoteStyle") && f.quoteStyle !== "single" && f.quoteStyle !== "double") throw new TypeError('option "quoteStyle" must be "single" or "double"');
        if (Ei(f, "maxStringLength") && (typeof f.maxStringLength == "number" ? f.maxStringLength < 0 && f.maxStringLength !== 1 / 0 : f.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
        var v = Ei(f, "customInspect") ? f.customInspect : !0;
        if (typeof v != "boolean" && v !== "symbol") throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
        if (Ei(f, "indent") && f.indent !== null && f.indent !== "	" && !(parseInt(f.indent, 10) === f.indent && f.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
        if (Ei(f, "numericSeparator") && typeof f.numericSeparator != "boolean") throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
        var y = f.numericSeparator;
        if (typeof t > "u") return "undefined";
        if (t === null) return "null";
        if (typeof t == "boolean") return t ? "true" : "false";
        if (typeof t == "string") return Yc(t, f);
        if (typeof t == "number") {
            if (t === 0) return 1 / 0 / t > 0 ? "0" : "-0";
            var k = String(t);
            return y ? Fl(t, k) : k
        }
        if (typeof t == "bigint") {
            var A = String(t) + "n";
            return y ? Fl(t, A) : A
        }
        var D = typeof f.depth > "u" ? 5 : f.depth;
        if (typeof i > "u" && (i = 0), i >= D && D > 0 && typeof t == "object") return Ta(t) ? "[Array]" : "[Object]";
        var $ = sw(f, i);
        if (typeof o > "u") o = [];
        else if (Xc(o, t) >= 0) return "[Circular]";

        function tt(Jt, G, pt) {
            if (G && (o = jy.call(o), o.push(G)), pt) {
                var $t = {
                    depth: f.depth
                };
                return Ei(f, "quoteStyle") && ($t.quoteStyle = f.quoteStyle), e(Jt, $t, i + 1, o)
            }
            return e(Jt, f, i + 1, o)
        }
        if (typeof t == "function" && !Ul(t)) {
            var st = Ky(t),
                V = Ms(t, tt);
            return "[Function" + (st ? ": " + st : " (anonymous)") + "]" + (V.length > 0 ? " { " + ei.call(V, ", ") + " }" : "")
        }
        if (Gc(t)) {
            var ot = wr ? ki.call(String(t), /^(Symbol\(.*\))_[^)]*$/, "$1") : Sa.call(t);
            return typeof t == "object" && !wr ? Yr(ot) : ot
        }
        if (nw(t)) {
            for (var m = "<" + Bl.call(String(t.nodeName)), L = t.attributes || [], X = 0; X < L.length; X++) m += " " + L[X].name + "=" + Wc(zy(L[X].value), "double", f);
            return m += ">", t.childNodes && t.childNodes.length && (m += "..."), m += "</" + Bl.call(String(t.nodeName)) + ">", m
        }
        if (Ta(t)) {
            if (t.length === 0) return "[]";
            var ut = Ms(t, tt);
            return $ && !rw(ut) ? "[" + Aa(ut, $) + "]" : "[ " + ei.call(ut, ", ") + " ]"
        }
        if (Uy(t)) {
            var ht = Ms(t, tt);
            return !("cause" in Error.prototype) && "cause" in t && !qc.call(t, "cause") ? "{ [" + String(t) + "] " + ei.call($l.call("[cause]: " + tt(t.cause), ht), ", ") + " }" : ht.length === 0 ? "[" + String(t) + "]" : "{ [" + String(t) + "] " + ei.call(ht, ", ") + " }"
        }
        if (typeof t == "object" && v) {
            if (Hl && typeof t[Hl] == "function" && ka) return ka(t, {
                depth: D - i
            });
            if (v !== "symbol" && typeof t.inspect == "function") return t.inspect()
        }
        if (Jy(t)) {
            var bt = [];
            return Ry.call(t, function(Jt, G) {
                bt.push(tt(G, t, !0) + " => " + tt(Jt, t))
            }), ql("Map", Zs.call(t), bt, $)
        }
        if (tw(t)) {
            var d = [];
            return Iy.call(t, function(Jt) {
                d.push(tt(Jt, t))
            }), ql("Set", to.call(t), d, $)
        }
        if (Qy(t)) return sa("WeakMap");
        if (ew(t)) return sa("WeakSet");
        if (Zy(t)) return sa("WeakRef");
        if (Wy(t)) return Yr(tt(Number(t)));
        if (Xy(t)) return Yr(tt(_a.call(t)));
        if (Gy(t)) return Yr(Py.call(t));
        if (qy(t)) return Yr(tt(String(t)));
        if (!Hy(t) && !Ul(t)) {
            var kt = Ms(t, tt),
                Vt = jl ? jl(t) === Object.prototype : t instanceof Object || t.constructor === Object,
                Pt = t instanceof Object ? "" : "null prototype",
                Ce = !Vt && Sn && Object(t) === t && Sn in t ? qa.call(Oi(t), 8, -1) : Pt ? "Object" : "",
                Xt = Vt || typeof t.constructor != "function" ? "" : t.constructor.name ? t.constructor.name + " " : "",
                et = Xt + (Ce || Pt ? "[" + ei.call($l.call([], Ce || [], Pt || []), ": ") + "] " : "");
            return kt.length === 0 ? et + "{}" : $ ? et + "{" + Aa(kt, $) + "}" : et + "{ " + ei.call(kt, ", ") + " }"
        }
        return String(t)
    };

function Wc(e, t, n) {
    var i = (n.quoteStyle || t) === "double" ? '"' : "'";
    return i + e + i
}

function zy(e) {
    return ki.call(String(e), /"/g, "&quot;")
}

function Ta(e) {
    return Oi(e) === "[object Array]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Hy(e) {
    return Oi(e) === "[object Date]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Ul(e) {
    return Oi(e) === "[object RegExp]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Uy(e) {
    return Oi(e) === "[object Error]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function qy(e) {
    return Oi(e) === "[object String]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Wy(e) {
    return Oi(e) === "[object Number]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Gy(e) {
    return Oi(e) === "[object Boolean]" && (!Sn || !(typeof e == "object" && Sn in e))
}

function Gc(e) {
    if (wr) return e && typeof e == "object" && e instanceof Symbol;
    if (typeof e == "symbol") return !0;
    if (!e || typeof e != "object" || !Sa) return !1;
    try {
        return Sa.call(e), !0
    } catch {}
    return !1
}

function Xy(e) {
    if (!e || typeof e != "object" || !_a) return !1;
    try {
        return _a.call(e), !0
    } catch {}
    return !1
}
var Yy = Object.prototype.hasOwnProperty || function(e) {
    return e in this
};

function Ei(e, t) {
    return Yy.call(e, t)
}

function Oi(e) {
    return Ny.call(e)
}

function Ky(e) {
    if (e.name) return e.name;
    var t = $y.call(By.call(e), /^function\s*([\w$]+)/);
    return t ? t[1] : null
}

function Xc(e, t) {
    if (e.indexOf) return e.indexOf(t);
    for (var n = 0, i = e.length; n < i; n++)
        if (e[n] === t) return n;
    return -1
}

function Jy(e) {
    if (!Zs || !e || typeof e != "object") return !1;
    try {
        Zs.call(e);
        try {
            to.call(e)
        } catch {
            return !0
        }
        return e instanceof Map
    } catch {}
    return !1
}

function Qy(e) {
    if (!es || !e || typeof e != "object") return !1;
    try {
        es.call(e, es);
        try {
            ns.call(e, ns)
        } catch {
            return !0
        }
        return e instanceof WeakMap
    } catch {}
    return !1
}

function Zy(e) {
    if (!Nl || !e || typeof e != "object") return !1;
    try {
        return Nl.call(e), !0
    } catch {}
    return !1
}

function tw(e) {
    if (!to || !e || typeof e != "object") return !1;
    try {
        to.call(e);
        try {
            Zs.call(e)
        } catch {
            return !0
        }
        return e instanceof Set
    } catch {}
    return !1
}

function ew(e) {
    if (!ns || !e || typeof e != "object") return !1;
    try {
        ns.call(e, ns);
        try {
            es.call(e, es)
        } catch {
            return !0
        }
        return e instanceof WeakSet
    } catch {}
    return !1
}

function nw(e) {
    return !e || typeof e != "object" ? !1 : typeof HTMLElement < "u" && e instanceof HTMLElement ? !0 : typeof e.nodeName == "string" && typeof e.getAttribute == "function"
}

function Yc(e, t) {
    if (e.length > t.maxStringLength) {
        var n = e.length - t.maxStringLength,
            i = "... " + n + " more character" + (n > 1 ? "s" : "");
        return Yc(qa.call(e, 0, t.maxStringLength), t) + i
    }
    var o = ki.call(ki.call(e, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, iw);
    return Wc(o, "single", t)
}

function iw(e) {
    var t = e.charCodeAt(0),
        n = {
            8: "b",
            9: "t",
            10: "n",
            12: "f",
            13: "r"
        } [t];
    return n ? "\\" + n : "\\x" + (t < 16 ? "0" : "") + Vy.call(t.toString(16))
}

function Yr(e) {
    return "Object(" + e + ")"
}

function sa(e) {
    return e + " { ? }"
}

function ql(e, t, n, i) {
    var o = i ? Aa(n, i) : ei.call(n, ", ");
    return e + " (" + t + ") {" + o + "}"
}

function rw(e) {
    for (var t = 0; t < e.length; t++)
        if (Xc(e[t], `
`) >= 0) return !1;
    return !0
}

function sw(e, t) {
    var n;
    if (e.indent === "	") n = "	";
    else if (typeof e.indent == "number" && e.indent > 0) n = ei.call(Array(e.indent + 1), " ");
    else return null;
    return {
        base: n,
        prev: ei.call(Array(t + 1), n)
    }
}

function Aa(e, t) {
    if (e.length === 0) return "";
    var n = `
` + t.prev + t.base;
    return n + ei.call(e, "," + n) + `
` + t.prev
}

function Ms(e, t) {
    var n = Ta(e),
        i = [];
    if (n) {
        i.length = e.length;
        for (var o = 0; o < e.length; o++) i[o] = Ei(e, o) ? t(e[o], e) : ""
    }
    var f = typeof ra == "function" ? ra(e) : [],
        v;
    if (wr) {
        v = {};
        for (var y = 0; y < f.length; y++) v["$" + f[y]] = f[y]
    }
    for (var k in e) !Ei(e, k) || n && String(Number(k)) === k && k < e.length || wr && v["$" + k] instanceof Symbol || (Uc.call(/[^\w$]/, k) ? i.push(t(k, e) + ": " + t(e[k], e)) : i.push(k + ": " + t(e[k], e)));
    if (typeof ra == "function")
        for (var A = 0; A < f.length; A++) qc.call(e, f[A]) && i.push("[" + t(f[A]) + "]: " + t(e[f[A]], e));
    return i
}
var Wa = za,
    Tr = ky,
    ow = Fy,
    aw = Wa("%TypeError%"),
    Ps = Wa("%WeakMap%", !0),
    Ns = Wa("%Map%", !0),
    lw = Tr("WeakMap.prototype.get", !0),
    cw = Tr("WeakMap.prototype.set", !0),
    uw = Tr("WeakMap.prototype.has", !0),
    hw = Tr("Map.prototype.get", !0),
    dw = Tr("Map.prototype.set", !0),
    fw = Tr("Map.prototype.has", !0),
    Ga = function(e, t) {
        for (var n = e, i;
            (i = n.next) !== null; n = i)
            if (i.key === t) return n.next = i.next, i.next = e.next, e.next = i, i
    },
    pw = function(e, t) {
        var n = Ga(e, t);
        return n && n.value
    },
    gw = function(e, t, n) {
        var i = Ga(e, t);
        i ? i.value = n : e.next = {
            key: t,
            next: e.next,
            value: n
        }
    },
    mw = function(e, t) {
        return !!Ga(e, t)
    },
    vw = function() {
        var t, n, i, o = {
            assert: function(f) {
                if (!o.has(f)) throw new aw("Side channel does not contain " + ow(f))
            },
            get: function(f) {
                if (Ps && f && (typeof f == "object" || typeof f == "function")) {
                    if (t) return lw(t, f)
                } else if (Ns) {
                    if (n) return hw(n, f)
                } else if (i) return pw(i, f)
            },
            has: function(f) {
                if (Ps && f && (typeof f == "object" || typeof f == "function")) {
                    if (t) return uw(t, f)
                } else if (Ns) {
                    if (n) return fw(n, f)
                } else if (i) return mw(i, f);
                return !1
            },
            set: function(f, v) {
                Ps && f && (typeof f == "object" || typeof f == "function") ? (t || (t = new Ps), cw(t, f, v)) : Ns ? (n || (n = new Ns), dw(n, f, v)) : (i || (i = {
                    key: {},
                    next: null
                }), gw(i, f, v))
            }
        };
        return o
    },
    yw = String.prototype.replace,
    ww = /%20/g,
    oa = {
        RFC1738: "RFC1738",
        RFC3986: "RFC3986"
    },
    Xa = {
        default: oa.RFC3986,
        formatters: {
            RFC1738: function(e) {
                return yw.call(e, ww, "+")
            },
            RFC3986: function(e) {
                return String(e)
            }
        },
        RFC1738: oa.RFC1738,
        RFC3986: oa.RFC3986
    },
    bw = Xa,
    aa = Object.prototype.hasOwnProperty,
    Fi = Array.isArray,
    Zn = function() {
        for (var e = [], t = 0; t < 256; ++t) e.push("%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase());
        return e
    }(),
    Cw = function(t) {
        for (; t.length > 1;) {
            var n = t.pop(),
                i = n.obj[n.prop];
            if (Fi(i)) {
                for (var o = [], f = 0; f < i.length; ++f) typeof i[f] < "u" && o.push(i[f]);
                n.obj[n.prop] = o
            }
        }
    },
    Kc = function(t, n) {
        for (var i = n && n.plainObjects ? Object.create(null) : {}, o = 0; o < t.length; ++o) typeof t[o] < "u" && (i[o] = t[o]);
        return i
    },
    xw = function e(t, n, i) {
        if (!n) return t;
        if (typeof n != "object") {
            if (Fi(t)) t.push(n);
            else if (t && typeof t == "object")(i && (i.plainObjects || i.allowPrototypes) || !aa.call(Object.prototype, n)) && (t[n] = !0);
            else return [t, n];
            return t
        }
        if (!t || typeof t != "object") return [t].concat(n);
        var o = t;
        return Fi(t) && !Fi(n) && (o = Kc(t, i)), Fi(t) && Fi(n) ? (n.forEach(function(f, v) {
            if (aa.call(t, v)) {
                var y = t[v];
                y && typeof y == "object" && f && typeof f == "object" ? t[v] = e(y, f, i) : t.push(f)
            } else t[v] = f
        }), t) : Object.keys(n).reduce(function(f, v) {
            var y = n[v];
            return aa.call(f, v) ? f[v] = e(f[v], y, i) : f[v] = y, f
        }, o)
    },
    Ew = function(t, n) {
        return Object.keys(n).reduce(function(i, o) {
            return i[o] = n[o], i
        }, t)
    },
    _w = function(e, t, n) {
        var i = e.replace(/\+/g, " ");
        if (n === "iso-8859-1") return i.replace(/%[0-9a-f]{2}/gi, unescape);
        try {
            return decodeURIComponent(i)
        } catch {
            return i
        }
    },
    Sw = function(t, n, i, o, f) {
        if (t.length === 0) return t;
        var v = t;
        if (typeof t == "symbol" ? v = Symbol.prototype.toString.call(t) : typeof t != "string" && (v = String(t)), i === "iso-8859-1") return escape(v).replace(/%u[0-9a-f]{4}/gi, function(D) {
            return "%26%23" + parseInt(D.slice(2), 16) + "%3B"
        });
        for (var y = "", k = 0; k < v.length; ++k) {
            var A = v.charCodeAt(k);
            if (A === 45 || A === 46 || A === 95 || A === 126 || A >= 48 && A <= 57 || A >= 65 && A <= 90 || A >= 97 && A <= 122 || f === bw.RFC1738 && (A === 40 || A === 41)) {
                y += v.charAt(k);
                continue
            }
            if (A < 128) {
                y = y + Zn[A];
                continue
            }
            if (A < 2048) {
                y = y + (Zn[192 | A >> 6] + Zn[128 | A & 63]);
                continue
            }
            if (A < 55296 || A >= 57344) {
                y = y + (Zn[224 | A >> 12] + Zn[128 | A >> 6 & 63] + Zn[128 | A & 63]);
                continue
            }
            k += 1, A = 65536 + ((A & 1023) << 10 | v.charCodeAt(k) & 1023), y += Zn[240 | A >> 18] + Zn[128 | A >> 12 & 63] + Zn[128 | A >> 6 & 63] + Zn[128 | A & 63]
        }
        return y
    },
    kw = function(t) {
        for (var n = [{
                obj: {
                    o: t
                },
                prop: "o"
            }], i = [], o = 0; o < n.length; ++o)
            for (var f = n[o], v = f.obj[f.prop], y = Object.keys(v), k = 0; k < y.length; ++k) {
                var A = y[k],
                    D = v[A];
                typeof D == "object" && D !== null && i.indexOf(D) === -1 && (n.push({
                    obj: v,
                    prop: A
                }), i.push(D))
            }
        return Cw(n), t
    },
    Tw = function(t) {
        return Object.prototype.toString.call(t) === "[object RegExp]"
    },
    Aw = function(t) {
        return !t || typeof t != "object" ? !1 : !!(t.constructor && t.constructor.isBuffer && t.constructor.isBuffer(t))
    },
    Ow = function(t, n) {
        return [].concat(t, n)
    },
    Rw = function(t, n) {
        if (Fi(t)) {
            for (var i = [], o = 0; o < t.length; o += 1) i.push(n(t[o]));
            return i
        }
        return n(t)
    },
    Jc = {
        arrayToObject: Kc,
        assign: Ew,
        combine: Ow,
        compact: kw,
        decode: _w,
        encode: Sw,
        isBuffer: Aw,
        isRegExp: Tw,
        maybeMap: Rw,
        merge: xw
    },
    Qc = vw,
    Oa = Jc,
    is = Xa,
    Iw = Object.prototype.hasOwnProperty,
    Wl = {
        brackets: function(t) {
            return t + "[]"
        },
        comma: "comma",
        indices: function(t, n) {
            return t + "[" + n + "]"
        },
        repeat: function(t) {
            return t
        }
    },
    pi = Array.isArray,
    Lw = String.prototype.split,
    Dw = Array.prototype.push,
    Zc = function(e, t) {
        Dw.apply(e, pi(t) ? t : [t])
    },
    Mw = Date.prototype.toISOString,
    Gl = is.default,
    bn = {
        addQueryPrefix: !1,
        allowDots: !1,
        charset: "utf-8",
        charsetSentinel: !1,
        delimiter: "&",
        encode: !0,
        encoder: Oa.encode,
        encodeValuesOnly: !1,
        format: Gl,
        formatter: is.formatters[Gl],
        indices: !1,
        serializeDate: function(t) {
            return Mw.call(t)
        },
        skipNulls: !1,
        strictNullHandling: !1
    },
    Pw = function(t) {
        return typeof t == "string" || typeof t == "number" || typeof t == "boolean" || typeof t == "symbol" || typeof t == "bigint"
    },
    la = {},
    Nw = function e(t, n, i, o, f, v, y, k, A, D, $, tt, st, V, ot, m) {
        for (var L = t, X = m, ut = 0, ht = !1;
            (X = X.get(la)) !== void 0 && !ht;) {
            var bt = X.get(t);
            if (ut += 1, typeof bt < "u") {
                if (bt === ut) throw new RangeError("Cyclic object value");
                ht = !0
            }
            typeof X.get(la) > "u" && (ut = 0)
        }
        if (typeof k == "function" ? L = k(n, L) : L instanceof Date ? L = $(L) : i === "comma" && pi(L) && (L = Oa.maybeMap(L, function(vt) {
                return vt instanceof Date ? $(vt) : vt
            })), L === null) {
            if (f) return y && !V ? y(n, bn.encoder, ot, "key", tt) : n;
            L = ""
        }
        if (Pw(L) || Oa.isBuffer(L)) {
            if (y) {
                var d = V ? n : y(n, bn.encoder, ot, "key", tt);
                if (i === "comma" && V) {
                    for (var kt = Lw.call(String(L), ","), Vt = "", Pt = 0; Pt < kt.length; ++Pt) Vt += (Pt === 0 ? "" : ",") + st(y(kt[Pt], bn.encoder, ot, "value", tt));
                    return [st(d) + (o && pi(L) && kt.length === 1 ? "[]" : "") + "=" + Vt]
                }
                return [st(d) + "=" + st(y(L, bn.encoder, ot, "value", tt))]
            }
            return [st(n) + "=" + st(String(L))]
        }
        var Ce = [];
        if (typeof L > "u") return Ce;
        var Xt;
        if (i === "comma" && pi(L)) Xt = [{
            value: L.length > 0 ? L.join(",") || null : void 0
        }];
        else if (pi(k)) Xt = k;
        else {
            var et = Object.keys(L);
            Xt = A ? et.sort(A) : et
        }
        for (var Jt = o && pi(L) && L.length === 1 ? n + "[]" : n, G = 0; G < Xt.length; ++G) {
            var pt = Xt[G],
                $t = typeof pt == "object" && typeof pt.value < "u" ? pt.value : L[pt];
            if (!(v && $t === null)) {
                var At = pi(L) ? typeof i == "function" ? i(Jt, pt) : Jt : Jt + (D ? "." + pt : "[" + pt + "]");
                m.set(t, ut);
                var Tt = Qc();
                Tt.set(la, m), Zc(Ce, e($t, At, i, o, f, v, y, k, A, D, $, tt, st, V, ot, Tt))
            }
        }
        return Ce
    },
    Bw = function(t) {
        if (!t) return bn;
        if (t.encoder !== null && typeof t.encoder < "u" && typeof t.encoder != "function") throw new TypeError("Encoder has to be a function.");
        var n = t.charset || bn.charset;
        if (typeof t.charset < "u" && t.charset !== "utf-8" && t.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var i = is.default;
        if (typeof t.format < "u") {
            if (!Iw.call(is.formatters, t.format)) throw new TypeError("Unknown format option provided.");
            i = t.format
        }
        var o = is.formatters[i],
            f = bn.filter;
        return (typeof t.filter == "function" || pi(t.filter)) && (f = t.filter), {
            addQueryPrefix: typeof t.addQueryPrefix == "boolean" ? t.addQueryPrefix : bn.addQueryPrefix,
            allowDots: typeof t.allowDots > "u" ? bn.allowDots : !!t.allowDots,
            charset: n,
            charsetSentinel: typeof t.charsetSentinel == "boolean" ? t.charsetSentinel : bn.charsetSentinel,
            delimiter: typeof t.delimiter > "u" ? bn.delimiter : t.delimiter,
            encode: typeof t.encode == "boolean" ? t.encode : bn.encode,
            encoder: typeof t.encoder == "function" ? t.encoder : bn.encoder,
            encodeValuesOnly: typeof t.encodeValuesOnly == "boolean" ? t.encodeValuesOnly : bn.encodeValuesOnly,
            filter: f,
            format: i,
            formatter: o,
            serializeDate: typeof t.serializeDate == "function" ? t.serializeDate : bn.serializeDate,
            skipNulls: typeof t.skipNulls == "boolean" ? t.skipNulls : bn.skipNulls,
            sort: typeof t.sort == "function" ? t.sort : null,
            strictNullHandling: typeof t.strictNullHandling == "boolean" ? t.strictNullHandling : bn.strictNullHandling
        }
    },
    $w = function(e, t) {
        var n = e,
            i = Bw(t),
            o, f;
        typeof i.filter == "function" ? (f = i.filter, n = f("", n)) : pi(i.filter) && (f = i.filter, o = f);
        var v = [];
        if (typeof n != "object" || n === null) return "";
        var y;
        t && t.arrayFormat in Wl ? y = t.arrayFormat : t && "indices" in t ? y = t.indices ? "indices" : "repeat" : y = "indices";
        var k = Wl[y];
        if (t && "commaRoundTrip" in t && typeof t.commaRoundTrip != "boolean") throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
        var A = k === "comma" && t && t.commaRoundTrip;
        o || (o = Object.keys(n)), i.sort && o.sort(i.sort);
        for (var D = Qc(), $ = 0; $ < o.length; ++$) {
            var tt = o[$];
            i.skipNulls && n[tt] === null || Zc(v, Nw(n[tt], tt, k, A, i.strictNullHandling, i.skipNulls, i.encode ? i.encoder : null, i.filter, i.sort, i.allowDots, i.serializeDate, i.format, i.formatter, i.encodeValuesOnly, i.charset, D))
        }
        var st = v.join(i.delimiter),
            V = i.addQueryPrefix === !0 ? "?" : "";
        return i.charsetSentinel && (i.charset === "iso-8859-1" ? V += "utf8=%26%2310003%3B&" : V += "utf8=%E2%9C%93&"), st.length > 0 ? V + st : ""
    },
    br = Jc,
    Ra = Object.prototype.hasOwnProperty,
    Vw = Array.isArray,
    vn = {
        allowDots: !1,
        allowPrototypes: !1,
        allowSparse: !1,
        arrayLimit: 20,
        charset: "utf-8",
        charsetSentinel: !1,
        comma: !1,
        decoder: br.decode,
        delimiter: "&",
        depth: 5,
        ignoreQueryPrefix: !1,
        interpretNumericEntities: !1,
        parameterLimit: 1e3,
        parseArrays: !0,
        plainObjects: !1,
        strictNullHandling: !1
    },
    jw = function(e) {
        return e.replace(/&#(\d+);/g, function(t, n) {
            return String.fromCharCode(parseInt(n, 10))
        })
    },
    tu = function(e, t) {
        return e && typeof e == "string" && t.comma && e.indexOf(",") > -1 ? e.split(",") : e
    },
    Fw = "utf8=%26%2310003%3B",
    zw = "utf8=%E2%9C%93",
    Hw = function(t, n) {
        var i = {},
            o = n.ignoreQueryPrefix ? t.replace(/^\?/, "") : t,
            f = n.parameterLimit === 1 / 0 ? void 0 : n.parameterLimit,
            v = o.split(n.delimiter, f),
            y = -1,
            k, A = n.charset;
        if (n.charsetSentinel)
            for (k = 0; k < v.length; ++k) v[k].indexOf("utf8=") === 0 && (v[k] === zw ? A = "utf-8" : v[k] === Fw && (A = "iso-8859-1"), y = k, k = v.length);
        for (k = 0; k < v.length; ++k)
            if (k !== y) {
                var D = v[k],
                    $ = D.indexOf("]="),
                    tt = $ === -1 ? D.indexOf("=") : $ + 1,
                    st, V;
                tt === -1 ? (st = n.decoder(D, vn.decoder, A, "key"), V = n.strictNullHandling ? null : "") : (st = n.decoder(D.slice(0, tt), vn.decoder, A, "key"), V = br.maybeMap(tu(D.slice(tt + 1), n), function(ot) {
                    return n.decoder(ot, vn.decoder, A, "value")
                })), V && n.interpretNumericEntities && A === "iso-8859-1" && (V = jw(V)), D.indexOf("[]=") > -1 && (V = Vw(V) ? [V] : V), Ra.call(i, st) ? i[st] = br.combine(i[st], V) : i[st] = V
            } return i
    },
    Uw = function(e, t, n, i) {
        for (var o = i ? t : tu(t, n), f = e.length - 1; f >= 0; --f) {
            var v, y = e[f];
            if (y === "[]" && n.parseArrays) v = [].concat(o);
            else {
                v = n.plainObjects ? Object.create(null) : {};
                var k = y.charAt(0) === "[" && y.charAt(y.length - 1) === "]" ? y.slice(1, -1) : y,
                    A = parseInt(k, 10);
                !n.parseArrays && k === "" ? v = {
                    0: o
                } : !isNaN(A) && y !== k && String(A) === k && A >= 0 && n.parseArrays && A <= n.arrayLimit ? (v = [], v[A] = o) : k !== "__proto__" && (v[k] = o)
            }
            o = v
        }
        return o
    },
    qw = function(t, n, i, o) {
        if (!!t) {
            var f = i.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t,
                v = /(\[[^[\]]*])/,
                y = /(\[[^[\]]*])/g,
                k = i.depth > 0 && v.exec(f),
                A = k ? f.slice(0, k.index) : f,
                D = [];
            if (A) {
                if (!i.plainObjects && Ra.call(Object.prototype, A) && !i.allowPrototypes) return;
                D.push(A)
            }
            for (var $ = 0; i.depth > 0 && (k = y.exec(f)) !== null && $ < i.depth;) {
                if ($ += 1, !i.plainObjects && Ra.call(Object.prototype, k[1].slice(1, -1)) && !i.allowPrototypes) return;
                D.push(k[1])
            }
            return k && D.push("[" + f.slice(k.index) + "]"), Uw(D, n, i, o)
        }
    },
    Ww = function(t) {
        if (!t) return vn;
        if (t.decoder !== null && t.decoder !== void 0 && typeof t.decoder != "function") throw new TypeError("Decoder has to be a function.");
        if (typeof t.charset < "u" && t.charset !== "utf-8" && t.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var n = typeof t.charset > "u" ? vn.charset : t.charset;
        return {
            allowDots: typeof t.allowDots > "u" ? vn.allowDots : !!t.allowDots,
            allowPrototypes: typeof t.allowPrototypes == "boolean" ? t.allowPrototypes : vn.allowPrototypes,
            allowSparse: typeof t.allowSparse == "boolean" ? t.allowSparse : vn.allowSparse,
            arrayLimit: typeof t.arrayLimit == "number" ? t.arrayLimit : vn.arrayLimit,
            charset: n,
            charsetSentinel: typeof t.charsetSentinel == "boolean" ? t.charsetSentinel : vn.charsetSentinel,
            comma: typeof t.comma == "boolean" ? t.comma : vn.comma,
            decoder: typeof t.decoder == "function" ? t.decoder : vn.decoder,
            delimiter: typeof t.delimiter == "string" || br.isRegExp(t.delimiter) ? t.delimiter : vn.delimiter,
            depth: typeof t.depth == "number" || t.depth === !1 ? +t.depth : vn.depth,
            ignoreQueryPrefix: t.ignoreQueryPrefix === !0,
            interpretNumericEntities: typeof t.interpretNumericEntities == "boolean" ? t.interpretNumericEntities : vn.interpretNumericEntities,
            parameterLimit: typeof t.parameterLimit == "number" ? t.parameterLimit : vn.parameterLimit,
            parseArrays: t.parseArrays !== !1,
            plainObjects: typeof t.plainObjects == "boolean" ? t.plainObjects : vn.plainObjects,
            strictNullHandling: typeof t.strictNullHandling == "boolean" ? t.strictNullHandling : vn.strictNullHandling
        }
    },
    Gw = function(e, t) {
        var n = Ww(t);
        if (e === "" || e === null || typeof e > "u") return n.plainObjects ? Object.create(null) : {};
        for (var i = typeof e == "string" ? Hw(e, n) : e, o = n.plainObjects ? Object.create(null) : {}, f = Object.keys(i), v = 0; v < f.length; ++v) {
            var y = f[v],
                k = qw(y, i[y], n, typeof e == "string");
            o = br.merge(o, k, n)
        }
        return n.allowSparse === !0 ? o : br.compact(o)
    },
    Xw = $w,
    Yw = Gw,
    Kw = Xa,
    eu = {
        formats: Kw,
        parse: Yw,
        stringify: Xw
    };
class Jw {
    constructor(t) {
        this.code = t.code, this.token = t.token, this.host = t.host
    }
}
class Qw {
    constructor(t) {
        this.appId = t.appId, this.appTag = t.appTag, this.audienceEnabled = t.audienceEnabled, this.code = t.code, this.host = t.host, this.audienceHost = t.audienceHost, this.locked = t.locked, this.full = t.full, this.moderationEnabled = t.moderationEnabled, this.passwordRequired = t.passwordRequired, this.twitchLocked = t.twitchLocked, this.locale = t.locale, this.keepalive = t.keepalive, this.controllerBranch = t.controllerBranch
    }
}
class Zw {
    constructor(t) {
        this.connections = t.connections
    }
}
class tb {
    constructor(t) {
        this.cause = t.cause
    }
    whenReceived(t) {
        t.disconnect()
    }
}
class eb {}
var po = {
    CreateRoomReply: Jw,
    GetRoomReply: Qw,
    GetAudienceReply: Zw,
    RoomExit: tb,
    RoomLock: eb
};
const Xl = Ea.exports,
    nb = eu,
    {
        CreateRoomReply: ib,
        GetRoomReply: rb
    } = po;
class sb {
    constructor(t) {
        if (!t.host) throw new Error("unable to create ecast APIClient: no host provided");
        if (this.host = t.host, !t.scheme) throw new Error("unable to create ecast APIClient: no scheme provided");
        this.scheme = t.scheme
    }
    url(t, n) {
        if (n) {
            let i = nb.stringify(n);
            return `${this.scheme}://${window.location.hostname}/api/v2${t}?${i}`
        }
        return `${this.scheme}://${window.location.hostname}/api/v2${t}`
    }
    async createRoom(t) {
        let n = {
            userId: t.userId || "fart",
            appTag: t.appTag || "test"
        };
        t.password && (n.password = t.password), t.moderatorPassword && (n.moderatorPassword = t.moderatorPassword), t.twitchLocked && (n.twitchLocked = t.twitchLocked), t.locale && (n.locale = t.locale), t.keepalive && (n.keepalive = t.keepalive), t.controllerBranch && (n.controllerBranch = t.controllerBranch);
        let i = this.url("/rooms", n),
            v = await (await Xl(i, {
                method: "POST"
            })).json();
        if (!v.ok) throw new Error(`failed to create room: ${v.error}`);
        let y = v.body;
        return new ib({
            code: y.code,
            token: y.token,
            host: y.host
        })
    }
    async getRoom(t) {
        let n = this.url(`/rooms/${t.code}`),
            o = await (await Xl(n)).json();
        if (!o.ok) throw new Error(`unable to get room with options ${JSON.stringify(t)}: ${o.error}`);
        let f = o.body;
        return new rb({
            appId: f.appId,
            appTag: f.appTag,
            audienceEnabled: f.audienceEnabled,
            code: f.code,
            host: f.host,
            audienceHost: f.audienceHost,
            locked: f.locked,
            full: f.full,
            moderationEnabled: f.moderationEnabled,
            passwordRequired: f.passwordRequired,
            twitchLocked: f.twitchLocked,
            locale: f.locale,
            keepalive: f.keepalive,
            controllerBranch: f.controllerBranch
        })
    }
}
var ob = {
        APIClient: sb
    },
    ur = null;
typeof WebSocket < "u" ? ur = WebSocket : typeof MozWebSocket < "u" ? ur = MozWebSocket : typeof Re < "u" ? ur = Re.WebSocket || Re.MozWebSocket : typeof window < "u" ? ur = window.WebSocket || window.MozWebSocket : typeof self < "u" && (ur = self.WebSocket || self.MozWebSocket);
var ab = ur,
    Ya = {
        exports: {}
    },
    gr = typeof Reflect == "object" ? Reflect : null,
    Yl = gr && typeof gr.apply == "function" ? gr.apply : function(t, n, i) {
        return Function.prototype.apply.call(t, n, i)
    },
    Hs;
gr && typeof gr.ownKeys == "function" ? Hs = gr.ownKeys : Object.getOwnPropertySymbols ? Hs = function(t) {
    return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))
} : Hs = function(t) {
    return Object.getOwnPropertyNames(t)
};

function lb(e) {
    console && console.warn && console.warn(e)
}
var nu = Number.isNaN || function(t) {
    return t !== t
};

function He() {
    He.init.call(this)
}
Ya.exports = He;
Ya.exports.once = db;
He.EventEmitter = He;
He.prototype._events = void 0;
He.prototype._eventsCount = 0;
He.prototype._maxListeners = void 0;
var Kl = 10;

function go(e) {
    if (typeof e != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
}
Object.defineProperty(He, "defaultMaxListeners", {
    enumerable: !0,
    get: function() {
        return Kl
    },
    set: function(e) {
        if (typeof e != "number" || e < 0 || nu(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
        Kl = e
    }
});
He.init = function() {
    (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
};
He.prototype.setMaxListeners = function(t) {
    if (typeof t != "number" || t < 0 || nu(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
    return this._maxListeners = t, this
};

function iu(e) {
    return e._maxListeners === void 0 ? He.defaultMaxListeners : e._maxListeners
}
He.prototype.getMaxListeners = function() {
    return iu(this)
};
He.prototype.emit = function(t) {
    for (var n = [], i = 1; i < arguments.length; i++) n.push(arguments[i]);
    var o = t === "error",
        f = this._events;
    if (f !== void 0) o = o && f.error === void 0;
    else if (!o) return !1;
    if (o) {
        var v;
        if (n.length > 0 && (v = n[0]), v instanceof Error) throw v;
        var y = new Error("Unhandled error." + (v ? " (" + v.message + ")" : ""));
        throw y.context = v, y
    }
    var k = f[t];
    if (k === void 0) return !1;
    if (typeof k == "function") Yl(k, this, n);
    else
        for (var A = k.length, D = lu(k, A), i = 0; i < A; ++i) Yl(D[i], this, n);
    return !0
};

function ru(e, t, n, i) {
    var o, f, v;
    if (go(n), f = e._events, f === void 0 ? (f = e._events = Object.create(null), e._eventsCount = 0) : (f.newListener !== void 0 && (e.emit("newListener", t, n.listener ? n.listener : n), f = e._events), v = f[t]), v === void 0) v = f[t] = n, ++e._eventsCount;
    else if (typeof v == "function" ? v = f[t] = i ? [n, v] : [v, n] : i ? v.unshift(n) : v.push(n), o = iu(e), o > 0 && v.length > o && !v.warned) {
        v.warned = !0;
        var y = new Error("Possible EventEmitter memory leak detected. " + v.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        y.name = "MaxListenersExceededWarning", y.emitter = e, y.type = t, y.count = v.length, lb(y)
    }
    return e
}
He.prototype.addListener = function(t, n) {
    return ru(this, t, n, !1)
};
He.prototype.on = He.prototype.addListener;
He.prototype.prependListener = function(t, n) {
    return ru(this, t, n, !0)
};

function cb() {
    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
}

function su(e, t, n) {
    var i = {
            fired: !1,
            wrapFn: void 0,
            target: e,
            type: t,
            listener: n
        },
        o = cb.bind(i);
    return o.listener = n, i.wrapFn = o, o
}
He.prototype.once = function(t, n) {
    return go(n), this.on(t, su(this, t, n)), this
};
He.prototype.prependOnceListener = function(t, n) {
    return go(n), this.prependListener(t, su(this, t, n)), this
};
He.prototype.removeListener = function(t, n) {
    var i, o, f, v, y;
    if (go(n), o = this._events, o === void 0) return this;
    if (i = o[t], i === void 0) return this;
    if (i === n || i.listener === n) --this._eventsCount === 0 ? this._events = Object.create(null) : (delete o[t], o.removeListener && this.emit("removeListener", t, i.listener || n));
    else if (typeof i != "function") {
        for (f = -1, v = i.length - 1; v >= 0; v--)
            if (i[v] === n || i[v].listener === n) {
                y = i[v].listener, f = v;
                break
            } if (f < 0) return this;
        f === 0 ? i.shift() : ub(i, f), i.length === 1 && (o[t] = i[0]), o.removeListener !== void 0 && this.emit("removeListener", t, y || n)
    }
    return this
};
He.prototype.off = He.prototype.removeListener;
He.prototype.removeAllListeners = function(t) {
    var n, i, o;
    if (i = this._events, i === void 0) return this;
    if (i.removeListener === void 0) return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : i[t] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete i[t]), this;
    if (arguments.length === 0) {
        var f = Object.keys(i),
            v;
        for (o = 0; o < f.length; ++o) v = f[o], v !== "removeListener" && this.removeAllListeners(v);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
    }
    if (n = i[t], typeof n == "function") this.removeListener(t, n);
    else if (n !== void 0)
        for (o = n.length - 1; o >= 0; o--) this.removeListener(t, n[o]);
    return this
};

function ou(e, t, n) {
    var i = e._events;
    if (i === void 0) return [];
    var o = i[t];
    return o === void 0 ? [] : typeof o == "function" ? n ? [o.listener || o] : [o] : n ? hb(o) : lu(o, o.length)
}
He.prototype.listeners = function(t) {
    return ou(this, t, !0)
};
He.prototype.rawListeners = function(t) {
    return ou(this, t, !1)
};
He.listenerCount = function(e, t) {
    return typeof e.listenerCount == "function" ? e.listenerCount(t) : au.call(e, t)
};
He.prototype.listenerCount = au;

function au(e) {
    var t = this._events;
    if (t !== void 0) {
        var n = t[e];
        if (typeof n == "function") return 1;
        if (n !== void 0) return n.length
    }
    return 0
}
He.prototype.eventNames = function() {
    return this._eventsCount > 0 ? Hs(this._events) : []
};

function lu(e, t) {
    for (var n = new Array(t), i = 0; i < t; ++i) n[i] = e[i];
    return n
}

function ub(e, t) {
    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
    e.pop()
}

function hb(e) {
    for (var t = new Array(e.length), n = 0; n < t.length; ++n) t[n] = e[n].listener || e[n];
    return t
}

function db(e, t) {
    return new Promise(function(n, i) {
        function o(v) {
            e.removeListener(t, f), i(v)
        }

        function f() {
            typeof e.removeListener == "function" && e.removeListener("error", o), n([].slice.call(arguments))
        }
        cu(e, t, f, {
            once: !0
        }), t !== "error" && fb(e, o, {
            once: !0
        })
    })
}

function fb(e, t, n) {
    typeof e.on == "function" && cu(e, "error", t, n)
}

function cu(e, t, n, i) {
    if (typeof e.on == "function") i.once ? e.once(t, n) : e.on(t, n);
    else if (typeof e.addEventListener == "function") e.addEventListener(t, function o(f) {
        i.once && e.removeEventListener(t, o), n(f)
    });
    else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e)
}
class pb {
    constructor(t) {
        t && (this.error = t.error, this.to = t.to)
    }
    toString() {
        return `ObservedError{
	to:${this.to}
	error:${this.error}
}`
    }
}
class mo extends Error {
    constructor(t) {
        super(t), t && (this.code = t.code, this.message = t.message)
    }
}
class ds extends mo {
    constructor(t) {
        super(t), this.code = 1e3, this.message = t && t.message ? t.message : "ecast server error"
    }
}
class uu extends ds {
    constructor(t) {
        super(t), this.code = 1001, this.message = t && t.message ? t.message : "create room failed"
    }
}
class hu extends ds {
    constructor(t) {
        super(t), this.code = 1002, this.message = t && t.message ? t.message : "unable to connect to room"
    }
}
class du extends ds {
    constructor(t) {
        super(t), this.code = 1003, this.message = t && t.message ? t.message : "server is shutting down"
    }
}
class je extends mo {
    constructor(t) {
        super(t), this.code = 2e3, this.message = t && t.message ? t.message : "ecast client error"
    }
}
class fu extends je {
    constructor(t) {
        super(t), this.code = 2001, this.message = t && t.message ? t.message : "parse error in ecast protocol"
    }
}
class pu extends je {
    constructor(t) {
        super(t), this.code = 2002, this.message = t && t.message ? t.message : "missing opcode"
    }
}
class gu extends je {
    constructor(t) {
        super(t), this.code = 2003, this.message = t && t.message ? t.message : "invalid opcode"
    }
}
class mu extends je {
    constructor(t) {
        super(t), this.code = 2004, this.message = t && t.message ? t.message : "invalid arguments"
    }
}
class vu extends je {
    constructor(t) {
        super(t), this.code = 2005, this.message = t && t.message ? t.message : "entity not found"
    }
}
class yu extends je {
    constructor(t) {
        super(t), this.code = 2006, this.message = t && t.message ? t.message : "an entity already exists with that key"
    }
}
class wu extends je {
    constructor(t) {
        super(t), this.code = 2007, this.message = t && t.message ? t.message : "the entity is not of the expected type"
    }
}
class bu extends je {
    constructor(t) {
        super(t), this.code = 2008, this.message = t && t.message ? t.message : "no such client"
    }
}
class Cu extends je {
    constructor(t) {
        super(t), this.code = 2009, this.message = t && t.message ? t.message : "room is locked"
    }
}
class xu extends je {
    constructor(t) {
        super(t), this.code = 2010, this.message = t && t.message ? t.message : "room is full"
    }
}
class Eu extends je {
    constructor(t) {
        super(t), this.code = 2011, this.message = t && t.message ? t.message : "no such license"
    }
}
class _u extends je {
    constructor(t) {
        super(t), this.code = 2012, this.message = t && t.message ? t.message : "invalid license"
    }
}
class Su extends je {
    constructor(t) {
        super(t), this.code = 2013, this.message = t && t.message ? t.message : "room not found"
    }
}
class ku extends je {
    constructor(t) {
        super(t), this.code = 2014, this.message = t && t.message ? t.message : "requested role does not exist"
    }
}
class Tu extends je {
    constructor(t) {
        super(t), this.code = 2015, this.message = t && t.message ? t.message : "twitch login required"
    }
}
class Au extends je {
    constructor(t) {
        super(t), this.code = 2016, this.message = t && t.message ? t.message : "no such option"
    }
}
class Ou extends je {
    constructor(t) {
        super(t), this.code = 2017, this.message = t && t.message ? t.message : "password required"
    }
}
class Ru extends je {
    constructor(t) {
        super(t), this.code = 2018, this.message = t && t.message ? t.message : "invalid room password"
    }
}
class Iu extends je {
    constructor(t) {
        super(t), this.code = 2019, this.message = t && t.message ? t.message : "missing name"
    }
}
class Lu extends je {
    constructor(t) {
        super(t), this.code = 2021, this.message = t && t.message ? t.message : "text did not pass text filters"
    }
}
class Du extends je {
    constructor(t) {
        super(t), this.code = 2022, this.message = t && t.message ? t.message : "no such filter"
    }
}
class Mu extends je {
    constructor(t) {
        super(t), this.code = 2023, this.message = t && t.message ? t.message : "permission denied"
    }
}
class Pu extends je {
    constructor(t) {
        super(t), this.code = 2024, this.message = t && t.message ? t.message : "not connected to a room"
    }
}
class Nu extends je {
    constructor(t) {
        super(t), this.code = 2025, this.message = t && t.message ? t.message : "illegal operation"
    }
}
class Bu extends je {
    constructor(t) {
        super(t), this.code = 2026, this.message = t && t.message ? t.message : "invalid ACL change"
    }
}
class $u extends je {
    constructor(t) {
        super(t), this.code = 2027, this.message = t && t.message ? t.message : "room has already ended"
    }
}
class Vu extends je {
    constructor(t) {
        super(t), this.code = 2028, this.message = t && t.message ? t.message : "the entity is locked"
    }
}
class ju extends je {
    constructor(t) {
        super(t), this.code = 2420, this.message = t && t.message ? t.message : "rate limit exceeded"
    }
}

function gb({
    code: e,
    message: t
}) {
    const n = mb[e];
    return n ? new n({
        message: t
    }) : new mo({
        message: t
    })
}
var gi = {
    createError: gb,
    CallError: mo,
    EcastServerError: ds,
    EcastCreateRoomFailed: uu,
    EcastDialRoomFailed: hu,
    EcastServerIsShuttingDown: du,
    EcastClientError: je,
    EcastParseError: fu,
    EcastRequestIsMissingOpcode: pu,
    EcastRequestHasInvalidOpcode: gu,
    EcastRequestHasInvalidArguments: mu,
    EcastEntityNotFound: vu,
    EcastEntityAlreadyExists: yu,
    EcastEntityTypeError: wu,
    EcastNoSuchClient: bu,
    EcastRoomIsLocked: Cu,
    EcastRoomIsFull: xu,
    EcastLicenseNotFound: Eu,
    EcastLicenseCheckFailed: _u,
    EcastRoomNotFound: Su,
    EcastInvalidRole: ku,
    EcastTwitchLoginRequired: Tu,
    EcastInvalidOption: Au,
    EcastPasswordRequired: Ou,
    EcastInvalidPassword: Ru,
    EcastNameRequired: Iu,
    EcastFilterError: Lu,
    EcastNoSuchFilter: Du,
    EcastPermissionDenied: Mu,
    EcastNotConnected: Pu,
    EcastIllegalOperation: Nu,
    EcastACLChangeDenied: Bu,
    EcastRoomHasEnded: $u,
    EcastEntityLocked: Vu,
    EcastRateLimitExceeded: ju,
    ObservedError: pb
};
const mb = {
    1e3: ds,
    1001: uu,
    1002: hu,
    1003: du,
    2e3: je,
    2001: fu,
    2002: pu,
    2003: gu,
    2004: mu,
    2005: vu,
    2006: yu,
    2007: wu,
    2008: bu,
    2009: Cu,
    2010: xu,
    2011: Eu,
    2012: _u,
    2013: Su,
    2014: ku,
    2015: Tu,
    2016: Au,
    2017: Ou,
    2018: Ru,
    2019: Iu,
    2021: Lu,
    2022: Du,
    2023: Mu,
    2024: Pu,
    2025: Nu,
    2026: Bu,
    2027: $u,
    2028: Vu,
    2420: ju
};
class vb {
    constructor(t) {
        this.id = t.id, this.deviceId = t.deviceId, this.name = t.name, this.secret = t.secret, this.reconnect = t.reconnect, this.entities = t.entities, this.here = t.here, this.profile = t.profile, this.replayEnd = t.replayEnd
    }
}
class yb {
    constructor(t) {
        this.id = t.id, this.userId = t.userId, this.name = t.name, this.role = t.role, this.reconnect = t.reconnect
    }
}
class wb {
    constructor(t) {
        this.id = t.id, this.role = t.role
    }
}
class bb {
    constructor(t) {
        this.to = t.to, this.from = t.from, this.body = t.body, this.userId = t.userId
    }
}
class Cb {
    constructor(t) {
        this.id = t.id, this.banned = t.banned, this.reason = t.reason
    }
}
var Ka = {
    ClientConnected: yb,
    ClientDisconnected: wb,
    ClientKicked: Cb,
    ClientSend: bb,
    ClientWelcome: vb
};
class xb {
    constructor(t) {
        this.choices = t.choices, this.key = t.key, this.meta = t.meta || {}
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `CountGroup{
	choices: ${this.choices}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var Ja = {
    CountGroup: xb
};
class Eb {
    constructor(t) {
        this.key = t.key, this.count = t.count, this.meta = t.meta || {}
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `GCounter{
	count:${this.count}
	meta:${this.meta}
}`
    }
}
var Qa = {
    GCounter: Eb
};
class _b {
    constructor(t) {
        this.pc = t.pc, this.opcode = t.opcode, this.result = t.result
    }
}
var Fu = {
    Notification: _b
};
class Sb {
    constructor(t) {
        this.from = t.from, this.key = t.key, this.val = t.val, this.version = t.version, this.meta = t.meta || {}, t.acl && (this.acl = t.acl)
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `ObjectEntity{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
	meta:${JSON.stringify(this.meta)}
}`
    }
    toBlob() {
        return this.val
    }
}
class kb {
    constructor(t) {
        this.message = t.message
    }
    toString() {
        return `ObjectEcho{message: ${this.message}}`
    }
}
var Za = {
    ObjectEntity: Sb,
    ObjectEcho: kb
};
class Tb {
    constructor(t) {
        this.key = t.key, this.count = t.count, this.meta = t.meta || {}
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `PNCounter{
	count:${this.count}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var tl = {
    PNCounter: Tb
};
class Ab {
    constructor(t) {
        this.pc = t.pc, this.re = t.re, this.opcode = t.opcode, this.result = t.result
    }
}
var zu = {
    Reply: Ab
};
class Ob {
    constructor(t) {
        this.seq = t.seq, this.opcode = t.opcode, this.params = t.params
    }
}
var Rb = {
    Request: Ob
};
class Ib {
    constructor(t) {
        this.from = t.from, this.key = t.key, this.text = t.text, this.version = t.version, this.meta = t.meta || {}, t.acl && (this.acl = t.acl)
    }
    whenReceived(t) {
        t.entities[this.key] = this, t.emit("text " + this.key, this)
    }
    toString() {
        return `TextEntity{
	key:${this.key}
	text: ${this.text}
	meta:${JSON.stringify(this.meta)}
}`
    }
    toBlob() {
        return JSON.parse(this.text)
    }
}
class Lb {
    constructor(t) {
        this.message = t.message
    }
    toString() {
        return `TextEcho{message: ${this.message}
}`
    }
}
var el = {
    TextEntity: Ib,
    TextEcho: Lb
};
class Db {
    constructor(t) {
        this.key = t.key, this.elements = t.elements, this.limit = t.limit, this.meta = t.meta || {}
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `TextRing{
	elements: ${this.elements}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var nl = {
    TextRing: Db
};
class Mb {
    constructor(t) {
        this.key = t.key, this.artifactId = t.artifactId, this.categoryId = t.categoryId, this.rootId = t.rootId, this.meta = t.meta || {}
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `ArtifactEntity${JSON.stringify(this)}
`
    }
}
var Hu = {
    ArtifactEntity: Mb
};
class Pb {
    constructor(t) {
        this.key = t.key, this.colors = t.colors, this.lines = t.lines, this.live = t.live, this.maxPoints = t.maxPoints, this.size = t.size, this.weights = t.weights, this.meta = t.meta || {}, t.acl && (this.acl = t.acl)
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `Doodle{
	key:${this.key}
	colors:${this.colors}
	lines:${this.lines}
	live:${this.live}
	maxPoints:${this.maxPoints}
	size:${this.size}
	weights:${this.weights}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
class Nb {
    constructor(t) {
        this.key = t.key, this.line = t.line
    }
    whenReceived(t) {
        t.entities[this.key].lines.push(this.line)
    }
    toString() {
        return `DoodleLine{
	val:${this.line}
}`
    }
}
class Bb {
    constructor(t) {
        this.key = t.key, this.index = t.index
    }
    whenReceived(t) {
        t.entities[this.key].lines.splice(this.index, 1)
    }
    toString() {
        return `DoodleLineRemoved{
	index:${this.index}
}`
    }
}
var il = {
    DoodleEntity: Pb,
    DoodleLine: Nb,
    DoodleLineRemoved: Bb
};
class $b {
    constructor(t) {
        this.key = t.key, this.size = t.size, this.version = t.version, this.from = t.from, this.meta = t.meta || {}, t.acl && (this.acl = t.acl)
    }
    whenRecived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `Stack{
	key:${this.key}
	size:${this.size}
	version:${this.version}
	from:${this.from}
	meta:${this.meta}
}`
    }
}
class Vb {
    constructor(t) {
        this.key = t.key, this.val = t.val
    }
    toString() {
        return `StackElement{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
}`
    }
}
class jb {
    constructor(t) {
        this.key = t.key, this.vals = t.vals
    }
    toString() {
        return `StackElements{
	key:${this.key}
	values: ${JSON.stringify(this.vals)}
}`
    }
}
var Uu = {
    StackEntity: $b,
    StackElement: Vb,
    StackElements: jb
};
class Fb {
    constructor(t) {
        this.key = t.key
    }
    whenReceived(t) {
        delete t.entities[this.key]
    }
    toString() {
        return `DropEntity{
	key:${this.key}
}`
    }
}
var qu = {
    DropEntity: Fb
};
class zb {
    constructor(t) {
        this.message = t.message
    }
    toString() {
        return `Echo{message: ${this.message}
}`
    }
}
var Hb = {
    Echo: zb
};
class Ub {
    constructor(t) {
        this.key = t.key, this.from = t.from
    }
    whenReceived(t) {
        t.entities[this.key] && (t.entities[this.key].meta.locked = !0)
    }
    toString() {
        return `LockEntity{
	key:${this.key}
}`
    }
}
var qb = {
    LockEntity: Ub
};
class Wb {
    constructor() {}
    toString() {
        return "OK"
    }
}
var Wu = {
    OK: Wb
};
class Gb {
    constructor(t) {
        this.from = t.from, this.key = t.key, this.val = t.val, this.restrictions = t.restrictions, this.version = t.version, this.meta = t.meta || {}, t.acl && (this.acl = t.acl)
    }
    whenReceived(t) {
        t.entities[this.key] = this
    }
    toString() {
        return `NumberEntity{
	key:${this.key}
	val: ${this.val}
	restrictions: ${JSON.stringify(this.restrictions)}
	meta: ${JSON.stringify(this.meta)}
}`
    }
}
var Gu = {
    NumberEntity: Gb
};
const {
    ArtifactEntity: Xb
} = Hu, {
    ClientWelcome: Yb,
    ClientConnected: Kb,
    ClientDisconnected: Jb,
    ClientKicked: Qb,
    ClientSend: Zb
} = Ka, {
    CountGroup: t0
} = Ja, {
    DoodleEntity: e0,
    DoodleLine: n0,
    DoodleLineRemoved: i0
} = il, {
    StackEntity: r0,
    StackElement: s0,
    StackElements: o0
} = Uu, {
    DropEntity: a0
} = qu, {
    Echo: l0
} = Hb, {
    LockEntity: c0
} = qb, {
    GCounter: u0
} = Qa, {
    GetAudienceReply: h0,
    RoomExit: d0,
    RoomLock: f0
} = po, {
    Notification: p0
} = Fu, {
    OK: g0
} = Wu, {
    NumberEntity: m0
} = Gu, {
    ObjectEcho: v0,
    ObjectEntity: y0
} = Za, {
    PNCounter: Jl
} = tl, {
    Reply: w0
} = zu, {
    TextEcho: b0,
    TextEntity: C0
} = el, {
    TextRing: x0
} = nl, {
    createError: Ql,
    ObservedError: E0
} = gi;

function Ia(e, t, n) {
    switch (e) {
        case "ok":
            return new g0;
        case "echo":
            return new l0({
                message: t.message
            });
        case "lock":
            return new c0({
                key: t.key,
                from: t.from
            });
        case "error":
            return Ql({
                code: t.code,
                message: t.msg
            });
        case "error/observed":
            return new E0({
                to: t.to,
                error: Ql({
                    code: t.error.code,
                    message: t.error.msg
                })
            });
        case "string":
            return t;
        case "text":
            return new C0({
                from: t.from,
                key: t.key,
                text: t.val,
                version: t.version,
                meta: n,
                acl: t.acl
            });
        case "text/echo":
            return new b0({
                message: t.message
            });
        case "object":
            return new y0({
                from: t.from,
                key: t.key,
                val: t.val,
                meta: n,
                acl: t.acl
            });
        case "object/echo":
            return new v0({
                message: t.message
            });
        case "drop":
            return new a0({
                key: t.key
            });
        case "artifact":
            return new Xb({
                key: t.key,
                artifactId: t.artifactId,
                categoryId: t.categoryId,
                rootId: t.rootId,
                meta: n
            });
        case "client/connected":
            return new Kb({
                id: t.id,
                userId: t.userId,
                name: t.name,
                role: t.role,
                reconnect: t.reconnect
            });
        case "client/disconnected":
            return new Jb({
                id: t.id,
                role: t.role
            });
        case "client/kicked":
            return new Qb({
                id: t.id,
                banned: t.banned,
                reason: t.reason
            });
        case "client/send":
            return new Zb({
                to: t.to,
                from: t.from,
                body: t.body,
                userId: t.userID
            });
        case "client/welcome": {
            let i = new Yb({
                id: t.id,
                name: t.name,
                secret: t.secret,
                reconnect: t.reconnect,
                here: t.here,
                profile: t.profile,
                replayEnd: t.replayEnd
            });
            if (t.entities) {
                let o = {};
                Object.entries(t.entities).forEach(([f, v]) => {
                    o[f] = Ia(v[0], v[1], v[2])
                }), i.entities = o
            }
            return i
        }
        case "doodle":
            return new e0({
                key: t.key,
                colors: t.val.colors,
                lines: t.val.lines,
                live: t.val.live,
                maxPoints: t.val.maxPoints,
                size: t.val.size,
                weights: t.val.weights,
                meta: n,
                acl: t.acl
            });
        case "doodle/line":
            return new n0({
                key: t.key,
                line: t.val
            });
        case "doodle/line/removed":
            return new i0({
                key: t.key,
                index: t.index
            });
        case "stack":
            return new r0({
                key: t.key,
                size: t.size,
                from: t.from,
                version: t.version,
                meta: t.meta,
                acl: t.acl
            });
        case "stack/element":
            return new s0({
                key: t.key,
                val: t.val
            });
        case "stack/elements":
            return new o0({
                key: t.key,
                vals: t.vals
            });
        case "number":
            return new m0({
                key: t.key,
                val: t.val,
                restrictions: t.restrictions,
                from: t.from,
                version: t.version,
                meta: n,
                acl: t.acl
            });
        case "room/exit":
            return new d0({
                cause: t.cause
            });
        case "room/lock":
            return new f0;
        case "room/get-audience":
            return new h0({
                connections: t.connections
            });
        case "audience":
            return new Jl({
                key: e,
                count: t[1]
            });
        case "audience/count-group":
            return new t0({
                key: t.key,
                choices: t.choices,
                meta: n
            });
        case "audience/text-ring":
            return new x0({
                key: t.key,
                elements: t.elements,
                meta: n
            });
        case "audience/g-counter":
            return new u0({
                key: t.key,
                count: t.count,
                meta: n
            });
        case "audience/pn-counter":
            return new Jl({
                key: t.key,
                count: t.count,
                meta: n
            });
        default:
            return console.error(`failed to parse result of type ${e}: ${JSON.stringify(t,null,2)}`), t
    }
}

function _0(e) {
    let t = JSON.parse(e.data),
        n = t.opcode || t.type;
    return t.re ? new w0({
        pc: t.pc,
        re: t.re,
        opcode: n,
        result: Ia(n, t.result)
    }) : new p0({
        pc: t.pc,
        opcode: n,
        result: Ia(n, t.result)
    })
}
var S0 = {
    parseResponseMessage: _0
};
const Zl = ab,
    k0 = eu,
    T0 = Ya.exports,
    {
        CallError: A0
    } = gi,
    {
        ClientWelcome: O0
    } = Ka,
    {
        CountGroup: R0
    } = Ja,
    {
        GCounter: I0
    } = Qa,
    {
        Notification: tc
    } = Fu,
    {
        ObjectEntity: ca
    } = Za,
    {
        PNCounter: L0
    } = tl,
    {
        Reply: D0
    } = zu,
    {
        Request: M0
    } = Rb,
    {
        TextEntity: ua
    } = el,
    {
        TextRing: P0
    } = nl,
    {
        parseResponseMessage: N0
    } = S0,
    {
        DoodleEntity: B0
    } = il,
    {
        StackEntity: $0
    } = Uu,
    V0 = 1e3 + Math.floor(Math.random() * 500),
    ec = 13e3;
class j0 extends T0 {
    constructor(t) {
        if (super(), this.debug = t.debug || !1, !t.host) throw new Error("unable to create ecast WSClient: no host provided");
        if (this.host = t.host, !t.code) throw new Error("unable to create ecast WSClient: no room code provided");
        if (this.code = t.code, t.scheme ? this.scheme = t.scheme : this.scheme = "wss", t.secret && t.id) this.id = t.id, this.secret = t.secret;
        else {
            switch (t.role) {
                case "player":
                    if (!t.name) throw new Error("unable to create ecast WSClient: no name provided");
                    break;
                case "host":
                    if (!t.token) throw new Error("unable to create ecast WSClient: tried to connect with host role but without host token");
                    this.token = t.token;
                    break;
                case "moderator":
                    if (!t.password) throw new Error("unable to create ecast WSClient: tried to connect with moderator role but without password");
                    break
            }
            t.password && (this.password = t.password), t.twitchToken && (this.twitchToken = t.twitchToken)
        }
        this.name = t.name, this.role = t.role, this.deviceId = t.deviceId, this.userId = t.userId, this.conn = null, this.seq = 0, this.pending = {}, this.entities = {}, t.role == "host" && (this.replaySince = t.replaySince || 0, this.syncEntities = t.syncEntities || !1)
    }
    connect() {
        const t = {
            id: this.id,
            role: this.role,
            name: this.name,
            format: "json",
            "user-id": this.userId,
            password: this.password
        };
        this.deviceId && (t["device-id"] = this.deviceId), this.twitchToken && (t["twitch-token"] = this.twitchToken), this.secret && (t.secret = this.secret), this.role === "host" && (t["host-token"] = this.token, this.replaySince > 0 && (t["replay-since"] = this.replaySince), this.syncEntities && (t["sync-entities"] = this.syncEntities));
        const n = k0.stringify(t),
            i = this.role === "audience" || this.id > 1e7 ? `${this.scheme}://${window.location.hostname}/api/v2/audience/${this.code}/play?${n}` : `${this.scheme}://${window.location.hostname}/api/v2/rooms/${this.code}/play?${n}`;
        return new Promise((o, f) => {
            let v = !1,
                y = !1,
                k = D => {
                    o(D), v = !0
                },
                A = D => {
                    f(D), v = !0
                };
            this.conn = new Zl(i, "ecast-v0"), this.conn.onmessage = D => {
                this.debugLog(`recv <- ${JSON.stringify(JSON.parse(D.data),null,2)}`);
                const $ = N0(D);
                if ($ instanceof D0) this.onReply($);
                else if ($ instanceof tc) {
                    if ($.result instanceof O0) y = !0, this.id = $.result.id, this.deviceId = $.result.deviceId, this.entities = $.result.entities, this.secret = $.result.secret, $.result.name && (this.name = $.result.name), k($.result);
                    else if (!v) {
                        A($.result);
                        return
                    }
                    this.onNotification($)
                } else console.error(`failed to parse response messsage: ${$}`)
            }, this.conn.onerror = D => {
                v ? this.emit("socketError", D) : A(D)
            }, this.conn.onclose = D => {
                this.debugLog("onclose", D.code), y && D.code === 1006 ? this.reconnect() : this.emit("socketClose", D)
            }, this.conn.onopen = D => {
                this.emit("socketOpen", D)
            }
        })
    }
    sleep(t) {
        return new Promise(n => setTimeout(n, t))
    }
    debugLog(...t) {
        !this.debug || console.log(`%c[WSClient:${this.name}]`, "background-color:blue;color:white;", ...t)
    }
    async reconnect() {
        this.disconnect(), this.debugLog("Attempting to reconnect");
        let t = 1,
            n = V0;
        for (;;) try {
            this.emit("connection", {
                status: "connecting",
                attempt: t
            }), await this.connect(), this.debugLog("reconnected"), this.emit("connection", {
                status: "connected"
            });
            return
        } catch (i) {
            if (this.debugLog("reconnect error", i), i.code === 1005 || i.code === 1e3) {
                this.debugLog("unable to reconnect!", i), this.emit("socketClose", i);
                return
            }
            if (n >= ec) {
                this.debugLog("reconnect failed!", i), this.emit("socketClose", i);
                return
            }
            t += 1, this.debugLog("waiting", n), this.emit("connection", {
                status: "waiting",
                attempt: t
            }), await this.sleep(n), n = Math.min(ec, n * 2)
        }
    }
    disconnect() {
        !this.conn || (this.conn.close(), this.conn.onmessage = null, this.conn.onerror = null, this.conn.onopen = null, this.conn.onclose = null, this.conn = null)
    }
    onReply(t) {
        const n = t.re,
            i = this.pending[n];
        if (!i) {
            const o = new tc(t);
            o.re = n, this.emit("notification", o);
            return
        }
        delete this.pending[n], t.result instanceof A0 ? i.reject(t.result) : i.resolve(t.result)
    }
    onNotification(t) {
        typeof t.result.whenReceived == "function" && t.result.whenReceived(this), this.emit("notification", t), this.emit(t.opcode, t.result)
    }
    send(t, n = {}) {
        if (!this.conn) throw new Error("No connection available");
        if (this.conn.readyState !== Zl.OPEN) throw new Error(`Socket not ready to send, readyState is ${this.conn.readyState}`);
        const i = ++this.seq,
            o = new M0({
                seq: i,
                opcode: t,
                params: n
            }),
            f = new Promise((y, k) => {
                this.pending[i] = {
                    resolve: y,
                    reject: k,
                    request: o
                }
            }),
            v = JSON.stringify(o);
        return this.debugLog(`send -> ${v}`), this.conn.send(v), f
    }
    lockRoom() {
        return this.send("room/lock")
    }
    startAudience() {
        return this.send("room/start-audience")
    }
    getAudience() {
        return this.send("room/get-audience")
    }
    mail(t, n) {
        return this.send("client/send", {
            from: this.id,
            to: t,
            body: n
        })
    }
    kick(t, n = !1, i) {
        return this.send("client/kick", {
            id: t,
            ban: n,
            reason: i
        })
    }
    async drop(t) {
        const n = await this.send("drop", {
            key: t
        });
        return delete this.entities[t], n
    }
    echo(t) {
        return this.send("echo", {
            message: t
        })
    }
    async lock(t) {
        const n = await this.send("lock", {
            key: t
        });
        return this.entities[t].meta.locked = !0, n
    }
    async getNumber(t) {
        const n = await this.send("number/get", {
            key: t
        });
        return this.entities[t].val = n.val, this.entities[t].restrictions = n.restrictions, n
    }
    async updateNumber(t, n) {
        const i = await this.send("number/update", {
            key: t,
            val: n
        });
        return this.entities[t].val = n, i
    }
    async createObject(t, n, i) {
        const o = {
            key: t,
            val: n
        };
        i && (o.acl = i);
        const f = await this.send("object/create", o);
        return this.entities[t] = new ca({
            key: t,
            val: n,
            meta: {
                locked: !1
            }
        }), f
    }
    echoObject(t) {
        return this.send("object/echo", {
            message: t
        })
    }
    async setObject(t, n, i) {
        const o = {
            key: t,
            val: n
        };
        i && (o.acl = i);
        const f = await this.send("object/set", o);
        return this.entities[t] = new ca({
            key: t,
            val: n,
            meta: {
                locked: !1
            }
        }), f
    }
    async updateObject(t, n) {
        const i = await this.send("object/update", {
            key: t,
            val: n
        });
        return this.entities[t] = new ca({
            key: t,
            val: n,
            meta: {
                locked: !1
            }
        }), i
    }
    echoText(t) {
        return this.send("text/echo", {
            message: t
        })
    }
    getText(t) {
        return this.send("text/get", {
            key: t
        })
    }
    async createText(t, n, i) {
        const o = {
                key: t,
                val: n
            },
            {
                acl: f,
                accept: v,
                reject: y
            } = i;
        f && (o.acl = f), v && (o.accept = v), y && (o.reject = y);
        const k = await this.send("text/create", o);
        return this.entities[t] = new ua({
            key: t,
            text: n,
            meta: {
                locked: !1
            }
        }), k
    }
    async setText(t, n, i) {
        const o = {
            key: t,
            val: n
        };
        i && (o.acl = i);
        const f = await this.send("text/set", o);
        return this.entities[t] = new ua({
            key: t,
            text: n,
            meta: {
                locked: !1
            }
        }), f
    }
    async updateText(t, n) {
        const i = await this.send("text/update", {
            key: t,
            val: n
        });
        return this.entities[t] = new ua({
            key: t,
            text: n,
            meta: {
                locked: !1
            }
        }), i
    }
    async createDoodle(t, n) {
        let i = {
            key: t
        };
        const {
            acl: o,
            colors: f,
            live: v,
            maxPoints: y,
            size: k,
            weights: A
        } = n;
        o && (i.acl = o), f && (i.colors = f), i.live = v, y != null && (i.maxPoints = y), k && (i.size = k), A && (i.weights = A);
        const D = await this.send("doodle/create", i);
        return this.entities[t] = new B0({
            key: t,
            colors: f,
            lines: [],
            live: v,
            locked: !1,
            maxPoints: i.maxPoints || 0,
            size: k,
            weights: A,
            meta: {
                locked: !1
            }
        }), D
    }
    async getDoodle(t) {
        return this.send("doodle/get", {
            key: t
        })
    }
    async strokeDoodle(t, n) {
        const {
            layer: i,
            color: o,
            weight: f,
            points: v
        } = n, y = await this.send("doodle/stroke", {
            key: t,
            layer: i,
            color: o,
            weight: f,
            points: v
        }), k = {
            layer: i,
            color: o,
            weight: f,
            points: v
        };
        return this.entities[t].lines.push(k), y
    }
    async undoDoodle(t) {
        const n = await this.send("doodle/undo", {
            key: t
        });
        return this.entities[t].lines.pop(), n
    }
    async createStack(t, n) {
        const i = {
            key: t
        };
        n && (i.acl = n);
        const o = await this.send("stack/create", i);
        return this.entities[t] = new $0({
            key: t,
            size: 0,
            meta: {
                locked: !1
            }
        }), o
    }
    async pushStack(t, n) {
        return await this.send("stack/push", {
            key: t,
            val: n
        })
    }
    async bulkPushStack(t, n) {
        return await this.send("stack/bulkpush", {
            key: t,
            vals: n
        })
    }
    async peekStack(t, n) {
        return await this.send("stack/peek", {
            key: t,
            size: n
        })
    }
    async popStack(t) {
        return await this.send("stack/pop", {
            key: t
        })
    }
    async createCountGroup(t, n) {
        const i = await this.send("audience/count-group/create", {
            name: t,
            options: n
        });
        return this.entities[t] = new R0({
            key: t,
            choices: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementCountGroupCounter(t, n, i = 1) {
        return this.send("audience/count-group/increment", {
            name: t,
            vote: n,
            times: i
        })
    }
    getCountGroup(t) {
        return this.send("audience/count-group/get", {
            name: t
        })
    }
    async createGCounter(t, n) {
        const i = await this.send("audience/g-counter/create", {
            key: t,
            count: n
        });
        return this.entities[t] = new I0({
            key: t,
            count: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementGCounter(t, n) {
        return this.send("audience/g-counter/increment", {
            key: t,
            times: n
        })
    }
    getGCounter(t) {
        return this.send("audience/g-counter/get", {
            key: t
        })
    }
    async createPNCounter(t, n) {
        const i = await this.send("audience/pn-counter/create", {
            key: t,
            count: n
        });
        return this.entities[t] = new L0({
            key: t,
            count: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementPNCounter(t, n) {
        return this.send("audience/pn-counter/increment", {
            key: t,
            times: n
        })
    }
    decrementPNCounter(t, n) {
        return this.send("audience/pn-counter/decrement", {
            key: t,
            times: n
        })
    }
    getPNCounter(t) {
        return this.send("audience/pn-counter/get", {
            key: t
        })
    }
    async createTextRing(t, n) {
        const i = {
                key: t
            },
            {
                limit: o,
                accept: f,
                reject: v
            } = n;
        o && (i.limit = o), f && (i.accept = f), v && (i.reject = v);
        const y = await this.send("audience/text-ring/create", i);
        return this.entities[t] = new P0({
            key: t,
            elements: [],
            limit: o,
            meta: {
                locked: !1
            }
        }), y
    }
    getTextRing(t) {
        return this.send("audience/text-ring/get", {
            name: t
        })
    }
    pushTextRing(t, n) {
        return this.send("audience/text-ring/push", {
            name: t,
            text: n
        })
    }
}
var F0 = {
    WSClient: j0
};
const {
    APIClient: z0
} = ob, {
    WSClient: H0
} = F0, {
    CreateRoomReply: U0,
    GetRoomReply: q0
} = po, {
    ClientWelcome: W0,
    ClientDisconnected: G0
} = Ka, {
    ArtifactEntity: X0
} = Hu, {
    GCounter: Y0
} = Qa, {
    NumberEntity: K0
} = Gu, {
    TextEntity: J0
} = el, {
    DoodleEntity: Q0
} = il, {
    ObjectEntity: Z0
} = Za, {
    CountGroup: t1
} = Ja, {
    DropEntity: e1
} = qu, {
    OK: n1
} = Wu, {
    RoomExit: i1
} = po, {
    TextRing: r1
} = nl, {
    PNCounter: s1
} = tl;
var Vi = {
    APIClient: z0,
    WSClient: H0,
    ClientWelcome: W0,
    CreateRoomReply: U0,
    DropEntity: e1,
    GetRoomReply: q0,
    ClientDisconnected: G0,
    RoomExit: i1,
    OK: n1,
    ArtifactEntity: X0,
    DoodleEntity: Q0,
    NumberEntity: K0,
    CountGroup: t1,
    GCounter: Y0,
    ObjectEntity: Z0,
    PNCounter: s1,
    TextEntity: J0,
    TextRing: r1
};

function nc(...e) {
    console.log(...e)
}

function o1(e) {
    throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')
}
var ic = {
    exports: {}
};
(function(e, t) {
    (function(n, i) {
        i(t)
    })(Re, function(n) {
        var i = typeof window < "u" ? window : typeof Re < "u" ? Re : typeof self < "u" ? self : {},
            o = function(N, J) {
                if (J = J.split(":")[0], N = +N, !N) return !1;
                switch (J) {
                    case "http":
                    case "ws":
                        return N !== 80;
                    case "https":
                    case "wss":
                        return N !== 443;
                    case "ftp":
                        return N !== 21;
                    case "gopher":
                        return N !== 70;
                    case "file":
                        return !1
                }
                return N !== 0
            },
            f = Object.prototype.hasOwnProperty,
            v;

        function y(H) {
            try {
                return decodeURIComponent(H.replace(/\+/g, " "))
            } catch {
                return null
            }
        }

        function k(H) {
            try {
                return encodeURIComponent(H)
            } catch {
                return null
            }
        }

        function A(H) {
            for (var N = /([^=?#&]+)=?([^&]*)/g, J = {}, M; M = N.exec(H);) {
                var Y = y(M[1]),
                    Ct = y(M[2]);
                Y === null || Ct === null || Y in J || (J[Y] = Ct)
            }
            return J
        }

        function D(H, N) {
            N = N || "";
            var J = [],
                M, Y;
            typeof N != "string" && (N = "?");
            for (Y in H)
                if (f.call(H, Y)) {
                    if (M = H[Y], !M && (M === null || M === v || isNaN(M)) && (M = ""), Y = k(Y), M = k(M), Y === null || M === null) continue;
                    J.push(Y + "=" + M)
                } return J.length ? N + J.join("&") : ""
        }
        var $ = D,
            tt = A,
            st = {
                stringify: $,
                parse: tt
            },
            V = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
            ot = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,
            m = "[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]",
            L = new RegExp("^" + m + "+");

        function X(H) {
            return (H || "").toString().replace(L, "")
        }
        var ut = [
                ["#", "hash"],
                ["?", "query"],
                function(N, J) {
                    return d(J.protocol) ? N.replace(/\\/g, "/") : N
                },
                ["/", "pathname"],
                ["@", "auth", 1],
                [NaN, "host", void 0, 1, 1],
                [/:(\d+)$/, "port", void 0, 1],
                [NaN, "hostname", void 0, 1, 1]
            ],
            ht = {
                hash: 1,
                query: 1
            };

        function bt(H) {
            var N;
            typeof window < "u" ? N = window : typeof i < "u" ? N = i : typeof self < "u" ? N = self : N = {};
            var J = N.location || {};
            H = H || J;
            var M = {},
                Y = typeof H,
                Ct;
            if (H.protocol === "blob:") M = new Pt(unescape(H.pathname), {});
            else if (Y === "string") {
                M = new Pt(H, {});
                for (Ct in ht) delete M[Ct]
            } else if (Y === "object") {
                for (Ct in H) Ct in ht || (M[Ct] = H[Ct]);
                M.slashes === void 0 && (M.slashes = V.test(H.href))
            }
            return M
        }

        function d(H) {
            return H === "file:" || H === "ftp:" || H === "http:" || H === "https:" || H === "ws:" || H === "wss:"
        }

        function kt(H, N) {
            H = X(H), N = N || {};
            var J = ot.exec(H),
                M = J[1] ? J[1].toLowerCase() : "",
                Y = !!J[2],
                Ct = !!J[3],
                Et = 0,
                Wt;
            return Y ? Ct ? (Wt = J[2] + J[3] + J[4], Et = J[2].length + J[3].length) : (Wt = J[2] + J[4], Et = J[2].length) : Ct ? (Wt = J[3] + J[4], Et = J[3].length) : Wt = J[4], M === "file:" ? Et >= 2 && (Wt = Wt.slice(2)) : d(M) ? Wt = J[4] : M ? Y && (Wt = Wt.slice(2)) : Et >= 2 && d(N.protocol) && (Wt = J[4]), {
                protocol: M,
                slashes: Y || d(M),
                slashesCount: Et,
                rest: Wt
            }
        }

        function Vt(H, N) {
            if (H === "") return N;
            for (var J = (N || "/").split("/").slice(0, -1).concat(H.split("/")), M = J.length, Y = J[M - 1], Ct = !1, Et = 0; M--;) J[M] === "." ? J.splice(M, 1) : J[M] === ".." ? (J.splice(M, 1), Et++) : Et && (M === 0 && (Ct = !0), J.splice(M, 1), Et--);
            return Ct && J.unshift(""), (Y === "." || Y === "..") && J.push(""), J.join("/")
        }

        function Pt(H, N, J) {
            if (H = X(H), !(this instanceof Pt)) return new Pt(H, N, J);
            var M, Y, Ct, Et, Wt, Yt, Se = ut.slice(),
                Ke = typeof N,
                re = this,
                Bn = 0;
            for (Ke !== "object" && Ke !== "string" && (J = N, N = null), J && typeof J != "function" && (J = st.parse), N = bt(N), Y = kt(H || "", N), M = !Y.protocol && !Y.slashes, re.slashes = Y.slashes || M && N.slashes, re.protocol = Y.protocol || N.protocol || "", H = Y.rest, (re.protocol === "file:" || !Y.slashes && (Y.protocol || Y.slashesCount < 2 || !d(re.protocol))) && (Se[3] = [/(.*)/, "pathname"]); Bn < Se.length; Bn++) {
                if (Et = Se[Bn], typeof Et == "function") {
                    H = Et(H, re);
                    continue
                }
                Ct = Et[0], Yt = Et[1], Ct !== Ct ? re[Yt] = H : typeof Ct == "string" ? ~(Wt = H.indexOf(Ct)) && (typeof Et[2] == "number" ? (re[Yt] = H.slice(0, Wt), H = H.slice(Wt + Et[2])) : (re[Yt] = H.slice(Wt), H = H.slice(0, Wt))) : (Wt = Ct.exec(H)) && (re[Yt] = Wt[1], H = H.slice(0, Wt.index)), re[Yt] = re[Yt] || M && Et[3] && N[Yt] || "", Et[4] && (re[Yt] = re[Yt].toLowerCase())
            }
            J && (re.query = J(re.query)), M && N.slashes && re.pathname.charAt(0) !== "/" && (re.pathname !== "" || N.pathname !== "") && (re.pathname = Vt(re.pathname, N.pathname)), re.pathname.charAt(0) !== "/" && d(re.protocol) && (re.pathname = "/" + re.pathname), o(re.port, re.protocol) || (re.host = re.hostname, re.port = ""), re.username = re.password = "", re.auth && (Et = re.auth.split(":"), re.username = Et[0] || "", re.password = Et[1] || ""), re.origin = re.protocol !== "file:" && d(re.protocol) && re.host ? re.protocol + "//" + re.host : "null", re.href = re.toString()
        }

        function Ce(H, N, J) {
            var M = this;
            switch (H) {
                case "query":
                    typeof N == "string" && N.length && (N = (J || st.parse)(N)), M[H] = N;
                    break;
                case "port":
                    M[H] = N, o(N, M.protocol) ? N && (M.host = M.hostname + ":" + N) : (M.host = M.hostname, M[H] = "");
                    break;
                case "hostname":
                    M[H] = N, M.port && (N += ":" + M.port), M.host = N;
                    break;
                case "host":
                    M[H] = N, /:\d+$/.test(N) ? (N = N.split(":"), M.port = N.pop(), M.hostname = N.join(":")) : (M.hostname = N, M.port = "");
                    break;
                case "protocol":
                    M.protocol = N.toLowerCase(), M.slashes = !J;
                    break;
                case "pathname":
                case "hash":
                    if (N) {
                        var Y = H === "pathname" ? "/" : "#";
                        M[H] = N.charAt(0) !== Y ? Y + N : N
                    } else M[H] = N;
                    break;
                default:
                    M[H] = N
            }
            for (var Ct = 0; Ct < ut.length; Ct++) {
                var Et = ut[Ct];
                Et[4] && (M[Et[1]] = M[Et[1]].toLowerCase())
            }
            return M.origin = M.protocol !== "file:" && d(M.protocol) && M.host ? M.protocol + "//" + M.host : "null", M.href = M.toString(), M
        }

        function Xt(H) {
            (!H || typeof H != "function") && (H = st.stringify);
            var N, J = this,
                M = J.protocol;
            M && M.charAt(M.length - 1) !== ":" && (M += ":");
            var Y = M + (J.slashes || d(J.protocol) ? "//" : "");
            return J.username && (Y += J.username, J.password && (Y += ":" + J.password), Y += "@"), Y += J.host + J.pathname, N = typeof J.query == "object" ? H(J.query) : J.query, N && (Y += N.charAt(0) !== "?" ? "?" + N : N), J.hash && (Y += J.hash), Y
        }
        Pt.prototype = {
            set: Ce,
            toString: Xt
        }, Pt.extractProtocol = kt, Pt.location = bt, Pt.trimLeft = X, Pt.qs = st;
        var et = Pt;

        function Jt(H, N) {
            setTimeout(function(J) {
                return H.call(J)
            }, 4, N)
        }

        function G(H, N) {
            typeof process < "u" && console[H].call(null, N)
        }

        function pt(H, N) {
            H === void 0 && (H = []);
            var J = [];
            return H.forEach(function(M) {
                N(M) || J.push(M)
            }), J
        }

        function $t(H, N) {
            H === void 0 && (H = []);
            var J = [];
            return H.forEach(function(M) {
                N(M) && J.push(M)
            }), J
        }
        var At = function() {
            this.listeners = {}
        };
        At.prototype.addEventListener = function(N, J) {
            typeof J == "function" && (Array.isArray(this.listeners[N]) || (this.listeners[N] = []), $t(this.listeners[N], function(M) {
                return M === J
            }).length === 0 && this.listeners[N].push(J))
        }, At.prototype.removeEventListener = function(N, J) {
            var M = this.listeners[N];
            this.listeners[N] = pt(M, function(Y) {
                return Y === J
            })
        }, At.prototype.dispatchEvent = function(N) {
            for (var J = this, M = [], Y = arguments.length - 1; Y-- > 0;) M[Y] = arguments[Y + 1];
            var Ct = N.type,
                Et = this.listeners[Ct];
            return Array.isArray(Et) ? (Et.forEach(function(Wt) {
                M.length > 0 ? Wt.apply(J, M) : Wt.call(J, N)
            }), !0) : !1
        };

        function Tt(H) {
            var N = H.indexOf("?");
            return N >= 0 ? H.slice(0, N) : H
        }
        var vt = function() {
            this.urlMap = {}
        };
        vt.prototype.attachWebSocket = function(N, J) {
            var M = Tt(J),
                Y = this.urlMap[M];
            if (Y && Y.server && Y.websockets.indexOf(N) === -1) return Y.websockets.push(N), Y.server
        }, vt.prototype.addMembershipToRoom = function(N, J) {
            var M = this.urlMap[Tt(N.url)];
            M && M.server && M.websockets.indexOf(N) !== -1 && (M.roomMemberships[J] || (M.roomMemberships[J] = []), M.roomMemberships[J].push(N))
        }, vt.prototype.attachServer = function(N, J) {
            var M = Tt(J),
                Y = this.urlMap[M];
            if (!Y) return this.urlMap[M] = {
                server: N,
                websockets: [],
                roomMemberships: {}
            }, N
        }, vt.prototype.serverLookup = function(N) {
            var J = Tt(N),
                M = this.urlMap[J];
            if (M) return M.server
        }, vt.prototype.websocketsLookup = function(N, J, M) {
            var Y = Tt(N),
                Ct, Et = this.urlMap[Y];
            if (Ct = Et ? Et.websockets : [], J) {
                var Wt = Et.roomMemberships[J];
                Ct = Wt || []
            }
            return M ? Ct.filter(function(Yt) {
                return Yt !== M
            }) : Ct
        }, vt.prototype.removeServer = function(N) {
            delete this.urlMap[Tt(N)]
        }, vt.prototype.removeWebSocket = function(N, J) {
            var M = Tt(J),
                Y = this.urlMap[M];
            Y && (Y.websockets = pt(Y.websockets, function(Ct) {
                return Ct === N
            }))
        }, vt.prototype.removeMembershipFromRoom = function(N, J) {
            var M = this.urlMap[Tt(N.url)],
                Y = M.roomMemberships[J];
            M && Y !== null && (M.roomMemberships[J] = pt(Y, function(Ct) {
                return Ct === N
            }))
        };
        var Dt = new vt,
            Nt = {
                CLOSE_NORMAL: 1e3,
                CLOSE_GOING_AWAY: 1001,
                CLOSE_PROTOCOL_ERROR: 1002,
                CLOSE_UNSUPPORTED: 1003,
                CLOSE_NO_STATUS: 1005,
                CLOSE_ABNORMAL: 1006,
                UNSUPPORTED_DATA: 1007,
                POLICY_VIOLATION: 1008,
                CLOSE_TOO_LARGE: 1009,
                MISSING_EXTENSION: 1010,
                INTERNAL_ERROR: 1011,
                SERVICE_RESTART: 1012,
                TRY_AGAIN_LATER: 1013,
                TLS_HANDSHAKE: 1015
            },
            Kt = {
                CONSTRUCTOR_ERROR: "Failed to construct 'WebSocket':",
                CLOSE_ERROR: "Failed to execute 'close' on 'WebSocket':",
                EVENT: {
                    CONSTRUCT: "Failed to construct 'Event':",
                    MESSAGE: "Failed to construct 'MessageEvent':",
                    CLOSE: "Failed to construct 'CloseEvent':"
                }
            },
            le = function() {};
        le.prototype.stopPropagation = function() {}, le.prototype.stopImmediatePropagation = function() {}, le.prototype.initEvent = function(N, J, M) {
            N === void 0 && (N = "undefined"), J === void 0 && (J = !1), M === void 0 && (M = !1), this.type = "" + N, this.bubbles = Boolean(J), this.cancelable = Boolean(M)
        };
        var Ee = function(H) {
                function N(J, M) {
                    if (M === void 0 && (M = {}), H.call(this), !J) throw new TypeError(Kt.EVENT_ERROR + " 1 argument required, but only 0 present.");
                    if (typeof M != "object") throw new TypeError(Kt.EVENT_ERROR + " parameter 2 ('eventInitDict') is not an object.");
                    var Y = M.bubbles,
                        Ct = M.cancelable;
                    this.type = "" + J, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Ct ? Boolean(Ct) : !1, this.cancelBubble = !1, this.bubbles = Y ? Boolean(Y) : !1
                }
                return H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N, N
            }(le),
            Ye = function(H) {
                function N(J, M) {
                    if (M === void 0 && (M = {}), H.call(this), !J) throw new TypeError(Kt.EVENT.MESSAGE + " 1 argument required, but only 0 present.");
                    if (typeof M != "object") throw new TypeError(Kt.EVENT.MESSAGE + " parameter 2 ('eventInitDict') is not an object");
                    var Y = M.bubbles,
                        Ct = M.cancelable,
                        Et = M.data,
                        Wt = M.origin,
                        Yt = M.lastEventId,
                        Se = M.ports;
                    this.type = "" + J, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Ct ? Boolean(Ct) : !1, this.canncelBubble = !1, this.bubbles = Y ? Boolean(Y) : !1, this.origin = "" + Wt, this.ports = typeof Se > "u" ? null : Se, this.data = typeof Et > "u" ? null : Et, this.lastEventId = "" + (Yt || "")
                }
                return H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N, N
            }(le),
            nn = function(H) {
                function N(J, M) {
                    if (M === void 0 && (M = {}), H.call(this), !J) throw new TypeError(Kt.EVENT.CLOSE + " 1 argument required, but only 0 present.");
                    if (typeof M != "object") throw new TypeError(Kt.EVENT.CLOSE + " parameter 2 ('eventInitDict') is not an object");
                    var Y = M.bubbles,
                        Ct = M.cancelable,
                        Et = M.code,
                        Wt = M.reason,
                        Yt = M.wasClean;
                    this.type = "" + J, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Ct ? Boolean(Ct) : !1, this.cancelBubble = !1, this.bubbles = Y ? Boolean(Y) : !1, this.code = typeof Et == "number" ? parseInt(Et, 10) : 0, this.reason = "" + (Wt || ""), this.wasClean = Yt ? Boolean(Yt) : !1
                }
                return H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N, N
            }(le);

        function E(H) {
            var N = H.type,
                J = H.target,
                M = new Ee(N);
            return J && (M.target = J, M.srcElement = J, M.currentTarget = J), M
        }

        function l(H) {
            var N = H.type,
                J = H.origin,
                M = H.data,
                Y = H.target,
                Ct = new Ye(N, {
                    data: M,
                    origin: J
                });
            return Y && (Ct.target = Y, Ct.srcElement = Y, Ct.currentTarget = Y), Ct
        }

        function g(H) {
            var N = H.code,
                J = H.reason,
                M = H.type,
                Y = H.target,
                Ct = H.wasClean;
            Ct || (Ct = N === Nt.CLOSE_NORMAL || N === Nt.CLOSE_NO_STATUS);
            var Et = new nn(M, {
                code: N,
                reason: J,
                wasClean: Ct
            });
            return Y && (Et.target = Y, Et.srcElement = Y, Et.currentTarget = Y), Et
        }

        function S(H, N, J) {
            H.readyState = Ht.CLOSING;
            var M = Dt.serverLookup(H.url),
                Y = g({
                    type: "close",
                    target: H.target,
                    code: N,
                    reason: J
                }),
                Ct = g({
                    type: "server::close",
                    target: H,
                    code: N,
                    reason: J
                });
            Jt(function() {
                Dt.removeWebSocket(H, H.url), H.readyState = Ht.CLOSED, H.dispatchEvent(Y), H.dispatchEvent(Ct), M && M.dispatchEvent(Y, M)
            }, H)
        }

        function R(H, N, J) {
            H.readyState = Ht.CLOSING;
            var M = Dt.serverLookup(H.url),
                Y = g({
                    type: "close",
                    target: H.target,
                    code: N,
                    reason: J,
                    wasClean: !1
                }),
                Ct = g({
                    type: "server::close",
                    target: H,
                    code: N,
                    reason: J,
                    wasClean: !1
                }),
                Et = E({
                    type: "error",
                    target: H.target
                });
            Jt(function() {
                Dt.removeWebSocket(H, H.url), H.readyState = Ht.CLOSED, H.dispatchEvent(Et), H.dispatchEvent(Y), H.dispatchEvent(Ct), M && M.dispatchEvent(Y, M)
            }, H)
        }

        function P(H) {
            return Object.prototype.toString.call(H) !== "[object Blob]" && !(H instanceof ArrayBuffer) && (H = String(H)), H
        }
        var j = new WeakMap;

        function ct(H) {
            if (j.has(H)) return j.get(H);
            var N = new Proxy(H, {
                get: function(M, Y) {
                    return Y === "close" ? function(Et) {
                        Et === void 0 && (Et = {});
                        var Wt = Et.code || Nt.CLOSE_NORMAL,
                            Yt = Et.reason || "";
                        S(N, Wt, Yt)
                    } : Y === "send" ? function(Et) {
                        Et = P(Et), H.dispatchEvent(l({
                            type: "message",
                            data: Et,
                            origin: this.url,
                            target: H
                        }))
                    } : Y === "on" ? function(Et, Wt) {
                        H.addEventListener("server::" + Et, Wt)
                    } : Y === "target" ? H : M[Y]
                }
            });
            return j.set(H, N), N
        }

        function Mt(H) {
            var N = encodeURIComponent(H).match(/%[89ABab]/g);
            return H.length + (N ? N.length : 0)
        }

        function yt(H) {
            var N = new et(H),
                J = N.pathname,
                M = N.protocol,
                Y = N.hash;
            if (!H) throw new TypeError(Kt.CONSTRUCTOR_ERROR + " 1 argument required, but only 0 present.");
            if (J || (N.pathname = "/"), M === "") throw new SyntaxError(Kt.CONSTRUCTOR_ERROR + " The URL '" + N.toString() + "' is invalid.");
            if (M !== "ws:" && M !== "wss:") throw new SyntaxError(Kt.CONSTRUCTOR_ERROR + " The URL's scheme must be either 'ws' or 'wss'. '" + M + "' is not allowed.");
            if (Y !== "") throw new SyntaxError(Kt.CONSTRUCTOR_ERROR + " The URL contains a fragment identifier ('" + Y + "'). Fragment identifiers are not allowed in WebSocket URLs.");
            return N.toString()
        }

        function Ft(H) {
            if (H === void 0 && (H = []), !Array.isArray(H) && typeof H != "string") throw new SyntaxError(Kt.CONSTRUCTOR_ERROR + " The subprotocol '" + H.toString() + "' is invalid.");
            typeof H == "string" && (H = [H]);
            var N = H.map(function(M) {
                    return {
                        count: 1,
                        protocol: M
                    }
                }).reduce(function(M, Y) {
                    return M[Y.protocol] = (M[Y.protocol] || 0) + Y.count, M
                }, {}),
                J = Object.keys(N).filter(function(M) {
                    return N[M] > 1
                });
            if (J.length > 0) throw new SyntaxError(Kt.CONSTRUCTOR_ERROR + " The subprotocol '" + J[0] + "' is duplicated.");
            return H
        }
        var Ht = function(H) {
            function N(M, Y) {
                H.call(this), this._onopen = null, this._onmessage = null, this._onerror = null, this._onclose = null, this.url = yt(M), Y = Ft(Y), this.protocol = Y[0] || "", this.binaryType = "blob", this.readyState = N.CONNECTING;
                var Ct = ct(this),
                    Et = Dt.attachWebSocket(Ct, this.url);
                Jt(function() {
                    if (Et)
                        if (Et.options.verifyClient && typeof Et.options.verifyClient == "function" && !Et.options.verifyClient()) this.readyState = N.CLOSED, G("error", "WebSocket connection to '" + this.url + "' failed: HTTP Authentication failed; no valid credentials available"), Dt.removeWebSocket(Ct, this.url), this.dispatchEvent(E({
                            type: "error",
                            target: this
                        })), this.dispatchEvent(g({
                            type: "close",
                            target: this,
                            code: Nt.CLOSE_NORMAL
                        }));
                        else {
                            if (Et.options.selectProtocol && typeof Et.options.selectProtocol == "function") {
                                var Yt = Et.options.selectProtocol(Y),
                                    Se = Yt !== "",
                                    Ke = Y.indexOf(Yt) !== -1;
                                if (Se && !Ke) {
                                    this.readyState = N.CLOSED, G("error", "WebSocket connection to '" + this.url + "' failed: Invalid Sub-Protocol"), Dt.removeWebSocket(Ct, this.url), this.dispatchEvent(E({
                                        type: "error",
                                        target: this
                                    })), this.dispatchEvent(g({
                                        type: "close",
                                        target: this,
                                        code: Nt.CLOSE_NORMAL
                                    }));
                                    return
                                }
                                this.protocol = Yt
                            }
                            this.readyState = N.OPEN, this.dispatchEvent(E({
                                type: "open",
                                target: this
                            })), Et.dispatchEvent(E({
                                type: "connection"
                            }), Ct)
                        }
                    else this.readyState = N.CLOSED, this.dispatchEvent(E({
                        type: "error",
                        target: this
                    })), this.dispatchEvent(g({
                        type: "close",
                        target: this,
                        code: Nt.CLOSE_NORMAL
                    })), G("error", "WebSocket connection to '" + this.url + "' failed")
                }, this)
            }
            H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N;
            var J = {
                onopen: {},
                onmessage: {},
                onclose: {},
                onerror: {}
            };
            return J.onopen.get = function() {
                return this._onopen
            }, J.onmessage.get = function() {
                return this._onmessage
            }, J.onclose.get = function() {
                return this._onclose
            }, J.onerror.get = function() {
                return this._onerror
            }, J.onopen.set = function(M) {
                this.removeEventListener("open", this._onopen), this._onopen = M, this.addEventListener("open", M)
            }, J.onmessage.set = function(M) {
                this.removeEventListener("message", this._onmessage), this._onmessage = M, this.addEventListener("message", M)
            }, J.onclose.set = function(M) {
                this.removeEventListener("close", this._onclose), this._onclose = M, this.addEventListener("close", M)
            }, J.onerror.set = function(M) {
                this.removeEventListener("error", this._onerror), this._onerror = M, this.addEventListener("error", M)
            }, N.prototype.send = function(Y) {
                var Ct = this;
                if (this.readyState === N.CLOSING || this.readyState === N.CLOSED) throw new Error("WebSocket is already in CLOSING or CLOSED state");
                var Et = l({
                        type: "server::message",
                        origin: this.url,
                        data: P(Y)
                    }),
                    Wt = Dt.serverLookup(this.url);
                Wt && Jt(function() {
                    Ct.dispatchEvent(Et, Y)
                }, Wt)
            }, N.prototype.close = function(Y, Ct) {
                if (Y !== void 0 && (typeof Y != "number" || Y !== 1e3 && (Y < 3e3 || Y > 4999))) throw new TypeError(Kt.CLOSE_ERROR + " The code must be either 1000, or between 3000 and 4999. " + Y + " is neither.");
                if (Ct !== void 0) {
                    var Et = Mt(Ct);
                    if (Et > 123) throw new SyntaxError(Kt.CLOSE_ERROR + " The message must not be greater than 123 bytes.")
                }
                if (!(this.readyState === N.CLOSING || this.readyState === N.CLOSED)) {
                    var Wt = ct(this);
                    this.readyState === N.CONNECTING ? R(Wt, Y || Nt.CLOSE_ABNORMAL, Ct) : S(Wt, Y || Nt.CLOSE_NO_STATUS, Ct)
                }
            }, Object.defineProperties(N.prototype, J), N
        }(At);
        Ht.CONNECTING = 0, Ht.prototype.CONNECTING = Ht.CONNECTING, Ht.OPEN = 1, Ht.prototype.OPEN = Ht.OPEN, Ht.CLOSING = 2, Ht.prototype.CLOSING = Ht.CLOSING, Ht.CLOSED = 3, Ht.prototype.CLOSED = Ht.CLOSED;
        var fe = function(H) {
            return H.reduce(function(N, J) {
                return N.indexOf(J) > -1 ? N : N.concat(J)
            }, [])
        };

        function Le() {
            return typeof window < "u" ? window : typeof process == "object" && typeof o1 == "function" && typeof Re == "object" ? Re : this
        }
        var hn = {
                mock: !0,
                verifyClient: null,
                selectProtocol: null
            },
            be = function(H) {
                function N(J, M) {
                    M === void 0 && (M = hn), H.call(this);
                    var Y = new et(J);
                    Y.pathname || (Y.pathname = "/"), this.url = Y.toString(), this.originalWebSocket = null;
                    var Ct = Dt.attachServer(this, this.url);
                    if (!Ct) throw this.dispatchEvent(E({
                        type: "error"
                    })), new Error("A mock server is already listening on this url");
                    this.options = Object.assign({}, hn, M), this.options.mock && this.mockWebsocket()
                }
                return H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N, N.prototype.mockWebsocket = function() {
                    var M = Le();
                    this.originalWebSocket = M.WebSocket, M.WebSocket = Ht
                }, N.prototype.restoreWebsocket = function() {
                    var M = Le();
                    this.originalWebSocket !== null && (M.WebSocket = this.originalWebSocket), this.originalWebSocket = null
                }, N.prototype.stop = function(M) {
                    M === void 0 && (M = function() {}), this.options.mock && this.restoreWebsocket(), Dt.removeServer(this.url), typeof M == "function" && M()
                }, N.prototype.on = function(M, Y) {
                    this.addEventListener(M, Y)
                }, N.prototype.close = function(M) {
                    M === void 0 && (M = {});
                    var Y = M.code,
                        Ct = M.reason,
                        Et = M.wasClean,
                        Wt = Dt.websocketsLookup(this.url);
                    Dt.removeServer(this.url), Wt.forEach(function(Yt) {
                        Yt.readyState = Ht.CLOSED, Yt.dispatchEvent(g({
                            type: "close",
                            target: Yt.target,
                            code: Y || Nt.CLOSE_NORMAL,
                            reason: Ct || "",
                            wasClean: Et
                        }))
                    }), this.dispatchEvent(g({
                        type: "close"
                    }), this)
                }, N.prototype.emit = function(M, Y, Ct) {
                    var Et = this;
                    Ct === void 0 && (Ct = {});
                    var Wt = Ct.websockets;
                    Wt || (Wt = Dt.websocketsLookup(this.url)), typeof Ct != "object" || arguments.length > 3 ? (Y = Array.prototype.slice.call(arguments, 1, arguments.length), Y = Y.map(function(Yt) {
                        return P(Yt)
                    })) : Y = P(Y), Wt.forEach(function(Yt) {
                        Array.isArray(Y) ? Yt.dispatchEvent.apply(Yt, [l({
                            type: M,
                            data: Y,
                            origin: Et.url,
                            target: Yt.target
                        })].concat(Y)) : Yt.dispatchEvent(l({
                            type: M,
                            data: Y,
                            origin: Et.url,
                            target: Yt.target
                        }))
                    })
                }, N.prototype.clients = function() {
                    return Dt.websocketsLookup(this.url)
                }, N.prototype.to = function(M, Y, Ct) {
                    var Et = this;
                    Ct === void 0 && (Ct = []);
                    var Wt = this,
                        Yt = fe(Ct.concat(Dt.websocketsLookup(this.url, M, Y)));
                    return {
                        to: function(Se, Ke) {
                            return Et.to.call(Et, Se, Ke, Yt)
                        },
                        emit: function(Ke, re) {
                            Wt.emit(Ke, re, {
                                websockets: Yt
                            })
                        }
                    }
                }, N.prototype.in = function() {
                    for (var M = [], Y = arguments.length; Y--;) M[Y] = arguments[Y];
                    return this.to.apply(null, M)
                }, N.prototype.simulate = function(M) {
                    var Y = Dt.websocketsLookup(this.url);
                    M === "error" && Y.forEach(function(Ct) {
                        Ct.readyState = Ht.CLOSED, Ct.dispatchEvent(E({
                            type: "error"
                        }))
                    })
                }, N
            }(At);
        be.of = function(N) {
            return new be(N)
        };
        var ke = function(H) {
            function N(M, Y) {
                var Ct = this;
                M === void 0 && (M = "socket.io"), Y === void 0 && (Y = ""), H.call(this), this.binaryType = "blob";
                var Et = new et(M);
                Et.pathname || (Et.pathname = "/"), this.url = Et.toString(), this.readyState = N.CONNECTING, this.protocol = "", this.target = this, typeof Y == "string" || typeof Y == "object" && Y !== null ? this.protocol = Y : Array.isArray(Y) && Y.length > 0 && (this.protocol = Y[0]);
                var Wt = Dt.attachWebSocket(this, this.url);
                Jt(function() {
                    Wt ? (this.readyState = N.OPEN, Wt.dispatchEvent(E({
                        type: "connection"
                    }), Wt, this), Wt.dispatchEvent(E({
                        type: "connect"
                    }), Wt, this), this.dispatchEvent(E({
                        type: "connect",
                        target: this
                    }))) : (this.readyState = N.CLOSED, this.dispatchEvent(E({
                        type: "error",
                        target: this
                    })), this.dispatchEvent(g({
                        type: "close",
                        target: this,
                        code: Nt.CLOSE_NORMAL
                    })), G("error", "Socket.io connection to '" + this.url + "' failed"))
                }, this), this.addEventListener("close", function(Yt) {
                    Ct.dispatchEvent(g({
                        type: "disconnect",
                        target: Yt.target,
                        code: Yt.code
                    }))
                })
            }
            H && (N.__proto__ = H), N.prototype = Object.create(H && H.prototype), N.prototype.constructor = N;
            var J = {
                broadcast: {}
            };
            return N.prototype.close = function() {
                if (this.readyState === N.OPEN) {
                    var Y = Dt.serverLookup(this.url);
                    return Dt.removeWebSocket(this, this.url), this.readyState = N.CLOSED, this.dispatchEvent(g({
                        type: "close",
                        target: this,
                        code: Nt.CLOSE_NORMAL
                    })), Y && Y.dispatchEvent(g({
                        type: "disconnect",
                        target: this,
                        code: Nt.CLOSE_NORMAL
                    }), Y), this
                }
            }, N.prototype.disconnect = function() {
                return this.close()
            }, N.prototype.emit = function(Y) {
                for (var Ct = [], Et = arguments.length - 1; Et-- > 0;) Ct[Et] = arguments[Et + 1];
                if (this.readyState !== N.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                var Wt = l({
                        type: Y,
                        origin: this.url,
                        data: Ct
                    }),
                    Yt = Dt.serverLookup(this.url);
                return Yt && Yt.dispatchEvent.apply(Yt, [Wt].concat(Ct)), this
            }, N.prototype.send = function(Y) {
                return this.emit("message", Y), this
            }, J.broadcast.get = function() {
                if (this.readyState !== N.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                var M = this,
                    Y = Dt.serverLookup(this.url);
                if (!Y) throw new Error("SocketIO can not find a server at the specified URL (" + this.url + ")");
                return {
                    emit: function(Et, Wt) {
                        return Y.emit(Et, Wt, {
                            websockets: Dt.websocketsLookup(M.url, null, M)
                        }), M
                    },
                    to: function(Et) {
                        return Y.to(Et, M)
                    },
                    in: function(Et) {
                        return Y.in(Et, M)
                    }
                }
            }, N.prototype.on = function(Y, Ct) {
                return this.addEventListener(Y, Ct), this
            }, N.prototype.off = function(Y, Ct) {
                this.removeEventListener(Y, Ct)
            }, N.prototype.hasListeners = function(Y) {
                var Ct = this.listeners[Y];
                return Array.isArray(Ct) ? !!Ct.length : !1
            }, N.prototype.join = function(Y) {
                Dt.addMembershipToRoom(this, Y)
            }, N.prototype.leave = function(Y) {
                Dt.removeMembershipFromRoom(this, Y)
            }, N.prototype.to = function(Y) {
                return this.broadcast.to(Y)
            }, N.prototype.in = function() {
                return this.to.apply(null, arguments)
            }, N.prototype.dispatchEvent = function(Y) {
                for (var Ct = this, Et = [], Wt = arguments.length - 1; Wt-- > 0;) Et[Wt] = arguments[Wt + 1];
                var Yt = Y.type,
                    Se = this.listeners[Yt];
                if (!Array.isArray(Se)) return !1;
                Se.forEach(function(Ke) {
                    Et.length > 0 ? Ke.apply(Ct, Et) : Ke.call(Ct, Y.data ? Y.data : Y)
                })
            }, Object.defineProperties(N.prototype, J), N
        }(At);
        ke.CONNECTING = 0, ke.OPEN = 1, ke.CLOSING = 2, ke.CLOSED = 3;
        var Te = function(N, J) {
            return new ke(N, J)
        };
        Te.connect = function(N, J) {
            return Te(N, J)
        };
        var sn = be,
            oe = Ht,
            Ue = Te;
        n.Server = sn, n.WebSocket = oe, n.SocketIO = Ue, Object.defineProperty(n, "__esModule", {
            value: !0
        })
    })
})(ic, ic.exports);
var Xu = {
    exports: {}
};
(function(e) {
    (function() {
        function t(y, k) {
            var A = y.x - k.x,
                D = y.y - k.y;
            return A * A + D * D
        }

        function n(y, k, A) {
            var D = k.x,
                $ = k.y,
                tt = A.x - D,
                st = A.y - $;
            if (tt !== 0 || st !== 0) {
                var V = ((y.x - D) * tt + (y.y - $) * st) / (tt * tt + st * st);
                V > 1 ? (D = A.x, $ = A.y) : V > 0 && (D += tt * V, $ += st * V)
            }
            return tt = y.x - D, st = y.y - $, tt * tt + st * st
        }

        function i(y, k) {
            for (var A = y[0], D = [A], $, tt = 1, st = y.length; tt < st; tt++) $ = y[tt], t($, A) > k && (D.push($), A = $);
            return A !== $ && D.push($), D
        }

        function o(y, k, A, D, $) {
            for (var tt = D, st, V = k + 1; V < A; V++) {
                var ot = n(y[V], y[k], y[A]);
                ot > tt && (st = V, tt = ot)
            }
            tt > D && (st - k > 1 && o(y, k, st, D, $), $.push(y[st]), A - st > 1 && o(y, st, A, D, $))
        }

        function f(y, k) {
            var A = y.length - 1,
                D = [y[0]];
            return o(y, 0, A, k, D), D.push(y[A]), D
        }

        function v(y, k, A) {
            if (y.length <= 2) return y;
            var D = k !== void 0 ? k * k : 1;
            return y = A ? y : i(y, D), y = f(y, D), y
        }
        e.exports = v, e.exports.default = v
    })()
})(Xu);
const a1 = Xu.exports;
const l1 = Ne.View.extend({
    el: "#banner",
    template: ve.template(`
        <div class="banner-image"></div>
        <div class="banner-text"></div>
        <div class="banner-cta"></div>
    `),
    events: {
        click: "onBannerClick"
    },
    bindings: {
        ":el": {
            attributes: [{
                name: "class",
                observe: ["visible", "theme"],
                onGet([e, t]) {
                    let n = t || "no-theme";
                    return e && (n += " show"), n
                }
            }]
        },
        ".banner-text": "copy",
        ".banner-cta": "cta"
    },
    initialize() {
        this.render(), this.listenTo(this.model, "change:visible", this.visibleDidChange)
    },
    onBannerClick() {
        bh.bannerClick(this.getCampaign(), "post_game"), this.model.get("url") && window.open(this.model.get("url"), "_blank")
    },
    onRender() {
        this.stickit()
    },
    visibleDidChange() {
        setTimeout(() => {
            lt(window).trigger("resize")
        }, .5)
    },
    getCampaign() {
        const e = this.model.get("url");
        if (!e) return "";
        let t = "";
        return e.split("?")[1] && (t = new URLSearchParams(window.location.search).get("utm_campaign") || ""), t
    }
});
class mi {
    static get isVisible() {
        return this.view ? this.view.state === "on" : !1
    }
    static async update(t, n) {
        if (!n || n.lobbyState !== "PostGame") {
            this.hide();
            return
        }
        this.view || await this.init(t, n), this.show()
    }
    static async init(t) {
        if (!t) {
            this.bannerData = !1;
            return
        }
        this.bannerData = await this.loadBannerData(t), this.bannerData && (this.view = new l1({
            model: new we.Model(this.bannerData)
        }), this.isInitialized = !0)
    }
    static show() {
        !this.view || this.view.model.set({
            visible: !0
        })
    }
    static hide() {
        !this.view || this.view.model.set({
            visible: !1
        })
    }
    static async loadBannerData(t) {
        try {
            const i = await (await fetch({
                TV_ADROLL_ADVERTISABLE_ID: "WN335VM7RVAMPDZAOWMIHP",
                TV_ADROLL_PIXEL_ID: "WN335VM7RVAMPDZAOWMIHP",
                TV_CDN_IMAGES_URL: "https://s3.amazonaws.com/static.jackboxgames.com/game-images",
                TV_DEBUG: "false",
                TV_DOMAINS: "https://dev.jackbox.tv,https://qa.jackbox.tv,https://jackbox.tv,https://tinyshirts.jackboxgames.com",
                TV_ECAST: window.location.hostname,
                TV_GA_STREAM_ID: "3795853220",
                TV_GA_MEASUREMENT_ID: "G-V1QJVQMYF1",
                TV_S3_BUNDLES: "https://bundles.jackbox.tv",
                TV_S3_DEBUG: "https://jbg-ops.s3.amazonaws.com",
                TV_SENTRY_ALLOWED_URLS: "/(http|https):\\/\\/(\\S*\\.)?jackbox\\.tv/i",
                TV_SENTRY_DSN: "https://bb026273d98c4b99ab11c1de369f521f@o420318.ingest.sentry.io/6387933",
                TV_SENTRY_RATE: "0.2",
                TV_SLACK_DEBUG: "https://hooks.slack.com/services/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",
                TV_TWITCH_CLIENT_ID: "yn2iepd23vskpmkzgeg2lkfsct7gsc",
                BASE_URL: "https://bundles.jackbox.tv/main/pp3-awshirt/",
                MODE: "production",
                DEV: !1,
                PROD: !0
            }.TV_BANNERS_URL)).json();
            return !i || !i.postGameBanners ? !1 : i.postGameBanners[t]
        } catch (n) {
            return console.error("Unable to load banner data", n), !1
        }
    }
}
me(mi, "view", null), me(mi, "isInitialized", !1), me(mi, "bannerConfig", null);
var c1 = {};
(function(e) {
    (function(t) {
        t(Ui.exports, we, e)
    })(function(t, n, i) {
        n.Stickit = i, i._handlers = [], i.addHandler = function(m) {
            m = t.map(t.flatten([m]), function(L) {
                return t.defaults({}, L, {
                    updateModel: !0,
                    updateView: !0,
                    updateMethod: "text"
                })
            }), this._handlers = this._handlers.concat(m)
        }, i.ViewMixin = {
            _modelBindings: null,
            unstickit: function(m, L) {
                if (t.isObject(L)) {
                    t.each(L, function(ht, bt) {
                        this.unstickit(m, bt)
                    }, this);
                    return
                }
                var X = [],
                    ut = [];
                this._modelBindings = t.reject(this._modelBindings, function(ht) {
                    if (!(m && ht.model !== m) && !(L && ht.config.selector != L)) return ht.model.off(ht.event, ht.fn), ut.push(ht.config._destroy), X.push(ht.model), !0
                }), t.invoke(t.uniq(X), "trigger", "stickit:unstuck", this.cid), t.each(t.uniq(ut), function(ht) {
                    ht.call(this)
                }, this), this.$el.off(".stickit" + (m ? "." + m.cid : ""), L)
            },
            stickit: function(m, L) {
                var X = m || this.model,
                    ut = L || t.result(this, "bindings") || {};
                this._modelBindings || (this._modelBindings = []), this.addBinding(X, ut);
                var ht = this.remove;
                return ht.stickitWrapped || (this.remove = function() {
                    var bt = this;
                    return this.unstickit(), ht && (bt = ht.apply(this, arguments)), bt
                }), this.remove.stickitWrapped = !0, this
            },
            addBinding: function(m, L, X) {
                var ut = m || this.model,
                    ht = ".stickit." + ut.cid;
                if (X = X || {}, t.isObject(L)) {
                    var bt = L;
                    t.each(bt, function(et, Jt) {
                        this.addBinding(ut, Jt, et)
                    }, this);
                    return
                }
                var d = L === ":el" ? this.$el : this.$(L);
                if (this.unstickit(ut, L), !!d.length) {
                    t.isString(X) && (X = {
                        observe: X
                    }), t.isFunction(X.observe) && (X.observe = X.observe.call(this));
                    var kt = $(d, X),
                        Vt = kt.observe;
                    kt.selector = L, kt.view = this;
                    var Pt = kt.bindId = t.uniqueId(),
                        Ce = t.extend({
                            stickitChange: kt
                        }, kt.setOptions);
                    if (kt._destroy = function() {
                            v.call(this, kt.destroy, d, ut, kt)
                        }, tt(d, kt, ut, Vt), V(d, kt, ut, Vt), st(d, kt, ut), Vt) {
                        t.each(kt.events, function(et) {
                            var Jt = et + ht,
                                G = function($t) {
                                    var At = v.call(this, kt.getVal, d, $t, kt, o.call(arguments, 1)),
                                        Tt = y(kt.updateModel, At, $t, kt);
                                    Tt && A(ut, Vt, At, Ce, kt)
                                },
                                pt = L === ":el" ? "" : L;
                            this.$el.on(Jt, pt, t.bind(G, this))
                        }, this), t.each(t.flatten([Vt]), function(et) {
                            k(ut, "change:" + et, kt, function(Jt, G, pt) {
                                var $t = pt && pt.stickitChange && pt.stickitChange.bindId;
                                if ($t !== Pt) {
                                    var At = D(ut, Vt, kt);
                                    ot(d, kt, At, ut)
                                }
                            })
                        });
                        var Xt = D(ut, Vt, kt);
                        ot(d, kt, Xt, ut, !0)
                    }
                    v.call(this, kt.initialize, d, ut, kt)
                }
            }
        }, t.extend(n.View.prototype, i.ViewMixin);
        var o = [].slice,
            f = function(m, L) {
                var X = (L || "").split("."),
                    ut = t.reduce(X, function(ht, bt) {
                        return ht[bt]
                    }, m);
                return ut == null ? m : ut
            },
            v = function(m) {
                if (m = t.isString(m) ? f(this, m) : m, m) return m.apply(this, o.call(arguments, 1))
            },
            y = function(m, L, X) {
                if (t.isBoolean(m)) return m;
                if (t.isFunction(m) || t.isString(m)) {
                    var ut = t.last(arguments).view;
                    return v.apply(ut, arguments)
                }
                return !1
            },
            k = function(m, L, X, ut) {
                var ht = X.view;
                m.on(L, ut, ht), ht._modelBindings.push({
                    model: m,
                    event: L,
                    fn: ut,
                    config: X
                })
            },
            A = function(m, L, X, ut, ht) {
                var bt = {},
                    d = ht.view;
                ht.onSet && (X = v.call(d, ht.onSet, X, ht)), ht.set ? v.call(d, ht.set, L, X, ut, ht) : (bt[L] = X, t.isArray(L) && t.isArray(X) && (bt = t.reduce(L, function(kt, Vt, Pt) {
                    return kt[Vt] = t.has(X, Pt) ? X[Pt] : null, kt
                }, {})), m.set(bt, ut))
            },
            D = function(m, L, X) {
                var ut = X.view,
                    ht = function(kt) {
                        return m[X.escape ? "escape" : "get"](kt)
                    },
                    bt = function(kt) {
                        return kt == null ? "" : kt
                    },
                    d = t.isArray(L) ? t.map(L, ht) : ht(L);
                return X.onGet && (d = v.call(ut, X.onGet, d, X)), t.isArray(d) ? t.map(d, bt) : bt(d)
            },
            $ = i.getConfiguration = function(m, L) {
                var X = [{
                    updateModel: !1,
                    updateMethod: "text",
                    update: function(ht, bt, d, kt) {
                        ht[kt.updateMethod] && ht[kt.updateMethod](bt)
                    },
                    getVal: function(ht, bt, d) {
                        return ht[d.updateMethod]()
                    }
                }];
                X = X.concat(t.filter(i._handlers, function(ht) {
                    return m.is(ht.selector)
                })), X.push(L);
                var ut = t.extend.apply(t, X);
                return t.has(ut, "updateView") || (ut.updateView = !ut.visible), ut
            },
            tt = function(m, L, X, ut) {
                var ht = ["autofocus", "autoplay", "async", "checked", "controls", "defer", "disabled", "hidden", "indeterminate", "loop", "multiple", "open", "readonly", "required", "scoped", "selected"],
                    bt = L.view;
                t.each(L.attributes || [], function(d) {
                    d = t.clone(d), d.view = bt;
                    var kt = "",
                        Vt = d.observe || (d.observe = ut),
                        Pt = function() {
                            var Ce = t.contains(ht, d.name) ? "prop" : "attr",
                                Xt = D(X, Vt, d);
                            d.name === "class" ? (m.removeClass(kt).addClass(Xt), kt = Xt) : m[Ce](d.name, Xt)
                        };
                    t.each(t.flatten([Vt]), function(Ce) {
                        k(X, "change:" + Ce, L, Pt)
                    }), Pt()
                })
            },
            st = function(m, L, X, ut) {
                t.each(L.classes || [], function(ht, bt) {
                    t.isString(ht) && (ht = {
                        observe: ht
                    }), ht.view = L.view;
                    var d = ht.observe,
                        kt = function() {
                            var Vt = D(X, d, ht);
                            m.toggleClass(bt, !!Vt)
                        };
                    t.each(t.flatten([d]), function(Vt) {
                        k(X, "change:" + Vt, L, kt)
                    }), kt()
                })
            },
            V = function(m, L, X, ut) {
                if (L.visible != null) {
                    var ht = L.view,
                        bt = function() {
                            var d = L.visible,
                                kt = L.visibleFn,
                                Vt = D(X, ut, L),
                                Pt = !!Vt;
                            (t.isFunction(d) || t.isString(d)) && (Pt = !!v.call(ht, d, Vt, L)), kt ? v.call(ht, kt, m, Pt, L) : m.toggle(Pt)
                        };
                    t.each(t.flatten([ut]), function(d) {
                        k(X, "change:" + d, L, bt)
                    }), bt()
                }
            },
            ot = function(m, L, X, ut, ht) {
                var bt = L.view;
                !y(L.updateView, X, L) || (v.call(bt, L.update, m, X, ut, L), ht || v.call(bt, L.afterUpdate, m, X, L))
            };
        return i.addHandler([{
            selector: "[contenteditable]",
            updateMethod: "html",
            events: ["input", "change"]
        }, {
            selector: "input",
            events: ["propertychange", "input", "change"],
            update: function(m, L) {
                m.val(L)
            },
            getVal: function(m) {
                return m.val()
            }
        }, {
            selector: "textarea",
            events: ["propertychange", "input", "change"],
            update: function(m, L) {
                m.val(L)
            },
            getVal: function(m) {
                return m.val()
            }
        }, {
            selector: 'input[type="radio"]',
            events: ["change"],
            update: function(m, L) {
                m.filter('[value="' + L + '"]').prop("checked", !0)
            },
            getVal: function(m) {
                return m.filter(":checked").val()
            }
        }, {
            selector: 'input[type="checkbox"]',
            events: ["change"],
            update: function(m, L, X, ut) {
                if (m.length > 1) L || (L = []), m.each(function(bt, d) {
                    var kt = n.$(d),
                        Vt = t.contains(L, kt.val());
                    kt.prop("checked", Vt)
                });
                else {
                    var ht = t.isBoolean(L) ? L : L === m.val();
                    m.prop("checked", ht)
                }
            },
            getVal: function(m) {
                var L;
                if (m.length > 1) L = t.reduce(m, function(ut, ht) {
                    var bt = n.$(ht);
                    return bt.prop("checked") && ut.push(bt.val()), ut
                }, []);
                else {
                    L = m.prop("checked");
                    var X = m.val();
                    X !== "on" && X != null && (L = L ? m.val() : null)
                }
                return L
            }
        }, {
            selector: "select",
            events: ["change"],
            update: function(m, L, X, ut) {
                var ht, bt = ut.selectOptions,
                    d = bt && bt.collection || void 0,
                    kt = m.prop("multiple");
                if (!bt) {
                    bt = {};
                    var Vt = function(vt) {
                        return vt.map(function(Dt, Nt) {
                            var Kt = n.$(Nt).data("stickit-bind-val");
                            return {
                                value: Kt !== void 0 ? Kt : Nt.value,
                                label: Nt.text
                            }
                        }).get()
                    };
                    m.find("optgroup").length ? (d = {
                        opt_labels: []
                    }, m.find("> option").length && (d.opt_labels.push(void 0), t.each(m.find("> option"), function(vt) {
                        d[void 0] = Vt(n.$(vt))
                    })), t.each(m.find("optgroup"), function(vt) {
                        var Dt = n.$(vt).attr("label");
                        d.opt_labels.push(Dt), d[Dt] = Vt(n.$(vt).find("option"))
                    })) : d = Vt(m.find("option"))
                }
                bt.valuePath = bt.valuePath || "value", bt.labelPath = bt.labelPath || "label", bt.disabledPath = bt.disabledPath || "disabled";
                var Pt = function(vt, Dt, Nt) {
                    t.each(vt, function(Kt) {
                        var le = n.$("<option/>"),
                            Ee = Kt,
                            Ye = function(S, R, P) {
                                le.text(S), Ee = R, le.data("stickit-bind-val", Ee), !t.isArray(Ee) && !t.isObject(Ee) && le.val(Ee), P === !0 && le.prop("disabled", "disabled")
                            },
                            nn, E, l;
                        Kt === "__default__" ? (nn = Nt.label, E = Nt.value, l = Nt.disabled) : (nn = f(Kt, bt.labelPath), E = f(Kt, bt.valuePath), l = f(Kt, bt.disabledPath)), Ye(nn, E, l);
                        var g = function() {
                            return !kt && Ee != null && Nt != null && Ee === Nt ? !0 : !!(t.isObject(Nt) && t.isEqual(Ee, Nt))
                        };
                        g() ? le.prop("selected", !0) : kt && t.isArray(Nt) && t.each(Nt, function(S) {
                            t.isObject(S) && (S = f(S, bt.valuePath)), (S === Ee || t.isObject(S) && t.isEqual(Ee, S)) && le.prop("selected", !0)
                        }), Dt.append(le)
                    })
                };
                if (m.find("*").remove(), t.isString(d)) {
                    var Ce = window;
                    d.indexOf("this.") === 0 && (Ce = this), d = d.replace(/^[a-z]*\.(.+)$/, "$1"), ht = f(Ce, d)
                } else t.isFunction(d) ? ht = v.call(this, d, m, ut) : ht = d;
                if (ht instanceof n.Collection) {
                    var Xt = ht,
                        et = function() {
                            var vt = D(X, ut.observe, ut);
                            v.call(this, ut.update, m, vt, X, ut)
                        },
                        Jt = function() {
                            Xt.off("add remove reset sort", et)
                        },
                        G = function() {
                            Jt(), Xt.off("stickit:selectRefresh"), X.off("stickit:selectRefresh")
                        };
                    Xt.trigger("stickit:selectRefresh"), Xt.once("stickit:selectRefresh", Jt, this), Xt.on("add remove reset sort", et, this), X.trigger("stickit:selectRefresh"), X.once("stickit:selectRefresh", function() {
                        X.off("stickit:unstuck", G)
                    }), X.once("stickit:unstuck", G, this), ht = ht.toJSON()
                }
                if (bt.defaultOption) {
                    var pt = t.isFunction(bt.defaultOption) ? bt.defaultOption.call(this, m, ut) : bt.defaultOption;
                    Pt(["__default__"], m, pt)
                }
                if (t.isArray(ht)) Pt(ht, m, L);
                else if (ht.opt_labels) t.each(ht.opt_labels, function(vt) {
                    var Dt = n.$("<optgroup/>").attr("label", vt);
                    Pt(ht[vt], Dt, L), m.append(Dt)
                });
                else {
                    var $t = [],
                        At;
                    for (var Tt in ht) At = {}, At[bt.valuePath] = Tt, At[bt.labelPath] = ht[Tt], $t.push(At);
                    $t = t.sortBy($t, bt.comparator || bt.labelPath), Pt($t, m, L)
                }
            },
            getVal: function(m) {
                var L = m.find("option:selected");
                return m.prop("multiple") ? t.map(L, function(X) {
                    return n.$(X).data("stickit-bind-val")
                }) : L.data("stickit-bind-val")
            }
        }]), i
    })
})(c1);
const u1 = `<button type="button" class='button choice-button btn btn-lg'></button>
<button data-action='censor' class='button censor-button btn btn-lg'></button>`,
    Yu = Ne.View.extend({
        template: ve.template(u1),
        model: new we.Model({}),
        className() {
            let e = "button-group btn-group";
            return this.options.block !== !1 && (e += " btn-block"), e
        },
        events: {
            "click .button": "onClick"
        },
        bindings: {
            ":el": {
                observe: "visible",
                visible(e) {
                    return e !== !1
                },
                visibleFn(e, t) {
                    e.css("display", t ? "" : "none")
                },
                attributes: [{
                    name: "class",
                    observe: ["className", "selected", "disabled", "active"],
                    onGet([e, t, n, i]) {
                        let o = "";
                        return e && (o += e), t && (o += " selected"), n && (o += " disabled"), i && (o += " active"), o
                    }
                }]
            },
            "button:first": {
                observe: ["text", "html", "label"],
                updateMethod: "html",
                onGet([e, t, n]) {
                    return n ? this.$el.find("button:first").attr("aria-label", n) : this.$el.find("button:first").removeAttr("aria-label"), t || lt("<div />").text(e).html()
                },
                attributes: [{
                    name: "disabled",
                    observe: "disabled"
                }, {
                    name: "data-action",
                    observe: "action",
                    onGet(e) {
                        return e || "choose"
                    }
                }, {
                    name: "data-index",
                    observe: "index"
                }, {
                    name: "data-key",
                    observe: "key"
                }, {
                    name: "style",
                    observe: "color",
                    onGet(e) {
                        if (!e) return "";
                        let t = "";
                        return e.text && (t += `color: ${e.text};`), e.background && (t += `background-color: ${e.background};`), t
                    }
                }, {
                    name: "type",
                    observe: "action",
                    onGet(e) {
                        return e === "submit" ? "submit" : "button"
                    }
                }]
            },
            ".censor-button": {
                observe: "censorable",
                visible: !0,
                visibleFn(e, t) {
                    t || e.remove()
                },
                attributes: [{
                    name: "data-index",
                    observe: "index"
                }, {
                    name: "class",
                    observe: ["className", "isWarned"],
                    onGet(e) {
                        if (!e) return null;
                        let t = "";
                        return e[0] && (t += e[0]), e[1] && (t += " isWarned"), t
                    }
                }]
            }
        },
        onRender() {
            this.model.set("index", this.getOption("index")), this.getOption("action") && this.model.set("action", this.getOption("action")), this.stickit()
        },
        onClick(e) {
            const t = lt(e.target).data("action");
            this.triggerMethod(`button:${t}`, this.model)
        }
    });
var Ni, Bs, rs = typeof Map == "function" ? new Map : (Ni = [], Bs = [], {
        has: function(e) {
            return Ni.indexOf(e) > -1
        },
        get: function(e) {
            return Bs[Ni.indexOf(e)]
        },
        set: function(e, t) {
            Ni.indexOf(e) === -1 && (Ni.push(e), Bs.push(t))
        },
        delete: function(e) {
            var t = Ni.indexOf(e);
            t > -1 && (Ni.splice(t, 1), Bs.splice(t, 1))
        }
    }),
    Ku = function(e) {
        return new Event(e, {
            bubbles: !0
        })
    };
try {
    new Event("test")
} catch {
    Ku = function(t) {
        var n = document.createEvent("Event");
        return n.initEvent(t, !0, !1), n
    }
}

function h1(e) {
    var t = rs.get(e);
    t && t.destroy()
}

function d1(e) {
    var t = rs.get(e);
    t && t.update()
}
var Kr = null;
typeof window > "u" || typeof window.getComputedStyle != "function" ? ((Kr = function(e) {
    return e
}).destroy = function(e) {
    return e
}, Kr.update = function(e) {
    return e
}) : ((Kr = function(e, t) {
    return e && Array.prototype.forEach.call(e.length ? e : [e], function(n) {
        return function(i) {
            if (i && i.nodeName && i.nodeName === "TEXTAREA" && !rs.has(i)) {
                var o, f = null,
                    v = null,
                    y = null,
                    k = function() {
                        i.clientWidth !== v && tt()
                    },
                    A = function(st) {
                        window.removeEventListener("resize", k, !1), i.removeEventListener("input", tt, !1), i.removeEventListener("keyup", tt, !1), i.removeEventListener("autosize:destroy", A, !1), i.removeEventListener("autosize:update", tt, !1), Object.keys(st).forEach(function(V) {
                            i.style[V] = st[V]
                        }), rs.delete(i)
                    }.bind(i, {
                        height: i.style.height,
                        resize: i.style.resize,
                        overflowY: i.style.overflowY,
                        overflowX: i.style.overflowX,
                        wordWrap: i.style.wordWrap
                    });
                i.addEventListener("autosize:destroy", A, !1), "onpropertychange" in i && "oninput" in i && i.addEventListener("keyup", tt, !1), window.addEventListener("resize", k, !1), i.addEventListener("input", tt, !1), i.addEventListener("autosize:update", tt, !1), i.style.overflowX = "hidden", i.style.wordWrap = "break-word", rs.set(i, {
                    destroy: A,
                    update: tt
                }), (o = window.getComputedStyle(i, null)).resize === "vertical" ? i.style.resize = "none" : o.resize === "both" && (i.style.resize = "horizontal"), f = o.boxSizing === "content-box" ? -(parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)) : parseFloat(o.borderTopWidth) + parseFloat(o.borderBottomWidth), isNaN(f) && (f = 0), tt()
            }

            function D(st) {
                var V = i.style.width;
                i.style.width = "0px", i.style.width = V, i.style.overflowY = st
            }

            function $() {
                if (i.scrollHeight !== 0) {
                    var st = function(ot) {
                            for (var m = []; ot && ot.parentNode && ot.parentNode instanceof Element;) ot.parentNode.scrollTop && m.push({
                                node: ot.parentNode,
                                scrollTop: ot.parentNode.scrollTop
                            }), ot = ot.parentNode;
                            return m
                        }(i),
                        V = document.documentElement && document.documentElement.scrollTop;
                    i.style.height = "", i.style.height = i.scrollHeight + f + "px", v = i.clientWidth, st.forEach(function(ot) {
                        ot.node.scrollTop = ot.scrollTop
                    }), V && (document.documentElement.scrollTop = V)
                }
            }

            function tt() {
                $();
                var st = Math.round(parseFloat(i.style.height)),
                    V = window.getComputedStyle(i, null),
                    ot = V.boxSizing === "content-box" ? Math.round(parseFloat(V.height)) : i.offsetHeight;
                if (ot < st ? V.overflowY === "hidden" && (D("scroll"), $(), ot = V.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight) : V.overflowY !== "hidden" && (D("hidden"), $(), ot = V.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight), y !== ot) {
                    y = ot;
                    var m = Ku("autosize:resized");
                    try {
                        i.dispatchEvent(m)
                    } catch {}
                }
            }
        }(n)
    }), e
}).destroy = function(e) {
    return e && Array.prototype.forEach.call(e.length ? e : [e], h1), e
}, Kr.update = function(e) {
    return e && Array.prototype.forEach.call(e.length ? e : [e], d1), e
});
var rc = Kr;
const f1 = `<form>\r
    <div class="form-group">\r
        <div class="inputGroup">\r
            <textarea id="input-text-textarea" rows="1" class="form-control jbg-input" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"></textarea>\r
            <span class="inlineSubmit">\r
                <button type="submit" class="btn btn-default inlineSubmitButton" type="button"><span class="inlineSubmitText">Send</span></button>\r
            </span>\r
            <span id="helpBlock2" class="help-block errorText"></span>\r
            <div class="charCountDisplay"><span class="charRemaining">70</span></div>\r
        </div>\r
    </div>\r
</form>`,
    eo = Ne.View.extend({
        tagName: "div",
        className: "input",
        model: new we.Model({}),
        template: ve.template(f1),
        events: {
            "keypress textarea": "onKeypress",
            "click .inlineSubmitButton": "onSubmitClick",
            "input textarea": "onInputChange"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "hidden",
                    onGet(e) {
                        return e === !0 ? "display: none;" : "display: block;"
                    }
                }, {
                    name: "class",
                    observe: "className",
                    onGet(e) {
                        return `input ${e!==void 0?e:""}`
                    }
                }]
            },
            textarea: {
                attributes: [{
                    name: "maxlength",
                    observe: "maxLength"
                }, {
                    name: "placeholder",
                    observe: "placeholder"
                }, {
                    name: "autocapitalize",
                    observe: "autocapitalize"
                }, {
                    name: "class",
                    observe: "className",
                    onGet(e) {
                        return `form-control ${e!==void 0?e:""}`
                    }
                }]
            },
            ".inputGroup": {
                attributes: [{
                    name: "class",
                    observe: "inlineSubmit",
                    onGet(e) {
                        return e === !0 ? "input-group" : ""
                    }
                }]
            },
            ".inlineSubmit": {
                attributes: [{
                    name: "class",
                    observe: "inlineSubmit",
                    onGet(e) {
                        return e === !0 ? "input-group-btn" : ""
                    }
                }, {
                    name: "style",
                    observe: "inlineSubmit",
                    onGet(e) {
                        return e === !0 ? "" : "display:none;"
                    }
                }]
            },
            ".inlineSubmitText": {
                observe: "inlineSubmitText",
                onGet(e) {
                    return e !== void 0 ? e : "Send"
                }
            },
            ".form-group": {
                attributes: [{
                    name: "class",
                    observe: "error",
                    onGet(e) {
                        return e ? "has-error" : ""
                    }
                }]
            },
            ".errorText": {
                observe: "error",
                updateMethod: "html",
                visible: !0,
                updateView: !0,
                onGet(e) {
                    return e ? typeof e == "object" ? e.html ? e.html : lt("<div />").text(e.text).html() : e : null
                }
            },
            ".charRemaining": "remaining",
            ".maxChars": "maxLength",
            ".charCountDisplay": {
                observe: ["maxLength", "counter"],
                visible(e) {
                    return e[0] && e[1]
                }
            }
        },
        render() {
            this.$el.html(this.template()), this.stickit(), this.model.set("remaining", this.model.get("maxLength"))
        },
        onAttach() {
            this.getOption("preventAutosize") || rc(lt("textarea"))
        },
        onSubmitClick() {
            return lt("textarea").blur(), this.triggerMethod("input:submit", this), !1
        },
        onKeypress(e) {
            return this.model.set("error", ""), e.keyCode === 13 ? (lt("textarea").blur(), this.triggerMethod("input:submit", this), !1) : !0
        },
        onInputChange() {
            const e = this.$("textarea").first();
            if (this.triggerMethod("input:text", this), !e) return;
            const t = e.val() || "";
            this.model.set("remaining", this.model.get("maxLength") - t.length)
        },
        focus() {
            lt(this.$el).find("textarea").focus()
        },
        clearInput() {
            const e = lt(this.$el).find("textarea");
            lt(e).val(""), this.getOption("preventAutosize") || rc.update(e), this.onInputChange()
        },
        setValue(e) {
            const t = lt(this.$el).find("textarea");
            t[0].value = e, this.onInputChange()
        },
        getValue() {
            return this.$("textarea").val()
        },
        getSanitizedValue() {
            return Ze.sanitize(this.getValue())
        },
        sanitize(e) {
            return Ze.sanitize(e)
        },
        sanitizeInput(e) {
            return Ze.sanitizeInput(e)
        }
    }),
    p1 = '<div class="text"></div>',
    Wi = Ne.View.extend({
        tagName: "div",
        template: ve.template(p1),
        model: new we.Model({
            text: "",
            className: ""
        }),
        bindings: {
            ".text": {
                observe: ["text", "html"],
                updateMethod: "html",
                onGet([e, t]) {
                    return t !== void 0 ? t : lt("<div />").text(e).html()
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "background",
                    onGet(e) {
                        return e ? `background-color: ${e};` : ""
                    }
                }, {
                    name: "class",
                    observe: "className"
                }]
            }
        },
        onRender() {
            this.stickit()
        }
    }),
    Ai = Ne.CollectionView.extend({
        tagName: "div",
        className: "choices",
        childView(e) {
            return e.get("type") === "input" ? eo : e.get("type") === "text" ? Wi : Yu
        },
        collection: new we.Collection([]),
        initialize(e) {
            this.listenTo(this.collection, "sync", this.render), this.mergeOptions(e, ["block", "action"])
        },
        childViewOptions(e, t) {
            let n = !0,
                i;
            return e.get("block") !== void 0 ? n = e.get("block") : this.getOption("block") !== void 0 && (n = this.getOption("block")), e.get("action") !== void 0 ? i = e.get("action") : this.getOption("action") !== void 0 && (i = this.getOption("action")), {
                block: n,
                action: i,
                index: e.get("key") !== void 0 ? e.get("key") : t
            }
        }
    });
let sc = {};

function Ju(e, ...t) {
    !sc[e] || sc[e].map(n => n(...t))
}
let Jr, Us;

function zi() {
    return Jr
}

function vo() {
    return Us
}

function g1(e) {
    if (Jr = document.getElementById(e) || e || document.querySelector("canvas"), !Jr) throw Error("You must provide a canvas element for the game");
    return Us = Jr.getContext("2d"), Us.imageSmoothingEnabled = !1, Ju("init"), {
        canvas: Jr,
        context: Us
    }
}
class rl {
    constructor({
        spriteSheet: t,
        frames: n,
        frameRate: i,
        loop: o = !0
    } = {}) {
        this.spriteSheet = t, this.frames = n, this.frameRate = i, this.loop = o;
        let {
            width: f,
            height: v,
            margin: y = 0
        } = t.frame;
        this.width = f, this.height = v, this.margin = y, this._f = 0, this._a = 0
    }
    clone() {
        return yo(this)
    }
    reset() {
        this._f = 0, this._a = 0
    }
    update(t = 1 / 60) {
        if (!(!this.loop && this._f == this.frames.length - 1))
            for (this._a += t; this._a * this.frameRate >= 1;) this._f = ++this._f % this.frames.length, this._a -= 1 / this.frameRate
    }
    render({
        x: t,
        y: n,
        width: i = this.width,
        height: o = this.height,
        context: f = vo()
    } = {}) {
        let v = this.frames[this._f] / this.spriteSheet._f | 0,
            y = this.frames[this._f] % this.spriteSheet._f | 0;
        f.drawImage(this.spriteSheet.image, y * this.width + (y * 2 + 1) * this.margin, v * this.height + (v * 2 + 1) * this.margin, this.width, this.height, t, n, i, o)
    }
}

function yo(e) {
    return new rl(e)
}
yo.prototype = rl.prototype;
yo.class = rl;
const m1 = () => {};

function v1() {
    let e = zi();
    vo().clearRect(0, 0, e.width, e.height)
}

function y1({
    fps: e = 60,
    clearCanvas: t = !0,
    update: n,
    render: i
} = {}) {
    if (!(n && i)) throw Error("You must provide update() and render() functions");
    let o = 0,
        f = 1e3 / e,
        v = 1 / e,
        y = t ? v1 : m1,
        k, A, D, $, tt;
    const st = window.performance || Date;

    function V() {
        if (A = requestAnimationFrame(V), D = st.now(), $ = D - k, k = D, !($ > 1e3)) {
            for (Ju("tick"), o += $; o >= f;) tt.update(v), o -= f;
            y(), tt.render()
        }
    }
    return tt = {
        update: n,
        render: i,
        isStopped: !0,
        start() {
            k = st.now(), this.isStopped = !1, requestAnimationFrame(V)
        },
        stop() {
            this.isStopped = !0, cancelAnimationFrame(A)
        },
        _frame: V,
        set _last(ot) {
            k = ot
        }
    }, tt
}
class w1 {
    constructor({
        create: t,
        maxSize: n = 1024
    } = {}) {
        let i;
        if (!t || !(i = t()) || !(i.update && i.init && i.isAlive)) throw Error("Must provide create() function which returns an object with init(), update(), and isAlive() functions");
        this._c = t, this.objects = [t()], this.size = 0, this.maxSize = n
    }
    get(t = {}) {
        if (this.size === this.objects.length) {
            if (this.size === this.maxSize) return;
            for (let i = 0; i < this.size && this.objects.length < this.maxSize; i++) this.objects.push(this._c())
        }
        let n = this.objects[this.size];
        return this.size++, n.init(t), n
    }
    getAliveObjects() {
        return this.objects.slice(0, this.size)
    }
    clear() {
        this.size = this.objects.length = 0, this.objects.push(this._c())
    }
    update(t) {
        let n, i = !1;
        for (let o = this.size; o--;) n = this.objects[o], n.update(t), n.isAlive() || (i = !0, this.size--);
        i && this.objects.sort((o, f) => f.isAlive() - o.isAlive())
    }
    render() {
        for (let t = this.size; t--;) this.objects[t].render()
    }
}
w1.prototype;

function oc(e, t) {
    let n = [],
        i = t.x + t.width / 2,
        o = t.y + t.height / 2,
        f = e.y < o && e.y + e.height >= t.y,
        v = e.y + e.height >= o && e.y < t.y + t.height;
    return e.x < i && e.x + e.width >= t.x && (f && n.push(0), v && n.push(2)), e.x + e.width >= i && e.x < t.x + t.width && (f && n.push(1), v && n.push(3)), n
}
class sl {
    constructor({
        maxDepth: t = 3,
        maxObjects: n = 25,
        bounds: i
    } = {}) {
        this.maxDepth = t, this.maxObjects = n;
        let o = zi();
        this.bounds = i || {
            x: 0,
            y: 0,
            width: o.width,
            height: o.height
        }, this._b = !1, this._d = 0, this._o = [], this._s = [], this._p = null
    }
    clear() {
        this._s.map(function(t) {
            t.clear()
        }), this._b = !1, this._o.length = 0
    }
    get(t) {
        let n = new Set,
            i, o;
        for (; this._s.length && this._b;) {
            for (i = oc(t, this.bounds), o = 0; o < i.length; o++) this._s[i[o]].get(t).forEach(f => n.add(f));
            return Array.from(n)
        }
        return this._o.filter(f => f !== t)
    }
    add() {
        let t, n, i, o;
        for (n = 0; n < arguments.length; n++) {
            if (i = arguments[n], Array.isArray(i)) {
                this.add.apply(this, i);
                continue
            }
            if (this._b) {
                this._a(i);
                continue
            }
            if (this._o.push(i), this._o.length > this.maxObjects && this._d < this.maxDepth) {
                for (this._sp(), t = 0; o = this._o[t]; t++) this._a(o);
                this._o.length = 0
            }
        }
    }
    _a(t, n, i) {
        for (n = oc(t, this.bounds), i = 0; i < n.length; i++) this._s[n[i]].add(t)
    }
    _sp(t, n, i) {
        if (this._b = !0, !this._s.length)
            for (t = this.bounds.width / 2 | 0, n = this.bounds.height / 2 | 0, i = 0; i < 4; i++) this._s[i] = ol({
                bounds: {
                    x: this.bounds.x + (i % 2 === 1 ? t : 0),
                    y: this.bounds.y + (i >= 2 ? n : 0),
                    width: t,
                    height: n
                },
                maxDepth: this.maxDepth,
                maxObjects: this.maxObjects
            }), this._s[i]._d = this._d + 1, this._s[i]._p = this
    }
}

function ol(e) {
    return new sl(e)
}
ol.prototype = sl.prototype;
ol.class = sl;
class al {
    constructor(t = 0, n = 0) {
        this._x = t, this._y = n
    }
    add(t, n = 1) {
        return mr(this.x + (t.x || 0) * n, this.y + (t.y || 0) * n, this)
    }
    clamp(t, n, i, o) {
        this._c = !0, this._a = t, this._b = n, this._d = i, this._e = o
    }
    get x() {
        return this._x
    }
    get y() {
        return this._y
    }
    set x(t) {
        this._x = this._c ? Math.min(Math.max(this._a, t), this._d) : t
    }
    set y(t) {
        this._y = this._c ? Math.min(Math.max(this._b, t), this._e) : t
    }
}

function mr(e, t, n = {}) {
    let i = new al(e, t);
    return n._c && (i.clamp(n._a, n._b, n._d, n._e), i.x = e, i.y = t), i
}
mr.prototype = al.prototype;
mr.class = al;
class ll {
    constructor(t) {
        this.init(t)
    }
    init(t = {}) {
        let {
            x: n,
            y: i,
            dx: o,
            dy: f,
            ddx: v,
            ddy: y,
            width: k,
            height: A,
            image: D
        } = t;
        this.position = mr(n, i), this.velocity = mr(o, f), this.acceleration = mr(v, y), this._fx = this._fy = 1, this.width = this.height = this.rotation = 0, this.ttl = 1 / 0, this.anchor = {
            x: 0,
            y: 0
        }, this.context = vo();
        for (let $ in t) this[$] = t[$];
        D && (this.width = k !== void 0 ? k : D.width, this.height = A !== void 0 ? A : D.height), this.sx = 0, this.sy = 0
    }
    get x() {
        return this.position.x
    }
    get y() {
        return this.position.y
    }
    get dx() {
        return this.velocity.x
    }
    get dy() {
        return this.velocity.y
    }
    get ddx() {
        return this.acceleration.x
    }
    get ddy() {
        return this.acceleration.y
    }
    get animations() {
        return this._a
    }
    get viewX() {
        return this.x - this.sx
    }
    get viewY() {
        return this.y - this.sy
    }
    get width() {
        return this._w
    }
    get height() {
        return this._h
    }
    set x(t) {
        this.position.x = t
    }
    set y(t) {
        this.position.y = t
    }
    set dx(t) {
        this.velocity.x = t
    }
    set dy(t) {
        this.velocity.y = t
    }
    set ddx(t) {
        this.acceleration.x = t
    }
    set ddy(t) {
        this.acceleration.y = t
    }
    set animations(t) {
        let n, i;
        this._a = {};
        for (n in t) this._a[n] = t[n].clone(), i = i || this._a[n];
        this.currentAnimation = i, this.width = this.width || i.width, this.height = this.height || i.height
    }
    set viewX(t) {}
    set viewY(t) {}
    set width(t) {
        let n = t < 0 ? -1 : 1;
        this._fx = n, this._w = t * n
    }
    set height(t) {
        let n = t < 0 ? -1 : 1;
        this._fy = n, this._h = t * n
    }
    isAlive() {
        return this.ttl > 0
    }
    collidesWith(t) {
        if (this.rotation || t.rotation) return null;
        let n = this.x - this.width * this.anchor.x,
            i = this.y - this.height * this.anchor.y,
            o = t.x,
            f = t.y;
        return t.anchor && (o -= t.width * t.anchor.x, f -= t.height * t.anchor.y), n < o + t.width && n + this.width > o && i < f + t.height && i + this.height > f
    }
    update(t) {
        this.advance(t)
    }
    render() {
        this.draw()
    }
    playAnimation(t) {
        this.currentAnimation = this.animations[t], this.currentAnimation.loop || this.currentAnimation.reset()
    }
    advance(t) {
        this.velocity = this.velocity.add(this.acceleration, t), this.position = this.position.add(this.velocity, t), this.ttl--, this.currentAnimation && this.currentAnimation.update(t)
    }
    draw() {
        let t = -this.width * this.anchor.x,
            n = -this.height * this.anchor.y;
        if (this.context.save(), this.context.translate(this.viewX, this.viewY), this.rotation && this.context.rotate(this.rotation), this._fx == -1 || this._fy == -1) {
            let i = this.width / 2 + t,
                o = this.height / 2 + n;
            this.context.translate(i, o), this.context.scale(this._fx, this._fy), this.context.translate(-i, -o)
        }
        this.image ? this.context.drawImage(this.image, t, n, this.width, this.height) : this.currentAnimation ? this.currentAnimation.render({
            x: t,
            y: n,
            width: this.width,
            height: this.height,
            context: this.context
        }) : (this.context.fillStyle = this.color, this.context.fillRect(t, n, this.width, this.height)), this.context.restore()
    }
}

function cl(e) {
    return new ll(e)
}
cl.prototype = ll.prototype;
cl.class = ll;

function b1(e) {
    if (+e === e) return e;
    let t = [],
        n = e.split(".."),
        i = +n[0],
        o = +n[1],
        f = i;
    if (i < o)
        for (; f <= o; f++) t.push(f);
    else
        for (; f >= o; f--) t.push(f);
    return t
}
class C1 {
    constructor({
        image: t,
        frameWidth: n,
        frameHeight: i,
        frameMargin: o,
        animations: f
    } = {}) {
        if (!t) throw Error("You must provide an Image for the SpriteSheet");
        this.animations = {}, this.image = t, this.frame = {
            width: n,
            height: i,
            margin: o
        }, this._f = t.width / n | 0, this.createAnimations(f)
    }
    createAnimations(t) {
        let n, i;
        for (i in t) {
            let {
                frames: o,
                frameRate: f,
                loop: v
            } = t[i];
            if (n = [], o === void 0) throw Error("Animation " + i + " must provide a frames property");
            [].concat(o).map(y => {
                n = n.concat(b1(y))
            }), this.animations[i] = yo({
                spriteSheet: this,
                frames: n,
                frameRate: f,
                loop: v
            })
        }
    }
}
C1.prototype;
var Qu = {
    exports: {}
};
/*!
 * sweetalert2 v11.4.26
 * Released under the MIT License.
 */
(function(e, t) {
    (function(n, i) {
        e.exports = i()
    })(Re, function() {
        const n = "SweetAlert2:",
            i = c => {
                const h = [];
                for (let C = 0; C < c.length; C++) h.indexOf(c[C]) === -1 && h.push(c[C]);
                return h
            },
            o = c => c.charAt(0).toUpperCase() + c.slice(1),
            f = c => {
                console.warn("".concat(n, " ").concat(typeof c == "object" ? c.join(" ") : c))
            },
            v = c => {
                console.error("".concat(n, " ").concat(c))
            },
            y = [],
            k = c => {
                y.includes(c) || (y.push(c), f(c))
            },
            A = (c, h) => {
                k('"'.concat(c, '" is deprecated and will be removed in the next major release. Please use "').concat(h, '" instead.'))
            },
            D = c => typeof c == "function" ? c() : c,
            $ = c => c && typeof c.toPromise == "function",
            tt = c => $(c) ? c.toPromise() : Promise.resolve(c),
            st = c => c && Promise.resolve(c) === c,
            V = c => c[Math.floor(Math.random() * c.length)],
            ot = {
                title: "",
                titleText: "",
                text: "",
                html: "",
                footer: "",
                icon: void 0,
                iconColor: void 0,
                iconHtml: void 0,
                template: void 0,
                toast: !1,
                showClass: {
                    popup: "swal2-show",
                    backdrop: "swal2-backdrop-show",
                    icon: "swal2-icon-show"
                },
                hideClass: {
                    popup: "swal2-hide",
                    backdrop: "swal2-backdrop-hide",
                    icon: "swal2-icon-hide"
                },
                customClass: {},
                target: "body",
                color: void 0,
                backdrop: !0,
                heightAuto: !0,
                allowOutsideClick: !0,
                allowEscapeKey: !0,
                allowEnterKey: !0,
                stopKeydownPropagation: !0,
                keydownListenerCapture: !1,
                showConfirmButton: !0,
                showDenyButton: !1,
                showCancelButton: !1,
                preConfirm: void 0,
                preDeny: void 0,
                confirmButtonText: "OK",
                confirmButtonAriaLabel: "",
                confirmButtonColor: void 0,
                denyButtonText: "No",
                denyButtonAriaLabel: "",
                denyButtonColor: void 0,
                cancelButtonText: "Cancel",
                cancelButtonAriaLabel: "",
                cancelButtonColor: void 0,
                buttonsStyling: !0,
                reverseButtons: !1,
                focusConfirm: !0,
                focusDeny: !1,
                focusCancel: !1,
                returnFocus: !0,
                showCloseButton: !1,
                closeButtonHtml: "&times;",
                closeButtonAriaLabel: "Close this dialog",
                loaderHtml: "",
                showLoaderOnConfirm: !1,
                showLoaderOnDeny: !1,
                imageUrl: void 0,
                imageWidth: void 0,
                imageHeight: void 0,
                imageAlt: "",
                timer: void 0,
                timerProgressBar: !1,
                width: void 0,
                padding: void 0,
                background: void 0,
                input: void 0,
                inputPlaceholder: "",
                inputLabel: "",
                inputValue: "",
                inputOptions: {},
                inputAutoTrim: !0,
                inputAttributes: {},
                inputValidator: void 0,
                returnInputValueOnDeny: !1,
                validationMessage: void 0,
                grow: !1,
                position: "center",
                progressSteps: [],
                currentProgressStep: void 0,
                progressStepsDistance: void 0,
                willOpen: void 0,
                didOpen: void 0,
                didRender: void 0,
                willClose: void 0,
                didClose: void 0,
                didDestroy: void 0,
                scrollbarPadding: !0
            },
            m = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
            L = {},
            X = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
            ut = c => Object.prototype.hasOwnProperty.call(ot, c),
            ht = c => m.indexOf(c) !== -1,
            bt = c => L[c],
            d = c => {
                ut(c) || f('Unknown parameter "'.concat(c, '"'))
            },
            kt = c => {
                X.includes(c) && f('The parameter "'.concat(c, '" is incompatible with toasts'))
            },
            Vt = c => {
                bt(c) && A(c, bt(c))
            },
            Pt = c => {
                !c.backdrop && c.allowOutsideClick && f('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
                for (const h in c) d(h), c.toast && kt(h), Vt(h)
            },
            Ce = "swal2-",
            Xt = c => {
                const h = {};
                for (const C in c) h[c[C]] = Ce + c[C];
                return h
            },
            et = Xt(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "no-war"]),
            Jt = Xt(["success", "warning", "info", "question", "error"]),
            G = () => document.body.querySelector(".".concat(et.container)),
            pt = c => {
                const h = G();
                return h ? h.querySelector(c) : null
            },
            $t = c => pt(".".concat(c)),
            At = () => $t(et.popup),
            Tt = () => $t(et.icon),
            vt = () => $t(et.title),
            Dt = () => $t(et["html-container"]),
            Nt = () => $t(et.image),
            Kt = () => $t(et["progress-steps"]),
            le = () => $t(et["validation-message"]),
            Ee = () => pt(".".concat(et.actions, " .").concat(et.confirm)),
            Ye = () => pt(".".concat(et.actions, " .").concat(et.deny)),
            nn = () => $t(et["input-label"]),
            E = () => pt(".".concat(et.loader)),
            l = () => pt(".".concat(et.actions, " .").concat(et.cancel)),
            g = () => $t(et.actions),
            S = () => $t(et.footer),
            R = () => $t(et["timer-progress-bar"]),
            P = () => $t(et.close),
            j = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`,
            ct = () => {
                const c = Array.from(At().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((C, z) => {
                        const _t = parseInt(C.getAttribute("tabindex")),
                            te = parseInt(z.getAttribute("tabindex"));
                        return _t > te ? 1 : _t < te ? -1 : 0
                    }),
                    h = Array.from(At().querySelectorAll(j)).filter(C => C.getAttribute("tabindex") !== "-1");
                return i(c.concat(h)).filter(C => Et(C))
            },
            Mt = () => Le(document.body, et.shown) && !Le(document.body, et["toast-shown"]) && !Le(document.body, et["no-backdrop"]),
            yt = () => At() && Le(At(), et.toast),
            Ft = () => At().hasAttribute("data-loading"),
            Ht = {
                previousBodyPadding: null
            },
            fe = (c, h) => {
                if (c.textContent = "", h) {
                    const z = new DOMParser().parseFromString(h, "text/html");
                    Array.from(z.querySelector("head").childNodes).forEach(_t => {
                        c.appendChild(_t)
                    }), Array.from(z.querySelector("body").childNodes).forEach(_t => {
                        c.appendChild(_t)
                    })
                }
            },
            Le = (c, h) => {
                if (!h) return !1;
                const C = h.split(/\s+/);
                for (let z = 0; z < C.length; z++)
                    if (!c.classList.contains(C[z])) return !1;
                return !0
            },
            hn = (c, h) => {
                Array.from(c.classList).forEach(C => {
                    !Object.values(et).includes(C) && !Object.values(Jt).includes(C) && !Object.values(h.showClass).includes(C) && c.classList.remove(C)
                })
            },
            be = (c, h, C) => {
                if (hn(c, h), h.customClass && h.customClass[C]) {
                    if (typeof h.customClass[C] != "string" && !h.customClass[C].forEach) return f("Invalid type of customClass.".concat(C, '! Expected string or iterable object, got "').concat(typeof h.customClass[C], '"'));
                    oe(c, h.customClass[C])
                }
            },
            ke = (c, h) => {
                if (!h) return null;
                switch (h) {
                    case "select":
                    case "textarea":
                    case "file":
                        return c.querySelector(".".concat(et.popup, " > .").concat(et[h]));
                    case "checkbox":
                        return c.querySelector(".".concat(et.popup, " > .").concat(et.checkbox, " input"));
                    case "radio":
                        return c.querySelector(".".concat(et.popup, " > .").concat(et.radio, " input:checked")) || c.querySelector(".".concat(et.popup, " > .").concat(et.radio, " input:first-child"));
                    case "range":
                        return c.querySelector(".".concat(et.popup, " > .").concat(et.range, " input"));
                    default:
                        return c.querySelector(".".concat(et.popup, " > .").concat(et.input))
                }
            },
            Te = c => {
                if (c.focus(), c.type !== "file") {
                    const h = c.value;
                    c.value = "", c.value = h
                }
            },
            sn = (c, h, C) => {
                !c || !h || (typeof h == "string" && (h = h.split(/\s+/).filter(Boolean)), h.forEach(z => {
                    Array.isArray(c) ? c.forEach(_t => {
                        C ? _t.classList.add(z) : _t.classList.remove(z)
                    }) : C ? c.classList.add(z) : c.classList.remove(z)
                }))
            },
            oe = (c, h) => {
                sn(c, h, !0)
            },
            Ue = (c, h) => {
                sn(c, h, !1)
            },
            H = (c, h) => {
                const C = Array.from(c.children);
                for (let z = 0; z < C.length; z++) {
                    const _t = C[z];
                    if (_t instanceof HTMLElement && Le(_t, h)) return _t
                }
            },
            N = (c, h, C) => {
                C === "".concat(parseInt(C)) && (C = parseInt(C)), C || parseInt(C) === 0 ? c.style[h] = typeof C == "number" ? "".concat(C, "px") : C : c.style.removeProperty(h)
            },
            J = function(c) {
                let h = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "flex";
                c.style.display = h
            },
            M = c => {
                c.style.display = "none"
            },
            Y = (c, h, C, z) => {
                const _t = c.querySelector(h);
                _t && (_t.style[C] = z)
            },
            Ct = function(c, h) {
                let C = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "flex";
                h ? J(c, C) : M(c)
            },
            Et = c => !!(c && (c.offsetWidth || c.offsetHeight || c.getClientRects().length)),
            Wt = () => !Et(Ee()) && !Et(Ye()) && !Et(l()),
            Yt = c => c.scrollHeight > c.clientHeight,
            Se = c => {
                const h = window.getComputedStyle(c),
                    C = parseFloat(h.getPropertyValue("animation-duration") || "0"),
                    z = parseFloat(h.getPropertyValue("transition-duration") || "0");
                return C > 0 || z > 0
            },
            Ke = function(c) {
                let h = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
                const C = R();
                Et(C) && (h && (C.style.transition = "none", C.style.width = "100%"), setTimeout(() => {
                    C.style.transition = "width ".concat(c / 1e3, "s linear"), C.style.width = "0%"
                }, 10))
            },
            re = () => {
                const c = R(),
                    h = parseInt(window.getComputedStyle(c).width);
                c.style.removeProperty("transition"), c.style.width = "100%";
                const C = parseInt(window.getComputedStyle(c).width),
                    z = h / C * 100;
                c.style.removeProperty("transition"), c.style.width = "".concat(z, "%")
            },
            Bn = () => typeof window > "u" || typeof document > "u",
            Un = 100,
            B = {},
            F = () => {
                B.previousActiveElement instanceof HTMLElement ? (B.previousActiveElement.focus(), B.previousActiveElement = null) : document.body && document.body.focus()
            },
            Q = c => new Promise(h => {
                if (!c) return h();
                const C = window.scrollX,
                    z = window.scrollY;
                B.restoreFocusTimeout = setTimeout(() => {
                    F(), h()
                }, Un), window.scrollTo(C, z)
            }),
            K = `
 <div aria-labelledby="`.concat(et.title, '" aria-describedby="').concat(et["html-container"], '" class="').concat(et.popup, `" tabindex="-1">
   <button type="button" class="`).concat(et.close, `"></button>
   <ul class="`).concat(et["progress-steps"], `"></ul>
   <div class="`).concat(et.icon, `"></div>
   <img class="`).concat(et.image, `" />
   <h2 class="`).concat(et.title, '" id="').concat(et.title, `"></h2>
   <div class="`).concat(et["html-container"], '" id="').concat(et["html-container"], `"></div>
   <input class="`).concat(et.input, `" />
   <input type="file" class="`).concat(et.file, `" />
   <div class="`).concat(et.range, `">
     <input type="range" />
     <output></output>
   </div>
   <select class="`).concat(et.select, `"></select>
   <div class="`).concat(et.radio, `"></div>
   <label for="`).concat(et.checkbox, '" class="').concat(et.checkbox, `">
     <input type="checkbox" />
     <span class="`).concat(et.label, `"></span>
   </label>
   <textarea class="`).concat(et.textarea, `"></textarea>
   <div class="`).concat(et["validation-message"], '" id="').concat(et["validation-message"], `"></div>
   <div class="`).concat(et.actions, `">
     <div class="`).concat(et.loader, `"></div>
     <button type="button" class="`).concat(et.confirm, `"></button>
     <button type="button" class="`).concat(et.deny, `"></button>
     <button type="button" class="`).concat(et.cancel, `"></button>
   </div>
   <div class="`).concat(et.footer, `"></div>
   <div class="`).concat(et["timer-progress-bar-container"], `">
     <div class="`).concat(et["timer-progress-bar"], `"></div>
   </div>
 </div>
`).replace(/(^|\n)\s*/g, ""),
            dt = () => {
                const c = G();
                return c ? (c.remove(), Ue([document.documentElement, document.body], [et["no-backdrop"], et["toast-shown"], et["has-column"]]), !0) : !1
            },
            nt = () => {
                B.currentInstance.resetValidationMessage()
            },
            mt = () => {
                const c = At(),
                    h = H(c, et.input),
                    C = H(c, et.file),
                    z = c.querySelector(".".concat(et.range, " input")),
                    _t = c.querySelector(".".concat(et.range, " output")),
                    te = H(c, et.select),
                    cn = c.querySelector(".".concat(et.checkbox, " input")),
                    Qn = H(c, et.textarea);
                h.oninput = nt, C.onchange = nt, te.onchange = nt, cn.onchange = nt, Qn.oninput = nt, z.oninput = () => {
                    nt(), _t.value = z.value
                }, z.onchange = () => {
                    nt(), _t.value = z.value
                }
            },
            Rt = c => typeof c == "string" ? document.querySelector(c) : c,
            Bt = c => {
                const h = At();
                h.setAttribute("role", c.toast ? "alert" : "dialog"), h.setAttribute("aria-live", c.toast ? "polite" : "assertive"), c.toast || h.setAttribute("aria-modal", "true")
            },
            Gt = c => {
                window.getComputedStyle(c).direction === "rtl" && oe(G(), et.rtl)
            },
            Ut = c => {
                const h = dt();
                if (Bn()) {
                    v("SweetAlert2 requires document to initialize");
                    return
                }
                const C = document.createElement("div");
                C.className = et.container, h && oe(C, et["no-transition"]), fe(C, K);
                const z = Rt(c.target);
                z.appendChild(C), Bt(c), Gt(z), mt()
            },
            ue = (c, h) => {
                c instanceof HTMLElement ? h.appendChild(c) : typeof c == "object" ? he(c, h) : c && fe(h, c)
            },
            he = (c, h) => {
                c.jquery ? qe(h, c) : fe(h, c.toString())
            },
            qe = (c, h) => {
                if (c.textContent = "", 0 in h)
                    for (let C = 0; C in h; C++) c.appendChild(h[C].cloneNode(!0));
                else c.appendChild(h.cloneNode(!0))
            },
            Me = (() => {
                if (Bn()) return !1;
                const c = document.createElement("div"),
                    h = {
                        WebkitAnimation: "webkitAnimationEnd",
                        animation: "animationend"
                    };
                for (const C in h)
                    if (Object.prototype.hasOwnProperty.call(h, C) && typeof c.style[C] < "u") return h[C];
                return !1
            })(),
            Je = () => {
                const c = document.createElement("div");
                c.className = et["scrollbar-measure"], document.body.appendChild(c);
                const h = c.getBoundingClientRect().width - c.clientWidth;
                return document.body.removeChild(c), h
            },
            Cn = (c, h) => {
                const C = g(),
                    z = E();
                !h.showConfirmButton && !h.showDenyButton && !h.showCancelButton ? M(C) : J(C), be(C, h, "actions"), gn(C, z, h), fe(z, h.loaderHtml), be(z, h, "loader")
            };

        function gn(c, h, C) {
            const z = Ee(),
                _t = Ye(),
                te = l();
            Tn(z, "confirm", C), Tn(_t, "deny", C), Tn(te, "cancel", C), kn(z, _t, te, C), C.reverseButtons && (C.toast ? (c.insertBefore(te, z), c.insertBefore(_t, z)) : (c.insertBefore(te, h), c.insertBefore(_t, h), c.insertBefore(z, h)))
        }

        function kn(c, h, C, z) {
            if (!z.buttonsStyling) return Ue([c, h, C], et.styled);
            oe([c, h, C], et.styled), z.confirmButtonColor && (c.style.backgroundColor = z.confirmButtonColor, oe(c, et["default-outline"])), z.denyButtonColor && (h.style.backgroundColor = z.denyButtonColor, oe(h, et["default-outline"])), z.cancelButtonColor && (C.style.backgroundColor = z.cancelButtonColor, oe(C, et["default-outline"]))
        }

        function Tn(c, h, C) {
            Ct(c, C["show".concat(o(h), "Button")], "inline-block"), fe(c, C["".concat(h, "ButtonText")]), c.setAttribute("aria-label", C["".concat(h, "ButtonAriaLabel")]), c.className = et[h], be(c, C, "".concat(h, "Button")), oe(c, C["".concat(h, "ButtonClass")])
        }
        const ce = (c, h) => {
            const C = G();
            !C || (w(C, h.backdrop), a(C, h.position), x(C, h.grow), be(C, h, "container"))
        };

        function w(c, h) {
            typeof h == "string" ? c.style.background = h : h || oe([document.documentElement, document.body], et["no-backdrop"])
        }

        function a(c, h) {
            h in et ? oe(c, et[h]) : (f('The "position" parameter is not valid, defaulting to "center"'), oe(c, et.center))
        }

        function x(c, h) {
            if (h && typeof h == "string") {
                const C = "grow-".concat(h);
                C in et && oe(c, et[C])
            }
        }
        var O = {
            awaitingPromise: new WeakMap,
            promise: new WeakMap,
            innerParams: new WeakMap,
            domCache: new WeakMap
        };
        const it = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
            It = (c, h) => {
                const C = At(),
                    z = O.innerParams.get(c),
                    _t = !z || h.input !== z.input;
                it.forEach(te => {
                    const cn = H(C, et[te]);
                    dn(te, h.inputAttributes), cn.className = et[te], _t && M(cn)
                }), h.input && (_t && ie(h), ri(h))
            },
            ie = c => {
                if (!on[c.input]) return v('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(c.input, '"'));
                const h = Ar(c.input),
                    C = on[c.input](h, c);
                J(h), setTimeout(() => {
                    Te(C)
                })
            },
            We = c => {
                for (let h = 0; h < c.attributes.length; h++) {
                    const C = c.attributes[h].name;
                    ["type", "value", "style"].includes(C) || c.removeAttribute(C)
                }
            },
            dn = (c, h) => {
                const C = ke(At(), c);
                if (!!C) {
                    We(C);
                    for (const z in h) C.setAttribute(z, h[z])
                }
            },
            ri = c => {
                const h = Ar(c.input);
                typeof c.customClass == "object" && oe(h, c.customClass.input)
            },
            Jn = (c, h) => {
                (!c.placeholder || h.inputPlaceholder) && (c.placeholder = h.inputPlaceholder)
            },
            si = (c, h, C) => {
                if (C.inputLabel) {
                    c.id = et.input;
                    const z = document.createElement("label"),
                        _t = et["input-label"];
                    z.setAttribute("for", c.id), z.className = _t, typeof C.customClass == "object" && oe(z, C.customClass.inputLabel), z.innerText = C.inputLabel, h.insertAdjacentElement("beforebegin", z)
                }
            },
            Ar = c => H(At(), et[c] || et.input),
            fn = (c, h) => {
                ["string", "number"].includes(typeof h) ? c.value = "".concat(h) : st(h) || f('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof h, '"'))
            },
            on = {};
        on.text = on.email = on.password = on.number = on.tel = on.url = (c, h) => (fn(c, h.inputValue), si(c, c, h), Jn(c, h), c.type = h.input, c), on.file = (c, h) => (si(c, c, h), Jn(c, h), c), on.range = (c, h) => {
            const C = c.querySelector("input"),
                z = c.querySelector("output");
            return fn(C, h.inputValue), C.type = h.input, fn(z, h.inputValue), si(C, c, h), c
        }, on.select = (c, h) => {
            if (c.textContent = "", h.inputPlaceholder) {
                const C = document.createElement("option");
                fe(C, h.inputPlaceholder), C.value = "", C.disabled = !0, C.selected = !0, c.appendChild(C)
            }
            return si(c, c, h), c
        }, on.radio = c => (c.textContent = "", c), on.checkbox = (c, h) => {
            const C = ke(At(), "checkbox");
            C.value = "1", C.id = et.checkbox, C.checked = Boolean(h.inputValue);
            const z = c.querySelector("span");
            return fe(z, h.inputPlaceholder), C
        }, on.textarea = (c, h) => {
            fn(c, h.inputValue), Jn(c, h), si(c, c, h);
            const C = z => parseInt(window.getComputedStyle(z).marginLeft) + parseInt(window.getComputedStyle(z).marginRight);
            return setTimeout(() => {
                if ("MutationObserver" in window) {
                    const z = parseInt(window.getComputedStyle(At()).width),
                        _t = () => {
                            const te = c.offsetWidth + C(c);
                            te > z ? At().style.width = "".concat(te, "px") : At().style.width = null
                        };
                    new MutationObserver(_t).observe(c, {
                        attributes: !0,
                        attributeFilter: ["style"]
                    })
                }
            }), c
        };
        const Gi = (c, h) => {
                const C = Dt();
                be(C, h, "htmlContainer"), h.html ? (ue(h.html, C), J(C, "block")) : h.text ? (C.textContent = h.text, J(C, "block")) : M(C), It(c, h)
            },
            bo = (c, h) => {
                const C = S();
                Ct(C, h.footer), h.footer && ue(h.footer, C), be(C, h, "footer")
            },
            Co = (c, h) => {
                const C = P();
                fe(C, h.closeButtonHtml), be(C, h, "closeButton"), Ct(C, h.showCloseButton), C.setAttribute("aria-label", h.closeButtonAriaLabel)
            },
            Or = (c, h) => {
                const C = O.innerParams.get(c),
                    z = Tt();
                if (C && h.icon === C.icon) {
                    ms(z, h), Rr(z, h);
                    return
                }
                if (!h.icon && !h.iconHtml) {
                    M(z);
                    return
                }
                if (h.icon && Object.keys(Jt).indexOf(h.icon) === -1) {
                    v('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(h.icon, '"')), M(z);
                    return
                }
                J(z), ms(z, h), Rr(z, h), oe(z, h.showClass.icon)
            },
            Rr = (c, h) => {
                for (const C in Jt) h.icon !== C && Ue(c, Jt[C]);
                oe(c, Jt[h.icon]), $n(c, h), Xi(), be(c, h, "icon")
            },
            Xi = () => {
                const c = At(),
                    h = window.getComputedStyle(c).getPropertyValue("background-color"),
                    C = c.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
                for (let z = 0; z < C.length; z++) C[z].style.backgroundColor = h
            },
            gs = `
  <div class="swal2-success-circular-line-left"></div>
  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>
  <div class="swal2-success-circular-line-right"></div>
`,
            xo = `
  <span class="swal2-x-mark">
    <span class="swal2-x-mark-line-left"></span>
    <span class="swal2-x-mark-line-right"></span>
  </span>
`,
            ms = (c, h) => {
                let C = c.innerHTML,
                    z;
                h.iconHtml ? z = Ir(h.iconHtml) : h.icon === "success" ? (z = gs, C = C.replace(/ style=".*?"/g, "")) : h.icon === "error" ? z = xo : z = Ir({
                    question: "?",
                    warning: "!",
                    info: "i"
                } [h.icon]), C.trim() !== z.trim() && fe(c, z)
            },
            $n = (c, h) => {
                if (!!h.iconColor) {
                    c.style.color = h.iconColor, c.style.borderColor = h.iconColor;
                    for (const C of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) Y(c, C, "backgroundColor", h.iconColor);
                    Y(c, ".swal2-success-ring", "borderColor", h.iconColor)
                }
            },
            Ir = c => '<div class="'.concat(et["icon-content"], '">').concat(c, "</div>"),
            Ri = (c, h) => {
                const C = Nt();
                if (!h.imageUrl) return M(C);
                J(C, ""), C.setAttribute("src", h.imageUrl), C.setAttribute("alt", h.imageAlt), N(C, "width", h.imageWidth), N(C, "height", h.imageHeight), C.className = et.image, be(C, h, "image")
            },
            Eo = (c, h) => {
                const C = Kt();
                if (!h.progressSteps || h.progressSteps.length === 0) return M(C);
                J(C), C.textContent = "", h.currentProgressStep >= h.progressSteps.length && f("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), h.progressSteps.forEach((z, _t) => {
                    const te = _o(z);
                    if (C.appendChild(te), _t === h.currentProgressStep && oe(te, et["active-progress-step"]), _t !== h.progressSteps.length - 1) {
                        const cn = oi(h);
                        C.appendChild(cn)
                    }
                })
            },
            _o = c => {
                const h = document.createElement("li");
                return oe(h, et["progress-step"]), fe(h, c), h
            },
            oi = c => {
                const h = document.createElement("li");
                return oe(h, et["progress-step-line"]), c.progressStepsDistance && N(h, "width", c.progressStepsDistance), h
            },
            ai = (c, h) => {
                const C = vt();
                Ct(C, h.title || h.titleText, "block"), h.title && ue(h.title, C), h.titleText && (C.innerText = h.titleText), be(C, h, "title")
            },
            Lr = (c, h) => {
                const C = G(),
                    z = At();
                h.toast ? (N(C, "width", h.width), z.style.width = "100%", z.insertBefore(E(), Tt())) : N(z, "width", h.width), N(z, "padding", h.padding), h.color && (z.style.color = h.color), h.background && (z.style.background = h.background), M(le()), So(z, h)
            },
            So = (c, h) => {
                c.className = "".concat(et.popup, " ").concat(Et(c) ? h.showClass.popup : ""), h.toast ? (oe([document.documentElement, document.body], et["toast-shown"]), oe(c, et.toast)) : oe(c, et.modal), be(c, h, "popup"), typeof h.customClass == "string" && oe(c, h.customClass), h.icon && oe(c, et["icon-".concat(h.icon)])
            },
            Dr = (c, h) => {
                Lr(c, h), ce(c, h), Eo(c, h), Or(c, h), Ri(c, h), ai(c, h), Co(c, h), Gi(c, h), Cn(c, h), bo(c, h), typeof h.didRender == "function" && h.didRender(At())
            },
            li = Object.freeze({
                cancel: "cancel",
                backdrop: "backdrop",
                close: "close",
                esc: "esc",
                timer: "timer"
            }),
            Ii = () => {
                Array.from(document.body.children).forEach(h => {
                    h === G() || h.contains(G()) || (h.hasAttribute("aria-hidden") && h.setAttribute("data-previous-aria-hidden", h.getAttribute("aria-hidden")), h.setAttribute("aria-hidden", "true"))
                })
            },
            Mr = () => {
                Array.from(document.body.children).forEach(h => {
                    h.hasAttribute("data-previous-aria-hidden") ? (h.setAttribute("aria-hidden", h.getAttribute("data-previous-aria-hidden")), h.removeAttribute("data-previous-aria-hidden")) : h.removeAttribute("aria-hidden")
                })
            },
            Yi = ["swal-title", "swal-html", "swal-footer"],
            ko = c => {
                const h = typeof c.template == "string" ? document.querySelector(c.template) : c.template;
                if (!h) return {};
                const C = h.content;
                return Io(C), Object.assign(vs(C), To(C), Ao(C), Pr(C), Oo(C), Ro(C, Yi))
            },
            vs = c => {
                const h = {};
                return Array.from(c.querySelectorAll("swal-param")).forEach(z => {
                    ci(z, ["name", "value"]);
                    const _t = z.getAttribute("name"),
                        te = z.getAttribute("value");
                    typeof ot[_t] == "boolean" && te === "false" && (h[_t] = !1), typeof ot[_t] == "object" && (h[_t] = JSON.parse(te))
                }), h
            },
            To = c => {
                const h = {};
                return Array.from(c.querySelectorAll("swal-button")).forEach(z => {
                    ci(z, ["type", "color", "aria-label"]);
                    const _t = z.getAttribute("type");
                    h["".concat(_t, "ButtonText")] = z.innerHTML, h["show".concat(o(_t), "Button")] = !0, z.hasAttribute("color") && (h["".concat(_t, "ButtonColor")] = z.getAttribute("color")), z.hasAttribute("aria-label") && (h["".concat(_t, "ButtonAriaLabel")] = z.getAttribute("aria-label"))
                }), h
            },
            Ao = c => {
                const h = {},
                    C = c.querySelector("swal-image");
                return C && (ci(C, ["src", "width", "height", "alt"]), C.hasAttribute("src") && (h.imageUrl = C.getAttribute("src")), C.hasAttribute("width") && (h.imageWidth = C.getAttribute("width")), C.hasAttribute("height") && (h.imageHeight = C.getAttribute("height")), C.hasAttribute("alt") && (h.imageAlt = C.getAttribute("alt"))), h
            },
            Pr = c => {
                const h = {},
                    C = c.querySelector("swal-icon");
                return C && (ci(C, ["type", "color"]), C.hasAttribute("type") && (h.icon = C.getAttribute("type")), C.hasAttribute("color") && (h.iconColor = C.getAttribute("color")), h.iconHtml = C.innerHTML), h
            },
            Oo = c => {
                const h = {},
                    C = c.querySelector("swal-input");
                C && (ci(C, ["type", "label", "placeholder", "value"]), h.input = C.getAttribute("type") || "text", C.hasAttribute("label") && (h.inputLabel = C.getAttribute("label")), C.hasAttribute("placeholder") && (h.inputPlaceholder = C.getAttribute("placeholder")), C.hasAttribute("value") && (h.inputValue = C.getAttribute("value")));
                const z = Array.from(c.querySelectorAll("swal-input-option"));
                return z.length && (h.inputOptions = {}, z.forEach(_t => {
                    ci(_t, ["value"]);
                    const te = _t.getAttribute("value"),
                        cn = _t.innerHTML;
                    h.inputOptions[te] = cn
                })), h
            },
            Ro = (c, h) => {
                const C = {};
                for (const z in h) {
                    const _t = h[z],
                        te = c.querySelector(_t);
                    te && (ci(te, []), C[_t.replace(/^swal-/, "")] = te.innerHTML.trim())
                }
                return C
            },
            Io = c => {
                const h = Yi.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                Array.from(c.children).forEach(C => {
                    const z = C.tagName.toLowerCase();
                    h.indexOf(z) === -1 && f("Unrecognized element <".concat(z, ">"))
                })
            },
            ci = (c, h) => {
                Array.from(c.attributes).forEach(C => {
                    h.indexOf(C.name) === -1 && f(['Unrecognized attribute "'.concat(C.name, '" on <').concat(c.tagName.toLowerCase(), ">."), "".concat(h.length ? "Allowed attributes are: ".concat(h.join(", ")) : "To set the value, use HTML within the element.")])
                })
            };
        var ys = {
            email: (c, h) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(c) ? Promise.resolve() : Promise.resolve(h || "Invalid email address"),
            url: (c, h) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(c) ? Promise.resolve() : Promise.resolve(h || "Invalid URL")
        };

        function Lo(c) {
            c.inputValidator || Object.keys(ys).forEach(h => {
                c.input === h && (c.inputValidator = ys[h])
            })
        }

        function Do(c) {
            (!c.target || typeof c.target == "string" && !document.querySelector(c.target) || typeof c.target != "string" && !c.target.appendChild) && (f('Target parameter is not valid, defaulting to "body"'), c.target = "body")
        }

        function ws(c) {
            Lo(c), c.showLoaderOnConfirm && !c.preConfirm && f(`showLoaderOnConfirm is set to true, but preConfirm is not defined.
showLoaderOnConfirm should be used together with preConfirm, see usage example:
https://sweetalert2.github.io/#ajax-request`), Do(c), typeof c.title == "string" && (c.title = c.title.split(`
`).join("<br />")), Ut(c)
        }
        class Nr {
            constructor(h, C) {
                this.callback = h, this.remaining = C, this.running = !1, this.start()
            }
            start() {
                return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining
            }
            stop() {
                return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date().getTime() - this.started.getTime()), this.remaining
            }
            increase(h) {
                const C = this.running;
                return C && this.stop(), this.remaining += h, C && this.start(), this.remaining
            }
            getTimerLeft() {
                return this.running && (this.stop(), this.start()), this.remaining
            }
            isRunning() {
                return this.running
            }
        }
        const bs = () => {
                Ht.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight && (Ht.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(Ht.previousBodyPadding + Je(), "px"))
            },
            Br = () => {
                Ht.previousBodyPadding !== null && (document.body.style.paddingRight = "".concat(Ht.previousBodyPadding, "px"), Ht.previousBodyPadding = null)
            },
            Cs = () => {
                if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !Le(document.body, et.iosfix)) {
                    const h = document.body.scrollTop;
                    document.body.style.top = "".concat(h * -1, "px"), oe(document.body, et.iosfix), $r(), xs()
                }
            },
            xs = () => {
                const c = navigator.userAgent,
                    h = !!c.match(/iPad/i) || !!c.match(/iPhone/i),
                    C = !!c.match(/WebKit/i);
                h && C && !c.match(/CriOS/i) && At().scrollHeight > window.innerHeight - 44 && (G().style.paddingBottom = "".concat(44, "px"))
            },
            $r = () => {
                const c = G();
                let h;
                c.ontouchstart = C => {
                    h = Mo(C)
                }, c.ontouchmove = C => {
                    h && (C.preventDefault(), C.stopPropagation())
                }
            },
            Mo = c => {
                const h = c.target,
                    C = G();
                return Po(c) || No(c) ? !1 : h === C || !Yt(C) && h.tagName !== "INPUT" && h.tagName !== "TEXTAREA" && !(Yt(Dt()) && Dt().contains(h))
            },
            Po = c => c.touches && c.touches.length && c.touches[0].touchType === "stylus",
            No = c => c.touches && c.touches.length > 1,
            Li = () => {
                if (Le(document.body, et.iosfix)) {
                    const c = parseInt(document.body.style.top, 10);
                    Ue(document.body, et.iosfix), document.body.style.top = "", document.body.scrollTop = c * -1
                }
            },
            Vr = 10,
            jr = c => {
                const h = G(),
                    C = At();
                typeof c.willOpen == "function" && c.willOpen(C);
                const _t = window.getComputedStyle(document.body).overflowY;
                r(h, C, c), setTimeout(() => {
                    Bo(h, C)
                }, Vr), Mt() && ($o(h, c.scrollbarPadding, _t), Ii()), !yt() && !B.previousActiveElement && (B.previousActiveElement = document.activeElement), typeof c.didOpen == "function" && setTimeout(() => c.didOpen(C)), Ue(h, et["no-transition"])
            },
            Es = c => {
                const h = At();
                if (c.target !== h) return;
                const C = G();
                h.removeEventListener(Me, Es), C.style.overflowY = "auto"
            },
            Bo = (c, h) => {
                Me && Se(h) ? (c.style.overflowY = "hidden", h.addEventListener(Me, Es)) : c.style.overflowY = "auto"
            },
            $o = (c, h, C) => {
                Cs(), h && C !== "hidden" && bs(), setTimeout(() => {
                    c.scrollTop = 0
                })
            },
            r = (c, h, C) => {
                oe(c, C.showClass.backdrop), h.style.setProperty("opacity", "0", "important"), J(h, "grid"), setTimeout(() => {
                    oe(h, C.showClass.popup), h.style.removeProperty("opacity")
                }, Vr), oe([document.documentElement, document.body], et.shown), C.heightAuto && C.backdrop && !C.toast && oe([document.documentElement, document.body], et["height-auto"])
            },
            s = c => {
                let h = At();
                h || new ze, h = At();
                const C = E();
                yt() ? M(Tt()) : u(h, c), J(C), h.setAttribute("data-loading", "true"), h.setAttribute("aria-busy", "true"), h.focus()
            },
            u = (c, h) => {
                const C = g(),
                    z = E();
                !h && Et(Ee()) && (h = Ee()), J(C), h && (M(h), z.setAttribute("data-button-to-replace", h.className)), z.parentNode.insertBefore(z, h), oe([c, C], et.loading)
            },
            p = (c, h) => {
                h.input === "select" || h.input === "radio" ? W(c, h) : ["text", "email", "number", "tel", "textarea"].includes(h.input) && ($(h.inputValue) || st(h.inputValue)) && (s(Ee()), rt(c, h))
            },
            b = (c, h) => {
                const C = c.getInput();
                if (!C) return null;
                switch (h.input) {
                    case "checkbox":
                        return _(C);
                    case "radio":
                        return T(C);
                    case "file":
                        return q(C);
                    default:
                        return h.inputAutoTrim ? C.value.trim() : C.value
                }
            },
            _ = c => c.checked ? 1 : 0,
            T = c => c.checked ? c.value : null,
            q = c => c.files.length ? c.getAttribute("multiple") !== null ? c.files : c.files[0] : null,
            W = (c, h) => {
                const C = At(),
                    z = _t => gt[h.input](C, Ot(_t), h);
                $(h.inputOptions) || st(h.inputOptions) ? (s(Ee()), tt(h.inputOptions).then(_t => {
                    c.hideLoading(), z(_t)
                })) : typeof h.inputOptions == "object" ? z(h.inputOptions) : v("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof h.inputOptions))
            },
            rt = (c, h) => {
                const C = c.getInput();
                M(C), tt(h.inputValue).then(z => {
                    C.value = h.input === "number" ? parseFloat(z) || 0 : "".concat(z), J(C), C.focus(), c.hideLoading()
                }).catch(z => {
                    v("Error in inputValue promise: ".concat(z)), C.value = "", J(C), C.focus(), c.hideLoading()
                })
            },
            gt = {
                select: (c, h, C) => {
                    const z = H(c, et.select),
                        _t = (te, cn, Qn) => {
                            const Ln = document.createElement("option");
                            Ln.value = Qn, fe(Ln, cn), Ln.selected = ft(Qn, C.inputValue), te.appendChild(Ln)
                        };
                    h.forEach(te => {
                        const cn = te[0],
                            Qn = te[1];
                        if (Array.isArray(Qn)) {
                            const Ln = document.createElement("optgroup");
                            Ln.label = cn, Ln.disabled = !1, z.appendChild(Ln), Qn.forEach(sr => _t(Ln, sr[1], sr[0]))
                        } else _t(z, Qn, cn)
                    }), z.focus()
                },
                radio: (c, h, C) => {
                    const z = H(c, et.radio);
                    h.forEach(te => {
                        const cn = te[0],
                            Qn = te[1],
                            Ln = document.createElement("input"),
                            sr = document.createElement("label");
                        Ln.type = "radio", Ln.name = et.radio, Ln.value = cn, ft(cn, C.inputValue) && (Ln.checked = !0);
                        const Ko = document.createElement("span");
                        fe(Ko, Qn), Ko.className = et.label, sr.appendChild(Ln), sr.appendChild(Ko), z.appendChild(sr)
                    });
                    const _t = z.querySelectorAll("input");
                    _t.length && _t[0].focus()
                }
            },
            Ot = c => {
                const h = [];
                return typeof Map < "u" && c instanceof Map ? c.forEach((C, z) => {
                    let _t = C;
                    typeof _t == "object" && (_t = Ot(_t)), h.push([z, _t])
                }) : Object.keys(c).forEach(C => {
                    let z = c[C];
                    typeof z == "object" && (z = Ot(z)), h.push([C, z])
                }), h
            },
            ft = (c, h) => h && h.toString() === c.toString();

        function wt() {
            const c = O.innerParams.get(this);
            if (!c) return;
            const h = O.domCache.get(this);
            M(h.loader), yt() ? c.icon && J(Tt()) : ne(h), Ue([h.popup, h.actions], et.loading), h.popup.removeAttribute("aria-busy"), h.popup.removeAttribute("data-loading"), h.confirmButton.disabled = !1, h.denyButton.disabled = !1, h.cancelButton.disabled = !1
        }
        const ne = c => {
            const h = c.popup.getElementsByClassName(c.loader.getAttribute("data-button-to-replace"));
            h.length ? J(h[0], "inline-block") : Wt() && M(c.actions)
        };

        function ye(c) {
            const h = O.innerParams.get(c || this),
                C = O.domCache.get(c || this);
            return C ? ke(C.popup, h.input) : null
        }
        var Qt = {
            swalPromiseResolve: new WeakMap,
            swalPromiseReject: new WeakMap
        };
        const an = () => Et(At()),
            tn = () => Ee() && Ee().click(),
            An = () => Ye() && Ye().click(),
            Be = () => l() && l().click(),
            pe = c => {
                c.keydownTarget && c.keydownHandlerAdded && (c.keydownTarget.removeEventListener("keydown", c.keydownHandler, {
                    capture: c.keydownListenerCapture
                }), c.keydownHandlerAdded = !1)
            },
            xn = (c, h, C, z) => {
                pe(h), C.toast || (h.keydownHandler = _t => Ki(c, _t, z), h.keydownTarget = C.keydownListenerCapture ? window : At(), h.keydownListenerCapture = C.keydownListenerCapture, h.keydownTarget.addEventListener("keydown", h.keydownHandler, {
                    capture: h.keydownListenerCapture
                }), h.keydownHandlerAdded = !0)
            },
            Ae = (c, h, C) => {
                const z = ct();
                if (z.length) return h = h + C, h === z.length ? h = 0 : h === -1 && (h = z.length - 1), z[h].focus();
                At().focus()
            },
            Ge = ["ArrowRight", "ArrowDown"],
            Di = ["ArrowLeft", "ArrowUp"],
            Ki = (c, h, C) => {
                const z = O.innerParams.get(c);
                !z || h.isComposing || h.keyCode === 229 || (z.stopKeydownPropagation && h.stopPropagation(), h.key === "Enter" ? On(c, h, z) : h.key === "Tab" ? ui(h, z) : [...Ge, ...Di].includes(h.key) ? hi(h.key) : h.key === "Escape" && En(h, z, C))
            },
            On = (c, h, C) => {
                if (!!D(C.allowEnterKey) && h.target && c.getInput() && h.target instanceof HTMLElement && h.target.outerHTML === c.getInput().outerHTML) {
                    if (["textarea", "file"].includes(C.input)) return;
                    tn(), h.preventDefault()
                }
            },
            ui = (c, h) => {
                const C = c.target,
                    z = ct();
                let _t = -1;
                for (let te = 0; te < z.length; te++)
                    if (C === z[te]) {
                        _t = te;
                        break
                    } c.shiftKey ? Ae(h, _t, -1) : Ae(h, _t, 1), c.stopPropagation(), c.preventDefault()
            },
            hi = c => {
                const h = Ee(),
                    C = Ye(),
                    z = l();
                if (document.activeElement instanceof HTMLElement && ![h, C, z].includes(document.activeElement)) return;
                const _t = Ge.includes(c) ? "nextElementSibling" : "previousElementSibling";
                let te = document.activeElement;
                for (let cn = 0; cn < g().children.length; cn++) {
                    if (te = te[_t], !te) return;
                    if (te instanceof HTMLButtonElement && Et(te)) break
                }
                te instanceof HTMLButtonElement && te.focus()
            },
            En = (c, h, C) => {
                D(h.allowEscapeKey) && (c.preventDefault(), C(li.esc))
            };

        function Yn(c, h, C, z) {
            yt() ? ks(c, z) : (Q(C).then(() => ks(c, z)), pe(B)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (h.setAttribute("style", "display:none !important"), h.removeAttribute("class"), h.innerHTML = "") : h.remove(), Mt() && (Br(), Li(), Mr()), Mn()
        }

        function Mn() {
            Ue([document.documentElement, document.body], [et.shown, et["height-auto"], et["no-backdrop"], et["toast-shown"]])
        }

        function Vn(c) {
            c = fi(c);
            const h = Qt.swalPromiseResolve.get(this),
                C = di(this);
            this.isAwaitingPromise() ? c.isDismissed || (Oe(this), h(c)) : C && h(c)
        }

        function _s() {
            return !!O.awaitingPromise.get(this)
        }
        const di = c => {
            const h = At();
            if (!h) return !1;
            const C = O.innerParams.get(c);
            if (!C || Le(h, C.hideClass.popup)) return !1;
            Ue(h, C.showClass.popup), oe(h, C.hideClass.popup);
            const z = G();
            return Ue(z, C.showClass.backdrop), oe(z, C.hideClass.backdrop), Ss(c, h, C), !0
        };

        function Fr(c) {
            const h = Qt.swalPromiseReject.get(this);
            Oe(this), h && h(c)
        }
        const Oe = c => {
                c.isAwaitingPromise() && (O.awaitingPromise.delete(c), O.innerParams.get(c) || c._destroy())
            },
            fi = c => typeof c > "u" ? {
                isConfirmed: !1,
                isDenied: !1,
                isDismissed: !0
            } : Object.assign({
                isConfirmed: !1,
                isDenied: !1,
                isDismissed: !1
            }, c),
            Ss = (c, h, C) => {
                const z = G(),
                    _t = Me && Se(h);
                typeof C.willClose == "function" && C.willClose(h), _t ? zr(c, h, z, C.returnFocus, C.didClose) : Yn(c, z, C.returnFocus, C.didClose)
            },
            zr = (c, h, C, z, _t) => {
                B.swalCloseEventFinishedCallback = Yn.bind(null, c, C, z, _t), h.addEventListener(Me, function(te) {
                    te.target === h && (B.swalCloseEventFinishedCallback(), delete B.swalCloseEventFinishedCallback)
                })
            },
            ks = (c, h) => {
                setTimeout(() => {
                    typeof h == "function" && h.bind(c.params)(), c._destroy()
                })
            };

        function Mi(c, h, C) {
            const z = O.domCache.get(c);
            h.forEach(_t => {
                z[_t].disabled = C
            })
        }

        function Ts(c, h) {
            if (!c) return !1;
            if (c.type === "radio") {
                const z = c.parentNode.parentNode.querySelectorAll("input");
                for (let _t = 0; _t < z.length; _t++) z[_t].disabled = h
            } else c.disabled = h
        }

        function As() {
            Mi(this, ["confirmButton", "denyButton", "cancelButton"], !1)
        }

        function Vo() {
            Mi(this, ["confirmButton", "denyButton", "cancelButton"], !0)
        }

        function jo() {
            return Ts(this.getInput(), !1)
        }

        function Fo() {
            return Ts(this.getInput(), !0)
        }

        function Ji(c) {
            const h = O.domCache.get(this),
                C = O.innerParams.get(this);
            fe(h.validationMessage, c), h.validationMessage.className = et["validation-message"], C.customClass && C.customClass.validationMessage && oe(h.validationMessage, C.customClass.validationMessage), J(h.validationMessage);
            const z = this.getInput();
            z && (z.setAttribute("aria-invalid", !0), z.setAttribute("aria-describedby", et["validation-message"]), Te(z), oe(z, et.inputerror))
        }

        function zo() {
            const c = O.domCache.get(this);
            c.validationMessage && M(c.validationMessage);
            const h = this.getInput();
            h && (h.removeAttribute("aria-invalid"), h.removeAttribute("aria-describedby"), Ue(h, et.inputerror))
        }

        function Ho() {
            return O.domCache.get(this).progressSteps
        }

        function Uo(c) {
            const h = At(),
                C = O.innerParams.get(this);
            if (!h || Le(h, C.hideClass.popup)) return f("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
            const z = Pi(c),
                _t = Object.assign({}, C, z);
            Dr(this, _t), O.innerParams.set(this, _t), Object.defineProperties(this, {
                params: {
                    value: Object.assign({}, this.params, c),
                    writable: !1,
                    enumerable: !0
                }
            })
        }
        const Pi = c => {
            const h = {};
            return Object.keys(c).forEach(C => {
                ht(C) ? h[C] = c[C] : f("Invalid parameter to update: ".concat(C))
            }), h
        };

        function qo() {
            const c = O.domCache.get(this),
                h = O.innerParams.get(this);
            if (!h) {
                qn(this);
                return
            }
            c.popup && B.swalCloseEventFinishedCallback && (B.swalCloseEventFinishedCallback(), delete B.swalCloseEventFinishedCallback), typeof h.didDestroy == "function" && h.didDestroy(), Hr(this)
        }
        const Hr = c => {
                qn(c), delete c.params, delete B.keydownHandler, delete B.keydownTarget, delete B.currentInstance
            },
            qn = c => {
                c.isAwaitingPromise() ? (jn(O, c), O.awaitingPromise.set(c, !0)) : (jn(Qt, c), jn(O, c))
            },
            jn = (c, h) => {
                for (const C in c) c[C].delete(h)
            };
        var Ur = Object.freeze({
            hideLoading: wt,
            disableLoading: wt,
            getInput: ye,
            close: Vn,
            isAwaitingPromise: _s,
            rejectPromise: Fr,
            handleAwaitingPromise: Oe,
            closePopup: Vn,
            closeModal: Vn,
            closeToast: Vn,
            enableButtons: As,
            disableButtons: Vo,
            enableInput: jo,
            disableInput: Fo,
            showValidationMessage: Ji,
            resetValidationMessage: zo,
            getProgressSteps: Ho,
            update: Uo,
            _destroy: qo
        });
        const Os = c => {
                const h = O.innerParams.get(c);
                c.disableButtons(), h.input ? $e(c, "confirm") : tr(c, !0)
            },
            Rs = c => {
                const h = O.innerParams.get(c);
                c.disableButtons(), h.returnInputValueOnDeny ? $e(c, "deny") : Rn(c, !1)
            },
            Wo = (c, h) => {
                c.disableButtons(), h(li.cancel)
            },
            $e = (c, h) => {
                const C = O.innerParams.get(c);
                if (!C.input) {
                    v('The "input" parameter is needed to be set when using returnInputValueOn'.concat(o(h)));
                    return
                }
                const z = b(c, C);
                C.inputValidator ? Qi(c, z, h) : c.getInput().checkValidity() ? h === "deny" ? Rn(c, z) : tr(c, z) : (c.enableButtons(), c.showValidationMessage(C.validationMessage))
            },
            Qi = (c, h, C) => {
                const z = O.innerParams.get(c);
                c.disableInput(), Promise.resolve().then(() => tt(z.inputValidator(h, z.validationMessage))).then(te => {
                    c.enableButtons(), c.enableInput(), te ? c.showValidationMessage(te) : C === "deny" ? Rn(c, h) : tr(c, h)
                })
            },
            Rn = (c, h) => {
                const C = O.innerParams.get(c || void 0);
                C.showLoaderOnDeny && s(Ye()), C.preDeny ? (O.awaitingPromise.set(c || void 0, !0), Promise.resolve().then(() => tt(C.preDeny(h, C.validationMessage))).then(_t => {
                    _t === !1 ? (c.hideLoading(), Oe(c)) : c.close({
                        isDenied: !0,
                        value: typeof _t > "u" ? h : _t
                    })
                }).catch(_t => Zi(c || void 0, _t))) : c.close({
                    isDenied: !0,
                    value: h
                })
            },
            Pn = (c, h) => {
                c.close({
                    isConfirmed: !0,
                    value: h
                })
            },
            Zi = (c, h) => {
                c.rejectPromise(h)
            },
            tr = (c, h) => {
                const C = O.innerParams.get(c || void 0);
                C.showLoaderOnConfirm && s(), C.preConfirm ? (c.resetValidationMessage(), O.awaitingPromise.set(c || void 0, !0), Promise.resolve().then(() => tt(C.preConfirm(h, C.validationMessage))).then(_t => {
                    Et(le()) || _t === !1 ? (c.hideLoading(), Oe(c)) : Pn(c, typeof _t > "u" ? h : _t)
                }).catch(_t => Zi(c || void 0, _t))) : Pn(c, h)
            },
            Go = (c, h, C) => {
                O.innerParams.get(c).toast ? Xo(c, h, C) : (qr(h), Ls(h), er(c, h, C))
            },
            Xo = (c, h, C) => {
                h.popup.onclick = () => {
                    const z = O.innerParams.get(c);
                    z && (Is(z) || z.timer || z.input) || C(li.close)
                }
            },
            Is = c => c.showConfirmButton || c.showDenyButton || c.showCancelButton || c.showCloseButton;
        let Wn = !1;
        const qr = c => {
                c.popup.onmousedown = () => {
                    c.container.onmouseup = function(h) {
                        c.container.onmouseup = void 0, h.target === c.container && (Wn = !0)
                    }
                }
            },
            Ls = c => {
                c.container.onmousedown = () => {
                    c.popup.onmouseup = function(h) {
                        c.popup.onmouseup = void 0, (h.target === c.popup || c.popup.contains(h.target)) && (Wn = !0)
                    }
                }
            },
            er = (c, h, C) => {
                h.container.onclick = z => {
                    const _t = O.innerParams.get(c);
                    if (Wn) {
                        Wn = !1;
                        return
                    }
                    z.target === h.container && D(_t.allowOutsideClick) && C(li.backdrop)
                }
            },
            nr = c => typeof c == "object" && c.jquery,
            ir = c => c instanceof Element || nr(c),
            Yo = c => {
                const h = {};
                return typeof c[0] == "object" && !ir(c[0]) ? Object.assign(h, c[0]) : ["title", "html", "icon"].forEach((C, z) => {
                    const _t = c[z];
                    typeof _t == "string" || ir(_t) ? h[C] = _t : _t !== void 0 && v("Unexpected type of ".concat(C, '! Expected "string" or "Element", got ').concat(typeof _t))
                }), h
            };

        function rr() {
            const c = this;
            for (var h = arguments.length, C = new Array(h), z = 0; z < h; z++) C[z] = arguments[z];
            return new c(...C)
        }

        function Wr(c) {
            class h extends this {
                _main(z, _t) {
                    return super._main(z, Object.assign({}, c, _t))
                }
            }
            return h
        }
        const Gr = () => B.timeout && B.timeout.getTimerLeft(),
            Ds = () => {
                if (B.timeout) return re(), B.timeout.stop()
            },
            I = () => {
                if (B.timeout) {
                    const c = B.timeout.start();
                    return Ke(c), c
                }
            },
            U = () => {
                const c = B.timeout;
                return c && (c.running ? Ds() : I())
            },
            Z = c => {
                if (B.timeout) {
                    const h = B.timeout.increase(c);
                    return Ke(h, !0), h
                }
            },
            xt = () => B.timeout && B.timeout.isRunning();
        let at = !1;
        const St = {};

        function Lt() {
            let c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "data-swal-template";
            St[c] = this, at || (document.body.addEventListener("click", jt), at = !0)
        }
        const jt = c => {
            for (let h = c.target; h && h !== document; h = h.parentNode)
                for (const C in St) {
                    const z = h.getAttribute(C);
                    if (z) {
                        St[C].fire({
                            template: z
                        });
                        return
                    }
                }
        };
        var qt = Object.freeze({
            isValidParameter: ut,
            isUpdatableParameter: ht,
            isDeprecatedParameter: bt,
            argsToParams: Yo,
            isVisible: an,
            clickConfirm: tn,
            clickDeny: An,
            clickCancel: Be,
            getContainer: G,
            getPopup: At,
            getTitle: vt,
            getHtmlContainer: Dt,
            getImage: Nt,
            getIcon: Tt,
            getInputLabel: nn,
            getCloseButton: P,
            getActions: g,
            getConfirmButton: Ee,
            getDenyButton: Ye,
            getCancelButton: l,
            getLoader: E,
            getFooter: S,
            getTimerProgressBar: R,
            getFocusableElements: ct,
            getValidationMessage: le,
            isLoading: Ft,
            fire: rr,
            mixin: Wr,
            showLoading: s,
            enableLoading: s,
            getTimerLeft: Gr,
            stopTimer: Ds,
            resumeTimer: I,
            toggleTimer: U,
            increaseTimer: Z,
            isTimerRunning: xt,
            bindClickHandler: Lt
        });
        let Zt;
        class ee {
            constructor() {
                if (typeof window > "u") return;
                Zt = this;
                for (var h = arguments.length, C = new Array(h), z = 0; z < h; z++) C[z] = arguments[z];
                const _t = Object.freeze(this.constructor.argsToParams(C));
                Object.defineProperties(this, {
                    params: {
                        value: _t,
                        writable: !1,
                        enumerable: !0,
                        configurable: !0
                    }
                });
                const te = Zt._main(Zt.params);
                O.promise.set(this, te)
            }
            _main(h) {
                let C = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                Pt(Object.assign({}, C, h)), B.currentInstance && (B.currentInstance._destroy(), Mt() && Mr()), B.currentInstance = Zt;
                const z = _e(h, C);
                ws(z), Object.freeze(z), B.timeout && (B.timeout.stop(), delete B.timeout), clearTimeout(B.restoreFocusTimeout);
                const _t = Fe(Zt);
                return Dr(Zt, z), O.innerParams.set(Zt, z), ae(Zt, _t, z)
            }
            then(h) {
                return O.promise.get(this).then(h)
            } finally(h) {
                return O.promise.get(this).finally(h)
            }
        }
        const ae = (c, h, C) => new Promise((z, _t) => {
                const te = cn => {
                    c.closePopup({
                        isDismissed: !0,
                        dismiss: cn
                    })
                };
                Qt.swalPromiseResolve.set(c, z), Qt.swalPromiseReject.set(c, _t), h.confirmButton.onclick = () => Os(c), h.denyButton.onclick = () => Rs(c), h.cancelButton.onclick = () => Wo(c, te), h.closeButton.onclick = () => te(li.close), Go(c, h, te), xn(c, B, C, te), p(c, C), jr(C), se(B, C, te), ln(h, C), setTimeout(() => {
                    h.container.scrollTop = 0
                })
            }),
            _e = (c, h) => {
                const C = ko(c),
                    z = Object.assign({}, ot, h, C, c);
                return z.showClass = Object.assign({}, ot.showClass, z.showClass), z.hideClass = Object.assign({}, ot.hideClass, z.hideClass), z
            },
            Fe = c => {
                const h = {
                    popup: At(),
                    container: G(),
                    actions: g(),
                    confirmButton: Ee(),
                    denyButton: Ye(),
                    cancelButton: l(),
                    loader: E(),
                    closeButton: P(),
                    validationMessage: le(),
                    progressSteps: Kt()
                };
                return O.domCache.set(c, h), h
            },
            se = (c, h, C) => {
                const z = R();
                M(z), h.timer && (c.timeout = new Nr(() => {
                    C("timer"), delete c.timeout
                }, h.timer), h.timerProgressBar && (J(z), be(z, h, "timerProgressBar"), setTimeout(() => {
                    c.timeout && c.timeout.running && Ke(h.timer)
                })))
            },
            ln = (c, h) => {
                if (!h.toast) {
                    if (!D(h.allowEnterKey)) return In();
                    mn(c, h) || Ae(h, -1, 1)
                }
            },
            mn = (c, h) => h.focusDeny && Et(c.denyButton) ? (c.denyButton.focus(), !0) : h.focusCancel && Et(c.cancelButton) ? (c.cancelButton.focus(), !0) : h.focusConfirm && Et(c.confirmButton) ? (c.confirmButton.focus(), !0) : !1,
            In = () => {
                document.activeElement instanceof HTMLElement && typeof document.activeElement.blur == "function" && document.activeElement.blur()
            };
        if (typeof window < "u" && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|xn--p1ai)$/) && Math.random() < .1) {
            const c = document.createElement("div");
            c.className = "leave-russia-now-and-apply-your-skills-to-the-world";
            const h = V([{
                text: `\u0412 \u043D\u0438\u0436\u0435\u043F\u0440\u0438\u0432\u0435\u0434\u0451\u043D\u043D\u043E\u043C \u0432\u0438\u0434\u0435\u043E \u043E\u0431\u044A\u044F\u0441\u043D\u044F\u0435\u0442\u0441\u044F \u043A\u0430\u043A \u043A\u0430\u0436\u0434\u044B\u0439 \u0438\u0437 \u043D\u0430\u0441 \u043C\u043E\u0436\u0435\u0442 \u043F\u043E\u043C\u043E\u0447\u044C \u0432 \u0442\u043E\u043C,
        <strong>\u0447\u0442\u043E\u0431\u044B \u044D\u0442\u0430 \u0431\u0435\u0441\u0441\u043C\u044B\u0441\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0431\u0435\u0441\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u043D\u0430\u044F \u0432\u043E\u0439\u043D\u0430 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430\u0441\u044C</strong>:`,
                id: "4CfDhaRkw7I"
            }, {
                text: "\u042D\u043C\u043F\u0430\u0442\u0438\u044F - \u0433\u043B\u0430\u0432\u043D\u043E\u0435 <strong>\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u0435\u0441\u043A\u043E\u0435</strong> \u0447\u0443\u0432\u0441\u0442\u0432\u043E. \u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u0441\u043E\u043F\u0435\u0440\u0435\u0436\u0438\u0432\u0430\u0442\u044C. <strong>\u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0441\u0435\u0431\u044F \u043D\u0430 \u043C\u0435\u0441\u0442\u043E \u0434\u0440\u0443\u0433\u043E\u0433\u043E.</strong>",
                id: "s-GLAIY4DXA"
            }]);
            fe(c, `
      <div>
        \u0415\u0441\u043B\u0438 \u043C\u044B \u043D\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043C \u0432\u043E\u0439\u043D\u0443, \u043E\u043D\u0430 \u043F\u0440\u0438\u0434\u0435\u0442 \u0432 \u0434\u043E\u043C <strong>\u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0438\u0437 \u043D\u0430\u0441</strong> \u0438 \u0435\u0451 \u043F\u043E\u0441\u043B\u0435\u0434\u0441\u0442\u0432\u0438\u044F \u0431\u0443\u0434\u0443\u0442 <strong>\u0443\u0436\u0430\u0441\u0430\u044E\u0449\u0438\u043C\u0438</strong>.
      </div>
      <div>
        \u041F\u0443\u0442\u0438\u043D\u0441\u043A\u0438\u0439 \u0440\u0435\u0436\u0438\u043C \u0437\u0430 20 \u0441 \u043B\u0438\u0448\u043D\u0438\u043C \u043B\u0435\u0442 \u0441\u0432\u043E\u0435\u0433\u043E \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043E\u0432\u0430\u043D\u0438\u044F \u0432\u0434\u043E\u043B\u0431\u0438\u043B \u043D\u0430\u043C, \u0447\u0442\u043E \u043C\u044B \u0431\u0435\u0441\u0441\u0438\u043B\u044C\u043D\u044B \u0438 \u043E\u0434\u0438\u043D \u0447\u0435\u043B\u043E\u0432\u0435\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u043D\u0438\u0447\u0435\u0433\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C. <strong>\u042D\u0442\u043E \u043D\u0435 \u0442\u0430\u043A!</strong>
      </div>
      <div>
        `.concat(h.text, `
      </div>
      <iframe width="560" height="315" src="https://www.youtube.com/embed/`).concat(h.id, `" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
      <div>
        \u041D\u0435\u0442 \u0432\u043E\u0439\u043D\u0435!
      </div>
      `));
            const C = document.createElement("button");
            C.innerHTML = "&times;", C.onclick = () => c.remove(), c.appendChild(C), window.addEventListener("load", () => {
                setTimeout(() => {
                    document.body.appendChild(c)
                }, 1e3)
            })
        }
        Object.assign(ee.prototype, Ur), Object.assign(ee, qt), Object.keys(Ur).forEach(c => {
            ee[c] = function() {
                if (Zt) return Zt[c](...arguments)
            }
        }), ee.DismissReason = li, ee.version = "11.4.26";
        const ze = ee;
        return ze.default = ze, ze
    }), typeof Re < "u" && Re.Sweetalert2 && (Re.swal = Re.sweetAlert = Re.Swal = Re.SweetAlert = Re.Sweetalert2), typeof document < "u" && function(n, i) {
        var o = n.createElement("style");
        if (n.getElementsByTagName("head")[0].appendChild(o), o.styleSheet) o.styleSheet.disabled || (o.styleSheet.cssText = i);
        else try {
            o.innerHTML = i
        } catch {
            o.innerText = i
        }
    }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.leave-russia-now-and-apply-your-skills-to-the-world{display:flex;position:fixed;z-index:1939;top:0;right:0;bottom:0;left:0;flex-direction:column;align-items:center;justify-content:center;padding:25px 0 20px;background:#20232a;color:#fff;text-align:center}.leave-russia-now-and-apply-your-skills-to-the-world div{max-width:560px;margin:10px;line-height:146%}.leave-russia-now-and-apply-your-skills-to-the-world iframe{max-width:100%;max-height:55.5555555556vmin;margin:16px auto}.leave-russia-now-and-apply-your-skills-to-the-world strong{border-bottom:2px dashed #fff}.leave-russia-now-and-apply-your-skills-to-the-world button{display:flex;position:fixed;z-index:1940;top:0;right:0;align-items:center;justify-content:center;width:48px;height:48px;margin-right:10px;margin-bottom:-10px;border:none;background:0 0;color:#aaa;font-size:48px;font-weight:700;cursor:pointer}.leave-russia-now-and-apply-your-skills-to-the-world button:hover{color:#fff}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}')
})(Qu);
const Xn = Qu.exports;
class Ve {
    static get DismissReason() {
        return Xn.DismissReason
    }
    static show(t, n = {}) {
        switch (Xn.isVisible() && Xn.close(), t instanceof Error && (n.text = t.message, t = "error"), t) {
            case "alert":
                return this.showAlert(n);
            case "custom":
                return this.showCustom(n);
            case "error":
                return this.showError(n);
            case "toast":
                return this.showToast(n);
            default:
                console.warn("Unknown alert type", t)
        }
        return !1
    }
    static close() {
        Xn.close()
    }
    static vibrate(t = [100, 100]) {
        !window.navigator || !window.navigator.vibrate || window.navigator.vibrate(t)
    }
    static async showAlert(t) {
        const n = t.customClass || {};
        return t.customClass = {
            ...n,
            popup: "jbgModal"
        }, t.titleText = t.titleText || "Error", Xn.fire(t)
    }
    static async showError(t) {
        const n = new URL("main/pp3/awshirt/assets/8cdd50e7.png", self.location).href,
            i = t.customClass || {};
        return t.customClass = {
            ...i,
            popup: "jbgModal"
        }, t.titleText = t.titleText || "Error", n && (t.imageUrl = n), Xn.fire(t)
    }
    static async showCustom(t) {
        return Xn.fire(t)
    }
    static async showToast(t) {
        return t.toast = !0, t.showConfirmButton = !1, t.timer = t.timer || 2500, t.position = t.position || "bottom", Xn.fire(t)
    }
}
const x1 = `<div class="canvasContainer">\r
    <video id="cameraVideo" class="cameraVideo" autoplay playsinline crossorigin="anonymous" class=""></video>\r
    <canvas id='cameraCanvas' class="cameraCanvas resizableCanvas" width="300px" height="408px" class=""></canvas>\r
    <img id="cameraImage" crossorigin="anonymous" class="cameraImage visuallyhidden" />\r
</div>\r
<div class="cameraControls">\r
    <button id="exitButton" class="button exitButton"></button>\r
    <div class="buttons pre">\r
        <button id="switchButton" class="button switchButton"></button>\r
        <button id="snapshotButton" class="button snapshotButton"></button>\r
    </div>\r
    <div class="buttons post">\r
        <button id="cancelButton" class="button cancelButton"></button>\r
        <button id="confirmButton" class="button confirmButton"></button>\r
    </div>\r
</div>\r
<div style="display:none;">\r
    <img id="Mask" src='../../general/images/oval.png' />\r
</div>`,
    E1 = {
        type: "camera",
        width: 300,
        height: 408,
        offsetX: 0,
        offsetY: 0,
        transmitting: !1,
        previewImage: null,
        mirror: !0,
        mask: !0,
        update(e) {
            if (this.video || (this.video = document.getElementById("cameraVideo")), this.image || (this.image = document.getElementById("Mask")), !this.video || !this.image) return;
            const t = this.video.videoWidth,
                n = this.video.videoHeight,
                i = zi().width,
                o = zi().height,
                f = Math.max(i / t, o / n);
            this.width = i, this.height = o, this.finalWidth = t * f, this.finalHeight = n * f, this.offsetX = .5 * (i - this.finalWidth), this.offsetY = .5 * (o - this.finalHeight), this.dy = this.transmitting ? Math.min(-100, this.dy) : 0, this.ddy = this.transmitting ? -1200 : 0, this.transmitting || (this.y = 0), this.advance(e)
        },
        render() {
            if (console.log("render"), !this.video) return;
            const e = vo();
            e.save(), e.translate(this.x, this.y), this.preview ? e.drawImage(this.preview, 0, 0) : this.mirror ? (e.scale(-1, 1), e.drawImage(this.video, this.offsetX - zi().width, this.offsetY, this.finalWidth, this.finalHeight)) : e.drawImage(this.video, this.offsetX, this.offsetY, this.finalWidth, this.finalHeight), e.restore(), !this.preview && this.mask && this.image && (e.scale(1, 1), e.drawImage(this.image, this.x, this.y, zi().width, zi().height))
        }
    },
    _1 = Ne.View.extend({
        template: ve.template(x1),
        className: "CameraUser",
        model: new we.Model({
            image: null,
            width: 300,
            height: 408,
            transmitting: !1,
            access: !1,
            showSwitchButton: !1
        }),
        sprites: [],
        bindings: {
            ".pre": {
                classes: {
                    visible: {
                        observe: "image",
                        onGet(e) {
                            return !e
                        }
                    }
                }
            },
            ".post": {
                classes: {
                    visible: {
                        observe: "image",
                        onGet(e) {
                            return e
                        }
                    }
                }
            }
        },
        events: {
            "click #switchButton": "switchClicked",
            "click #snapshotButton": "snapshotClicked",
            "click #confirmButton": "confirmClicked",
            "click #cancelButton": "cancelClicked",
            "click #exitButton": "exitClicked"
        },
        initialize() {
            this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), this.update()
        },
        update() {
            !this.cameraSprite || (this.model.get("image") ? (this.previewImage = this.previewImage || new Image, this.previewImage.onload = () => {
                this.cameraSprite.preview = this.previewImage
            }, this.previewImage.src = this.model.get("image")) : this.cameraSprite.preview = null, this.cameraSprite.transmitting = this.model.get("transmitting"), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), this.$("#cameraCanvas").width(`${this.model.get("width")}px`), this.$("#cameraCanvas").height(`${this.model.get("height")}px`), this.onResize())
        },
        onRender() {
            this.stickit()
        },
        onAttach() {
            const e = this;
            g1("cameraCanvas"), e.sprites = [], e.gameLoop = y1({
                fps: 60,
                update(t) {
                    e.sprites.forEach(n => n.update(t)), e.sprites = e.sprites.filter(n => n.isAlive())
                },
                render(t) {
                    e.sprites.forEach(n => n.render(t))
                }
            });
            for (let t = 0; t < e.sprites.length; t++) e.sprites[t].ttl = 0;
            this.cameraSprite = cl(E1), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), e.sprites.push(this.cameraSprite), e.gameLoop.start(), this.facingMode = "user", this.startCamera(), this.onResize()
        },
        async startCamera() {
            this.canvas = document.getElementById("cameraCanvas"), this.image = document.getElementById("cameraImage"), this.video = document.getElementById("cameraVideo");
            const e = this.altOption || "drawing";
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                const n = {
                    video: {
                        facingMode: this.facingMode,
                        width: 1280
                    },
                    audio: !1
                };
                try {
                    const i = await navigator.mediaDevices.getUserMedia(n),
                        o = await navigator.mediaDevices.enumerateDevices();
                    this.currentStream = i, this.video.srcObject = i, await this.video.play(), this.gotDevices(o)
                } catch (i) {
                    console.error(i), Ve.show("alert", {
                        titleText: "Unable to Access Camera",
                        text: `Looks like we don't have access to your device's camera. You can refresh and try again, or choose the ${e} option instead.`,
                        willClose: () => {
                            this.cameraAccessDenied()
                        }
                    })
                }
            } else Ve.show("alert", {
                titleText: "No Camera Access",
                text: `It looks like camera access isn't available from this browser. Try the ${e} option instead.`,
                willClose: () => {
                    this.cameraAccessDenied()
                }
            })
        },
        gotDevices(e) {
            let t = 0;
            e.forEach(n => {
                n.kind === "videoinput" && (t += 1)
            }), this.model.set("showSwitchButton", t > 1)
        },
        stopMediaTracks() {
            this.currentStream.getTracks().forEach(t => {
                t.stop()
            }), this.video.srcObject = null, this.model.unset("image")
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext);
            const e = this;
            for (let n = 0; n < e.sprites.length; n++) e.sprites[n].ttl = 0;
            e.gameLoop.update(1 / 60), e.gameLoop.stop(), this.currentStream && this.stopMediaTracks();
            const t = document.getElementsByClassName("pt-page");
            !t.length || (t[0].style.display = "table", t[0].style.display = "block")
        },
        switchClicked() {
            this.currentStream && this.stopMediaTracks(), this.facingMode = this.facingMode === "user" ? "environment" : "user", this.cameraSprite.mirror = this.facingMode === "user", this.startCamera()
        },
        snapshotClicked() {
            const e = new Image;
            e.crossOrigin = "anonymous", e.src = this.canvas.toDataURL(), this.model.set("image", e), this.model.set("transmitting", !1)
        },
        confirmClicked() {
            const e = this.model.get("sizesToSend") || [{
                    width: this.model.get("width"),
                    height: this.model.get("height")
                }],
                t = [];
            e.forEach(n => {
                if (!n.width || !n.height) return;
                const i = document.createElement("canvas");
                i.width = n.width, i.height = n.height;
                const o = i.getContext("2d");
                this.previewImage && o.drawImage(this.previewImage, 0, 0, i.width, i.height), this.model.set("transmitting", !0);
                const f = i.toDataURL().split(",")[1];
                t.push({
                    size: n,
                    picture: f
                })
            }), this.triggerMethod("camera:snapshot", t)
        },
        cancelClicked() {
            this.model.unset("image")
        },
        exitClicked() {
            this.triggerMethod("camera:exit")
        },
        cameraAccessDenied() {
            this.model.set("failed", !0), this.triggerMethod("camera:exit")
        },
        onResize() {
            const e = this.model.get("width"),
                t = this.model.get("height");
            if (!e || !t) return;
            const n = document.getElementById("cameraCanvas"),
                i = lt(".canvasContainer");
            if (!n || !i) return;
            const o = i.width(),
                f = Math.max(lt(window).innerHeight(), 250),
                v = Math.min(o / e, f / t),
                y = e * v,
                k = t * v;
            n.style.width = `${y}px`, n.style.height = `${k}px`, n.width = y, n.height = k
        }
    }),
    bi = we.Model.extend({
        defaults: {},
        set(e, t) {
            const n = ve.extend({}, this.attributes, this.defaults, e);
            return we.Model.prototype.set.apply(this, [n, t]), this
        },
        setUpdate(e, t) {
            const n = ve.extend({}, this.defaults, this.attributes, e);
            return we.Model.prototype.set.apply(this, [n, t]), this
        }
    }),
    S1 = bi.extend({
        defaults: {
            size: {
                width: 300,
                height: 408
            },
            sizesToSend: null,
            mask: !0,
            strings: {
                exitButton: "X",
                switchButton: `
                <svg width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-switch"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                <path
                    d="M 7.96875 2.578125 C 7.144531 2.578125 6.371094 2.8125 5.652344 3.289062
                        C 4.933594 3.753906 4.367188 4.394531 3.945312 5.210938
                        C 3.527344 6.03125 3.316406 6.921875 3.316406 7.878906 L 3.316406 8.058594 L 3.324219 8.242188
                        L 1.917969 8.347656 L 1.90625 7.878906 C 1.882812 7.273438 1.945312 6.683594 2.085938 6.113281
                        C 2.226562 5.542969 2.433594 4.992188 2.703125 4.457031
                        C 3.242188 3.378906 3.972656 2.527344 4.898438 1.898438
                        C 5.832031 1.273438 6.851562 0.960938 7.957031 0.960938
                        C 8.984375 0.960938 9.949219 1.242188 10.851562 1.808594 L 12.203125 0.15625 L 12.558594 4.71875
                        L 8.328125 4.882812 L 9.847656 3.023438 C 9.546875 2.875 9.238281 2.761719 8.925781 2.6875
                        C 8.617188 2.613281 8.296875 2.578125 7.96875 2.578125 Z M 12.632812 7.558594
                        L 14.03125 7.453125 L 14.039062 7.6875 L 14.039062 7.921875
                        C 14.039062 9.160156 13.761719 10.316406 13.210938 11.394531
                        C 12.664062 12.476562 11.929688 13.320312 11.007812 13.929688
                        C 10.089844 14.53125 9.082031 14.832031 7.980469 14.832031
                        C 6.992188 14.832031 6.035156 14.554688 5.105469 13.992188 L 3.746094 15.644531
                        L 3.394531 11.074219 L 7.621094 10.917969 L 6.101562 12.777344
                        C 6.402344 12.925781 6.710938 13.039062 7.027344 13.113281
                        C 7.339844 13.1875 7.65625 13.222656 7.980469 13.222656
                        C 8.835938 13.222656 9.613281 12.988281 10.316406 12.511719
                        C 11.039062 12.035156 11.601562 11.378906 12.007812 10.554688
                        C 12.433594 9.726562 12.644531 8.839844 12.644531 7.898438 L 12.644531 7.738281
                        Z M 12.632812 7.558594 "
                />
            </svg>`,
                snapshotButton: `
                <svg
                    width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-camera"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        fill-rule="evenodd"
                        d="M15 12V6a1 1 0 0 0-1-1h-1.172a3 3 0 0 1-2.12-.879l-.83-.828A1 1 0 0 0 9.173 3
                            H6.828a1 1 0 0 0-.707.293l-.828.828A3 3 0 0 1 3.172 5H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h12
                            a1 1 0 0 0 1-1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172
                            a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828
                            A2 2 0 0 1 3.172 4H2z"
                    />
                    <path
                        fill-rule="evenodd"
                        d="M8 11a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"
                    />
                    <path d="M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z" />
                </svg>
            `,
                cancelButton: "Cancel",
                confirmButton: "Confirm"
            }
        }
    }),
    k1 = Ne.View.extend({
        template: ve.template('<div id="cameraRegion" class="cameraRegion"></div>'),
        className: "Camera",
        model: new S1,
        regions: {
            camera: "#cameraRegion"
        },
        bindings: {
            "#exitButton": {
                observe: "strings",
                onGet: e => e.exitButton
            },
            "#switchButton": {
                observe: "strings",
                updateMethod: "html",
                onGet: e => e.switchButton
            },
            "#snapshotButton": {
                observe: "strings",
                updateMethod: "html",
                onGet: e => e.snapshotButton
            },
            "#cancelButton": {
                observe: "strings",
                onGet: e => e.cancelButton
            },
            "#confirmButton": {
                observe: "strings",
                onGet: e => e.confirmButton
            }
        },
        initialize(e) {
            this.cameraView = this.cameraView || new _1(e), this.listenTo(this.model, "change", this.update, this), this.update()
        },
        update() {
            this.cameraView.model.set("width", this.model.get("size").width), this.cameraView.model.set("height", this.model.get("size").height), this.cameraView.model.set("mask", this.model.get("mask")), this.cameraView.model.set("sizesToSend", this.model.get("sizesToSend"))
        },
        onBeforeDestroy() {
            this.getRegion("camera").empty()
        },
        onRender() {
            this.showChildView("camera", this.cameraView)
        },
        onChildviewCameraSnapshot(e) {
            e.length === 1 ? this.triggerMethod("client:message", {
                action: "camera",
                ...e[0]
            }) : this.triggerMethod("client:message", {
                action: "camera",
                pictures: e
            })
        },
        onAttach() {
            this.stickit()
        },
        onChildviewCameraExit() {
            this.triggerMethod("client:message", {
                action: "cancel"
            })
        }
    }),
    T1 = '<a class="change-color button-color btn"></a>',
    A1 = Ne.View.extend({
        tagName: "div",
        className: "colorSwatch",
        template: ve.template(T1),
        events: {
            click: "onClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    observe: ["className", "selected"],
                    name: "class",
                    onGet(e) {
                        let t = "";
                        return e[0] && (t += e[0]), e[1] && (t += " selected"), t
                    }
                }, {
                    name: "data-thickness",
                    observe: "thickness"
                }, {
                    name: "data-color",
                    observe: "hex"
                }]
            },
            "a.button-color": {
                attributes: [{
                    name: "data-color",
                    observe: "hex"
                }, {
                    name: "style",
                    observe: "hex",
                    onGet(e) {
                        return this.getOption("transparent") ? "" : `background-color: ${e};`
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onClick() {
            this.triggerMethod("palette:select", this.model)
        }
    }),
    O1 = Ne.CollectionView.extend({
        tagName: "div",
        id: "color-buttons",
        className: "colorPalette",
        childView: A1,
        collection: new we.Collection([]),
        initialize() {
            this.listenTo(this.collection, "sync", this.render)
        },
        childViewOptions() {
            return {
                transparent: this.getOption("transparent")
            }
        }
    }),
    R1 = `<ul class="nav nav-colors">\r
    <li class="pull-left button-pad">\r
        <button id="undoButton" class="undo button">\r
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 64 64"><image x="12" y="20" width="41" height="39" xlink:href="main/pp3/awshirt/assets/5f12600b.png"/></svg>\r
        </button>\r
    </li>\r
    <li class="pull-left button-pad"> \r
        <button id="thicknessButton" class="thickness button">  \r
            <div class="thickness-circle"></div>  \r
        </button>  \r
    </li> \r
    <li class="pull-right button-pad">\r
        <button id="showPaletteButton" class="showPalette button">\r
        </button>\r
    </li>\r
    <li class="pull-right button-pad">\r
        <button aria-label="choose color" id="currentColorButton" class="button currentColorButton">\r
            <div id="currentColor" class="currentColor"></div>\r
        </button>\r
    </li>\r
    <li id="color-palette" class="hide">\r
    </li>\r
</ul>\r
<div id="colorPaletteRegion" class="colorPaletteRegion">\r
`,
    I1 = Ne.View.extend({
        tagName: "div",
        className: "picker",
        template: ve.template(R1),
        model: new we.Model({}),
        regions: {
            colorPalette: "#colorPaletteRegion"
        },
        events: {
            "click #currentColorButton": "onPaletteClick",
            "click #showPaletteButton": "onPaletteClick"
        },
        triggers: {
            "click #thicknessButton": "choose:thickness",
            "click #undoButton": "choose:undo"
        },
        bindings: {
            "#currentColor": {
                attributes: [{
                    name: "style",
                    observe: "currentColor",
                    onGet(e) {
                        return `background-color: ${e}`
                    }
                }]
            },
            ".colorPaletteRegion": {
                classes: {
                    visible: {
                        observe: "visiblePalette"
                    }
                }
            },
            ".thickness-circle": {
                attributes: [{
                    name: "style",
                    observe: "thickness",
                    onGet(e) {
                        return `width: ${e*3}px; height: ${e*3}px;`
                    }
                }]
            }
        },
        initialize() {
            this.colorPaletteComponent = this.colorPaletteComponent || new O1({
                collection: new we.Collection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        onRender() {
            this.showChildView("colorPalette", this.colorPaletteComponent)
        },
        onAttach() {
            this.stickit()
        },
        update() {
            const e = this.model.get("colors").map(t => typeof t == "object" ? t : {
                hex: t
            });
            this.colorPaletteComponent.collection.set(e)
        },
        onLine() {
            this.showPalette(!1)
        },
        onPaletteClick() {
            this.showPalette(!0)
        },
        showPalette(e = !0) {
            this.model.set("visiblePalette", e)
        },
        onChildviewChildviewPaletteSelect(e) {
            this.triggerMethod("choose:color", e), this.showPalette(!1)
        }
    });
class Zu {
    constructor(t, n, i) {
        me(this, "options");
        me(this, "canvas");
        me(this, "canvasCTX");
        me(this, "tipCanvas");
        me(this, "tipCanvasCTX");
        me(this, "lines", []);
        me(this, "image");
        me(this, "startX", null);
        me(this, "startY", null);
        me(this, "smoothedMouseX", null);
        me(this, "smoothedMouseY", null);
        me(this, "lastMouse", {});
        me(this, "lastMouseChangeVector", {});
        me(this, "lastSmoothedMouse", {});
        me(this, "lastThickness");
        me(this, "lastRotation");
        me(this, "colorLevel");
        this.options = i, this.canvas = document.createElement("canvas"), this.canvas.width = t, this.canvas.height = n, this.canvasCTX = this.canvas.getContext("2d"), this.tipCanvas = document.createElement("canvas"), this.tipCanvas.width = t, this.tipCanvas.height = n, this.tipCanvasCTX = this.tipCanvas.getContext("2d")
    }
    addLine(t, n, i, o) {
        this.lines.push({
            thickness: t,
            color: n,
            highlighter: i,
            points: []
        }), this.addPoint(o), this.update()
    }
    updateSize(t, n) {
        this.canvas.width = t, this.canvas.height = n
    }
    addPoint(t) {
        const n = {
                x: parseInt(t.x, 10),
                y: parseInt(t.y, 10)
            },
            i = this.lines[this.lines.length - 1];
        if (!(!i || !i.points)) {
            if (i.points.length !== 0) {
                const o = i.points[i.points.length - 1];
                if (o.x === n.x && o.y === n.y) return
            }
            i.points.push(n), i.points.length === 2 && i.points.unshift(i.points[1]), this.update()
        }
    }
    setLines(t) {
        const n = t.map(i => {
            let o = i.points;
            return typeof o == "string" ? o = i.points.split("|").map(f => ({
                x: parseInt(f.split(",")[0], 10),
                y: parseInt(f.split(",")[1], 10)
            })) : o = o.map(f => ({
                x: parseInt(f.x, 10),
                y: parseInt(f.y, 10)
            })), {
                color: i.color,
                thickness: i.thickness,
                points: o
            }
        });
        this.lines = n, this.update()
    }
    setImage(t) {
        this.image = t, this.update()
    }
    reset() {
        this.lines = [], this.image = null, this.update()
    }
    getLastLine() {
        const t = this.lines[this.lines.length - 1];
        return t ? {
            thickness: t.thickness,
            color: t.color,
            points: t.points.map(n => `${n.x},${n.y}`).join("|")
        } : null
    }
    getLines() {
        return this.lines.map(t => ({
            thickness: t.thickness,
            color: t.color,
            points: t.points.map(n => `${n.x},${n.y}`).join("|")
        }))
    }
    update() {
        this.canvasCTX && this.canvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.tipCanvasCTX && this.tipCanvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.image && this.canvasCTX.drawImage(this.image, 0, 0), this.lines && this.lines.forEach(t => this.drawLine(t))
    }
    startLineInContext(t, n, i) {
        const o = t * this.options.minThickness;
        this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, o * this.options.dotMultiplier, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.options.cappedEnds && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.lastMouseChangeVector = {
            x: 0,
            y: 0
        }, this.startX = n, this.lastMouse.x = n, this.smoothedMouseX = n, this.lastSmoothedMouse.x = n, this.startY = i, this.lastMouse.y = i, this.smoothedMouseY = i, this.lastSmoothedMouse.y = i, this.lastThickness = o, this.lastRotation = void 0, this.colorLevel = 0
    }
    continueLineInContext(t, n, i) {
        const o = n - this.lastMouse.x,
            f = i - this.lastMouse.y;
        o * this.lastMouseChangeVector.x + f * this.lastMouseChangeVector.y < 0 && (this.tipCanvasCTX && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.smoothedMouseX = this.lastMouse.x, this.lastSmoothedMouse.x = this.lastMouse.x, this.smoothedMouseY = this.lastMouse.y, this.lastSmoothedMouse.y = this.lastMouse.y, this.lastRotation += Math.PI, this.lastThickness *= this.options.tipTaperFactor), this.smoothedMouseX += this.options.smoothingFactor * (n - this.smoothedMouseX), this.smoothedMouseY += this.options.smoothingFactor * (i - this.smoothedMouseY);
        const v = this.smoothedMouseX - this.lastSmoothedMouse.x,
            y = this.smoothedMouseY - this.lastSmoothedMouse.y,
            k = Math.sqrt(v * v + y * y);
        let A;
        k !== 0 ? A = Math.PI / 2 + Math.atan2(y, v) : A = 0;
        const D = this.options.minThickness * t + this.options.thicknessFactor * k,
            $ = this.lastThickness + this.options.thicknessSmoothingFactor * (D - this.lastThickness);
        this.lastRotation === void 0 && (this.lastRotation = A);
        const tt = this.lastRotation !== null ? Math.sin(this.lastRotation) : Math.sin(A),
            st = this.lastRotation !== null ? Math.cos(this.lastRotation) : Math.sin(A),
            V = Math.sin(A),
            ot = Math.cos(A),
            m = this.lastThickness * tt,
            L = this.lastThickness * st,
            X = $ * V,
            ut = $ * ot,
            ht = .33 * k * tt,
            bt = -.33 * k * st,
            d = this.lastSmoothedMouse.x + L + ht,
            kt = this.lastSmoothedMouse.y + m + bt,
            Vt = this.lastSmoothedMouse.x - L + ht,
            Pt = this.lastSmoothedMouse.y - m + bt;
        this.canvasCTX.beginPath(), this.canvasCTX.moveTo(this.lastSmoothedMouse.x + L, this.lastSmoothedMouse.y + m), this.canvasCTX.quadraticCurveTo(d, kt, this.smoothedMouseX + ut, this.smoothedMouseY + X), this.canvasCTX.lineTo(this.smoothedMouseX - ut, this.smoothedMouseY - X), this.canvasCTX.quadraticCurveTo(Vt, Pt, this.lastSmoothedMouse.x - L, this.lastSmoothedMouse.y - m), this.canvasCTX.closePath(), this.canvasCTX.fill(), this.canvasCTX.stroke();
        const Ce = this.options.tipTaperFactor * $;
        this.tipCanvasCTX.clearRect(0, 0, this.tipCanvasCTX.canvas.width, this.tipCanvasCTX.canvas.height), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, Ce, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.moveTo(this.smoothedMouseX + ut, this.smoothedMouseY + X), this.tipCanvasCTX.lineTo(n + this.options.tipTaperFactor * ut, i + this.options.tipTaperFactor * X), this.tipCanvasCTX.lineTo(n - this.options.tipTaperFactor * ut, i - this.options.tipTaperFactor * X), this.tipCanvasCTX.lineTo(this.smoothedMouseX - ut, this.smoothedMouseY - X), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.lastSmoothedMouse = {
            x: this.smoothedMouseX,
            y: this.smoothedMouseY
        }, this.lastRotation = A, this.lastThickness = $, this.lastMouseChangeVector = {
            x: o,
            y: f
        }, this.lastMouse = {
            x: n,
            y: i
        }
    }
    drawLine(t) {
        if (!(!t || !t.color || !t.points || !t.thickness) && !(!this.canvasCTX || !this.tipCanvasCTX)) {
            this.canvasCTX.strokeStyle = t.color, this.canvasCTX.lineWidth = this.options.borderWidth, this.canvasCTX.lineCap = "round", this.canvasCTX.lineJoin = "bevel", this.canvasCTX.fillStyle = t.color, this.canvasCTX.strokeStyle = t.color, this.tipCanvasCTX.lineWidth = this.options.borderWidth, this.tipCanvasCTX.fillStyle = t.color, this.tipCanvasCTX.strokeStyle = t.color;
            for (let n = 0; n < t.points.length; n++) {
                const i = t.points[n];
                n === 0 && this.startLineInContext(t.thickness, i.x, i.y), this.continueLineInContext(t.thickness, i.x, i.y)
            }
            this.canvasCTX.drawImage(this.tipCanvas, 0, 0)
        }
    }
}
const ac = {
    color: "#000000",
    thickness: 3,
    highlighter: !1,
    sketchOptions: {
        minThickness: .5,
        thicknessFactor: .1,
        smoothingFactor: .55,
        thicknessSmoothingFactor: .6,
        tipTaperFactor: .7,
        cappedEnds: !1,
        borderWidth: 2,
        dotMultiplier: 2
    }
};
class L1 {
    constructor(t, n = {}) {
        me(this, "canvasSelector");
        me(this, "canvas");
        me(this, "ctx");
        me(this, "options");
        me(this, "history");
        me(this, "layerNames", ["backgroundSketch", "highlighterSketch", "highlighterLineSketch", "markerSketch", "markerLineSketch"]);
        this.canvasSelector = t, this.canvas = lt(this.canvasSelector)[0], this.ctx = this.canvas.getContext("2d"), this.options = Object.assign(ac, n), this.history = [], this.layerNames.forEach(i => {
            const o = new Zu(this.canvas.width, this.canvas.height, this.options.sketchOptions);
            o.name = i, this[i] = o
        })
    }
    update() {
        !this.ctx || (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.layerNames.forEach(t => {
            this.ctx.drawImage(this[t].canvas, 0, 0)
        }))
    }
    updateSize(t) {
        this.layerNames.forEach(n => {
            this[n].updateSize(t.width, t.height)
        })
    }
    setThickness(t) {
        this.options.thickness = t
    }
    setColor(t) {
        this.options.color = t
    }
    getHighlighter() {
        return !!this.options.highlighter
    }
    setHighlighter(t) {
        this.options.highlighter = t
    }
    setOptions(t) {
        const n = Object.assign(ac.sketchOptions, t);
        this.layerNames.forEach(i => {
            this[i].options = n, this[i].update()
        }), this.update()
    }
    startLine(t) {
        (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addLine(this.options.thickness, this.options.color, this.options.highlighter, t)
    }
    moveLine(t) {
        (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addPoint(t), this.update()
    }
    endLine() {
        const t = this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch,
            n = t.lines.pop();
        n.points && n.points.length > 1 && n.points.push(n.points[n.points.length - 2]), this.options.highlighter ? (this.highlighterSketch.lines.push(n), this.highlighterSketch.update(), this.history.push("highlighterSketch")) : (this.markerSketch.lines.push(n), this.markerSketch.update(), this.history.push("markerSketch")), t.reset(), this.update()
    }
    undoLine() {
        if (!this.history.length) return;
        const t = this.history.pop();
        this[t].lines.pop() && this[t].update()
    }
    isClean() {
        return !this.history.length
    }
    setLayerLines(t, n) {
        if (this.layerNames.indexOf(t) === -1) {
            console.error("invalid layer name", t);
            return
        }
        this[t].setLines(n), this.update()
    }
    setLayerImage(t, n) {
        this[t].setImage(n), this.update()
    }
    getLastLine() {
        return this.history.length === 0 ? null : this[this.history[this.history.length - 1]].getLastLine() || null
    }
    getLines() {
        return [...this.highlighterSketch.getLines(), ...this.markerSketch.getLines()]
    }
    getDataURL(t, n) {
        t === void 0 && (t = 1);
        const i = document.createElement("canvas"),
            o = this.canvas.width * t,
            f = this.canvas.height * t;
        i.width = o, i.height = f;
        const v = i.getContext("2d");
        return n && (v.fillStyle = n, v.fillRect(0, 0, o, f)), v.drawImage(this.highlighterSketch.canvas, 0, 0, o, f), v.drawImage(this.markerSketch.canvas, 0, 0, o, f), i.toDataURL()
    }
    resetAll() {
        this.layerNames.forEach(t => {
            this[t].reset()
        }), this.update()
    }
}
const D1 = `<canvas id="fullLayer" class="sketchpad fullLayer" width='480' height='600' style=''></canvas>`,
    M1 = Ne.View.extend({
        className: "Sketchpad canvasContainer",
        template: ve.template(D1),
        images: {},
        myViewOptions: ["color", "thickness", "background", "image"],
        sketchpad: null,
        bindings: {
            ".sketchpad": {
                attributes: [{
                    name: "width",
                    observe: "size",
                    onGet(e) {
                        return e ? e.width : ""
                    }
                }, {
                    name: "height",
                    observe: "size",
                    onGet(e) {
                        return e ? e.height : ""
                    }
                }, {
                    name: "style",
                    observe: ["background", "backgroundImageUrl"],
                    onGet([e, t]) {
                        let n = "";
                        return t && (n += `background-image:url(${t});`), e && (n += `background-color:${e};`), n
                    }
                }]
            }
        },
        events: {
            "contextmenu canvas": "handleContextMenu",
            "mousedown canvas": "start",
            "touchstart canvas": "start",
            "mousemove canvas": "move",
            "touchmove canvas": "move"
        },
        initialize(e) {
            this.color = "black", this.thicknessScale = -1, this.mergeOptions(e, this.myViewOptions), this.model.on("change:size", this.onUpdateSize, this), this.endWithContext = this.end.bind(this)
        },
        onUpdateSize() {
            this.sketchpad && this.sketchpad.updateSize(this.model.get("size"))
        },
        onRender() {
            this.stickit(), document.addEventListener("touchend", this.endWithContext), document.addEventListener("mouseup", this.endWithContext)
        },
        onAttach() {
            const e = `sketchpad-${this.model.cid}`;
            this.$("#fullLayer").addClass(e), this.sketchpad = new L1(`#fullLayer.${e}`), this.model.get("thicknesses") ? this.model.get("thicknesses").length === 1 && this.sketchpad.setThickness(this.model.get("thicknesses")[0]) : this.sketchpad.setThickness(1), this.triggerMethod("sketchpad:ready")
        },
        getCoords(e) {
            let t = e;
            t.preventDefault(), ["touchstart", "touchmove"].indexOf(t.type) !== -1 && (t = t.originalEvent.touches[0]);
            const n = this.sketchpad.canvas,
                i = lt(n)[0].width / lt(n).width(),
                o = n.getBoundingClientRect(),
                f = this.model.get("size"),
                v = this.sketchpad.options.thickness;
            let y = (t.clientX - o.left) * i;
            y = Math.min(f.width - v, Math.max(v, y));
            let k = (t.clientY - o.top) * i;
            return k = Math.min(f.height - v, Math.max(v, k)), {
                x: y,
                y: k
            }
        },
        fullImageCoord(e) {
            return `${parseInt(e.x+this.viewportOffset.x,10)},${parseInt(e.y+this.viewportOffset.y,10)}`
        },
        start(e) {
            const t = this.getCoords(e);
            this.sketchpad.startLine(t), this.isDrawing = !0
        },
        move(e) {
            if (!this.isDrawing) return;
            const t = this.getCoords(e);
            this.sketchpad.moveLine(t)
        },
        end(e, t) {
            !this.isDrawing || (this.isDrawing = !1, this.sketchpad.endLine(), t || this.triggerMethod("sketchpad:line", this.sketchpad.getLastLine()))
        },
        onBeforeDestroy() {
            this.getOption("mode") !== null && this.end(null, !0), document.removeEventListener("touchend", this.endWithContext), document.removeEventListener("mouseup", this.endWithContext)
        },
        leave() {
            this.getOption("mode") !== "draw" && this.tipShape.graphics.clear()
        },
        undoLine() {
            this.sketchpad.undoLine(), this.sketchpad.update(), this.triggerMethod("sketchpad:undo", this.sketchpad.history.length)
        },
        resetAll() {
            this.sketchpad && this.sketchpad.resetAll()
        },
        getColor() {
            return this.color
        },
        setColor(e) {
            this.color = e, this.sketchpad && this.sketchpad.setColor(e)
        },
        getThickness() {
            return this.thicknessScale
        },
        setThickness(e) {
            this.thicknessScale = e, this.sketchpad && this.sketchpad.setThickness(e)
        },
        getHighlighter() {
            return this.sketchpad ? this.sketchpad.getHighlighter() : !1
        },
        setHighlighter(e) {
            this.sketchpad && this.sketchpad.setHighlighter(e)
        },
        setOptions(e) {
            this.sketchpad && this.sketchpad.setOptions(e)
        },
        getLines() {
            return this.sketchpad ? this.sketchpad.getLines() : []
        },
        getImageData() {
            return this.sketchpad ? this.sketchpad.getDataURL(1, this.model.get("background")) : null
        },
        getThumbnailImage() {
            return this.sketchpad ? this.sketchpad.getDataURL(.33) : null
        },
        setLines(e) {
            !this.sketchpad || this.sketchpad.setLayerLines("backgroundSketch", e)
        },
        setImage(e) {
            const t = this.getOption("images")[e];
            if (!t) return;
            const n = new Image;
            n.onload = i => {
                const o = i.target;
                this.sketchpad.setLayerImage("backgroundSketch", o)
            }, n.src = t
        },
        handleContextMenu(e) {
            e.preventDefault()
        }
    }),
    P1 = `<div class="controller-content">\r
    <div class="canvas-container">\r
        <div id="prompt" class="prompt"></div>\r
        <div id="toolbar" class="toolbar"></div>\r
        <div id="sketchpad"></div>\r
        <div id="buttons" class="buttons"></div>\r
        <div id="post-sketchpad" class="post-sketchpad">\r
            <div id="submit">\r
                <button id='submitdrawing' class="button submitDrawing">Submit</button><br/>\r
            </div>\r
            <button id='censorOptions' class='button'>Censor Options</button>\r
            <div class="footer"></div>\r
        </div>\r
        </div>\r
    </div>\r
</div>\r
`,
    N1 = bi.extend({
        defaults: {
            drawId: 0,
            objectKey: void 0,
            size: {
                width: 240,
                height: 300
            },
            actions: !1,
            colors: ["#3c6e6f", "#007727", "#b8aa01", "#0350a0", "#000000", "#966401", "#48019d", "#730075", "#9c0e3e"],
            background: "",
            thicknesses: [3, 6],
            defaultIndex: 4,
            classes: [],
            prompt: {
                html: ""
            },
            live: !1,
            image: !1,
            backgroundImageUrl: !1,
            lines: !1,
            hideSubmit: !1,
            autoSubmit: !1,
            allowEmpty: !1,
            disabled: !1,
            debug: !1,
            strings: {
                drawing_empty: "You must draw something!",
                submit: "submit",
                ERROR_REJECTED_OBJECT: "That's not allowed, enter something else!"
            }
        }
    }),
    B1 = Ne.View.extend({
        className: "Draw",
        template: ve.template(P1),
        model: new N1,
        regions: {
            prompt: "#prompt",
            sketchpad: "#sketchpad",
            toolbar: "#toolbar",
            buttons: "#buttons"
        },
        events: {
            "click #submitdrawing": "onChildviewButtonSubmit"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return e ? e.join(" ") : ""
                    }
                }]
            },
            "#censorOptions": {
                visible: !1
            },
            ".footer": {
                observe: "footer",
                updateMethod: "html",
                onGet(e) {
                    return e ? e.html ? e.html : lt("<div />").text(e.text).html() : null
                }
            },
            ".submitDrawing": {
                observe: ["hideSubmit", "actions", "strings"],
                visible: !0,
                updateView: !0,
                onGet(e) {
                    return e[0] || e[1] ? !1 : e[2] === void 0 ? "" : e[2].submit || "Submit"
                }
            }
        },
        initialize() {
            this.promptComponent = this.promptComponent || new Wi({}), this.toolbarComponent = this.toolbarComponent || new I1({
                model: new we.Model({})
            }), this.sketchpadComponent = this.sketchpadComponent || new M1({
                model: new we.Model
            }), this.buttonsCollection = this.buttonsCollection || new we.Collection([]), this.buttonsComponent = this.buttonsComponent || new Ai({
                block: !1,
                collection: this.buttonsCollection
            }), this.options.thicknessIndex = -1, this.options.colorIndex = -1, this.drawId = this.model.get("drawId"), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
        },
        update() {
            this.model.get("drawId") !== this.getOption("drawId") && (this.resetDrawing(), this.drawId = this.model.get("drawId")), this.model.get("prompt") && this.promptComponent.model.set(this.model.get("prompt")), this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                width: 720,
                height: 900
            }), this.model.get("image") && (this.sketchpadComponent.setImage(this.images[this.model.get("image")]), this.onResize()), this.model.get("background") && this.sketchpadComponent.model.set("background", this.model.get("background")), this.model.get("backgroundImageUrl") && this.sketchpadComponent.model.set("backgroundImageUrl", this.model.get("backgroundImageUrl")), this.toolbarComponent && this.toolbarComponent.model.set("colors", this.model.get("colors")), this.model.get("actions") && this.buttonsCollection.set(this.model.get("actions")), this.model.get("autoSubmit") && this.autoSubmit(), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.onResize()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("toolbar", this.toolbarComponent), this.showChildView("sketchpad", this.sketchpadComponent), this.showChildView("buttons", this.buttonsComponent)
        },
        onChildviewAttach() {
            this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                width: 720,
                height: 900
            })
        },
        onAttach() {
            this.stickit(), this.update(), this.onResize(), Ve.vibrate()
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext)
        },
        resetDrawing() {
            this.sketchpadComponent.resetAll(), this.onChildviewSketchpadReady()
        },
        onChildviewSketchpadReady() {
            this.model.get("thicknesses") && this.options.thicknessIndex === -1 && this.onChildviewChooseThickness(), this.model.get("colors") && this.options.colorIndex === -1 && this.model.get("colors") && this.model.get("defaultIndex") !== void 0 && this.chooseColorByIndex(this.model.get("defaultIndex")), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.model.get("lines") && this.sketchpadComponent.setLines(this.model.get("lines"))
        },
        chooseColorByIndex(e) {
            (e < 0 || e > this.model.get("colors").length) && (e = 0);
            let t = this.model.get("colors")[e];
            typeof t != "object" && (t = {
                hex: t
            }), this.chooseColor(t.hex, t)
        },
        onChildviewChooseColor(e) {
            this.chooseColor(e.get("hex"), e.attributes)
        },
        onChildviewChooseThickness() {
            this.options.thicknessIndex = (this.options.thicknessIndex + 1) % this.model.get("thicknesses").length;
            const e = this.model.get("thicknesses")[this.options.thicknessIndex];
            this.sketchpadComponent.setThickness(e), this.toolbarComponent && this.toolbarComponent.model.set("thickness", e)
        },
        onChildviewChooseUndo() {
            this.sketchpadComponent.undoLine()
        },
        chooseColor(e, t = {}) {
            this.sketchpadComponent.setColor(e), this.sketchpadComponent.setHighlighter(t.highlighter), this.toolbarComponent.model.set("highlighter", t.highlighter), t.thickness !== void 0 && this.sketchpadComponent.setThickness(t.thickness), this.toolbarComponent.model.set("currentColor", e)
        },
        onChildviewSketchpadLine(e) {
            if (this.toolbarComponent && this.toolbarComponent.onLine && this.toolbarComponent.onLine(), this.model.get("live")) {
                const t = {
                        line: e,
                        highlighter: this.sketchpadComponent.getHighlighter(),
                        action: "line"
                    },
                    n = this.model.get("objectKey");
                if (n !== void 0) {
                    const i = this.sketchpadComponent.getLines();
                    t.objectKey = n, t.val = {
                        lines: i
                    }
                }
                this.triggerMethod("client:message", t)
            }
        },
        onChildviewSketchpadUndo(e) {
            if (this.model.get("live")) {
                const t = {
                        action: "undo",
                        linesLength: e
                    },
                    n = this.model.get("objectKey");
                n !== void 0 && (t.objectKey = n, t.val = {
                    lines: this.sketchpadComponent.getLines()
                }), this.triggerMethod("client:message", t)
            }
        },
        autoSubmit() {
            this.sketchpadComponent.end(), this.sketchpadComponent.getLines().length > 0 && this.onChildviewButtonSubmit()
        },
        onChildviewChildviewButtonChoose(e) {
            this.onChildviewButtonChoose(e)
        },
        onChildviewButtonChoose(e) {
            this.triggerMethod("client:message", {
                action: "choose",
                index: e.get("key")
            })
        },
        onChildviewChildviewButtonSubmit() {
            this.onChildviewButtonSubmit()
        },
        onChildviewButtonSubmit() {
            const e = this.sketchpadComponent.getLines();
            if (e.length === 0 && !this.model.get("allowEmpty")) return Ve.show(Error(this.model.get("strings").drawing_empty)), !1;
            const t = {
                    lines: e,
                    action: "submit"
                },
                n = this.model.get("objectKey");
            return n && (t.objectKey = n, t.val = {
                lines: e,
                submit: !0
            }), this.triggerMethod("client:message", t), this.model.get("debug") && Ve.show("custom", {
                html: `<textarea id="lines" style='width:100%; height:400px;'>${JSON.stringify(e)}</textarea><button type="button" onclick="(function(){var copyText = document.querySelector('#lines'); copyText.select(); document.execCommand('copy');})();">Copy to clipboard</button>`
            }), !1
        },
        onObjectFilterError() {
            Ve.show(Error(this.model.get("strings").ERROR_REJECTED_OBJECT))
        },
        onResize() {
            const e = lt("#sketchpad"),
                t = lt("#sketchpad canvas")[0];
            if (!t) return;
            const n = parseInt(lt(".controller-content").css("border-top-width"), 10) * 2 + lt(".playerTopBar").innerHeight() + lt("#prompt").innerHeight() + lt("#toolbar").innerHeight() + parseInt(lt(".canvasContainer").css("border-top-width"), 10) * 2 + lt("#buttons").innerHeight() + lt("#post-sketchpad").innerHeight() + 10,
                i = parseInt(parseInt(lt(".canvasContainer").css("border-left-width"), 10) * 2 || 0 + parseInt(lt(".canvasContainer").css("padding-left"), 10) * 2 || 0 + parseInt(lt(".Draw").css("padding-left"), 10) * 2 || 0, 10),
                o = t.width,
                f = t.height,
                v = 2,
                y = Math.min(e.width() - i, o * v),
                k = Math.max(lt("#controller-container").innerHeight() - n, 250),
                A = Math.min(y / o, k / f),
                D = o * A,
                $ = f * A;
            t.style.width = `${D}px`, t.style.height = `${$}px`, window.scrollTo(0, 0)
        }
    }),
    $1 = `<div>
    <div id="controller" class="state-controller controller-content">
        <form class="enterSingleTextForm">
            <fieldset class="enterSingleTextFieldset">
                <div id="prompt" class="prompt">prompt</div>
                <div id="input-region" class=""></div>
                <div id="buttons" class="">buttons</div>
            </fieldset>
        </form>
        <div class="enterSingleTextDone">
            <span class="doneText"></span>
        </div>
    </div>
</div>
`,
    V1 = bi.extend({
        defaults: {
            state: "EnterSingleText",
            actions: [{
                text: "submit",
                action: "submit"
            }],
            allowEmpty: !1,
            autoSubmit: !1,
            classes: [],
            doneText: "",
            entryId: void 0,
            entry: null,
            live: !1,
            maxLength: 500,
            textKey: void 0,
            textRingName: null,
            placeholder: "",
            autocapitalize: !1,
            className: "",
            inlineSubmit: !1,
            inlineSubmitText: "Submit",
            error: "",
            strings: {
                ERROR_NOTHING_ENTERED: "You need to enter something!",
                ERROR_REJECTED_TEXT: "That's not allowed, enter something else! (You can change the level of filtering in the game's settings menu)"
            }
        }
    }),
    j1 = Ne.View.extend({
        className: "EnterSingleText scrollable",
        template: ve.template($1),
        model: new V1,
        sessionModule: "comment",
        sessionName: " Comments",
        regions: {
            prompt: "#prompt",
            input: "#input-region",
            buttons: "#buttons"
        },
        events: {
            "submit form": "onChildviewInputSubmit"
        },
        bindings: {
            ".enterSingleTextForm": {
                observe: "entry",
                visible(e) {
                    return !e
                }
            },
            ".enterSingleTextDone": {
                observe: "entry",
                visible: !0
            },
            ".doneText": {
                observe: "doneText",
                updateMethod: "html",
                onGet(e) {
                    return e ? e.html ? e.html : lt("<div />").text(e.text).html() : ""
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return !e || !e.bgColor ? "" : `background-color: ${e.bgColor}`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return e ? e.join(" ") : ""
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return e && e.buttonColor ? `background-color: ${e.buttonColor}` : null
                    }
                }]
            }
        },
        initialize() {
            this.currentEntry = null, this.shouldSubmit = !1, this.promptComponent = new Wi({
                model: new we.Model({
                    text: "",
                    className: ""
                })
            }), this.inputComponent = this.inputComponent || new eo({
                model: new we.Model({})
            }), this.buttonsCollection = this.buttonsCollection || new we.Collection([{
                text: "submit"
            }]), this.buttonsComponent = this.buttonsComponent || new Ai({
                block: !0,
                collection: this.buttonsCollection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        update() {
            this.model.get("isAudience") && ((this.model.get("entryId") === void 0 || this.model.get("entryId") !== this.entryId) && (this.audienceEntry = void 0), this.audienceEntry && this.model.setUpdate({
                entry: this.audienceEntry,
                entryId: this.model.get("entryId") || 0
            })), this.promptComponent.model.clear({
                silent: !0
            }).set(this.model.get("prompt")), this.inputComponent.model.set(this.model.attributes), this.buttonsComponent.options.block = this.model.get("block"), this.buttonsCollection.set(this.model.get("actions") || [{
                text: "submit",
                action: "submit"
            }]), this.model.get("entryId") && this.model.get("entryId") !== this.currentEntry && (this.inputComponent.clearInput(), this.currentEntry = this.model.get("entryId")), this.$el.find(".enterSingleTextFieldset").prop("disabled", !1), this.$el.find("textarea").focus(), this.stickit(), this.model.get("autoSubmit") && this.shouldSubmit && this.onChildviewInputSubmit()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("input", this.inputComponent), this.showChildView("buttons", this.buttonsComponent), this.stickit()
        },
        onAttach() {
            this.update(), Ve.vibrate()
        },
        onChildviewInputText(e) {
            let t = e.getValue();
            t.length > this.model.get("maxLength") && (t = t.substr(0, this.model.get("maxLength")), e.setValue(t)), this.shouldSubmit = t.length > 0, this.model.get("live") && (this.throttledSend || (this.throttledSend = ve.throttle(() => {
                const n = e.getSanitizedValue();
                if (n.length === 0) return;
                const i = {
                        action: "write-live",
                        entry: n
                    },
                    o = this.model.get("textKey");
                o !== void 0 && (i.textKey = o, i.val = n), this.triggerMethod("client:message", i)
            }, 500)), this.throttledSend())
        },
        onChildviewInputSubmit() {
            let e = this.inputComponent.getValue(),
                t = this.inputComponent.getSanitizedValue();
            if (this.model.setUpdate({
                    error: null
                }), t.length === 0 && !this.model.get("allowEmpty")) return this.model.setUpdate({
                error: this.model.get("strings").ERROR_NOTHING_ENTERED
            }), !1;
            e.length > this.model.get("maxLength") && (this.inputComponent.setValue(e.substr(0, this.model.get("maxLength"))), e = this.inputComponent.getValue(), t = this.inputComponent.getSanitizedValue()), this.shouldSubmit = !1;
            const n = {
                    action: "write",
                    entry: t
                },
                i = this.model.get("textKey");
            return i && (n.textKey = i, n.val = t), this.triggerMethod("client:message", n), this.model.get("isAudience") ? this.model.get("repeating") ? this.inputComponent.clearInput() : (this.audienceEntry = t, this.entryId = this.model.get("entryId") || 0, this.model.setUpdate({
                entry: this.audienceEntry,
                shotId: this.entryId
            })) : this.model.get("repeating") || this.$el.find(".enterSingleTextFieldset").prop("disabled", !0), !1
        },
        onTextFilterError() {
            this.model.setUpdate({
                error: this.model.get("strings").ERROR_REJECTED_TEXT
            })
        },
        onChildviewChildviewButtonSuggestion() {
            const e = this.model.get("suggestions"),
                t = this.inputComponent.getSanitizedValue(),
                n = ve.without(e, t);
            return this.inputComponent.setValue(ve.shuffle(n)[0]), !1
        },
        onChildviewChildviewButtonChoose(e) {
            return this.triggerMethod("client:message", {
                action: e.get("key")
            }), !1
        },
        onChildviewChildviewButtonHelp() {
            return this.triggerMethod("client:message", {
                action: "help"
            }), !1
        }
    });
Ne.View.extend({
    model: new we.Model({}),
    myViewOptions: ["width", "height", "sketchOptions"],
    template: ve.template(`
        <h1 class='title'>ImageView</h1>
        <img class='imageData'>
    `),
    initialize(e) {
        this.mergeOptions(e, this.myViewOptions), this.model.on({
            "change:lines": this.setImageFromLines.bind(this)
        })
    },
    bindings: {
        ".title": {
            observe: "title",
            visible: !0,
            updateView: !0
        },
        ".imageData": {
            attributes: [{
                name: "src",
                observe: "src"
            }]
        }
    },
    setImageFromLines() {
        const e = this.getOption("width") || 640,
            t = this.getOption("height") || 640,
            n = this.getOption("sketchOptions"),
            i = this.model.get("lines") || [];
        if (!i.length || !n) return;
        const o = new Zu(e, t, n);
        o.setLines(i), this.model.set("src", o.canvas.toDataURL("image/png"))
    },
    onRender() {
        this.stickit()
    }
});
const lc = Ne.View.extend({
    appId: "legacymain",
    appTag: "legacymain",
    template: null,
    client: null,
    initialize(e) {
        this.client = e.client, this.mergeOptions(e, ["appId", "appTag"]), this.model = new we.Model({});
        const t = this.client.parseEntities();
        this.model.set(t), this.model.on("change", this.controllerUpdate, this), this.model.on("change", () => {
            this.update().catch(this.caughtError)
        }), this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.on("client:connection", this.onConnectionMessageWithContext), this.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.on("client:disconnected", this.onDisconnectedWithContext)
    },
    render() {
        this.model.set("username", Ze.safeText(this.client.name), {
            silent: !0
        }), this.$el.html(this.template(this.model.toJSON())), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
    },
    onEntityDidChange(e, t) {
        this.model.unset(e, {
            silent: !0
        }), this.model.set(e, t)
    },
    controllerUpdate() {
        const e = this.model.get("room") || {},
            t = e.state || "";
        let n = e.lobbyState;
        !n && t.indexOf("_") !== -1 && (n = e.state.split("_")[1]), n === "PostGame" || t === "Credits" || t === "GameOver" || t === "PostGame" || t === "DayEnd" || e.gameResults ? mi.isInitialized ? mi.show() : mi.init(this.getOption("appTag")).then(() => {
            mi.show()
        }) : mi.hide(), e.platformId && yn.setTag(`platform-${e.platformId}`)
    },
    async update() {
        return null
    },
    caughtError(e) {
        throw e
    },
    onAttach() {
        this.update().catch(this.caughtError), lt(".gallery-link").click(this.artifactClicked.bind(this)), this.client.isRole("broadcaster") && this.showTwitchBroadcasterDialog(20 * 1e3)
    },
    showTwitchBroadcasterDialog(e) {
        let t = `<div class='icon-${this.client.roles.broadcaster.platform}'>${this.client.roles.broadcaster.name}</div>`;
        t += "<div class='success'>You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.</div>", this.lacksAudience ? t += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (t += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), Ve.show("custom", {
            html: t,
            position: "bottom",
            timer: e,
            backdrop: "transparent",
            customClass: {
                container: "jbgTwitchContainer",
                popup: "jbgTwitchPopup",
                htmlContainer: "jbgTwitchContent",
                closeButton: "jbgCloseButton"
            },
            showCloseButton: !0,
            closeButtonHtml: '<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path><path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" /></svg >',
            showConfirmButton: !1,
            showClass: {
                popup: "jbgTwitchShow"
            },
            hideClass: {
                popup: "jbgTwitchHide"
            }
        })
    },
    onBeforeDestroy() {
        this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext)
    },
    artifactClicked() {
        yi.setAsViewed(0)
    },
    showScreen(e, t) {
        const n = lt(e);
        return this.activeScreen && e === this.activeScreen || (this.activeScreen && (lt(this.activeScreen).fadeOut("fast", () => {}), lt(this.activeScreen).show(), lt(this.activeScreen).addClass("pt-page-off")), n.hide(), n.removeClass("pt-page-off"), n.removeClass("pt-page-moveToLeft"), n.fadeIn("fast", () => {
            t && t()
        }), this.activeScreen = e, this.onResize()), !1
    },
    notify() {
        Ve.vibrate()
    },
    onRoomWasDestroyed() {
        yn.remove("roomCode"), yn.remove("reconnect"), Ve.show("error", {
            titleText: "Disconnected",
            text: "Thanks for playing!",
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onDisconnected() {
        Ve.show("error", {
            titleText: "Disconnected",
            text: "You have been disconnected.",
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onConnectionMessage(e) {
        const t = `${e.status} ${e.attempt?`${e.attempt}/5'`:""}`;
        if (Ve.show("toast", {
                text: t
            }), e.status === "connected") {
            const n = this.client.parseEntities();
            this.model.set(n)
        }
    },
    onResize() {
        const e = lt("#player").outerHeight(!0) || 0,
            t = mi.isVisible ? lt("#slide-in-banner").outerHeight(!0) : 0,
            n = lt(window).width(),
            i = lt(window).height() - e;
        lt(`.${this.getOption("appTag")}-page`).css("height", i - t), lt(`.${this.getOption("appTag")}-page`).attr("height", i - t), lt(`.${this.getOption("appTag")}-page`).css("top", e), lt(`.${this.getOption("appTag")}-page`).css("width", n), lt(`.${this.getOption("appTag")}-page`).attr("width", n)
    }
});
class F1 {
    constructor(t) {
        me(this, "topNode");
        this.topNode = t
    }
    reset() {
        this.nodeStack = [this.topNode], this.resetNode(this.topNode), this.topNode.e.show()
    }
    resetNode(t) {
        t.e.hide(), t.branches && t.branches.forEach(n => this.resetNode(n.node))
    }
    input(t) {
        if (t === "back") {
            if (this.nodeStack.length <= 1) return;
            this.nodeStack.pop().e.hide(), this.nodeStack[this.nodeStack.length - 1].e.show();
            return
        }
        const n = this.nodeStack[this.nodeStack.length - 1];
        !n.branches || n.branches.forEach(i => {
            if (i.input === t) {
                this.nodeStack[this.nodeStack.length - 1].e.hide();
                const f = i.node;
                f.e.show(), this.nodeStack.push(f)
            }
        })
    }
}
const z1 = `<div id="controller" class="state-controller controller-content">
    <div id="title" class="lobbyTitle">title</div>
    <div id="vipMenu" class="vipMenu">
        <div id="choices" class="choicesContainer">choices</div>
    </div>
    <div class="characterSelect">
        <div id="charactersPrompt" class="charactersPrompt">
            <span id="charactersPromptText" class="charactersPromptText"></span>
        </div>
        <div id="characters" class="charactersContainer"></div>
    </div>
    <div id="artifactId" class="artifactContainer text">
        <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
            <button id="artifactButton" class="artifactButton"></button>
        </a>
    </div>
</div>`,
    H1 = bi.extend({
        defaults: {
            canChangeName: !1,
            playerIsVIP: !1,
            playerCanStartGame: !1,
            playerCanCensor: !1,
            gameCanStart: !1,
            gameIsStarting: !1,
            gameEnded: !1,
            game: {
                familyFriendly: !1,
                extendedTimers: !1,
                requireTwitch: !1,
                controllerOnly: !1,
                skipTutorials: !1
            },
            choices: [],
            artifact: null,
            characters: null,
            censorablePlayers: [],
            playerCanDoEpisodes: !1,
            playerCanReport: !1,
            playerCanViewAuthor: !1,
            lastUGCResult: null,
            history: [],
            activeContentId: null,
            formattedActiveContentId: null,
            isLocal: !1,
            strings: {
                wait: "Sit back and relax!",
                vip_waiting: "Waiting for all players to join",
                vip_canStart: "Press this button when everybody has joined",
                vip_cancel: "Press this button to cancel game start",
                vip_postgame: "What would you like to do now?",
                vip_episodes_menu: "Episodes Menu",
                vip_episodes_unload: "Unload Episode",
                vip_episodes_report: "Report Episode",
                vip_episodes_warning: "Warning: user generated content is not rated",
                vip_episodes_load: "Load an episode by id:",
                vip_episodes_select: "Or select an episode:",
                vip_episodes_back: "Back",
                vip_episodes_submit: "SUBMIT",
                vip_episodes_view_author: "View Author",
                button_start: "Everybody's In",
                button_cancel: "Cancel",
                button_changename: "Change Name",
                button_sameplayers: "Same Players",
                button_newplayers: "New Players",
                prompt_entername: "Enter your name",
                prompt_choosecharacter: "Select your character",
                button_censorOptions: "Censor Options",
                censor_prompt: ""
            }
        }
    }),
    U1 = Ne.View.extend({
        tagName: "button",
        template: ve.template('<span class="flex-item"></span>'),
        className() {
            return `characters ${this.model.get("name")}`
        },
        events: {
            click: "onCharacterClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "bgcolor",
                    onGet(e) {
                        return e ? `background-color: ${e};` : ""
                    }
                }, {
                    name: "aria-label",
                    observe: "name"
                }, {
                    name: "disabled",
                    observe: "available",
                    onGet(e) {
                        return e !== void 0 ? !e : null
                    }
                }],
                classes: {
                    active: "active",
                    selected: {
                        observe: "selected",
                        onGet(e) {
                            return e
                        }
                    },
                    disabled: {
                        observe: "available",
                        onGet(e) {
                            return !e
                        }
                    }
                }
            }
        },
        onCharacterClick() {
            this.trigger("character:click", this.model)
        },
        onRender() {
            this.stickit()
        }
    }),
    q1 = Ne.View.extend({
        className: "Lobby scrollable",
        template: ve.template(z1),
        model: new H1,
        titleComponent: null,
        choicesListView: null,
        charactersListView: null,
        regions: {
            title: "#title",
            choices: "#choices",
            characters: "#characters"
        },
        events: {
            "click .choice-button": "onButtonClick",
            "click .artifactLink": "onArtifactClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return !e || !e.bgColor ? "" : `background-color: ${e.bgColor};`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return e ? e.join(" ") : ""
                    }
                }]
            },
            ".artifactContainer": {
                observe: "artifact",
                visible: !0
            },
            ".artifactLink": {
                attributes: [{
                    name: "href",
                    observe: "artifact",
                    onGet(e) {
                        if (!e) return null;
                        let t = "games.jackbox.tv";
                        return e.rootId.indexOf("test") !== -1 && (t = "games-test.jackbox.tv"), `https://${t}/artifact/${e.categoryId}/${e.artifactId}/`
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return e && e.buttonColor ? `background-color: ${e.buttonColor}` : null
                    }
                }]
            },
            ".characterSelect": {
                observe: "characters",
                visible: !0
            },
            ".charactersPrompt": {
                observe: "characters",
                visible: !0,
                onGet(e) {
                    return e && !ve.isEmpty(e)
                }
            },
            ".charactersPromptText": {
                observe: "strings",
                onGet() {
                    return this.getOption("strings").prompt_choosecharacter
                }
            }
        },
        strings: {},
        initialize() {
            this.titleComponent = new Wi({
                model: new we.Model({})
            }), this.choicesListView = this.choicesListView || new Ai, this.charactersListView = new Ne.CollectionView({
                childView: U1,
                className: "charactersList",
                collection: new we.Collection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        update() {
            if (this.strings = this.model.get("strings"), this.choicesListView.collection.reset(), this.titleComponent.model.set("html", this.getOption("strings").wait), this.model.get("playerIsVIP") && (this.model.get("gameCanStart") ? this.model.get("playerCanStartGame") && (this.model.get("gameIsStarting") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_cancel), this.choicesListView.collection.add({
                    className: "vipCancel",
                    html: this.getOption("strings").button_cancel,
                    action: "cancel"
                })) : this.model.get("gameFinished") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_postgame), this.choicesListView.collection.add({
                    html: this.getOption("strings").button_sameplayers,
                    action: "PostGame_Continue"
                }), this.choicesListView.collection.add({
                    html: this.getOption("strings").button_newplayers,
                    action: "PostGame_NewGame"
                })) : (this.titleComponent.model.set("html", this.getOption("strings").vip_canStart), this.choicesListView.collection.add({
                    className: "vipStart",
                    html: this.getOption("strings").button_start,
                    action: "start"
                }), this.model.get("playerCanCensor") && this.model.get("censorablePlayers").length > 0 && this.choicesListView.collection.add({
                    className: "vipCensorOptions",
                    html: this.getOption("strings").button_censorOptions,
                    action: "censorOptions"
                }))) : this.titleComponent.model.set("html", this.getOption("strings").vip_waiting)), this.model.get("playerCanDoEpisodes")) {
                if (this.model.get("activeContentId")) {
                    const n = this.model.get("activeContentId"),
                        i = this.model.get("history").find(f => n === (f.remoteContentId || f.localContentId)),
                        o = i && i.metadata ? Ze.htmlUnescape(i.metadata.title) : null;
                    o && this.choicesListView.collection.add({
                        type: "text",
                        text: o
                    }), this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_unload,
                        action: "ugc-unload",
                        block: !1
                    }), this.model.get("playerCanReport") && this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_report,
                        action: "ugc-report",
                        block: !1
                    }), this.model.get("playerCanViewAuthor") && this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_view_author,
                        action: "ugc-view-author",
                        block: !1
                    })
                } else this.choicesListView.collection.add({
                    className: "vipEpisodesMenu",
                    html: this.getOption("strings").vip_episodes_menu,
                    action: "ugc"
                });
                const t = this.model.get("lastUGCResult");
                t && t.error && this.lastUGCResultId !== t.id && (Ve.show("alert", {
                    text: t.error
                }), this.lastUGCResultId = t.id)
            }
            this.model.get("canChangeName") && this.choicesListView.collection.add({
                html: this.getOption("strings").button_changename,
                action: "changeName"
            }), this.model.get("choices") && this.choicesListView.collection.add(this.model.get("choices"));
            const e = this.model.get("characters") || [];
            this.charactersListView.collection.set(ve.map(e, t => {
                const n = this.model.get("playerInfo") || {},
                    i = t;
                return i.bgcolor = n.buttonColor, i.selected = n.avatar === i.name, i
            })), this.stickit()
        },
        onRender() {
            this.showChildView("title", this.titleComponent), this.showChildView("choices", this.choicesListView), this.showChildView("characters", this.charactersListView), this.update()
        },
        onArtifactClick() {
            this.triggerMethod("track:event", {
                category: "PostGame",
                action: "galleryClicked"
            }), yi.setAsViewed(0)
        },
        async onButtonClick(e) {
            const t = this;
            e.preventDefault();
            const i = lt(e.currentTarget).data("action");
            if (i !== "back" && i !== "censorConfirm" && i !== "activateContentId")
                if (i === "changeName") try {
                        const o = await Ve.show("custom", {
                            input: "text",
                            title: this.getOption("strings").prompt_entername,
                            customClass: {
                                input: "playerName"
                            },
                            inputAttributes: {
                                maxlength: 12
                            },
                            inputValidator: f => f ? f.length > 12 ? "Limit 12 characters" : null : "You need to write something!"
                        });
                        if (o.dismiss) return;
                        this.triggerMethod("client:message", {
                            name: o.value
                        })
                    } catch {} else if (i === "censorOptions") Ve.show("custom", {
                        target: this.el,
                        html: "",
                        confirmButtonText: this.model.get("strings").button_cancel,
                        customClass: {
                            popup: "censorOptionsModal",
                            confirmButton: "cancelButton"
                        },
                        didOpen() {
                            const o = new Ai({
                                    el: ".censorOptionsModal",
                                    action: "censor",
                                    collection: new we.Collection
                                }),
                                f = [{
                                    type: "text",
                                    className: "prompt",
                                    html: t.model.get("strings").censor_prompt
                                }, ...t.model.get("censorablePlayers").map(v => ({
                                    action: "censorConfirm",
                                    html: v.name,
                                    key: v.id
                                }))];
                            o.collection.set(f), o.render(), t.listenTo(o, "childview:button:censorConfirm", t.censorPlayer)
                        }
                    });
                    else if (i === "ugc-unload") this.triggerMethod("client:message", {
                clearContentId: !0
            });
            else if (i === "ugc-report") {
                const o = "http://support.jackboxgames.com/",
                    f = this.model.get("formattedActiveContentId");
                window.open(`${o}?episodeID=${f}`, "_blank")
            } else i === "ugc-view-author" ? this.triggerMethod("client:message", {
                viewAuthor: !0
            }) : i === "ugc" ? Ve.show("custom", {
                target: this.el,
                html: "",
                showConfirmButton: !1,
                customClass: {
                    popup: "episodesModal"
                },
                background: t.model.get("playerInfo") && t.model.get("playerInfo").bgColor ? t.model.get("playerInfo").bgColor : null,
                padding: "10px 5px",
                didOpen: () => {
                    const o = new Ai({
                        el: ".episodesModal",
                        action: "episode",
                        collection: new we.Collection([])
                    });
                    o.collection.add({
                        html: this.model.get("strings").vip_episodes_back || "Back",
                        action: "back",
                        className: "backButton"
                    }), o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_load || "Load an episode by id:",
                        className: "header"
                    }), o.collection.add({
                        type: "input",
                        preventAutosize: !0,
                        placeholder: "???-????",
                        inlineSubmit: !0,
                        inlineSubmitText: this.model.get("strings").vip_episodes_submit || "SUBMIT",
                        className: "lobbyUgcInput"
                    }), o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_warning || "Warning: user generated content is not rated",
                        className: "danger"
                    }), t.model.get("history").length && (o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_select || "Or select an episode:",
                        className: "episodesListHeader"
                    }), o.collection.add(t.model.get("history").map(f => ({
                        action: "activateContentId",
                        html: f.remoteContentId ? `${f.metadata.title}<br/>${f.formattedRemoteContentId}` : `${f.metadata.title}`,
                        key: f.remoteContentId || f.localContentId
                    })))), o.render(), lt(".lobbyUgcInput").mask("aaa-aaaa", {
                        placeholder: "???-????"
                    }), t.listenTo(o, "childview:button:activateContentId", t.activateContentId), t.listenTo(o, "childview:button:back", () => {
                        Ve.close()
                    }), t.listenTo(o, "childview:input:submit", t.activateContentIdFromInput)
                }
            }) : this.triggerMethod("client:message", {
                action: i
            })
        },
        censorPlayer(e) {
            Ve.close(), this.triggerMethod("client:message", {
                action: "censor",
                id: e.get("key")
            })
        },
        activateContentId(e) {
            Ve.close(), this.triggerMethod("client:message", {
                activateContentId: !0,
                contentId: e.get("key")
            })
        },
        activateContentIdFromInput(e) {
            (e.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase() || "").length < 7 || (this.triggerMethod("client:message", {
                activateContentId: !0,
                contentId: e.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase()
            }), Ve.close())
        },
        onChildviewChildviewCharacterClick(e) {
            e.get("available") && !e.get("selected") && (this.triggerMethod("client:message", {
                action: "avatar",
                name: e.get("name")
            }), this.charactersListView.collection.forEach(t => {
                t.unset("active"), t.set("bgcolor", this.model.get("playerInfo").buttonColor)
            }), e.set("active", !0), e.set("bgcolor", this.model.get("playerInfo").textColor))
        }
    }),
    W1 = `<div id="image" class="logo logo-image"></div>
<div id="message" class="message"><h2 class="messageText"></h2></div>
<div id="action" class="action"></div>
<div id="artifactId" class="artifactContainer text">
    <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
        <button id="artifactButton" class="artifactButton"></button>
    </a>
</div>
`,
    G1 = bi.extend({
        defaults: {
            message: {
                text: null
            },
            classes: [],
            artifact: null
        }
    }),
    X1 = Ne.View.extend({
        className: "Logo",
        template: ve.template(W1),
        model: new G1,
        events: {
            touchstart: "onTouchStart",
            "click .artifactButton": "onArtifactClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return (e || []).join(" ")
                    }
                }]
            },
            ".message": {
                attributes: [{
                    name: "style",
                    observe: "message",
                    onGet(e) {
                        let t = "";
                        return e && (e.html || e.text) || (t += "display: none;"), t
                    }
                }]
            },
            ".messageText": {
                observe: "message",
                updateMethod: "html",
                onGet(e) {
                    return !e || !e.html && !e.text ? null : e.html ? e.html : lt("<div />").text(e.text).html()
                }
            },
            "#action": "action",
            ".artifactContainer": {
                observe: "artifact",
                visible: !0
            },
            ".artifactLink": {
                attributes: [{
                    name: "href",
                    observe: "artifact",
                    onGet(e) {
                        const t = e || {
                            rootId: "",
                            categoryId: "",
                            artifactId: ""
                        };
                        let n = "games.jackbox.tv";
                        return t.rootId.indexOf("test") !== -1 && (n = "games-test.jackbox.tv"), `https://${n}/artifact/${t.categoryId}/${t.artifactId}/`
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onTouchStart(e) {
            e.target.tagName.toLowerCase() !== "button" && e.preventDefault()
        },
        onArtifactClick() {
            this.triggerMethod("track:event", {
                category: "PostGame",
                action: "galleryClicked"
            }), yi.setAsViewed(0)
        }
    }),
    $s = {
        en: {
            LANGUAGE_NAME: "English",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Language",
            LOGIN: "Login",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnected",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Thanks for playing!"
        },
        fr: {
            LANGUAGE_NAME: "Fran\xE7ais",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Langue",
            LOGIN: "Connexion",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "D\xE9connect\xE9",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Vous avez \xE9t\xE9 d\xE9connect\xE9"
        },
        it: {
            LANGUAGE_NAME: "Italiano",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Lingua",
            LOGIN: "Accesso",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnesso",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Disconnesso"
        },
        de: {
            LANGUAGE_NAME: "Deutsche",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Sprache",
            LOGIN: "Login",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Getrennt",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Getrennt"
        },
        es: {
            LANGUAGE_NAME: "Espa\xF1ol",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "idioma",
            LOGIN: "Iniciar sesi\xF3n",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Desconectado",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Desconectado"
        }
    },
    Y1 = `<div id="player" class="playerTopBar">
    <div id="playericon" class="playerIcon"></div>
    <div id="playername" class="playerName controller-text"></div>
</div>`,
    K1 = Ne.View.extend({
        className: "playerTopBarView",
        template: ve.template(Y1),
        model: new we.Model,
        bindings: {
            ":el": {
                observe: ["username", "hidden"],
                visible(e) {
                    return e[0] && !e[1]
                },
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return (e || []).join(" ")
                    }
                }]
            },
            "#playername": {
                observe: "username",
                attributes: [{
                    name: "style",
                    observe: "textColor",
                    onGet(e) {
                        return e ? `color: ${e}` : ""
                    }
                }]
            },
            ".playerTopBar": {
                observe: "username",
                visible: !0,
                attributes: [{
                    name: "style",
                    observe: "topBarColor",
                    onGet(e) {
                        return e ? `background-color: ${e}` : ""
                    }
                }]
            },
            "#playericon": {
                observe: "avatar",
                visible: !0,
                attributes: [{
                    name: "class",
                    observe: "avatar"
                }]
            }
        },
        onRender() {
            this.stickit()
        }
    }),
    J1 = `<div id="controller" class="state-controller controller-content">
    <div id="prompt" class="prompt text"></div>
    <div class="error text-danger"></div>
    <div id="choicesRegion"></div>
    <div id="chosen" class="chosen text"></div>
    <div class="makeSingleChoiceDone">
        <span class="doneText"></span>
    </div>
</div>`,
    Q1 = bi.extend({
        defaults: {
            choiceId: void 0,
            type: "single",
            censorDialog: "none",
            chosen: null,
            choices: [],
            prompt: {},
            error: null,
            block: !0,
            classes: [],
            maxVotes: 16,
            doneText: {},
            announcePrompt: !1,
            countGroupName: null,
            strings: {
                your_choice: "Thank you. Your choice: ",
                censor_prompt: "Censor this?",
                censor_confirm: "Yes, Censor!",
                censor_cancel: "No!"
            }
        }
    }),
    Z1 = Ne.View.extend({
        className: "MakeSingleChoice scrollable",
        template: ve.template(J1),
        model: new Q1,
        sessionModule: "vote",
        sessionName: " Vote",
        regions: {
            prompt: "#prompt",
            choices: "#choicesRegion"
        },
        bindings: {
            ".chosen": {
                observe: "chosen",
                updateMethod: "html",
                onGet(e) {
                    return e ? e.html ? e.html : lt("<div />").text(e.text).html() : null
                }
            },
            ".choices": {
                observe: "chosen",
                visible(e) {
                    return e === "" || e === null
                }
            },
            ".error": {
                observe: "error",
                visible: !0,
                updateView: !0
            },
            ".makeSingleChoiceDone": {
                observe: "chosen",
                visible(e) {
                    return e !== null && e !== ""
                }
            },
            ".doneText": {
                observe: "doneText",
                updateMethod: "html",
                onGet(e) {
                    return e ? e.html ? e.html : lt("<div />").text(e.text).html() : null
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return !e || !e.bgColor ? "" : `background-color: ${e.bgColor}`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(e) {
                        return e ? e.join(" ") : ""
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return e && e.buttonColor ? `background-color:${e.buttonColor}` : null
                    }
                }]
            }
        },
        initialize() {
            this.promptComponent = this.promptComponent || new Wi({
                model: new we.Model
            }), this.choicesList = this.choicesList || new Ai({
                action: "choose",
                collection: new we.Collection
            }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
        },
        onBeforeDestroy() {
            this.model.get("type") === "multiple" && this.onChildviewChildviewButtonSubmit()
        },
        update() {
            this.promptComponent.model.clear({
                silent: !0
            }).set(this.model.get("prompt")), this.choicesList.options.block = this.model.get("block"), this.choicesList.collection.set(this.model.get("choices")), this.model.get("type") === "multiple" && ve.all(this.model.get("choices"), e => !e.disabled) && this.choicesList.collection.push({
                text: "Submit",
                action: "submit",
                block: !1
            }), this.model.get("isAudience") && ((this.model.get("choiceId") === void 0 || this.model.get("choiceId") !== this.getOption("choiceId")) && (this.selected = [], this.audienceChoice = void 0, this.votesLeft = void 0), this.selected.length > 0 && (this.model.get("type") === "multiple" ? this.choicesList.children.forEach(e => {
                this.selected.find(t => t === e.getOption("index")) !== void 0 && e.model.set("selected", !0)
            }) : this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.model.get("choiceId") || 0
            }))), this.choiceId = this.model.get("choiceId") || 0, this.stickit()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.choicesList), this.stickit()
        },
        onAttach() {
            this.update(), Ve.vibrate()
        },
        onChildviewChildviewButtonChoose(e) {
            const t = e.get("action") || "choose",
                n = e.get("index"),
                i = this.model.get("type");
            switch (this.choicesList.children.forEach(o => {
                    o.model.set("disabled", i === "single"), o.model.set("active", !1)
                }), i) {
                case "multiple":
                    if (this.model.get("toggle") ? e.set("selected", !e.get("selected")) : e.set("selected", !0), this.model.get("isAudience")) {
                        const o = [];
                        this.choicesList.children.forEach(f => {
                            f.model.get("selected") && o.push(f.getOption("index"))
                        }), this.selected = o
                    }
                    return !1;
                case "repeating":
                    if (this.votesLeft === void 0 && (this.votesLeft = this.model.get("maxVotes")), this.delaySubmit || this.votesLeft <= 0 && this.model.get("isAudience")) return !1;
                    this.delaySubmit = !0, window.setTimeout(() => {
                        this.delaySubmit = !1
                    }, 101), this.votesLeft -= 1;
                    break;
                case "single":
                    e.set("selected", !0), e.set("active", !0);
                    break
            }
            return this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                action: t,
                choice: n
            }) : this.model.get("isAudience") && (this.selected = [e.get("index")], this.triggerMethod("client:countGroup", {
                name: this.model.get("countGroupName"),
                vote: n
            }), i !== "repeating" && this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.choiceId
            })), !1
        },
        displayAudienceChoice(e) {
            let t = "Thank you.";
            const n = e.map(o => {
                const f = this.choicesList.children.find(v => v.model.get("index") === o);
                return f ? f.model.get("html") || f.model.get("text") : ""
            });
            return e !== void 0 && this.model.get("strings") && (t = this.model.get("strings").your_choice + n.join(", ")), {
                html: t
            }
        },
        onChildviewChildviewButtonCensor(e) {
            const t = e.get("index"),
                n = e.get("html");
            if (this.model.get("censorDialog") === "confirm") e.get("isWarned") ? this.triggerMethod("client:message", {
                action: "censor",
                choice: t
            }) : e.set("isWarned", !0);
            else {
                if (this.model.get("censorDialog") === "warning") return Xn.close(), Xn.fire({
                    customClass: {
                        popup: "Dialog",
                        container: "container",
                        content: "content",
                        title: "title",
                        closeButton: "button closeButton",
                        cancelButton: "button cancelButton",
                        confirmButton: "button confirmButton",
                        denyButton: "button denyButton"
                    },
                    title: this.model.get("strings").censor_prompt,
                    text: n,
                    showCancelButton: !0,
                    confirmButtonText: this.model.get("strings").censor_confirm,
                    cancelButtonText: this.model.get("strings").censor_cancel,
                    confirmButtonColor: "#900"
                }).then(i => {
                    i.value && this.triggerMethod("client:message", {
                        action: "censor",
                        choice: t
                    })
                }), !1;
                this.triggerMethod("client:message", {
                    action: "censor",
                    choice: t
                })
            }
            return !1
        },
        onChildviewChildviewButtonSubmit() {
            let e = [];
            this.choicesList.children.forEach(n => {
                n.model.get("selected") && e.push(n.getOption("index"))
            });
            const t = e.join(",");
            this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                action: "submit",
                choice: t
            }) : this.model.get("isAudience") && (this.triggerMethod("client:countGroup", {
                name: this.model.get("countGroupName"),
                vote: t
            }), this.model.get("type") !== "repeating" && (e = [], this.choicesList.children.forEach(n => {
                n.model.get("selected") && e.push(n.getOption("index"))
            }), this.selected = e, this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.choiceId
            })))
        }
    });
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function cc(e, t) {
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var i = Object.getOwnPropertySymbols(e);
        t && (i = i.filter(function(o) {
            return Object.getOwnPropertyDescriptor(e, o).enumerable
        })), n.push.apply(n, i)
    }
    return n
}

function ii(e) {
    for (var t = 1; t < arguments.length; t++) {
        var n = arguments[t] != null ? arguments[t] : {};
        t % 2 ? cc(Object(n), !0).forEach(function(i) {
            tC(e, i, n[i])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : cc(Object(n)).forEach(function(i) {
            Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(n, i))
        })
    }
    return e
}

function qs(e) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? qs = function(t) {
        return typeof t
    } : qs = function(t) {
        return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
    }, qs(e)
}

function tC(e, t, n) {
    return t in e ? Object.defineProperty(e, t, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}

function wi() {
    return wi = Object.assign || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
        }
        return e
    }, wi.apply(this, arguments)
}

function eC(e, t) {
    if (e == null) return {};
    var n = {},
        i = Object.keys(e),
        o, f;
    for (f = 0; f < i.length; f++) o = i[f], !(t.indexOf(o) >= 0) && (n[o] = e[o]);
    return n
}

function nC(e, t) {
    if (e == null) return {};
    var n = eC(e, t),
        i, o;
    if (Object.getOwnPropertySymbols) {
        var f = Object.getOwnPropertySymbols(e);
        for (o = 0; o < f.length; o++) i = f[o], !(t.indexOf(i) >= 0) && (!Object.prototype.propertyIsEnumerable.call(e, i) || (n[i] = e[i]))
    }
    return n
}
var iC = "1.15.0";

function vi(e) {
    if (typeof window < "u" && window.navigator) return !!navigator.userAgent.match(e)
}
var Ci = vi(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i),
    fs = vi(/Edge/i),
    uc = vi(/firefox/i),
    ss = vi(/safari/i) && !vi(/chrome/i) && !vi(/android/i),
    th = vi(/iP(ad|od|hone)/i),
    eh = vi(/chrome/i) && vi(/android/i),
    nh = {
        capture: !1,
        passive: !1
    };

function Pe(e, t, n) {
    e.addEventListener(t, n, !Ci && nh)
}

function De(e, t, n) {
    e.removeEventListener(t, n, !Ci && nh)
}

function no(e, t) {
    if (!!t) {
        if (t[0] === ">" && (t = t.substring(1)), e) try {
            if (e.matches) return e.matches(t);
            if (e.msMatchesSelector) return e.msMatchesSelector(t);
            if (e.webkitMatchesSelector) return e.webkitMatchesSelector(t)
        } catch {
            return !1
        }
        return !1
    }
}

function rC(e) {
    return e.host && e !== document && e.host.nodeType ? e.host : e.parentNode
}

function ti(e, t, n, i) {
    if (e) {
        n = n || document;
        do {
            if (t != null && (t[0] === ">" ? e.parentNode === n && no(e, t) : no(e, t)) || i && e === n) return e;
            if (e === n) break
        } while (e = rC(e))
    }
    return null
}
var hc = /\s+/g;

function Fn(e, t, n) {
    if (e && t)
        if (e.classList) e.classList[n ? "add" : "remove"](t);
        else {
            var i = (" " + e.className + " ").replace(hc, " ").replace(" " + t + " ", " ");
            e.className = (i + (n ? " " + t : "")).replace(hc, " ")
        }
}

function ge(e, t, n) {
    var i = e && e.style;
    if (i) {
        if (n === void 0) return document.defaultView && document.defaultView.getComputedStyle ? n = document.defaultView.getComputedStyle(e, "") : e.currentStyle && (n = e.currentStyle), t === void 0 ? n : n[t];
        !(t in i) && t.indexOf("webkit") === -1 && (t = "-webkit-" + t), i[t] = n + (typeof n == "string" ? "" : "px")
    }
}

function vr(e, t) {
    var n = "";
    if (typeof e == "string") n = e;
    else
        do {
            var i = ge(e, "transform");
            i && i !== "none" && (n = i + " " + n)
        } while (!t && (e = e.parentNode));
    var o = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
    return o && new o(n)
}

function ih(e, t, n) {
    if (e) {
        var i = e.getElementsByTagName(t),
            o = 0,
            f = i.length;
        if (n)
            for (; o < f; o++) n(i[o], o);
        return i
    }
    return []
}

function ni() {
    var e = document.scrollingElement;
    return e || document.documentElement
}

function pn(e, t, n, i, o) {
    if (!(!e.getBoundingClientRect && e !== window)) {
        var f, v, y, k, A, D, $;
        if (e !== window && e.parentNode && e !== ni() ? (f = e.getBoundingClientRect(), v = f.top, y = f.left, k = f.bottom, A = f.right, D = f.height, $ = f.width) : (v = 0, y = 0, k = window.innerHeight, A = window.innerWidth, D = window.innerHeight, $ = window.innerWidth), (t || n) && e !== window && (o = o || e.parentNode, !Ci))
            do
                if (o && o.getBoundingClientRect && (ge(o, "transform") !== "none" || n && ge(o, "position") !== "static")) {
                    var tt = o.getBoundingClientRect();
                    v -= tt.top + parseInt(ge(o, "border-top-width")), y -= tt.left + parseInt(ge(o, "border-left-width")), k = v + f.height, A = y + f.width;
                    break
                } while (o = o.parentNode);
        if (i && e !== window) {
            var st = vr(o || e),
                V = st && st.a,
                ot = st && st.d;
            st && (v /= ot, y /= V, $ /= V, D /= ot, k = v + D, A = y + $)
        }
        return {
            top: v,
            left: y,
            bottom: k,
            right: A,
            width: $,
            height: D
        }
    }
}

function dc(e, t, n) {
    for (var i = Ti(e, !0), o = pn(e)[t]; i;) {
        var f = pn(i)[n],
            v = void 0;
        if (n === "top" || n === "left" ? v = o >= f : v = o <= f, !v) return i;
        if (i === ni()) break;
        i = Ti(i, !1)
    }
    return !1
}

function Cr(e, t, n, i) {
    for (var o = 0, f = 0, v = e.children; f < v.length;) {
        if (v[f].style.display !== "none" && v[f] !== de.ghost && (i || v[f] !== de.dragged) && ti(v[f], n.draggable, e, !1)) {
            if (o === t) return v[f];
            o++
        }
        f++
    }
    return null
}

function ul(e, t) {
    for (var n = e.lastElementChild; n && (n === de.ghost || ge(n, "display") === "none" || t && !no(n, t));) n = n.previousElementSibling;
    return n || null
}

function Gn(e, t) {
    var n = 0;
    if (!e || !e.parentNode) return -1;
    for (; e = e.previousElementSibling;) e.nodeName.toUpperCase() !== "TEMPLATE" && e !== de.clone && (!t || no(e, t)) && n++;
    return n
}

function fc(e) {
    var t = 0,
        n = 0,
        i = ni();
    if (e)
        do {
            var o = vr(e),
                f = o.a,
                v = o.d;
            t += e.scrollLeft * f, n += e.scrollTop * v
        } while (e !== i && (e = e.parentNode));
    return [t, n]
}

function sC(e, t) {
    for (var n in e)
        if (!!e.hasOwnProperty(n)) {
            for (var i in t)
                if (t.hasOwnProperty(i) && t[i] === e[n][i]) return Number(n)
        } return -1
}

function Ti(e, t) {
    if (!e || !e.getBoundingClientRect) return ni();
    var n = e,
        i = !1;
    do
        if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {
            var o = ge(n);
            if (n.clientWidth < n.scrollWidth && (o.overflowX == "auto" || o.overflowX == "scroll") || n.clientHeight < n.scrollHeight && (o.overflowY == "auto" || o.overflowY == "scroll")) {
                if (!n.getBoundingClientRect || n === document.body) return ni();
                if (i || t) return n;
                i = !0
            }
        } while (n = n.parentNode);
    return ni()
}

function oC(e, t) {
    if (e && t)
        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
    return e
}

function ha(e, t) {
    return Math.round(e.top) === Math.round(t.top) && Math.round(e.left) === Math.round(t.left) && Math.round(e.height) === Math.round(t.height) && Math.round(e.width) === Math.round(t.width)
}
var os;

function rh(e, t) {
    return function() {
        if (!os) {
            var n = arguments,
                i = this;
            n.length === 1 ? e.call(i, n[0]) : e.apply(i, n), os = setTimeout(function() {
                os = void 0
            }, t)
        }
    }
}

function aC() {
    clearTimeout(os), os = void 0
}

function sh(e, t, n) {
    e.scrollLeft += t, e.scrollTop += n
}

function oh(e) {
    var t = window.Polymer,
        n = window.jQuery || window.Zepto;
    return t && t.dom ? t.dom(e).cloneNode(!0) : n ? n(e).clone(!0)[0] : e.cloneNode(!0)
}
var Hn = "Sortable" + new Date().getTime();

function lC() {
    var e = [],
        t;
    return {
        captureAnimationState: function() {
            if (e = [], !!this.options.animation) {
                var i = [].slice.call(this.el.children);
                i.forEach(function(o) {
                    if (!(ge(o, "display") === "none" || o === de.ghost)) {
                        e.push({
                            target: o,
                            rect: pn(o)
                        });
                        var f = ii({}, e[e.length - 1].rect);
                        if (o.thisAnimationDuration) {
                            var v = vr(o, !0);
                            v && (f.top -= v.f, f.left -= v.e)
                        }
                        o.fromRect = f
                    }
                })
            }
        },
        addAnimationState: function(i) {
            e.push(i)
        },
        removeAnimationState: function(i) {
            e.splice(sC(e, {
                target: i
            }), 1)
        },
        animateAll: function(i) {
            var o = this;
            if (!this.options.animation) {
                clearTimeout(t), typeof i == "function" && i();
                return
            }
            var f = !1,
                v = 0;
            e.forEach(function(y) {
                var k = 0,
                    A = y.target,
                    D = A.fromRect,
                    $ = pn(A),
                    tt = A.prevFromRect,
                    st = A.prevToRect,
                    V = y.rect,
                    ot = vr(A, !0);
                ot && ($.top -= ot.f, $.left -= ot.e), A.toRect = $, A.thisAnimationDuration && ha(tt, $) && !ha(D, $) && (V.top - $.top) / (V.left - $.left) === (D.top - $.top) / (D.left - $.left) && (k = uC(V, tt, st, o.options)), ha($, D) || (A.prevFromRect = D, A.prevToRect = $, k || (k = o.options.animation), o.animate(A, V, $, k)), k && (f = !0, v = Math.max(v, k), clearTimeout(A.animationResetTimer), A.animationResetTimer = setTimeout(function() {
                    A.animationTime = 0, A.prevFromRect = null, A.fromRect = null, A.prevToRect = null, A.thisAnimationDuration = null
                }, k), A.thisAnimationDuration = k)
            }), clearTimeout(t), f ? t = setTimeout(function() {
                typeof i == "function" && i()
            }, v) : typeof i == "function" && i(), e = []
        },
        animate: function(i, o, f, v) {
            if (v) {
                ge(i, "transition", ""), ge(i, "transform", "");
                var y = vr(this.el),
                    k = y && y.a,
                    A = y && y.d,
                    D = (o.left - f.left) / (k || 1),
                    $ = (o.top - f.top) / (A || 1);
                i.animatingX = !!D, i.animatingY = !!$, ge(i, "transform", "translate3d(" + D + "px," + $ + "px,0)"), this.forRepaintDummy = cC(i), ge(i, "transition", "transform " + v + "ms" + (this.options.easing ? " " + this.options.easing : "")), ge(i, "transform", "translate3d(0,0,0)"), typeof i.animated == "number" && clearTimeout(i.animated), i.animated = setTimeout(function() {
                    ge(i, "transition", ""), ge(i, "transform", ""), i.animated = !1, i.animatingX = !1, i.animatingY = !1
                }, v)
            }
        }
    }
}

function cC(e) {
    return e.offsetWidth
}

function uC(e, t, n, i) {
    return Math.sqrt(Math.pow(t.top - e.top, 2) + Math.pow(t.left - e.left, 2)) / Math.sqrt(Math.pow(t.top - n.top, 2) + Math.pow(t.left - n.left, 2)) * i.animation
}
var ar = [],
    da = {
        initializeByDefault: !0
    },
    ps = {
        mount: function(t) {
            for (var n in da) da.hasOwnProperty(n) && !(n in t) && (t[n] = da[n]);
            ar.forEach(function(i) {
                if (i.pluginName === t.pluginName) throw "Sortable: Cannot mount plugin ".concat(t.pluginName, " more than once")
            }), ar.push(t)
        },
        pluginEvent: function(t, n, i) {
            var o = this;
            this.eventCanceled = !1, i.cancel = function() {
                o.eventCanceled = !0
            };
            var f = t + "Global";
            ar.forEach(function(v) {
                !n[v.pluginName] || (n[v.pluginName][f] && n[v.pluginName][f](ii({
                    sortable: n
                }, i)), n.options[v.pluginName] && n[v.pluginName][t] && n[v.pluginName][t](ii({
                    sortable: n
                }, i)))
            })
        },
        initializePlugins: function(t, n, i, o) {
            ar.forEach(function(y) {
                var k = y.pluginName;
                if (!(!t.options[k] && !y.initializeByDefault)) {
                    var A = new y(t, n, t.options);
                    A.sortable = t, A.options = t.options, t[k] = A, wi(i, A.defaults)
                }
            });
            for (var f in t.options)
                if (!!t.options.hasOwnProperty(f)) {
                    var v = this.modifyOption(t, f, t.options[f]);
                    typeof v < "u" && (t.options[f] = v)
                }
        },
        getEventProperties: function(t, n) {
            var i = {};
            return ar.forEach(function(o) {
                typeof o.eventProperties == "function" && wi(i, o.eventProperties.call(n[o.pluginName], t))
            }), i
        },
        modifyOption: function(t, n, i) {
            var o;
            return ar.forEach(function(f) {
                !t[f.pluginName] || f.optionListeners && typeof f.optionListeners[n] == "function" && (o = f.optionListeners[n].call(t[f.pluginName], i))
            }), o
        }
    };

function hC(e) {
    var t = e.sortable,
        n = e.rootEl,
        i = e.name,
        o = e.targetEl,
        f = e.cloneEl,
        v = e.toEl,
        y = e.fromEl,
        k = e.oldIndex,
        A = e.newIndex,
        D = e.oldDraggableIndex,
        $ = e.newDraggableIndex,
        tt = e.originalEvent,
        st = e.putSortable,
        V = e.extraEventProperties;
    if (t = t || n && n[Hn], !!t) {
        var ot, m = t.options,
            L = "on" + i.charAt(0).toUpperCase() + i.substr(1);
        window.CustomEvent && !Ci && !fs ? ot = new CustomEvent(i, {
            bubbles: !0,
            cancelable: !0
        }) : (ot = document.createEvent("Event"), ot.initEvent(i, !0, !0)), ot.to = v || n, ot.from = y || n, ot.item = o || n, ot.clone = f, ot.oldIndex = k, ot.newIndex = A, ot.oldDraggableIndex = D, ot.newDraggableIndex = $, ot.originalEvent = tt, ot.pullMode = st ? st.lastPutMode : void 0;
        var X = ii(ii({}, V), ps.getEventProperties(i, t));
        for (var ut in X) ot[ut] = X[ut];
        n && n.dispatchEvent(ot), m[L] && m[L].call(t, ot)
    }
}
var dC = ["evt"],
    Nn = function(t, n) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
            o = i.evt,
            f = nC(i, dC);
        ps.pluginEvent.bind(de)(t, n, ii({
            dragEl: zt,
            parentEl: rn,
            ghostEl: xe,
            rootEl: Qe,
            nextEl: ji,
            lastDownEl: Ws,
            cloneEl: en,
            cloneHidden: Si,
            dragStarted: Qr,
            putSortable: wn,
            activeSortable: de.active,
            originalEvent: o,
            oldIndex: dr,
            oldDraggableIndex: as,
            newIndex: zn,
            newDraggableIndex: _i,
            hideGhostForTarget: uh,
            unhideGhostForTarget: hh,
            cloneNowHidden: function() {
                Si = !0
            },
            cloneNowShown: function() {
                Si = !1
            },
            dispatchSortableEvent: function(y) {
                Dn({
                    sortable: n,
                    name: y,
                    originalEvent: o
                })
            }
        }, f))
    };

function Dn(e) {
    hC(ii({
        putSortable: wn,
        cloneEl: en,
        targetEl: zt,
        rootEl: Qe,
        oldIndex: dr,
        oldDraggableIndex: as,
        newIndex: zn,
        newDraggableIndex: _i
    }, e))
}
var zt, rn, xe, Qe, ji, Ws, en, Si, dr, zn, as, _i, Vs, wn, hr = !1,
    io = !1,
    ro = [],
    Bi, Kn, fa, pa, pc, gc, Qr, lr, ls, cs = !1,
    js = !1,
    Gs, _n, ga = [],
    La = !1,
    so = [],
    wo = typeof document < "u",
    Fs = th,
    mc = fs || Ci ? "cssFloat" : "float",
    fC = wo && !eh && !th && "draggable" in document.createElement("div"),
    ah = function() {
        if (!!wo) {
            if (Ci) return !1;
            var e = document.createElement("x");
            return e.style.cssText = "pointer-events:auto", e.style.pointerEvents === "auto"
        }
    }(),
    lh = function(t, n) {
        var i = ge(t),
            o = parseInt(i.width) - parseInt(i.paddingLeft) - parseInt(i.paddingRight) - parseInt(i.borderLeftWidth) - parseInt(i.borderRightWidth),
            f = Cr(t, 0, n),
            v = Cr(t, 1, n),
            y = f && ge(f),
            k = v && ge(v),
            A = y && parseInt(y.marginLeft) + parseInt(y.marginRight) + pn(f).width,
            D = k && parseInt(k.marginLeft) + parseInt(k.marginRight) + pn(v).width;
        if (i.display === "flex") return i.flexDirection === "column" || i.flexDirection === "column-reverse" ? "vertical" : "horizontal";
        if (i.display === "grid") return i.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
        if (f && y.float && y.float !== "none") {
            var $ = y.float === "left" ? "left" : "right";
            return v && (k.clear === "both" || k.clear === $) ? "vertical" : "horizontal"
        }
        return f && (y.display === "block" || y.display === "flex" || y.display === "table" || y.display === "grid" || A >= o && i[mc] === "none" || v && i[mc] === "none" && A + D > o) ? "vertical" : "horizontal"
    },
    pC = function(t, n, i) {
        var o = i ? t.left : t.top,
            f = i ? t.right : t.bottom,
            v = i ? t.width : t.height,
            y = i ? n.left : n.top,
            k = i ? n.right : n.bottom,
            A = i ? n.width : n.height;
        return o === y || f === k || o + v / 2 === y + A / 2
    },
    gC = function(t, n) {
        var i;
        return ro.some(function(o) {
            var f = o[Hn].options.emptyInsertThreshold;
            if (!(!f || ul(o))) {
                var v = pn(o),
                    y = t >= v.left - f && t <= v.right + f,
                    k = n >= v.top - f && n <= v.bottom + f;
                if (y && k) return i = o
            }
        }), i
    },
    ch = function(t) {
        function n(f, v) {
            return function(y, k, A, D) {
                var $ = y.options.group.name && k.options.group.name && y.options.group.name === k.options.group.name;
                if (f == null && (v || $)) return !0;
                if (f == null || f === !1) return !1;
                if (v && f === "clone") return f;
                if (typeof f == "function") return n(f(y, k, A, D), v)(y, k, A, D);
                var tt = (v ? y : k).options.group.name;
                return f === !0 || typeof f == "string" && f === tt || f.join && f.indexOf(tt) > -1
            }
        }
        var i = {},
            o = t.group;
        (!o || qs(o) != "object") && (o = {
            name: o
        }), i.name = o.name, i.checkPull = n(o.pull, !0), i.checkPut = n(o.put), i.revertClone = o.revertClone, t.group = i
    },
    uh = function() {
        !ah && xe && ge(xe, "display", "none")
    },
    hh = function() {
        !ah && xe && ge(xe, "display", "")
    };
wo && !eh && document.addEventListener("click", function(e) {
    if (io) return e.preventDefault(), e.stopPropagation && e.stopPropagation(), e.stopImmediatePropagation && e.stopImmediatePropagation(), io = !1, !1
}, !0);
var $i = function(t) {
        if (zt) {
            t = t.touches ? t.touches[0] : t;
            var n = gC(t.clientX, t.clientY);
            if (n) {
                var i = {};
                for (var o in t) t.hasOwnProperty(o) && (i[o] = t[o]);
                i.target = i.rootEl = n, i.preventDefault = void 0, i.stopPropagation = void 0, n[Hn]._onDragOver(i)
            }
        }
    },
    mC = function(t) {
        zt && zt.parentNode[Hn]._isOutsideThisEl(t.target)
    };

function de(e, t) {
    if (!(e && e.nodeType && e.nodeType === 1)) throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(e));
    this.el = e, this.options = t = wi({}, t), e[Hn] = this;
    var n = {
        group: null,
        sort: !0,
        disabled: !1,
        store: null,
        handle: null,
        draggable: /^[uo]l$/i.test(e.nodeName) ? ">li" : ">*",
        swapThreshold: 1,
        invertSwap: !1,
        invertedSwapThreshold: null,
        removeCloneOnHide: !0,
        direction: function() {
            return lh(e, this.options)
        },
        ghostClass: "sortable-ghost",
        chosenClass: "sortable-chosen",
        dragClass: "sortable-drag",
        ignore: "a, img",
        filter: null,
        preventOnFilter: !0,
        animation: 0,
        easing: null,
        setData: function(v, y) {
            v.setData("Text", y.textContent)
        },
        dropBubble: !1,
        dragoverBubble: !1,
        dataIdAttr: "data-id",
        delay: 0,
        delayOnTouchOnly: !1,
        touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
        forceFallback: !1,
        fallbackClass: "sortable-fallback",
        fallbackOnBody: !1,
        fallbackTolerance: 0,
        fallbackOffset: {
            x: 0,
            y: 0
        },
        supportPointer: de.supportPointer !== !1 && "PointerEvent" in window && !ss,
        emptyInsertThreshold: 5
    };
    ps.initializePlugins(this, e, n);
    for (var i in n) !(i in t) && (t[i] = n[i]);
    ch(t);
    for (var o in this) o.charAt(0) === "_" && typeof this[o] == "function" && (this[o] = this[o].bind(this));
    this.nativeDraggable = t.forceFallback ? !1 : fC, this.nativeDraggable && (this.options.touchStartThreshold = 1), t.supportPointer ? Pe(e, "pointerdown", this._onTapStart) : (Pe(e, "mousedown", this._onTapStart), Pe(e, "touchstart", this._onTapStart)), this.nativeDraggable && (Pe(e, "dragover", this), Pe(e, "dragenter", this)), ro.push(this.el), t.store && t.store.get && this.sort(t.store.get(this) || []), wi(this, lC())
}
de.prototype = {
    constructor: de,
    _isOutsideThisEl: function(t) {
        !this.el.contains(t) && t !== this.el && (lr = null)
    },
    _getDirection: function(t, n) {
        return typeof this.options.direction == "function" ? this.options.direction.call(this, t, n, zt) : this.options.direction
    },
    _onTapStart: function(t) {
        if (!!t.cancelable) {
            var n = this,
                i = this.el,
                o = this.options,
                f = o.preventOnFilter,
                v = t.type,
                y = t.touches && t.touches[0] || t.pointerType && t.pointerType === "touch" && t,
                k = (y || t).target,
                A = t.target.shadowRoot && (t.path && t.path[0] || t.composedPath && t.composedPath()[0]) || k,
                D = o.filter;
            if (_C(i), !zt && !(/mousedown|pointerdown/.test(v) && t.button !== 0 || o.disabled) && !A.isContentEditable && !(!this.nativeDraggable && ss && k && k.tagName.toUpperCase() === "SELECT") && (k = ti(k, o.draggable, i, !1), !(k && k.animated) && Ws !== k)) {
                if (dr = Gn(k), as = Gn(k, o.draggable), typeof D == "function") {
                    if (D.call(this, t, k, this)) {
                        Dn({
                            sortable: n,
                            rootEl: A,
                            name: "filter",
                            targetEl: k,
                            toEl: i,
                            fromEl: i
                        }), Nn("filter", n, {
                            evt: t
                        }), f && t.cancelable && t.preventDefault();
                        return
                    }
                } else if (D && (D = D.split(",").some(function($) {
                        if ($ = ti(A, $.trim(), i, !1), $) return Dn({
                            sortable: n,
                            rootEl: $,
                            name: "filter",
                            targetEl: k,
                            fromEl: i,
                            toEl: i
                        }), Nn("filter", n, {
                            evt: t
                        }), !0
                    }), D)) {
                    f && t.cancelable && t.preventDefault();
                    return
                }
                o.handle && !ti(A, o.handle, i, !1) || this._prepareDragStart(t, y, k)
            }
        }
    },
    _prepareDragStart: function(t, n, i) {
        var o = this,
            f = o.el,
            v = o.options,
            y = f.ownerDocument,
            k;
        if (i && !zt && i.parentNode === f) {
            var A = pn(i);
            if (Qe = f, zt = i, rn = zt.parentNode, ji = zt.nextSibling, Ws = i, Vs = v.group, de.dragged = zt, Bi = {
                    target: zt,
                    clientX: (n || t).clientX,
                    clientY: (n || t).clientY
                }, pc = Bi.clientX - A.left, gc = Bi.clientY - A.top, this._lastX = (n || t).clientX, this._lastY = (n || t).clientY, zt.style["will-change"] = "all", k = function() {
                    if (Nn("delayEnded", o, {
                            evt: t
                        }), de.eventCanceled) {
                        o._onDrop();
                        return
                    }
                    o._disableDelayedDragEvents(), !uc && o.nativeDraggable && (zt.draggable = !0), o._triggerDragStart(t, n), Dn({
                        sortable: o,
                        name: "choose",
                        originalEvent: t
                    }), Fn(zt, v.chosenClass, !0)
                }, v.ignore.split(",").forEach(function(D) {
                    ih(zt, D.trim(), ma)
                }), Pe(y, "dragover", $i), Pe(y, "mousemove", $i), Pe(y, "touchmove", $i), Pe(y, "mouseup", o._onDrop), Pe(y, "touchend", o._onDrop), Pe(y, "touchcancel", o._onDrop), uc && this.nativeDraggable && (this.options.touchStartThreshold = 4, zt.draggable = !0), Nn("delayStart", this, {
                    evt: t
                }), v.delay && (!v.delayOnTouchOnly || n) && (!this.nativeDraggable || !(fs || Ci))) {
                if (de.eventCanceled) {
                    this._onDrop();
                    return
                }
                Pe(y, "mouseup", o._disableDelayedDrag), Pe(y, "touchend", o._disableDelayedDrag), Pe(y, "touchcancel", o._disableDelayedDrag), Pe(y, "mousemove", o._delayedDragTouchMoveHandler), Pe(y, "touchmove", o._delayedDragTouchMoveHandler), v.supportPointer && Pe(y, "pointermove", o._delayedDragTouchMoveHandler), o._dragStartTimer = setTimeout(k, v.delay)
            } else k()
        }
    },
    _delayedDragTouchMoveHandler: function(t) {
        var n = t.touches ? t.touches[0] : t;
        Math.max(Math.abs(n.clientX - this._lastX), Math.abs(n.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag()
    },
    _disableDelayedDrag: function() {
        zt && ma(zt), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents()
    },
    _disableDelayedDragEvents: function() {
        var t = this.el.ownerDocument;
        De(t, "mouseup", this._disableDelayedDrag), De(t, "touchend", this._disableDelayedDrag), De(t, "touchcancel", this._disableDelayedDrag), De(t, "mousemove", this._delayedDragTouchMoveHandler), De(t, "touchmove", this._delayedDragTouchMoveHandler), De(t, "pointermove", this._delayedDragTouchMoveHandler)
    },
    _triggerDragStart: function(t, n) {
        n = n || t.pointerType == "touch" && t, !this.nativeDraggable || n ? this.options.supportPointer ? Pe(document, "pointermove", this._onTouchMove) : n ? Pe(document, "touchmove", this._onTouchMove) : Pe(document, "mousemove", this._onTouchMove) : (Pe(zt, "dragend", this), Pe(Qe, "dragstart", this._onDragStart));
        try {
            document.selection ? Xs(function() {
                document.selection.empty()
            }) : window.getSelection().removeAllRanges()
        } catch {}
    },
    _dragStarted: function(t, n) {
        if (hr = !1, Qe && zt) {
            Nn("dragStarted", this, {
                evt: n
            }), this.nativeDraggable && Pe(document, "dragover", mC);
            var i = this.options;
            !t && Fn(zt, i.dragClass, !1), Fn(zt, i.ghostClass, !0), de.active = this, t && this._appendGhost(), Dn({
                sortable: this,
                name: "start",
                originalEvent: n
            })
        } else this._nulling()
    },
    _emulateDragOver: function() {
        if (Kn) {
            this._lastX = Kn.clientX, this._lastY = Kn.clientY, uh();
            for (var t = document.elementFromPoint(Kn.clientX, Kn.clientY), n = t; t && t.shadowRoot && (t = t.shadowRoot.elementFromPoint(Kn.clientX, Kn.clientY), t !== n);) n = t;
            if (zt.parentNode[Hn]._isOutsideThisEl(t), n)
                do {
                    if (n[Hn]) {
                        var i = void 0;
                        if (i = n[Hn]._onDragOver({
                                clientX: Kn.clientX,
                                clientY: Kn.clientY,
                                target: t,
                                rootEl: n
                            }), i && !this.options.dragoverBubble) break
                    }
                    t = n
                } while (n = n.parentNode);
            hh()
        }
    },
    _onTouchMove: function(t) {
        if (Bi) {
            var n = this.options,
                i = n.fallbackTolerance,
                o = n.fallbackOffset,
                f = t.touches ? t.touches[0] : t,
                v = xe && vr(xe, !0),
                y = xe && v && v.a,
                k = xe && v && v.d,
                A = Fs && _n && fc(_n),
                D = (f.clientX - Bi.clientX + o.x) / (y || 1) + (A ? A[0] - ga[0] : 0) / (y || 1),
                $ = (f.clientY - Bi.clientY + o.y) / (k || 1) + (A ? A[1] - ga[1] : 0) / (k || 1);
            if (!de.active && !hr) {
                if (i && Math.max(Math.abs(f.clientX - this._lastX), Math.abs(f.clientY - this._lastY)) < i) return;
                this._onDragStart(t, !0)
            }
            if (xe) {
                v ? (v.e += D - (fa || 0), v.f += $ - (pa || 0)) : v = {
                    a: 1,
                    b: 0,
                    c: 0,
                    d: 1,
                    e: D,
                    f: $
                };
                var tt = "matrix(".concat(v.a, ",").concat(v.b, ",").concat(v.c, ",").concat(v.d, ",").concat(v.e, ",").concat(v.f, ")");
                ge(xe, "webkitTransform", tt), ge(xe, "mozTransform", tt), ge(xe, "msTransform", tt), ge(xe, "transform", tt), fa = D, pa = $, Kn = f
            }
            t.cancelable && t.preventDefault()
        }
    },
    _appendGhost: function() {
        if (!xe) {
            var t = this.options.fallbackOnBody ? document.body : Qe,
                n = pn(zt, !0, Fs, !0, t),
                i = this.options;
            if (Fs) {
                for (_n = t; ge(_n, "position") === "static" && ge(_n, "transform") === "none" && _n !== document;) _n = _n.parentNode;
                _n !== document.body && _n !== document.documentElement ? (_n === document && (_n = ni()), n.top += _n.scrollTop, n.left += _n.scrollLeft) : _n = ni(), ga = fc(_n)
            }
            xe = zt.cloneNode(!0), Fn(xe, i.ghostClass, !1), Fn(xe, i.fallbackClass, !0), Fn(xe, i.dragClass, !0), ge(xe, "transition", ""), ge(xe, "transform", ""), ge(xe, "box-sizing", "border-box"), ge(xe, "margin", 0), ge(xe, "top", n.top), ge(xe, "left", n.left), ge(xe, "width", n.width), ge(xe, "height", n.height), ge(xe, "opacity", "0.8"), ge(xe, "position", Fs ? "absolute" : "fixed"), ge(xe, "zIndex", "100000"), ge(xe, "pointerEvents", "none"), de.ghost = xe, t.appendChild(xe), ge(xe, "transform-origin", pc / parseInt(xe.style.width) * 100 + "% " + gc / parseInt(xe.style.height) * 100 + "%")
        }
    },
    _onDragStart: function(t, n) {
        var i = this,
            o = t.dataTransfer,
            f = i.options;
        if (Nn("dragStart", this, {
                evt: t
            }), de.eventCanceled) {
            this._onDrop();
            return
        }
        Nn("setupClone", this), de.eventCanceled || (en = oh(zt), en.removeAttribute("id"), en.draggable = !1, en.style["will-change"] = "", this._hideClone(), Fn(en, this.options.chosenClass, !1), de.clone = en), i.cloneId = Xs(function() {
            Nn("clone", i), !de.eventCanceled && (i.options.removeCloneOnHide || Qe.insertBefore(en, zt), i._hideClone(), Dn({
                sortable: i,
                name: "clone"
            }))
        }), !n && Fn(zt, f.dragClass, !0), n ? (io = !0, i._loopId = setInterval(i._emulateDragOver, 50)) : (De(document, "mouseup", i._onDrop), De(document, "touchend", i._onDrop), De(document, "touchcancel", i._onDrop), o && (o.effectAllowed = "move", f.setData && f.setData.call(i, o, zt)), Pe(document, "drop", i), ge(zt, "transform", "translateZ(0)")), hr = !0, i._dragStartId = Xs(i._dragStarted.bind(i, n, t)), Pe(document, "selectstart", i), Qr = !0, ss && ge(document.body, "user-select", "none")
    },
    _onDragOver: function(t) {
        var n = this.el,
            i = t.target,
            o, f, v, y = this.options,
            k = y.group,
            A = de.active,
            D = Vs === k,
            $ = y.sort,
            tt = wn || A,
            st, V = this,
            ot = !1;
        if (La) return;

        function m(Tt, vt) {
            Nn(Tt, V, ii({
                evt: t,
                isOwner: D,
                axis: st ? "vertical" : "horizontal",
                revert: v,
                dragRect: o,
                targetRect: f,
                canSort: $,
                fromSortable: tt,
                target: i,
                completed: X,
                onMove: function(Nt, Kt) {
                    return zs(Qe, n, zt, o, Nt, pn(Nt), t, Kt)
                },
                changed: ut
            }, vt))
        }

        function L() {
            m("dragOverAnimationCapture"), V.captureAnimationState(), V !== tt && tt.captureAnimationState()
        }

        function X(Tt) {
            return m("dragOverCompleted", {
                insertion: Tt
            }), Tt && (D ? A._hideClone() : A._showClone(V), V !== tt && (Fn(zt, wn ? wn.options.ghostClass : A.options.ghostClass, !1), Fn(zt, y.ghostClass, !0)), wn !== V && V !== de.active ? wn = V : V === de.active && wn && (wn = null), tt === V && (V._ignoreWhileAnimating = i), V.animateAll(function() {
                m("dragOverAnimationComplete"), V._ignoreWhileAnimating = null
            }), V !== tt && (tt.animateAll(), tt._ignoreWhileAnimating = null)), (i === zt && !zt.animated || i === n && !i.animated) && (lr = null), !y.dragoverBubble && !t.rootEl && i !== document && (zt.parentNode[Hn]._isOutsideThisEl(t.target), !Tt && $i(t)), !y.dragoverBubble && t.stopPropagation && t.stopPropagation(), ot = !0
        }

        function ut() {
            zn = Gn(zt), _i = Gn(zt, y.draggable), Dn({
                sortable: V,
                name: "change",
                toEl: n,
                newIndex: zn,
                newDraggableIndex: _i,
                originalEvent: t
            })
        }
        if (t.preventDefault !== void 0 && t.cancelable && t.preventDefault(), i = ti(i, y.draggable, n, !0), m("dragOver"), de.eventCanceled) return ot;
        if (zt.contains(t.target) || i.animated && i.animatingX && i.animatingY || V._ignoreWhileAnimating === i) return X(!1);
        if (io = !1, A && !y.disabled && (D ? $ || (v = rn !== Qe) : wn === this || (this.lastPutMode = Vs.checkPull(this, A, zt, t)) && k.checkPut(this, A, zt, t))) {
            if (st = this._getDirection(t, i) === "vertical", o = pn(zt), m("dragOverValid"), de.eventCanceled) return ot;
            if (v) return rn = Qe, L(), this._hideClone(), m("revert"), de.eventCanceled || (ji ? Qe.insertBefore(zt, ji) : Qe.appendChild(zt)), X(!0);
            var ht = ul(n, y.draggable);
            if (!ht || bC(t, st, this) && !ht.animated) {
                if (ht === zt) return X(!1);
                if (ht && n === t.target && (i = ht), i && (f = pn(i)), zs(Qe, n, zt, o, i, f, t, !!i) !== !1) return L(), ht && ht.nextSibling ? n.insertBefore(zt, ht.nextSibling) : n.appendChild(zt), rn = n, ut(), X(!0)
            } else if (ht && wC(t, st, this)) {
                var bt = Cr(n, 0, y, !0);
                if (bt === zt) return X(!1);
                if (i = bt, f = pn(i), zs(Qe, n, zt, o, i, f, t, !1) !== !1) return L(), n.insertBefore(zt, bt), rn = n, ut(), X(!0)
            } else if (i.parentNode === n) {
                f = pn(i);
                var d = 0,
                    kt, Vt = zt.parentNode !== n,
                    Pt = !pC(zt.animated && zt.toRect || o, i.animated && i.toRect || f, st),
                    Ce = st ? "top" : "left",
                    Xt = dc(i, "top", "top") || dc(zt, "top", "top"),
                    et = Xt ? Xt.scrollTop : void 0;
                lr !== i && (kt = f[Ce], cs = !1, js = !Pt && y.invertSwap || Vt), d = CC(t, i, f, st, Pt ? 1 : y.swapThreshold, y.invertedSwapThreshold == null ? y.swapThreshold : y.invertedSwapThreshold, js, lr === i);
                var Jt;
                if (d !== 0) {
                    var G = Gn(zt);
                    do G -= d, Jt = rn.children[G]; while (Jt && (ge(Jt, "display") === "none" || Jt === xe))
                }
                if (d === 0 || Jt === i) return X(!1);
                lr = i, ls = d;
                var pt = i.nextElementSibling,
                    $t = !1;
                $t = d === 1;
                var At = zs(Qe, n, zt, o, i, f, t, $t);
                if (At !== !1) return (At === 1 || At === -1) && ($t = At === 1), La = !0, setTimeout(yC, 30), L(), $t && !pt ? n.appendChild(zt) : i.parentNode.insertBefore(zt, $t ? pt : i), Xt && sh(Xt, 0, et - Xt.scrollTop), rn = zt.parentNode, kt !== void 0 && !js && (Gs = Math.abs(kt - pn(i)[Ce])), ut(), X(!0)
            }
            if (n.contains(zt)) return X(!1)
        }
        return !1
    },
    _ignoreWhileAnimating: null,
    _offMoveEvents: function() {
        De(document, "mousemove", this._onTouchMove), De(document, "touchmove", this._onTouchMove), De(document, "pointermove", this._onTouchMove), De(document, "dragover", $i), De(document, "mousemove", $i), De(document, "touchmove", $i)
    },
    _offUpEvents: function() {
        var t = this.el.ownerDocument;
        De(t, "mouseup", this._onDrop), De(t, "touchend", this._onDrop), De(t, "pointerup", this._onDrop), De(t, "touchcancel", this._onDrop), De(document, "selectstart", this)
    },
    _onDrop: function(t) {
        var n = this.el,
            i = this.options;
        if (zn = Gn(zt), _i = Gn(zt, i.draggable), Nn("drop", this, {
                evt: t
            }), rn = zt && zt.parentNode, zn = Gn(zt), _i = Gn(zt, i.draggable), de.eventCanceled) {
            this._nulling();
            return
        }
        hr = !1, js = !1, cs = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), Da(this.cloneId), Da(this._dragStartId), this.nativeDraggable && (De(document, "drop", this), De(n, "dragstart", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), ss && ge(document.body, "user-select", ""), ge(zt, "transform", ""), t && (Qr && (t.cancelable && t.preventDefault(), !i.dropBubble && t.stopPropagation()), xe && xe.parentNode && xe.parentNode.removeChild(xe), (Qe === rn || wn && wn.lastPutMode !== "clone") && en && en.parentNode && en.parentNode.removeChild(en), zt && (this.nativeDraggable && De(zt, "dragend", this), ma(zt), zt.style["will-change"] = "", Qr && !hr && Fn(zt, wn ? wn.options.ghostClass : this.options.ghostClass, !1), Fn(zt, this.options.chosenClass, !1), Dn({
            sortable: this,
            name: "unchoose",
            toEl: rn,
            newIndex: null,
            newDraggableIndex: null,
            originalEvent: t
        }), Qe !== rn ? (zn >= 0 && (Dn({
            rootEl: rn,
            name: "add",
            toEl: rn,
            fromEl: Qe,
            originalEvent: t
        }), Dn({
            sortable: this,
            name: "remove",
            toEl: rn,
            originalEvent: t
        }), Dn({
            rootEl: rn,
            name: "sort",
            toEl: rn,
            fromEl: Qe,
            originalEvent: t
        }), Dn({
            sortable: this,
            name: "sort",
            toEl: rn,
            originalEvent: t
        })), wn && wn.save()) : zn !== dr && zn >= 0 && (Dn({
            sortable: this,
            name: "update",
            toEl: rn,
            originalEvent: t
        }), Dn({
            sortable: this,
            name: "sort",
            toEl: rn,
            originalEvent: t
        })), de.active && ((zn == null || zn === -1) && (zn = dr, _i = as), Dn({
            sortable: this,
            name: "end",
            toEl: rn,
            originalEvent: t
        }), this.save()))), this._nulling()
    },
    _nulling: function() {
        Nn("nulling", this), Qe = zt = rn = xe = ji = en = Ws = Si = Bi = Kn = Qr = zn = _i = dr = as = lr = ls = wn = Vs = de.dragged = de.ghost = de.clone = de.active = null, so.forEach(function(t) {
            t.checked = !0
        }), so.length = fa = pa = 0
    },
    handleEvent: function(t) {
        switch (t.type) {
            case "drop":
            case "dragend":
                this._onDrop(t);
                break;
            case "dragenter":
            case "dragover":
                zt && (this._onDragOver(t), vC(t));
                break;
            case "selectstart":
                t.preventDefault();
                break
        }
    },
    toArray: function() {
        for (var t = [], n, i = this.el.children, o = 0, f = i.length, v = this.options; o < f; o++) n = i[o], ti(n, v.draggable, this.el, !1) && t.push(n.getAttribute(v.dataIdAttr) || EC(n));
        return t
    },
    sort: function(t, n) {
        var i = {},
            o = this.el;
        this.toArray().forEach(function(f, v) {
            var y = o.children[v];
            ti(y, this.options.draggable, o, !1) && (i[f] = y)
        }, this), n && this.captureAnimationState(), t.forEach(function(f) {
            i[f] && (o.removeChild(i[f]), o.appendChild(i[f]))
        }), n && this.animateAll()
    },
    save: function() {
        var t = this.options.store;
        t && t.set && t.set(this)
    },
    closest: function(t, n) {
        return ti(t, n || this.options.draggable, this.el, !1)
    },
    option: function(t, n) {
        var i = this.options;
        if (n === void 0) return i[t];
        var o = ps.modifyOption(this, t, n);
        typeof o < "u" ? i[t] = o : i[t] = n, t === "group" && ch(i)
    },
    destroy: function() {
        Nn("destroy", this);
        var t = this.el;
        t[Hn] = null, De(t, "mousedown", this._onTapStart), De(t, "touchstart", this._onTapStart), De(t, "pointerdown", this._onTapStart), this.nativeDraggable && (De(t, "dragover", this), De(t, "dragenter", this)), Array.prototype.forEach.call(t.querySelectorAll("[draggable]"), function(n) {
            n.removeAttribute("draggable")
        }), this._onDrop(), this._disableDelayedDragEvents(), ro.splice(ro.indexOf(this.el), 1), this.el = t = null
    },
    _hideClone: function() {
        if (!Si) {
            if (Nn("hideClone", this), de.eventCanceled) return;
            ge(en, "display", "none"), this.options.removeCloneOnHide && en.parentNode && en.parentNode.removeChild(en), Si = !0
        }
    },
    _showClone: function(t) {
        if (t.lastPutMode !== "clone") {
            this._hideClone();
            return
        }
        if (Si) {
            if (Nn("showClone", this), de.eventCanceled) return;
            zt.parentNode == Qe && !this.options.group.revertClone ? Qe.insertBefore(en, zt) : ji ? Qe.insertBefore(en, ji) : Qe.appendChild(en), this.options.group.revertClone && this.animate(zt, en), ge(en, "display", ""), Si = !1
        }
    }
};

function vC(e) {
    e.dataTransfer && (e.dataTransfer.dropEffect = "move"), e.cancelable && e.preventDefault()
}

function zs(e, t, n, i, o, f, v, y) {
    var k, A = e[Hn],
        D = A.options.onMove,
        $;
    return window.CustomEvent && !Ci && !fs ? k = new CustomEvent("move", {
        bubbles: !0,
        cancelable: !0
    }) : (k = document.createEvent("Event"), k.initEvent("move", !0, !0)), k.to = t, k.from = e, k.dragged = n, k.draggedRect = i, k.related = o || t, k.relatedRect = f || pn(t), k.willInsertAfter = y, k.originalEvent = v, e.dispatchEvent(k), D && ($ = D.call(A, k, v)), $
}

function ma(e) {
    e.draggable = !1
}

function yC() {
    La = !1
}

function wC(e, t, n) {
    var i = pn(Cr(n.el, 0, n.options, !0)),
        o = 10;
    return t ? e.clientX < i.left - o || e.clientY < i.top && e.clientX < i.right : e.clientY < i.top - o || e.clientY < i.bottom && e.clientX < i.left
}

function bC(e, t, n) {
    var i = pn(ul(n.el, n.options.draggable)),
        o = 10;
    return t ? e.clientX > i.right + o || e.clientX <= i.right && e.clientY > i.bottom && e.clientX >= i.left : e.clientX > i.right && e.clientY > i.top || e.clientX <= i.right && e.clientY > i.bottom + o
}

function CC(e, t, n, i, o, f, v, y) {
    var k = i ? e.clientY : e.clientX,
        A = i ? n.height : n.width,
        D = i ? n.top : n.left,
        $ = i ? n.bottom : n.right,
        tt = !1;
    if (!v) {
        if (y && Gs < A * o) {
            if (!cs && (ls === 1 ? k > D + A * f / 2 : k < $ - A * f / 2) && (cs = !0), cs) tt = !0;
            else if (ls === 1 ? k < D + Gs : k > $ - Gs) return -ls
        } else if (k > D + A * (1 - o) / 2 && k < $ - A * (1 - o) / 2) return xC(t)
    }
    return tt = tt || v, tt && (k < D + A * f / 2 || k > $ - A * f / 2) ? k > D + A / 2 ? 1 : -1 : 0
}

function xC(e) {
    return Gn(zt) < Gn(e) ? 1 : -1
}

function EC(e) {
    for (var t = e.tagName + e.className + e.src + e.href + e.textContent, n = t.length, i = 0; n--;) i += t.charCodeAt(n);
    return i.toString(36)
}

function _C(e) {
    so.length = 0;
    for (var t = e.getElementsByTagName("input"), n = t.length; n--;) {
        var i = t[n];
        i.checked && so.push(i)
    }
}

function Xs(e) {
    return setTimeout(e, 0)
}

function Da(e) {
    return clearTimeout(e)
}
wo && Pe(document, "touchmove", function(e) {
    (de.active || hr) && e.cancelable && e.preventDefault()
});
de.utils = {
    on: Pe,
    off: De,
    css: ge,
    find: ih,
    is: function(t, n) {
        return !!ti(t, n, t, !1)
    },
    extend: oC,
    throttle: rh,
    closest: ti,
    toggleClass: Fn,
    clone: oh,
    index: Gn,
    nextTick: Xs,
    cancelNextTick: Da,
    detectDirection: lh,
    getChild: Cr
};
de.get = function(e) {
    return e[Hn]
};
de.mount = function() {
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    t[0].constructor === Array && (t = t[0]), t.forEach(function(i) {
        if (!i.prototype || !i.prototype.constructor) throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(i));
        i.utils && (de.utils = ii(ii({}, de.utils), i.utils)), ps.mount(i)
    })
};
de.create = function(e, t) {
    return new de(e, t)
};
de.version = iC;
var un = [],
    Zr, Ma, Pa = !1,
    va, ya, oo, ts;

function SC() {
    function e() {
        this.defaults = {
            scroll: !0,
            forceAutoScrollFallback: !1,
            scrollSensitivity: 30,
            scrollSpeed: 10,
            bubbleScroll: !0
        };
        for (var t in this) t.charAt(0) === "_" && typeof this[t] == "function" && (this[t] = this[t].bind(this))
    }
    return e.prototype = {
        dragStarted: function(n) {
            var i = n.originalEvent;
            this.sortable.nativeDraggable ? Pe(document, "dragover", this._handleAutoScroll) : this.options.supportPointer ? Pe(document, "pointermove", this._handleFallbackAutoScroll) : i.touches ? Pe(document, "touchmove", this._handleFallbackAutoScroll) : Pe(document, "mousemove", this._handleFallbackAutoScroll)
        },
        dragOverCompleted: function(n) {
            var i = n.originalEvent;
            !this.options.dragOverBubble && !i.rootEl && this._handleAutoScroll(i)
        },
        drop: function() {
            this.sortable.nativeDraggable ? De(document, "dragover", this._handleAutoScroll) : (De(document, "pointermove", this._handleFallbackAutoScroll), De(document, "touchmove", this._handleFallbackAutoScroll), De(document, "mousemove", this._handleFallbackAutoScroll)), vc(), Ys(), aC()
        },
        nulling: function() {
            oo = Ma = Zr = Pa = ts = va = ya = null, un.length = 0
        },
        _handleFallbackAutoScroll: function(n) {
            this._handleAutoScroll(n, !0)
        },
        _handleAutoScroll: function(n, i) {
            var o = this,
                f = (n.touches ? n.touches[0] : n).clientX,
                v = (n.touches ? n.touches[0] : n).clientY,
                y = document.elementFromPoint(f, v);
            if (oo = n, i || this.options.forceAutoScrollFallback || fs || Ci || ss) {
                wa(n, this.options, y, i);
                var k = Ti(y, !0);
                Pa && (!ts || f !== va || v !== ya) && (ts && vc(), ts = setInterval(function() {
                    var A = Ti(document.elementFromPoint(f, v), !0);
                    A !== k && (k = A, Ys()), wa(n, o.options, A, i)
                }, 10), va = f, ya = v)
            } else {
                if (!this.options.bubbleScroll || Ti(y, !0) === ni()) {
                    Ys();
                    return
                }
                wa(n, this.options, Ti(y, !1), !1)
            }
        }
    }, wi(e, {
        pluginName: "scroll",
        initializeByDefault: !0
    })
}

function Ys() {
    un.forEach(function(e) {
        clearInterval(e.pid)
    }), un = []
}

function vc() {
    clearInterval(ts)
}
var wa = rh(function(e, t, n, i) {
        if (!!t.scroll) {
            var o = (e.touches ? e.touches[0] : e).clientX,
                f = (e.touches ? e.touches[0] : e).clientY,
                v = t.scrollSensitivity,
                y = t.scrollSpeed,
                k = ni(),
                A = !1,
                D;
            Ma !== n && (Ma = n, Ys(), Zr = t.scroll, D = t.scrollFn, Zr === !0 && (Zr = Ti(n, !0)));
            var $ = 0,
                tt = Zr;
            do {
                var st = tt,
                    V = pn(st),
                    ot = V.top,
                    m = V.bottom,
                    L = V.left,
                    X = V.right,
                    ut = V.width,
                    ht = V.height,
                    bt = void 0,
                    d = void 0,
                    kt = st.scrollWidth,
                    Vt = st.scrollHeight,
                    Pt = ge(st),
                    Ce = st.scrollLeft,
                    Xt = st.scrollTop;
                st === k ? (bt = ut < kt && (Pt.overflowX === "auto" || Pt.overflowX === "scroll" || Pt.overflowX === "visible"), d = ht < Vt && (Pt.overflowY === "auto" || Pt.overflowY === "scroll" || Pt.overflowY === "visible")) : (bt = ut < kt && (Pt.overflowX === "auto" || Pt.overflowX === "scroll"), d = ht < Vt && (Pt.overflowY === "auto" || Pt.overflowY === "scroll"));
                var et = bt && (Math.abs(X - o) <= v && Ce + ut < kt) - (Math.abs(L - o) <= v && !!Ce),
                    Jt = d && (Math.abs(m - f) <= v && Xt + ht < Vt) - (Math.abs(ot - f) <= v && !!Xt);
                if (!un[$])
                    for (var G = 0; G <= $; G++) un[G] || (un[G] = {});
                (un[$].vx != et || un[$].vy != Jt || un[$].el !== st) && (un[$].el = st, un[$].vx = et, un[$].vy = Jt, clearInterval(un[$].pid), (et != 0 || Jt != 0) && (A = !0, un[$].pid = setInterval(function() {
                    i && this.layer === 0 && de.active._onTouchMove(oo);
                    var pt = un[this.layer].vy ? un[this.layer].vy * y : 0,
                        $t = un[this.layer].vx ? un[this.layer].vx * y : 0;
                    typeof D == "function" && D.call(de.dragged.parentNode[Hn], $t, pt, e, oo, un[this.layer].el) !== "continue" || sh(un[this.layer].el, $t, pt)
                }.bind({
                    layer: $
                }), 24))), $++
            } while (t.bubbleScroll && tt !== k && (tt = Ti(tt, !1)));
            Pa = A
        }
    }, 30),
    dh = function(t) {
        var n = t.originalEvent,
            i = t.putSortable,
            o = t.dragEl,
            f = t.activeSortable,
            v = t.dispatchSortableEvent,
            y = t.hideGhostForTarget,
            k = t.unhideGhostForTarget;
        if (!!n) {
            var A = i || f;
            y();
            var D = n.changedTouches && n.changedTouches.length ? n.changedTouches[0] : n,
                $ = document.elementFromPoint(D.clientX, D.clientY);
            k(), A && !A.el.contains($) && (v("spill"), this.onSpill({
                dragEl: o,
                putSortable: i
            }))
        }
    };

function hl() {}
hl.prototype = {
    startIndex: null,
    dragStart: function(t) {
        var n = t.oldDraggableIndex;
        this.startIndex = n
    },
    onSpill: function(t) {
        var n = t.dragEl,
            i = t.putSortable;
        this.sortable.captureAnimationState(), i && i.captureAnimationState();
        var o = Cr(this.sortable.el, this.startIndex, this.options);
        o ? this.sortable.el.insertBefore(n, o) : this.sortable.el.appendChild(n), this.sortable.animateAll(), i && i.animateAll()
    },
    drop: dh
};
wi(hl, {
    pluginName: "revertOnSpill"
});

function dl() {}
dl.prototype = {
    onSpill: function(t) {
        var n = t.dragEl,
            i = t.putSortable,
            o = i || this.sortable;
        o.captureAnimationState(), n.parentNode && n.parentNode.removeChild(n), o.animateAll()
    },
    drop: dh
};
wi(dl, {
    pluginName: "removeOnSpill"
});
de.mount(new SC);
de.mount(dl, hl);
const kC = `<div id="controller" class="state-controller controller-content">\r
    <div id="prompt" class="prompt text"></div>\r
    <div class="error text-danger"></div>\r
    <div id="choicesRegion"></div>\r
    <div id="chosen" class="chosen text"></div>\r
    <div class="makeSingleChoiceDone">\r
        <span class="doneText"></span>\r
    </div>\r
</div>`,
    TC = bi.extend({
        defaults: {
            choiceId: void 0,
            type: "single",
            censorDialog: "none",
            chosen: null,
            choices: [],
            prompt: {},
            error: null,
            block: !0,
            classes: [],
            maxVotes: 16,
            doneText: {},
            announcePrompt: !1,
            strings: {
                your_choice: "Thank you. Your choice: ",
                censor_prompt: "Censor this?",
                censor_confirm: "Yes, Censor!",
                censor_cancel: "No!"
            }
        }
    }),
    AC = Ne.View.extend({
        tagName: "div",
        className: "sortable-item",
        template: ve.template("<div class='text'></div>"),
        model: new we.Model({}),
        bindings: {
            ":el": {
                attributes: [{
                    name: "data-id",
                    observe: "key"
                }]
            },
            ".text": "html"
        },
        onAttach() {
            this.stickit()
        }
    }),
    yc = Ne.CollectionView.extend({
        tagName: "div",
        className: "sortable-collection",
        childView: AC,
        collection: new we.Collection([]),
        initialize(e) {
            this.listenTo(this.collection, "sync", this.render), this.mergeOptions(e, ["block"])
        }
    }),
    OC = Ne.View.extend({
        className: "SorterView",
        template: ve.template(`
        <div id="rankedChoicesRegion"></div>
        <div class="instructions">Choose where this item ranks:</div>
        <div id="unrankedChoicesRegion"></div>
        <div id="lockInRegion"></div>
    `),
        model: new we.Model({
            rankedLength: 1,
            choices: []
        }),
        bindings: {
            ".instructions": {
                observe: "rankedLength",
                visible: !0,
                onGet(e) {
                    return e < 3
                }
            },
            "#unrankedChoicesRegion": {
                observe: ["rankedLength", "choices"],
                visible: !0,
                onGet(e) {
                    return e[0] !== e[1].length
                }
            },
            "#lockInRegion": {
                observe: ["rankedLength", "choices"],
                visible: !0,
                onGet(e) {
                    return e[0] === e[1].length
                }
            }
        },
        regions: {
            rankedChoices: "#rankedChoicesRegion",
            unrankedChoices: "#unrankedChoicesRegion",
            lockInRegion: "#lockInRegion"
        },
        initialize() {
            this.rankedCollectionView = this.rankedCollectionView || new yc({
                collection: new we.Collection([])
            }), this.unrankedCollectionView = this.unrankedCollectionView || new yc({
                className: "sortable-collection unranked",
                collection: new we.Collection([])
            }), this.lockInView = this.lockInView || new Yu({
                block: !1,
                model: new we.Model({
                    action: "lock",
                    html: "Lock In"
                })
            }), this.listenTo(this.model, "change:choices", this.update, this)
        },
        onAttach() {
            this.showChildView("rankedChoices", this.rankedCollectionView), this.showChildView("unrankedChoices", this.unrankedCollectionView), this.showChildView("lockInRegion", this.lockInView), this.stickit(), this.update()
        },
        update() {
            const e = this.model.get("choices"),
                t = e.slice(0, 1),
                n = e.slice(1);
            this.rankedSortable && this.rankedSortable.destroy(), this.rankedCollectionView.collection.set(t), this.rankedSortable = de.create(this.rankedCollectionView.el, {
                group: "shared",
                onSort: this.handleOnSort.bind(this),
                animation: 100,
                delay: 100
            }), this.unrankedSortable && this.unrankedSortable.destroy(), this.unrankedCollectionView.collection.set(n), this.unrankedSortable = de.create(this.unrankedCollectionView.el, {
                className: "unranked",
                group: {
                    name: "shared",
                    put: !1
                },
                sort: !1
            })
        },
        moveItemInArray(e, t, n) {
            const i = e.slice(0);
            if (t === n) return i;
            const o = i[t];
            return i.splice(t, 1), i.splice(n, 0, o), i
        },
        handleOnSort() {
            const e = this.model.get("choices"),
                t = this.rankedSortable.toArray();
            t.length === e.length && this.triggerMethod("sorted", t), this.model.set("rankedLength", t.length)
        },
        onChildviewButtonLock() {
            const e = this.rankedSortable.toArray();
            this.triggerMethod("lock", e)
        }
    }),
    RC = Ne.View.extend({
        className: "Sortable scrollable",
        template: ve.template(kC),
        model: new TC,
        regions: {
            prompt: "#prompt",
            choices: "#choicesRegion"
        },
        initialize() {
            this.promptComponent = this.promptComponent || new Wi({
                model: new we.Model
            }), this.sorterView = this.sorterView || new OC({}), this.listenTo(this.model, "change", this.update, this)
        },
        onAttach() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.sorterView)
        },
        update() {
            this.promptComponent.model.set(this.model.get("prompt")), this.model.get("choices").length !== this.sorterView.model.get("choices").length && this.sorterView.model.set("choices", this.model.get("choices"))
        },
        onChildviewSorted(e) {
            this.triggerMethod("client:message", {
                action: "sort",
                order: e
            })
        },
        onChildviewLock(e) {
            this.triggerMethod("client:message", {
                action: "sort",
                lock: !0,
                order: e
            })
        }
    }),
    IC = `<div id="controller" class="state-controller controller-content">
	<div class="ugc-action-toggle-visibility">
    	<span class="text toggle_prompts_prompt">toggle_prompts_prompt</span><br/>
    	<button id="ugc-toggle-visibility-button-controller" class="ugc-toggle-visibility-button ugc-toggle-visibility-button-controller" data-target="controller"></button>
    	<button id="ugc-toggle-visibility-button-screen" class="ugc-toggle-visibility-button  ugc-toggle-visibility-button-screen" data-target="screen"></button>
    </div>
    <div class="ugc-action-play">
        <div class="ugc-episode-name"></div>
    </div>
	<div class="ugc-action-new">
		<button class="button action-button create_new_episode" type="button" id="ugc-new-button">create_new_episode</button>
	</div>

	<div class="ugc-action-load">
    	<p class="ugc-option text-box ugc-load previous_episodes">previous_episodes</p>
		<div id="episodesRegion"></div>
	</div>

    <div id="prompt" class="prompt ugc-text"></div>
    <div id="ugc-no-actions">
    	<div id="ugc-no-actions-text"></div>
    </div>

    <div class="ugc-action-add">
    	<div id="inputRegion"></div>
    </div>

    <div class="ugc-action-title">
		<p class="text-box">
            <span class='text create_new_name_prompt'>create_new_name_prompt</span>
        </p>
    	<div id="titleInputRegion"></div>
    </div>

    <div class="ugc-action-close">
    	<button class="button action-button button_close" data-action="close">button_close</button>
    </div>
    <div class="ugc-action-unlock">
    	<button class="button action-button button_edit" data-action="unlock">button_edit</button>
    </div>
	<div class="ugc-action-done">
    	<button class="button action-button button_done" data-action="done">button_done</button>
    </div>
	<div class="ugc-action-submit">
    	<button class="button action-button button_publish" data-action="submit">button_publish</button>
    </div>

    <div class="ugc-action-play">
        <button class="button action-button button_play" data-action="play">button_play</button>
    </div>

    <div class="ugc-action-remove-content">
        <button class="button action-button button_delete" data-action="remove-content">button_delete</button>
    </div>

    <div class="ugc-action-exit">
        <button class="button action-button button_back_to_menu" data-action="exit">button_back_to_menu</button>
    </div>

    <div class="ugc-action-episodes">
        <button class="button action-button button_back_to_episodes" data-action="episodes">button_back_to_episodes</button>
    </div>

    <div class="ugc-action-remove">
        <div id="promptsCount" class="promptsCount"></div>
    	<div id="promptsRegion"></div>
    </div>
</div>`,
    LC = bi.extend({
        defaults: {
            controllerVisibility: !0,
            episodes: [],
            episodeTitle: "",
            index: 0,
            maxContentLength: 45,
            maxTitleLength: 20,
            name: "",
            noActionsText: "",
            prompts: [],
            screenVisibility: !0,
            state: "UGC",
            text: "",
            validActions: [],
            strings: {
                tos_warning: "By sharing content, you agree to our Terms of service",
                tos_warning_agree: "agree and share",
                tos_warning_back: "back to menu",
                create_new_episode: "create a new episode",
                create_new_name_prompt: "first things first, enter a name for the episode that will contain all your prompts and hit create.",
                create_new_button: "create",
                button_back_to_episodes: "back to episodes",
                button_back_to_menu: "back to menu",
                previous_episodes: "previous episodes:",
                toggle_prompts_prompt: "tap to show/hide prompts",
                button_close: "close",
                button_done: "done",
                button_add: "add prompt",
                input_placeholder: "enter a prompt",
                label_hidden: "hidden",
                button_edit: "edit",
                button_save: "save",
                button_publish: "publish",
                button_play: "play",
                button_delete: "delete",
                delete_warning: "Are you sure you want to delete this episode?",
                delete_warning_confirm: "Yes",
                delete_warning_cancel: "No"
            }
        }
    }),
    DC = Ne.View.extend({
        className: "UGC scrollable",
        template: ve.template(IC),
        model: new LC,
        regions: {
            prompt: "#prompt",
            episodes: "#episodesRegion",
            input: "#inputRegion",
            titleInput: "#titleInputRegion",
            prompts: "#promptsRegion"
        },
        events: {
            "click #ugc-new-button": "onNewButtonClicked",
            "click #ugc-toggle-visibility-button-controller": "onToggleVisibilityController",
            "click #ugc-toggle-visibility-button-screen": "onToggleVisibilityScreen",
            "click .action-button": "onActionButtonClicked"
        },
        bindings: {
            ".ugc-text": {
                observe: "text",
                visible: !0,
                updateView: !0
            },
            ".ugc-action-add": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("add") !== -1
                }
            },
            ".ugc-action-close": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("close") !== -1
                }
            },
            ".ugc-action-exit": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("exit") !== -1
                }
            },
            ".ugc-action-load": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("load") !== -1
                }
            },
            ".ugc-action-new": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("new") !== -1
                }
            },
            ".ugc-action-play": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("play") !== -1
                }
            },
            ".ugc-action-remove": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("remove") !== -1
                }
            },
            ".ugc-action-remove-content": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("remove-content") !== -1
                }
            },
            ".ugc-action-done": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("done") !== -1
                }
            },
            ".ugc-action-submit": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("submit") !== -1
                }
            },
            ".ugc-action-title": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("title") !== -1
                }
            },
            ".ugc-action-toggle-visibility": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("toggle-visibility") !== -1
                }
            },
            ".ugc-action-unlock": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("unlock") !== -1
                }
            },
            ".ugc-action-episodes": {
                observe: "validActions",
                visible(e) {
                    return e && e.indexOf("episodes") !== -1
                }
            },
            "#ugc-no-actions": {
                observe: "validActions",
                visible(e) {
                    return !e || e.length === 0
                }
            },
            "#ugc-no-actions-text": {
                observe: "noActionsText",
                onGet(e) {
                    return typeof e == "string" ? e : ""
                }
            },
            "#ugc-toggle-visibility-button-controller": {
                classes: {
                    on: "controllerVisibility"
                }
            },
            "#ugc-toggle-visibility-button-screen": {
                classes: {
                    on: "screenVisibility"
                }
            },
            ".ugc-episode-name": "episodeTitle",
            ".create_new_episode": {
                observe: "strings",
                onGet(e) {
                    return e.create_new_episode || "create_new_episode"
                }
            },
            ".previous_episodes": {
                observe: "strings",
                onGet(e) {
                    return e.previous_episodes || "previous_episodes"
                }
            },
            ".toggle_prompts_prompt": {
                observe: "strings",
                onGet(e) {
                    return e.toggle_prompts_prompt || "toggle_prompts_prompt"
                }
            },
            ".create_new_name_prompt": {
                observe: "strings",
                onGet(e) {
                    return e.create_new_name_prompt || "create_new_name_prompt"
                }
            },
            ".button_close": {
                observe: "strings",
                onGet(e) {
                    return e.button_close || "button_close"
                }
            },
            ".button_edit": {
                observe: "strings",
                onGet(e) {
                    return e.button_edit || "button_edit"
                }
            },
            ".button_done": {
                observe: "strings",
                onGet(e) {
                    return e.button_done || "button_done"
                }
            },
            ".button_publish": {
                observe: "strings",
                onGet(e) {
                    return e.button_publish || "button_publish"
                }
            },
            ".button_play": {
                observe: "strings",
                onGet(e) {
                    return e.button_play || "button_play"
                }
            },
            ".button_delete": {
                observe: "strings",
                onGet(e) {
                    return e.button_delete || "button_delete"
                }
            },
            ".button_back_to_episodes": {
                observe: "strings",
                onGet(e) {
                    return e.button_back_to_episodes || "button_back_to_episodes"
                }
            },
            ".button_back_to_menu": {
                observe: "strings",
                onGet(e) {
                    return e.button_back_to_menu || "button_back_to_menu"
                }
            },
            "#promptsCount": {
                observe: ["prompts", "strings", "count", "maxCount"],
                onGet() {
                    const e = this.model.get("count"),
                        t = this.model.get("maxCount"),
                        n = this.model.get("prompts") || [],
                        i = this.model.get("strings").label_hidden || "hidden",
                        o = n.length;
                    let f = `${e}/${t}`;
                    return o < e && (f += ` (${e-o} ${i})`), f
                }
            }
        },
        initialize(e) {
            this.client = e.client, this.promptComponent = this.promptComponent || new Wi({
                model: new we.Model
            }), this.episodesList = this.episodesList || new Ai({
                action: "load",
                collection: new we.Collection
            }), this.inputComponent = this.inputComponent || new eo({
                model: new we.Model({
                    inlineSubmit: !0,
                    inlineSubmitText: "",
                    className: "addPrompt",
                    counter: !0
                })
            }), this.titleInputComponent = this.titleInputComponent || new eo({
                model: new we.Model({
                    inlineSubmit: !0,
                    counter: !0
                })
            }), this.promptsList = this.promptsList || new Ai({
                action: "remove",
                collection: new we.Collection
            }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("episodes", this.episodesList), this.showChildView("input", this.inputComponent), this.showChildView("titleInput", this.titleInputComponent), this.showChildView("prompts", this.promptsList)
        },
        onAttach() {
            this.stickit(), this.update(), Ve.vibrate()
        },
        update() {
            const e = this.model.get("validActions").length === 0 ? this.model.get("noActionsText") : this.model.get("text");
            this.promptComponent.model.set("text", e);
            const t = this.model.get("episodes").map(n => {
                const i = Ze.htmlUnescape(n.metadata.title);
                let o = Ze.safeText(i);
                return o += n.remoteContentId !== null ? `<br><div class='episodeId'>${n.formattedRemoteContentId}</div>` : "", {
                    key: n.remoteContentId || n.localContentId,
                    html: o
                }
            });
            this.episodesList.collection.set(t), this.inputComponent.model.set("maxLength", this.model.get("maxContentLength")), this.inputComponent.model.set("inlineSubmitText", this.model.get("strings").button_add), this.titleInputComponent.model.set("maxLength", this.model.get("maxTitleLength")), this.titleInputComponent.model.set("inlineSubmitText", this.model.get("strings").create_new_button), this.promptsList.collection.set(this.model.get("prompts").map(n => {
                const i = ve.extend({}, n);
                i.text = Ze.htmlUnescape(n.text);
                let o = n.author !== this.client.userId ? "other" : "self";
                return n.className && (o += ` ${n.className}`), {
                    ...i,
                    className: o
                }
            }))
        },
        onNewButtonClicked() {
            this.triggerMethod("client:message", {
                action: "new"
            })
        },
        onChildviewInputSubmit() {
            let e, t;
            this.model.get("validActions").indexOf("add") !== -1 ? (e = "add", t = this.inputComponent.getSanitizedValue(), this.inputComponent.clearInput(), this.inputComponent.focus()) : this.model.get("validActions").indexOf("title") !== -1 && (e = "title", t = this.titleInputComponent.getValue(), this.titleInputComponent.clearInput()), !(!e || !t) && this.triggerMethod("client:message", {
                action: e,
                text: t
            })
        },
        onChildviewChildviewButtonLoad(e) {
            this.triggerMethod("client:message", {
                action: "load",
                contentId: e.get("key")
            })
        },
        onChildviewChildviewButtonRemove(e) {
            this.triggerMethod("client:message", {
                action: "remove",
                key: e.get("key")
            })
        },
        onToggleVisibilityController() {
            this.triggerMethod("client:message", {
                action: "toggle-visibility",
                target: "controller"
            })
        },
        onToggleVisibilityScreen() {
            this.triggerMethod("client:message", {
                action: "toggle-visibility",
                target: "screen"
            })
        },
        onActionButtonClicked(e) {
            const t = lt(e.currentTarget).data("action");
            if (t === "submit") {
                this.showTermsOfService();
                return
            }
            if (t === "remove-content") {
                this.showConfirmDeleteDialog();
                return
            }
            this.triggerMethod("client:message", {
                action: t
            })
        },
        showTermsOfService() {
            const e = `
            <a href='https://www.jackboxgames.com/terms-of-service/' target='_blank' >
                <br>
                <div class="tosLink">
                    <svg
                        class="bi bi-link-45deg"
                        width="1em"
                        height="1em"
                        viewBox="0 0 16 16"
                        fill="currentColor"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M4.715 6.542L3.343 7.914a3 3 0 1 0 4.243 4.243
                                l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.001 1.001 0 0 0-.154.199 2 2 0 0 1 .861 3.337
                                L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"
                        />
                        <path
                            d="M5.712 6.96l.167-.167a1.99 1.99 0 0 1 .896-.518 1.99 1.99 0 0 1 .518-.896
                                l.167-.167A3.004 3.004 0 0 0 6 5.499c-.22.46-.316.963-.288 1.46z"
                        />
                        <path
                            d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346
                                L9.12 3.55a2 2 0 0 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287
                                l1.372-1.372a3 3 0 0 0-4.243-4.243L6.586 4.672z"
                        />
                        <path
                            d="M10 9.5a2.99 2.99 0 0 0 .288-1.46
                                l-.167.167a1.99 1.99 0 0 1-.896.518 1.99 1.99 0 0 1-.518.896
                                l-.167.167A3.004 3.004 0 0 0 10 9.501z"
                        />
                    </svg>
                </div>
            </a>
        `;
            Xn.fire({
                target: this.el,
                html: `${this.model.get("strings").tos_warning}${e}`,
                showCancelButton: !0,
                confirmButtonText: this.model.get("strings").tos_warning_agree,
                cancelButtonText: this.model.get("strings").tos_warning_back,
                customClass: {
                    popup: "ugcModal",
                    confirmButton: "button confirmButton",
                    cancelButton: "button cancelButton"
                }
            }).then(t => {
                t.value && this.triggerMethod("client:message", {
                    action: "submit"
                })
            })
        },
        showConfirmDeleteDialog() {
            Xn.fire({
                target: this.el,
                text: this.model.get("strings").delete_warning,
                showCancelButton: !0,
                confirmButtonText: this.model.get("strings").delete_warning_confirm,
                cancelButtonText: this.model.get("strings").delete_warning_cancel,
                customClass: {
                    popup: "ugcModal",
                    confirmButton: "button confirmButton",
                    cancelButton: "button cancelButton"
                }
            }).then(e => {
                e.value && this.triggerMethod("client:message", {
                    action: "remove-content"
                })
            })
        },
        onChildviewChildviewButtonChoose(e) {
            const t = e.get("text");
            this.triggerMethod("client:message", {
                action: "remove",
                text: t
            })
        }
    }),
    MC = `<svg id="range-picker" class="range-picker" viewBox="-40 -40 80 80">
    <defs>
        <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
            <stop offset="0%" style="stop-color:rgb(0,0,0); stop-opacity:0.5" />
            <stop offset="60%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="80%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0.7" />
        </radialGradient>
        <svg id="Layer_3" data-name="Layer 3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.67 271.33">
            <title>astroIcon</title>
            <path class="cls-1" d="M253.83,108.17H210.89A57.83,57.83,0,0,1,160,138.5H140a57.83,57.83,0,0,1-50.89-30.33H46.17a19.5,19.5,0,0,0-19.5,19.5v11a19.5,19.5,0,0,0,19.5,19.5H70.4a19.5,19.5,0,0,1,19.5,19.5V259.8a17.37,17.37,0,0,0,17.36,17.37H115A17.37,17.37,0,0,0,132.4,259.8V236.53a17.37,17.37,0,0,1,17.37-17.36h0a17.36,17.36,0,0,1,17.36,17.36V259.8a17.37,17.37,0,0,0,17.37,17.37h9a17.37,17.37,0,0,0,17.36-17.37V177.67a19.5,19.5,0,0,1,19.5-19.5h23.49a19.5,19.5,0,0,0,19.5-19.5v-11A19.5,19.5,0,0,0,253.83,108.17Z" transform="translate(-18.17 -14.33)"/>
            <rect class="cls-1" x="64" y="8.5" width="135.67" height="115.67" rx="57.83" ry="57.83"/>
        </svg>
        <svg
           xmlns:dc="http://purl.org/dc/elements/1.1/"
           xmlns:cc="http://creativecommons.org/ns#"
           xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns="http://www.w3.org/2000/svg"
           height="55"
           width="40"
           xml:space="preserve"
           viewBox="-20 -27.5 40 55"
           y="0px"
           x="0px"
           id="Layer_1"
           version="1.1"><metadata
           id="metadata10"><rdf:RDF><cc:Work
               rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
                 rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
           id="defs8" />
        <path
           style="fill:#ffffff"
           d="m -20,27.5 20,-55 20,55 -20,-13 z"
           class="st0"
           id="aimArrow" />
        </svg>

    </defs>

    <circle class="background" r="16" cx="0" cy="0" />
    <circle class="background-gradient" r="32" cx="0" cy="0" fill="url(#grad1)" />
    <circle class="background-border" r=33 cx=0 cy=0 stroke="black" stroke-width="2" fill="none" />
    <circle id="health-display" class="health-display" r="33" cx="0" cy="0" />
    <circle class="circle-deadzone" fill="black" fill-opacity="0.8" r=1 cx=0 cy=0 stroke="white" stroke-width="0.3" stroke-dasharray="3.5 1.52" />
    
    <circle class="crosshair-center" r=1 cx=0 cy=0 />
    <circle class="circle-border-white" r="32" cx="0" cy="0" stroke="#ffffff" stroke-width="0.3" fill="none"/>
    <line class="line-helper-left" x1="-32" y1="0" x2="0" y2="0" ></line>
    <line class="line-helper-right" x1="32" y1="0" x2="0" y2="0" ></line>
    <circle class="locked-in-fade" r="17" cx="0" cy="0" />
    <line class="locked-in-line" x1="0" y1="0" x2="0" y2="0" display="inline"></line>
    <use class="aimArrow" xlink:href="#Layer_1" transform="rotate(180)" x="-2" y="-2.5" width="4" height="5"></use>
    <use class="astro" xlink:href="#Layer_3" transform="translate(-8, -8)" width="16" height="16"></use>
    <text id="text" class="text" x=0 y=10 text-anchor="middle" font-size=30 stroke="white">H</text>
</svg>`,
    PC = Ne.View.extend({
        className: "RadialView",
        template: ve.template(MC),
        model: new we.Model({
            isTouching: !1,
            angle: 0,
            vector: {
                x: 0,
                y: 0
            },
            touchBuffer: 5
        }),
        events: {
            "mousedown .range-picker": "start",
            "touchstart .range-picker": "start",
            "touchmove .range-picker": "start",
            touchmove: "move",
            touchend: "end"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "lockedIn" : ""
                    }
                }]
            },
            ".background": {
                attributes: [{
                    name: "style",
                    observe: "accentColor",
                    onGet(e) {
                        return `stroke: ${e}`
                    }
                }]
            },
            ".health-display": {
                attributes: [{
                    name: "style",
                    observe: ["selector", "accentColor"],
                    onGet(e) {
                        let t = "";
                        const n = e[0],
                            i = e[1];
                        i && (t += `stroke:${i};`);
                        const o = n * 207,
                            f = 207 * (1 - n);
                        return t += `stroke-dasharray:${o} ${f};`, t += `transform:rotate(${-360*n-90}deg);`, t
                    }
                }]
            },
            ".line-helper-left": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "none" : "inline"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.y : 1
                    }
                }]
            },
            ".line-helper-right": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "none" : "inline"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.y : 1
                    }
                }]
            },
            ".locked-in-line": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "inline" : "none"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.y : 1
                    }
                }]
            },
            ".circle-deadzone": {
                attributes: [{
                    name: "r",
                    observe: "isTouching",
                    onGet(e) {
                        return "9.6"
                    }
                }]
            },
            ".text": "text",
            ".astro": {
                attributes: [{
                    name: "style",
                    observe: ["accentColor", "lockedIn"],
                    onGet(e) {
                        let t = "";
                        return t += `fill:${e[1]?"black":e[0]};`, t += `stroke:${e[1]?"#cccccc":"#ff00ff"};`, t
                    }
                }, {
                    name: "x",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.x : 1
                    }
                }, {
                    name: "y",
                    observe: "vector",
                    onGet(e) {
                        return e ? e.y : 1
                    }
                }, {
                    name: "width",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? 8 : 16
                    }
                }, {
                    name: "height",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? 8 : 16
                    }
                }, {
                    name: "transform",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "translate(-4, -4)" : "translate(-8,-8)"
                    }
                }]
            },
            ".locked-in-fade": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(e) {
                        return e ? "inline" : "none"
                    }
                }]
            },
            ".aimArrow": {
                attributes: [{
                    name: "transform",
                    observe: "angle",
                    onGet(e) {
                        let t = "";
                        return t += ` rotate(${e+180})`, t
                    }
                }, {
                    name: "display",
                    observe: ["lockedIn", "vector"],
                    onGet(e) {
                        return e[0] && this.getDistance(e[1]) > 0 ? "inline" : "none"
                    }
                }]
            }
        },
        initialize() {
            this.model.on("change:angle", this.updateAngle, this), this.model.on("change:vector", this.updateVector, this), this.model.on("change:isTouching", this.updateIsTouching, this)
        },
        updateAngle() {
            this.triggerMethod("angle", this.model.get("angle"))
        },
        updateVector() {
            this.triggerMethod("vector", this.getNormalizedVector())
        },
        updateIsTouching() {
            this.triggerMethod("isTouching", this.model.get("isTouching"))
        },
        onRender() {
            this.stickit()
        },
        start(e) {
            const t = this.eventToCoord(e);
            this.startCoord || (this.startCoord = t)
        },
        move(e) {
            e.preventDefault();
            const t = this.eventToCoord(e);
            if (!this.model.get("isTouching") && this.startCoord && this.getDistance(t, this.startCoord) > this.model.get("touchBuffer") && this.model.set("isTouching", !0), !this.model.get("isTouching") || this.model.get("lockedIn")) return;
            const n = this.coordToVector(t);
            this.model.set("vector", n);
            const i = this.coordToAngle(t);
            this.model.set("angle", i)
        },
        end() {
            this.startCoord = null, this.model.get("isTouching") && (this.model.set("isTouching", !1), this.triggerMethod("end", this.model))
        },
        getDistance(e, t) {
            t || (t = {
                x: 0,
                y: 0
            });
            const n = {
                x: t.x - e.x,
                y: t.y - e.y
            };
            return Math.sqrt(n.x ** 2 + n.y ** 2)
        },
        getNormalizedVector() {
            const e = ve.extend({}, this.model.get("vector"));
            return e.x /= 32, e.y /= 32, e
        },
        eventToCoord(e) {
            const t = this.$el[0].getBoundingClientRect();
            return e.targetTouches && e.targetTouches instanceof TouchList && e.targetTouches.length > 0 ? {
                x: e.targetTouches[0].pageX - t.left,
                y: e.targetTouches[0].pageY - t.top
            } : {
                x: e.clientX - t.left,
                y: e.clientY - t.top
            }
        },
        coordToAngle(e) {
            const t = this.coordToVector(e);
            let n = Math.atan2(-t.x, t.y);
            return n += Math.PI, n = parseInt(n * 180 / Math.PI, 10), n
        },
        coordToVector(e) {
            const t = this.$el[0].getBoundingClientRect(),
                n = {
                    x: e.x - parseInt(t.width, 10) / 2,
                    y: e.y - parseInt(t.height, 10) / 2
                },
                i = 76 / t.width;
            n.x *= i, n.y *= i;
            const o = this.getDistance(n);
            if (o > 32) {
                const f = 32 / o;
                n.x *= f, n.y *= f
            }
            return n
        }
    }),
    NC = `<div id="status-bar" class="health text">\r
    <div id="weaponBorder" class="weaponBorder">\r
        <div id="weaponIcon" class="weaponIcon"></div>\r
    </div>\r
</div>\r
<div id="radial" class="radial"></div>\r
<div id="control-panel" class="control-panel">\r
    <div class="message text">message</div>\r
    <div class="weaponNameContainer text">\r
        <div class="weaponIcon small"></div>\r
        <span class="weaponName">weapon name</span>\r
    </div>\r
    <div class="weaponText text">weapon text</div>\r
</div>`,
    BC = bi.extend({
        defaults: {
            shotId: void 0,
            state: "Shoot",
            throttle: 44,
            weapon: {},
            playerCanSwap: !1,
            characterCurrentHealth: null,
            characterMaxHealth: null,
            lockedIn: !1,
            selectorCircle: !0,
            classes: [],
            message: ""
        }
    }),
    $C = Ne.View.extend({
        model: new BC,
        template: ve.template(NC),
        className: "Shoot",
        client: null,
        regions: {
            radial: "#radial"
        },
        events: {
            "click .swap-button": "swapPlayer",
            touchstart: "eat",
            "click #reconnect": "reconnect"
        },
        eat(e) {
            e.preventDefault()
        },
        move(e) {
            this.radialComponent.move(e)
        },
        end(e) {
            this.radialComponent.end(e)
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(e) {
                        return e && e.bgcolor ? `background-color:${e.bgcolor}` : ""
                    }
                }]
            },
            ".swap-button": {
                observe: "playerCanSwap",
                visible: !0
            },
            ".health": {
                observe: "characterCurrentHealth",
                visible(e) {
                    return e !== null
                }
            },
            ".currentHealth": "characterCurrentHealth",
            ".maxHealth": "characterMaxHealth",
            ".weaponText": {
                observe: "weapon",
                onGet(e) {
                    return e.text
                }
            },
            ".message": "message",
            ".weaponBorder": {
                attributes: [{
                    name: "class",
                    observe: "weapon",
                    onGet(e) {
                        return e ? e.count ? `count-${e.count}` : "" : null
                    }
                }]
            },
            ".weaponIcon": {
                attributes: [{
                    name: "class",
                    observe: "weapon",
                    onGet(e) {
                        return e ? e.id : ""
                    }
                }]
            },
            ".weaponName": {
                observe: "weapon",
                onGet(e) {
                    return e ? e.name ? e.name : e.id : ""
                }
            }
        },
        onChildviewVector(e) {
            this.throttledUpdate && this.throttledUpdate(e)
        },
        updateVector(e) {
            this.model.get("isAudience") || e.x === 0 && e.y === 0 || !this.radialComponent.model.get("isTouching") || this.triggerMethod("client:message", {
                action: "move",
                type: "move",
                vector: e
            })
        },
        onChildviewEnd() {
            if (this.model.get("lockedIn")) return;
            const e = this.radialComponent.getNormalizedVector();
            if (Math.sqrt(e.x * e.x + e.y * e.y) < .3) {
                this.radialComponent.model.set("vector", {
                    x: 0,
                    y: 0
                }), this.radialComponent.model.set("angle", 180), this.model.get("isPlayer") && this.triggerMethod("client:message", {
                    action: "cancel",
                    type: "cancel"
                });
                return
            }
            const n = this.model.get("weapon"),
                i = n.id ? n.id : this.model.get("weapon"),
                o = this.radialComponent.model.get("angle"),
                f = Math.floor(o / 10);
            this.triggerMethod("client:message", {
                action: "fire",
                type: "fire",
                weapon: i,
                vector: e
            }), this.model.get("isAudience") && (this.audienceShot = f * 10, this.shotId = this.model.get("shotId") || 0, this.model.setUpdate({
                lockedIn: !0,
                shotId: this.shotId
            }))
        },
        initialize(e) {
            this.client = e.client, this.radialComponent = new PC({
                model: new we.Model({
                    isTouching: !1,
                    angle: 0,
                    vector: {
                        x: 0,
                        y: 0
                    },
                    touchBuffer: 5
                })
            }), this.throttledUpdate = ve.throttle(this.updateVector, this.model.get("throttle")), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), lt(window).on("mousemove", this.move.bind(this)), lt(window).on("mouseup", this.end.bind(this))
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext), lt(window).off("mousemove"), lt(window).off("mouseup")
        },
        update() {
            const e = this.model.get("characterCurrentHealth"),
                t = this.model.get("characterMaxHealth");
            if (this.radialComponent.model.set("selector", e / t), this.radialComponent.model.set("accentColor", this.model.get("characterColor")), this.radialComponent.model.set("lockedIn", this.model.get("lockedIn")), this.radialComponent.model.set("text", ""), this.client.isRole("audience") && ((this.model.get("shotId") === void 0 || this.model.get("shotId") !== this.shotId) && (this.audienceShot = void 0), this.audienceShot && (this.model.setUpdate({
                    lockedIn: !0,
                    shotId: this.model.get("shotId") || 0
                }), this.radialComponent.model.set("text", `${this.audienceShot}\xB0`))), !this.model.get("lockedIn") && !this.radialComponent.model.get("isTouching") && this.radialComponent.model.set("vector", {
                    x: 0,
                    y: 0
                }), this.throttledUpdate = ve.throttle(this.updateVector, this.model.get("throttle")), this.model.get("lockedIn")) this.notified = !1;
            else {
                if (!this.notified && this.model.get("state") === "Shoot") {
                    const n = {
                        ClusterBombs: [45, 60, 45, 60, 45, 60],
                        PlayerWeapon: [100, 100],
                        RainbowCannon: [45, 60, 45, 60, 45, 60],
                        Repeater: [45, 60, 45, 60, 45, 60],
                        Seeker: [45, 60, 45, 60, 45, 60],
                        Shield: [45, 60, 45, 60, 45, 60],
                        Stun: [45, 60, 45, 60, 45, 60],
                        SuperBlaster: [45, 60, 45, 60, 45, 60]
                    } [this.model.get("weapon").id];
                    Ve.vibrate(n)
                }
                this.notified = !0
            }
        },
        onRender() {
            this.showChildView("radial", this.radialComponent), this.stickit()
        },
        onAttach() {
            this.update(), this.onResize(), Ve.vibrate()
        },
        onResize() {
            const e = lt(".radial"),
                t = lt("#status-bar").outerHeight() + lt(".playerTopBar").outerHeight() + lt("#control-panel").outerHeight() + 10,
                n = lt(".controller-page").width(),
                i = window.innerHeight - t,
                o = Math.max(150, Math.min(n, i));
            e.css("width", `${o}px`), e.css("height", `${o}px`), window.scrollTo(0, 0)
        }
    }),
    VC = `<div id="textDescriptions" class="textDescriptions" role="log" aria-atomic="false" aria-relevant="additions" aria-live="polite"></div>
<div id="controller-container" class="state-controller controller-page">
    <div id="playerRegion"></div>
    <div id="controller-main">
        <div class="loadingSpinner">
            <i class="fas fa-spinner fa-spin" style="font-size:48px"></i>
        </div>
    </div>
</div>
<div id="broadcaster" role="button" aria-label="twitch broadcaster information" style="display:none;" class="twitchBroadcasterIcon"></div>
`;
Ne.View.extend({
    client: null,
    template: ve.template(VC),
    playerTopBar: null,
    className() {
        return `pt-page ${this.getOption("appTag")}`
    },
    regions: {
        player: "#playerRegion",
        controller: {
            el: "#controller-main",
            replaceElement: !0
        }
    },
    events: {
        "click .twitchBroadcasterIcon": "onTwitchBroadcasterIconClick"
    },
    bindings: {
        ":el": {
            attributes: [{
                name: "class",
                observe: "blob",
                onGet(e) {
                    let t = `pt-page ${this.getOption("appTag")}`;
                    return e && e.locale && (t += ` ${e.locale}`), t
                }
            }]
        },
        ".twitchBroadcasterIcon": {
            observe: ["broadcaster", "blob"],
            visible: !0,
            onGet([e, t]) {
                return e && t && !t.artifact && ["Lobby", "Logo"].includes(t.state)
            }
        }
    },
    initialize(e) {
        this.mergeOptions(e, ["appId", "appTag"]), this.locale = "en", this.client = e.client, this.playerTopBar = this.playerTopBar || new K1, this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onTextDescriptionsWithContext = this.onTextDescriptions.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), e.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), e.client.on("client:textDescriptions", this.onTextDescriptionsWithContext), e.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), e.client.on("client:disconnected", this.onDisconnectedWithContext), e.client.on("client:connection", this.onConnectionMessageWithContext), this.model = new we.Model({});
        const t = e.client.parseEntities();
        this.model.set(t), this.model.on({
            "change:player": this.setBlob,
            "change:room": this.setBlob,
            "change:audiencePlayer": this.setBlob,
            "change:blob": this.update
        }, this), this.render(), this.setBlob(), window.addEventListener("resize", this.onResize)
    },
    onRender() {
        this.update(), this.stickit()
    },
    onAttach() {
        this.showChildView("player", this.playerTopBar), this.onResize(), this.client.isRole("broadcaster") && (this.model.set("broadcaster", this.client.isRole("broadcaster")), this.showTwitchBroadcasterDialog(20 * 1e3))
    },
    onBeforeDestroy() {
        this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:textDescriptions", this.onTextDescriptionsWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext)
    },
    updateLayout() {
        const t = this.model.get("blob").state;
        if (this.getGameLayout(t) !== -1) return null;
        switch (t) {
            case "Draw":
                return this.setLayout(B1);
            case "EnterSingleText":
                return this.setLayout(j1);
            case "Lobby":
                return this.setLayout(q1);
            case "Logo":
                return this.setLayout(X1);
            case "MakeSingleChoice":
                return this.setLayout(Z1);
            case "Shoot":
                return this.setLayout($C);
            case "Sortable":
                return this.setLayout(RC);
            case "Camera":
                return this.setLayout(k1);
            case "UGC":
                return this.setLayout(DC);
            default:
                return new Error("No common layout found")
        }
    },
    setLayout(e) {
        const t = new e(this.options),
            n = this.getRegion("controller");
        !n || (n.reset(), t.model.set(this.model.get("blob")), this.showChildView("controller", t), this.currentLayout = t, this.currentState = this.model.get("blob").state)
    },
    onEntityDidChange(e, t) {
        this.model.unset(e, {
            silent: !0
        }), this.model.set(e, t)
    },
    onTextDescriptions(e, t) {
        this.setTextDescriptions(t.latestDescriptions)
    },
    setBlob() {
        const e = this.model.get("player"),
            t = this.model.get("room"),
            n = this.model.get("audiencePlayer");
        let i = {};
        e && !ve.isEmpty(e) ? i = {
            ...ve.omit(t, "audience"),
            ...e
        } : this.client.isRole("audience") && n ? i = {
            ...ve.omit(t, "audience"),
            ...n.audience
        } : this.client.isRole("audience") && t && t.audience ? i = {
            ...ve.omit(t, "audience"),
            ...t.audience
        } : i = t || {}, i.isPlayer = this.client.isRole("player"), i.isAudience = this.client.isRole("audience"), i = this.parseBlob(i), !i.state && i.isAudience && (i.state = "Logo"), i.platformId && yn.set(`platform-${i.platformId}`), i.locale && typeof i.locale == "string" && (this.locale = i.locale), this.model.set({
            blob: i
        })
    },
    update: ve.debounce(function() {
        const t = this.model.get("blob");
        !t || (this.willUpdate(), t.playerInfo ? this.playerTopBar.model.set(t.playerInfo) : this.playerTopBar.model.clear(), !this.currentState || this.currentState !== t.state ? (this.updateLayout(), this.currentLayout && this.currentLayout.model.set(t)) : this.currentLayout && this.currentLayout.model.set(t), t.textDescriptions && this.setTextDescriptions(t.textDescriptions), t.artifact && yi.add(t.artifact, this.client.appTag), this.didUpdate())
    }, 25),
    willUpdate() {},
    didUpdate() {},
    setTextDescriptions(e) {
        e && e.length && (this.textDescriptions = this.textDescriptions || [], e.forEach(t => {
            (t.id === void 0 || !this.textDescriptions.slice(-10).find(n => n.id === t.id)) && (this.textDescriptions.push(t), lt("#textDescriptions").append(lt("<p />").text(t.text)))
        }))
    },
    parseBlob(e) {
        return e
    },
    getGameLayout() {
        return -1
    },
    formatSessionMessage(e) {
        return e
    },
    onTwitchBroadcasterIconClick() {
        this.showTwitchBroadcasterDialog()
    },
    showTwitchBroadcasterDialog(e) {
        let t = `
            <div class='icon-${this.client.roles.broadcaster.platform}'>
                ${this.client.roles.broadcaster.name}
            </div>`;
        t += `
            <div class='success'>
                You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.
            </div>`, this.lacksAudience ? t += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (t += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), Ve.show("custom", {
            html: t,
            position: "bottom",
            timer: e,
            backdrop: "transparent",
            customClass: {
                container: "jbgTwitchContainer",
                popup: "jbgTwitchPopup",
                htmlContainer: "jbgTwitchContent",
                closeButton: "jbgCloseButton"
            },
            showCloseButton: !0,
            closeButtonHtml: `
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path>
                    <path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" />
                </svg>`,
            showConfirmButton: !1,
            showClass: {
                popup: "jbgTwitchShow"
            },
            hideClass: {
                popup: "jbgTwitchHide"
            }
        })
    },
    onResize() {
        const e = lt(window).width(),
            t = lt(window).height();
        lt(".content,.controller-page").css({
            height: t,
            width: e
        })
    },
    onRoomWasDestroyed() {
        yn.remove("roomCode"), yn.remove("reconnect"), Ve.show("error", {
            titleText: $s[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            text: $s[this.locale].STRING_ERROR_SERVER_ROOM_DESTROYED,
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onDisconnected() {
        Ve.show("error", {
            titleText: $s[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            text: $s[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onConnectionMessage(e) {
        const t = `${e.status} ${e.attempt?`${e.attempt}/5`:""}`;
        if (Ve.show("toast", {
                text: t
            }), e.status === "connected") {
            const n = this.client.parseEntities();
            this.model.set(n)
        }
    },
    async onChildviewClientMessage(e) {
        if (this.client.isRole("player"))
            if (e.textKey) try {
                await this.client.updateText(e.textKey, e.val)
            } catch (t) {
                if (t instanceof gi.EcastEntityNotFound || t instanceof gi.EcastPermissionDenied) console.error(`Couldn't update text entity ${e.textKey}: ${t.message}`);
                else if (t instanceof gi.EcastFilterError) this.currentLayout.onTextFilterError && this.currentLayout.onTextFilterError(t);
                else throw console.error(`Unhandled error updating text entity ${e.textKey}`), t
            } else if (e.objectKey) try {
                await this.client.updateObject(e.objectKey, e.val)
            } catch (t) {
                if (t instanceof gi.EcastEntityNotFound || t instanceof gi.EcastPermissionDenied) console.error(`Couldn't update object entity ${e.objectKey}: ${t.message}`);
                else if (t instanceof gi.EcastFilterError) this.currentLayout.onObjectFilterError && this.currentLayout.onObjectFilterError(t);
                else throw console.error(`Unhandled error updating object entity ${e.objectKey}`), t
            } else {
                const t = this.formatSessionMessage(e);
                this.client.send("SendMessageToRoomOwner", t)
            } else if (this.client.isRole("audience")) {
                const t = this.currentLayout.sessionModule,
                    n = this.formatSessionMessage(e);
                if (!t) return;
                if (t === "vote") {
                    const i = this.currentLayout.model.get("countGroupName"),
                        o = n.vote;
                    this.onChildviewClientCountGroup({
                        name: i,
                        vote: o
                    })
                }
                if (t === "comment") {
                    const i = this.currentLayout.model.get("textRingName"),
                        o = n.entry;
                    this.onChildviewClientTextRing({
                        name: i,
                        text: o
                    })
                }
            }
    },
    onChildviewClientSessionMessage(e) {
        this.client.sessionSend(e.sessionModule, e.sessionName, e.sessionMessage)
    },
    onChildviewClientCountGroup({
        name: e,
        vote: t
    }) {
        e || (e = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.incrementCountGroupCounter(e, t)
    },
    onChildviewClientGCounter({
        key: e,
        times: t
    }) {
        this.client.incrementGCounter(e, t)
    },
    onChildviewClientTextRing({
        name: e,
        text: t
    }) {
        e || (e = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.pushTextRing(e, t)
    }
});
var fh = {
    exports: {}
};
/*!
 * EventEmitter v5.2.9 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - https://oli.me.uk/
 * @preserve
 */
(function(e) {
    (function(t) {
        function n() {}
        var i = n.prototype,
            o = t.EventEmitter;

        function f(k, A) {
            for (var D = k.length; D--;)
                if (k[D].listener === A) return D;
            return -1
        }

        function v(k) {
            return function() {
                return this[k].apply(this, arguments)
            }
        }
        i.getListeners = function(A) {
            var D = this._getEvents(),
                $, tt;
            if (A instanceof RegExp) {
                $ = {};
                for (tt in D) D.hasOwnProperty(tt) && A.test(tt) && ($[tt] = D[tt])
            } else $ = D[A] || (D[A] = []);
            return $
        }, i.flattenListeners = function(A) {
            var D = [],
                $;
            for ($ = 0; $ < A.length; $ += 1) D.push(A[$].listener);
            return D
        }, i.getListenersAsObject = function(A) {
            var D = this.getListeners(A),
                $;
            return D instanceof Array && ($ = {}, $[A] = D), $ || D
        };

        function y(k) {
            return typeof k == "function" || k instanceof RegExp ? !0 : k && typeof k == "object" ? y(k.listener) : !1
        }
        i.addListener = function(A, D) {
            if (!y(D)) throw new TypeError("listener must be a function");
            var $ = this.getListenersAsObject(A),
                tt = typeof D == "object",
                st;
            for (st in $) $.hasOwnProperty(st) && f($[st], D) === -1 && $[st].push(tt ? D : {
                listener: D,
                once: !1
            });
            return this
        }, i.on = v("addListener"), i.addOnceListener = function(A, D) {
            return this.addListener(A, {
                listener: D,
                once: !0
            })
        }, i.once = v("addOnceListener"), i.defineEvent = function(A) {
            return this.getListeners(A), this
        }, i.defineEvents = function(A) {
            for (var D = 0; D < A.length; D += 1) this.defineEvent(A[D]);
            return this
        }, i.removeListener = function(A, D) {
            var $ = this.getListenersAsObject(A),
                tt, st;
            for (st in $) $.hasOwnProperty(st) && (tt = f($[st], D), tt !== -1 && $[st].splice(tt, 1));
            return this
        }, i.off = v("removeListener"), i.addListeners = function(A, D) {
            return this.manipulateListeners(!1, A, D)
        }, i.removeListeners = function(A, D) {
            return this.manipulateListeners(!0, A, D)
        }, i.manipulateListeners = function(A, D, $) {
            var tt, st, V = A ? this.removeListener : this.addListener,
                ot = A ? this.removeListeners : this.addListeners;
            if (typeof D == "object" && !(D instanceof RegExp))
                for (tt in D) D.hasOwnProperty(tt) && (st = D[tt]) && (typeof st == "function" ? V.call(this, tt, st) : ot.call(this, tt, st));
            else
                for (tt = $.length; tt--;) V.call(this, D, $[tt]);
            return this
        }, i.removeEvent = function(A) {
            var D = typeof A,
                $ = this._getEvents(),
                tt;
            if (D === "string") delete $[A];
            else if (A instanceof RegExp)
                for (tt in $) $.hasOwnProperty(tt) && A.test(tt) && delete $[tt];
            else delete this._events;
            return this
        }, i.removeAllListeners = v("removeEvent"), i.emitEvent = function(A, D) {
            var $ = this.getListenersAsObject(A),
                tt, st, V, ot, m;
            for (ot in $)
                if ($.hasOwnProperty(ot))
                    for (tt = $[ot].slice(0), V = 0; V < tt.length; V++) st = tt[V], st.once === !0 && this.removeListener(A, st.listener), m = st.listener.apply(this, D || []), m === this._getOnceReturnValue() && this.removeListener(A, st.listener);
            return this
        }, i.trigger = v("emitEvent"), i.emit = function(A) {
            var D = Array.prototype.slice.call(arguments, 1);
            return this.emitEvent(A, D)
        }, i.setOnceReturnValue = function(A) {
            return this._onceReturnValue = A, this
        }, i._getOnceReturnValue = function() {
            return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0
        }, i._getEvents = function() {
            return this._events || (this._events = {})
        }, n.noConflict = function() {
            return t.EventEmitter = o, n
        }, e.exports ? e.exports = n : t.EventEmitter = n
    })(typeof window < "u" ? window : Re || {})
})(fh);
const jC = fh.exports;
class FC extends jC {
    constructor(n, i) {
        super();
        me(this, "wsClient");
        me(this, "name");
        me(this, "id");
        me(this, "userId");
        me(this, "uuid");
        me(this, "joinAs", "player");
        me(this, "room");
        me(this, "roles", {});
        me(this, "code", null);
        me(this, "host");
        me(this, "onPlayerWelcome", n => {
            this.id = n.id, this.roles = n.profile ? n.profile.roles : {}, n.here && (this.host = Object.values(n.here).find(({
                roles: i
            }) => i.host)), this.emit("client:didJoinRoom", {
                appId: this.room.appId,
                appTag: this.room.appTag,
                id: n.id,
                reconnect: `${n.id}:${this.joinAs}:${n.secret}`
            })
        });
        me(this, "parseEntities", () => {
            if (!this.wsClient) return {};
            const n = this.wsClient.entities,
                i = {};
            return Object.keys(n).forEach(o => {
                const f = n[o];
                o === "room" || o === "bc:room" || o === "roomBlob" ? (f instanceof Vi.TextEntity && (i.room = f.toBlob()), f instanceof Vi.ObjectEntity && (i.room = f.val)) : o === "player" || o === `player:${this.id}` || o === `bc:customer:${this.userId}` ? (f instanceof Vi.TextEntity && (i.player = f.toBlob()), f instanceof Vi.ObjectEntity && (i.player = f.val)) : o === "audiencePlayer" && (f instanceof Vi.TextEntity && (i.audiencePlayer = f.toBlob()), f instanceof Vi.ObjectEntity && (i.audiencePlayer = f.val))
            }), i
        });
        this.wsClient = n, this.name = n.name, this.userId = n.userId, this.uuid = n.userId, this.joinAs = n.role, this.room = i.room, n.on("object", this.onObject.bind(this)), n.on("room/exit", this.onRoomExit.bind(this)), n.on("socketClose", this.onSocketClose.bind(this)), n.on("connection", this.onConnection.bind(this)), n.on("text", this.onText.bind(this)), this.onPlayerWelcome(i.welcome)
    }
    get entities() {
        return this.wsClient ? this.wsClient.entities : {
            none: !0
        }
    }
    get isReady() {
        var n;
        return ((n = this.wsClient) == null ? void 0 : n.conn.readyState) === WebSocket.OPEN
    }
    isRole(n) {
        const i = Object.keys(this.roles);
        return !i.length && n === "audience" ? !0 : i.includes(n)
    }
    disconnect() {
        !this.wsClient || (this.wsClient.disconnect(), this.wsClient = null)
    }
    onText(n) {
        const i = n.key,
            o = n.text;
        let f = n.text;
        try {
            f = JSON.parse(f)
        } catch {
            nc(`[Ecast Client] Unhandled text notification: ${n.key} ${o}`);
            return
        }
        const v = f;
        i === "room" ? this.emit("client:entityDidChange", i, v) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", v) : i === "bc:room" ? this.emit("client:entityDidChange", "room", v) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", v) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", v) : nc(`[Ecast Client] Unhandled json notification: ${i}`)
    }
    onObject(n) {
        const i = n.key,
            o = n.val;
        i === "room" ? this.emit("client:entityDidChange", i, o) : i === "player" ? this.emit("client:entityDidChange", "player", o) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", o) : i === "textDescriptions" ? this.emit("client:textDescriptions", i, o) : i === "bc:room" ? this.emit("client:entityDidChange", "room", o) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", o) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", o) : console.warn(`[Ecast Client] Unhandled json notification: ${i}`)
    }
    onSocketClose(n) {
        n instanceof gi.EcastServerError || n.code === 1005 || n.code === 1e3 ? this.emit("client:roomWasDestroyed") : this.emit("client:disconnected"), this.disconnect(), this.code = null
    }
    onRoomExit(n) {
        this.emit("client:disconnected", n), this.disconnect()
    }
    onConnection(n) {
        this.emit("client:connection", n)
    }
    async send(n, i) {
        var o, f;
        if (!!this.isReady) try {
            if (n === "SendMessageToRoomOwner") {
                const v = (f = (o = this.host) == null ? void 0 : o.id) != null ? f : "1";
                await this.wsClient.mail(v, i)
            } else await this.wsClient.send(n, i)
        } catch (v) {
            console.error(v)
        }
    }
    sessionSend(n, i, o) {
        !this.isReady || (n === "vote" && this.incrementCountGroupCounter(i, `${o.vote}`), n === "comment" && this.pushTextRing(i, `${o.comment}`))
    }
    async updateText(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.updateText(n, i)
        } catch (o) {
            throw console.warn("Text update rejected.", o), o
        }
    }
    async updateObject(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.updateObject(n, i)
        } catch (o) {
            throw console.warn("Object update rejected.", o), o
        }
    }
    async incrementCountGroupCounter(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.incrementCountGroupCounter(n, `${i}`)
        } catch (o) {
            console.error(o)
        }
    }
    async incrementGCounter(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.incrementGCounter(n, i)
        } catch (o) {
            console.error(o)
        }
    }
    async pushTextRing(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.pushTextRing(n, `${i}`)
        } catch (o) {
            console.error(o)
        }
    }
}
const zC = `<div id="content-region" class="content"></div>
<div id="debug-region" class="debug"></div>
<div id="banner" class="post-banner"></div>`;
(function(e) {
    e(lt)
})(function(e) {
    var t, n = navigator.userAgent,
        i = /iphone/i.test(n),
        o = /chrome/i.test(n),
        f = /android/i.test(n);
    e.mask = {
        definitions: {
            9: "[0-9]",
            a: "[A-Za-z]",
            "*": "[A-Za-z0-9]"
        },
        autoclear: !0,
        dataName: "rawMaskFn",
        placeholder: "_"
    }, e.fn.extend({
        caret: function(v, y) {
            var k;
            if (this.length !== 0 && !this.is(":hidden")) return typeof v == "number" ? (y = typeof y == "number" ? y : v, this.each(function() {
                this.setSelectionRange ? this.setSelectionRange(v, y) : this.createTextRange && (k = this.createTextRange(), k.collapse(!0), k.moveEnd("character", y), k.moveStart("character", v), k.select())
            })) : (this[0].setSelectionRange ? (v = this[0].selectionStart, y = this[0].selectionEnd) : document.selection && document.selection.createRange && (k = document.selection.createRange(), v = 0 - k.duplicate().moveStart("character", -1e5), y = v + k.text.length), {
                begin: v,
                end: y
            })
        },
        unmask: function() {
            return this.trigger("unmask")
        },
        mask: function(v, y) {
            var k, A, D, $, tt, st, V, ot;
            if (!v && this.length > 0) {
                k = e(this[0]);
                var m = k.data(e.mask.dataName);
                return m ? m() : void 0
            }
            return y = e.extend({
                autoclear: e.mask.autoclear,
                placeholder: e.mask.placeholder,
                completed: null
            }, y), A = e.mask.definitions, D = [], $ = V = v.length, tt = null, e.each(v.split(""), function(L, X) {
                X == "?" ? (V--, $ = L) : A[X] ? (D.push(new RegExp(A[X])), tt === null && (tt = D.length - 1), $ > L && (st = D.length - 1)) : D.push(null)
            }), this.trigger("unmask").each(function() {
                function L() {
                    if (y.completed) {
                        for (var Tt = tt; st >= Tt; Tt++)
                            if (D[Tt] && pt[Tt] === X(Tt)) return;
                        y.completed.call(G)
                    }
                }

                function X(Tt) {
                    return y.placeholder.charAt(Tt < y.placeholder.length ? Tt : 0)
                }

                function ut(Tt) {
                    for (; ++Tt < V && !D[Tt];);
                    return Tt
                }

                function ht(Tt) {
                    for (; --Tt >= 0 && !D[Tt];);
                    return Tt
                }

                function bt(Tt, vt) {
                    var Dt, Nt;
                    if (!(0 > Tt)) {
                        for (Dt = Tt, Nt = ut(vt); V > Dt; Dt++)
                            if (D[Dt]) {
                                if (!(V > Nt && D[Dt].test(pt[Nt]))) break;
                                pt[Dt] = pt[Nt], pt[Nt] = X(Nt), Nt = ut(Nt)
                            } et(), G.caret(Math.max(tt, Tt))
                    }
                }

                function d(Tt) {
                    var vt, Dt, Nt, Kt;
                    for (vt = Tt, Dt = X(Tt); V > vt; vt++)
                        if (D[vt]) {
                            if (Nt = ut(vt), Kt = pt[vt], pt[vt] = Dt, !(V > Nt && D[Nt].test(Kt))) break;
                            Dt = Kt
                        }
                }

                function kt() {
                    var Tt = G.val(),
                        vt = G.caret();
                    if (ot && ot.length && ot.length > Tt.length) {
                        for (Jt(!0); vt.begin > 0 && !D[vt.begin - 1];) vt.begin--;
                        if (vt.begin === 0)
                            for (; vt.begin < tt && !D[vt.begin];) vt.begin++;
                        G.caret(vt.begin, vt.begin)
                    } else {
                        for (Jt(!0); vt.begin < V && !D[vt.begin];) vt.begin++;
                        G.caret(vt.begin, vt.begin)
                    }
                    L()
                }

                function Vt() {
                    Jt(), G.val() != At && G.change()
                }

                function Pt(Tt) {
                    if (!G.prop("readonly")) {
                        var vt, Dt, Nt, Kt = Tt.which || Tt.keyCode;
                        ot = G.val(), Kt === 8 || Kt === 46 || i && Kt === 127 ? (vt = G.caret(), Dt = vt.begin, Nt = vt.end, Nt - Dt === 0 && (Dt = Kt !== 46 ? ht(Dt) : Nt = ut(Dt - 1), Nt = Kt === 46 ? ut(Nt) : Nt), Xt(Dt, Nt), bt(Dt, Nt - 1), Tt.preventDefault()) : Kt === 13 ? Vt.call(this, Tt) : Kt === 27 && (G.val(At), G.caret(0, Jt()), Tt.preventDefault())
                    }
                }

                function Ce(Tt) {
                    if (!G.prop("readonly")) {
                        var vt, Dt, Nt, Kt = Tt.which || Tt.keyCode,
                            le = G.caret();
                        if (!(Tt.ctrlKey || Tt.altKey || Tt.metaKey || 32 > Kt) && Kt && Kt !== 13) {
                            if (le.end - le.begin !== 0 && (Xt(le.begin, le.end), bt(le.begin, le.end - 1)), vt = ut(le.begin - 1), V > vt && (Dt = String.fromCharCode(Kt), D[vt].test(Dt))) {
                                if (d(vt), pt[vt] = Dt, et(), Nt = ut(vt), f) {
                                    var Ee = function() {
                                        e.proxy(e.fn.caret, G, Nt)()
                                    };
                                    setTimeout(Ee, 0)
                                } else G.caret(Nt);
                                le.begin <= st && L()
                            }
                            Tt.preventDefault()
                        }
                    }
                }

                function Xt(Tt, vt) {
                    var Dt;
                    for (Dt = Tt; vt > Dt && V > Dt; Dt++) D[Dt] && (pt[Dt] = X(Dt))
                }

                function et() {
                    G.val(pt.join(""))
                }

                function Jt(Tt) {
                    var vt, Dt, Nt, Kt = G.val(),
                        le = -1;
                    for (vt = 0, Nt = 0; V > vt; vt++)
                        if (D[vt]) {
                            for (pt[vt] = X(vt); Nt++ < Kt.length;)
                                if (Dt = Kt.charAt(Nt - 1), D[vt].test(Dt)) {
                                    pt[vt] = Dt, le = vt;
                                    break
                                } if (Nt > Kt.length) {
                                Xt(vt + 1, V);
                                break
                            }
                        } else pt[vt] === Kt.charAt(Nt) && Nt++, $ > vt && (le = vt);
                    return Tt ? et() : $ > le + 1 ? y.autoclear || pt.join("") === $t ? (G.val() && G.val(""), Xt(0, V)) : et() : (et(), G.val(G.val().substring(0, le + 1))), $ ? vt : tt
                }
                var G = e(this),
                    pt = e.map(v.split(""), function(Tt, vt) {
                        return Tt != "?" ? A[Tt] ? X(vt) : Tt : void 0
                    }),
                    $t = pt.join(""),
                    At = G.val();
                G.data(e.mask.dataName, function() {
                    return e.map(pt, function(Tt, vt) {
                        return D[vt] && Tt != X(vt) ? Tt : null
                    }).join("")
                }), G.one("unmask", function() {
                    G.off(".mask").removeData(e.mask.dataName)
                }).on("focus.mask", function() {
                    if (!G.prop("readonly")) {
                        clearTimeout(t);
                        var Tt;
                        At = G.val(), Tt = Jt(), t = setTimeout(function() {
                            G.get(0) === document.activeElement && (et(), Tt == v.replace("?", "").length ? G.caret(0, Tt) : G.caret(Tt))
                        }, 10)
                    }
                }).on("blur.mask", Vt).on("keydown.mask", Pt).on("keypress.mask", Ce).on("input.mask paste.mask", function() {
                    G.prop("readonly") || setTimeout(function() {
                        var Tt = Jt(!0);
                        G.caret(Tt), L()
                    }, 0)
                }), o && f && G.off("input.mask").on("input.mask", kt), Jt()
            })
        }
    })
});
window.$ = lt;
window.jQuery = lt;
const HC = Ne.View.extend({
        className: "app-root",
        template: ve.template(zC),
        regions: {
            content: "#content-region",
            dialog: "#dialog-region",
            debug: "#debug-region"
        },
        showView(e, t = {}) {
            const n = new e(t);
            this.showChildView("content", n)
        }
    }),
    UC = e => {
        let t;
        window.tv.register({
            connect: n => (t = new Vi.WSClient(n), t.connect()),
            mount: n => {
                const i = new FC(t, n);
                let o = new Ne.Application({
                    region: "#app",
                    onStart() {
                        const f = new HC;
                        this.showView(f), f.showView(e.MainView, {
                            appId: n.room.appId,
                            appTag: n.room.appTag,
                            replayer: n.replayer,
                            client: i
                        })
                    }
                });
                return o.start(), () => {
                    o.destroy(), o = null
                }
            },
            info: n => ({
                branch: n.branch,
                tag: n.app,
                type: n.type,
                version: n.version,
                wrapper: "marionette"
            })
        })
    },
    qC = "main/pp3/awshirt/assets/818805b7.png",
    WC = "main/pp3/awshirt/assets/4221fbdf.png",
    GC = "main/pp3/awshirt/assets/8f81b8e9.png",
    XC = "main/pp3/awshirt/assets/6129dba1.png",
    YC = "main/pp3/awshirt/assets/483f154c.png",
    KC = "main/pp3/awshirt/assets/572de775.png",
    JC = "main/pp3/awshirt/assets/887d7c1c.png",
    QC = "main/pp3/awshirt/assets/296ca7f5.png",
    ZC = "main/pp3/awshirt/assets/4c19f6ce.png",
    tx = "main/pp3/awshirt/assets/d347c190.png",
    ex = "main/pp3/awshirt/assets/b169cbf0.png",
    nx = "main/pp3/awshirt/assets/d6a2f461.png",
    ix = "main/pp3/awshirt/assets/8d449c09.png",
    rx = "main/pp3/awshirt/assets/f4c2dbe3.png",
    sx = "main/pp3/awshirt/assets/8eb067eb.png",
    ox = "main/pp3/awshirt/assets/0ded72a7.png";
var ph = {
    exports: {}
};
/*!
 * Glide.js v3.5.2
 * (c) 2013-2021 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)
 * Released under the MIT License.
 */
(function(e, t) {
    (function(n, i) {
        e.exports = i()
    })(Re, function() {
        function n(B) {
            return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? n = function(F) {
                return typeof F
            } : n = function(F) {
                return F && typeof Symbol == "function" && F.constructor === Symbol && F !== Symbol.prototype ? "symbol" : typeof F
            }, n(B)
        }

        function i(B, F) {
            if (!(B instanceof F)) throw new TypeError("Cannot call a class as a function")
        }

        function o(B, F) {
            for (var Q = 0; Q < F.length; Q++) {
                var K = F[Q];
                K.enumerable = K.enumerable || !1, K.configurable = !0, "value" in K && (K.writable = !0), Object.defineProperty(B, K.key, K)
            }
        }

        function f(B, F, Q) {
            return F && o(B.prototype, F), Q && o(B, Q), B
        }

        function v(B, F) {
            if (typeof F != "function" && F !== null) throw new TypeError("Super expression must either be null or a function");
            B.prototype = Object.create(F && F.prototype, {
                constructor: {
                    value: B,
                    writable: !0,
                    configurable: !0
                }
            }), F && k(B, F)
        }

        function y(B) {
            return y = Object.setPrototypeOf ? Object.getPrototypeOf : function(Q) {
                return Q.__proto__ || Object.getPrototypeOf(Q)
            }, y(B)
        }

        function k(B, F) {
            return k = Object.setPrototypeOf || function(K, dt) {
                return K.__proto__ = dt, K
            }, k(B, F)
        }

        function A() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch {
                return !1
            }
        }

        function D(B) {
            if (B === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return B
        }

        function $(B, F) {
            if (F && (typeof F == "object" || typeof F == "function")) return F;
            if (F !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return D(B)
        }

        function tt(B) {
            var F = A();
            return function() {
                var K = y(B),
                    dt;
                if (F) {
                    var nt = y(this).constructor;
                    dt = Reflect.construct(K, arguments, nt)
                } else dt = K.apply(this, arguments);
                return $(this, dt)
            }
        }

        function st(B, F) {
            for (; !Object.prototype.hasOwnProperty.call(B, F) && (B = y(B), B !== null););
            return B
        }

        function V() {
            return typeof Reflect < "u" && Reflect.get ? V = Reflect.get : V = function(F, Q, K) {
                var dt = st(F, Q);
                if (!!dt) {
                    var nt = Object.getOwnPropertyDescriptor(dt, Q);
                    return nt.get ? nt.get.call(arguments.length < 3 ? F : K) : nt.value
                }
            }, V.apply(this, arguments)
        }
        var ot = {
            type: "slider",
            startAt: 0,
            perView: 1,
            focusAt: 0,
            gap: 10,
            autoplay: !1,
            hoverpause: !0,
            keyboard: !0,
            bound: !1,
            swipeThreshold: 80,
            dragThreshold: 120,
            perSwipe: "",
            touchRatio: .5,
            touchAngle: 45,
            animationDuration: 400,
            rewind: !0,
            rewindDuration: 800,
            animationTimingFunc: "cubic-bezier(.165, .840, .440, 1)",
            waitForTransition: !0,
            throttle: 10,
            direction: "ltr",
            peek: 0,
            cloningRatio: 1,
            breakpoints: {},
            classes: {
                swipeable: "glide--swipeable",
                dragging: "glide--dragging",
                direction: {
                    ltr: "glide--ltr",
                    rtl: "glide--rtl"
                },
                type: {
                    slider: "glide--slider",
                    carousel: "glide--carousel"
                },
                slide: {
                    clone: "glide__slide--clone",
                    active: "glide__slide--active"
                },
                arrow: {
                    disabled: "glide__arrow--disabled"
                },
                nav: {
                    active: "glide__bullet--active"
                }
            }
        };

        function m(B) {
            console.error("[Glide warn]: ".concat(B))
        }

        function L(B) {
            return parseInt(B)
        }

        function X(B) {
            return parseFloat(B)
        }

        function ut(B) {
            return typeof B == "string"
        }

        function ht(B) {
            var F = n(B);
            return F === "function" || F === "object" && !!B
        }

        function bt(B) {
            return typeof B == "function"
        }

        function d(B) {
            return typeof B > "u"
        }

        function kt(B) {
            return B.constructor === Array
        }

        function Vt(B, F, Q) {
            var K = {};
            for (var dt in F) bt(F[dt]) ? K[dt] = F[dt](B, K, Q) : m("Extension must be a function");
            for (var nt in K) bt(K[nt].mount) && K[nt].mount();
            return K
        }

        function Pt(B, F, Q) {
            Object.defineProperty(B, F, Q)
        }

        function Ce(B) {
            return Object.keys(B).sort().reduce(function(F, Q) {
                return F[Q] = B[Q], F[Q], F
            }, {})
        }

        function Xt(B, F) {
            var Q = Object.assign({}, B, F);
            return F.hasOwnProperty("classes") && (Q.classes = Object.assign({}, B.classes, F.classes), F.classes.hasOwnProperty("direction") && (Q.classes.direction = Object.assign({}, B.classes.direction, F.classes.direction)), F.classes.hasOwnProperty("type") && (Q.classes.type = Object.assign({}, B.classes.type, F.classes.type)), F.classes.hasOwnProperty("slide") && (Q.classes.slide = Object.assign({}, B.classes.slide, F.classes.slide)), F.classes.hasOwnProperty("arrow") && (Q.classes.arrow = Object.assign({}, B.classes.arrow, F.classes.arrow)), F.classes.hasOwnProperty("nav") && (Q.classes.nav = Object.assign({}, B.classes.nav, F.classes.nav))), F.hasOwnProperty("breakpoints") && (Q.breakpoints = Object.assign({}, B.breakpoints, F.breakpoints)), Q
        }
        var et = function() {
                function B() {
                    var F = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    i(this, B), this.events = F, this.hop = F.hasOwnProperty
                }
                return f(B, [{
                    key: "on",
                    value: function(Q, K) {
                        if (kt(Q)) {
                            for (var dt = 0; dt < Q.length; dt++) this.on(Q[dt], K);
                            return
                        }
                        this.hop.call(this.events, Q) || (this.events[Q] = []);
                        var nt = this.events[Q].push(K) - 1;
                        return {
                            remove: function() {
                                delete this.events[Q][nt]
                            }
                        }
                    }
                }, {
                    key: "emit",
                    value: function(Q, K) {
                        if (kt(Q)) {
                            for (var dt = 0; dt < Q.length; dt++) this.emit(Q[dt], K);
                            return
                        }!this.hop.call(this.events, Q) || this.events[Q].forEach(function(nt) {
                            nt(K || {})
                        })
                    }
                }]), B
            }(),
            Jt = function() {
                function B(F) {
                    var Q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    i(this, B), this._c = {}, this._t = [], this._e = new et, this.disabled = !1, this.selector = F, this.settings = Xt(ot, Q), this.index = this.settings.startAt
                }
                return f(B, [{
                    key: "mount",
                    value: function() {
                        var Q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        return this._e.emit("mount.before"), ht(Q) ? this._c = Vt(this, Q, this._e) : m("You need to provide a object on `mount()`"), this._e.emit("mount.after"), this
                    }
                }, {
                    key: "mutate",
                    value: function() {
                        var Q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
                        return kt(Q) ? this._t = Q : m("You need to provide a array on `mutate()`"), this
                    }
                }, {
                    key: "update",
                    value: function() {
                        var Q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        return this.settings = Xt(this.settings, Q), Q.hasOwnProperty("startAt") && (this.index = Q.startAt), this._e.emit("update"), this
                    }
                }, {
                    key: "go",
                    value: function(Q) {
                        return this._c.Run.make(Q), this
                    }
                }, {
                    key: "move",
                    value: function(Q) {
                        return this._c.Transition.disable(), this._c.Move.make(Q), this
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        return this._e.emit("destroy"), this
                    }
                }, {
                    key: "play",
                    value: function() {
                        var Q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
                        return Q && (this.settings.autoplay = Q), this._e.emit("play"), this
                    }
                }, {
                    key: "pause",
                    value: function() {
                        return this._e.emit("pause"), this
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.disabled = !0, this
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.disabled = !1, this
                    }
                }, {
                    key: "on",
                    value: function(Q, K) {
                        return this._e.on(Q, K), this
                    }
                }, {
                    key: "isType",
                    value: function(Q) {
                        return this.settings.type === Q
                    }
                }, {
                    key: "settings",
                    get: function() {
                        return this._o
                    },
                    set: function(Q) {
                        ht(Q) ? this._o = Q : m("Options must be an `object` instance.")
                    }
                }, {
                    key: "index",
                    get: function() {
                        return this._i
                    },
                    set: function(Q) {
                        this._i = L(Q)
                    }
                }, {
                    key: "type",
                    get: function() {
                        return this.settings.type
                    }
                }, {
                    key: "disabled",
                    get: function() {
                        return this._d
                    },
                    set: function(Q) {
                        this._d = !!Q
                    }
                }]), B
            }();

        function G(B, F, Q) {
            var K = {
                mount: function() {
                    this._o = !1
                },
                make: function(Gt) {
                    var Ut = this;
                    B.disabled || (!B.settings.waitForTransition || B.disable(), this.move = Gt, Q.emit("run.before", this.move), this.calculate(), Q.emit("run", this.move), F.Transition.after(function() {
                        Ut.isStart() && Q.emit("run.start", Ut.move), Ut.isEnd() && Q.emit("run.end", Ut.move), Ut.isOffset() && (Ut._o = !1, Q.emit("run.offset", Ut.move)), Q.emit("run.after", Ut.move), B.enable()
                    }))
                },
                calculate: function() {
                    var Gt = this.move,
                        Ut = this.length,
                        ue = Gt.steps,
                        he = Gt.direction,
                        qe = 1;
                    if (he === "=") {
                        if (B.settings.bound && L(ue) > Ut) {
                            B.index = Ut;
                            return
                        }
                        B.index = ue;
                        return
                    }
                    if (he === ">" && ue === ">") {
                        B.index = Ut;
                        return
                    }
                    if (he === "<" && ue === "<") {
                        B.index = 0;
                        return
                    }
                    if (he === "|" && (qe = B.settings.perView || 1), he === ">" || he === "|" && ue === ">") {
                        var Me = dt(qe);
                        Me > Ut && (this._o = !0), B.index = nt(Me, qe);
                        return
                    }
                    if (he === "<" || he === "|" && ue === "<") {
                        var Je = mt(qe);
                        Je < 0 && (this._o = !0), B.index = Rt(Je, qe);
                        return
                    }
                    m("Invalid direction pattern [".concat(he).concat(ue, "] has been used"))
                },
                isStart: function() {
                    return B.index <= 0
                },
                isEnd: function() {
                    return B.index >= this.length
                },
                isOffset: function() {
                    var Gt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
                    return Gt ? this._o ? Gt === "|>" ? this.move.direction === "|" && this.move.steps === ">" : Gt === "|<" ? this.move.direction === "|" && this.move.steps === "<" : this.move.direction === Gt : !1 : this._o
                },
                isBound: function() {
                    return B.isType("slider") && B.settings.focusAt !== "center" && B.settings.bound
                }
            };

            function dt(Bt) {
                var Gt = B.index;
                return B.isType("carousel") ? Gt + Bt : Gt + (Bt - Gt % Bt)
            }

            function nt(Bt, Gt) {
                var Ut = K.length;
                return Bt <= Ut ? Bt : B.isType("carousel") ? Bt - (Ut + 1) : B.settings.rewind ? K.isBound() && !K.isEnd() ? Ut : 0 : K.isBound() ? Ut : Math.floor(Ut / Gt) * Gt
            }

            function mt(Bt) {
                var Gt = B.index;
                if (B.isType("carousel")) return Gt - Bt;
                var Ut = Math.ceil(Gt / Bt);
                return (Ut - 1) * Bt
            }

            function Rt(Bt, Gt) {
                var Ut = K.length;
                return Bt >= 0 ? Bt : B.isType("carousel") ? Bt + (Ut + 1) : B.settings.rewind ? K.isBound() && K.isStart() ? Ut : Math.floor(Ut / Gt) * Gt : 0
            }
            return Pt(K, "move", {
                get: function() {
                    return this._m
                },
                set: function(Gt) {
                    var Ut = Gt.substr(1);
                    this._m = {
                        direction: Gt.substr(0, 1),
                        steps: Ut ? L(Ut) ? L(Ut) : Ut : 0
                    }
                }
            }), Pt(K, "length", {
                get: function() {
                    var Gt = B.settings,
                        Ut = F.Html.slides.length;
                    return this.isBound() ? Ut - 1 - (L(Gt.perView) - 1) + L(Gt.focusAt) : Ut - 1
                }
            }), Pt(K, "offset", {
                get: function() {
                    return this._o
                }
            }), K
        }

        function pt() {
            return new Date().getTime()
        }

        function $t(B, F, Q) {
            var K, dt, nt, mt, Rt = 0;
            Q || (Q = {});
            var Bt = function() {
                    Rt = Q.leading === !1 ? 0 : pt(), K = null, mt = B.apply(dt, nt), K || (dt = nt = null)
                },
                Gt = function() {
                    var ue = pt();
                    !Rt && Q.leading === !1 && (Rt = ue);
                    var he = F - (ue - Rt);
                    return dt = this, nt = arguments, he <= 0 || he > F ? (K && (clearTimeout(K), K = null), Rt = ue, mt = B.apply(dt, nt), K || (dt = nt = null)) : !K && Q.trailing !== !1 && (K = setTimeout(Bt, he)), mt
                };
            return Gt.cancel = function() {
                clearTimeout(K), Rt = 0, K = dt = nt = null
            }, Gt
        }
        var At = {
            ltr: ["marginLeft", "marginRight"],
            rtl: ["marginRight", "marginLeft"]
        };

        function Tt(B, F, Q) {
            var K = {
                apply: function(nt) {
                    for (var mt = 0, Rt = nt.length; mt < Rt; mt++) {
                        var Bt = nt[mt].style,
                            Gt = F.Direction.value;
                        mt !== 0 ? Bt[At[Gt][0]] = "".concat(this.value / 2, "px") : Bt[At[Gt][0]] = "", mt !== nt.length - 1 ? Bt[At[Gt][1]] = "".concat(this.value / 2, "px") : Bt[At[Gt][1]] = ""
                    }
                },
                remove: function(nt) {
                    for (var mt = 0, Rt = nt.length; mt < Rt; mt++) {
                        var Bt = nt[mt].style;
                        Bt.marginLeft = "", Bt.marginRight = ""
                    }
                }
            };
            return Pt(K, "value", {
                get: function() {
                    return L(B.settings.gap)
                }
            }), Pt(K, "grow", {
                get: function() {
                    return K.value * F.Sizes.length
                }
            }), Pt(K, "reductor", {
                get: function() {
                    var nt = B.settings.perView;
                    return K.value * (nt - 1) / nt
                }
            }), Q.on(["build.after", "update"], $t(function() {
                K.apply(F.Html.wrapper.children)
            }, 30)), Q.on("destroy", function() {
                K.remove(F.Html.wrapper.children)
            }), K
        }

        function vt(B) {
            if (B && B.parentNode) {
                for (var F = B.parentNode.firstChild, Q = []; F; F = F.nextSibling) F.nodeType === 1 && F !== B && Q.push(F);
                return Q
            }
            return []
        }

        function Dt(B) {
            return !!(B && B instanceof window.HTMLElement)
        }
        var Nt = '[data-glide-el="track"]';

        function Kt(B, F, Q) {
            var K = {
                mount: function() {
                    this.root = B.selector, this.track = this.root.querySelector(Nt), this.collectSlides()
                },
                collectSlides: function() {
                    this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function(nt) {
                        return !nt.classList.contains(B.settings.classes.slide.clone)
                    })
                }
            };
            return Pt(K, "root", {
                get: function() {
                    return K._r
                },
                set: function(nt) {
                    ut(nt) && (nt = document.querySelector(nt)), Dt(nt) ? K._r = nt : m("Root element must be a existing Html node")
                }
            }), Pt(K, "track", {
                get: function() {
                    return K._t
                },
                set: function(nt) {
                    Dt(nt) ? K._t = nt : m("Could not find track element. Please use ".concat(Nt, " attribute."))
                }
            }), Pt(K, "wrapper", {
                get: function() {
                    return K.track.children[0]
                }
            }), Q.on("update", function() {
                K.collectSlides()
            }), K
        }

        function le(B, F, Q) {
            var K = {
                mount: function() {
                    this.value = B.settings.peek
                }
            };
            return Pt(K, "value", {
                get: function() {
                    return K._v
                },
                set: function(nt) {
                    ht(nt) ? (nt.before = L(nt.before), nt.after = L(nt.after)) : nt = L(nt), K._v = nt
                }
            }), Pt(K, "reductor", {
                get: function() {
                    var nt = K.value,
                        mt = B.settings.perView;
                    return ht(nt) ? nt.before / mt + nt.after / mt : nt * 2 / mt
                }
            }), Q.on(["resize", "update"], function() {
                K.mount()
            }), K
        }

        function Ee(B, F, Q) {
            var K = {
                mount: function() {
                    this._o = 0
                },
                make: function() {
                    var nt = this,
                        mt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    this.offset = mt, Q.emit("move", {
                        movement: this.value
                    }), F.Transition.after(function() {
                        Q.emit("move.after", {
                            movement: nt.value
                        })
                    })
                }
            };
            return Pt(K, "offset", {
                get: function() {
                    return K._o
                },
                set: function(nt) {
                    K._o = d(nt) ? 0 : L(nt)
                }
            }), Pt(K, "translate", {
                get: function() {
                    return F.Sizes.slideWidth * B.index
                }
            }), Pt(K, "value", {
                get: function() {
                    var nt = this.offset,
                        mt = this.translate;
                    return F.Direction.is("rtl") ? mt + nt : mt - nt
                }
            }), Q.on(["build.before", "run"], function() {
                K.make()
            }), K
        }

        function Ye(B, F, Q) {
            var K = {
                setupSlides: function() {
                    for (var nt = "".concat(this.slideWidth, "px"), mt = F.Html.slides, Rt = 0; Rt < mt.length; Rt++) mt[Rt].style.width = nt
                },
                setupWrapper: function() {
                    F.Html.wrapper.style.width = "".concat(this.wrapperSize, "px")
                },
                remove: function() {
                    for (var nt = F.Html.slides, mt = 0; mt < nt.length; mt++) nt[mt].style.width = "";
                    F.Html.wrapper.style.width = ""
                }
            };
            return Pt(K, "length", {
                get: function() {
                    return F.Html.slides.length
                }
            }), Pt(K, "width", {
                get: function() {
                    return F.Html.track.offsetWidth
                }
            }), Pt(K, "wrapperSize", {
                get: function() {
                    return K.slideWidth * K.length + F.Gaps.grow + F.Clones.grow
                }
            }), Pt(K, "slideWidth", {
                get: function() {
                    return K.width / B.settings.perView - F.Peek.reductor - F.Gaps.reductor
                }
            }), Q.on(["build.before", "resize", "update"], function() {
                K.setupSlides(), K.setupWrapper()
            }), Q.on("destroy", function() {
                K.remove()
            }), K
        }

        function nn(B, F, Q) {
            var K = {
                mount: function() {
                    Q.emit("build.before"), this.typeClass(), this.activeClass(), Q.emit("build.after")
                },
                typeClass: function() {
                    F.Html.root.classList.add(B.settings.classes.type[B.settings.type])
                },
                activeClass: function() {
                    var nt = B.settings.classes,
                        mt = F.Html.slides[B.index];
                    mt && (mt.classList.add(nt.slide.active), vt(mt).forEach(function(Rt) {
                        Rt.classList.remove(nt.slide.active)
                    }))
                },
                removeClasses: function() {
                    var nt = B.settings.classes,
                        mt = nt.type,
                        Rt = nt.slide;
                    F.Html.root.classList.remove(mt[B.settings.type]), F.Html.slides.forEach(function(Bt) {
                        Bt.classList.remove(Rt.active)
                    })
                }
            };
            return Q.on(["destroy", "update"], function() {
                K.removeClasses()
            }), Q.on(["resize", "update"], function() {
                K.mount()
            }), Q.on("move.after", function() {
                K.activeClass()
            }), K
        }

        function E(B, F, Q) {
            var K = {
                mount: function() {
                    this.items = [], B.isType("carousel") && (this.items = this.collect())
                },
                collect: function() {
                    var nt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
                        mt = F.Html.slides,
                        Rt = B.settings,
                        Bt = Rt.perView,
                        Gt = Rt.classes,
                        Ut = Rt.cloningRatio;
                    if (mt.length !== 0)
                        for (var ue = +!!B.settings.peek, he = Bt + ue + Math.round(Bt / 2), qe = mt.slice(0, he).reverse(), Me = mt.slice(he * -1), Je = 0; Je < Math.max(Ut, Math.floor(Bt / mt.length)); Je++) {
                            for (var Cn = 0; Cn < qe.length; Cn++) {
                                var gn = qe[Cn].cloneNode(!0);
                                gn.classList.add(Gt.slide.clone), nt.push(gn)
                            }
                            for (var kn = 0; kn < Me.length; kn++) {
                                var Tn = Me[kn].cloneNode(!0);
                                Tn.classList.add(Gt.slide.clone), nt.unshift(Tn)
                            }
                        }
                    return nt
                },
                append: function() {
                    for (var nt = this.items, mt = F.Html, Rt = mt.wrapper, Bt = mt.slides, Gt = Math.floor(nt.length / 2), Ut = nt.slice(0, Gt).reverse(), ue = nt.slice(Gt * -1).reverse(), he = "".concat(F.Sizes.slideWidth, "px"), qe = 0; qe < ue.length; qe++) Rt.appendChild(ue[qe]);
                    for (var Me = 0; Me < Ut.length; Me++) Rt.insertBefore(Ut[Me], Bt[0]);
                    for (var Je = 0; Je < nt.length; Je++) nt[Je].style.width = he
                },
                remove: function() {
                    for (var nt = this.items, mt = 0; mt < nt.length; mt++) F.Html.wrapper.removeChild(nt[mt])
                }
            };
            return Pt(K, "grow", {
                get: function() {
                    return (F.Sizes.slideWidth + F.Gaps.value) * K.items.length
                }
            }), Q.on("update", function() {
                K.remove(), K.mount(), K.append()
            }), Q.on("build.before", function() {
                B.isType("carousel") && K.append()
            }), Q.on("destroy", function() {
                K.remove()
            }), K
        }
        var l = function() {
            function B() {
                var F = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                i(this, B), this.listeners = F
            }
            return f(B, [{
                key: "on",
                value: function(Q, K, dt) {
                    var nt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
                    ut(Q) && (Q = [Q]);
                    for (var mt = 0; mt < Q.length; mt++) this.listeners[Q[mt]] = dt, K.addEventListener(Q[mt], this.listeners[Q[mt]], nt)
                }
            }, {
                key: "off",
                value: function(Q, K) {
                    var dt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
                    ut(Q) && (Q = [Q]);
                    for (var nt = 0; nt < Q.length; nt++) K.removeEventListener(Q[nt], this.listeners[Q[nt]], dt)
                }
            }, {
                key: "destroy",
                value: function() {
                    delete this.listeners
                }
            }]), B
        }();

        function g(B, F, Q) {
            var K = new l,
                dt = {
                    mount: function() {
                        this.bind()
                    },
                    bind: function() {
                        K.on("resize", window, $t(function() {
                            Q.emit("resize")
                        }, B.settings.throttle))
                    },
                    unbind: function() {
                        K.off("resize", window)
                    }
                };
            return Q.on("destroy", function() {
                dt.unbind(), K.destroy()
            }), dt
        }
        var S = ["ltr", "rtl"],
            R = {
                ">": "<",
                "<": ">",
                "=": "="
            };

        function P(B, F, Q) {
            var K = {
                mount: function() {
                    this.value = B.settings.direction
                },
                resolve: function(nt) {
                    var mt = nt.slice(0, 1);
                    return this.is("rtl") ? nt.split(mt).join(R[mt]) : nt
                },
                is: function(nt) {
                    return this.value === nt
                },
                addClass: function() {
                    F.Html.root.classList.add(B.settings.classes.direction[this.value])
                },
                removeClass: function() {
                    F.Html.root.classList.remove(B.settings.classes.direction[this.value])
                }
            };
            return Pt(K, "value", {
                get: function() {
                    return K._v
                },
                set: function(nt) {
                    S.indexOf(nt) > -1 ? K._v = nt : m("Direction value must be `ltr` or `rtl`")
                }
            }), Q.on(["destroy", "update"], function() {
                K.removeClass()
            }), Q.on("update", function() {
                K.mount()
            }), Q.on(["build.before", "update"], function() {
                K.addClass()
            }), K
        }

        function j(B, F) {
            return {
                modify: function(K) {
                    return F.Direction.is("rtl") ? -K : K
                }
            }
        }

        function ct(B, F) {
            return {
                modify: function(K) {
                    var dt = Math.floor(K / F.Sizes.slideWidth);
                    return K + F.Gaps.value * dt
                }
            }
        }

        function Mt(B, F) {
            return {
                modify: function(K) {
                    return K + F.Clones.grow / 2
                }
            }
        }

        function yt(B, F) {
            return {
                modify: function(K) {
                    if (B.settings.focusAt >= 0) {
                        var dt = F.Peek.value;
                        return ht(dt) ? K - dt.before : K - dt
                    }
                    return K
                }
            }
        }

        function Ft(B, F) {
            return {
                modify: function(K) {
                    var dt = F.Gaps.value,
                        nt = F.Sizes.width,
                        mt = B.settings.focusAt,
                        Rt = F.Sizes.slideWidth;
                    return mt === "center" ? K - (nt / 2 - Rt / 2) : K - Rt * mt - dt * mt
                }
            }
        }

        function Ht(B, F, Q) {
            var K = [ct, Mt, yt, Ft].concat(B._t, [j]);
            return {
                mutate: function(nt) {
                    for (var mt = 0; mt < K.length; mt++) {
                        var Rt = K[mt];
                        bt(Rt) && bt(Rt().modify) ? nt = Rt(B, F, Q).modify(nt) : m("Transformer should be a function that returns an object with `modify()` method")
                    }
                    return nt
                }
            }
        }

        function fe(B, F, Q) {
            var K = {
                set: function(nt) {
                    var mt = Ht(B, F).mutate(nt),
                        Rt = "translate3d(".concat(-1 * mt, "px, 0px, 0px)");
                    F.Html.wrapper.style.mozTransform = Rt, F.Html.wrapper.style.webkitTransform = Rt, F.Html.wrapper.style.transform = Rt
                },
                remove: function() {
                    F.Html.wrapper.style.transform = ""
                },
                getStartIndex: function() {
                    var nt = F.Sizes.length,
                        mt = B.index,
                        Rt = B.settings.perView;
                    return F.Run.isOffset(">") || F.Run.isOffset("|>") ? nt + (mt - Rt) : (mt + Rt) % nt
                },
                getTravelDistance: function() {
                    var nt = F.Sizes.slideWidth * B.settings.perView;
                    return F.Run.isOffset(">") || F.Run.isOffset("|>") ? nt * -1 : nt
                }
            };
            return Q.on("move", function(dt) {
                if (!B.isType("carousel") || !F.Run.isOffset()) return K.set(dt.movement);
                F.Transition.after(function() {
                    Q.emit("translate.jump"), K.set(F.Sizes.slideWidth * B.index)
                });
                var nt = F.Sizes.slideWidth * F.Translate.getStartIndex();
                return K.set(nt - F.Translate.getTravelDistance())
            }), Q.on("destroy", function() {
                K.remove()
            }), K
        }

        function Le(B, F, Q) {
            var K = !1,
                dt = {
                    compose: function(mt) {
                        var Rt = B.settings;
                        return K ? "".concat(mt, " 0ms ").concat(Rt.animationTimingFunc) : "".concat(mt, " ").concat(this.duration, "ms ").concat(Rt.animationTimingFunc)
                    },
                    set: function() {
                        var mt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "transform";
                        F.Html.wrapper.style.transition = this.compose(mt)
                    },
                    remove: function() {
                        F.Html.wrapper.style.transition = ""
                    },
                    after: function(mt) {
                        setTimeout(function() {
                            mt()
                        }, this.duration)
                    },
                    enable: function() {
                        K = !1, this.set()
                    },
                    disable: function() {
                        K = !0, this.set()
                    }
                };
            return Pt(dt, "duration", {
                get: function() {
                    var mt = B.settings;
                    return B.isType("slider") && F.Run.offset ? mt.rewindDuration : mt.animationDuration
                }
            }), Q.on("move", function() {
                dt.set()
            }), Q.on(["build.before", "resize", "translate.jump"], function() {
                dt.disable()
            }), Q.on("run", function() {
                dt.enable()
            }), Q.on("destroy", function() {
                dt.remove()
            }), dt
        }
        var hn = !1;
        try {
            var be = Object.defineProperty({}, "passive", {
                get: function() {
                    hn = !0
                }
            });
            window.addEventListener("testPassive", null, be), window.removeEventListener("testPassive", null, be)
        } catch {}
        var ke = hn,
            Te = ["touchstart", "mousedown"],
            sn = ["touchmove", "mousemove"],
            oe = ["touchend", "touchcancel", "mouseup", "mouseleave"],
            Ue = ["mousedown", "mousemove", "mouseup", "mouseleave"];

        function H(B, F, Q) {
            var K = new l,
                dt = 0,
                nt = 0,
                mt = 0,
                Rt = !1,
                Bt = ke ? {
                    passive: !0
                } : !1,
                Gt = {
                    mount: function() {
                        this.bindSwipeStart()
                    },
                    start: function(ue) {
                        if (!Rt && !B.disabled) {
                            this.disable();
                            var he = this.touches(ue);
                            dt = null, nt = L(he.pageX), mt = L(he.pageY), this.bindSwipeMove(), this.bindSwipeEnd(), Q.emit("swipe.start")
                        }
                    },
                    move: function(ue) {
                        if (!B.disabled) {
                            var he = B.settings,
                                qe = he.touchAngle,
                                Me = he.touchRatio,
                                Je = he.classes,
                                Cn = this.touches(ue),
                                gn = L(Cn.pageX) - nt,
                                kn = L(Cn.pageY) - mt,
                                Tn = Math.abs(gn << 2),
                                ce = Math.abs(kn << 2),
                                w = Math.sqrt(Tn + ce),
                                a = Math.sqrt(ce);
                            if (dt = Math.asin(a / w), dt * 180 / Math.PI < qe) ue.stopPropagation(), F.Move.make(gn * X(Me)), F.Html.root.classList.add(Je.dragging), Q.emit("swipe.move");
                            else return !1
                        }
                    },
                    end: function(ue) {
                        if (!B.disabled) {
                            var he = B.settings,
                                qe = he.perSwipe,
                                Me = he.touchAngle,
                                Je = he.classes,
                                Cn = this.touches(ue),
                                gn = this.threshold(ue),
                                kn = Cn.pageX - nt,
                                Tn = dt * 180 / Math.PI;
                            this.enable(), kn > gn && Tn < Me ? F.Run.make(F.Direction.resolve("".concat(qe, "<"))) : kn < -gn && Tn < Me ? F.Run.make(F.Direction.resolve("".concat(qe, ">"))) : F.Move.make(), F.Html.root.classList.remove(Je.dragging), this.unbindSwipeMove(), this.unbindSwipeEnd(), Q.emit("swipe.end")
                        }
                    },
                    bindSwipeStart: function() {
                        var ue = this,
                            he = B.settings,
                            qe = he.swipeThreshold,
                            Me = he.dragThreshold;
                        qe && K.on(Te[0], F.Html.wrapper, function(Je) {
                            ue.start(Je)
                        }, Bt), Me && K.on(Te[1], F.Html.wrapper, function(Je) {
                            ue.start(Je)
                        }, Bt)
                    },
                    unbindSwipeStart: function() {
                        K.off(Te[0], F.Html.wrapper, Bt), K.off(Te[1], F.Html.wrapper, Bt)
                    },
                    bindSwipeMove: function() {
                        var ue = this;
                        K.on(sn, F.Html.wrapper, $t(function(he) {
                            ue.move(he)
                        }, B.settings.throttle), Bt)
                    },
                    unbindSwipeMove: function() {
                        K.off(sn, F.Html.wrapper, Bt)
                    },
                    bindSwipeEnd: function() {
                        var ue = this;
                        K.on(oe, F.Html.wrapper, function(he) {
                            ue.end(he)
                        })
                    },
                    unbindSwipeEnd: function() {
                        K.off(oe, F.Html.wrapper)
                    },
                    touches: function(ue) {
                        return Ue.indexOf(ue.type) > -1 ? ue : ue.touches[0] || ue.changedTouches[0]
                    },
                    threshold: function(ue) {
                        var he = B.settings;
                        return Ue.indexOf(ue.type) > -1 ? he.dragThreshold : he.swipeThreshold
                    },
                    enable: function() {
                        return Rt = !1, F.Transition.enable(), this
                    },
                    disable: function() {
                        return Rt = !0, F.Transition.disable(), this
                    }
                };
            return Q.on("build.after", function() {
                F.Html.root.classList.add(B.settings.classes.swipeable)
            }), Q.on("destroy", function() {
                Gt.unbindSwipeStart(), Gt.unbindSwipeMove(), Gt.unbindSwipeEnd(), K.destroy()
            }), Gt
        }

        function N(B, F, Q) {
            var K = new l,
                dt = {
                    mount: function() {
                        this.bind()
                    },
                    bind: function() {
                        K.on("dragstart", F.Html.wrapper, this.dragstart)
                    },
                    unbind: function() {
                        K.off("dragstart", F.Html.wrapper)
                    },
                    dragstart: function(mt) {
                        mt.preventDefault()
                    }
                };
            return Q.on("destroy", function() {
                dt.unbind(), K.destroy()
            }), dt
        }

        function J(B, F, Q) {
            var K = new l,
                dt = !1,
                nt = !1,
                mt = {
                    mount: function() {
                        this._a = F.Html.wrapper.querySelectorAll("a"), this.bind()
                    },
                    bind: function() {
                        K.on("click", F.Html.wrapper, this.click)
                    },
                    unbind: function() {
                        K.off("click", F.Html.wrapper)
                    },
                    click: function(Bt) {
                        nt && (Bt.stopPropagation(), Bt.preventDefault())
                    },
                    detach: function() {
                        if (nt = !0, !dt) {
                            for (var Bt = 0; Bt < this.items.length; Bt++) this.items[Bt].draggable = !1;
                            dt = !0
                        }
                        return this
                    },
                    attach: function() {
                        if (nt = !1, dt) {
                            for (var Bt = 0; Bt < this.items.length; Bt++) this.items[Bt].draggable = !0;
                            dt = !1
                        }
                        return this
                    }
                };
            return Pt(mt, "items", {
                get: function() {
                    return mt._a
                }
            }), Q.on("swipe.move", function() {
                mt.detach()
            }), Q.on("swipe.end", function() {
                F.Transition.after(function() {
                    mt.attach()
                })
            }), Q.on("destroy", function() {
                mt.attach(), mt.unbind(), K.destroy()
            }), mt
        }
        var M = '[data-glide-el="controls[nav]"]',
            Y = '[data-glide-el^="controls"]',
            Ct = "".concat(Y, ' [data-glide-dir*="<"]'),
            Et = "".concat(Y, ' [data-glide-dir*=">"]');

        function Wt(B, F, Q) {
            var K = new l,
                dt = ke ? {
                    passive: !0
                } : !1,
                nt = {
                    mount: function() {
                        this._n = F.Html.root.querySelectorAll(M), this._c = F.Html.root.querySelectorAll(Y), this._arrowControls = {
                            previous: F.Html.root.querySelectorAll(Ct),
                            next: F.Html.root.querySelectorAll(Et)
                        }, this.addBindings()
                    },
                    setActive: function() {
                        for (var Rt = 0; Rt < this._n.length; Rt++) this.addClass(this._n[Rt].children)
                    },
                    removeActive: function() {
                        for (var Rt = 0; Rt < this._n.length; Rt++) this.removeClass(this._n[Rt].children)
                    },
                    addClass: function(Rt) {
                        var Bt = B.settings,
                            Gt = Rt[B.index];
                        !Gt || Gt && (Gt.classList.add(Bt.classes.nav.active), vt(Gt).forEach(function(Ut) {
                            Ut.classList.remove(Bt.classes.nav.active)
                        }))
                    },
                    removeClass: function(Rt) {
                        var Bt = Rt[B.index];
                        Bt && Bt.classList.remove(B.settings.classes.nav.active)
                    },
                    setArrowState: function() {
                        if (!B.settings.rewind) {
                            var Rt = nt._arrowControls.next,
                                Bt = nt._arrowControls.previous;
                            this.resetArrowState(Rt, Bt), B.index === 0 && this.disableArrow(Bt), B.index === F.Run.length && this.disableArrow(Rt)
                        }
                    },
                    resetArrowState: function() {
                        for (var Rt = B.settings, Bt = arguments.length, Gt = new Array(Bt), Ut = 0; Ut < Bt; Ut++) Gt[Ut] = arguments[Ut];
                        Gt.forEach(function(ue) {
                            ue.forEach(function(he) {
                                he.classList.remove(Rt.classes.arrow.disabled)
                            })
                        })
                    },
                    disableArrow: function() {
                        for (var Rt = B.settings, Bt = arguments.length, Gt = new Array(Bt), Ut = 0; Ut < Bt; Ut++) Gt[Ut] = arguments[Ut];
                        Gt.forEach(function(ue) {
                            ue.forEach(function(he) {
                                he.classList.add(Rt.classes.arrow.disabled)
                            })
                        })
                    },
                    addBindings: function() {
                        for (var Rt = 0; Rt < this._c.length; Rt++) this.bind(this._c[Rt].children)
                    },
                    removeBindings: function() {
                        for (var Rt = 0; Rt < this._c.length; Rt++) this.unbind(this._c[Rt].children)
                    },
                    bind: function(Rt) {
                        for (var Bt = 0; Bt < Rt.length; Bt++) K.on("click", Rt[Bt], this.click), K.on("touchstart", Rt[Bt], this.click, dt)
                    },
                    unbind: function(Rt) {
                        for (var Bt = 0; Bt < Rt.length; Bt++) K.off(["click", "touchstart"], Rt[Bt])
                    },
                    click: function(Rt) {
                        !ke && Rt.type === "touchstart" && Rt.preventDefault();
                        var Bt = Rt.currentTarget.getAttribute("data-glide-dir");
                        F.Run.make(F.Direction.resolve(Bt))
                    }
                };
            return Pt(nt, "items", {
                get: function() {
                    return nt._c
                }
            }), Q.on(["mount.after", "move.after"], function() {
                nt.setActive()
            }), Q.on(["mount.after", "run"], function() {
                nt.setArrowState()
            }), Q.on("destroy", function() {
                nt.removeBindings(), nt.removeActive(), K.destroy()
            }), nt
        }

        function Yt(B, F, Q) {
            var K = new l,
                dt = {
                    mount: function() {
                        B.settings.keyboard && this.bind()
                    },
                    bind: function() {
                        K.on("keyup", document, this.press)
                    },
                    unbind: function() {
                        K.off("keyup", document)
                    },
                    press: function(mt) {
                        var Rt = B.settings.perSwipe;
                        mt.keyCode === 39 && F.Run.make(F.Direction.resolve("".concat(Rt, ">"))), mt.keyCode === 37 && F.Run.make(F.Direction.resolve("".concat(Rt, "<")))
                    }
                };
            return Q.on(["destroy", "update"], function() {
                dt.unbind()
            }), Q.on("update", function() {
                dt.mount()
            }), Q.on("destroy", function() {
                K.destroy()
            }), dt
        }

        function Se(B, F, Q) {
            var K = new l,
                dt = {
                    mount: function() {
                        this.enable(), this.start(), B.settings.hoverpause && this.bind()
                    },
                    enable: function() {
                        this._e = !0
                    },
                    disable: function() {
                        this._e = !1
                    },
                    start: function() {
                        var mt = this;
                        !this._e || (this.enable(), B.settings.autoplay && d(this._i) && (this._i = setInterval(function() {
                            mt.stop(), F.Run.make(">"), mt.start(), Q.emit("autoplay")
                        }, this.time)))
                    },
                    stop: function() {
                        this._i = clearInterval(this._i)
                    },
                    bind: function() {
                        var mt = this;
                        K.on("mouseover", F.Html.root, function() {
                            mt._e && mt.stop()
                        }), K.on("mouseout", F.Html.root, function() {
                            mt._e && mt.start()
                        })
                    },
                    unbind: function() {
                        K.off(["mouseover", "mouseout"], F.Html.root)
                    }
                };
            return Pt(dt, "time", {
                get: function() {
                    var mt = F.Html.slides[B.index].getAttribute("data-glide-autoplay");
                    return L(mt || B.settings.autoplay)
                }
            }), Q.on(["destroy", "update"], function() {
                dt.unbind()
            }), Q.on(["run.before", "swipe.start", "update"], function() {
                dt.stop()
            }), Q.on(["pause", "destroy"], function() {
                dt.disable(), dt.stop()
            }), Q.on(["run.after", "swipe.end"], function() {
                dt.start()
            }), Q.on(["play"], function() {
                dt.enable(), dt.start()
            }), Q.on("update", function() {
                dt.mount()
            }), Q.on("destroy", function() {
                K.destroy()
            }), dt
        }

        function Ke(B) {
            return ht(B) ? Ce(B) : (m("Breakpoints option must be an object"), {})
        }

        function re(B, F, Q) {
            var K = new l,
                dt = B.settings,
                nt = Ke(dt.breakpoints),
                mt = Object.assign({}, dt),
                Rt = {
                    match: function(Gt) {
                        if (typeof window.matchMedia < "u") {
                            for (var Ut in Gt)
                                if (Gt.hasOwnProperty(Ut) && window.matchMedia("(max-width: ".concat(Ut, "px)")).matches) return Gt[Ut]
                        }
                        return mt
                    }
                };
            return Object.assign(dt, Rt.match(nt)), K.on("resize", window, $t(function() {
                B.settings = Xt(dt, Rt.match(nt))
            }, B.settings.throttle)), Q.on("update", function() {
                nt = Ke(nt), mt = Object.assign({}, dt)
            }), Q.on("destroy", function() {
                K.off("resize", window)
            }), Rt
        }
        var Bn = {
                Html: Kt,
                Translate: fe,
                Transition: Le,
                Direction: P,
                Peek: le,
                Sizes: Ye,
                Gaps: Tt,
                Move: Ee,
                Clones: E,
                Resize: g,
                Build: nn,
                Run: G,
                Swipe: H,
                Images: N,
                Anchors: J,
                Controls: Wt,
                Keyboard: Yt,
                Autoplay: Se,
                Breakpoints: re
            },
            Un = function(B) {
                v(Q, B);
                var F = tt(Q);

                function Q() {
                    return i(this, Q), F.apply(this, arguments)
                }
                return f(Q, [{
                    key: "mount",
                    value: function() {
                        var dt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        return V(y(Q.prototype), "mount", this).call(this, Object.assign({}, Bn, dt))
                    }
                }]), Q
            }(Jt);
        return Un
    })
})(ph);
const wc = ph.exports,
    ax = function(t, n, i, o, f, v) {
        this.isDrawing = !1, this.isClean = !0, this.isEnabled = !0, this.lines = [], this.undoStack = [], this.canvas = t, this.context = n, this.undoStackLimit = 20, this.context.save(), this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.clearRect(0, 0, this.canvas.width, this.canvas.height), this.context.restore(), this.context.scale(2, 2), this.widthMargin = i, this.heightMargin = o, this.heightDiffArray = f, this.thickness = 6, this.color = "#000000", this.background = v, typeof this.canvas.style.msTouchAction < "u" && (this.canvas.style.msTouchAction = "none");
        const y = this,
            k = function() {
                let V = 0;
                y.heightDiffArray.forEach(ut => {
                    lt(ut).each(function() {
                        V += lt(this).outerHeight(!0)
                    })
                });
                let ot = Math.min(600, .9 * (window.innerWidth - y.widthMargin)),
                    m = window.innerHeight - V - y.heightMargin;
                m < 150 && (m = 150, ot = m * (window.innerWidth / window.innerHeight));
                const L = ot / m,
                    X = y.canvas.width / y.canvas.height;
                X < L ? (y.canvas.style.height = `${m}px`, y.canvas.style.width = `${m*X}px`) : (y.canvas.style.width = `${ot}px`, y.canvas.style.height = `${ot*(1/X)}px`), window.scrollTo(0, 0)
            };
        window.onresize = k;
        const A = function(V) {
                if (V.type === "touchmove") V.preventDefault();
                else if (V.type === "touchend") {
                    y.isDrawing && V.preventDefault(), y[V.type]();
                    return
                }
                const ot = y.canvas.getBoundingClientRect(),
                    m = {
                        x: V.targetTouches[0].pageX - ot.left,
                        y: V.targetTouches[0].pageY - ot.top
                    };
                m.x *= y.canvas.width / parseInt(y.canvas.style.width, 10), m.y *= y.canvas.height / parseInt(y.canvas.style.height, 10), m.x *= .5, m.y *= .5, y[V.type](m)
            },
            D = function(V) {
                if (V.type === "mousemove") V.preventDefault();
                else if (V.type === "mouseup") {
                    y[V.type]();
                    return
                }
                const ot = y.canvas.getBoundingClientRect(),
                    m = {
                        x: V.clientX - ot.left,
                        y: V.clientY - ot.top
                    };
                m.x *= y.canvas.width / parseInt(y.canvas.style.width, 10), m.y *= y.canvas.height / parseInt(y.canvas.style.height, 10), m.x *= .5, m.y *= .5, y[V.type](m)
            };
        this.canvas.addEventListener("touchstart", A, !1), this.canvas.addEventListener("touchmove", A, !1), document.addEventListener("touchend", A, !1), this.canvas.addEventListener("mousedown", D, !1), this.canvas.addEventListener("mousemove", D, !1), document.addEventListener("mouseup", D, !1);
        const $ = function(V, ot, m, L, X) {
                V.strokeStyle = ot, V.lineCap = "round", V.lineJoin = "round", V.lineWidth = m, V.beginPath(), V.arc(L, X, .01, 0, 2 * Math.PI, !0), V.stroke(), V.moveTo(L, X)
            },
            tt = function(V, ot, m) {
                V.lineTo(ot, m), V.stroke()
            };
        this.pushUndoSnapshot = function() {
            for (y.undoStack.push(y.takeSnapshot()); y.undoStack.length > y.undoStackLimit;) y.undoStack.shift()
        }, this.undoLine = function() {
            if (y.isDrawing) return;
            const V = y.undoStack.pop();
            V && (y.lines.pop(), y.lines.length === 0 && (y.isClean = !0), this.context.clearRect(0, 0, y.canvas.width, y.canvas.height), this.context.putImageData(V, 0, 0))
        }, this.clearCanvas = function() {
            y.lines = [], y.undoStack = [], y.context.clearRect(0, 0, y.canvas.width, y.canvas.height), y.isClean = !0
        }, this.getLines = function() {
            return this.lines
        }, this.getWidth = function() {
            return y.canvas.style.width
        }, this.makeBase64Image = function(V, ot) {
            V || (V = {
                lines: y.lines,
                background: y.background
            });
            const m = V.lines,
                L = ot ? "transparent" : V.background,
                X = y.redrawFromLines(m, L),
                ut = new Image;
            return ut.id = "pic", ut.className = "img-responsive center-block", ut.src = X.toDataURL(), ut
        }, this.takeSnapshot = function() {
            return y.context.getImageData(0, 0, y.canvas.width, y.canvas.height)
        }, this.redrawFromLines = function(V, ot) {
            const m = document.createElement("canvas");
            m.width = y.canvas.width, m.height = y.canvas.height;
            const L = m.getContext("2d");
            L.scale(2, 2), L.strokeStyle = y.color, L.lineCap = "round", L.lineJoin = "round", ot !== null && (L.fillStyle = ot, L.fillRect(0, 0, y.canvas.width, y.canvas.height), L.fillStyle = y.color);
            for (let X = 0; X < V.length; X++) {
                const ut = V[X];
                for (let ht = 0; ht < ut.points.length; ht++) {
                    const bt = ut.points[ht];
                    ht === 0 ? $(L, ut.color, ut.thickness, bt.x, bt.y) : tt(L, bt.x, bt.y)
                }
            }
            return m
        }, this.start = function(V) {
            !y.isEnabled || (y.pushUndoSnapshot(), V.x = Math.min(Math.max(V.x, .5 * y.thickness), 300 - .5 * y.thickness), V.y = Math.min(Math.max(V.y, .5 * y.thickness), 300 - .5 * y.thickness), $(y.context, y.color, y.thickness, V.x, V.y), y.isDrawing = !0, y.isClean = !1, y.lines.push({
                thickness: y.thickness,
                color: y.color,
                points: [V]
            }))
        }, this.move = function(V) {
            if (!y.isDrawing) return;
            const m = y.lines[y.lines.length - 1].points,
                L = m[m.length - 1],
                X = .5 * this.thickness,
                ut = {
                    x: V.x - L.x,
                    y: V.y - L.y
                },
                ht = Math.sqrt(ut.x ** 2 + ut.y ** 2);
            if (ht > X) {
                const bt = (ht - X) / ht,
                    d = {
                        x: ut.x * bt,
                        y: ut.y * bt
                    },
                    kt = {
                        x: L.x + d.x,
                        y: L.y + d.y
                    };
                kt.x = Math.min(Math.max(kt.x, .5 * y.thickness), 300 - .5 * y.thickness), kt.y = Math.min(Math.max(kt.y, .5 * y.thickness), 300 - .5 * y.thickness), m.push(kt), tt(y.context, kt.x, kt.y)
            }
        }, this.getLastDrawnPoint = function() {
            return this.currentLine.points.length === 0 ? null : this.currentLine.points[this.currentLine.points.length - 1]
        }, this.end = function() {
            if (y.isDrawing) {
                y.isDrawing = !1;
                const V = y.lines[y.lines.length - 1],
                    ot = V.points;
                ot.length > 0 && (V.points = a1(ot, .6))
            }
        }, this.touchstart = this.start, this.touchmove = this.move, this.touchend = this.end, this.mousedown = this.start, this.mousemove = this.move, this.mouseup = this.end, k(), this.resize = k
    },
    lx = function(t, n, i, o, f) {
        this.element = lt(t), this.widthMargin = n, this.heightMargin = i, this.heightDiffArray = o, this.elementAspectRatio = f;
        const v = this,
            y = function() {
                let A = 0;
                o.forEach(ot => {
                    lt(ot).each(function() {
                        A += lt(this).outerHeight(!0)
                    })
                });
                const D = 1 * v.elementAspectRatio,
                    $ = 1,
                    tt = window.innerWidth - v.widthMargin,
                    st = Math.max(lt(window).innerHeight() - A - v.heightMargin, 250),
                    V = Math.min(tt / D, st / $);
                v.width = D * V, v.height = $ * V, v.element.width(`${v.width}px`), v.element.height(`${v.height}px`), window.scrollTo(0, 0), v.onResize()
            };
        this.onResize = function() {}, window.onresize = y, y(), this.resize = y
    },
    cx = `<div id="page-awshirt" class="page">
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Rokkitt:400,700">
    <template id="awshirt-vote-button">
        <div class="awshirt-button-group">
            <button type="button" style='flex-grow:2;' data-index='{{ order }}' class='awshirt-vote-button awshirt-button btn btn-lg'>{{ slogan }}</button>
            {{# if (censorable) { }}
                <button data-censor='{{ order }}' class='awshirt-censor-button awshirt-button btn btn-lg' style="flex-grow:0;flex-basis:35px;">X</button>
            {{# } }}
        </div>
    </template>
    <div id="player" class="pre-sketchpad pre-sketchpad-shirt">
        <div class="player-title-bar">
            <div class="pull-left" style="display:inline-block;">
                <div class="awshirt-player-avatar" style="display:none;"></div>
            </div>
            <h1 id="username"></h1>
        </div>
        <div class="awshirt-message-panel">
            <div class="awshirt-text"><p id="awshirt-message"></p></div>
        </div>
    </div>
    
    <div id="awshirt-preload" class="awshirt-preload"></div>

    <div id="game" class="game pt-pageholder">    
        <div id="state-lobby" class="pt-page-off awshirt-page">
            <div class="container">
                <div id="lobby-main-menu"> 
                    <span id="awshirt-lobby-text" class="awshirt-lobby-text"></span>
                    <form class="pure-form">                     
                        <button type="button" id="awshirt-startgame" class="awshirt-button button-xlarge pure-button pure-input-1">FIGHT</button> 
                        <button type="button" id="awshirt-stopcountdown" class="awshirt-button  button-xlarge pure-button pure-input-1">CANCEL</button> 
                        <button type="button" id="awshirt-sameplayers" class="awshirt-button  button-xlarge pure-button pure-input-1 awshirt-endbuttons">SAME PLAYERS</button> 
                        <button type="button" id="awshirt-newplayers" class="awshirt-button  button-xlarge pure-button pure-input-1 awshirt-endbuttons">NEW PLAYERS</button>     
                    </form> 
 
                    <form class="pure-form"> 
                        <button type="button" id="awshirt-lobby-menu-censor" class="menu-button lobby-button awshirt-button button-xlarge pure-button pure-input-1">Censor Menu</button>
                    </form> 
                    <div class="awshirt-avatars">
                    <!-- catfish, cat, kappa, redDemon, hair, fire, crow, blueDemon, fox, bun, raccoon, dog, snake, monkey, umbrella, baku -->
                        <button data-avatar="catfish" class="awshirt-avatar catfish"></button>
                        <button data-avatar="cat" class="awshirt-avatar cat"></button>
                        <button data-avatar="kappa" class="awshirt-avatar kappa"></button>
                        <button data-avatar="redDemon" class="awshirt-avatar redDemon"></button>
                        <button data-avatar="hair" class="awshirt-avatar hair"></button>
                        <button data-avatar="fire" class="awshirt-avatar fire"></button>
                        <button data-avatar="crow" class="awshirt-avatar crow"></button>
                        <button data-avatar="blueDemon" class="awshirt-avatar blueDemon"></button>
                        <button data-avatar="fox" class="awshirt-avatar fox"></button>
                        <button data-avatar="bun" class="awshirt-avatar bun"></button>
                        <button data-avatar="raccoon" class="awshirt-avatar raccoon"></button>
                        <button data-avatar="dog" class="awshirt-avatar dog"></button>
                        <button data-avatar="snake" class="awshirt-avatar snake"></button>
                        <button data-avatar="monkey" class="awshirt-avatar monkey"></button>
                        <button data-avatar="umbrella" class="awshirt-avatar umbrella"></button>
                        <button data-avatar="baku" class="awshirt-avatar baku"></button>
                    </div>
                    <form>
                        <div id="awshirt-taunt-input-group" class="form-group">
                            <label for="awshirt-taunt-text" class="awshirt-lobby-text">Victory Quote</label>
                            <div class="awshirt-button-group awshirt-taunt-group">
                                <input id="awshirt-taunt-text" type="text" class="awshirt-input-text" placeholder="VICTORY QUOTE" autocapitalize='off' autocorrect='off' autocomplete='off' maxLength="70">
                                <button id="awshirt-taunt-submit" class="awshirt-button-submit btn" type="submit" disabled>SET</button>
                            </div>
                        </div>
                    </form>
                    <form class="pure-form">
                        <div id="awshirt-lobby-postgame" class="">
                            <a target="_blank" class="gallery-link" href=""><div class='galleryImage'></div></a>
                        </div>
                    </form>
                </div> 
             
                <div id="lobby-censor"> 
                     
                    <div class="pure-u-1"></div> 
                     
                    <form class="pure-form"> 
                        <div class="pure-u-1"> 
                            <button type="button" class="awshirt-lobby-menu-back awshirt-button button-xlarge pure-button pure-input-1" style="margin-left: 0px; margin-right: 0px;">back</button> 
                        </div> 
                         
                        <div class="pure-u-1"></div> 
                         
                        <div id="lobby-censor-players" class="pure-u-1"></div> 
                        <div class="awshirt-text awshirt-text-alt">Hit X to CENSOR player for rest of the game, hiding their name.</div>
                    </form> 
                </div> 
            </div>
        </div>

        <div id="state-logo" class="pt-page-off awshirt-page awshirt-player-avatar-large">
            
            <!-- <div class="logo-image"></div> -->
        </div>
        
        <div id="state-audience" class="pt-page-off awshirt-page">
            <p class="awshirt-text-audience">
                <span id="awshirt-audience" class='awshirt-text-audience awshirt-text audience'></span>
            </p>
            <div class="logo-image"></div>
        </div>

        <div id="state-draw" class="pt-page-off awshirt-page">
            <!-- <div class="container"> -->
                <div class="awshirt-solid-bg">
                    
                    <div class="">
                        <div class="canvas-container">
                            <ul class="nav awshirt-nav-colors pre-sketchpad">
                                <li class="pull-left awshirt-button-pad">
                                    <button class="awshirt-thickness awshirt-button" data-thickness="10"> 
                                        <div class="thickness-circle"></div> 
                                    </button> 
                                </li>
                                <li class="">
                                    <ul id="awshirt-color-buttons" class="nav pull-right">
                                    </ul>
                                </li>
                            </ul>
                            <canvas class="awshirt-sketchpad" width='600' height='600' style='background-color:white;'> 
                              Sorry, your browser is not supported. 
                            </canvas> 
                            <ul class="awshirt-drawing-buttons nav nav-tabs awshirt-nav-backgrounds">
                                <li class="pull-left">
                                    <ul class="nav awshirt-background-picker"></ul>
                                </li>
                                
                            </ul>
                            <ul class="awshirt-drawing-buttons nav nav-tabs awshirt-nav-backgrounds">
                                <li class="pull-right">
                                    <div class="awshirt-button-pad">
                                        <button type="submit" id="awshirt-submitdrawing" class="submit-drawing awshirt-button awshirt-button-submit"><i class="fas fa-check" aria-hidden="true"></i></button>
                                        <div id="awshirt-submitdrawing-loading" style="display:none;" class="awshirt-button-loading">
                                    </div>
                                </li>
                                <li class="pull-right">
                                    <div class="awshirt-button-pad">
                                        <button class="awshirt-undo awshirt-button">
                                            <svg version="1.0" xmlns="http://www.w3.org/2000/svg"
                                             width="20pt" height="21pt" viewBox="0 0 46.000000 36.000000"
                                             preserveAspectRatio="xMidYMid meet">

                                            <g transform="translate(0.000000,36.000000) scale(0.100000,-0.100000)"
                                            fill="#000000" stroke="none">
                                            <path d="M60 295 l-65 -65 68 -68 67 -67 0 48 0 47 125 0 125 0 0 -55 0 -55
                                            -155 0 -155 0 0 -40 0 -40 195 0 195 0 0 140 0 140 -164 0 -165 0 -3 40 -3 41
                                            -65 -66z"/>
                                            </g>
                                            </svg>
                                        </button>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 awshirt-button-bar post-sketchpad">
                    <button type="button" id="awshirt-drawing-audience-censor" class="awshirt-audience-censor awshirt-button capitalize btn btn-block">CENSOR AUDIENCE</button>
                    <button id="awshirt-suggestdraw" class='awshirt-button-suggestion awshirt-suggestion awshirt-button btn btn-block'> 
                        <span id="awshirt-instructions" class='awshirt-text-instruction awshirt-text drawing-instructions'>SUGGESTION</span>
                    </button> 

                    <p class="awshirt-text-instruction">
                        <span id="awshirt-instructions" class='awshirt-text-instruction awshirt-text instructions'>a picture of yourself!</span>
                    </p>
                </div>
            <!-- </div> -->
        </div>

        <div id="state-drawing-done" class="pt-page-off awshirt-page awshirt-player-avatar-large">
        </div>

        <div id="state-input" class="pt-page-off awshirt-page">
            <form>
                <fieldset>
                    <div class="container">
                        <div class="row">
                            <div class="awshirt-task"></div>
                            <p class="awshirt-text-instruction">
                                <span class='awshirt-text-instruction awshirt-text instructions'>a picture of yourself!</span>
                            </p>
                            <label for='awshirt-title-input' id="awshirt-input-task"></label>
                            <input id='awshirt-title-input' value='' type='text' class='form-control input-lg awshirt-input-text' autocapitalize='off' autocorrect='off' autocomplete='off' maxlength='70'/>
                            <div class="col-xs-12">
                            <ul class="nav nav-tabs">
                                <li class="pull-right">
                                    <div class="awshirt-button-pad">
                                        <button type="submit" id="awshirt-submittitle" class=" awshirt-button awshirt-button-submit"  disabled><i class="fas fa-check" aria-hidden="true"></i></button>
                                        <div id="awshirt-submittitle-loading" style="display:none;" class="awshirt-button-loading">
                                    </div>
                                </li>
                                <li class="pull-right">
                                    <div class="awshirt-button-pad">
                                        <button id="awshirt-suggesttitle" class="awshirt-suggestion awshirt-button button-input">
                                            SUGGESTION
                                        </button>
                                    </div>
                                </li>
                            </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12">
                        <button type="button" id="awshirt-input-audience-censor" class="awshirt-audience-censor awshirt-button capitalize btn btn-block">CENSOR AUDIENCE</button>
                    </div>
                </fieldset>
            </form>
        </div>

        <div id="state-prompts-done" class="pt-page-off awshirt-page awshirt-player-avatar-large">
            <!-- <h2>Waiting for other players to finish!</h2> -->
        </div>

        <div id="state-shirt" class="pt-page-off awshirt-page">
            <table style="height:100%;width:100%;">
                <tr style="height:100%;">
                    <td style="vertical-align:top;">
                        <div class="awshirt-solid-bg">
                            <div class="canvas-container">
                                <div class="pre-sketchpad-shirt awshirt-text">CHOOSE A DRAWING</div>
                                <div id="awshirt-shirttime-canvas" class="awshirt-canvas-container-box">
                                    <div class="glideShirts">
                                        <div id="awshirt-image-bullets" class="glide__bullets" data-glide-el="controls[nav]">
                                            <button class="glide__bullet" data-glide-dir="=0"></button>
                                            <button class="glide__bullet" data-glide-dir="=1"></button>
                                            <button class="glide__bullet" data-glide-dir="=2"></button>
                                        </div>
                                        <div class="awshirt-track glide__track" data-glide-el="track">
                                            <ul id="awshirt-image-slides" class="glide__slides">
                                                <li class="glide__slide">0</li>
                                                <li class="glide__slide">1</li>
                                                <li class="glide__slide">2</li>
                                            </ul>
                                        </div>
                                        <div class="awshirt-slider-controls" data-glide-el="controls">
                                            <button class="awshirt-slider-left" data-glide-dir="<"></button>
                                            <button class="awshirt-slider-right" data-glide-dir=">"></button>
                                        </div>
                                    </div>
                                    <div class="glideSlogans">
                                        <div class="awshirt-track glide__track" data-glide-el="track">
                                            <ul id="awshirt-slogan-slides" class="glide__slides">
                                                <li class="glide__slide">SLOGAN0</li>
                                                <li class="glide__slide">SLOGAN1</li>
                                                <li class="glide__slide">SLOGAN2</li>
                                            </ul>
                                        </div>
                                        <div id="awshirt-slogan-bullets" class="glide__bullets" data-glide-el="controls[nav]">
                                            <button class="glide__bullet" data-glide-dir="=0"></button>
                                            <button class="glide__bullet" data-glide-dir="=1"></button>
                                            <button class="glide__bullet" data-glide-dir="=2"></button>
                                        </div>
                                        <div class="awshirt-slider-controls" data-glide-el="controls">
                                            <button class="awshirt-slider-left" data-glide-dir="<"></button>
                                            <button class="awshirt-slider-right" data-glide-dir=">"></button>
                                        </div>
                                    </div>
                                </div>
                                <div class="pre-sketchpad-shirt awshirt-text">CHOOSE A SLOGAN</div>
                                <div class="pre-sketchpad-shirt">
                                    <button type="submit-shirt" id="awshirt-submit-shirt" class="submit-drawing awshirt-button awshirt-button-submit"><i class="fas fa-check" aria-hidden="true"></i></button>
                                    <div id="awshirt-submitshirt-loading" style="display:none;" class="awshirt-button-loading">
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                    </td>
                </tr>
            </table>
        </div>

        <div id="state-shirts-done" class="pt-page-off awshirt-page container awshirt-player-avatar-large">
            <!-- <h2>Waiting for other players to finish!</h2> -->
        </div>

        <div id="state-vote" class="pt-page-off awshirt-page container">
            <p class="awshirt-text-instruction">Pick your favorite!</p>
            <div id="vote-buttons" class="pure-form awshirt-vote-buttons awshirt-text"></div>
        </div>
        
        <div id="state-voting-done" class="pt-page-off awshirt-page container awshirt-player-avatar-large">
            <!-- <h2>Waiting for other players to finish!</h2> -->
        </div>

        <div id="state-audience-suggestions" class="pt-page-off awshirt-page">
            <form class="pure-form pure-form-stacked">
                <fieldset>

                    <label id="awshirt-audience-suggestion-instruction" for="audience-suggestion"></label>
                    <input id="awshirt-audience-suggestion" class="pure-input-1 capitalize awshirt-answer-input" type="text" placeholder="ENTER A SUGGESTION" maxlength="45" autocapitalize='off' autocorrect='off' autocomplete='off'>

                    <button id="awshirt-audience-suggestion-submit" type="submit" class="pure-button pure-button-primary">Send</button>
                </fieldset>
            </form>
        </div>

        
        <div id="state-round" class="pt-page-off awshirt-page">
            <div class="round-image-container" style="width:100%;">
                <img id="round-image" class="pure-img" style="margin-left:auto; margin-right:auto;">
            </div>
        </div>
    
        <div id="state-answer-question-audience" class="pt-page-off awshirt-page">
            <br/><div class="state-answer-question-audience-main"><p class='state-answer-question-audience-text'/></div>
        </div>

        <div id="state-answer-question" class="pt-page-off awshirt-page">
            <div class="container">
                <br /><span id="question-text"></span><br />

                <span id="awshirt-submit-alert" class="alert alert-info">Alert message goes here</span>
                <form class="pure-form" id="awshirt-answer-field">
                    <div class="pure-u-1">
                        <input id="awshirt-answer-input" name="awshirt-answer" class="pure-input-1 capitalize awshirt-answer-input" type="text" maxlength="45" placeholder="ANSWER HERE" autocapitalize="off" autocorrect="off" autocomplete="off">
                    </div>
                    <button type="submit" id="awshirt-submit-answer" class="awshirt-button button-large pure-button capitalize right"><i class="fas fa-paper-plane"></i>&nbsp;&nbsp;Send</button>
                    <button type="submit" id="awshirt-suggestion" class="awshirt-button button-large pure-button capitalize right">Suggestion</button>
                    <div id="awshirt-submit-answer-loading" style="display:none;" class="awshirt-button-loading"></div>            
                </form>
                <div id="awshirt-suggestions" class="pure-g"></div>
            </div>
        </div>    
        
        <div id="state-done-answering" class="pt-page-off awshirt-page">
            <br/><span>Thanks for your answers!</span><br/>
        </div>
    </div>
</div>
`;
const ux = `url("data:image/svg+xml;utf8,<svg id='Layer_1' data-name='Layer 1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 823.47 588.96'><defs><style>.cls-1{fill:FILL_COLOR;}.cls-1,.cls-2{fill-rule:evenodd;}</style></defs><title>TeeKOControllerRedesign_shirtExport_v2</title><path id='ShirtFill' class='cls-1' d='M769,93c9.1,6.14,28.87,20.89,51,34-16.58,26-29.13,39.48-33.4,44.05s-25.84,71.28-33.16,78.6-14.52,21.26-22.15,21.56S674,247,674,247l5,69.36c3.86,53.57,5.49,91.14,6.91,112.7s.27,50.88.32,87.8c.08,14.94.94,28,.74,40.14.23,13.89-24.72,13.36-42.71,14.27s-90.4-1.21-114.64,0q-118.26,5.88-164.46,9c-30.74,2-143.42-2.19-143.42-2.19L143,573s5.68-213.16-5-313c-4.37,2-15,9.81-26,15-26.61-24.79-59.55-58.15-86.93-100.72A218.18,218.18,0,0,0,6,149l21-18c9.61-7.47,17.21-14,23-18s48-41.43,52-46,29.67-35.78,47-45c7.63-3.94,15.32-7.93,24-10,14.68-3.61,43.81-2.7,40-3h80s59.46,3.84,50,3c18.66-.37,43.18,6.3,74.21,7.48,49,1.87,65.56,1.82,73.79,1.52s76.67-.93,149-3c4.14.77,8.54,1.25,13,3,6.29,2.56,16.2,6.4,25,12,5.23,3.37,20,12,46,29C724,62,739.2,73,769,93Z' transform='translate(-1.3 -1.51)'/><path id='ShirtOutline' class='cls-2' d='M700,41.53q-13.83-8.89-24.6-14.93A98.49,98.49,0,0,0,653.17,17a50.49,50.49,0,0,0-10.35-1.77L642.63,14c-12.75,0-86.64.06-101.66.06q-26.06-.24-42.69-.61c-1.78-.69-2.7-1-2.74-1A36.44,36.44,0,0,0,488,11.08q-9.81-1-17-1-6.33,0-17.05.3-12.74.42-17,.49-1.89.06-3.6.06-17.89-.67-42.81-1.71-71.37-2.79-83.62-5l-2.56-.37a5.37,5.37,0,0,0-3.53-1.46c-12.79-.77-83.43-1-91.91-.73a157.84,157.84,0,0,0-31.61,3.78q-15.65,3.47-26.43,10.78a85.23,85.23,0,0,0-11.09,9.14q-8.34,7.67-10.71,9.74a107.26,107.26,0,0,0-10.78,10q-6.82,7.13-10.3,10.6-9.44,9.62-21.43,20.59-18.09,16.62-48.9,41.11-15.84,12.72-27,21.74a64.79,64.79,0,0,0-5.42,4.2,8.65,8.65,0,0,0-2.38,3.35q-2,1.22-1.4,4.2l.25.85a14.48,14.48,0,0,0,.48,1.83v.37a1.88,1.88,0,0,0,.19.61,6,6,0,0,0,.6,1.7q2.81,16,18,32.28,8.78,9.45,27.71,26,36.36,35,57.49,66.15,1.65,2.49,3.9,1.28a7.7,7.7,0,0,0,4.75-.92q.3-.18,5.73-4.32,2-1.53,6.63-4.63a37.2,37.2,0,0,0,4.88-3.78q1.28,8.89,2.61,19.43,4.94,42.59,6,96.17T140.42,511q-.61,36.78-1.34,62.85l.61-.24a6.48,6.48,0,0,0,3.47,5A31.12,31.12,0,0,0,152.6,582q1.46.3,9.93,1.53,10.77,1.57,20,2.62,20.77,2.25,40,3.29c23.39,1.18,109.7,1.4,138.93.67q21-.67,40.07-2.07,7.19-.56,19.61-2,13.83-1.53,19.49-2,38.07-3.29,79.48-5.06c10-.53,85.11-1.3,105.25-2.31l6.45-.25,8.29.67q36.72,2.75,42.51.43a8.45,8.45,0,0,0,3.9-3.11,3.87,3.87,0,0,0,2.67-1.88,5.25,5.25,0,0,0,.61-3.6,15.77,15.77,0,0,0-.42-1.64q.6-28.32.79-65.48.36-79.73-2.44-130-3.59-66.94-7.37-118.35l2.68.67a149.8,149.8,0,0,1,14.86,7q4.7,2.49,14,7.67l7.74,4.14a39.28,39.28,0,0,0,3.59,1.65,1.09,1.09,0,0,1,.36.06,3.08,3.08,0,0,0,.8.85,9.14,9.14,0,0,0,2,1.22c.89,2.48,2.75,3.61,5.6,3.41a6.46,6.46,0,0,0,4.56-2.07q4.2-.68,8.83-4.87,3-2.62,8-8.1,20.77-18.94,29.36-40.38,4.44-11.22,6.21-27.23c.36-3.61.65-6,.85-7.13a30.47,30.47,0,0,1,1.83-7,75.23,75.23,0,0,1,5.72-11q7.3-12,14-21.44c.89-1.22,2.23-3.08,4-5.6q2.31-3.4,3.78-5.66,2.37-4,2.86-5.06a12,12,0,0,0,.61-1.64,17.14,17.14,0,0,0,1.94-3.6,2.65,2.65,0,0,0-.42-2.8,2.39,2.39,0,0,0-1.1-1,4.91,4.91,0,0,1-.24-.74,13.42,13.42,0,0,0-4.57-5.23q-3.9-2.5-5.85-3.84L799.21,107q-20-13.52-24.36-16.38Q749.7,73.8,724.3,57.18,700.8,42,700,41.53M696,80.2A5,5,0,0,0,691.65,79a5.27,5.27,0,0,0-3.9,2.62,6.72,6.72,0,0,0-.66,4.51,3.28,3.28,0,0,1,.18.61,5.45,5.45,0,0,0-.3,2.5q.12,1.89.24,3.9.3,6.82-.06,15.16-.12,3.24-1.22,19.07-1.15,17-3.71,37.33-2.13,16.81-4.69,33.63-1.47-14-3-42.15-.36-4.64-1.52-22.66-1-13.95-1.28-22.6l-.67-21.38q-.12-7.42-.24-11.27a52.81,52.81,0,0,0-1.16-11.14c-.49-1.91-1.6-2.84-3.35-2.8s-2.78,1.09-3.1,3a54.3,54.3,0,0,0-.61,11q.12,3.84.36,11.2l.55,22.36q.24,8.4.06,22.78-.24,16.56-.18,22.72.18,26,2,44.34.66,6.45,1.58,12.42-.24,9.21-.06,12.67a44.77,44.77,0,0,0,.55,6.22q.12,4.44.79,10a3.53,3.53,0,0,0,.43,1.59l5.11,72.72q5.79,80.34,7.92,112.68T684,517.89q.12,22.41-.18,40.56L634.71,568l-3.83-.12c-14.94-.65-88.34-.81-100.2-.49q-33.61.86-78.5,2.87-13.83.6-39.95.79-27.41.06-40.19.55-44.1,1.64-78.93.73c-16.16-.37-90.76-1.06-103.79-2.07q-11.94-.91-21.8-2.07-7.8-1.05-11.75-1.4c-1.83-.17-3.54-.27-5.12-.3q.61-21.87.79-51.17.44-64.8-2.37-110.85T145.17,253q-.3-29.73-.37-56.53.06-1,.12-2.07,1.35-16.26,1.59-25.15.54-16.45.85-24.61.42-14.73.18-24.91-.42-10.17-1.52-22.78-.61-7.61-.73-11.45a53.1,53.1,0,0,1,1.21-11.52,7.13,7.13,0,0,0-.79-5.54A6.92,6.92,0,0,0,142,65.1a6,6,0,0,0-4.63-.18A5.7,5.7,0,0,0,134.26,69q-2.43,9.38-1.83,22.41.3,7.56,1.65,22.78.48,10.73.67,24.85.12,4.69.18,24.85c0,1.1.08,2.24.12,3.41-1.09-5.48-1.91-9.31-2.43-11.51a197.57,197.57,0,0,0-6.21-21.62,100.36,100.36,0,0,1-4.57-20.4c-.29-2.27-.49-5.89-.61-10.84a74.69,74.69,0,0,0-.49-10.78,1.9,1.9,0,0,0-1.83-1.89,2.37,2.37,0,0,0-2.25,1.34q-3.52,7.13-3,18.76.18,5.55,2.19,19.43.36,2.63,1.22,10.29.6,6.46,1.34,10.24t1.34,7.61a146,146,0,0,0-13.34-20L94.61,122.3a157.15,157.15,0,0,1-10.53-16.57c-.65-1.26-1.48-1.58-2.5-1a1.8,1.8,0,0,0-1.2,2.24,2.54,2.54,0,0,0,.16.38q4.33,11,15.23,32.76,10.71,21.2,15.16,32.83,14.19,36.74,16.08,69.38a5.32,5.32,0,0,0-.79.18c-.43,0-.85,0-1.28-.06a.82.82,0,0,1-.43-.12,106.3,106.3,0,0,0-5.84-10.42q-4.26-7.12-19.19-27.47L78.23,175.22q-3.7-5.17-5.66-7.74-3.28-4.32-6-7.37-1.89-2.19-6.58-6.94-4.2-4.38-6.39-7a1,1,0,0,0-1.38-.29.85.85,0,0,0-.2.17,1.13,1.13,0,0,0-.36,1.56.76.76,0,0,0,.11.14q1.77,2.92,4.69,8.59,3,5.91,4.57,8.59,2.43,4.14,9,13.46,6.95,9.87,21,29.54a327.73,327.73,0,0,1,18,27.65,183.37,183.37,0,0,1,8.83,17.48c.12.81.44,2.23,1,4.27a18.56,18.56,0,0,1,.73,4.62q.12,5.61-5,4.27a22.27,22.27,0,0,1-7.55-4,3.15,3.15,0,0,0-1.4-.73q-7.8-10.84-19.43-24.55-21.5-25.28-28.87-36.18-7.72-12-11.81-17.9a160.84,160.84,0,0,0-13-16.88,92.24,92.24,0,0,0-14.68-13.52,28,28,0,0,0-6.94-3.71,21.75,21.75,0,0,1,2.86-2.38c1.26-1,3.06-2.27,5.42-3.9l11.45-9.13Q45,122.11,52.11,116.37q25.4-20.2,41.77-36.72,4.14-4,9-9.56,2.13-2.49,8.59-9.87,3.41-3.94,9.19-10,7.5-8.1,9.26-9.92a77.56,77.56,0,0,1,20.95-15.78,107.58,107.58,0,0,1,24.48-9q13.89-3.42,32-2.8c1.7,0,3.84.16,6.4.36L300,15.4l.06.06,31.36,2.8,17.3,1.52q2.51.79,6.76,1.83,3.9,1.16,9.2,3.05,3,1,9.14,3.16a167.76,167.76,0,0,0,37.45,8.71,191.37,191.37,0,0,0,39.1.13,146.36,146.36,0,0,0,37.88-8.9,6.54,6.54,0,0,0,4.08-4.26.16.16,0,0,0,.06-.12L508.7,23a50.21,50.21,0,0,1-3,4.51q-7.8,9.93-25.09,17.48T431.3,51.4q-10-.43-20.16-1.58l-8.28-1.1q-1.65,5.66,8.22,8.16,15,4,53.41-1.83,36.9-5.55,51.94-21,5.79-6,7.12-11.39c17.54-.36,97-.85,118.35-1.46A71.8,71.8,0,0,1,654.81,25,148.26,148.26,0,0,1,677.47,37.2q7.85,5.05,46.83,30.58,23.51,15.41,47.26,31.36,20.34,13.71,24.36,16.51l11.14,8q1.83,1.34,5.6,4.26c.69.41,1.32.75,1.89,1-.57.6-1.56,1.64-3,3.1a.76.76,0,0,0-.31.43c-1.34,1.34-3.24,3.35-5.72,6s-6.93,8-13.34,15.84A151.16,151.16,0,0,0,769.73,192q-5.24,13.82-8,20.58a99.52,99.52,0,0,1-10.23,19.56,98.94,98.94,0,0,1-6.7,8q-4.87,4.94-7.31,7.37-6.71,7.06-8.16,9a22.23,22.23,0,0,0-4.75,9.38c-.74-.37-1.2-.61-1.4-.73q-4.14-2.07-7.49-4.08l-6.34-4c-.65-.37-1.24-.71-1.76-1l.18-8.1a66.83,66.83,0,0,1,.73-8.83,68.64,68.64,0,0,0,.85-8.59,17.4,17.4,0,0,0-.06-2.5q3.48-9.56,12.55-33.25,6.88-18,14.92-34.48,2.87-5.53,8.95-16.69a82.79,82.79,0,0,0,7.19-17.48,2.33,2.33,0,0,0-.79-2.74,2.26,2.26,0,0,0-2.8.13,55.06,55.06,0,0,0-12.12,12.54q-2.74,3.72-9.75,14.92-10,16-18.08,31.55a280.31,280.31,0,0,0-14.38,33.32c-.28,1-.57,1.87-.85,2.68,1-5.2,1.79-9.67,2.43-13.4q4.1-24.18,5.6-39.1a297.08,297.08,0,0,0,1.53-38.43q-.18-9-1.53-20.28-.66-4.69-2.92-20.16a6.72,6.72,0,0,0-1-2.75l-.06-.12A6.78,6.78,0,0,0,696,80.2Z' transform='translate(-1.3 -1.51)'/></svg>")`,
    hx = lc.extend({
        template: ve.template(cx),
        testBlob: null,
        prevRoomState: "",
        prevPlayerState: "",
        doneAnswering: !1,
        lobbyMenu: null,
        colors: ["#ffffff", "#634a2c", "#bc4df8", "#0046ae", "#44d582", "#f8e655", "#ffa500", "#f32938", "#000000"],
        backgroundColors: ["#2f5f9d", "#d02c41", "#2a3a2a", "#0d162d", "#51346c", "#43342e", "#080808", "#505253"],
        stories: {
            cat: {
                intro: "My mother is very ill. I must win the tournament to pay for her surgery.",
                taunt: "I knew I could do it!"
            },
            raccoon: {
                intro: "I must win the tournament or the evil banker will repossess the orphanage!",
                taunt: "I put all of my heart into winning!"
            },
            kappa: {
                intro: "If I win the tournament, I will get my own reality show!",
                taunt: "Now I will be famous!"
            },
            dog: {
                intro: "WOOF! WOOF WOOF!",
                taunt: "BARK! WOOF! BARK BARK!"
            },
            umbrella: {
                intro: "My dream is to open a sandal shop. I would also like to win this tournament!",
                taunt: "What an unexpected surprise!"
            },
            blueDemon: {
                intro: "My shirt will put my twin\u2019s efforts to shame!",
                taunt: "Sorry, but my skills are superior!"
            },
            redDemon: {
                intro: "I don\u2019t care about winning, as long as I beat my twin!",
                taunt: "I was born to be the best!"
            },
            catfish: {
                intro: "I\u2019m competing to raise Fin Rot awareness!",
                taunt: "I win! Please donate to cure Fin Rot today!"
            },
            hair: {
                intro: "I HUNGER FOR VICTORY!",
                taunt: "MY HUNGER HAS BEEN SATISFIED\u2026FOR NOW\u2026"
            },
            bun: {
                intro: "I\u2019ve never made t-shirts before, but I\u2019m usually pretty lucky.",
                taunt: "I never lose!"
            },
            fox: {
                intro: "After I win the tournament, I can take a year off and finish my sitcom pilot!",
                taunt: "Hollywood, here I come!"
            },
            fire: {
                intro: "I\u2019m just happy to get out of the house!",
                taunt: "We\u2019re having so much fun, guys!"
            },
            crow: {
                intro: "I did not mean to enter this tournament! It was a clerical error!",
                taunt: "What is happening? Did I win?"
            },
            monkey: {
                intro: "If I don\u2019t win the tournament, I guess I\u2019ll go paint houses for my uncle.",
                taunt: "I deserve this!"
            },
            baku: {
                intro: "Winning the tournament is my life-long dream!",
                taunt: "All my dreams are coming true!"
            },
            snake: {
                intro: "I do not have arms, but my love of t-shirts is strong. I will win the tournament!",
                taunt: "I am honored to accept this victory."
            }
        },
        events: {
            "click #awshirt-startgame": "startGame",
            "click #awshirt-stopcountdown": "stopCountdown",
            "click #awshirt-sameplayers": "newGameSamePlayers",
            "click #awshirt-newplayers": "newGameNewPlayers",
            "click .awshirt-avatar": "setPlayerAvatar",
            "click #awshirt-taunt-submit": "setPlayerTaunt",
            "click .awshirt-change-color": "colorButtonClicked",
            "click .awshirt-background-color": "backgroundButtonClicked",
            "click .awshirt-thickness": "thicknessButtonClicked",
            "click .awshirt-undo": "undoButtonClicked",
            "click #awshirt-audience-suggestion-submit": "submitSuggestion",
            "click #awshirt-submitdrawing": "submitDrawing",
            "click #awshirt-submittitle": "submitTitle",
            "click .awshirt-suggestion": "getSuggestion",
            "click #awshirt-submit-shirt": "submitShirt",
            "click .awshirt-vote-button": "vote",
            "click .awshirt-lobby-menu-back": "lobbyMenuBack",
            "click #awshirt-lobby-menu-censor": "lobbyMenuCensor",
            "click .awshirt-censor-player-button": "censorPlayer",
            "click .awshirt-censor-button": "censor",
            "click .awshirt-audience-censor": "censorAudience"
        },
        onAttach() {
            lc.prototype.onAttach.apply(this), this.lobbyMenu = new F1({
                e: this.$el.find("#lobby-main-menu"),
                branches: [{
                    input: "censor",
                    node: {
                        e: this.$el.find("#lobby-censor")
                    }
                }]
            }), this.lobbyMenu.reset(), lt("input").bind("input propertychange", this.validateInput.bind(this)), this.update().catch(this.caughtError)
        },
        renderTemplate(e, t) {
            const n = ve.templateSettings;
            ve.templateSettings = {
                evaluate: /\{\{#([\s\S]+?)\}\}/g,
                interpolate: /\{\{\{(\s*\w+?\s*)\}\}\}/g,
                escape: /\{\{(\s*\w+?\s*)\}\}(?!\})/g
            };
            const o = ve.template(e)(t);
            return ve.templateSettings = n, o
        },
        changeColor(e) {
            !this.currentCanvas || (this.currentCanvas.color = e, lt(".button-color").removeClass("active"), lt(`.button-color[data-color="${e}"]`).addClass("active"), this.$el.find("#chooselikes-choice").css("color", this.currentCanvas.color), lt(".thickness-circle").css("background-color", this.currentCanvas.color))
        },
        changeBackground(e) {
            !this.currentCanvas || (this.currentCanvas.background = e, lt(".awshirt-sketchpad").css("background-color", e), lt(".awshirt-thickness").css("background-color", e), lt(".awshirt-background-color").removeClass("active"), lt(`.awshirt-background-color[data-background="${e}"]`).addClass("active"))
        },
        setPlayerAvatar(e) {
            lt(".awshirt-avatars button").removeClass("selecting");
            const t = lt(e.currentTarget);
            if (t.hasClass("selected") || t.hasClass("used")) return !1;
            t.addClass("selecting");
            const n = lt(e.currentTarget).data("avatar");
            return this.client.send("SendMessageToRoomOwner", {
                avatar: n
            }), !1
        },
        setPlayerTaunt() {
            const e = this.$el.find("#awshirt-taunt-text"),
                t = this.$el.find("#awshirt-taunt-submit");
            if (e.prop("disabled")) e.prop("disabled", !1), t.html("SET"), e.focus(), e.select();
            else {
                const n = e.val();
                if (this.sanitize(n).length === 0) return !1;
                this.client.send("SendMessageToRoomOwner", {
                    taunt: n
                }), e.prop("disabled", !0), t.blur(), t.html("CHANGE")
            }
            return !1
        },
        colorButtonClicked(e) {
            const t = lt(e.currentTarget).data("color");
            return this.changeColor(t), !1
        },
        backgroundButtonClicked(e) {
            const t = lt(e.currentTarget).data("background");
            return this.changeBackground(t), !1
        },
        setThickness(e) {
            !this.currentCanvas || (this.currentCanvas.thickness = e, lt(".thickness-circle").css("width", e * 2), lt(".thickness-circle").css("height", e * 2), lt(".thickness-circle").css("margin", 10 - e), lt(".awshirt-thickness").data("thickness", e))
        },
        thicknessButtonClicked() {
            const e = lt(".awshirt-thickness").data("thickness"),
                t = [5, 12, 18],
                i = (t.indexOf(e) + 1) % t.length;
            return this.setThickness(t[i]), !1
        },
        undoButtonClicked() {
            return lt(".awshirt-undo").prop("disabled", !0), this.currentCanvas.undoLine(), lt(".awshirt-undo").prop("disabled", !1), !1
        },
        submitDrawing() {
            if (this.currentCanvas.isClean) return alert("You have to draw something!"), !1;
            this.enableLoadingButton("#awshirt-submitdrawing", !1);
            const e = {
                pictureLines: this.currentCanvas.getLines(),
                background: this.currentCanvas.background
            };
            return this.client.send("SendMessageToRoomOwner", e), this.$el.find("#awshirt-draw-alert").hide(), this.currentCanvas.clearCanvas(), !1
        },
        submitTitle() {
            const e = this.sanitize(this.$el.find("#awshirt-title-input").val()).toUpperCase(),
                t = this.$el.find("#awshirt-submit-alert");
            return e.length === 0 ? (t.html("You can't enter nothing!"), t.removeClass("alert-info"), t.addClass("alert-danger"), t.show(), !1) : (this.client.send("SendMessageToRoomOwner", {
                msg: e,
                answer: !0
            }), this.$el.find("#awshirt-title-input").val(""), this.$el.find("#awshirt-title-input").closest("form").find('button[type="submit"]').prop("disabled", !0), this.$el.find("#awshirt-title-input").focus(), t.hide(), !1)
        },
        submitSuggestion() {
            const e = this.sanitize(this.$el.find("#awshirt-audience-suggestion").val()).toUpperCase(),
                t = this.$el.find("#awshirt-submit-alert");
            return e.length === 0 ? (t.html("You can't enter nothing!"), t.removeClass("alert-info"), t.addClass("alert-danger"), t.show(), !1) : (this.client.sessionSend("comment", "AwShirt Comments", {
                type: "comment",
                comment: e
            }), this.$el.find("#awshirt-audience-suggestion").val(""), this.$el.find("#awshirt-audience-suggestion").focus(), t.hide(), !1)
        },
        getSuggestion() {
            return lt(".awshirt-suggestion").prop("disabled", !0), this.client.send("SendMessageToRoomOwner", {
                suggestion: !0
            }), !1
        },
        async update() {
            if (!this.model.get("room")) {
                this.$el.find("#awshirt-audience").html(""), this.showScreen("#state-audience");
                return
            }
            const e = this.model.get("player") ? this.model.get("player") : {},
                t = this.model.get("room") ? this.model.get("room") : {},
                n = t ? t.state : "";
            if (e.avatar && (lt(".awshirt-player-avatar").show().attr("class", `awshirt-player-avatar ${e.avatar}`), this.$el.find("#awshirt-message").html(`"${this.stories[e.avatar].intro}"`), this.$el.find("#awshirt-taunt-text").attr("placeholder", this.stories[e.avatar].taunt), n !== "Lobby")) {
                const i = new URL(Object.assign({
                    "../images/avatars/baku.png": qC,
                    "../images/avatars/blueDemon.png": WC,
                    "../images/avatars/bun.png": GC,
                    "../images/avatars/cat.png": XC,
                    "../images/avatars/catfish.png": YC,
                    "../images/avatars/crow.png": KC,
                    "../images/avatars/dog.png": JC,
                    "../images/avatars/fire.png": QC,
                    "../images/avatars/fox.png": ZC,
                    "../images/avatars/hair.png": tx,
                    "../images/avatars/kappa.png": ex,
                    "../images/avatars/monkey.png": nx,
                    "../images/avatars/raccoon.png": ix,
                    "../images/avatars/redDemon.png": rx,
                    "../images/avatars/snake.png": sx,
                    "../images/avatars/umbrella.png": ox
                })[`../images/avatars/${e.avatar}.png`], self.location).href;
                lt(".awshirt-player-avatar-large").css("background-image", `url("${i}")`)
            }
            this.client.isRole("audience") ? this.updateAudience() : e && this.updatePlayer(), this.onResize()
        },
        async updatePlayer() {
            lt(".player-title-bar").show(), lt(".awshirt-message-panel").hide();
            const e = this.model.get("room"),
                t = this.model.get("player") ? this.model.get("player") : {},
                n = t ? t.state : "",
                i = e ? e.state : "";
            let o = e.lobbyState,
                f = 0;
            if (this.currentAnswerQuestionId = -1, n === "RoomFull") {
                Ve.show(Error("The room is full"), {
                    willClose: () => {
                        window.location.reload(!0)
                    }
                });
                return
            }
            if (n === "GameLocked") {
                Ve.show(Error("Game is in progress. Please wait for a new game to start."), {
                    willClose: () => {
                        window.location.reload(!0)
                    }
                });
                return
            }
            if (i && i === "Lobby") {
                if (!this.client.isRole("player")) {
                    this.showScreen("#state-logo");
                    return
                }
                if (this.hideLobbyButtons(), lt(".menu-button").hide(), t.avatar ? (lt(".awshirt-avatars button").removeClass("selected").removeClass("used").prop("disabled", !1), e.usedAvatars !== void 0 && e.usedAvatars.forEach(y => {
                        lt(`.awshirt-avatars button.${y}`).removeClass("selecting").addClass("used")
                    }), lt(`.awshirt-avatars button.${t.avatar}`).removeClass("used").removeClass("selecting").addClass("selected"), lt(".awshirt-avatars button.used").prop("disabled", !0), o !== "PostGame" && o !== "Countdown" ? (this.$el.find("#awshirt-taunt-input-group").show(), lt(".awshirt-avatars").show()) : (this.$el.find("#awshirt-taunt-input-group").hide(), lt(".awshirt-avatars").hide())) : lt(".awshirt-avatars").hide(), t.canCensor && t.censorablePlayers) {
                    let y = "";
                    t.censorablePlayers.forEach(k => {
                        y += '<div class="pure-u-1">', y += `<div class="awshirt-censorable left"><span>${k.name}</span></div>`, y += `<button type="button" data-censor="${Ze.htmlEscape(k.id)}" class="awshirt-censor-player-button button-large pure-button awshirt-button right">X</button>`, y += "</div>"
                    }), this.$el.find("#lobby-censor-players").html(y), t.censorablePlayers.length > 0 && this.$el.find("#awshirt-lobby-menu-censor").show()
                }
                const v = e.artifact;
                if (v && v.success && v.rootId) {
                    let y = "games.jackbox.tv";
                    v.rootId.indexOf("test") !== -1 && (y = "games-test.jackbox.tv");
                    const k = `https://${y}/artifact/TeeKOGame/${v.artifactId}/`,
                        A = new URL("main/pp3/awshirt/assets/38399233.png", self.location).href;
                    this.$el.find(".gallery-link").attr("href", k);
                    const D = `<img src="${A}" />`;
                    this.$el.find(".gallery-link").html(D), yi.add(v, this.getOption("appTag")), this.$el.find("#awshirt-lobby-postgame").show()
                } else this.$el.find("#awshirt-lobby-postgame").hide();
                if (!t.isAllowedToStartGame) {
                    this.$el.find("#awshirt-lobby-text").html("Sit back and relax!"), this.showScreen("#state-lobby");
                    return
                }
                e.sendDefaultColor && this.sendDefaultColor(), o || (o = t.state.split("_")[1]), o === "WaitingForMore" ? (this.$el.find("#awshirt-lobby-text").html("Waiting for all players to join"), lt(".awshirt-avatars").show(), this.$el.find("#awshirt-taunt-input-group").show()) : o === "CanStart" ? (this.$el.find("#awshirt-lobby-text").html("Press this button when everybody has joined"), this.$el.find("#awshirt-startgame").show(), lt(".awshirt-avatars").show(), this.$el.find("#awshirt-taunt-input-group").show()) : o === "Countdown" ? (this.$el.find("#awshirt-lobby-text").html("Press this button to cancel game start"), this.$el.find("#awshirt-stopcountdown").show(), lt(".awshirt-avatars").hide(), this.$el.find("#awshirt-taunt-input-group").hide()) : o === "PostGame" && (this.$el.find("#awshirt-lobby-text").html("What do you want to do?"), lt(".awshirt-endbuttons").show(), lt(".awshirt-avatars").hide(), this.$el.find("#awshirt-taunt-input-group").hide()), this.showScreen("#state-lobby")
            } else if (i === "Logo") lt(".player-title-bar").hide(), lt(".awshirt-message-panel").show(), this.showScreen("#state-logo");
            else if (i && i.split("_")[0] === "Gameplay")
                if (n && n.split("_")[0] === "Gameplay") {
                    let v = n.split("_")[1];
                    switch (e.event === "Gameplay_ShirtTime" && (v = "ShirtTime"), v !== "ShirtTime" && lt(".awshirt-drawing").remove(), v) {
                        case "DrawingTime":
                            lt(".player-title-bar").hide(), lt(".awshirt-audience-censor").hide(), t.suggestion ? (lt(".awshirt-suggestion").show(), lt(".awshirt-suggestion").prop("disabled", !1), lt(".instructions").hide()) : (lt(".instructions").html(t.alert), lt(".instructions").show(), lt(".awshirt-suggestion").hide()), t.canCensor && e.canDoSuggestions && (lt(".awshirt-suggestion").hide(), lt(".awshirt-audience-censor").show()), this.startDrawingInterface(t.playerColors), this.showScreen("#state-draw", () => {
                                this.currentCanvas.resize()
                            });
                            break;
                        case "DrawingComplete":
                            lt(".awshirt-audience-censor").hide(), this.$el.find("#awshirt-message").html("Waiting for other players to finish!"), t.canCensor && e.canDoSuggestions && (lt(".awshirt-audience-censor").show(), this.$el.find("#awshirt-message").append('<div class="col-xs-12"><button type="button" id="awshirt-drawing-audience-censor" class="awshirt-audience-censor awshirt-button capitalize btn btn-block">CENSOR AUDIENCE</button></div>')), lt(".awshirt-message-panel").show(), this.showScreen("#state-drawing-done");
                            break;
                        case "InputPrompt":
                            lt(".instructions").html(t.task), t.suggestion ? (lt(".instructions").html(t.task), lt(".awshirt-suggestion").show(), lt(".awshirt-suggestion").prop("disabled", !1), lt(".instructions").show()) : (lt(".instructions").html(t.alert), lt(".awshirt-suggestion").hide(), lt(".instructions").show()), lt(".awshirt-audience-censor").hide(), t.canCensor && e.canDoSuggestions && lt(".awshirt-audience-censor").show(), this.showScreen("#state-input");
                            break;
                        case "PromptsDone":
                            this.$el.find("#awshirt-audience-censor-done").hide(), this.$el.find("#awshirt-message").html("Waiting for other players to finish!"), t.canCensor && e.canDoSuggestions && (this.$el.find("#awshirt-audience-censor-done").show(), this.$el.find("#awshirt-message").append('<div class="col-xs-12"><button type="button" id="awshirt-drawing-audience-censor" class="awshirt-audience-censor awshirt-button capitalize btn btn-block">CENSOR AUDIENCE</button></div>')), lt(".awshirt-message-panel").show(), this.showScreen("#state-prompts-done");
                            break;
                        case "ShirtTime": {
                            if (lt(".player-title-bar").hide(), this.currentCanvas || this.startDrawingInterface(t.playerColors), this.$el.find("#toggle-prompt").data("params", 0), t.drawings && lt(".awshirt-drawing").length !== t.drawings.length) {
                                let k = "",
                                    A = "";
                                for (f = 0; f < t.drawings.length; f++) {
                                    const st = this.currentCanvas.makeBase64Image(t.drawings[f], !0);
                                    k += `<li class="glide__slide"><img class="awshirt-drawing" data-drawing-index=${f} src="${st.src}"></img></li>`, A += `<button class="glide__bullet" data-glide-dir="=${f}"></button>`
                                }
                                this.$el.find("#awshirt-image-slides").html(k), this.$el.find("#awshirt-image-bullets").html(A);
                                let D = "",
                                    $ = "";
                                t.prompts.forEach((st, V) => {
                                    D += `<li class="glide__slide">${Ze.safeText(st)}</li>`, $ += `<button class="glide__bullet" data-glide-dir="=${V}"></button>`
                                }), this.$el.find("#awshirt-slogan-slides").html(D), this.$el.find("#awshirt-slogan-bullets").html($);
                                const tt = {
                                    hoverpause: !0,
                                    keyboard: !1,
                                    type: "slider",
                                    perView: 1.25,
                                    focusAt: "center",
                                    gap: 15
                                };
                                this.glideShirts && this.glideShirts.destroy(), this.glideShirts = new wc(".glideShirts", tt), this.glideShirts.on("run", this.handleShirtUpdate.bind(this)), this.glideSlogans && this.glideSlogans.destroy(), this.glideSlogans = new wc(".glideSlogans", tt), this.handleShirtUpdate()
                            }
                            const y = t.drawings && t.drawings.length > 0 ? "#state-shirt" : "#state-logo";
                            this.showScreen(y, () => {
                                if (!this.imageContainer) {
                                    const k = [".pre-sketchpad-shirt"];
                                    this.imageContainer = new lx("#awshirt-shirttime-canvas", 16, 80, k, 823 / 589), this.imageContainer.onResize = () => {
                                        const A = this.imageContainer.width * .05,
                                            D = `${Math.floor(this.imageContainer.width*15/288)}px`,
                                            $ = lt(".awshirt-slider-right,.awshirt-slider-left");
                                        $.width(A), $.height(A), lt(".glideSlogans").css("font-size", D)
                                    }
                                }
                                this.onResize(), this.imageContainer.resize(), this.glideShirts && (this.glideShirts.mount(), this.glideSlogans.mount())
                            }), e.submit ? this.$el.find("#awshirt-submit-shirt").prop("disabled", !1) : this.$el.find("#awshirt-submit-shirt").prop("disabled", !0);
                            break
                        }
                        case "ShirtsDone":
                            this.$el.find("#awshirt-audience-censor-done").hide(), t.canCensor && e.canDoSuggestions && this.$el.find("#awshirt-audience-censor-done").show(), this.$el.find("#awshirt-message").html("Waiting for other players to finish!"), lt(".awshirt-message-panel").show(), this.showScreen("#state-shirts-done");
                            break
                    }
                } else this.showScreen("#state-logo");
            else if (i && i.split("_")[0] === "Vote" && n && n.split("_")[0] === "Vote") switch (n.split("_")[1]) {
                case "Vote": {
                    const y = [];
                    for (f = 0; f < t.order.length; f++) {
                        const k = {
                                order: t.order[f],
                                slogan: Ze.htmlUnescape(t.choices[t.order[f]].slogan),
                                censorable: !t.isCensored[f] && t.canCensor
                            },
                            A = lt(this.renderTemplate(this.$el.find("#awshirt-vote-button").html(), k));
                        A.find(".awshirt-vote-button").css("background-color", t.choices[t.order[f]].background), y.push(A[0].outerHTML)
                    }
                    this.$el.find("#vote-buttons").html(y.join("<span>OR</span>")), t.censorOnly && lt(".awshirt-vote-button").prop("disabled", !0), this.showScreen("#state-vote");
                    break
                }
                case "DoneVoting":
                    this.$el.find("#awshirt-message").html("Waiting for other players to finish!"), lt(".awshirt-message-panel").show(), this.showScreen("#state-voting-done");
                    break
            }
        },
        handleShirtUpdate() {
            const i = this.model.get("player").drawings[this.glideShirts.index].background.replace("#", "%23");
            lt(".awshirt-canvas-container-box").css("background-image", ux.replace("FILL_COLOR", i))
        },
        async updateAudience() {
            const e = this.model.get("room"),
                t = e ? e.state : "Logo";
            let n;
            switch (t) {
                case "Lobby": {
                    const i = e.artifact;
                    if (i && i.success && i.rootId) {
                        let o = "games.jackbox.tv";
                        i.rootId.indexOf("test") !== -1 && (o = "games-test.jackbox.tv");
                        const f = "TeeKOGame";
                        i.categoryId = f;
                        const v = `https://${o}/artifact/${f}/${i.artifactId}/`,
                            y = new URL("main/pp3/awshirt/assets/38399233.png", self.location).href;
                        this.$el.find(".gallery-link").attr("href", v);
                        const k = `<img src="${y}" />`;
                        this.$el.find(".gallery-link").html(k), yi.add(i, this.getOption("appTag"))
                    } else this.$el.find("#awshirt-audience").html("Sit back and relax!");
                    this.showScreen("#state-audience");
                    break
                }
                case "Logo":
                    this.$el.find("#awshirt-audience").html(""), this.showScreen("#state-audience");
                    break;
                case "Gameplay": {
                    const i = e.event,
                        o = e.instruction;
                    switch (i) {
                        case "Gameplay_ShirtTime":
                            this.$el.find("#awshirt-audience").html("Training in progress..."), this.showScreen("#state-audience");
                            break;
                        case "Suggestions":
                            e.canDoSuggestions ? (this.$el.find("#awshirt-audience-suggestion-instruction").html(o), this.showScreen("#state-audience-suggestions")) : (this.$el.find("#awshirt-audience").html("Training in progress..."), this.showScreen("#state-audience"));
                            break;
                        default:
                            this.$el.find("#awshirt-audience").html(""), this.showScreen("#state-audience");
                            break
                    }
                    break
                }
                case "Vote": {
                    const i = [];
                    for (n = 0; n < e.order.length; n++) {
                        const o = {
                                order: e.order[n],
                                slogan: Ze.htmlUnescape(e.choices[e.order[n]].slogan),
                                censorable: !1
                            },
                            f = lt(this.renderTemplate(this.$el.find("#awshirt-vote-button").html(), o));
                        f.find(".awshirt-vote-button").css("background-color", e.choices[e.order[n]].background), i.push(f[0].outerHTML)
                    }
                    this.$el.find("#vote-buttons").html(i.join("<span>OR</span>")), this.showScreen("#state-vote");
                    break
                }
            }
        },
        hideLobbyButtons() {
            this.$el.find("#awshirt-startgame").hide(), this.$el.find("#awshirt-stopcountdown").hide(), lt(".awshirt-endbuttons").hide(), lt(".awshirt-avatars").hide(), this.$el.find("#awshirt-taunt-input-group").hide()
        },
        lobbyMenuBack() {
            this.lobbyMenu.input("back")
        },
        lobbyMenuCensor() {
            this.lobbyMenu.input("censor")
        },
        startGame() {
            return this.client.send("SendMessageToRoomOwner", {
                start: !0
            }), !1
        },
        stopCountdown() {
            return this.client.send("SendMessageToRoomOwner", {
                cancel: !0
            }), !1
        },
        enableLoadingButton(e, t) {
            return t ? (lt(e).show(), lt(`${e}-loading`).hide()) : (lt(e).hide(), lt(`${e}-loading`).show()), !1
        },
        sendDefaultColor() {
            this.client.send("SendMessageToRoomOwner", {
                defaultColor: "#626060"
            })
        },
        startDrawingInterface(e) {
            if (this.enableLoadingButton("#awshirt-submitdrawing", !0), this.currentCanvas) return;
            this.enableLoadingButton("#awshirt-submitdrawing", !0);
            let t = "";
            e || (e = this.colors);
            for (let y = 0; y < e.length; y++) t += `<li class="pull-right"><a data-color="${e[y]}" class="awshirt-change-color button-color btn pure-button" style="background-color:${e[y]}"></a></li>`;
            this.$el.find("#awshirt-color-buttons").html(t);
            let n = "";
            const i = this.backgroundColors;
            for (let y = 0; y < i.length; y++) n += `<li data-background="${i[y]}" style="background-color:${i[y]};" class="awshirt-background-color pull-left"></li>`;
            lt(".awshirt-background-picker").html(n);
            const o = this.$el.find(".awshirt-sketchpad")[0],
                f = o.getContext("2d"),
                v = [".pre-sketchpad", ".post-sketchpad", ".awshirt-drawing-buttons"];
            this.currentCanvas = new ax(o, f, 10, 10, v, "#333333"), this.changeColor(e[0]), this.changeBackground(i[0]), this.setThickness(5)
        },
        submitShirt() {
            const e = this.glideShirts.index,
                t = this.glideSlogans.index,
                n = {
                    drawing: e,
                    prompt: t,
                    shirt: !0
                };
            return this.client.send("SendMessageToRoomOwner", n), !1
        },
        vote(e) {
            const t = lt(e.target).data("index");
            return this.client.isRole("player") ? this.client.send("SendMessageToRoomOwner", {
                vote: t
            }) : this.client.isRole("audience") && (this.$el.find("#awshirt-audience").html("Thanks for voting!"), this.showScreen("#state-audience"), this.client.sessionSend("vote", "AwShirt Vote", {
                type: "vote",
                vote: t
            })), lt(".awshirt-vote-button").removeClass("selected"), lt(e.target).addClass("selected"), !1
        },
        chooseCategory(e) {
            const t = lt(e.target).data("num");
            return this.client.send("SendMessageToRoomOwner", {
                chosenCategory: t
            }), !1
        },
        newGameSamePlayers() {
            return this.client.send("SendMessageToRoomOwner", {
                start: !0,
                decision: "PostGame_Continue"
            }), !1
        },
        newGameNewPlayers() {
            return this.client.send("SendMessageToRoomOwner", {
                start: !0,
                decision: "PostGame_NewGame"
            }), !1
        },
        censorPlayer(e) {
            if (!this.client.isRole("player")) return;
            const t = lt(e.target);
            if (t.hasClass("awshirt-button-red")) {
                const n = Ze.htmlUnescape(t.data("censor"));
                this.client.send("SendMessageToRoomOwner", {
                    censorPlayerId: n
                })
            } else lt(".awshirt-button-red").html("X").removeClass("awshirt-button-red"), t.html("?"), t.addClass("awshirt-button-red")
        },
        censor(e) {
            if (!this.client.isRole("player")) return;
            const t = lt(e.target);
            if (t.hasClass("awshirt-button-red")) {
                const n = Ze.htmlUnescape(t.data("censor"));
                this.client.send("SendMessageToRoomOwner", {
                    censor: n
                })
            } else lt(".awshirt-button-red").html("X").removeClass("awshirt-button-red"), t.html("?"), t.addClass("awshirt-button-red")
        },
        censorAudience() {
            return this.client.isRole("player") && this.client.send("SendMessageToRoomOwner", {
                censorAudience: !0
            }), !1
        },
        sanitize(e) {
            return e = this.sanitizeInput(e).replace(/'/g, "\u2019"), Ze.htmlEscape(e).trim()
        },
        sanitizeInput(e) {
            return e = e.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF!?*$+\-’'_ .,=<>:;]/gi, ""), e
        },
        validateInput(e) {
            const t = lt(e.target);
            let n = t.val();
            const i = n.length,
                o = t.attr("maxLength");
            if (n = this.sanitizeInput(n), o)
                for (; n.length > o;) n = n.slice(0, -1);
            n.length !== i && t.val(n), n.length > 0 ? lt(e.target).closest("form").find("button[type='submit']").prop("disabled", !1) : lt(e.target).closest("form").find("button[type='submit']").prop("disabled", !0)
        }
    });
UC({
    MainView: hx
});
//# sourceMappingURL=f2516dba.js.map