var Yb = Object.defineProperty;
var Kb = (t, e, n) => e in t ? Yb(t, e, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: n
}) : t[e] = n;
var at = (t, e, n) => (Kb(t, typeof e != "symbol" ? e + "" : e, n), n);
const Wb = function() {
    const e = document.createElement("link").relList;
    if (e && e.supports && e.supports("modulepreload")) return;
    for (const o of document.querySelectorAll('link[rel="modulepreload"]')) i(o);
    new MutationObserver(o => {
        for (const r of o)
            if (r.type === "childList")
                for (const V of r.addedNodes) V.tagName === "LINK" && V.rel === "modulepreload" && i(V)
    }).observe(document, {
        childList: !0,
        subtree: !0
    });

    function n(o) {
        const r = {};
        return o.integrity && (r.integrity = o.integrity), o.referrerpolicy && (r.referrerPolicy = o.referrerpolicy), o.crossorigin === "use-credentials" ? r.credentials = "include" : o.crossorigin === "anonymous" ? r.credentials = "omit" : r.credentials = "same-origin", r
    }

    function i(o) {
        if (o.ep) return;
        o.ep = !0;
        const r = n(o);
        fetch(o.href, r)
    }
};
Wb();
var Ct = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

function Jb(t) {
    var e = t.default;
    if (typeof e == "function") {
        var n = function() {
            return e.apply(this, arguments)
        };
        n.prototype = e.prototype
    } else n = {};
    return Object.defineProperty(n, "__esModule", {
        value: !0
    }), Object.keys(t).forEach(function(i) {
        var o = Object.getOwnPropertyDescriptor(t, i);
        Object.defineProperty(n, i, o.get ? o : {
            enumerable: !0,
            get: function() {
                return t[i]
            }
        })
    }), n
}
var X = {
    exports: {}
};
(function(t, e) {
    (function() {
        var n = this,
            i = n._,
            o = Array.prototype,
            r = Object.prototype,
            V = Function.prototype,
            A = o.push,
            c = o.slice,
            d = r.toString,
            m = r.hasOwnProperty,
            q = Array.isArray,
            v = Object.keys,
            D = V.bind,
            S = Object.create,
            C = function() {},
            h = function(g) {
                if (g instanceof h) return g;
                if (!(this instanceof h)) return new h(g);
                this._wrapped = g
            };
        t.exports && (e = t.exports = h), e._ = h, h.VERSION = "1.8.3";
        var w = function(g, R, j) {
                if (R === void 0) return g;
                switch (j == null ? 3 : j) {
                    case 1:
                        return function(N) {
                            return g.call(R, N)
                        };
                    case 2:
                        return function(N, W) {
                            return g.call(R, N, W)
                        };
                    case 3:
                        return function(N, W, _) {
                            return g.call(R, N, W, _)
                        };
                    case 4:
                        return function(N, W, _, he) {
                            return g.call(R, N, W, _, he)
                        }
                }
                return function() {
                    return g.apply(R, arguments)
                }
            },
            T = function(g, R, j) {
                return g == null ? h.identity : h.isFunction(g) ? w(g, R, j) : h.isObject(g) ? h.matcher(g) : h.property(g)
            };
        h.iteratee = function(g, R) {
            return T(g, R, 1 / 0)
        };
        var M = function(g, R) {
                return function(j) {
                    var N = arguments.length;
                    if (N < 2 || j == null) return j;
                    for (var W = 1; W < N; W++)
                        for (var _ = arguments[W], he = g(_), Pe = he.length, xe = 0; xe < Pe; xe++) {
                            var Qe = he[xe];
                            (!R || j[Qe] === void 0) && (j[Qe] = _[Qe])
                        }
                    return j
                }
            },
            O = function(g) {
                if (!h.isObject(g)) return {};
                if (S) return S(g);
                C.prototype = g;
                var R = new C;
                return C.prototype = null, R
            },
            Q = function(g) {
                return function(R) {
                    return R == null ? void 0 : R[g]
                }
            },
            u = Math.pow(2, 53) - 1,
            J = Q("length"),
            se = function(g) {
                var R = J(g);
                return typeof R == "number" && R >= 0 && R <= u
            };
        h.each = h.forEach = function(g, R, j) {
            R = w(R, j);
            var N, W;
            if (se(g))
                for (N = 0, W = g.length; N < W; N++) R(g[N], N, g);
            else {
                var _ = h.keys(g);
                for (N = 0, W = _.length; N < W; N++) R(g[_[N]], _[N], g)
            }
            return g
        }, h.map = h.collect = function(g, R, j) {
            R = T(R, j);
            for (var N = !se(g) && h.keys(g), W = (N || g).length, _ = Array(W), he = 0; he < W; he++) {
                var Pe = N ? N[he] : he;
                _[he] = R(g[Pe], Pe, g)
            }
            return _
        };

        function te(g) {
            function R(j, N, W, _, he, Pe) {
                for (; he >= 0 && he < Pe; he += g) {
                    var xe = _ ? _[he] : he;
                    W = N(W, j[xe], xe, j)
                }
                return W
            }
            return function(j, N, W, _) {
                N = w(N, _, 4);
                var he = !se(j) && h.keys(j),
                    Pe = (he || j).length,
                    xe = g > 0 ? 0 : Pe - 1;
                return arguments.length < 3 && (W = j[he ? he[xe] : xe], xe += g), R(j, N, W, he, xe, Pe)
            }
        }
        h.reduce = h.foldl = h.inject = te(1), h.reduceRight = h.foldr = te(-1), h.find = h.detect = function(g, R, j) {
            var N;
            if (se(g) ? N = h.findIndex(g, R, j) : N = h.findKey(g, R, j), N !== void 0 && N !== -1) return g[N]
        }, h.filter = h.select = function(g, R, j) {
            var N = [];
            return R = T(R, j), h.each(g, function(W, _, he) {
                R(W, _, he) && N.push(W)
            }), N
        }, h.reject = function(g, R, j) {
            return h.filter(g, h.negate(T(R)), j)
        }, h.every = h.all = function(g, R, j) {
            R = T(R, j);
            for (var N = !se(g) && h.keys(g), W = (N || g).length, _ = 0; _ < W; _++) {
                var he = N ? N[_] : _;
                if (!R(g[he], he, g)) return !1
            }
            return !0
        }, h.some = h.any = function(g, R, j) {
            R = T(R, j);
            for (var N = !se(g) && h.keys(g), W = (N || g).length, _ = 0; _ < W; _++) {
                var he = N ? N[_] : _;
                if (R(g[he], he, g)) return !0
            }
            return !1
        }, h.contains = h.includes = h.include = function(g, R, j, N) {
            return se(g) || (g = h.values(g)), (typeof j != "number" || N) && (j = 0), h.indexOf(g, R, j) >= 0
        }, h.invoke = function(g, R) {
            var j = c.call(arguments, 2),
                N = h.isFunction(R);
            return h.map(g, function(W) {
                var _ = N ? R : W[R];
                return _ == null ? _ : _.apply(W, j)
            })
        }, h.pluck = function(g, R) {
            return h.map(g, h.property(R))
        }, h.where = function(g, R) {
            return h.filter(g, h.matcher(R))
        }, h.findWhere = function(g, R) {
            return h.find(g, h.matcher(R))
        }, h.max = function(g, R, j) {
            var N = -1 / 0,
                W = -1 / 0,
                _, he;
            if (R == null && g != null) {
                g = se(g) ? g : h.values(g);
                for (var Pe = 0, xe = g.length; Pe < xe; Pe++) _ = g[Pe], _ > N && (N = _)
            } else R = T(R, j), h.each(g, function(Qe, He, pt) {
                he = R(Qe, He, pt), (he > W || he === -1 / 0 && N === -1 / 0) && (N = Qe, W = he)
            });
            return N
        }, h.min = function(g, R, j) {
            var N = 1 / 0,
                W = 1 / 0,
                _, he;
            if (R == null && g != null) {
                g = se(g) ? g : h.values(g);
                for (var Pe = 0, xe = g.length; Pe < xe; Pe++) _ = g[Pe], _ < N && (N = _)
            } else R = T(R, j), h.each(g, function(Qe, He, pt) {
                he = R(Qe, He, pt), (he < W || he === 1 / 0 && N === 1 / 0) && (N = Qe, W = he)
            });
            return N
        }, h.shuffle = function(g) {
            for (var R = se(g) ? g : h.values(g), j = R.length, N = Array(j), W = 0, _; W < j; W++) _ = h.random(0, W), _ !== W && (N[W] = N[_]), N[_] = R[W];
            return N
        }, h.sample = function(g, R, j) {
            return R == null || j ? (se(g) || (g = h.values(g)), g[h.random(g.length - 1)]) : h.shuffle(g).slice(0, Math.max(0, R))
        }, h.sortBy = function(g, R, j) {
            return R = T(R, j), h.pluck(h.map(g, function(N, W, _) {
                return {
                    value: N,
                    index: W,
                    criteria: R(N, W, _)
                }
            }).sort(function(N, W) {
                var _ = N.criteria,
                    he = W.criteria;
                if (_ !== he) {
                    if (_ > he || _ === void 0) return 1;
                    if (_ < he || he === void 0) return -1
                }
                return N.index - W.index
            }), "value")
        };
        var ve = function(g) {
            return function(R, j, N) {
                var W = {};
                return j = T(j, N), h.each(R, function(_, he) {
                    var Pe = j(_, he, R);
                    g(W, _, Pe)
                }), W
            }
        };
        h.groupBy = ve(function(g, R, j) {
            h.has(g, j) ? g[j].push(R) : g[j] = [R]
        }), h.indexBy = ve(function(g, R, j) {
            g[j] = R
        }), h.countBy = ve(function(g, R, j) {
            h.has(g, j) ? g[j]++ : g[j] = 1
        }), h.toArray = function(g) {
            return g ? h.isArray(g) ? c.call(g) : se(g) ? h.map(g, h.identity) : h.values(g) : []
        }, h.size = function(g) {
            return g == null ? 0 : se(g) ? g.length : h.keys(g).length
        }, h.partition = function(g, R, j) {
            R = T(R, j);
            var N = [],
                W = [];
            return h.each(g, function(_, he, Pe) {
                (R(_, he, Pe) ? N : W).push(_)
            }), [N, W]
        }, h.first = h.head = h.take = function(g, R, j) {
            if (g != null) return R == null || j ? g[0] : h.initial(g, g.length - R)
        }, h.initial = function(g, R, j) {
            return c.call(g, 0, Math.max(0, g.length - (R == null || j ? 1 : R)))
        }, h.last = function(g, R, j) {
            if (g != null) return R == null || j ? g[g.length - 1] : h.rest(g, Math.max(0, g.length - R))
        }, h.rest = h.tail = h.drop = function(g, R, j) {
            return c.call(g, R == null || j ? 1 : R)
        }, h.compact = function(g) {
            return h.filter(g, h.identity)
        };
        var be = function(g, R, j, N) {
            for (var W = [], _ = 0, he = N || 0, Pe = J(g); he < Pe; he++) {
                var xe = g[he];
                if (se(xe) && (h.isArray(xe) || h.isArguments(xe))) {
                    R || (xe = be(xe, R, j));
                    var Qe = 0,
                        He = xe.length;
                    for (W.length += He; Qe < He;) W[_++] = xe[Qe++]
                } else j || (W[_++] = xe)
            }
            return W
        };
        h.flatten = function(g, R) {
            return be(g, R, !1)
        }, h.without = function(g) {
            return h.difference(g, c.call(arguments, 1))
        }, h.uniq = h.unique = function(g, R, j, N) {
            h.isBoolean(R) || (N = j, j = R, R = !1), j != null && (j = T(j, N));
            for (var W = [], _ = [], he = 0, Pe = J(g); he < Pe; he++) {
                var xe = g[he],
                    Qe = j ? j(xe, he, g) : xe;
                R ? ((!he || _ !== Qe) && W.push(xe), _ = Qe) : j ? h.contains(_, Qe) || (_.push(Qe), W.push(xe)) : h.contains(W, xe) || W.push(xe)
            }
            return W
        }, h.union = function() {
            return h.uniq(be(arguments, !0, !0))
        }, h.intersection = function(g) {
            for (var R = [], j = arguments.length, N = 0, W = J(g); N < W; N++) {
                var _ = g[N];
                if (!h.contains(R, _)) {
                    for (var he = 1; he < j && h.contains(arguments[he], _); he++);
                    he === j && R.push(_)
                }
            }
            return R
        }, h.difference = function(g) {
            var R = be(arguments, !0, !0, 1);
            return h.filter(g, function(j) {
                return !h.contains(R, j)
            })
        }, h.zip = function() {
            return h.unzip(arguments)
        }, h.unzip = function(g) {
            for (var R = g && h.max(g, J).length || 0, j = Array(R), N = 0; N < R; N++) j[N] = h.pluck(g, N);
            return j
        }, h.object = function(g, R) {
            for (var j = {}, N = 0, W = J(g); N < W; N++) R ? j[g[N]] = R[N] : j[g[N][0]] = g[N][1];
            return j
        };

        function oe(g) {
            return function(R, j, N) {
                j = T(j, N);
                for (var W = J(R), _ = g > 0 ? 0 : W - 1; _ >= 0 && _ < W; _ += g)
                    if (j(R[_], _, R)) return _;
                return -1
            }
        }
        h.findIndex = oe(1), h.findLastIndex = oe(-1), h.sortedIndex = function(g, R, j, N) {
            j = T(j, N, 1);
            for (var W = j(R), _ = 0, he = J(g); _ < he;) {
                var Pe = Math.floor((_ + he) / 2);
                j(g[Pe]) < W ? _ = Pe + 1 : he = Pe
            }
            return _
        };

        function Ie(g, R, j) {
            return function(N, W, _) {
                var he = 0,
                    Pe = J(N);
                if (typeof _ == "number") g > 0 ? he = _ >= 0 ? _ : Math.max(_ + Pe, he) : Pe = _ >= 0 ? Math.min(_ + 1, Pe) : _ + Pe + 1;
                else if (j && _ && Pe) return _ = j(N, W), N[_] === W ? _ : -1;
                if (W !== W) return _ = R(c.call(N, he, Pe), h.isNaN), _ >= 0 ? _ + he : -1;
                for (_ = g > 0 ? he : Pe - 1; _ >= 0 && _ < Pe; _ += g)
                    if (N[_] === W) return _;
                return -1
            }
        }
        h.indexOf = Ie(1, h.findIndex, h.sortedIndex), h.lastIndexOf = Ie(-1, h.findLastIndex), h.range = function(g, R, j) {
            R == null && (R = g || 0, g = 0), j = j || 1;
            for (var N = Math.max(Math.ceil((R - g) / j), 0), W = Array(N), _ = 0; _ < N; _++, g += j) W[_] = g;
            return W
        };
        var Y = function(g, R, j, N, W) {
            if (!(N instanceof R)) return g.apply(j, W);
            var _ = O(g.prototype),
                he = g.apply(_, W);
            return h.isObject(he) ? he : _
        };
        h.bind = function(g, R) {
            if (D && g.bind === D) return D.apply(g, c.call(arguments, 1));
            if (!h.isFunction(g)) throw new TypeError("Bind must be called on a function");
            var j = c.call(arguments, 2),
                N = function() {
                    return Y(g, N, R, this, j.concat(c.call(arguments)))
                };
            return N
        }, h.partial = function(g) {
            var R = c.call(arguments, 1),
                j = function() {
                    for (var N = 0, W = R.length, _ = Array(W), he = 0; he < W; he++) _[he] = R[he] === h ? arguments[N++] : R[he];
                    for (; N < arguments.length;) _.push(arguments[N++]);
                    return Y(g, j, this, this, _)
                };
            return j
        }, h.bindAll = function(g) {
            var R, j = arguments.length,
                N;
            if (j <= 1) throw new Error("bindAll must be passed function names");
            for (R = 1; R < j; R++) N = arguments[R], g[N] = h.bind(g[N], g);
            return g
        }, h.memoize = function(g, R) {
            var j = function(N) {
                var W = j.cache,
                    _ = "" + (R ? R.apply(this, arguments) : N);
                return h.has(W, _) || (W[_] = g.apply(this, arguments)), W[_]
            };
            return j.cache = {}, j
        }, h.delay = function(g, R) {
            var j = c.call(arguments, 2);
            return setTimeout(function() {
                return g.apply(null, j)
            }, R)
        }, h.defer = h.partial(h.delay, h, 1), h.throttle = function(g, R, j) {
            var N, W, _, he = null,
                Pe = 0;
            j || (j = {});
            var xe = function() {
                Pe = j.leading === !1 ? 0 : h.now(), he = null, _ = g.apply(N, W), he || (N = W = null)
            };
            return function() {
                var Qe = h.now();
                !Pe && j.leading === !1 && (Pe = Qe);
                var He = R - (Qe - Pe);
                return N = this, W = arguments, He <= 0 || He > R ? (he && (clearTimeout(he), he = null), Pe = Qe, _ = g.apply(N, W), he || (N = W = null)) : !he && j.trailing !== !1 && (he = setTimeout(xe, He)), _
            }
        }, h.debounce = function(g, R, j) {
            var N, W, _, he, Pe, xe = function() {
                var Qe = h.now() - he;
                Qe < R && Qe >= 0 ? N = setTimeout(xe, R - Qe) : (N = null, j || (Pe = g.apply(_, W), N || (_ = W = null)))
            };
            return function() {
                _ = this, W = arguments, he = h.now();
                var Qe = j && !N;
                return N || (N = setTimeout(xe, R)), Qe && (Pe = g.apply(_, W), _ = W = null), Pe
            }
        }, h.wrap = function(g, R) {
            return h.partial(R, g)
        }, h.negate = function(g) {
            return function() {
                return !g.apply(this, arguments)
            }
        }, h.compose = function() {
            var g = arguments,
                R = g.length - 1;
            return function() {
                for (var j = R, N = g[R].apply(this, arguments); j--;) N = g[j].call(this, N);
                return N
            }
        }, h.after = function(g, R) {
            return function() {
                if (--g < 1) return R.apply(this, arguments)
            }
        }, h.before = function(g, R) {
            var j;
            return function() {
                return --g > 0 && (j = R.apply(this, arguments)), g <= 1 && (R = null), j
            }
        }, h.once = h.partial(h.before, 2);
        var re = !{
                toString: null
            }.propertyIsEnumerable("toString"),
            ue = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];

        function fe(g, R) {
            var j = ue.length,
                N = g.constructor,
                W = h.isFunction(N) && N.prototype || r,
                _ = "constructor";
            for (h.has(g, _) && !h.contains(R, _) && R.push(_); j--;) _ = ue[j], _ in g && g[_] !== W[_] && !h.contains(R, _) && R.push(_)
        }
        h.keys = function(g) {
            if (!h.isObject(g)) return [];
            if (v) return v(g);
            var R = [];
            for (var j in g) h.has(g, j) && R.push(j);
            return re && fe(g, R), R
        }, h.allKeys = function(g) {
            if (!h.isObject(g)) return [];
            var R = [];
            for (var j in g) R.push(j);
            return re && fe(g, R), R
        }, h.values = function(g) {
            for (var R = h.keys(g), j = R.length, N = Array(j), W = 0; W < j; W++) N[W] = g[R[W]];
            return N
        }, h.mapObject = function(g, R, j) {
            R = T(R, j);
            for (var N = h.keys(g), W = N.length, _ = {}, he, Pe = 0; Pe < W; Pe++) he = N[Pe], _[he] = R(g[he], he, g);
            return _
        }, h.pairs = function(g) {
            for (var R = h.keys(g), j = R.length, N = Array(j), W = 0; W < j; W++) N[W] = [R[W], g[R[W]]];
            return N
        }, h.invert = function(g) {
            for (var R = {}, j = h.keys(g), N = 0, W = j.length; N < W; N++) R[g[j[N]]] = j[N];
            return R
        }, h.functions = h.methods = function(g) {
            var R = [];
            for (var j in g) h.isFunction(g[j]) && R.push(j);
            return R.sort()
        }, h.extend = M(h.allKeys), h.extendOwn = h.assign = M(h.keys), h.findKey = function(g, R, j) {
            R = T(R, j);
            for (var N = h.keys(g), W, _ = 0, he = N.length; _ < he; _++)
                if (W = N[_], R(g[W], W, g)) return W
        }, h.pick = function(g, R, j) {
            var N = {},
                W = g,
                _, he;
            if (W == null) return N;
            h.isFunction(R) ? (he = h.allKeys(W), _ = w(R, j)) : (he = be(arguments, !1, !1, 1), _ = function(pt, Lt, yn) {
                return Lt in yn
            }, W = Object(W));
            for (var Pe = 0, xe = he.length; Pe < xe; Pe++) {
                var Qe = he[Pe],
                    He = W[Qe];
                _(He, Qe, W) && (N[Qe] = He)
            }
            return N
        }, h.omit = function(g, R, j) {
            if (h.isFunction(R)) R = h.negate(R);
            else {
                var N = h.map(be(arguments, !1, !1, 1), String);
                R = function(W, _) {
                    return !h.contains(N, _)
                }
            }
            return h.pick(g, R, j)
        }, h.defaults = M(h.allKeys, !0), h.create = function(g, R) {
            var j = O(g);
            return R && h.extendOwn(j, R), j
        }, h.clone = function(g) {
            return h.isObject(g) ? h.isArray(g) ? g.slice() : h.extend({}, g) : g
        }, h.tap = function(g, R) {
            return R(g), g
        }, h.isMatch = function(g, R) {
            var j = h.keys(R),
                N = j.length;
            if (g == null) return !N;
            for (var W = Object(g), _ = 0; _ < N; _++) {
                var he = j[_];
                if (R[he] !== W[he] || !(he in W)) return !1
            }
            return !0
        };
        var qe = function(g, R, j, N) {
            if (g === R) return g !== 0 || 1 / g === 1 / R;
            if (g == null || R == null) return g === R;
            g instanceof h && (g = g._wrapped), R instanceof h && (R = R._wrapped);
            var W = d.call(g);
            if (W !== d.call(R)) return !1;
            switch (W) {
                case "[object RegExp]":
                case "[object String]":
                    return "" + g == "" + R;
                case "[object Number]":
                    return +g != +g ? +R != +R : +g == 0 ? 1 / +g === 1 / R : +g == +R;
                case "[object Date]":
                case "[object Boolean]":
                    return +g == +R
            }
            var _ = W === "[object Array]";
            if (!_) {
                if (typeof g != "object" || typeof R != "object") return !1;
                var he = g.constructor,
                    Pe = R.constructor;
                if (he !== Pe && !(h.isFunction(he) && he instanceof he && h.isFunction(Pe) && Pe instanceof Pe) && "constructor" in g && "constructor" in R) return !1
            }
            j = j || [], N = N || [];
            for (var xe = j.length; xe--;)
                if (j[xe] === g) return N[xe] === R;
            if (j.push(g), N.push(R), _) {
                if (xe = g.length, xe !== R.length) return !1;
                for (; xe--;)
                    if (!qe(g[xe], R[xe], j, N)) return !1
            } else {
                var Qe = h.keys(g),
                    He;
                if (xe = Qe.length, h.keys(R).length !== xe) return !1;
                for (; xe--;)
                    if (He = Qe[xe], !(h.has(R, He) && qe(g[He], R[He], j, N))) return !1
            }
            return j.pop(), N.pop(), !0
        };
        h.isEqual = function(g, R) {
            return qe(g, R)
        }, h.isEmpty = function(g) {
            return g == null ? !0 : se(g) && (h.isArray(g) || h.isString(g) || h.isArguments(g)) ? g.length === 0 : h.keys(g).length === 0
        }, h.isElement = function(g) {
            return !!(g && g.nodeType === 1)
        }, h.isArray = q || function(g) {
            return d.call(g) === "[object Array]"
        }, h.isObject = function(g) {
            var R = typeof g;
            return R === "function" || R === "object" && !!g
        }, h.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(g) {
            h["is" + g] = function(R) {
                return d.call(R) === "[object " + g + "]"
            }
        }), h.isArguments(arguments) || (h.isArguments = function(g) {
            return h.has(g, "callee")
        }), typeof /./ != "function" && typeof Int8Array != "object" && (h.isFunction = function(g) {
            return typeof g == "function" || !1
        }), h.isFinite = function(g) {
            return isFinite(g) && !isNaN(parseFloat(g))
        }, h.isNaN = function(g) {
            return h.isNumber(g) && g !== +g
        }, h.isBoolean = function(g) {
            return g === !0 || g === !1 || d.call(g) === "[object Boolean]"
        }, h.isNull = function(g) {
            return g === null
        }, h.isUndefined = function(g) {
            return g === void 0
        }, h.has = function(g, R) {
            return g != null && m.call(g, R)
        }, h.noConflict = function() {
            return n._ = i, this
        }, h.identity = function(g) {
            return g
        }, h.constant = function(g) {
            return function() {
                return g
            }
        }, h.noop = function() {}, h.property = Q, h.propertyOf = function(g) {
            return g == null ? function() {} : function(R) {
                return g[R]
            }
        }, h.matcher = h.matches = function(g) {
            return g = h.extendOwn({}, g),
                function(R) {
                    return h.isMatch(R, g)
                }
        }, h.times = function(g, R, j) {
            var N = Array(Math.max(0, g));
            R = w(R, j, 1);
            for (var W = 0; W < g; W++) N[W] = R(W);
            return N
        }, h.random = function(g, R) {
            return R == null && (R = g, g = 0), g + Math.floor(Math.random() * (R - g + 1))
        }, h.now = Date.now || function() {
            return new Date().getTime()
        };
        var ge = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            },
            Te = h.invert(ge),
            Le = function(g) {
                var R = function(_) {
                        return g[_]
                    },
                    j = "(?:" + h.keys(g).join("|") + ")",
                    N = RegExp(j),
                    W = RegExp(j, "g");
                return function(_) {
                    return _ = _ == null ? "" : "" + _, N.test(_) ? _.replace(W, R) : _
                }
            };
        h.escape = Le(ge), h.unescape = Le(Te), h.result = function(g, R, j) {
            var N = g == null ? void 0 : g[R];
            return N === void 0 && (N = j), h.isFunction(N) ? N.call(g) : N
        };
        var Ge = 0;
        h.uniqueId = function(g) {
            var R = ++Ge + "";
            return g ? g + R : R
        }, h.templateSettings = {
            evaluate: /<%([\s\S]+?)%>/g,
            interpolate: /<%=([\s\S]+?)%>/g,
            escape: /<%-([\s\S]+?)%>/g
        };
        var Xe = /(.)^/,
            nt = {
                "'": "'",
                "\\": "\\",
                "\r": "r",
                "\n": "n",
                "\u2028": "u2028",
                "\u2029": "u2029"
            },
            Tt = /\\|'|\r|\n|\u2028|\u2029/g,
            Pt = function(g) {
                return "\\" + nt[g]
            };
        h.template = function(g, R, j) {
            !R && j && (R = j), R = h.defaults({}, R, h.templateSettings);
            var N = RegExp([(R.escape || Xe).source, (R.interpolate || Xe).source, (R.evaluate || Xe).source].join("|") + "|$", "g"),
                W = 0,
                _ = "__p+='";
            g.replace(N, function(Qe, He, pt, Lt, yn) {
                return _ += g.slice(W, yn).replace(Tt, Pt), W = yn + Qe.length, He ? _ += `'+
((__t=(` + He + `))==null?'':_.escape(__t))+
'` : pt ? _ += `'+
((__t=(` + pt + `))==null?'':__t)+
'` : Lt && (_ += `';
` + Lt + `
__p+='`), Qe
            }), _ += `';
`, R.variable || (_ = `with(obj||{}){
` + _ + `}
`), _ = `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` + _ + `return __p;
`;
            try {
                var he = new Function(R.variable || "obj", "_", _)
            } catch (Qe) {
                throw Qe.source = _, Qe
            }
            var Pe = function(Qe) {
                    return he.call(this, Qe, h)
                },
                xe = R.variable || "obj";
            return Pe.source = "function(" + xe + `){
` + _ + "}", Pe
        }, h.chain = function(g) {
            var R = h(g);
            return R._chain = !0, R
        };
        var U = function(g, R) {
            return g._chain ? h(R).chain() : R
        };
        h.mixin = function(g) {
            h.each(h.functions(g), function(R) {
                var j = h[R] = g[R];
                h.prototype[R] = function() {
                    var N = [this._wrapped];
                    return A.apply(N, arguments), U(this, j.apply(h, N))
                }
            })
        }, h.mixin(h), h.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(g) {
            var R = o[g];
            h.prototype[g] = function() {
                var j = this._wrapped;
                return R.apply(j, arguments), (g === "shift" || g === "splice") && j.length === 0 && delete j[0], U(this, j)
            }
        }), h.each(["concat", "join", "slice"], function(g) {
            var R = o[g];
            h.prototype[g] = function() {
                return U(this, R.apply(this._wrapped, arguments))
            }
        }), h.prototype.value = function() {
            return this._wrapped
        }, h.prototype.valueOf = h.prototype.toJSON = h.prototype.value, h.prototype.toString = function() {
            return "" + this._wrapped
        }
    }).call(Ct)
})(X, X.exports);
const ke = X.exports;
var Np = {
    exports: {}
};
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
var of;

function og() {
    return of || (of = 1, function(t) {
        (function(e, n) {
            t.exports = e.document ? n(e, !0) : function(i) {
                if (!i.document) throw new Error("jQuery requires a window with a document");
                return n(i)
            }
        })(typeof window < "u" ? window : Ct, function(e, n) {
            var i = [],
                o = Object.getPrototypeOf,
                r = i.slice,
                V = i.flat ? function(l) {
                    return i.flat.call(l)
                } : function(l) {
                    return i.concat.apply([], l)
                },
                A = i.push,
                c = i.indexOf,
                d = {},
                m = d.toString,
                q = d.hasOwnProperty,
                v = q.toString,
                D = v.call(Object),
                S = {},
                C = function(p) {
                    return typeof p == "function" && typeof p.nodeType != "number" && typeof p.item != "function"
                },
                h = function(p) {
                    return p != null && p === p.window
                },
                w = e.document,
                T = {
                    type: !0,
                    src: !0,
                    nonce: !0,
                    noModule: !0
                };

            function M(l, p, b) {
                b = b || w;
                var k, B, F = b.createElement("script");
                if (F.text = l, p)
                    for (k in T) B = p[k] || p.getAttribute && p.getAttribute(k), B && F.setAttribute(k, B);
                b.head.appendChild(F).parentNode.removeChild(F)
            }

            function O(l) {
                return l == null ? l + "" : typeof l == "object" || typeof l == "function" ? d[m.call(l)] || "object" : typeof l
            }
            var Q = "3.6.0",
                u = function(l, p) {
                    return new u.fn.init(l, p)
                };
            u.fn = u.prototype = {
                jquery: Q,
                constructor: u,
                length: 0,
                toArray: function() {
                    return r.call(this)
                },
                get: function(l) {
                    return l == null ? r.call(this) : l < 0 ? this[l + this.length] : this[l]
                },
                pushStack: function(l) {
                    var p = u.merge(this.constructor(), l);
                    return p.prevObject = this, p
                },
                each: function(l) {
                    return u.each(this, l)
                },
                map: function(l) {
                    return this.pushStack(u.map(this, function(p, b) {
                        return l.call(p, b, p)
                    }))
                },
                slice: function() {
                    return this.pushStack(r.apply(this, arguments))
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                even: function() {
                    return this.pushStack(u.grep(this, function(l, p) {
                        return (p + 1) % 2
                    }))
                },
                odd: function() {
                    return this.pushStack(u.grep(this, function(l, p) {
                        return p % 2
                    }))
                },
                eq: function(l) {
                    var p = this.length,
                        b = +l + (l < 0 ? p : 0);
                    return this.pushStack(b >= 0 && b < p ? [this[b]] : [])
                },
                end: function() {
                    return this.prevObject || this.constructor()
                },
                push: A,
                sort: i.sort,
                splice: i.splice
            }, u.extend = u.fn.extend = function() {
                var l, p, b, k, B, F, z = arguments[0] || {},
                    ie = 1,
                    ae = arguments.length,
                    de = !1;
                for (typeof z == "boolean" && (de = z, z = arguments[ie] || {}, ie++), typeof z != "object" && !C(z) && (z = {}), ie === ae && (z = this, ie--); ie < ae; ie++)
                    if ((l = arguments[ie]) != null)
                        for (p in l) k = l[p], !(p === "__proto__" || z === k) && (de && k && (u.isPlainObject(k) || (B = Array.isArray(k))) ? (b = z[p], B && !Array.isArray(b) ? F = [] : !B && !u.isPlainObject(b) ? F = {} : F = b, B = !1, z[p] = u.extend(de, F, k)) : k !== void 0 && (z[p] = k));
                return z
            }, u.extend({
                expando: "jQuery" + (Q + Math.random()).replace(/\D/g, ""),
                isReady: !0,
                error: function(l) {
                    throw new Error(l)
                },
                noop: function() {},
                isPlainObject: function(l) {
                    var p, b;
                    return !l || m.call(l) !== "[object Object]" ? !1 : (p = o(l), p ? (b = q.call(p, "constructor") && p.constructor, typeof b == "function" && v.call(b) === D) : !0)
                },
                isEmptyObject: function(l) {
                    var p;
                    for (p in l) return !1;
                    return !0
                },
                globalEval: function(l, p, b) {
                    M(l, {
                        nonce: p && p.nonce
                    }, b)
                },
                each: function(l, p) {
                    var b, k = 0;
                    if (J(l))
                        for (b = l.length; k < b && p.call(l[k], k, l[k]) !== !1; k++);
                    else
                        for (k in l)
                            if (p.call(l[k], k, l[k]) === !1) break;
                    return l
                },
                makeArray: function(l, p) {
                    var b = p || [];
                    return l != null && (J(Object(l)) ? u.merge(b, typeof l == "string" ? [l] : l) : A.call(b, l)), b
                },
                inArray: function(l, p, b) {
                    return p == null ? -1 : c.call(p, l, b)
                },
                merge: function(l, p) {
                    for (var b = +p.length, k = 0, B = l.length; k < b; k++) l[B++] = p[k];
                    return l.length = B, l
                },
                grep: function(l, p, b) {
                    for (var k, B = [], F = 0, z = l.length, ie = !b; F < z; F++) k = !p(l[F], F), k !== ie && B.push(l[F]);
                    return B
                },
                map: function(l, p, b) {
                    var k, B, F = 0,
                        z = [];
                    if (J(l))
                        for (k = l.length; F < k; F++) B = p(l[F], F, b), B != null && z.push(B);
                    else
                        for (F in l) B = p(l[F], F, b), B != null && z.push(B);
                    return V(z)
                },
                guid: 1,
                support: S
            }), typeof Symbol == "function" && (u.fn[Symbol.iterator] = i[Symbol.iterator]), u.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(l, p) {
                d["[object " + p + "]"] = p.toLowerCase()
            });

            function J(l) {
                var p = !!l && "length" in l && l.length,
                    b = O(l);
                return C(l) || h(l) ? !1 : b === "array" || p === 0 || typeof p == "number" && p > 0 && p - 1 in l
            }
            var se = function(l) {
                var p, b, k, B, F, z, ie, ae, de, ye, Be, me, we, et, ut, Je, sn, Zt, Sn, Mt = "sizzle" + 1 * new Date,
                    At = l.document,
                    vn = 0,
                    gt = 0,
                    Xt = Lo(),
                    Gs = Lo(),
                    To = Lo(),
                    Tn = Lo(),
                    Gi = function(G, ne) {
                        return G === ne && (Be = !0), 0
                    },
                    Xi = {}.hasOwnProperty,
                    wn = [],
                    fi = wn.pop,
                    In = wn.push,
                    Gn = wn.push,
                    il = wn.slice,
                    Yi = function(G, ne) {
                        for (var Ae = 0, Ce = G.length; Ae < Ce; Ae++)
                            if (G[Ae] === ne) return Ae;
                        return -1
                    },
                    sr = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                    vt = "[\\x20\\t\\r\\n\\f]",
                    Ki = "(?:\\\\[\\da-fA-F]{1,6}" + vt + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                    sl = "\\[" + vt + "*(" + Ki + ")(?:" + vt + "*([*^$|!~]?=)" + vt + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + Ki + "))|)" + vt + "*\\]",
                    or = ":(" + Ki + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + sl + ")*)|.*)\\)|)",
                    ol = new RegExp(vt + "+", "g"),
                    Xs = new RegExp("^" + vt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + vt + "+$", "g"),
                    al = new RegExp("^" + vt + "*," + vt + "*"),
                    rl = new RegExp("^" + vt + "*([>+~]|" + vt + ")" + vt + "*"),
                    Lp = new RegExp(vt + "|>"),
                    Bp = new RegExp(or),
                    Mp = new RegExp("^" + Ki + "$"),
                    Eo = {
                        ID: new RegExp("^#(" + Ki + ")"),
                        CLASS: new RegExp("^\\.(" + Ki + ")"),
                        TAG: new RegExp("^(" + Ki + "|[*])"),
                        ATTR: new RegExp("^" + sl),
                        PSEUDO: new RegExp("^" + or),
                        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + vt + "*(even|odd|(([+-]|)(\\d*)n|)" + vt + "*(?:([+-]|)" + vt + "*(\\d+)|))" + vt + "*\\)|)", "i"),
                        bool: new RegExp("^(?:" + sr + ")$", "i"),
                        needsContext: new RegExp("^" + vt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + vt + "*((?:-\\d)?\\d*)" + vt + "*\\)|)(?=[^-]|$)", "i")
                    },
                    Op = /HTML$/i,
                    Ip = /^(?:input|select|textarea|button)$/i,
                    Pp = /^h\d$/i,
                    Ys = /^[^{]+\{\s*\[native \w/,
                    Up = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                    ar = /[+~]/,
                    oi = new RegExp("\\\\[\\da-fA-F]{1,6}" + vt + "?|\\\\([^\\r\\n\\f])", "g"),
                    Xn = function(G, ne) {
                        var Ae = "0x" + G.slice(1) - 65536;
                        return ne || (Ae < 0 ? String.fromCharCode(Ae + 65536) : String.fromCharCode(Ae >> 10 | 55296, Ae & 1023 | 56320))
                    },
                    rr = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                    Vl = function(G, ne) {
                        return ne ? G === "\0" ? "\uFFFD" : G.slice(0, -1) + "\\" + G.charCodeAt(G.length - 1).toString(16) + " " : "\\" + G
                    },
                    ll = function() {
                        me()
                    },
                    Fp = Io(function(G) {
                        return G.disabled === !0 && G.nodeName.toLowerCase() === "fieldset"
                    }, {
                        dir: "parentNode",
                        next: "legend"
                    });
                try {
                    Gn.apply(wn = il.call(At.childNodes), At.childNodes), wn[At.childNodes.length].nodeType
                } catch {
                    Gn = {
                        apply: wn.length ? function(ne, Ae) {
                            In.apply(ne, il.call(Ae))
                        } : function(ne, Ae) {
                            for (var Ce = ne.length, pe = 0; ne[Ce++] = Ae[pe++];);
                            ne.length = Ce - 1
                        }
                    }
                }

                function Ot(G, ne, Ae, Ce) {
                    var pe, Ee, Oe, Ue, Ne, Ze, $e, st = ne && ne.ownerDocument,
                        qt = ne ? ne.nodeType : 9;
                    if (Ae = Ae || [], typeof G != "string" || !G || qt !== 1 && qt !== 9 && qt !== 11) return Ae;
                    if (!Ce && (me(ne), ne = ne || we, ut)) {
                        if (qt !== 11 && (Ne = Up.exec(G)))
                            if (pe = Ne[1]) {
                                if (qt === 9)
                                    if (Oe = ne.getElementById(pe)) {
                                        if (Oe.id === pe) return Ae.push(Oe), Ae
                                    } else return Ae;
                                else if (st && (Oe = st.getElementById(pe)) && Sn(ne, Oe) && Oe.id === pe) return Ae.push(Oe), Ae
                            } else {
                                if (Ne[2]) return Gn.apply(Ae, ne.getElementsByTagName(G)), Ae;
                                if ((pe = Ne[3]) && b.getElementsByClassName && ne.getElementsByClassName) return Gn.apply(Ae, ne.getElementsByClassName(pe)), Ae
                            } if (b.qsa && !Tn[G + " "] && (!Je || !Je.test(G)) && (qt !== 1 || ne.nodeName.toLowerCase() !== "object")) {
                            if ($e = G, st = ne, qt === 1 && (Lp.test(G) || rl.test(G))) {
                                for (st = ar.test(G) && Vr(ne.parentNode) || ne, (st !== ne || !b.scope) && ((Ue = ne.getAttribute("id")) ? Ue = Ue.replace(rr, Vl) : ne.setAttribute("id", Ue = Mt)), Ze = z(G), Ee = Ze.length; Ee--;) Ze[Ee] = (Ue ? "#" + Ue : ":scope") + " " + Oo(Ze[Ee]);
                                $e = Ze.join(",")
                            }
                            try {
                                return Gn.apply(Ae, st.querySelectorAll($e)), Ae
                            } catch {
                                Tn(G, !0)
                            } finally {
                                Ue === Mt && ne.removeAttribute("id")
                            }
                        }
                    }
                    return ae(G.replace(Xs, "$1"), ne, Ae, Ce)
                }

                function Lo() {
                    var G = [];

                    function ne(Ae, Ce) {
                        return G.push(Ae + " ") > k.cacheLength && delete ne[G.shift()], ne[Ae + " "] = Ce
                    }
                    return ne
                }

                function En(G) {
                    return G[Mt] = !0, G
                }

                function Pn(G) {
                    var ne = we.createElement("fieldset");
                    try {
                        return !!G(ne)
                    } catch {
                        return !1
                    } finally {
                        ne.parentNode && ne.parentNode.removeChild(ne), ne = null
                    }
                }

                function Bo(G, ne) {
                    for (var Ae = G.split("|"), Ce = Ae.length; Ce--;) k.attrHandle[Ae[Ce]] = ne
                }

                function Mo(G, ne) {
                    var Ae = ne && G,
                        Ce = Ae && G.nodeType === 1 && ne.nodeType === 1 && G.sourceIndex - ne.sourceIndex;
                    if (Ce) return Ce;
                    if (Ae) {
                        for (; Ae = Ae.nextSibling;)
                            if (Ae === ne) return -1
                    }
                    return G ? 1 : -1
                }

                function jp(G) {
                    return function(ne) {
                        var Ae = ne.nodeName.toLowerCase();
                        return Ae === "input" && ne.type === G
                    }
                }

                function Qp(G) {
                    return function(ne) {
                        var Ae = ne.nodeName.toLowerCase();
                        return (Ae === "input" || Ae === "button") && ne.type === G
                    }
                }

                function Al(G) {
                    return function(ne) {
                        return "form" in ne ? ne.parentNode && ne.disabled === !1 ? "label" in ne ? "label" in ne.parentNode ? ne.parentNode.disabled === G : ne.disabled === G : ne.isDisabled === G || ne.isDisabled !== !G && Fp(ne) === G : ne.disabled === G : "label" in ne ? ne.disabled === G : !1
                    }
                }

                function ai(G) {
                    return En(function(ne) {
                        return ne = +ne, En(function(Ae, Ce) {
                            for (var pe, Ee = G([], Ae.length, ne), Oe = Ee.length; Oe--;) Ae[pe = Ee[Oe]] && (Ae[pe] = !(Ce[pe] = Ae[pe]))
                        })
                    })
                }

                function Vr(G) {
                    return G && typeof G.getElementsByTagName < "u" && G
                }
                b = Ot.support = {}, F = Ot.isXML = function(G) {
                    var ne = G && G.namespaceURI,
                        Ae = G && (G.ownerDocument || G).documentElement;
                    return !Op.test(ne || Ae && Ae.nodeName || "HTML")
                }, me = Ot.setDocument = function(G) {
                    var ne, Ae, Ce = G ? G.ownerDocument || G : At;
                    return Ce == we || Ce.nodeType !== 9 || !Ce.documentElement || (we = Ce, et = we.documentElement, ut = !F(we), At != we && (Ae = we.defaultView) && Ae.top !== Ae && (Ae.addEventListener ? Ae.addEventListener("unload", ll, !1) : Ae.attachEvent && Ae.attachEvent("onunload", ll)), b.scope = Pn(function(pe) {
                        return et.appendChild(pe).appendChild(we.createElement("div")), typeof pe.querySelectorAll < "u" && !pe.querySelectorAll(":scope fieldset div").length
                    }), b.attributes = Pn(function(pe) {
                        return pe.className = "i", !pe.getAttribute("className")
                    }), b.getElementsByTagName = Pn(function(pe) {
                        return pe.appendChild(we.createComment("")), !pe.getElementsByTagName("*").length
                    }), b.getElementsByClassName = Ys.test(we.getElementsByClassName), b.getById = Pn(function(pe) {
                        return et.appendChild(pe).id = Mt, !we.getElementsByName || !we.getElementsByName(Mt).length
                    }), b.getById ? (k.filter.ID = function(pe) {
                        var Ee = pe.replace(oi, Xn);
                        return function(Oe) {
                            return Oe.getAttribute("id") === Ee
                        }
                    }, k.find.ID = function(pe, Ee) {
                        if (typeof Ee.getElementById < "u" && ut) {
                            var Oe = Ee.getElementById(pe);
                            return Oe ? [Oe] : []
                        }
                    }) : (k.filter.ID = function(pe) {
                        var Ee = pe.replace(oi, Xn);
                        return function(Oe) {
                            var Ue = typeof Oe.getAttributeNode < "u" && Oe.getAttributeNode("id");
                            return Ue && Ue.value === Ee
                        }
                    }, k.find.ID = function(pe, Ee) {
                        if (typeof Ee.getElementById < "u" && ut) {
                            var Oe, Ue, Ne, Ze = Ee.getElementById(pe);
                            if (Ze) {
                                if (Oe = Ze.getAttributeNode("id"), Oe && Oe.value === pe) return [Ze];
                                for (Ne = Ee.getElementsByName(pe), Ue = 0; Ze = Ne[Ue++];)
                                    if (Oe = Ze.getAttributeNode("id"), Oe && Oe.value === pe) return [Ze]
                            }
                            return []
                        }
                    }), k.find.TAG = b.getElementsByTagName ? function(pe, Ee) {
                        if (typeof Ee.getElementsByTagName < "u") return Ee.getElementsByTagName(pe);
                        if (b.qsa) return Ee.querySelectorAll(pe)
                    } : function(pe, Ee) {
                        var Oe, Ue = [],
                            Ne = 0,
                            Ze = Ee.getElementsByTagName(pe);
                        if (pe === "*") {
                            for (; Oe = Ze[Ne++];) Oe.nodeType === 1 && Ue.push(Oe);
                            return Ue
                        }
                        return Ze
                    }, k.find.CLASS = b.getElementsByClassName && function(pe, Ee) {
                        if (typeof Ee.getElementsByClassName < "u" && ut) return Ee.getElementsByClassName(pe)
                    }, sn = [], Je = [], (b.qsa = Ys.test(we.querySelectorAll)) && (Pn(function(pe) {
                        var Ee;
                        et.appendChild(pe).innerHTML = "<a id='" + Mt + "'></a><select id='" + Mt + "-\r\\' msallowcapture=''><option selected=''></option></select>", pe.querySelectorAll("[msallowcapture^='']").length && Je.push("[*^$]=" + vt + `*(?:''|"")`), pe.querySelectorAll("[selected]").length || Je.push("\\[" + vt + "*(?:value|" + sr + ")"), pe.querySelectorAll("[id~=" + Mt + "-]").length || Je.push("~="), Ee = we.createElement("input"), Ee.setAttribute("name", ""), pe.appendChild(Ee), pe.querySelectorAll("[name='']").length || Je.push("\\[" + vt + "*name" + vt + "*=" + vt + `*(?:''|"")`), pe.querySelectorAll(":checked").length || Je.push(":checked"), pe.querySelectorAll("a#" + Mt + "+*").length || Je.push(".#.+[+~]"), pe.querySelectorAll("\\\f"), Je.push("[\\r\\n\\f]")
                    }), Pn(function(pe) {
                        pe.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                        var Ee = we.createElement("input");
                        Ee.setAttribute("type", "hidden"), pe.appendChild(Ee).setAttribute("name", "D"), pe.querySelectorAll("[name=d]").length && Je.push("name" + vt + "*[*^$|!~]?="), pe.querySelectorAll(":enabled").length !== 2 && Je.push(":enabled", ":disabled"), et.appendChild(pe).disabled = !0, pe.querySelectorAll(":disabled").length !== 2 && Je.push(":enabled", ":disabled"), pe.querySelectorAll("*,:x"), Je.push(",.*:")
                    })), (b.matchesSelector = Ys.test(Zt = et.matches || et.webkitMatchesSelector || et.mozMatchesSelector || et.oMatchesSelector || et.msMatchesSelector)) && Pn(function(pe) {
                        b.disconnectedMatch = Zt.call(pe, "*"), Zt.call(pe, "[s!='']:x"), sn.push("!=", or)
                    }), Je = Je.length && new RegExp(Je.join("|")), sn = sn.length && new RegExp(sn.join("|")), ne = Ys.test(et.compareDocumentPosition), Sn = ne || Ys.test(et.contains) ? function(pe, Ee) {
                        var Oe = pe.nodeType === 9 ? pe.documentElement : pe,
                            Ue = Ee && Ee.parentNode;
                        return pe === Ue || !!(Ue && Ue.nodeType === 1 && (Oe.contains ? Oe.contains(Ue) : pe.compareDocumentPosition && pe.compareDocumentPosition(Ue) & 16))
                    } : function(pe, Ee) {
                        if (Ee) {
                            for (; Ee = Ee.parentNode;)
                                if (Ee === pe) return !0
                        }
                        return !1
                    }, Gi = ne ? function(pe, Ee) {
                        if (pe === Ee) return Be = !0, 0;
                        var Oe = !pe.compareDocumentPosition - !Ee.compareDocumentPosition;
                        return Oe || (Oe = (pe.ownerDocument || pe) == (Ee.ownerDocument || Ee) ? pe.compareDocumentPosition(Ee) : 1, Oe & 1 || !b.sortDetached && Ee.compareDocumentPosition(pe) === Oe ? pe == we || pe.ownerDocument == At && Sn(At, pe) ? -1 : Ee == we || Ee.ownerDocument == At && Sn(At, Ee) ? 1 : ye ? Yi(ye, pe) - Yi(ye, Ee) : 0 : Oe & 4 ? -1 : 1)
                    } : function(pe, Ee) {
                        if (pe === Ee) return Be = !0, 0;
                        var Oe, Ue = 0,
                            Ne = pe.parentNode,
                            Ze = Ee.parentNode,
                            $e = [pe],
                            st = [Ee];
                        if (!Ne || !Ze) return pe == we ? -1 : Ee == we ? 1 : Ne ? -1 : Ze ? 1 : ye ? Yi(ye, pe) - Yi(ye, Ee) : 0;
                        if (Ne === Ze) return Mo(pe, Ee);
                        for (Oe = pe; Oe = Oe.parentNode;) $e.unshift(Oe);
                        for (Oe = Ee; Oe = Oe.parentNode;) st.unshift(Oe);
                        for (; $e[Ue] === st[Ue];) Ue++;
                        return Ue ? Mo($e[Ue], st[Ue]) : $e[Ue] == At ? -1 : st[Ue] == At ? 1 : 0
                    }), we
                }, Ot.matches = function(G, ne) {
                    return Ot(G, null, null, ne)
                }, Ot.matchesSelector = function(G, ne) {
                    if (me(G), b.matchesSelector && ut && !Tn[ne + " "] && (!sn || !sn.test(ne)) && (!Je || !Je.test(ne))) try {
                        var Ae = Zt.call(G, ne);
                        if (Ae || b.disconnectedMatch || G.document && G.document.nodeType !== 11) return Ae
                    } catch {
                        Tn(ne, !0)
                    }
                    return Ot(ne, we, null, [G]).length > 0
                }, Ot.contains = function(G, ne) {
                    return (G.ownerDocument || G) != we && me(G), Sn(G, ne)
                }, Ot.attr = function(G, ne) {
                    (G.ownerDocument || G) != we && me(G);
                    var Ae = k.attrHandle[ne.toLowerCase()],
                        Ce = Ae && Xi.call(k.attrHandle, ne.toLowerCase()) ? Ae(G, ne, !ut) : void 0;
                    return Ce !== void 0 ? Ce : b.attributes || !ut ? G.getAttribute(ne) : (Ce = G.getAttributeNode(ne)) && Ce.specified ? Ce.value : null
                }, Ot.escape = function(G) {
                    return (G + "").replace(rr, Vl)
                }, Ot.error = function(G) {
                    throw new Error("Syntax error, unrecognized expression: " + G)
                }, Ot.uniqueSort = function(G) {
                    var ne, Ae = [],
                        Ce = 0,
                        pe = 0;
                    if (Be = !b.detectDuplicates, ye = !b.sortStable && G.slice(0), G.sort(Gi), Be) {
                        for (; ne = G[pe++];) ne === G[pe] && (Ce = Ae.push(pe));
                        for (; Ce--;) G.splice(Ae[Ce], 1)
                    }
                    return ye = null, G
                }, B = Ot.getText = function(G) {
                    var ne, Ae = "",
                        Ce = 0,
                        pe = G.nodeType;
                    if (pe) {
                        if (pe === 1 || pe === 9 || pe === 11) {
                            if (typeof G.textContent == "string") return G.textContent;
                            for (G = G.firstChild; G; G = G.nextSibling) Ae += B(G)
                        } else if (pe === 3 || pe === 4) return G.nodeValue
                    } else
                        for (; ne = G[Ce++];) Ae += B(ne);
                    return Ae
                }, k = Ot.selectors = {
                    cacheLength: 50,
                    createPseudo: En,
                    match: Eo,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function(G) {
                            return G[1] = G[1].replace(oi, Xn), G[3] = (G[3] || G[4] || G[5] || "").replace(oi, Xn), G[2] === "~=" && (G[3] = " " + G[3] + " "), G.slice(0, 4)
                        },
                        CHILD: function(G) {
                            return G[1] = G[1].toLowerCase(), G[1].slice(0, 3) === "nth" ? (G[3] || Ot.error(G[0]), G[4] = +(G[4] ? G[5] + (G[6] || 1) : 2 * (G[3] === "even" || G[3] === "odd")), G[5] = +(G[7] + G[8] || G[3] === "odd")) : G[3] && Ot.error(G[0]), G
                        },
                        PSEUDO: function(G) {
                            var ne, Ae = !G[6] && G[2];
                            return Eo.CHILD.test(G[0]) ? null : (G[3] ? G[2] = G[4] || G[5] || "" : Ae && Bp.test(Ae) && (ne = z(Ae, !0)) && (ne = Ae.indexOf(")", Ae.length - ne) - Ae.length) && (G[0] = G[0].slice(0, ne), G[2] = Ae.slice(0, ne)), G.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function(G) {
                            var ne = G.replace(oi, Xn).toLowerCase();
                            return G === "*" ? function() {
                                return !0
                            } : function(Ae) {
                                return Ae.nodeName && Ae.nodeName.toLowerCase() === ne
                            }
                        },
                        CLASS: function(G) {
                            var ne = Xt[G + " "];
                            return ne || (ne = new RegExp("(^|" + vt + ")" + G + "(" + vt + "|$)")) && Xt(G, function(Ae) {
                                return ne.test(typeof Ae.className == "string" && Ae.className || typeof Ae.getAttribute < "u" && Ae.getAttribute("class") || "")
                            })
                        },
                        ATTR: function(G, ne, Ae) {
                            return function(Ce) {
                                var pe = Ot.attr(Ce, G);
                                return pe == null ? ne === "!=" : ne ? (pe += "", ne === "=" ? pe === Ae : ne === "!=" ? pe !== Ae : ne === "^=" ? Ae && pe.indexOf(Ae) === 0 : ne === "*=" ? Ae && pe.indexOf(Ae) > -1 : ne === "$=" ? Ae && pe.slice(-Ae.length) === Ae : ne === "~=" ? (" " + pe.replace(ol, " ") + " ").indexOf(Ae) > -1 : ne === "|=" ? pe === Ae || pe.slice(0, Ae.length + 1) === Ae + "-" : !1) : !0
                            }
                        },
                        CHILD: function(G, ne, Ae, Ce, pe) {
                            var Ee = G.slice(0, 3) !== "nth",
                                Oe = G.slice(-4) !== "last",
                                Ue = ne === "of-type";
                            return Ce === 1 && pe === 0 ? function(Ne) {
                                return !!Ne.parentNode
                            } : function(Ne, Ze, $e) {
                                var st, qt, Ut, it, on, dn, Ln = Ee !== Oe ? "nextSibling" : "previousSibling",
                                    Ft = Ne.parentNode,
                                    y = Ue && Ne.nodeName.toLowerCase(),
                                    x = !$e && !Ue,
                                    I = !1;
                                if (Ft) {
                                    if (Ee) {
                                        for (; Ln;) {
                                            for (it = Ne; it = it[Ln];)
                                                if (Ue ? it.nodeName.toLowerCase() === y : it.nodeType === 1) return !1;
                                            dn = Ln = G === "only" && !dn && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (dn = [Oe ? Ft.firstChild : Ft.lastChild], Oe && x) {
                                        for (it = Ft, Ut = it[Mt] || (it[Mt] = {}), qt = Ut[it.uniqueID] || (Ut[it.uniqueID] = {}), st = qt[G] || [], on = st[0] === vn && st[1], I = on && st[2], it = on && Ft.childNodes[on]; it = ++on && it && it[Ln] || (I = on = 0) || dn.pop();)
                                            if (it.nodeType === 1 && ++I && it === Ne) {
                                                qt[G] = [vn, on, I];
                                                break
                                            }
                                    } else if (x && (it = Ne, Ut = it[Mt] || (it[Mt] = {}), qt = Ut[it.uniqueID] || (Ut[it.uniqueID] = {}), st = qt[G] || [], on = st[0] === vn && st[1], I = on), I === !1)
                                        for (;
                                            (it = ++on && it && it[Ln] || (I = on = 0) || dn.pop()) && !((Ue ? it.nodeName.toLowerCase() === y : it.nodeType === 1) && ++I && (x && (Ut = it[Mt] || (it[Mt] = {}), qt = Ut[it.uniqueID] || (Ut[it.uniqueID] = {}), qt[G] = [vn, I]), it === Ne)););
                                    return I -= pe, I === Ce || I % Ce === 0 && I / Ce >= 0
                                }
                            }
                        },
                        PSEUDO: function(G, ne) {
                            var Ae, Ce = k.pseudos[G] || k.setFilters[G.toLowerCase()] || Ot.error("unsupported pseudo: " + G);
                            return Ce[Mt] ? Ce(ne) : Ce.length > 1 ? (Ae = [G, G, "", ne], k.setFilters.hasOwnProperty(G.toLowerCase()) ? En(function(pe, Ee) {
                                for (var Oe, Ue = Ce(pe, ne), Ne = Ue.length; Ne--;) Oe = Yi(pe, Ue[Ne]), pe[Oe] = !(Ee[Oe] = Ue[Ne])
                            }) : function(pe) {
                                return Ce(pe, 0, Ae)
                            }) : Ce
                        }
                    },
                    pseudos: {
                        not: En(function(G) {
                            var ne = [],
                                Ae = [],
                                Ce = ie(G.replace(Xs, "$1"));
                            return Ce[Mt] ? En(function(pe, Ee, Oe, Ue) {
                                for (var Ne, Ze = Ce(pe, null, Ue, []), $e = pe.length; $e--;)(Ne = Ze[$e]) && (pe[$e] = !(Ee[$e] = Ne))
                            }) : function(pe, Ee, Oe) {
                                return ne[0] = pe, Ce(ne, null, Oe, Ae), ne[0] = null, !Ae.pop()
                            }
                        }),
                        has: En(function(G) {
                            return function(ne) {
                                return Ot(G, ne).length > 0
                            }
                        }),
                        contains: En(function(G) {
                            return G = G.replace(oi, Xn),
                                function(ne) {
                                    return (ne.textContent || B(ne)).indexOf(G) > -1
                                }
                        }),
                        lang: En(function(G) {
                            return Mp.test(G || "") || Ot.error("unsupported lang: " + G), G = G.replace(oi, Xn).toLowerCase(),
                                function(ne) {
                                    var Ae;
                                    do
                                        if (Ae = ut ? ne.lang : ne.getAttribute("xml:lang") || ne.getAttribute("lang")) return Ae = Ae.toLowerCase(), Ae === G || Ae.indexOf(G + "-") === 0; while ((ne = ne.parentNode) && ne.nodeType === 1);
                                    return !1
                                }
                        }),
                        target: function(G) {
                            var ne = l.location && l.location.hash;
                            return ne && ne.slice(1) === G.id
                        },
                        root: function(G) {
                            return G === et
                        },
                        focus: function(G) {
                            return G === we.activeElement && (!we.hasFocus || we.hasFocus()) && !!(G.type || G.href || ~G.tabIndex)
                        },
                        enabled: Al(!1),
                        disabled: Al(!0),
                        checked: function(G) {
                            var ne = G.nodeName.toLowerCase();
                            return ne === "input" && !!G.checked || ne === "option" && !!G.selected
                        },
                        selected: function(G) {
                            return G.parentNode && G.parentNode.selectedIndex, G.selected === !0
                        },
                        empty: function(G) {
                            for (G = G.firstChild; G; G = G.nextSibling)
                                if (G.nodeType < 6) return !1;
                            return !0
                        },
                        parent: function(G) {
                            return !k.pseudos.empty(G)
                        },
                        header: function(G) {
                            return Pp.test(G.nodeName)
                        },
                        input: function(G) {
                            return Ip.test(G.nodeName)
                        },
                        button: function(G) {
                            var ne = G.nodeName.toLowerCase();
                            return ne === "input" && G.type === "button" || ne === "button"
                        },
                        text: function(G) {
                            var ne;
                            return G.nodeName.toLowerCase() === "input" && G.type === "text" && ((ne = G.getAttribute("type")) == null || ne.toLowerCase() === "text")
                        },
                        first: ai(function() {
                            return [0]
                        }),
                        last: ai(function(G, ne) {
                            return [ne - 1]
                        }),
                        eq: ai(function(G, ne, Ae) {
                            return [Ae < 0 ? Ae + ne : Ae]
                        }),
                        even: ai(function(G, ne) {
                            for (var Ae = 0; Ae < ne; Ae += 2) G.push(Ae);
                            return G
                        }),
                        odd: ai(function(G, ne) {
                            for (var Ae = 1; Ae < ne; Ae += 2) G.push(Ae);
                            return G
                        }),
                        lt: ai(function(G, ne, Ae) {
                            for (var Ce = Ae < 0 ? Ae + ne : Ae > ne ? ne : Ae; --Ce >= 0;) G.push(Ce);
                            return G
                        }),
                        gt: ai(function(G, ne, Ae) {
                            for (var Ce = Ae < 0 ? Ae + ne : Ae; ++Ce < ne;) G.push(Ce);
                            return G
                        })
                    }
                }, k.pseudos.nth = k.pseudos.eq;
                for (p in {
                        radio: !0,
                        checkbox: !0,
                        file: !0,
                        password: !0,
                        image: !0
                    }) k.pseudos[p] = jp(p);
                for (p in {
                        submit: !0,
                        reset: !0
                    }) k.pseudos[p] = Qp(p);

                function cl() {}
                cl.prototype = k.filters = k.pseudos, k.setFilters = new cl, z = Ot.tokenize = function(G, ne) {
                    var Ae, Ce, pe, Ee, Oe, Ue, Ne, Ze = Gs[G + " "];
                    if (Ze) return ne ? 0 : Ze.slice(0);
                    for (Oe = G, Ue = [], Ne = k.preFilter; Oe;) {
                        (!Ae || (Ce = al.exec(Oe))) && (Ce && (Oe = Oe.slice(Ce[0].length) || Oe), Ue.push(pe = [])), Ae = !1, (Ce = rl.exec(Oe)) && (Ae = Ce.shift(), pe.push({
                            value: Ae,
                            type: Ce[0].replace(Xs, " ")
                        }), Oe = Oe.slice(Ae.length));
                        for (Ee in k.filter)(Ce = Eo[Ee].exec(Oe)) && (!Ne[Ee] || (Ce = Ne[Ee](Ce))) && (Ae = Ce.shift(), pe.push({
                            value: Ae,
                            type: Ee,
                            matches: Ce
                        }), Oe = Oe.slice(Ae.length));
                        if (!Ae) break
                    }
                    return ne ? Oe.length : Oe ? Ot.error(G) : Gs(G, Ue).slice(0)
                };

                function Oo(G) {
                    for (var ne = 0, Ae = G.length, Ce = ""; ne < Ae; ne++) Ce += G[ne].value;
                    return Ce
                }

                function Io(G, ne, Ae) {
                    var Ce = ne.dir,
                        pe = ne.next,
                        Ee = pe || Ce,
                        Oe = Ae && Ee === "parentNode",
                        Ue = gt++;
                    return ne.first ? function(Ne, Ze, $e) {
                        for (; Ne = Ne[Ce];)
                            if (Ne.nodeType === 1 || Oe) return G(Ne, Ze, $e);
                        return !1
                    } : function(Ne, Ze, $e) {
                        var st, qt, Ut, it = [vn, Ue];
                        if ($e) {
                            for (; Ne = Ne[Ce];)
                                if ((Ne.nodeType === 1 || Oe) && G(Ne, Ze, $e)) return !0
                        } else
                            for (; Ne = Ne[Ce];)
                                if (Ne.nodeType === 1 || Oe)
                                    if (Ut = Ne[Mt] || (Ne[Mt] = {}), qt = Ut[Ne.uniqueID] || (Ut[Ne.uniqueID] = {}), pe && pe === Ne.nodeName.toLowerCase()) Ne = Ne[Ce] || Ne;
                                    else {
                                        if ((st = qt[Ee]) && st[0] === vn && st[1] === Ue) return it[2] = st[2];
                                        if (qt[Ee] = it, it[2] = G(Ne, Ze, $e)) return !0
                                    } return !1
                    }
                }

                function Po(G) {
                    return G.length > 1 ? function(ne, Ae, Ce) {
                        for (var pe = G.length; pe--;)
                            if (!G[pe](ne, Ae, Ce)) return !1;
                        return !0
                    } : G[0]
                }

                function zp(G, ne, Ae) {
                    for (var Ce = 0, pe = ne.length; Ce < pe; Ce++) Ot(G, ne[Ce], Ae);
                    return Ae
                }

                function Uo(G, ne, Ae, Ce, pe) {
                    for (var Ee, Oe = [], Ue = 0, Ne = G.length, Ze = ne != null; Ue < Ne; Ue++)(Ee = G[Ue]) && (!Ae || Ae(Ee, Ce, pe)) && (Oe.push(Ee), Ze && ne.push(Ue));
                    return Oe
                }

                function lr(G, ne, Ae, Ce, pe, Ee) {
                    return Ce && !Ce[Mt] && (Ce = lr(Ce)), pe && !pe[Mt] && (pe = lr(pe, Ee)), En(function(Oe, Ue, Ne, Ze) {
                        var $e, st, qt, Ut = [],
                            it = [],
                            on = Ue.length,
                            dn = Oe || zp(ne || "*", Ne.nodeType ? [Ne] : Ne, []),
                            Ln = G && (Oe || !ne) ? Uo(dn, Ut, G, Ne, Ze) : dn,
                            Ft = Ae ? pe || (Oe ? G : on || Ce) ? [] : Ue : Ln;
                        if (Ae && Ae(Ln, Ft, Ne, Ze), Ce)
                            for ($e = Uo(Ft, it), Ce($e, [], Ne, Ze), st = $e.length; st--;)(qt = $e[st]) && (Ft[it[st]] = !(Ln[it[st]] = qt));
                        if (Oe) {
                            if (pe || G) {
                                if (pe) {
                                    for ($e = [], st = Ft.length; st--;)(qt = Ft[st]) && $e.push(Ln[st] = qt);
                                    pe(null, Ft = [], $e, Ze)
                                }
                                for (st = Ft.length; st--;)(qt = Ft[st]) && ($e = pe ? Yi(Oe, qt) : Ut[st]) > -1 && (Oe[$e] = !(Ue[$e] = qt))
                            }
                        } else Ft = Uo(Ft === Ue ? Ft.splice(on, Ft.length) : Ft), pe ? pe(null, Ue, Ft, Ze) : Gn.apply(Ue, Ft)
                    })
                }

                function Ar(G) {
                    for (var ne, Ae, Ce, pe = G.length, Ee = k.relative[G[0].type], Oe = Ee || k.relative[" "], Ue = Ee ? 1 : 0, Ne = Io(function(st) {
                            return st === ne
                        }, Oe, !0), Ze = Io(function(st) {
                            return Yi(ne, st) > -1
                        }, Oe, !0), $e = [function(st, qt, Ut) {
                            var it = !Ee && (Ut || qt !== de) || ((ne = qt).nodeType ? Ne(st, qt, Ut) : Ze(st, qt, Ut));
                            return ne = null, it
                        }]; Ue < pe; Ue++)
                        if (Ae = k.relative[G[Ue].type]) $e = [Io(Po($e), Ae)];
                        else {
                            if (Ae = k.filter[G[Ue].type].apply(null, G[Ue].matches), Ae[Mt]) {
                                for (Ce = ++Ue; Ce < pe && !k.relative[G[Ce].type]; Ce++);
                                return lr(Ue > 1 && Po($e), Ue > 1 && Oo(G.slice(0, Ue - 1).concat({
                                    value: G[Ue - 2].type === " " ? "*" : ""
                                })).replace(Xs, "$1"), Ae, Ue < Ce && Ar(G.slice(Ue, Ce)), Ce < pe && Ar(G = G.slice(Ce)), Ce < pe && Oo(G))
                            }
                            $e.push(Ae)
                        } return Po($e)
                }

                function dl(G, ne) {
                    var Ae = ne.length > 0,
                        Ce = G.length > 0,
                        pe = function(Ee, Oe, Ue, Ne, Ze) {
                            var $e, st, qt, Ut = 0,
                                it = "0",
                                on = Ee && [],
                                dn = [],
                                Ln = de,
                                Ft = Ee || Ce && k.find.TAG("*", Ze),
                                y = vn += Ln == null ? 1 : Math.random() || .1,
                                x = Ft.length;
                            for (Ze && (de = Oe == we || Oe || Ze); it !== x && ($e = Ft[it]) != null; it++) {
                                if (Ce && $e) {
                                    for (st = 0, !Oe && $e.ownerDocument != we && (me($e), Ue = !ut); qt = G[st++];)
                                        if (qt($e, Oe || we, Ue)) {
                                            Ne.push($e);
                                            break
                                        } Ze && (vn = y)
                                }
                                Ae && (($e = !qt && $e) && Ut--, Ee && on.push($e))
                            }
                            if (Ut += it, Ae && it !== Ut) {
                                for (st = 0; qt = ne[st++];) qt(on, dn, Oe, Ue);
                                if (Ee) {
                                    if (Ut > 0)
                                        for (; it--;) on[it] || dn[it] || (dn[it] = fi.call(Ne));
                                    dn = Uo(dn)
                                }
                                Gn.apply(Ne, dn), Ze && !Ee && dn.length > 0 && Ut + ne.length > 1 && Ot.uniqueSort(Ne)
                            }
                            return Ze && (vn = y, de = Ln), on
                        };
                    return Ae ? En(pe) : pe
                }
                return ie = Ot.compile = function(G, ne) {
                    var Ae, Ce = [],
                        pe = [],
                        Ee = To[G + " "];
                    if (!Ee) {
                        for (ne || (ne = z(G)), Ae = ne.length; Ae--;) Ee = Ar(ne[Ae]), Ee[Mt] ? Ce.push(Ee) : pe.push(Ee);
                        Ee = To(G, dl(pe, Ce)), Ee.selector = G
                    }
                    return Ee
                }, ae = Ot.select = function(G, ne, Ae, Ce) {
                    var pe, Ee, Oe, Ue, Ne, Ze = typeof G == "function" && G,
                        $e = !Ce && z(G = Ze.selector || G);
                    if (Ae = Ae || [], $e.length === 1) {
                        if (Ee = $e[0] = $e[0].slice(0), Ee.length > 2 && (Oe = Ee[0]).type === "ID" && ne.nodeType === 9 && ut && k.relative[Ee[1].type]) {
                            if (ne = (k.find.ID(Oe.matches[0].replace(oi, Xn), ne) || [])[0], ne) Ze && (ne = ne.parentNode);
                            else return Ae;
                            G = G.slice(Ee.shift().value.length)
                        }
                        for (pe = Eo.needsContext.test(G) ? 0 : Ee.length; pe-- && (Oe = Ee[pe], !k.relative[Ue = Oe.type]);)
                            if ((Ne = k.find[Ue]) && (Ce = Ne(Oe.matches[0].replace(oi, Xn), ar.test(Ee[0].type) && Vr(ne.parentNode) || ne))) {
                                if (Ee.splice(pe, 1), G = Ce.length && Oo(Ee), !G) return Gn.apply(Ae, Ce), Ae;
                                break
                            }
                    }
                    return (Ze || ie(G, $e))(Ce, ne, !ut, Ae, !ne || ar.test(G) && Vr(ne.parentNode) || ne), Ae
                }, b.sortStable = Mt.split("").sort(Gi).join("") === Mt, b.detectDuplicates = !!Be, me(), b.sortDetached = Pn(function(G) {
                    return G.compareDocumentPosition(we.createElement("fieldset")) & 1
                }), Pn(function(G) {
                    return G.innerHTML = "<a href='#'></a>", G.firstChild.getAttribute("href") === "#"
                }) || Bo("type|href|height|width", function(G, ne, Ae) {
                    if (!Ae) return G.getAttribute(ne, ne.toLowerCase() === "type" ? 1 : 2)
                }), (!b.attributes || !Pn(function(G) {
                    return G.innerHTML = "<input/>", G.firstChild.setAttribute("value", ""), G.firstChild.getAttribute("value") === ""
                })) && Bo("value", function(G, ne, Ae) {
                    if (!Ae && G.nodeName.toLowerCase() === "input") return G.defaultValue
                }), Pn(function(G) {
                    return G.getAttribute("disabled") == null
                }) || Bo(sr, function(G, ne, Ae) {
                    var Ce;
                    if (!Ae) return G[ne] === !0 ? ne.toLowerCase() : (Ce = G.getAttributeNode(ne)) && Ce.specified ? Ce.value : null
                }), Ot
            }(e);
            u.find = se, u.expr = se.selectors, u.expr[":"] = u.expr.pseudos, u.uniqueSort = u.unique = se.uniqueSort, u.text = se.getText, u.isXMLDoc = se.isXML, u.contains = se.contains, u.escapeSelector = se.escape;
            var te = function(l, p, b) {
                    for (var k = [], B = b !== void 0;
                        (l = l[p]) && l.nodeType !== 9;)
                        if (l.nodeType === 1) {
                            if (B && u(l).is(b)) break;
                            k.push(l)
                        } return k
                },
                ve = function(l, p) {
                    for (var b = []; l; l = l.nextSibling) l.nodeType === 1 && l !== p && b.push(l);
                    return b
                },
                be = u.expr.match.needsContext;

            function oe(l, p) {
                return l.nodeName && l.nodeName.toLowerCase() === p.toLowerCase()
            }
            var Ie = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

            function Y(l, p, b) {
                return C(p) ? u.grep(l, function(k, B) {
                    return !!p.call(k, B, k) !== b
                }) : p.nodeType ? u.grep(l, function(k) {
                    return k === p !== b
                }) : typeof p != "string" ? u.grep(l, function(k) {
                    return c.call(p, k) > -1 !== b
                }) : u.filter(p, l, b)
            }
            u.filter = function(l, p, b) {
                var k = p[0];
                return b && (l = ":not(" + l + ")"), p.length === 1 && k.nodeType === 1 ? u.find.matchesSelector(k, l) ? [k] : [] : u.find.matches(l, u.grep(p, function(B) {
                    return B.nodeType === 1
                }))
            }, u.fn.extend({
                find: function(l) {
                    var p, b, k = this.length,
                        B = this;
                    if (typeof l != "string") return this.pushStack(u(l).filter(function() {
                        for (p = 0; p < k; p++)
                            if (u.contains(B[p], this)) return !0
                    }));
                    for (b = this.pushStack([]), p = 0; p < k; p++) u.find(l, B[p], b);
                    return k > 1 ? u.uniqueSort(b) : b
                },
                filter: function(l) {
                    return this.pushStack(Y(this, l || [], !1))
                },
                not: function(l) {
                    return this.pushStack(Y(this, l || [], !0))
                },
                is: function(l) {
                    return !!Y(this, typeof l == "string" && be.test(l) ? u(l) : l || [], !1).length
                }
            });
            var re, ue = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
                fe = u.fn.init = function(l, p, b) {
                    var k, B;
                    if (!l) return this;
                    if (b = b || re, typeof l == "string")
                        if (l[0] === "<" && l[l.length - 1] === ">" && l.length >= 3 ? k = [null, l, null] : k = ue.exec(l), k && (k[1] || !p))
                            if (k[1]) {
                                if (p = p instanceof u ? p[0] : p, u.merge(this, u.parseHTML(k[1], p && p.nodeType ? p.ownerDocument || p : w, !0)), Ie.test(k[1]) && u.isPlainObject(p))
                                    for (k in p) C(this[k]) ? this[k](p[k]) : this.attr(k, p[k]);
                                return this
                            } else return B = w.getElementById(k[2]), B && (this[0] = B, this.length = 1), this;
                    else return !p || p.jquery ? (p || b).find(l) : this.constructor(p).find(l);
                    else {
                        if (l.nodeType) return this[0] = l, this.length = 1, this;
                        if (C(l)) return b.ready !== void 0 ? b.ready(l) : l(u)
                    }
                    return u.makeArray(l, this)
                };
            fe.prototype = u.fn, re = u(w);
            var qe = /^(?:parents|prev(?:Until|All))/,
                ge = {
                    children: !0,
                    contents: !0,
                    next: !0,
                    prev: !0
                };
            u.fn.extend({
                has: function(l) {
                    var p = u(l, this),
                        b = p.length;
                    return this.filter(function() {
                        for (var k = 0; k < b; k++)
                            if (u.contains(this, p[k])) return !0
                    })
                },
                closest: function(l, p) {
                    var b, k = 0,
                        B = this.length,
                        F = [],
                        z = typeof l != "string" && u(l);
                    if (!be.test(l)) {
                        for (; k < B; k++)
                            for (b = this[k]; b && b !== p; b = b.parentNode)
                                if (b.nodeType < 11 && (z ? z.index(b) > -1 : b.nodeType === 1 && u.find.matchesSelector(b, l))) {
                                    F.push(b);
                                    break
                                }
                    }
                    return this.pushStack(F.length > 1 ? u.uniqueSort(F) : F)
                },
                index: function(l) {
                    return l ? typeof l == "string" ? c.call(u(l), this[0]) : c.call(this, l.jquery ? l[0] : l) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                },
                add: function(l, p) {
                    return this.pushStack(u.uniqueSort(u.merge(this.get(), u(l, p))))
                },
                addBack: function(l) {
                    return this.add(l == null ? this.prevObject : this.prevObject.filter(l))
                }
            });

            function Te(l, p) {
                for (;
                    (l = l[p]) && l.nodeType !== 1;);
                return l
            }
            u.each({
                parent: function(l) {
                    var p = l.parentNode;
                    return p && p.nodeType !== 11 ? p : null
                },
                parents: function(l) {
                    return te(l, "parentNode")
                },
                parentsUntil: function(l, p, b) {
                    return te(l, "parentNode", b)
                },
                next: function(l) {
                    return Te(l, "nextSibling")
                },
                prev: function(l) {
                    return Te(l, "previousSibling")
                },
                nextAll: function(l) {
                    return te(l, "nextSibling")
                },
                prevAll: function(l) {
                    return te(l, "previousSibling")
                },
                nextUntil: function(l, p, b) {
                    return te(l, "nextSibling", b)
                },
                prevUntil: function(l, p, b) {
                    return te(l, "previousSibling", b)
                },
                siblings: function(l) {
                    return ve((l.parentNode || {}).firstChild, l)
                },
                children: function(l) {
                    return ve(l.firstChild)
                },
                contents: function(l) {
                    return l.contentDocument != null && o(l.contentDocument) ? l.contentDocument : (oe(l, "template") && (l = l.content || l), u.merge([], l.childNodes))
                }
            }, function(l, p) {
                u.fn[l] = function(b, k) {
                    var B = u.map(this, p, b);
                    return l.slice(-5) !== "Until" && (k = b), k && typeof k == "string" && (B = u.filter(k, B)), this.length > 1 && (ge[l] || u.uniqueSort(B), qe.test(l) && B.reverse()), this.pushStack(B)
                }
            });
            var Le = /[^\x20\t\r\n\f]+/g;

            function Ge(l) {
                var p = {};
                return u.each(l.match(Le) || [], function(b, k) {
                    p[k] = !0
                }), p
            }
            u.Callbacks = function(l) {
                l = typeof l == "string" ? Ge(l) : u.extend({}, l);
                var p, b, k, B, F = [],
                    z = [],
                    ie = -1,
                    ae = function() {
                        for (B = B || l.once, k = p = !0; z.length; ie = -1)
                            for (b = z.shift(); ++ie < F.length;) F[ie].apply(b[0], b[1]) === !1 && l.stopOnFalse && (ie = F.length, b = !1);
                        l.memory || (b = !1), p = !1, B && (b ? F = [] : F = "")
                    },
                    de = {
                        add: function() {
                            return F && (b && !p && (ie = F.length - 1, z.push(b)), function ye(Be) {
                                u.each(Be, function(me, we) {
                                    C(we) ? (!l.unique || !de.has(we)) && F.push(we) : we && we.length && O(we) !== "string" && ye(we)
                                })
                            }(arguments), b && !p && ae()), this
                        },
                        remove: function() {
                            return u.each(arguments, function(ye, Be) {
                                for (var me;
                                    (me = u.inArray(Be, F, me)) > -1;) F.splice(me, 1), me <= ie && ie--
                            }), this
                        },
                        has: function(ye) {
                            return ye ? u.inArray(ye, F) > -1 : F.length > 0
                        },
                        empty: function() {
                            return F && (F = []), this
                        },
                        disable: function() {
                            return B = z = [], F = b = "", this
                        },
                        disabled: function() {
                            return !F
                        },
                        lock: function() {
                            return B = z = [], !b && !p && (F = b = ""), this
                        },
                        locked: function() {
                            return !!B
                        },
                        fireWith: function(ye, Be) {
                            return B || (Be = Be || [], Be = [ye, Be.slice ? Be.slice() : Be], z.push(Be), p || ae()), this
                        },
                        fire: function() {
                            return de.fireWith(this, arguments), this
                        },
                        fired: function() {
                            return !!k
                        }
                    };
                return de
            };

            function Xe(l) {
                return l
            }

            function nt(l) {
                throw l
            }

            function Tt(l, p, b, k) {
                var B;
                try {
                    l && C(B = l.promise) ? B.call(l).done(p).fail(b) : l && C(B = l.then) ? B.call(l, p, b) : p.apply(void 0, [l].slice(k))
                } catch (F) {
                    b.apply(void 0, [F])
                }
            }
            u.extend({
                Deferred: function(l) {
                    var p = [
                            ["notify", "progress", u.Callbacks("memory"), u.Callbacks("memory"), 2],
                            ["resolve", "done", u.Callbacks("once memory"), u.Callbacks("once memory"), 0, "resolved"],
                            ["reject", "fail", u.Callbacks("once memory"), u.Callbacks("once memory"), 1, "rejected"]
                        ],
                        b = "pending",
                        k = {
                            state: function() {
                                return b
                            },
                            always: function() {
                                return B.done(arguments).fail(arguments), this
                            },
                            catch: function(F) {
                                return k.then(null, F)
                            },
                            pipe: function() {
                                var F = arguments;
                                return u.Deferred(function(z) {
                                    u.each(p, function(ie, ae) {
                                        var de = C(F[ae[4]]) && F[ae[4]];
                                        B[ae[1]](function() {
                                            var ye = de && de.apply(this, arguments);
                                            ye && C(ye.promise) ? ye.promise().progress(z.notify).done(z.resolve).fail(z.reject) : z[ae[0] + "With"](this, de ? [ye] : arguments)
                                        })
                                    }), F = null
                                }).promise()
                            },
                            then: function(F, z, ie) {
                                var ae = 0;

                                function de(ye, Be, me, we) {
                                    return function() {
                                        var et = this,
                                            ut = arguments,
                                            Je = function() {
                                                var Zt, Sn;
                                                if (!(ye < ae)) {
                                                    if (Zt = me.apply(et, ut), Zt === Be.promise()) throw new TypeError("Thenable self-resolution");
                                                    Sn = Zt && (typeof Zt == "object" || typeof Zt == "function") && Zt.then, C(Sn) ? we ? Sn.call(Zt, de(ae, Be, Xe, we), de(ae, Be, nt, we)) : (ae++, Sn.call(Zt, de(ae, Be, Xe, we), de(ae, Be, nt, we), de(ae, Be, Xe, Be.notifyWith))) : (me !== Xe && (et = void 0, ut = [Zt]), (we || Be.resolveWith)(et, ut))
                                                }
                                            },
                                            sn = we ? Je : function() {
                                                try {
                                                    Je()
                                                } catch (Zt) {
                                                    u.Deferred.exceptionHook && u.Deferred.exceptionHook(Zt, sn.stackTrace), ye + 1 >= ae && (me !== nt && (et = void 0, ut = [Zt]), Be.rejectWith(et, ut))
                                                }
                                            };
                                        ye ? sn() : (u.Deferred.getStackHook && (sn.stackTrace = u.Deferred.getStackHook()), e.setTimeout(sn))
                                    }
                                }
                                return u.Deferred(function(ye) {
                                    p[0][3].add(de(0, ye, C(ie) ? ie : Xe, ye.notifyWith)), p[1][3].add(de(0, ye, C(F) ? F : Xe)), p[2][3].add(de(0, ye, C(z) ? z : nt))
                                }).promise()
                            },
                            promise: function(F) {
                                return F != null ? u.extend(F, k) : k
                            }
                        },
                        B = {};
                    return u.each(p, function(F, z) {
                        var ie = z[2],
                            ae = z[5];
                        k[z[1]] = ie.add, ae && ie.add(function() {
                            b = ae
                        }, p[3 - F][2].disable, p[3 - F][3].disable, p[0][2].lock, p[0][3].lock), ie.add(z[3].fire), B[z[0]] = function() {
                            return B[z[0] + "With"](this === B ? void 0 : this, arguments), this
                        }, B[z[0] + "With"] = ie.fireWith
                    }), k.promise(B), l && l.call(B, B), B
                },
                when: function(l) {
                    var p = arguments.length,
                        b = p,
                        k = Array(b),
                        B = r.call(arguments),
                        F = u.Deferred(),
                        z = function(ie) {
                            return function(ae) {
                                k[ie] = this, B[ie] = arguments.length > 1 ? r.call(arguments) : ae, --p || F.resolveWith(k, B)
                            }
                        };
                    if (p <= 1 && (Tt(l, F.done(z(b)).resolve, F.reject, !p), F.state() === "pending" || C(B[b] && B[b].then))) return F.then();
                    for (; b--;) Tt(B[b], z(b), F.reject);
                    return F.promise()
                }
            });
            var Pt = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
            u.Deferred.exceptionHook = function(l, p) {
                e.console && e.console.warn && l && Pt.test(l.name) && e.console.warn("jQuery.Deferred exception: " + l.message, l.stack, p)
            }, u.readyException = function(l) {
                e.setTimeout(function() {
                    throw l
                })
            };
            var U = u.Deferred();
            u.fn.ready = function(l) {
                return U.then(l).catch(function(p) {
                    u.readyException(p)
                }), this
            }, u.extend({
                isReady: !1,
                readyWait: 1,
                ready: function(l) {
                    (l === !0 ? --u.readyWait : u.isReady) || (u.isReady = !0, !(l !== !0 && --u.readyWait > 0) && U.resolveWith(w, [u]))
                }
            }), u.ready.then = U.then;

            function g() {
                w.removeEventListener("DOMContentLoaded", g), e.removeEventListener("load", g), u.ready()
            }
            w.readyState === "complete" || w.readyState !== "loading" && !w.documentElement.doScroll ? e.setTimeout(u.ready) : (w.addEventListener("DOMContentLoaded", g), e.addEventListener("load", g));
            var R = function(l, p, b, k, B, F, z) {
                    var ie = 0,
                        ae = l.length,
                        de = b == null;
                    if (O(b) === "object") {
                        B = !0;
                        for (ie in b) R(l, p, ie, b[ie], !0, F, z)
                    } else if (k !== void 0 && (B = !0, C(k) || (z = !0), de && (z ? (p.call(l, k), p = null) : (de = p, p = function(ye, Be, me) {
                            return de.call(u(ye), me)
                        })), p))
                        for (; ie < ae; ie++) p(l[ie], b, z ? k : k.call(l[ie], ie, p(l[ie], b)));
                    return B ? l : de ? p.call(l) : ae ? p(l[0], b) : F
                },
                j = /^-ms-/,
                N = /-([a-z])/g;

            function W(l, p) {
                return p.toUpperCase()
            }

            function _(l) {
                return l.replace(j, "ms-").replace(N, W)
            }
            var he = function(l) {
                return l.nodeType === 1 || l.nodeType === 9 || !+l.nodeType
            };

            function Pe() {
                this.expando = u.expando + Pe.uid++
            }
            Pe.uid = 1, Pe.prototype = {
                cache: function(l) {
                    var p = l[this.expando];
                    return p || (p = {}, he(l) && (l.nodeType ? l[this.expando] = p : Object.defineProperty(l, this.expando, {
                        value: p,
                        configurable: !0
                    }))), p
                },
                set: function(l, p, b) {
                    var k, B = this.cache(l);
                    if (typeof p == "string") B[_(p)] = b;
                    else
                        for (k in p) B[_(k)] = p[k];
                    return B
                },
                get: function(l, p) {
                    return p === void 0 ? this.cache(l) : l[this.expando] && l[this.expando][_(p)]
                },
                access: function(l, p, b) {
                    return p === void 0 || p && typeof p == "string" && b === void 0 ? this.get(l, p) : (this.set(l, p, b), b !== void 0 ? b : p)
                },
                remove: function(l, p) {
                    var b, k = l[this.expando];
                    if (k !== void 0) {
                        if (p !== void 0)
                            for (Array.isArray(p) ? p = p.map(_) : (p = _(p), p = p in k ? [p] : p.match(Le) || []), b = p.length; b--;) delete k[p[b]];
                        (p === void 0 || u.isEmptyObject(k)) && (l.nodeType ? l[this.expando] = void 0 : delete l[this.expando])
                    }
                },
                hasData: function(l) {
                    var p = l[this.expando];
                    return p !== void 0 && !u.isEmptyObject(p)
                }
            };
            var xe = new Pe,
                Qe = new Pe,
                He = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                pt = /[A-Z]/g;

            function Lt(l) {
                return l === "true" ? !0 : l === "false" ? !1 : l === "null" ? null : l === +l + "" ? +l : He.test(l) ? JSON.parse(l) : l
            }

            function yn(l, p, b) {
                var k;
                if (b === void 0 && l.nodeType === 1)
                    if (k = "data-" + p.replace(pt, "-$&").toLowerCase(), b = l.getAttribute(k), typeof b == "string") {
                        try {
                            b = Lt(b)
                        } catch {}
                        Qe.set(l, p, b)
                    } else b = void 0;
                return b
            }
            u.extend({
                hasData: function(l) {
                    return Qe.hasData(l) || xe.hasData(l)
                },
                data: function(l, p, b) {
                    return Qe.access(l, p, b)
                },
                removeData: function(l, p) {
                    Qe.remove(l, p)
                },
                _data: function(l, p, b) {
                    return xe.access(l, p, b)
                },
                _removeData: function(l, p) {
                    xe.remove(l, p)
                }
            }), u.fn.extend({
                data: function(l, p) {
                    var b, k, B, F = this[0],
                        z = F && F.attributes;
                    if (l === void 0) {
                        if (this.length && (B = Qe.get(F), F.nodeType === 1 && !xe.get(F, "hasDataAttrs"))) {
                            for (b = z.length; b--;) z[b] && (k = z[b].name, k.indexOf("data-") === 0 && (k = _(k.slice(5)), yn(F, k, B[k])));
                            xe.set(F, "hasDataAttrs", !0)
                        }
                        return B
                    }
                    return typeof l == "object" ? this.each(function() {
                        Qe.set(this, l)
                    }) : R(this, function(ie) {
                        var ae;
                        if (F && ie === void 0) return ae = Qe.get(F, l), ae !== void 0 || (ae = yn(F, l), ae !== void 0) ? ae : void 0;
                        this.each(function() {
                            Qe.set(this, l, ie)
                        })
                    }, null, p, arguments.length > 1, null, !0)
                },
                removeData: function(l) {
                    return this.each(function() {
                        Qe.remove(this, l)
                    })
                }
            }), u.extend({
                queue: function(l, p, b) {
                    var k;
                    if (l) return p = (p || "fx") + "queue", k = xe.get(l, p), b && (!k || Array.isArray(b) ? k = xe.access(l, p, u.makeArray(b)) : k.push(b)), k || []
                },
                dequeue: function(l, p) {
                    p = p || "fx";
                    var b = u.queue(l, p),
                        k = b.length,
                        B = b.shift(),
                        F = u._queueHooks(l, p),
                        z = function() {
                            u.dequeue(l, p)
                        };
                    B === "inprogress" && (B = b.shift(), k--), B && (p === "fx" && b.unshift("inprogress"), delete F.stop, B.call(l, z, F)), !k && F && F.empty.fire()
                },
                _queueHooks: function(l, p) {
                    var b = p + "queueHooks";
                    return xe.get(l, b) || xe.access(l, b, {
                        empty: u.Callbacks("once memory").add(function() {
                            xe.remove(l, [p + "queue", b])
                        })
                    })
                }
            }), u.fn.extend({
                queue: function(l, p) {
                    var b = 2;
                    return typeof l != "string" && (p = l, l = "fx", b--), arguments.length < b ? u.queue(this[0], l) : p === void 0 ? this : this.each(function() {
                        var k = u.queue(this, l, p);
                        u._queueHooks(this, l), l === "fx" && k[0] !== "inprogress" && u.dequeue(this, l)
                    })
                },
                dequeue: function(l) {
                    return this.each(function() {
                        u.dequeue(this, l)
                    })
                },
                clearQueue: function(l) {
                    return this.queue(l || "fx", [])
                },
                promise: function(l, p) {
                    var b, k = 1,
                        B = u.Deferred(),
                        F = this,
                        z = this.length,
                        ie = function() {
                            --k || B.resolveWith(F, [F])
                        };
                    for (typeof l != "string" && (p = l, l = void 0), l = l || "fx"; z--;) b = xe.get(F[z], l + "queueHooks"), b && b.empty && (k++, b.empty.add(ie));
                    return ie(), B.promise(p)
                }
            });
            var mt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                Dt = new RegExp("^(?:([+-])=|)(" + mt + ")([a-z%]*)$", "i"),
                Et = ["Top", "Right", "Bottom", "Left"],
                cn = w.documentElement,
                rt = function(l) {
                    return u.contains(l.ownerDocument, l)
                },
                Kt = {
                    composed: !0
                };
            cn.getRootNode && (rt = function(l) {
                return u.contains(l.ownerDocument, l) || l.getRootNode(Kt) === l.ownerDocument
            });
            var ee = function(l, p) {
                return l = p || l, l.style.display === "none" || l.style.display === "" && rt(l) && u.css(l, "display") === "none"
            };

            function Z(l, p, b, k) {
                var B, F, z = 20,
                    ie = k ? function() {
                        return k.cur()
                    } : function() {
                        return u.css(l, p, "")
                    },
                    ae = ie(),
                    de = b && b[3] || (u.cssNumber[p] ? "" : "px"),
                    ye = l.nodeType && (u.cssNumber[p] || de !== "px" && +ae) && Dt.exec(u.css(l, p));
                if (ye && ye[3] !== de) {
                    for (ae = ae / 2, de = de || ye[3], ye = +ae || 1; z--;) u.style(l, p, ye + de), (1 - F) * (1 - (F = ie() / ae || .5)) <= 0 && (z = 0), ye = ye / F;
                    ye = ye * 2, u.style(l, p, ye + de), b = b || []
                }
                return b && (ye = +ye || +ae || 0, B = b[1] ? ye + (b[1] + 1) * b[2] : +b[2], k && (k.unit = de, k.start = ye, k.end = B)), B
            }
            var le = {};

            function K(l) {
                var p, b = l.ownerDocument,
                    k = l.nodeName,
                    B = le[k];
                return B || (p = b.body.appendChild(b.createElement(k)), B = u.css(p, "display"), p.parentNode.removeChild(p), B === "none" && (B = "block"), le[k] = B, B)
            }

            function Ve(l, p) {
                for (var b, k, B = [], F = 0, z = l.length; F < z; F++) k = l[F], k.style && (b = k.style.display, p ? (b === "none" && (B[F] = xe.get(k, "display") || null, B[F] || (k.style.display = "")), k.style.display === "" && ee(k) && (B[F] = K(k))) : b !== "none" && (B[F] = "none", xe.set(k, "display", b)));
                for (F = 0; F < z; F++) B[F] != null && (l[F].style.display = B[F]);
                return l
            }
            u.fn.extend({
                show: function() {
                    return Ve(this, !0)
                },
                hide: function() {
                    return Ve(this)
                },
                toggle: function(l) {
                    return typeof l == "boolean" ? l ? this.show() : this.hide() : this.each(function() {
                        ee(this) ? u(this).show() : u(this).hide()
                    })
                }
            });
            var Re = /^(?:checkbox|radio)$/i,
                De = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                Ke = /^$|^module$|\/(?:java|ecma)script/i;
            (function() {
                var l = w.createDocumentFragment(),
                    p = l.appendChild(w.createElement("div")),
                    b = w.createElement("input");
                b.setAttribute("type", "radio"), b.setAttribute("checked", "checked"), b.setAttribute("name", "t"), p.appendChild(b), S.checkClone = p.cloneNode(!0).cloneNode(!0).lastChild.checked, p.innerHTML = "<textarea>x</textarea>", S.noCloneChecked = !!p.cloneNode(!0).lastChild.defaultValue, p.innerHTML = "<option></option>", S.option = !!p.lastChild
            })();
            var We = {
                thead: [1, "<table>", "</table>"],
                col: [2, "<table><colgroup>", "</colgroup></table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: [0, "", ""]
            };
            We.tbody = We.tfoot = We.colgroup = We.caption = We.thead, We.th = We.td, S.option || (We.optgroup = We.option = [1, "<select multiple='multiple'>", "</select>"]);

            function bt(l, p) {
                var b;
                return typeof l.getElementsByTagName < "u" ? b = l.getElementsByTagName(p || "*") : typeof l.querySelectorAll < "u" ? b = l.querySelectorAll(p || "*") : b = [], p === void 0 || p && oe(l, p) ? u.merge([l], b) : b
            }

            function tn(l, p) {
                for (var b = 0, k = l.length; b < k; b++) xe.set(l[b], "globalEval", !p || xe.get(p[b], "globalEval"))
            }
            var ot = /<|&#?\w+;/;

            function ui(l, p, b, k, B) {
                for (var F, z, ie, ae, de, ye, Be = p.createDocumentFragment(), me = [], we = 0, et = l.length; we < et; we++)
                    if (F = l[we], F || F === 0)
                        if (O(F) === "object") u.merge(me, F.nodeType ? [F] : F);
                        else if (!ot.test(F)) me.push(p.createTextNode(F));
                else {
                    for (z = z || Be.appendChild(p.createElement("div")), ie = (De.exec(F) || ["", ""])[1].toLowerCase(), ae = We[ie] || We._default, z.innerHTML = ae[1] + u.htmlPrefilter(F) + ae[2], ye = ae[0]; ye--;) z = z.lastChild;
                    u.merge(me, z.childNodes), z = Be.firstChild, z.textContent = ""
                }
                for (Be.textContent = "", we = 0; F = me[we++];) {
                    if (k && u.inArray(F, k) > -1) {
                        B && B.push(F);
                        continue
                    }
                    if (de = rt(F), z = bt(Be.appendChild(F), "script"), de && tn(z), b)
                        for (ye = 0; F = z[ye++];) Ke.test(F.type || "") && b.push(F)
                }
                return Be
            }
            var bi = /^([^.]*)(?:\.(.+)|)/;

            function ht() {
                return !0
            }

            function mi() {
                return !1
            }

            function Is(l, p) {
                return l === za() == (p === "focus")
            }

            function za() {
                try {
                    return w.activeElement
                } catch {}
            }

            function si(l, p, b, k, B, F) {
                var z, ie;
                if (typeof p == "object") {
                    typeof b != "string" && (k = k || b, b = void 0);
                    for (ie in p) si(l, ie, b, k, p[ie], F);
                    return l
                }
                if (k == null && B == null ? (B = b, k = b = void 0) : B == null && (typeof b == "string" ? (B = k, k = void 0) : (B = k, k = b, b = void 0)), B === !1) B = mi;
                else if (!B) return l;
                return F === 1 && (z = B, B = function(ae) {
                    return u().off(ae), z.apply(this, arguments)
                }, B.guid = z.guid || (z.guid = u.guid++)), l.each(function() {
                    u.event.add(this, p, B, k, b)
                })
            }
            u.event = {
                global: {},
                add: function(l, p, b, k, B) {
                    var F, z, ie, ae, de, ye, Be, me, we, et, ut, Je = xe.get(l);
                    if (!!he(l))
                        for (b.handler && (F = b, b = F.handler, B = F.selector), B && u.find.matchesSelector(cn, B), b.guid || (b.guid = u.guid++), (ae = Je.events) || (ae = Je.events = Object.create(null)), (z = Je.handle) || (z = Je.handle = function(sn) {
                                return typeof u < "u" && u.event.triggered !== sn.type ? u.event.dispatch.apply(l, arguments) : void 0
                            }), p = (p || "").match(Le) || [""], de = p.length; de--;) ie = bi.exec(p[de]) || [], we = ut = ie[1], et = (ie[2] || "").split(".").sort(), we && (Be = u.event.special[we] || {}, we = (B ? Be.delegateType : Be.bindType) || we, Be = u.event.special[we] || {}, ye = u.extend({
                            type: we,
                            origType: ut,
                            data: k,
                            handler: b,
                            guid: b.guid,
                            selector: B,
                            needsContext: B && u.expr.match.needsContext.test(B),
                            namespace: et.join(".")
                        }, F), (me = ae[we]) || (me = ae[we] = [], me.delegateCount = 0, (!Be.setup || Be.setup.call(l, k, et, z) === !1) && l.addEventListener && l.addEventListener(we, z)), Be.add && (Be.add.call(l, ye), ye.handler.guid || (ye.handler.guid = b.guid)), B ? me.splice(me.delegateCount++, 0, ye) : me.push(ye), u.event.global[we] = !0)
                },
                remove: function(l, p, b, k, B) {
                    var F, z, ie, ae, de, ye, Be, me, we, et, ut, Je = xe.hasData(l) && xe.get(l);
                    if (!(!Je || !(ae = Je.events))) {
                        for (p = (p || "").match(Le) || [""], de = p.length; de--;) {
                            if (ie = bi.exec(p[de]) || [], we = ut = ie[1], et = (ie[2] || "").split(".").sort(), !we) {
                                for (we in ae) u.event.remove(l, we + p[de], b, k, !0);
                                continue
                            }
                            for (Be = u.event.special[we] || {}, we = (k ? Be.delegateType : Be.bindType) || we, me = ae[we] || [], ie = ie[2] && new RegExp("(^|\\.)" + et.join("\\.(?:.*\\.|)") + "(\\.|$)"), z = F = me.length; F--;) ye = me[F], (B || ut === ye.origType) && (!b || b.guid === ye.guid) && (!ie || ie.test(ye.namespace)) && (!k || k === ye.selector || k === "**" && ye.selector) && (me.splice(F, 1), ye.selector && me.delegateCount--, Be.remove && Be.remove.call(l, ye));
                            z && !me.length && ((!Be.teardown || Be.teardown.call(l, et, Je.handle) === !1) && u.removeEvent(l, we, Je.handle), delete ae[we])
                        }
                        u.isEmptyObject(ae) && xe.remove(l, "handle events")
                    }
                },
                dispatch: function(l) {
                    var p, b, k, B, F, z, ie = new Array(arguments.length),
                        ae = u.event.fix(l),
                        de = (xe.get(this, "events") || Object.create(null))[ae.type] || [],
                        ye = u.event.special[ae.type] || {};
                    for (ie[0] = ae, p = 1; p < arguments.length; p++) ie[p] = arguments[p];
                    if (ae.delegateTarget = this, !(ye.preDispatch && ye.preDispatch.call(this, ae) === !1)) {
                        for (z = u.event.handlers.call(this, ae, de), p = 0;
                            (B = z[p++]) && !ae.isPropagationStopped();)
                            for (ae.currentTarget = B.elem, b = 0;
                                (F = B.handlers[b++]) && !ae.isImmediatePropagationStopped();)(!ae.rnamespace || F.namespace === !1 || ae.rnamespace.test(F.namespace)) && (ae.handleObj = F, ae.data = F.data, k = ((u.event.special[F.origType] || {}).handle || F.handler).apply(B.elem, ie), k !== void 0 && (ae.result = k) === !1 && (ae.preventDefault(), ae.stopPropagation()));
                        return ye.postDispatch && ye.postDispatch.call(this, ae), ae.result
                    }
                },
                handlers: function(l, p) {
                    var b, k, B, F, z, ie = [],
                        ae = p.delegateCount,
                        de = l.target;
                    if (ae && de.nodeType && !(l.type === "click" && l.button >= 1)) {
                        for (; de !== this; de = de.parentNode || this)
                            if (de.nodeType === 1 && !(l.type === "click" && de.disabled === !0)) {
                                for (F = [], z = {}, b = 0; b < ae; b++) k = p[b], B = k.selector + " ", z[B] === void 0 && (z[B] = k.needsContext ? u(B, this).index(de) > -1 : u.find(B, this, null, [de]).length), z[B] && F.push(k);
                                F.length && ie.push({
                                    elem: de,
                                    handlers: F
                                })
                            }
                    }
                    return de = this, ae < p.length && ie.push({
                        elem: de,
                        handlers: p.slice(ae)
                    }), ie
                },
                addProp: function(l, p) {
                    Object.defineProperty(u.Event.prototype, l, {
                        enumerable: !0,
                        configurable: !0,
                        get: C(p) ? function() {
                            if (this.originalEvent) return p(this.originalEvent)
                        } : function() {
                            if (this.originalEvent) return this.originalEvent[l]
                        },
                        set: function(b) {
                            Object.defineProperty(this, l, {
                                enumerable: !0,
                                configurable: !0,
                                writable: !0,
                                value: b
                            })
                        }
                    })
                },
                fix: function(l) {
                    return l[u.expando] ? l : new u.Event(l)
                },
                special: {
                    load: {
                        noBubble: !0
                    },
                    click: {
                        setup: function(l) {
                            var p = this || l;
                            return Re.test(p.type) && p.click && oe(p, "input") && bn(p, "click", ht), !1
                        },
                        trigger: function(l) {
                            var p = this || l;
                            return Re.test(p.type) && p.click && oe(p, "input") && bn(p, "click"), !0
                        },
                        _default: function(l) {
                            var p = l.target;
                            return Re.test(p.type) && p.click && oe(p, "input") && xe.get(p, "click") || oe(p, "a")
                        }
                    },
                    beforeunload: {
                        postDispatch: function(l) {
                            l.result !== void 0 && l.originalEvent && (l.originalEvent.returnValue = l.result)
                        }
                    }
                }
            };

            function bn(l, p, b) {
                if (!b) {
                    xe.get(l, p) === void 0 && u.event.add(l, p, ht);
                    return
                }
                xe.set(l, p, !1), u.event.add(l, p, {
                    namespace: !1,
                    handler: function(k) {
                        var B, F, z = xe.get(this, p);
                        if (k.isTrigger & 1 && this[p]) {
                            if (z.length)(u.event.special[p] || {}).delegateType && k.stopPropagation();
                            else if (z = r.call(arguments), xe.set(this, p, z), B = b(this, p), this[p](), F = xe.get(this, p), z !== F || B ? xe.set(this, p, !1) : F = {}, z !== F) return k.stopImmediatePropagation(), k.preventDefault(), F && F.value
                        } else z.length && (xe.set(this, p, {
                            value: u.event.trigger(u.extend(z[0], u.Event.prototype), z.slice(1), this)
                        }), k.stopImmediatePropagation())
                    }
                })
            }
            u.removeEvent = function(l, p, b) {
                l.removeEventListener && l.removeEventListener(p, b)
            }, u.Event = function(l, p) {
                if (!(this instanceof u.Event)) return new u.Event(l, p);
                l && l.type ? (this.originalEvent = l, this.type = l.type, this.isDefaultPrevented = l.defaultPrevented || l.defaultPrevented === void 0 && l.returnValue === !1 ? ht : mi, this.target = l.target && l.target.nodeType === 3 ? l.target.parentNode : l.target, this.currentTarget = l.currentTarget, this.relatedTarget = l.relatedTarget) : this.type = l, p && u.extend(this, p), this.timeStamp = l && l.timeStamp || Date.now(), this[u.expando] = !0
            }, u.Event.prototype = {
                constructor: u.Event,
                isDefaultPrevented: mi,
                isPropagationStopped: mi,
                isImmediatePropagationStopped: mi,
                isSimulated: !1,
                preventDefault: function() {
                    var l = this.originalEvent;
                    this.isDefaultPrevented = ht, l && !this.isSimulated && l.preventDefault()
                },
                stopPropagation: function() {
                    var l = this.originalEvent;
                    this.isPropagationStopped = ht, l && !this.isSimulated && l.stopPropagation()
                },
                stopImmediatePropagation: function() {
                    var l = this.originalEvent;
                    this.isImmediatePropagationStopped = ht, l && !this.isSimulated && l.stopImmediatePropagation(), this.stopPropagation()
                }
            }, u.each({
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                char: !0,
                code: !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: !0
            }, u.event.addProp), u.each({
                focus: "focusin",
                blur: "focusout"
            }, function(l, p) {
                u.event.special[l] = {
                    setup: function() {
                        return bn(this, l, Is), !1
                    },
                    trigger: function() {
                        return bn(this, l), !0
                    },
                    _default: function() {
                        return !0
                    },
                    delegateType: p
                }
            }), u.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function(l, p) {
                u.event.special[l] = {
                    delegateType: p,
                    bindType: p,
                    handle: function(b) {
                        var k, B = this,
                            F = b.relatedTarget,
                            z = b.handleObj;
                        return (!F || F !== B && !u.contains(B, F)) && (b.type = z.origType, k = z.handler.apply(this, arguments), b.type = p), k
                    }
                }
            }), u.fn.extend({
                on: function(l, p, b, k) {
                    return si(this, l, p, b, k)
                },
                one: function(l, p, b, k) {
                    return si(this, l, p, b, k, 1)
                },
                off: function(l, p, b) {
                    var k, B;
                    if (l && l.preventDefault && l.handleObj) return k = l.handleObj, u(l.delegateTarget).off(k.namespace ? k.origType + "." + k.namespace : k.origType, k.selector, k.handler), this;
                    if (typeof l == "object") {
                        for (B in l) this.off(B, p, l[B]);
                        return this
                    }
                    return (p === !1 || typeof p == "function") && (b = p, p = void 0), b === !1 && (b = mi), this.each(function() {
                        u.event.remove(this, l, b, p)
                    })
                }
            });
            var Ha = /<script|<style|<link/i,
                Na = /checked\s*(?:[^=]|=\s*.checked.)/i,
                Ps = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

            function vo(l, p) {
                return oe(l, "table") && oe(p.nodeType !== 11 ? p : p.firstChild, "tr") && u(l).children("tbody")[0] || l
            }

            function Us(l) {
                return l.type = (l.getAttribute("type") !== null) + "/" + l.type, l
            }

            function Fs(l) {
                return (l.type || "").slice(0, 5) === "true/" ? l.type = l.type.slice(5) : l.removeAttribute("type"), l
            }

            function wo(l, p) {
                var b, k, B, F, z, ie, ae;
                if (p.nodeType === 1) {
                    if (xe.hasData(l) && (F = xe.get(l), ae = F.events, ae)) {
                        xe.remove(p, "handle events");
                        for (B in ae)
                            for (b = 0, k = ae[B].length; b < k; b++) u.event.add(p, B, ae[B][b])
                    }
                    Qe.hasData(l) && (z = Qe.access(l), ie = u.extend({}, z), Qe.set(p, ie))
                }
            }

            function xo(l, p) {
                var b = p.nodeName.toLowerCase();
                b === "input" && Re.test(l.type) ? p.checked = l.checked : (b === "input" || b === "textarea") && (p.defaultValue = l.defaultValue)
            }

            function On(l, p, b, k) {
                p = V(p);
                var B, F, z, ie, ae, de, ye = 0,
                    Be = l.length,
                    me = Be - 1,
                    we = p[0],
                    et = C(we);
                if (et || Be > 1 && typeof we == "string" && !S.checkClone && Na.test(we)) return l.each(function(ut) {
                    var Je = l.eq(ut);
                    et && (p[0] = we.call(this, ut, Je.html())), On(Je, p, b, k)
                });
                if (Be && (B = ui(p, l[0].ownerDocument, !1, l, k), F = B.firstChild, B.childNodes.length === 1 && (B = F), F || k)) {
                    for (z = u.map(bt(B, "script"), Us), ie = z.length; ye < Be; ye++) ae = B, ye !== me && (ae = u.clone(ae, !0, !0), ie && u.merge(z, bt(ae, "script"))), b.call(l[ye], ae, ye);
                    if (ie)
                        for (de = z[z.length - 1].ownerDocument, u.map(z, Fs), ye = 0; ye < ie; ye++) ae = z[ye], Ke.test(ae.type || "") && !xe.access(ae, "globalEval") && u.contains(de, ae) && (ae.src && (ae.type || "").toLowerCase() !== "module" ? u._evalUrl && !ae.noModule && u._evalUrl(ae.src, {
                            nonce: ae.nonce || ae.getAttribute("nonce")
                        }, de) : M(ae.textContent.replace(Ps, ""), ae, de))
                }
                return l
            }

            function ko(l, p, b) {
                for (var k, B = p ? u.filter(p, l) : l, F = 0;
                    (k = B[F]) != null; F++) !b && k.nodeType === 1 && u.cleanData(bt(k)), k.parentNode && (b && rt(k) && tn(bt(k, "script")), k.parentNode.removeChild(k));
                return l
            }
            u.extend({
                htmlPrefilter: function(l) {
                    return l
                },
                clone: function(l, p, b) {
                    var k, B, F, z, ie = l.cloneNode(!0),
                        ae = rt(l);
                    if (!S.noCloneChecked && (l.nodeType === 1 || l.nodeType === 11) && !u.isXMLDoc(l))
                        for (z = bt(ie), F = bt(l), k = 0, B = F.length; k < B; k++) xo(F[k], z[k]);
                    if (p)
                        if (b)
                            for (F = F || bt(l), z = z || bt(ie), k = 0, B = F.length; k < B; k++) wo(F[k], z[k]);
                        else wo(l, ie);
                    return z = bt(ie, "script"), z.length > 0 && tn(z, !ae && bt(l, "script")), ie
                },
                cleanData: function(l) {
                    for (var p, b, k, B = u.event.special, F = 0;
                        (b = l[F]) !== void 0; F++)
                        if (he(b)) {
                            if (p = b[xe.expando]) {
                                if (p.events)
                                    for (k in p.events) B[k] ? u.event.remove(b, k) : u.removeEvent(b, k, p.handle);
                                b[xe.expando] = void 0
                            }
                            b[Qe.expando] && (b[Qe.expando] = void 0)
                        }
                }
            }), u.fn.extend({
                detach: function(l) {
                    return ko(this, l, !0)
                },
                remove: function(l) {
                    return ko(this, l)
                },
                text: function(l) {
                    return R(this, function(p) {
                        return p === void 0 ? u.text(this) : this.empty().each(function() {
                            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = p)
                        })
                    }, null, l, arguments.length)
                },
                append: function() {
                    return On(this, arguments, function(l) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var p = vo(this, l);
                            p.appendChild(l)
                        }
                    })
                },
                prepend: function() {
                    return On(this, arguments, function(l) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var p = vo(this, l);
                            p.insertBefore(l, p.firstChild)
                        }
                    })
                },
                before: function() {
                    return On(this, arguments, function(l) {
                        this.parentNode && this.parentNode.insertBefore(l, this)
                    })
                },
                after: function() {
                    return On(this, arguments, function(l) {
                        this.parentNode && this.parentNode.insertBefore(l, this.nextSibling)
                    })
                },
                empty: function() {
                    for (var l, p = 0;
                        (l = this[p]) != null; p++) l.nodeType === 1 && (u.cleanData(bt(l, !1)), l.textContent = "");
                    return this
                },
                clone: function(l, p) {
                    return l = l == null ? !1 : l, p = p == null ? l : p, this.map(function() {
                        return u.clone(this, l, p)
                    })
                },
                html: function(l) {
                    return R(this, function(p) {
                        var b = this[0] || {},
                            k = 0,
                            B = this.length;
                        if (p === void 0 && b.nodeType === 1) return b.innerHTML;
                        if (typeof p == "string" && !Ha.test(p) && !We[(De.exec(p) || ["", ""])[1].toLowerCase()]) {
                            p = u.htmlPrefilter(p);
                            try {
                                for (; k < B; k++) b = this[k] || {}, b.nodeType === 1 && (u.cleanData(bt(b, !1)), b.innerHTML = p);
                                b = 0
                            } catch {}
                        }
                        b && this.empty().append(p)
                    }, null, l, arguments.length)
                },
                replaceWith: function() {
                    var l = [];
                    return On(this, arguments, function(p) {
                        var b = this.parentNode;
                        u.inArray(this, l) < 0 && (u.cleanData(bt(this)), b && b.replaceChild(p, this))
                    }, l)
                }
            }), u.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function(l, p) {
                u.fn[l] = function(b) {
                    for (var k, B = [], F = u(b), z = F.length - 1, ie = 0; ie <= z; ie++) k = ie === z ? this : this.clone(!0), u(F[ie])[p](k), A.apply(B, k.get());
                    return this.pushStack(B)
                }
            });
            var js = new RegExp("^(" + mt + ")(?!px)[a-z%]+$", "i"),
                Ui = function(l) {
                    var p = l.ownerDocument.defaultView;
                    return (!p || !p.opener) && (p = e), p.getComputedStyle(l)
                },
                Co = function(l, p, b) {
                    var k, B, F = {};
                    for (B in p) F[B] = l.style[B], l.style[B] = p[B];
                    k = b.call(l);
                    for (B in p) l.style[B] = F[B];
                    return k
                },
                Qs = new RegExp(Et.join("|"), "i");
            (function() {
                function l() {
                    if (!!de) {
                        ae.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", de.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", cn.appendChild(ae).appendChild(de);
                        var ye = e.getComputedStyle(de);
                        b = ye.top !== "1%", ie = p(ye.marginLeft) === 12, de.style.right = "60%", F = p(ye.right) === 36, k = p(ye.width) === 36, de.style.position = "absolute", B = p(de.offsetWidth / 3) === 12, cn.removeChild(ae), de = null
                    }
                }

                function p(ye) {
                    return Math.round(parseFloat(ye))
                }
                var b, k, B, F, z, ie, ae = w.createElement("div"),
                    de = w.createElement("div");
                !de.style || (de.style.backgroundClip = "content-box", de.cloneNode(!0).style.backgroundClip = "", S.clearCloneStyle = de.style.backgroundClip === "content-box", u.extend(S, {
                    boxSizingReliable: function() {
                        return l(), k
                    },
                    pixelBoxStyles: function() {
                        return l(), F
                    },
                    pixelPosition: function() {
                        return l(), b
                    },
                    reliableMarginLeft: function() {
                        return l(), ie
                    },
                    scrollboxSize: function() {
                        return l(), B
                    },
                    reliableTrDimensions: function() {
                        var ye, Be, me, we;
                        return z == null && (ye = w.createElement("table"), Be = w.createElement("tr"), me = w.createElement("div"), ye.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", Be.style.cssText = "border:1px solid", Be.style.height = "1px", me.style.height = "9px", me.style.display = "block", cn.appendChild(ye).appendChild(Be).appendChild(me), we = e.getComputedStyle(Be), z = parseInt(we.height, 10) + parseInt(we.borderTopWidth, 10) + parseInt(we.borderBottomWidth, 10) === Be.offsetHeight, cn.removeChild(ye)), z
                    }
                }))
            })();

            function lt(l, p, b) {
                var k, B, F, z, ie = l.style;
                return b = b || Ui(l), b && (z = b.getPropertyValue(p) || b[p], z === "" && !rt(l) && (z = u.style(l, p)), !S.pixelBoxStyles() && js.test(z) && Qs.test(p) && (k = ie.width, B = ie.minWidth, F = ie.maxWidth, ie.minWidth = ie.maxWidth = ie.width = z, z = b.width, ie.width = k, ie.minWidth = B, ie.maxWidth = F)), z !== void 0 ? z + "" : z
            }

            function L(l, p) {
                return {
                    get: function() {
                        if (l()) {
                            delete this.get;
                            return
                        }
                        return (this.get = p).apply(this, arguments)
                    }
                }
            }
            var f = ["Webkit", "Moz", "ms"],
                P = w.createElement("div").style,
                H = {};

            function ce(l) {
                for (var p = l[0].toUpperCase() + l.slice(1), b = f.length; b--;)
                    if (l = f[b] + p, l in P) return l
            }

            function Me(l) {
                var p = u.cssProps[l] || H[l];
                return p || (l in P ? l : H[l] = ce(l) || l)
            }
            var tt = /^(none|table(?!-c[ea]).+)/,
                Gt = /^--/,
                Vn = {
                    position: "absolute",
                    visibility: "hidden",
                    display: "block"
                },
                Fi = {
                    letterSpacing: "0",
                    fontWeight: "400"
                };

            function vi(l, p, b) {
                var k = Dt.exec(p);
                return k ? Math.max(0, k[2] - (b || 0)) + (k[3] || "px") : p
            }

            function ji(l, p, b, k, B, F) {
                var z = p === "width" ? 1 : 0,
                    ie = 0,
                    ae = 0;
                if (b === (k ? "border" : "content")) return 0;
                for (; z < 4; z += 2) b === "margin" && (ae += u.css(l, b + Et[z], !0, B)), k ? (b === "content" && (ae -= u.css(l, "padding" + Et[z], !0, B)), b !== "margin" && (ae -= u.css(l, "border" + Et[z] + "Width", !0, B))) : (ae += u.css(l, "padding" + Et[z], !0, B), b !== "padding" ? ae += u.css(l, "border" + Et[z] + "Width", !0, B) : ie += u.css(l, "border" + Et[z] + "Width", !0, B));
                return !k && F >= 0 && (ae += Math.max(0, Math.ceil(l["offset" + p[0].toUpperCase() + p.slice(1)] - F - ae - ie - .5)) || 0), ae
            }

            function Ga(l, p, b) {
                var k = Ui(l),
                    B = !S.boxSizingReliable() || b,
                    F = B && u.css(l, "boxSizing", !1, k) === "border-box",
                    z = F,
                    ie = lt(l, p, k),
                    ae = "offset" + p[0].toUpperCase() + p.slice(1);
                if (js.test(ie)) {
                    if (!b) return ie;
                    ie = "auto"
                }
                return (!S.boxSizingReliable() && F || !S.reliableTrDimensions() && oe(l, "tr") || ie === "auto" || !parseFloat(ie) && u.css(l, "display", !1, k) === "inline") && l.getClientRects().length && (F = u.css(l, "boxSizing", !1, k) === "border-box", z = ae in l, z && (ie = l[ae])), ie = parseFloat(ie) || 0, ie + ji(l, p, b || (F ? "border" : "content"), z, k, ie) + "px"
            }
            u.extend({
                cssHooks: {
                    opacity: {
                        get: function(l, p) {
                            if (p) {
                                var b = lt(l, "opacity");
                                return b === "" ? "1" : b
                            }
                        }
                    }
                },
                cssNumber: {
                    animationIterationCount: !0,
                    columnCount: !0,
                    fillOpacity: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    fontWeight: !0,
                    gridArea: !0,
                    gridColumn: !0,
                    gridColumnEnd: !0,
                    gridColumnStart: !0,
                    gridRow: !0,
                    gridRowEnd: !0,
                    gridRowStart: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {},
                style: function(l, p, b, k) {
                    if (!(!l || l.nodeType === 3 || l.nodeType === 8 || !l.style)) {
                        var B, F, z, ie = _(p),
                            ae = Gt.test(p),
                            de = l.style;
                        if (ae || (p = Me(ie)), z = u.cssHooks[p] || u.cssHooks[ie], b !== void 0) {
                            if (F = typeof b, F === "string" && (B = Dt.exec(b)) && B[1] && (b = Z(l, p, B), F = "number"), b == null || b !== b) return;
                            F === "number" && !ae && (b += B && B[3] || (u.cssNumber[ie] ? "" : "px")), !S.clearCloneStyle && b === "" && p.indexOf("background") === 0 && (de[p] = "inherit"), (!z || !("set" in z) || (b = z.set(l, b, k)) !== void 0) && (ae ? de.setProperty(p, b) : de[p] = b)
                        } else return z && "get" in z && (B = z.get(l, !1, k)) !== void 0 ? B : de[p]
                    }
                },
                css: function(l, p, b, k) {
                    var B, F, z, ie = _(p),
                        ae = Gt.test(p);
                    return ae || (p = Me(ie)), z = u.cssHooks[p] || u.cssHooks[ie], z && "get" in z && (B = z.get(l, !0, b)), B === void 0 && (B = lt(l, p, k)), B === "normal" && p in Fi && (B = Fi[p]), b === "" || b ? (F = parseFloat(B), b === !0 || isFinite(F) ? F || 0 : B) : B
                }
            }), u.each(["height", "width"], function(l, p) {
                u.cssHooks[p] = {
                    get: function(b, k, B) {
                        if (k) return tt.test(u.css(b, "display")) && (!b.getClientRects().length || !b.getBoundingClientRect().width) ? Co(b, Vn, function() {
                            return Ga(b, p, B)
                        }) : Ga(b, p, B)
                    },
                    set: function(b, k, B) {
                        var F, z = Ui(b),
                            ie = !S.scrollboxSize() && z.position === "absolute",
                            ae = ie || B,
                            de = ae && u.css(b, "boxSizing", !1, z) === "border-box",
                            ye = B ? ji(b, p, B, de, z) : 0;
                        return de && ie && (ye -= Math.ceil(b["offset" + p[0].toUpperCase() + p.slice(1)] - parseFloat(z[p]) - ji(b, p, "border", !1, z) - .5)), ye && (F = Dt.exec(k)) && (F[3] || "px") !== "px" && (b.style[p] = k, k = u.css(b, p)), vi(b, k, ye)
                    }
                }
            }), u.cssHooks.marginLeft = L(S.reliableMarginLeft, function(l, p) {
                if (p) return (parseFloat(lt(l, "marginLeft")) || l.getBoundingClientRect().left - Co(l, {
                    marginLeft: 0
                }, function() {
                    return l.getBoundingClientRect().left
                })) + "px"
            }), u.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function(l, p) {
                u.cssHooks[l + p] = {
                    expand: function(b) {
                        for (var k = 0, B = {}, F = typeof b == "string" ? b.split(" ") : [b]; k < 4; k++) B[l + Et[k] + p] = F[k] || F[k - 2] || F[0];
                        return B
                    }
                }, l !== "margin" && (u.cssHooks[l + p].set = vi)
            }), u.fn.extend({
                css: function(l, p) {
                    return R(this, function(b, k, B) {
                        var F, z, ie = {},
                            ae = 0;
                        if (Array.isArray(k)) {
                            for (F = Ui(b), z = k.length; ae < z; ae++) ie[k[ae]] = u.css(b, k[ae], !1, F);
                            return ie
                        }
                        return B !== void 0 ? u.style(b, k, B) : u.css(b, k)
                    }, l, p, arguments.length > 1)
                }
            });

            function ln(l, p, b, k, B) {
                return new ln.prototype.init(l, p, b, k, B)
            }
            u.Tween = ln, ln.prototype = {
                constructor: ln,
                init: function(l, p, b, k, B, F) {
                    this.elem = l, this.prop = b, this.easing = B || u.easing._default, this.options = p, this.start = this.now = this.cur(), this.end = k, this.unit = F || (u.cssNumber[b] ? "" : "px")
                },
                cur: function() {
                    var l = ln.propHooks[this.prop];
                    return l && l.get ? l.get(this) : ln.propHooks._default.get(this)
                },
                run: function(l) {
                    var p, b = ln.propHooks[this.prop];
                    return this.options.duration ? this.pos = p = u.easing[this.easing](l, this.options.duration * l, 0, 1, this.options.duration) : this.pos = p = l, this.now = (this.end - this.start) * p + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), b && b.set ? b.set(this) : ln.propHooks._default.set(this), this
                }
            }, ln.prototype.init.prototype = ln.prototype, ln.propHooks = {
                _default: {
                    get: function(l) {
                        var p;
                        return l.elem.nodeType !== 1 || l.elem[l.prop] != null && l.elem.style[l.prop] == null ? l.elem[l.prop] : (p = u.css(l.elem, l.prop, ""), !p || p === "auto" ? 0 : p)
                    },
                    set: function(l) {
                        u.fx.step[l.prop] ? u.fx.step[l.prop](l) : l.elem.nodeType === 1 && (u.cssHooks[l.prop] || l.elem.style[Me(l.prop)] != null) ? u.style(l.elem, l.prop, l.now + l.unit) : l.elem[l.prop] = l.now
                    }
                }
            }, ln.propHooks.scrollTop = ln.propHooks.scrollLeft = {
                set: function(l) {
                    l.elem.nodeType && l.elem.parentNode && (l.elem[l.prop] = l.now)
                }
            }, u.easing = {
                linear: function(l) {
                    return l
                },
                swing: function(l) {
                    return .5 - Math.cos(l * Math.PI) / 2
                },
                _default: "swing"
            }, u.fx = ln.prototype.init, u.fx.step = {};
            var nn, Ro, pp = /^(?:toggle|show|hide)$/,
                hp = /queueHooks$/;

            function Xa() {
                Ro && (w.hidden === !1 && e.requestAnimationFrame ? e.requestAnimationFrame(Xa) : e.setTimeout(Xa, u.fx.interval), u.fx.tick())
            }

            function Ya() {
                return e.setTimeout(function() {
                    nn = void 0
                }), nn = Date.now()
            }

            function Do(l, p) {
                var b, k = 0,
                    B = {
                        height: l
                    };
                for (p = p ? 1 : 0; k < 4; k += 2 - p) b = Et[k], B["margin" + b] = B["padding" + b] = l;
                return p && (B.opacity = B.width = l), B
            }

            function KV(l, p, b) {
                for (var k, B = (Nn.tweeners[p] || []).concat(Nn.tweeners["*"]), F = 0, z = B.length; F < z; F++)
                    if (k = B[F].call(b, p, l)) return k
            }

            function up(l, p, b) {
                var k, B, F, z, ie, ae, de, ye, Be = "width" in p || "height" in p,
                    me = this,
                    we = {},
                    et = l.style,
                    ut = l.nodeType && ee(l),
                    Je = xe.get(l, "fxshow");
                b.queue || (z = u._queueHooks(l, "fx"), z.unqueued == null && (z.unqueued = 0, ie = z.empty.fire, z.empty.fire = function() {
                    z.unqueued || ie()
                }), z.unqueued++, me.always(function() {
                    me.always(function() {
                        z.unqueued--, u.queue(l, "fx").length || z.empty.fire()
                    })
                }));
                for (k in p)
                    if (B = p[k], pp.test(B)) {
                        if (delete p[k], F = F || B === "toggle", B === (ut ? "hide" : "show"))
                            if (B === "show" && Je && Je[k] !== void 0) ut = !0;
                            else continue;
                        we[k] = Je && Je[k] || u.style(l, k)
                    } if (ae = !u.isEmptyObject(p), !(!ae && u.isEmptyObject(we))) {
                    Be && l.nodeType === 1 && (b.overflow = [et.overflow, et.overflowX, et.overflowY], de = Je && Je.display, de == null && (de = xe.get(l, "display")), ye = u.css(l, "display"), ye === "none" && (de ? ye = de : (Ve([l], !0), de = l.style.display || de, ye = u.css(l, "display"), Ve([l]))), (ye === "inline" || ye === "inline-block" && de != null) && u.css(l, "float") === "none" && (ae || (me.done(function() {
                        et.display = de
                    }), de == null && (ye = et.display, de = ye === "none" ? "" : ye)), et.display = "inline-block")), b.overflow && (et.overflow = "hidden", me.always(function() {
                        et.overflow = b.overflow[0], et.overflowX = b.overflow[1], et.overflowY = b.overflow[2]
                    })), ae = !1;
                    for (k in we) ae || (Je ? "hidden" in Je && (ut = Je.hidden) : Je = xe.access(l, "fxshow", {
                        display: de
                    }), F && (Je.hidden = !ut), ut && Ve([l], !0), me.done(function() {
                        ut || Ve([l]), xe.remove(l, "fxshow");
                        for (k in we) u.style(l, k, we[k])
                    })), ae = KV(ut ? Je[k] : 0, k, me), k in Je || (Je[k] = ae.start, ut && (ae.end = ae.start, ae.start = 0))
                }
            }

            function WV(l, p) {
                var b, k, B, F, z;
                for (b in l)
                    if (k = _(b), B = p[k], F = l[b], Array.isArray(F) && (B = F[1], F = l[b] = F[0]), b !== k && (l[k] = F, delete l[b]), z = u.cssHooks[k], z && "expand" in z) {
                        F = z.expand(F), delete l[k];
                        for (b in F) b in l || (l[b] = F[b], p[b] = B)
                    } else p[k] = B
            }

            function Nn(l, p, b) {
                var k, B, F = 0,
                    z = Nn.prefilters.length,
                    ie = u.Deferred().always(function() {
                        delete ae.elem
                    }),
                    ae = function() {
                        if (B) return !1;
                        for (var Be = nn || Ya(), me = Math.max(0, de.startTime + de.duration - Be), we = me / de.duration || 0, et = 1 - we, ut = 0, Je = de.tweens.length; ut < Je; ut++) de.tweens[ut].run(et);
                        return ie.notifyWith(l, [de, et, me]), et < 1 && Je ? me : (Je || ie.notifyWith(l, [de, 1, 0]), ie.resolveWith(l, [de]), !1)
                    },
                    de = ie.promise({
                        elem: l,
                        props: u.extend({}, p),
                        opts: u.extend(!0, {
                            specialEasing: {},
                            easing: u.easing._default
                        }, b),
                        originalProperties: p,
                        originalOptions: b,
                        startTime: nn || Ya(),
                        duration: b.duration,
                        tweens: [],
                        createTween: function(Be, me) {
                            var we = u.Tween(l, de.opts, Be, me, de.opts.specialEasing[Be] || de.opts.easing);
                            return de.tweens.push(we), we
                        },
                        stop: function(Be) {
                            var me = 0,
                                we = Be ? de.tweens.length : 0;
                            if (B) return this;
                            for (B = !0; me < we; me++) de.tweens[me].run(1);
                            return Be ? (ie.notifyWith(l, [de, 1, 0]), ie.resolveWith(l, [de, Be])) : ie.rejectWith(l, [de, Be]), this
                        }
                    }),
                    ye = de.props;
                for (WV(ye, de.opts.specialEasing); F < z; F++)
                    if (k = Nn.prefilters[F].call(de, l, ye, de.opts), k) return C(k.stop) && (u._queueHooks(de.elem, de.opts.queue).stop = k.stop.bind(k)), k;
                return u.map(ye, KV, de), C(de.opts.start) && de.opts.start.call(l, de), de.progress(de.opts.progress).done(de.opts.done, de.opts.complete).fail(de.opts.fail).always(de.opts.always), u.fx.timer(u.extend(ae, {
                    elem: l,
                    anim: de,
                    queue: de.opts.queue
                })), de
            }
            u.Animation = u.extend(Nn, {
                    tweeners: {
                        "*": [function(l, p) {
                            var b = this.createTween(l, p);
                            return Z(b.elem, l, Dt.exec(p), b), b
                        }]
                    },
                    tweener: function(l, p) {
                        C(l) ? (p = l, l = ["*"]) : l = l.match(Le);
                        for (var b, k = 0, B = l.length; k < B; k++) b = l[k], Nn.tweeners[b] = Nn.tweeners[b] || [], Nn.tweeners[b].unshift(p)
                    },
                    prefilters: [up],
                    prefilter: function(l, p) {
                        p ? Nn.prefilters.unshift(l) : Nn.prefilters.push(l)
                    }
                }), u.speed = function(l, p, b) {
                    var k = l && typeof l == "object" ? u.extend({}, l) : {
                        complete: b || !b && p || C(l) && l,
                        duration: l,
                        easing: b && p || p && !C(p) && p
                    };
                    return u.fx.off ? k.duration = 0 : typeof k.duration != "number" && (k.duration in u.fx.speeds ? k.duration = u.fx.speeds[k.duration] : k.duration = u.fx.speeds._default), (k.queue == null || k.queue === !0) && (k.queue = "fx"), k.old = k.complete, k.complete = function() {
                        C(k.old) && k.old.call(this), k.queue && u.dequeue(this, k.queue)
                    }, k
                }, u.fn.extend({
                    fadeTo: function(l, p, b, k) {
                        return this.filter(ee).css("opacity", 0).show().end().animate({
                            opacity: p
                        }, l, b, k)
                    },
                    animate: function(l, p, b, k) {
                        var B = u.isEmptyObject(l),
                            F = u.speed(p, b, k),
                            z = function() {
                                var ie = Nn(this, u.extend({}, l), F);
                                (B || xe.get(this, "finish")) && ie.stop(!0)
                            };
                        return z.finish = z, B || F.queue === !1 ? this.each(z) : this.queue(F.queue, z)
                    },
                    stop: function(l, p, b) {
                        var k = function(B) {
                            var F = B.stop;
                            delete B.stop, F(b)
                        };
                        return typeof l != "string" && (b = p, p = l, l = void 0), p && this.queue(l || "fx", []), this.each(function() {
                            var B = !0,
                                F = l != null && l + "queueHooks",
                                z = u.timers,
                                ie = xe.get(this);
                            if (F) ie[F] && ie[F].stop && k(ie[F]);
                            else
                                for (F in ie) ie[F] && ie[F].stop && hp.test(F) && k(ie[F]);
                            for (F = z.length; F--;) z[F].elem === this && (l == null || z[F].queue === l) && (z[F].anim.stop(b), B = !1, z.splice(F, 1));
                            (B || !b) && u.dequeue(this, l)
                        })
                    },
                    finish: function(l) {
                        return l !== !1 && (l = l || "fx"), this.each(function() {
                            var p, b = xe.get(this),
                                k = b[l + "queue"],
                                B = b[l + "queueHooks"],
                                F = u.timers,
                                z = k ? k.length : 0;
                            for (b.finish = !0, u.queue(this, l, []), B && B.stop && B.stop.call(this, !0), p = F.length; p--;) F[p].elem === this && F[p].queue === l && (F[p].anim.stop(!0), F.splice(p, 1));
                            for (p = 0; p < z; p++) k[p] && k[p].finish && k[p].finish.call(this);
                            delete b.finish
                        })
                    }
                }), u.each(["toggle", "show", "hide"], function(l, p) {
                    var b = u.fn[p];
                    u.fn[p] = function(k, B, F) {
                        return k == null || typeof k == "boolean" ? b.apply(this, arguments) : this.animate(Do(p, !0), k, B, F)
                    }
                }), u.each({
                    slideDown: Do("show"),
                    slideUp: Do("hide"),
                    slideToggle: Do("toggle"),
                    fadeIn: {
                        opacity: "show"
                    },
                    fadeOut: {
                        opacity: "hide"
                    },
                    fadeToggle: {
                        opacity: "toggle"
                    }
                }, function(l, p) {
                    u.fn[l] = function(b, k, B) {
                        return this.animate(p, b, k, B)
                    }
                }), u.timers = [], u.fx.tick = function() {
                    var l, p = 0,
                        b = u.timers;
                    for (nn = Date.now(); p < b.length; p++) l = b[p], !l() && b[p] === l && b.splice(p--, 1);
                    b.length || u.fx.stop(), nn = void 0
                }, u.fx.timer = function(l) {
                    u.timers.push(l), u.fx.start()
                }, u.fx.interval = 13, u.fx.start = function() {
                    Ro || (Ro = !0, Xa())
                }, u.fx.stop = function() {
                    Ro = null
                }, u.fx.speeds = {
                    slow: 600,
                    fast: 200,
                    _default: 400
                }, u.fn.delay = function(l, p) {
                    return l = u.fx && u.fx.speeds[l] || l, p = p || "fx", this.queue(p, function(b, k) {
                        var B = e.setTimeout(b, l);
                        k.stop = function() {
                            e.clearTimeout(B)
                        }
                    })
                },
                function() {
                    var l = w.createElement("input"),
                        p = w.createElement("select"),
                        b = p.appendChild(w.createElement("option"));
                    l.type = "checkbox", S.checkOn = l.value !== "", S.optSelected = b.selected, l = w.createElement("input"), l.value = "t", l.type = "radio", S.radioValue = l.value === "t"
                }();
            var Ka, zs = u.expr.attrHandle;
            u.fn.extend({
                attr: function(l, p) {
                    return R(this, u.attr, l, p, arguments.length > 1)
                },
                removeAttr: function(l) {
                    return this.each(function() {
                        u.removeAttr(this, l)
                    })
                }
            }), u.extend({
                attr: function(l, p, b) {
                    var k, B, F = l.nodeType;
                    if (!(F === 3 || F === 8 || F === 2)) {
                        if (typeof l.getAttribute > "u") return u.prop(l, p, b);
                        if ((F !== 1 || !u.isXMLDoc(l)) && (B = u.attrHooks[p.toLowerCase()] || (u.expr.match.bool.test(p) ? Ka : void 0)), b !== void 0) {
                            if (b === null) {
                                u.removeAttr(l, p);
                                return
                            }
                            return B && "set" in B && (k = B.set(l, b, p)) !== void 0 ? k : (l.setAttribute(p, b + ""), b)
                        }
                        return B && "get" in B && (k = B.get(l, p)) !== null ? k : (k = u.find.attr(l, p), k == null ? void 0 : k)
                    }
                },
                attrHooks: {
                    type: {
                        set: function(l, p) {
                            if (!S.radioValue && p === "radio" && oe(l, "input")) {
                                var b = l.value;
                                return l.setAttribute("type", p), b && (l.value = b), p
                            }
                        }
                    }
                },
                removeAttr: function(l, p) {
                    var b, k = 0,
                        B = p && p.match(Le);
                    if (B && l.nodeType === 1)
                        for (; b = B[k++];) l.removeAttribute(b)
                }
            }), Ka = {
                set: function(l, p, b) {
                    return p === !1 ? u.removeAttr(l, b) : l.setAttribute(b, b), b
                }
            }, u.each(u.expr.match.bool.source.match(/\w+/g), function(l, p) {
                var b = zs[p] || u.find.attr;
                zs[p] = function(k, B, F) {
                    var z, ie, ae = B.toLowerCase();
                    return F || (ie = zs[ae], zs[ae] = z, z = b(k, B, F) != null ? ae : null, zs[ae] = ie), z
                }
            });
            var mp = /^(?:input|select|textarea|button)$/i,
                fp = /^(?:a|area)$/i;
            u.fn.extend({
                prop: function(l, p) {
                    return R(this, u.prop, l, p, arguments.length > 1)
                },
                removeProp: function(l) {
                    return this.each(function() {
                        delete this[u.propFix[l] || l]
                    })
                }
            }), u.extend({
                prop: function(l, p, b) {
                    var k, B, F = l.nodeType;
                    if (!(F === 3 || F === 8 || F === 2)) return (F !== 1 || !u.isXMLDoc(l)) && (p = u.propFix[p] || p, B = u.propHooks[p]), b !== void 0 ? B && "set" in B && (k = B.set(l, b, p)) !== void 0 ? k : l[p] = b : B && "get" in B && (k = B.get(l, p)) !== null ? k : l[p]
                },
                propHooks: {
                    tabIndex: {
                        get: function(l) {
                            var p = u.find.attr(l, "tabindex");
                            return p ? parseInt(p, 10) : mp.test(l.nodeName) || fp.test(l.nodeName) && l.href ? 0 : -1
                        }
                    }
                },
                propFix: {
                    for: "htmlFor",
                    class: "className"
                }
            }), S.optSelected || (u.propHooks.selected = {
                get: function(l) {
                    var p = l.parentNode;
                    return p && p.parentNode && p.parentNode.selectedIndex, null
                },
                set: function(l) {
                    var p = l.parentNode;
                    p && (p.selectedIndex, p.parentNode && p.parentNode.selectedIndex)
                }
            }), u.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
                u.propFix[this.toLowerCase()] = this
            });

            function Qi(l) {
                var p = l.match(Le) || [];
                return p.join(" ")
            }

            function zi(l) {
                return l.getAttribute && l.getAttribute("class") || ""
            }

            function Wa(l) {
                return Array.isArray(l) ? l : typeof l == "string" ? l.match(Le) || [] : []
            }
            u.fn.extend({
                addClass: function(l) {
                    var p, b, k, B, F, z, ie, ae = 0;
                    if (C(l)) return this.each(function(de) {
                        u(this).addClass(l.call(this, de, zi(this)))
                    });
                    if (p = Wa(l), p.length) {
                        for (; b = this[ae++];)
                            if (B = zi(b), k = b.nodeType === 1 && " " + Qi(B) + " ", k) {
                                for (z = 0; F = p[z++];) k.indexOf(" " + F + " ") < 0 && (k += F + " ");
                                ie = Qi(k), B !== ie && b.setAttribute("class", ie)
                            }
                    }
                    return this
                },
                removeClass: function(l) {
                    var p, b, k, B, F, z, ie, ae = 0;
                    if (C(l)) return this.each(function(de) {
                        u(this).removeClass(l.call(this, de, zi(this)))
                    });
                    if (!arguments.length) return this.attr("class", "");
                    if (p = Wa(l), p.length) {
                        for (; b = this[ae++];)
                            if (B = zi(b), k = b.nodeType === 1 && " " + Qi(B) + " ", k) {
                                for (z = 0; F = p[z++];)
                                    for (; k.indexOf(" " + F + " ") > -1;) k = k.replace(" " + F + " ", " ");
                                ie = Qi(k), B !== ie && b.setAttribute("class", ie)
                            }
                    }
                    return this
                },
                toggleClass: function(l, p) {
                    var b = typeof l,
                        k = b === "string" || Array.isArray(l);
                    return typeof p == "boolean" && k ? p ? this.addClass(l) : this.removeClass(l) : C(l) ? this.each(function(B) {
                        u(this).toggleClass(l.call(this, B, zi(this), p), p)
                    }) : this.each(function() {
                        var B, F, z, ie;
                        if (k)
                            for (F = 0, z = u(this), ie = Wa(l); B = ie[F++];) z.hasClass(B) ? z.removeClass(B) : z.addClass(B);
                        else(l === void 0 || b === "boolean") && (B = zi(this), B && xe.set(this, "__className__", B), this.setAttribute && this.setAttribute("class", B || l === !1 ? "" : xe.get(this, "__className__") || ""))
                    })
                },
                hasClass: function(l) {
                    var p, b, k = 0;
                    for (p = " " + l + " "; b = this[k++];)
                        if (b.nodeType === 1 && (" " + Qi(zi(b)) + " ").indexOf(p) > -1) return !0;
                    return !1
                }
            });
            var qp = /\r/g;
            u.fn.extend({
                val: function(l) {
                    var p, b, k, B = this[0];
                    return arguments.length ? (k = C(l), this.each(function(F) {
                        var z;
                        this.nodeType === 1 && (k ? z = l.call(this, F, u(this).val()) : z = l, z == null ? z = "" : typeof z == "number" ? z += "" : Array.isArray(z) && (z = u.map(z, function(ie) {
                            return ie == null ? "" : ie + ""
                        })), p = u.valHooks[this.type] || u.valHooks[this.nodeName.toLowerCase()], (!p || !("set" in p) || p.set(this, z, "value") === void 0) && (this.value = z))
                    })) : B ? (p = u.valHooks[B.type] || u.valHooks[B.nodeName.toLowerCase()], p && "get" in p && (b = p.get(B, "value")) !== void 0 ? b : (b = B.value, typeof b == "string" ? b.replace(qp, "") : b == null ? "" : b)) : void 0
                }
            }), u.extend({
                valHooks: {
                    option: {
                        get: function(l) {
                            var p = u.find.attr(l, "value");
                            return p != null ? p : Qi(u.text(l))
                        }
                    },
                    select: {
                        get: function(l) {
                            var p, b, k, B = l.options,
                                F = l.selectedIndex,
                                z = l.type === "select-one",
                                ie = z ? null : [],
                                ae = z ? F + 1 : B.length;
                            for (F < 0 ? k = ae : k = z ? F : 0; k < ae; k++)
                                if (b = B[k], (b.selected || k === F) && !b.disabled && (!b.parentNode.disabled || !oe(b.parentNode, "optgroup"))) {
                                    if (p = u(b).val(), z) return p;
                                    ie.push(p)
                                } return ie
                        },
                        set: function(l, p) {
                            for (var b, k, B = l.options, F = u.makeArray(p), z = B.length; z--;) k = B[z], (k.selected = u.inArray(u.valHooks.option.get(k), F) > -1) && (b = !0);
                            return b || (l.selectedIndex = -1), F
                        }
                    }
                }
            }), u.each(["radio", "checkbox"], function() {
                u.valHooks[this] = {
                    set: function(l, p) {
                        if (Array.isArray(p)) return l.checked = u.inArray(u(l).val(), p) > -1
                    }
                }, S.checkOn || (u.valHooks[this].get = function(l) {
                    return l.getAttribute("value") === null ? "on" : l.value
                })
            }), S.focusin = "onfocusin" in e;
            var Ja = /^(?:focusinfocus|focusoutblur)$/,
                Hi = function(l) {
                    l.stopPropagation()
                };
            u.extend(u.event, {
                trigger: function(l, p, b, k) {
                    var B, F, z, ie, ae, de, ye, Be, me = [b || w],
                        we = q.call(l, "type") ? l.type : l,
                        et = q.call(l, "namespace") ? l.namespace.split(".") : [];
                    if (F = Be = z = b = b || w, !(b.nodeType === 3 || b.nodeType === 8) && !Ja.test(we + u.event.triggered) && (we.indexOf(".") > -1 && (et = we.split("."), we = et.shift(), et.sort()), ae = we.indexOf(":") < 0 && "on" + we, l = l[u.expando] ? l : new u.Event(we, typeof l == "object" && l), l.isTrigger = k ? 2 : 3, l.namespace = et.join("."), l.rnamespace = l.namespace ? new RegExp("(^|\\.)" + et.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, l.result = void 0, l.target || (l.target = b), p = p == null ? [l] : u.makeArray(p, [l]), ye = u.event.special[we] || {}, !(!k && ye.trigger && ye.trigger.apply(b, p) === !1))) {
                        if (!k && !ye.noBubble && !h(b)) {
                            for (ie = ye.delegateType || we, Ja.test(ie + we) || (F = F.parentNode); F; F = F.parentNode) me.push(F), z = F;
                            z === (b.ownerDocument || w) && me.push(z.defaultView || z.parentWindow || e)
                        }
                        for (B = 0;
                            (F = me[B++]) && !l.isPropagationStopped();) Be = F, l.type = B > 1 ? ie : ye.bindType || we, de = (xe.get(F, "events") || Object.create(null))[l.type] && xe.get(F, "handle"), de && de.apply(F, p), de = ae && F[ae], de && de.apply && he(F) && (l.result = de.apply(F, p), l.result === !1 && l.preventDefault());
                        return l.type = we, !k && !l.isDefaultPrevented() && (!ye._default || ye._default.apply(me.pop(), p) === !1) && he(b) && ae && C(b[we]) && !h(b) && (z = b[ae], z && (b[ae] = null), u.event.triggered = we, l.isPropagationStopped() && Be.addEventListener(we, Hi), b[we](), l.isPropagationStopped() && Be.removeEventListener(we, Hi), u.event.triggered = void 0, z && (b[ae] = z)), l.result
                    }
                },
                simulate: function(l, p, b) {
                    var k = u.extend(new u.Event, b, {
                        type: l,
                        isSimulated: !0
                    });
                    u.event.trigger(k, null, p)
                }
            }), u.fn.extend({
                trigger: function(l, p) {
                    return this.each(function() {
                        u.event.trigger(l, p, this)
                    })
                },
                triggerHandler: function(l, p) {
                    var b = this[0];
                    if (b) return u.event.trigger(l, p, b, !0)
                }
            }), S.focusin || u.each({
                focus: "focusin",
                blur: "focusout"
            }, function(l, p) {
                var b = function(k) {
                    u.event.simulate(p, k.target, u.event.fix(k))
                };
                u.event.special[p] = {
                    setup: function() {
                        var k = this.ownerDocument || this.document || this,
                            B = xe.access(k, p);
                        B || k.addEventListener(l, b, !0), xe.access(k, p, (B || 0) + 1)
                    },
                    teardown: function() {
                        var k = this.ownerDocument || this.document || this,
                            B = xe.access(k, p) - 1;
                        B ? xe.access(k, p, B) : (k.removeEventListener(l, b, !0), xe.remove(k, p))
                    }
                }
            });
            var Hs = e.location,
                Za = {
                    guid: Date.now()
                },
                So = /\?/;
            u.parseXML = function(l) {
                var p, b;
                if (!l || typeof l != "string") return null;
                try {
                    p = new e.DOMParser().parseFromString(l, "text/xml")
                } catch {}
                return b = p && p.getElementsByTagName("parsererror")[0], (!p || b) && u.error("Invalid XML: " + (b ? u.map(b.childNodes, function(k) {
                    return k.textContent
                }).join(`
`) : l)), p
            };
            var gp = /\[\]$/,
                JV = /\r?\n/g,
                yp = /^(?:submit|button|image|reset|file)$/i,
                bp = /^(?:input|select|textarea|keygen)/i;

            function _a(l, p, b, k) {
                var B;
                if (Array.isArray(p)) u.each(p, function(F, z) {
                    b || gp.test(l) ? k(l, z) : _a(l + "[" + (typeof z == "object" && z != null ? F : "") + "]", z, b, k)
                });
                else if (!b && O(p) === "object")
                    for (B in p) _a(l + "[" + B + "]", p[B], b, k);
                else k(l, p)
            }
            u.param = function(l, p) {
                var b, k = [],
                    B = function(F, z) {
                        var ie = C(z) ? z() : z;
                        k[k.length] = encodeURIComponent(F) + "=" + encodeURIComponent(ie == null ? "" : ie)
                    };
                if (l == null) return "";
                if (Array.isArray(l) || l.jquery && !u.isPlainObject(l)) u.each(l, function() {
                    B(this.name, this.value)
                });
                else
                    for (b in l) _a(b, l[b], p, B);
                return k.join("&")
            }, u.fn.extend({
                serialize: function() {
                    return u.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        var l = u.prop(this, "elements");
                        return l ? u.makeArray(l) : this
                    }).filter(function() {
                        var l = this.type;
                        return this.name && !u(this).is(":disabled") && bp.test(this.nodeName) && !yp.test(l) && (this.checked || !Re.test(l))
                    }).map(function(l, p) {
                        var b = u(this).val();
                        return b == null ? null : Array.isArray(b) ? u.map(b, function(k) {
                            return {
                                name: p.name,
                                value: k.replace(JV, `\r
`)
                            }
                        }) : {
                            name: p.name,
                            value: b.replace(JV, `\r
`)
                        }
                    }).get()
                }
            });
            var vp = /%20/g,
                wp = /#.*$/,
                xp = /([?&])_=[^&]*/,
                Ni = /^(.*?):[ \t]*([^\r\n]*)$/mg,
                ZV = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                kp = /^(?:GET|HEAD)$/,
                Cp = /^\/\//,
                _V = {},
                $a = {},
                $V = "*/".concat("*"),
                er = w.createElement("a");
            er.href = Hs.href;

            function el(l) {
                return function(p, b) {
                    typeof p != "string" && (b = p, p = "*");
                    var k, B = 0,
                        F = p.toLowerCase().match(Le) || [];
                    if (C(b))
                        for (; k = F[B++];) k[0] === "+" ? (k = k.slice(1) || "*", (l[k] = l[k] || []).unshift(b)) : (l[k] = l[k] || []).push(b)
                }
            }

            function tl(l, p, b, k) {
                var B = {},
                    F = l === $a;

                function z(ie) {
                    var ae;
                    return B[ie] = !0, u.each(l[ie] || [], function(de, ye) {
                        var Be = ye(p, b, k);
                        if (typeof Be == "string" && !F && !B[Be]) return p.dataTypes.unshift(Be), z(Be), !1;
                        if (F) return !(ae = Be)
                    }), ae
                }
                return z(p.dataTypes[0]) || !B["*"] && z("*")
            }

            function tr(l, p) {
                var b, k, B = u.ajaxSettings.flatOptions || {};
                for (b in p) p[b] !== void 0 && ((B[b] ? l : k || (k = {}))[b] = p[b]);
                return k && u.extend(!0, l, k), l
            }

            function Rp(l, p, b) {
                for (var k, B, F, z, ie = l.contents, ae = l.dataTypes; ae[0] === "*";) ae.shift(), k === void 0 && (k = l.mimeType || p.getResponseHeader("Content-Type"));
                if (k) {
                    for (B in ie)
                        if (ie[B] && ie[B].test(k)) {
                            ae.unshift(B);
                            break
                        }
                }
                if (ae[0] in b) F = ae[0];
                else {
                    for (B in b) {
                        if (!ae[0] || l.converters[B + " " + ae[0]]) {
                            F = B;
                            break
                        }
                        z || (z = B)
                    }
                    F = F || z
                }
                if (F) return F !== ae[0] && ae.unshift(F), b[F]
            }

            function Dp(l, p, b, k) {
                var B, F, z, ie, ae, de = {},
                    ye = l.dataTypes.slice();
                if (ye[1])
                    for (z in l.converters) de[z.toLowerCase()] = l.converters[z];
                for (F = ye.shift(); F;)
                    if (l.responseFields[F] && (b[l.responseFields[F]] = p), !ae && k && l.dataFilter && (p = l.dataFilter(p, l.dataType)), ae = F, F = ye.shift(), F) {
                        if (F === "*") F = ae;
                        else if (ae !== "*" && ae !== F) {
                            if (z = de[ae + " " + F] || de["* " + F], !z) {
                                for (B in de)
                                    if (ie = B.split(" "), ie[1] === F && (z = de[ae + " " + ie[0]] || de["* " + ie[0]], z)) {
                                        z === !0 ? z = de[B] : de[B] !== !0 && (F = ie[0], ye.unshift(ie[1]));
                                        break
                                    }
                            }
                            if (z !== !0)
                                if (z && l.throws) p = z(p);
                                else try {
                                    p = z(p)
                                } catch (Be) {
                                    return {
                                        state: "parsererror",
                                        error: z ? Be : "No conversion from " + ae + " to " + F
                                    }
                                }
                        }
                    } return {
                    state: "success",
                    data: p
                }
            }
            u.extend({
                active: 0,
                lastModified: {},
                etag: {},
                ajaxSettings: {
                    url: Hs.href,
                    type: "GET",
                    isLocal: ZV.test(Hs.protocol),
                    global: !0,
                    processData: !0,
                    async: !0,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    accepts: {
                        "*": $V,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },
                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },
                    converters: {
                        "* text": String,
                        "text html": !0,
                        "text json": JSON.parse,
                        "text xml": u.parseXML
                    },
                    flatOptions: {
                        url: !0,
                        context: !0
                    }
                },
                ajaxSetup: function(l, p) {
                    return p ? tr(tr(l, u.ajaxSettings), p) : tr(u.ajaxSettings, l)
                },
                ajaxPrefilter: el(_V),
                ajaxTransport: el($a),
                ajax: function(l, p) {
                    typeof l == "object" && (p = l, l = void 0), p = p || {};
                    var b, k, B, F, z, ie, ae, de, ye, Be, me = u.ajaxSetup({}, p),
                        we = me.context || me,
                        et = me.context && (we.nodeType || we.jquery) ? u(we) : u.event,
                        ut = u.Deferred(),
                        Je = u.Callbacks("once memory"),
                        sn = me.statusCode || {},
                        Zt = {},
                        Sn = {},
                        Mt = "canceled",
                        At = {
                            readyState: 0,
                            getResponseHeader: function(gt) {
                                var Xt;
                                if (ae) {
                                    if (!F)
                                        for (F = {}; Xt = Ni.exec(B);) F[Xt[1].toLowerCase() + " "] = (F[Xt[1].toLowerCase() + " "] || []).concat(Xt[2]);
                                    Xt = F[gt.toLowerCase() + " "]
                                }
                                return Xt == null ? null : Xt.join(", ")
                            },
                            getAllResponseHeaders: function() {
                                return ae ? B : null
                            },
                            setRequestHeader: function(gt, Xt) {
                                return ae == null && (gt = Sn[gt.toLowerCase()] = Sn[gt.toLowerCase()] || gt, Zt[gt] = Xt), this
                            },
                            overrideMimeType: function(gt) {
                                return ae == null && (me.mimeType = gt), this
                            },
                            statusCode: function(gt) {
                                var Xt;
                                if (gt)
                                    if (ae) At.always(gt[At.status]);
                                    else
                                        for (Xt in gt) sn[Xt] = [sn[Xt], gt[Xt]];
                                return this
                            },
                            abort: function(gt) {
                                var Xt = gt || Mt;
                                return b && b.abort(Xt), vn(0, Xt), this
                            }
                        };
                    if (ut.promise(At), me.url = ((l || me.url || Hs.href) + "").replace(Cp, Hs.protocol + "//"), me.type = p.method || p.type || me.method || me.type, me.dataTypes = (me.dataType || "*").toLowerCase().match(Le) || [""], me.crossDomain == null) {
                        ie = w.createElement("a");
                        try {
                            ie.href = me.url, ie.href = ie.href, me.crossDomain = er.protocol + "//" + er.host != ie.protocol + "//" + ie.host
                        } catch {
                            me.crossDomain = !0
                        }
                    }
                    if (me.data && me.processData && typeof me.data != "string" && (me.data = u.param(me.data, me.traditional)), tl(_V, me, p, At), ae) return At;
                    de = u.event && me.global, de && u.active++ === 0 && u.event.trigger("ajaxStart"), me.type = me.type.toUpperCase(), me.hasContent = !kp.test(me.type), k = me.url.replace(wp, ""), me.hasContent ? me.data && me.processData && (me.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (me.data = me.data.replace(vp, "+")) : (Be = me.url.slice(k.length), me.data && (me.processData || typeof me.data == "string") && (k += (So.test(k) ? "&" : "?") + me.data, delete me.data), me.cache === !1 && (k = k.replace(xp, "$1"), Be = (So.test(k) ? "&" : "?") + "_=" + Za.guid++ + Be), me.url = k + Be), me.ifModified && (u.lastModified[k] && At.setRequestHeader("If-Modified-Since", u.lastModified[k]), u.etag[k] && At.setRequestHeader("If-None-Match", u.etag[k])), (me.data && me.hasContent && me.contentType !== !1 || p.contentType) && At.setRequestHeader("Content-Type", me.contentType), At.setRequestHeader("Accept", me.dataTypes[0] && me.accepts[me.dataTypes[0]] ? me.accepts[me.dataTypes[0]] + (me.dataTypes[0] !== "*" ? ", " + $V + "; q=0.01" : "") : me.accepts["*"]);
                    for (ye in me.headers) At.setRequestHeader(ye, me.headers[ye]);
                    if (me.beforeSend && (me.beforeSend.call(we, At, me) === !1 || ae)) return At.abort();
                    if (Mt = "abort", Je.add(me.complete), At.done(me.success), At.fail(me.error), b = tl($a, me, p, At), !b) vn(-1, "No Transport");
                    else {
                        if (At.readyState = 1, de && et.trigger("ajaxSend", [At, me]), ae) return At;
                        me.async && me.timeout > 0 && (z = e.setTimeout(function() {
                            At.abort("timeout")
                        }, me.timeout));
                        try {
                            ae = !1, b.send(Zt, vn)
                        } catch (gt) {
                            if (ae) throw gt;
                            vn(-1, gt)
                        }
                    }

                    function vn(gt, Xt, Gs, To) {
                        var Tn, Gi, Xi, wn, fi, In = Xt;
                        ae || (ae = !0, z && e.clearTimeout(z), b = void 0, B = To || "", At.readyState = gt > 0 ? 4 : 0, Tn = gt >= 200 && gt < 300 || gt === 304, Gs && (wn = Rp(me, At, Gs)), !Tn && u.inArray("script", me.dataTypes) > -1 && u.inArray("json", me.dataTypes) < 0 && (me.converters["text script"] = function() {}), wn = Dp(me, wn, At, Tn), Tn ? (me.ifModified && (fi = At.getResponseHeader("Last-Modified"), fi && (u.lastModified[k] = fi), fi = At.getResponseHeader("etag"), fi && (u.etag[k] = fi)), gt === 204 || me.type === "HEAD" ? In = "nocontent" : gt === 304 ? In = "notmodified" : (In = wn.state, Gi = wn.data, Xi = wn.error, Tn = !Xi)) : (Xi = In, (gt || !In) && (In = "error", gt < 0 && (gt = 0))), At.status = gt, At.statusText = (Xt || In) + "", Tn ? ut.resolveWith(we, [Gi, In, At]) : ut.rejectWith(we, [At, In, Xi]), At.statusCode(sn), sn = void 0, de && et.trigger(Tn ? "ajaxSuccess" : "ajaxError", [At, me, Tn ? Gi : Xi]), Je.fireWith(we, [At, In]), de && (et.trigger("ajaxComplete", [At, me]), --u.active || u.event.trigger("ajaxStop")))
                    }
                    return At
                },
                getJSON: function(l, p, b) {
                    return u.get(l, p, b, "json")
                },
                getScript: function(l, p) {
                    return u.get(l, void 0, p, "script")
                }
            }), u.each(["get", "post"], function(l, p) {
                u[p] = function(b, k, B, F) {
                    return C(k) && (F = F || B, B = k, k = void 0), u.ajax(u.extend({
                        url: b,
                        type: p,
                        dataType: F,
                        data: k,
                        success: B
                    }, u.isPlainObject(b) && b))
                }
            }), u.ajaxPrefilter(function(l) {
                var p;
                for (p in l.headers) p.toLowerCase() === "content-type" && (l.contentType = l.headers[p] || "")
            }), u._evalUrl = function(l, p, b) {
                return u.ajax({
                    url: l,
                    type: "GET",
                    dataType: "script",
                    cache: !0,
                    async: !1,
                    global: !1,
                    converters: {
                        "text script": function() {}
                    },
                    dataFilter: function(k) {
                        u.globalEval(k, p, b)
                    }
                })
            }, u.fn.extend({
                wrapAll: function(l) {
                    var p;
                    return this[0] && (C(l) && (l = l.call(this[0])), p = u(l, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && p.insertBefore(this[0]), p.map(function() {
                        for (var b = this; b.firstElementChild;) b = b.firstElementChild;
                        return b
                    }).append(this)), this
                },
                wrapInner: function(l) {
                    return C(l) ? this.each(function(p) {
                        u(this).wrapInner(l.call(this, p))
                    }) : this.each(function() {
                        var p = u(this),
                            b = p.contents();
                        b.length ? b.wrapAll(l) : p.append(l)
                    })
                },
                wrap: function(l) {
                    var p = C(l);
                    return this.each(function(b) {
                        u(this).wrapAll(p ? l.call(this, b) : l)
                    })
                },
                unwrap: function(l) {
                    return this.parent(l).not("body").each(function() {
                        u(this).replaceWith(this.childNodes)
                    }), this
                }
            }), u.expr.pseudos.hidden = function(l) {
                return !u.expr.pseudos.visible(l)
            }, u.expr.pseudos.visible = function(l) {
                return !!(l.offsetWidth || l.offsetHeight || l.getClientRects().length)
            }, u.ajaxSettings.xhr = function() {
                try {
                    return new e.XMLHttpRequest
                } catch {}
            };
            var Sp = {
                    0: 200,
                    1223: 204
                },
                Ns = u.ajaxSettings.xhr();
            S.cors = !!Ns && "withCredentials" in Ns, S.ajax = Ns = !!Ns, u.ajaxTransport(function(l) {
                var p, b;
                if (S.cors || Ns && !l.crossDomain) return {
                    send: function(k, B) {
                        var F, z = l.xhr();
                        if (z.open(l.type, l.url, l.async, l.username, l.password), l.xhrFields)
                            for (F in l.xhrFields) z[F] = l.xhrFields[F];
                        l.mimeType && z.overrideMimeType && z.overrideMimeType(l.mimeType), !l.crossDomain && !k["X-Requested-With"] && (k["X-Requested-With"] = "XMLHttpRequest");
                        for (F in k) z.setRequestHeader(F, k[F]);
                        p = function(ie) {
                            return function() {
                                p && (p = b = z.onload = z.onerror = z.onabort = z.ontimeout = z.onreadystatechange = null, ie === "abort" ? z.abort() : ie === "error" ? typeof z.status != "number" ? B(0, "error") : B(z.status, z.statusText) : B(Sp[z.status] || z.status, z.statusText, (z.responseType || "text") !== "text" || typeof z.responseText != "string" ? {
                                    binary: z.response
                                } : {
                                    text: z.responseText
                                }, z.getAllResponseHeaders()))
                            }
                        }, z.onload = p(), b = z.onerror = z.ontimeout = p("error"), z.onabort !== void 0 ? z.onabort = b : z.onreadystatechange = function() {
                            z.readyState === 4 && e.setTimeout(function() {
                                p && b()
                            })
                        }, p = p("abort");
                        try {
                            z.send(l.hasContent && l.data || null)
                        } catch (ie) {
                            if (p) throw ie
                        }
                    },
                    abort: function() {
                        p && p()
                    }
                }
            }), u.ajaxPrefilter(function(l) {
                l.crossDomain && (l.contents.script = !1)
            }), u.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function(l) {
                        return u.globalEval(l), l
                    }
                }
            }), u.ajaxPrefilter("script", function(l) {
                l.cache === void 0 && (l.cache = !1), l.crossDomain && (l.type = "GET")
            }), u.ajaxTransport("script", function(l) {
                if (l.crossDomain || l.scriptAttrs) {
                    var p, b;
                    return {
                        send: function(k, B) {
                            p = u("<script>").attr(l.scriptAttrs || {}).prop({
                                charset: l.scriptCharset,
                                src: l.url
                            }).on("load error", b = function(F) {
                                p.remove(), b = null, F && B(F.type === "error" ? 404 : 200, F.type)
                            }), w.head.appendChild(p[0])
                        },
                        abort: function() {
                            b && b()
                        }
                    }
                }
            });
            var nr = [],
                ir = /(=)\?(?=&|$)|\?\?/;
            u.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    var l = nr.pop() || u.expando + "_" + Za.guid++;
                    return this[l] = !0, l
                }
            }), u.ajaxPrefilter("json jsonp", function(l, p, b) {
                var k, B, F, z = l.jsonp !== !1 && (ir.test(l.url) ? "url" : typeof l.data == "string" && (l.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && ir.test(l.data) && "data");
                if (z || l.dataTypes[0] === "jsonp") return k = l.jsonpCallback = C(l.jsonpCallback) ? l.jsonpCallback() : l.jsonpCallback, z ? l[z] = l[z].replace(ir, "$1" + k) : l.jsonp !== !1 && (l.url += (So.test(l.url) ? "&" : "?") + l.jsonp + "=" + k), l.converters["script json"] = function() {
                    return F || u.error(k + " was not called"), F[0]
                }, l.dataTypes[0] = "json", B = e[k], e[k] = function() {
                    F = arguments
                }, b.always(function() {
                    B === void 0 ? u(e).removeProp(k) : e[k] = B, l[k] && (l.jsonpCallback = p.jsonpCallback, nr.push(k)), F && C(B) && B(F[0]), F = B = void 0
                }), "script"
            }), S.createHTMLDocument = function() {
                var l = w.implementation.createHTMLDocument("").body;
                return l.innerHTML = "<form></form><form></form>", l.childNodes.length === 2
            }(), u.parseHTML = function(l, p, b) {
                if (typeof l != "string") return [];
                typeof p == "boolean" && (b = p, p = !1);
                var k, B, F;
                return p || (S.createHTMLDocument ? (p = w.implementation.createHTMLDocument(""), k = p.createElement("base"), k.href = w.location.href, p.head.appendChild(k)) : p = w), B = Ie.exec(l), F = !b && [], B ? [p.createElement(B[1])] : (B = ui([l], p, F), F && F.length && u(F).remove(), u.merge([], B.childNodes))
            }, u.fn.load = function(l, p, b) {
                var k, B, F, z = this,
                    ie = l.indexOf(" ");
                return ie > -1 && (k = Qi(l.slice(ie)), l = l.slice(0, ie)), C(p) ? (b = p, p = void 0) : p && typeof p == "object" && (B = "POST"), z.length > 0 && u.ajax({
                    url: l,
                    type: B || "GET",
                    dataType: "html",
                    data: p
                }).done(function(ae) {
                    F = arguments, z.html(k ? u("<div>").append(u.parseHTML(ae)).find(k) : ae)
                }).always(b && function(ae, de) {
                    z.each(function() {
                        b.apply(this, F || [ae.responseText, de, ae])
                    })
                }), this
            }, u.expr.pseudos.animated = function(l) {
                return u.grep(u.timers, function(p) {
                    return l === p.elem
                }).length
            }, u.offset = {
                setOffset: function(l, p, b) {
                    var k, B, F, z, ie, ae, de, ye = u.css(l, "position"),
                        Be = u(l),
                        me = {};
                    ye === "static" && (l.style.position = "relative"), ie = Be.offset(), F = u.css(l, "top"), ae = u.css(l, "left"), de = (ye === "absolute" || ye === "fixed") && (F + ae).indexOf("auto") > -1, de ? (k = Be.position(), z = k.top, B = k.left) : (z = parseFloat(F) || 0, B = parseFloat(ae) || 0), C(p) && (p = p.call(l, b, u.extend({}, ie))), p.top != null && (me.top = p.top - ie.top + z), p.left != null && (me.left = p.left - ie.left + B), "using" in p ? p.using.call(l, me) : Be.css(me)
                }
            }, u.fn.extend({
                offset: function(l) {
                    if (arguments.length) return l === void 0 ? this : this.each(function(B) {
                        u.offset.setOffset(this, l, B)
                    });
                    var p, b, k = this[0];
                    if (!!k) return k.getClientRects().length ? (p = k.getBoundingClientRect(), b = k.ownerDocument.defaultView, {
                        top: p.top + b.pageYOffset,
                        left: p.left + b.pageXOffset
                    }) : {
                        top: 0,
                        left: 0
                    }
                },
                position: function() {
                    if (!!this[0]) {
                        var l, p, b, k = this[0],
                            B = {
                                top: 0,
                                left: 0
                            };
                        if (u.css(k, "position") === "fixed") p = k.getBoundingClientRect();
                        else {
                            for (p = this.offset(), b = k.ownerDocument, l = k.offsetParent || b.documentElement; l && (l === b.body || l === b.documentElement) && u.css(l, "position") === "static";) l = l.parentNode;
                            l && l !== k && l.nodeType === 1 && (B = u(l).offset(), B.top += u.css(l, "borderTopWidth", !0), B.left += u.css(l, "borderLeftWidth", !0))
                        }
                        return {
                            top: p.top - B.top - u.css(k, "marginTop", !0),
                            left: p.left - B.left - u.css(k, "marginLeft", !0)
                        }
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var l = this.offsetParent; l && u.css(l, "position") === "static";) l = l.offsetParent;
                        return l || cn
                    })
                }
            }), u.each({
                scrollLeft: "pageXOffset",
                scrollTop: "pageYOffset"
            }, function(l, p) {
                var b = p === "pageYOffset";
                u.fn[l] = function(k) {
                    return R(this, function(B, F, z) {
                        var ie;
                        if (h(B) ? ie = B : B.nodeType === 9 && (ie = B.defaultView), z === void 0) return ie ? ie[p] : B[F];
                        ie ? ie.scrollTo(b ? ie.pageXOffset : z, b ? z : ie.pageYOffset) : B[F] = z
                    }, l, k, arguments.length)
                }
            }), u.each(["top", "left"], function(l, p) {
                u.cssHooks[p] = L(S.pixelPosition, function(b, k) {
                    if (k) return k = lt(b, p), js.test(k) ? u(b).position()[p] + "px" : k
                })
            }), u.each({
                Height: "height",
                Width: "width"
            }, function(l, p) {
                u.each({
                    padding: "inner" + l,
                    content: p,
                    "": "outer" + l
                }, function(b, k) {
                    u.fn[k] = function(B, F) {
                        var z = arguments.length && (b || typeof B != "boolean"),
                            ie = b || (B === !0 || F === !0 ? "margin" : "border");
                        return R(this, function(ae, de, ye) {
                            var Be;
                            return h(ae) ? k.indexOf("outer") === 0 ? ae["inner" + l] : ae.document.documentElement["client" + l] : ae.nodeType === 9 ? (Be = ae.documentElement, Math.max(ae.body["scroll" + l], Be["scroll" + l], ae.body["offset" + l], Be["offset" + l], Be["client" + l])) : ye === void 0 ? u.css(ae, de, ie) : u.style(ae, de, ye, ie)
                        }, p, z ? B : void 0, z)
                    }
                })
            }), u.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(l, p) {
                u.fn[p] = function(b) {
                    return this.on(p, b)
                }
            }), u.fn.extend({
                bind: function(l, p, b) {
                    return this.on(l, null, p, b)
                },
                unbind: function(l, p) {
                    return this.off(l, null, p)
                },
                delegate: function(l, p, b, k) {
                    return this.on(p, l, b, k)
                },
                undelegate: function(l, p, b) {
                    return arguments.length === 1 ? this.off(l, "**") : this.off(p, l || "**", b)
                },
                hover: function(l, p) {
                    return this.mouseenter(l).mouseleave(p || l)
                }
            }), u.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(l, p) {
                u.fn[p] = function(b, k) {
                    return arguments.length > 0 ? this.on(p, null, b, k) : this.trigger(p)
                }
            });
            var nl = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
            u.proxy = function(l, p) {
                var b, k, B;
                if (typeof p == "string" && (b = l[p], p = l, l = b), !!C(l)) return k = r.call(arguments, 2), B = function() {
                    return l.apply(p || this, k.concat(r.call(arguments)))
                }, B.guid = l.guid = l.guid || u.guid++, B
            }, u.holdReady = function(l) {
                l ? u.readyWait++ : u.ready(!0)
            }, u.isArray = Array.isArray, u.parseJSON = JSON.parse, u.nodeName = oe, u.isFunction = C, u.isWindow = h, u.camelCase = _, u.type = O, u.now = Date.now, u.isNumeric = function(l) {
                var p = u.type(l);
                return (p === "number" || p === "string") && !isNaN(l - parseFloat(l))
            }, u.trim = function(l) {
                return l == null ? "" : (l + "").replace(nl, "")
            };
            var Tp = e.jQuery,
                Ep = e.$;
            return u.noConflict = function(l) {
                return e.$ === u && (e.$ = Ep), l && e.jQuery === u && (e.jQuery = Tp), u
            }, typeof n > "u" && (e.jQuery = e.$ = u), u
        })
    }(Np)), Np.exports
}
var Ye = og(),
    ze = {};
(function(t) {
    (function(e) {
        var n = typeof self == "object" && self.self === self && self || typeof Ct == "object" && Ct.global === Ct && Ct; {
            var i = X.exports,
                o;
            try {
                o = og()
            } catch {}
            e(n, t, i, o)
        }
    })(function(e, n, i, o) {
        var r = e.Backbone,
            V = Array.prototype.slice;
        n.VERSION = "1.3.3", n.$ = o, n.noConflict = function() {
            return e.Backbone = r, this
        }, n.emulateHTTP = !1, n.emulateJSON = !1;
        var A = function(U, g, R) {
                switch (U) {
                    case 1:
                        return function() {
                            return i[g](this[R])
                        };
                    case 2:
                        return function(j) {
                            return i[g](this[R], j)
                        };
                    case 3:
                        return function(j, N) {
                            return i[g](this[R], d(j, this), N)
                        };
                    case 4:
                        return function(j, N, W) {
                            return i[g](this[R], d(j, this), N, W)
                        };
                    default:
                        return function() {
                            var j = V.call(arguments);
                            return j.unshift(this[R]), i[g].apply(i, j)
                        }
                }
            },
            c = function(U, g, R) {
                i.each(g, function(j, N) {
                    i[N] && (U.prototype[N] = A(j, N, R))
                })
            },
            d = function(U, g) {
                return i.isFunction(U) ? U : i.isObject(U) && !g._isModel(U) ? m(U) : i.isString(U) ? function(R) {
                    return R.get(U)
                } : U
            },
            m = function(U) {
                var g = i.matches(U);
                return function(R) {
                    return g(R.attributes)
                }
            },
            q = n.Events = {},
            v = /\s+/,
            D = function(U, g, R, j, N) {
                var W = 0,
                    _;
                if (R && typeof R == "object")
                    for (j !== void 0 && ("context" in N) && N.context === void 0 && (N.context = j), _ = i.keys(R); W < _.length; W++) g = D(U, g, _[W], R[_[W]], N);
                else if (R && v.test(R))
                    for (_ = R.split(v); W < _.length; W++) g = U(g, _[W], j, N);
                else g = U(g, R, j, N);
                return g
            };
        q.on = function(U, g, R) {
            return S(this, U, g, R)
        };
        var S = function(U, g, R, j, N) {
            if (U._events = D(C, U._events || {}, g, R, {
                    context: j,
                    ctx: U,
                    listening: N
                }), N) {
                var W = U._listeners || (U._listeners = {});
                W[N.id] = N
            }
            return U
        };
        q.listenTo = function(U, g, R) {
            if (!U) return this;
            var j = U._listenId || (U._listenId = i.uniqueId("l")),
                N = this._listeningTo || (this._listeningTo = {}),
                W = N[j];
            if (!W) {
                var _ = this._listenId || (this._listenId = i.uniqueId("l"));
                W = N[j] = {
                    obj: U,
                    objId: j,
                    id: _,
                    listeningTo: N,
                    count: 0
                }
            }
            return S(U, g, R, this, W), this
        };
        var C = function(U, g, R, j) {
            if (R) {
                var N = U[g] || (U[g] = []),
                    W = j.context,
                    _ = j.ctx,
                    he = j.listening;
                he && he.count++, N.push({
                    callback: R,
                    context: W,
                    ctx: W || _,
                    listening: he
                })
            }
            return U
        };
        q.off = function(U, g, R) {
            return this._events ? (this._events = D(h, this._events, U, g, {
                context: R,
                listeners: this._listeners
            }), this) : this
        }, q.stopListening = function(U, g, R) {
            var j = this._listeningTo;
            if (!j) return this;
            for (var N = U ? [U._listenId] : i.keys(j), W = 0; W < N.length; W++) {
                var _ = j[N[W]];
                if (!_) break;
                _.obj.off(g, R, this)
            }
            return this
        };
        var h = function(U, g, R, j) {
            if (!!U) {
                var N = 0,
                    W, _ = j.context,
                    he = j.listeners;
                if (!g && !R && !_) {
                    for (var Pe = i.keys(he); N < Pe.length; N++) W = he[Pe[N]], delete he[W.id], delete W.listeningTo[W.objId];
                    return
                }
                for (var xe = g ? [g] : i.keys(U); N < xe.length; N++) {
                    g = xe[N];
                    var Qe = U[g];
                    if (!Qe) break;
                    for (var He = [], pt = 0; pt < Qe.length; pt++) {
                        var Lt = Qe[pt];
                        R && R !== Lt.callback && R !== Lt.callback._callback || _ && _ !== Lt.context ? He.push(Lt) : (W = Lt.listening, W && --W.count === 0 && (delete he[W.id], delete W.listeningTo[W.objId]))
                    }
                    He.length ? U[g] = He : delete U[g]
                }
                return U
            }
        };
        q.once = function(U, g, R) {
            var j = D(w, {}, U, g, i.bind(this.off, this));
            return typeof U == "string" && R == null && (g = void 0), this.on(j, g, R)
        }, q.listenToOnce = function(U, g, R) {
            var j = D(w, {}, g, R, i.bind(this.stopListening, this, U));
            return this.listenTo(U, j)
        };
        var w = function(U, g, R, j) {
            if (R) {
                var N = U[g] = i.once(function() {
                    j(g, N), R.apply(this, arguments)
                });
                N._callback = R
            }
            return U
        };
        q.trigger = function(U) {
            if (!this._events) return this;
            for (var g = Math.max(0, arguments.length - 1), R = Array(g), j = 0; j < g; j++) R[j] = arguments[j + 1];
            return D(T, this._events, U, void 0, R), this
        };
        var T = function(U, g, R, j) {
                if (U) {
                    var N = U[g],
                        W = U.all;
                    N && W && (W = W.slice()), N && M(N, j), W && M(W, [g].concat(j))
                }
                return U
            },
            M = function(U, g) {
                var R, j = -1,
                    N = U.length,
                    W = g[0],
                    _ = g[1],
                    he = g[2];
                switch (g.length) {
                    case 0:
                        for (; ++j < N;)(R = U[j]).callback.call(R.ctx);
                        return;
                    case 1:
                        for (; ++j < N;)(R = U[j]).callback.call(R.ctx, W);
                        return;
                    case 2:
                        for (; ++j < N;)(R = U[j]).callback.call(R.ctx, W, _);
                        return;
                    case 3:
                        for (; ++j < N;)(R = U[j]).callback.call(R.ctx, W, _, he);
                        return;
                    default:
                        for (; ++j < N;)(R = U[j]).callback.apply(R.ctx, g);
                        return
                }
            };
        q.bind = q.on, q.unbind = q.off, i.extend(n, q);
        var O = n.Model = function(U, g) {
            var R = U || {};
            g || (g = {}), this.cid = i.uniqueId(this.cidPrefix), this.attributes = {}, g.collection && (this.collection = g.collection), g.parse && (R = this.parse(R, g) || {});
            var j = i.result(this, "defaults");
            R = i.defaults(i.extend({}, j, R), j), this.set(R, g), this.changed = {}, this.initialize.apply(this, arguments)
        };
        i.extend(O.prototype, q, {
            changed: null,
            validationError: null,
            idAttribute: "id",
            cidPrefix: "c",
            initialize: function() {},
            toJSON: function(U) {
                return i.clone(this.attributes)
            },
            sync: function() {
                return n.sync.apply(this, arguments)
            },
            get: function(U) {
                return this.attributes[U]
            },
            escape: function(U) {
                return i.escape(this.get(U))
            },
            has: function(U) {
                return this.get(U) != null
            },
            matches: function(U) {
                return !!i.iteratee(U, this)(this.attributes)
            },
            set: function(U, g, R) {
                if (U == null) return this;
                var j;
                if (typeof U == "object" ? (j = U, R = g) : (j = {})[U] = g, R || (R = {}), !this._validate(j, R)) return !1;
                var N = R.unset,
                    W = R.silent,
                    _ = [],
                    he = this._changing;
                this._changing = !0, he || (this._previousAttributes = i.clone(this.attributes), this.changed = {});
                var Pe = this.attributes,
                    xe = this.changed,
                    Qe = this._previousAttributes;
                for (var He in j) g = j[He], i.isEqual(Pe[He], g) || _.push(He), i.isEqual(Qe[He], g) ? delete xe[He] : xe[He] = g, N ? delete Pe[He] : Pe[He] = g;
                if (this.idAttribute in j && (this.id = this.get(this.idAttribute)), !W) {
                    _.length && (this._pending = R);
                    for (var pt = 0; pt < _.length; pt++) this.trigger("change:" + _[pt], this, Pe[_[pt]], R)
                }
                if (he) return this;
                if (!W)
                    for (; this._pending;) R = this._pending, this._pending = !1, this.trigger("change", this, R);
                return this._pending = !1, this._changing = !1, this
            },
            unset: function(U, g) {
                return this.set(U, void 0, i.extend({}, g, {
                    unset: !0
                }))
            },
            clear: function(U) {
                var g = {};
                for (var R in this.attributes) g[R] = void 0;
                return this.set(g, i.extend({}, U, {
                    unset: !0
                }))
            },
            hasChanged: function(U) {
                return U == null ? !i.isEmpty(this.changed) : i.has(this.changed, U)
            },
            changedAttributes: function(U) {
                if (!U) return this.hasChanged() ? i.clone(this.changed) : !1;
                var g = this._changing ? this._previousAttributes : this.attributes,
                    R = {};
                for (var j in U) {
                    var N = U[j];
                    i.isEqual(g[j], N) || (R[j] = N)
                }
                return i.size(R) ? R : !1
            },
            previous: function(U) {
                return U == null || !this._previousAttributes ? null : this._previousAttributes[U]
            },
            previousAttributes: function() {
                return i.clone(this._previousAttributes)
            },
            fetch: function(U) {
                U = i.extend({
                    parse: !0
                }, U);
                var g = this,
                    R = U.success;
                return U.success = function(j) {
                    var N = U.parse ? g.parse(j, U) : j;
                    if (!g.set(N, U)) return !1;
                    R && R.call(U.context, g, j, U), g.trigger("sync", g, j, U)
                }, Pt(this, U), this.sync("read", this, U)
            },
            save: function(U, g, R) {
                var j;
                U == null || typeof U == "object" ? (j = U, R = g) : (j = {})[U] = g, R = i.extend({
                    validate: !0,
                    parse: !0
                }, R);
                var N = R.wait;
                if (j && !N) {
                    if (!this.set(j, R)) return !1
                } else if (!this._validate(j, R)) return !1;
                var W = this,
                    _ = R.success,
                    he = this.attributes;
                R.success = function(Qe) {
                    W.attributes = he;
                    var He = R.parse ? W.parse(Qe, R) : Qe;
                    if (N && (He = i.extend({}, j, He)), He && !W.set(He, R)) return !1;
                    _ && _.call(R.context, W, Qe, R), W.trigger("sync", W, Qe, R)
                }, Pt(this, R), j && N && (this.attributes = i.extend({}, he, j));
                var Pe = this.isNew() ? "create" : R.patch ? "patch" : "update";
                Pe === "patch" && !R.attrs && (R.attrs = j);
                var xe = this.sync(Pe, this, R);
                return this.attributes = he, xe
            },
            destroy: function(U) {
                U = U ? i.clone(U) : {};
                var g = this,
                    R = U.success,
                    j = U.wait,
                    N = function() {
                        g.stopListening(), g.trigger("destroy", g, g.collection, U)
                    };
                U.success = function(_) {
                    j && N(), R && R.call(U.context, g, _, U), g.isNew() || g.trigger("sync", g, _, U)
                };
                var W = !1;
                return this.isNew() ? i.defer(U.success) : (Pt(this, U), W = this.sync("delete", this, U)), j || N(), W
            },
            url: function() {
                var U = i.result(this, "urlRoot") || i.result(this.collection, "url") || Tt();
                if (this.isNew()) return U;
                var g = this.get(this.idAttribute);
                return U.replace(/[^\/]$/, "$&/") + encodeURIComponent(g)
            },
            parse: function(U, g) {
                return U
            },
            clone: function() {
                return new this.constructor(this.attributes)
            },
            isNew: function() {
                return !this.has(this.idAttribute)
            },
            isValid: function(U) {
                return this._validate({}, i.extend({}, U, {
                    validate: !0
                }))
            },
            _validate: function(U, g) {
                if (!g.validate || !this.validate) return !0;
                U = i.extend({}, this.attributes, U);
                var R = this.validationError = this.validate(U, g) || null;
                return R ? (this.trigger("invalid", this, R, i.extend(g, {
                    validationError: R
                })), !1) : !0
            }
        });
        var Q = {
            keys: 1,
            values: 1,
            pairs: 1,
            invert: 1,
            pick: 0,
            omit: 0,
            chain: 1,
            isEmpty: 1
        };
        c(O, Q, "attributes");
        var u = n.Collection = function(U, g) {
                g || (g = {}), g.model && (this.model = g.model), g.comparator !== void 0 && (this.comparator = g.comparator), this._reset(), this.initialize.apply(this, arguments), U && this.reset(U, i.extend({
                    silent: !0
                }, g))
            },
            J = {
                add: !0,
                remove: !0,
                merge: !0
            },
            se = {
                add: !0,
                remove: !1
            },
            te = function(U, g, R) {
                R = Math.min(Math.max(R, 0), U.length);
                var j = Array(U.length - R),
                    N = g.length,
                    W;
                for (W = 0; W < j.length; W++) j[W] = U[W + R];
                for (W = 0; W < N; W++) U[W + R] = g[W];
                for (W = 0; W < j.length; W++) U[W + N + R] = j[W]
            };
        i.extend(u.prototype, q, {
            model: O,
            initialize: function() {},
            toJSON: function(U) {
                return this.map(function(g) {
                    return g.toJSON(U)
                })
            },
            sync: function() {
                return n.sync.apply(this, arguments)
            },
            add: function(U, g) {
                return this.set(U, i.extend({
                    merge: !1
                }, g, se))
            },
            remove: function(U, g) {
                g = i.extend({}, g);
                var R = !i.isArray(U);
                U = R ? [U] : U.slice();
                var j = this._removeModels(U, g);
                return !g.silent && j.length && (g.changes = {
                    added: [],
                    merged: [],
                    removed: j
                }, this.trigger("update", this, g)), R ? j[0] : j
            },
            set: function(U, g) {
                if (U != null) {
                    g = i.extend({}, J, g), g.parse && !this._isModel(U) && (U = this.parse(U, g) || []);
                    var R = !i.isArray(U);
                    U = R ? [U] : U.slice();
                    var j = g.at;
                    j != null && (j = +j), j > this.length && (j = this.length), j < 0 && (j += this.length + 1);
                    var N = [],
                        W = [],
                        _ = [],
                        he = [],
                        Pe = {},
                        xe = g.add,
                        Qe = g.merge,
                        He = g.remove,
                        pt = !1,
                        Lt = this.comparator && j == null && g.sort !== !1,
                        yn = i.isString(this.comparator) ? this.comparator : null,
                        mt, Dt;
                    for (Dt = 0; Dt < U.length; Dt++) {
                        mt = U[Dt];
                        var Et = this.get(mt);
                        if (Et) {
                            if (Qe && mt !== Et) {
                                var cn = this._isModel(mt) ? mt.attributes : mt;
                                g.parse && (cn = Et.parse(cn, g)), Et.set(cn, g), _.push(Et), Lt && !pt && (pt = Et.hasChanged(yn))
                            }
                            Pe[Et.cid] || (Pe[Et.cid] = !0, N.push(Et)), U[Dt] = Et
                        } else xe && (mt = U[Dt] = this._prepareModel(mt, g), mt && (W.push(mt), this._addReference(mt, g), Pe[mt.cid] = !0, N.push(mt)))
                    }
                    if (He) {
                        for (Dt = 0; Dt < this.length; Dt++) mt = this.models[Dt], Pe[mt.cid] || he.push(mt);
                        he.length && this._removeModels(he, g)
                    }
                    var rt = !1,
                        Kt = !Lt && xe && He;
                    if (N.length && Kt ? (rt = this.length !== N.length || i.some(this.models, function(ee, Z) {
                            return ee !== N[Z]
                        }), this.models.length = 0, te(this.models, N, 0), this.length = this.models.length) : W.length && (Lt && (pt = !0), te(this.models, W, j == null ? this.length : j), this.length = this.models.length), pt && this.sort({
                            silent: !0
                        }), !g.silent) {
                        for (Dt = 0; Dt < W.length; Dt++) j != null && (g.index = j + Dt), mt = W[Dt], mt.trigger("add", mt, this, g);
                        (pt || rt) && this.trigger("sort", this, g), (W.length || he.length || _.length) && (g.changes = {
                            added: W,
                            removed: he,
                            merged: _
                        }, this.trigger("update", this, g))
                    }
                    return R ? U[0] : U
                }
            },
            reset: function(U, g) {
                g = g ? i.clone(g) : {};
                for (var R = 0; R < this.models.length; R++) this._removeReference(this.models[R], g);
                return g.previousModels = this.models, this._reset(), U = this.add(U, i.extend({
                    silent: !0
                }, g)), g.silent || this.trigger("reset", this, g), U
            },
            push: function(U, g) {
                return this.add(U, i.extend({
                    at: this.length
                }, g))
            },
            pop: function(U) {
                var g = this.at(this.length - 1);
                return this.remove(g, U)
            },
            unshift: function(U, g) {
                return this.add(U, i.extend({
                    at: 0
                }, g))
            },
            shift: function(U) {
                var g = this.at(0);
                return this.remove(g, U)
            },
            slice: function() {
                return V.apply(this.models, arguments)
            },
            get: function(U) {
                if (U != null) return this._byId[U] || this._byId[this.modelId(U.attributes || U)] || U.cid && this._byId[U.cid]
            },
            has: function(U) {
                return this.get(U) != null
            },
            at: function(U) {
                return U < 0 && (U += this.length), this.models[U]
            },
            where: function(U, g) {
                return this[g ? "find" : "filter"](U)
            },
            findWhere: function(U) {
                return this.where(U, !0)
            },
            sort: function(U) {
                var g = this.comparator;
                if (!g) throw new Error("Cannot sort a set without a comparator");
                U || (U = {});
                var R = g.length;
                return i.isFunction(g) && (g = i.bind(g, this)), R === 1 || i.isString(g) ? this.models = this.sortBy(g) : this.models.sort(g), U.silent || this.trigger("sort", this, U), this
            },
            pluck: function(U) {
                return this.map(U + "")
            },
            fetch: function(U) {
                U = i.extend({
                    parse: !0
                }, U);
                var g = U.success,
                    R = this;
                return U.success = function(j) {
                    var N = U.reset ? "reset" : "set";
                    R[N](j, U), g && g.call(U.context, R, j, U), R.trigger("sync", R, j, U)
                }, Pt(this, U), this.sync("read", this, U)
            },
            create: function(U, g) {
                g = g ? i.clone(g) : {};
                var R = g.wait;
                if (U = this._prepareModel(U, g), !U) return !1;
                R || this.add(U, g);
                var j = this,
                    N = g.success;
                return g.success = function(W, _, he) {
                    R && j.add(W, he), N && N.call(he.context, W, _, he)
                }, U.save(null, g), U
            },
            parse: function(U, g) {
                return U
            },
            clone: function() {
                return new this.constructor(this.models, {
                    model: this.model,
                    comparator: this.comparator
                })
            },
            modelId: function(U) {
                return U[this.model.prototype.idAttribute || "id"]
            },
            _reset: function() {
                this.length = 0, this.models = [], this._byId = {}
            },
            _prepareModel: function(U, g) {
                if (this._isModel(U)) return U.collection || (U.collection = this), U;
                g = g ? i.clone(g) : {}, g.collection = this;
                var R = new this.model(U, g);
                return R.validationError ? (this.trigger("invalid", this, R.validationError, g), !1) : R
            },
            _removeModels: function(U, g) {
                for (var R = [], j = 0; j < U.length; j++) {
                    var N = this.get(U[j]);
                    if (!!N) {
                        var W = this.indexOf(N);
                        this.models.splice(W, 1), this.length--, delete this._byId[N.cid];
                        var _ = this.modelId(N.attributes);
                        _ != null && delete this._byId[_], g.silent || (g.index = W, N.trigger("remove", N, this, g)), R.push(N), this._removeReference(N, g)
                    }
                }
                return R
            },
            _isModel: function(U) {
                return U instanceof O
            },
            _addReference: function(U, g) {
                this._byId[U.cid] = U;
                var R = this.modelId(U.attributes);
                R != null && (this._byId[R] = U), U.on("all", this._onModelEvent, this)
            },
            _removeReference: function(U, g) {
                delete this._byId[U.cid];
                var R = this.modelId(U.attributes);
                R != null && delete this._byId[R], this === U.collection && delete U.collection, U.off("all", this._onModelEvent, this)
            },
            _onModelEvent: function(U, g, R, j) {
                if (g) {
                    if ((U === "add" || U === "remove") && R !== this) return;
                    if (U === "destroy" && this.remove(g, j), U === "change") {
                        var N = this.modelId(g.previousAttributes()),
                            W = this.modelId(g.attributes);
                        N !== W && (N != null && delete this._byId[N], W != null && (this._byId[W] = g))
                    }
                }
                this.trigger.apply(this, arguments)
            }
        });
        var ve = {
            forEach: 3,
            each: 3,
            map: 3,
            collect: 3,
            reduce: 0,
            foldl: 0,
            inject: 0,
            reduceRight: 0,
            foldr: 0,
            find: 3,
            detect: 3,
            filter: 3,
            select: 3,
            reject: 3,
            every: 3,
            all: 3,
            some: 3,
            any: 3,
            include: 3,
            includes: 3,
            contains: 3,
            invoke: 0,
            max: 3,
            min: 3,
            toArray: 1,
            size: 1,
            first: 3,
            head: 3,
            take: 3,
            initial: 3,
            rest: 3,
            tail: 3,
            drop: 3,
            last: 3,
            without: 0,
            difference: 0,
            indexOf: 3,
            shuffle: 1,
            lastIndexOf: 3,
            isEmpty: 1,
            chain: 1,
            sample: 3,
            partition: 3,
            groupBy: 3,
            countBy: 3,
            sortBy: 3,
            indexBy: 3,
            findIndex: 3,
            findLastIndex: 3
        };
        c(u, ve, "models");
        var be = n.View = function(U) {
                this.cid = i.uniqueId("view"), i.extend(this, i.pick(U, Ie)), this._ensureElement(), this.initialize.apply(this, arguments)
            },
            oe = /^(\S+)\s*(.*)$/,
            Ie = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
        i.extend(be.prototype, q, {
            tagName: "div",
            $: function(U) {
                return this.$el.find(U)
            },
            initialize: function() {},
            render: function() {
                return this
            },
            remove: function() {
                return this._removeElement(), this.stopListening(), this
            },
            _removeElement: function() {
                this.$el.remove()
            },
            setElement: function(U) {
                return this.undelegateEvents(), this._setElement(U), this.delegateEvents(), this
            },
            _setElement: function(U) {
                this.$el = U instanceof n.$ ? U : n.$(U), this.el = this.$el[0]
            },
            delegateEvents: function(U) {
                if (U || (U = i.result(this, "events")), !U) return this;
                this.undelegateEvents();
                for (var g in U) {
                    var R = U[g];
                    if (i.isFunction(R) || (R = this[R]), !!R) {
                        var j = g.match(oe);
                        this.delegate(j[1], j[2], i.bind(R, this))
                    }
                }
                return this
            },
            delegate: function(U, g, R) {
                return this.$el.on(U + ".delegateEvents" + this.cid, g, R), this
            },
            undelegateEvents: function() {
                return this.$el && this.$el.off(".delegateEvents" + this.cid), this
            },
            undelegate: function(U, g, R) {
                return this.$el.off(U + ".delegateEvents" + this.cid, g, R), this
            },
            _createElement: function(U) {
                return document.createElement(U)
            },
            _ensureElement: function() {
                if (this.el) this.setElement(i.result(this, "el"));
                else {
                    var U = i.extend({}, i.result(this, "attributes"));
                    this.id && (U.id = i.result(this, "id")), this.className && (U.class = i.result(this, "className")), this.setElement(this._createElement(i.result(this, "tagName"))), this._setAttributes(U)
                }
            },
            _setAttributes: function(U) {
                this.$el.attr(U)
            }
        }), n.sync = function(U, g, R) {
            var j = Y[U];
            i.defaults(R || (R = {}), {
                emulateHTTP: n.emulateHTTP,
                emulateJSON: n.emulateJSON
            });
            var N = {
                type: j,
                dataType: "json"
            };
            if (R.url || (N.url = i.result(g, "url") || Tt()), R.data == null && g && (U === "create" || U === "update" || U === "patch") && (N.contentType = "application/json", N.data = JSON.stringify(R.attrs || g.toJSON(R))), R.emulateJSON && (N.contentType = "application/x-www-form-urlencoded", N.data = N.data ? {
                    model: N.data
                } : {}), R.emulateHTTP && (j === "PUT" || j === "DELETE" || j === "PATCH")) {
                N.type = "POST", R.emulateJSON && (N.data._method = j);
                var W = R.beforeSend;
                R.beforeSend = function(Pe) {
                    if (Pe.setRequestHeader("X-HTTP-Method-Override", j), W) return W.apply(this, arguments)
                }
            }
            N.type !== "GET" && !R.emulateJSON && (N.processData = !1);
            var _ = R.error;
            R.error = function(Pe, xe, Qe) {
                R.textStatus = xe, R.errorThrown = Qe, _ && _.call(R.context, Pe, xe, Qe)
            };
            var he = R.xhr = n.ajax(i.extend(N, R));
            return g.trigger("request", g, he, R), he
        };
        var Y = {
            create: "POST",
            update: "PUT",
            patch: "PATCH",
            delete: "DELETE",
            read: "GET"
        };
        n.ajax = function() {
            return n.$.ajax.apply(n.$, arguments)
        };
        var re = n.Router = function(U) {
                U || (U = {}), U.routes && (this.routes = U.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
            },
            ue = /\((.*?)\)/g,
            fe = /(\(\?)?:\w+/g,
            qe = /\*\w+/g,
            ge = /[\-{}\[\]+?.,\\\^$|#\s]/g;
        i.extend(re.prototype, q, {
            initialize: function() {},
            route: function(U, g, R) {
                i.isRegExp(U) || (U = this._routeToRegExp(U)), i.isFunction(g) && (R = g, g = ""), R || (R = this[g]);
                var j = this;
                return n.history.route(U, function(N) {
                    var W = j._extractParameters(U, N);
                    j.execute(R, W, g) !== !1 && (j.trigger.apply(j, ["route:" + g].concat(W)), j.trigger("route", g, W), n.history.trigger("route", j, g, W))
                }), this
            },
            execute: function(U, g, R) {
                U && U.apply(this, g)
            },
            navigate: function(U, g) {
                return n.history.navigate(U, g), this
            },
            _bindRoutes: function() {
                if (!!this.routes) {
                    this.routes = i.result(this, "routes");
                    for (var U, g = i.keys(this.routes);
                        (U = g.pop()) != null;) this.route(U, this.routes[U])
                }
            },
            _routeToRegExp: function(U) {
                return U = U.replace(ge, "\\$&").replace(ue, "(?:$1)?").replace(fe, function(g, R) {
                    return R ? g : "([^/?]+)"
                }).replace(qe, "([^?]*?)"), new RegExp("^" + U + "(?:\\?([\\s\\S]*))?$")
            },
            _extractParameters: function(U, g) {
                var R = U.exec(g).slice(1);
                return i.map(R, function(j, N) {
                    return N === R.length - 1 ? j || null : j ? decodeURIComponent(j) : null
                })
            }
        });
        var Te = n.History = function() {
                this.handlers = [], this.checkUrl = i.bind(this.checkUrl, this), typeof window < "u" && (this.location = window.location, this.history = window.history)
            },
            Le = /^[#\/]|\s+$/g,
            Ge = /^\/+|\/+$/g,
            Xe = /#.*$/;
        Te.started = !1, i.extend(Te.prototype, q, {
            interval: 50,
            atRoot: function() {
                var U = this.location.pathname.replace(/[^\/]$/, "$&/");
                return U === this.root && !this.getSearch()
            },
            matchRoot: function() {
                var U = this.decodeFragment(this.location.pathname),
                    g = U.slice(0, this.root.length - 1) + "/";
                return g === this.root
            },
            decodeFragment: function(U) {
                return decodeURI(U.replace(/%25/g, "%2525"))
            },
            getSearch: function() {
                var U = this.location.href.replace(/#.*/, "").match(/\?.+/);
                return U ? U[0] : ""
            },
            getHash: function(U) {
                var g = (U || this).location.href.match(/#(.*)$/);
                return g ? g[1] : ""
            },
            getPath: function() {
                var U = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
                return U.charAt(0) === "/" ? U.slice(1) : U
            },
            getFragment: function(U) {
                return U == null && (this._usePushState || !this._wantsHashChange ? U = this.getPath() : U = this.getHash()), U.replace(Le, "")
            },
            start: function(U) {
                if (Te.started) throw new Error("Backbone.history has already been started");
                if (Te.started = !0, this.options = i.extend({
                        root: "/"
                    }, this.options, U), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._hasHashChange = "onhashchange" in window && (document.documentMode === void 0 || document.documentMode > 7), this._useHashChange = this._wantsHashChange && this._hasHashChange, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.history && this.history.pushState), this._usePushState = this._wantsPushState && this._hasPushState, this.fragment = this.getFragment(), this.root = ("/" + this.root + "/").replace(Ge, "/"), this._wantsHashChange && this._wantsPushState)
                    if (!this._hasPushState && !this.atRoot()) {
                        var g = this.root.slice(0, -1) || "/";
                        return this.location.replace(g + "#" + this.getPath()), !0
                    } else this._hasPushState && this.atRoot() && this.navigate(this.getHash(), {
                        replace: !0
                    });
                if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
                    this.iframe = document.createElement("iframe"), this.iframe.src = "javascript:0", this.iframe.style.display = "none", this.iframe.tabIndex = -1;
                    var R = document.body,
                        j = R.insertBefore(this.iframe, R.firstChild).contentWindow;
                    j.document.open(), j.document.close(), j.location.hash = "#" + this.fragment
                }
                var N = window.addEventListener || function(W, _) {
                    return attachEvent("on" + W, _)
                };
                if (this._usePushState ? N("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe ? N("hashchange", this.checkUrl, !1) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), !this.options.silent) return this.loadUrl()
            },
            stop: function() {
                var U = window.removeEventListener || function(g, R) {
                    return detachEvent("on" + g, R)
                };
                this._usePushState ? U("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe && U("hashchange", this.checkUrl, !1), this.iframe && (document.body.removeChild(this.iframe), this.iframe = null), this._checkUrlInterval && clearInterval(this._checkUrlInterval), Te.started = !1
            },
            route: function(U, g) {
                this.handlers.unshift({
                    route: U,
                    callback: g
                })
            },
            checkUrl: function(U) {
                var g = this.getFragment();
                if (g === this.fragment && this.iframe && (g = this.getHash(this.iframe.contentWindow)), g === this.fragment) return !1;
                this.iframe && this.navigate(g), this.loadUrl()
            },
            loadUrl: function(U) {
                return this.matchRoot() ? (U = this.fragment = this.getFragment(U), i.some(this.handlers, function(g) {
                    if (g.route.test(U)) return g.callback(U), !0
                })) : !1
            },
            navigate: function(U, g) {
                if (!Te.started) return !1;
                (!g || g === !0) && (g = {
                    trigger: !!g
                }), U = this.getFragment(U || "");
                var R = this.root;
                (U === "" || U.charAt(0) === "?") && (R = R.slice(0, -1) || "/");
                var j = R + U;
                if (U = this.decodeFragment(U.replace(Xe, "")), this.fragment !== U) {
                    if (this.fragment = U, this._usePushState) this.history[g.replace ? "replaceState" : "pushState"]({}, document.title, j);
                    else if (this._wantsHashChange) {
                        if (this._updateHash(this.location, U, g.replace), this.iframe && U !== this.getHash(this.iframe.contentWindow)) {
                            var N = this.iframe.contentWindow;
                            g.replace || (N.document.open(), N.document.close()), this._updateHash(N.location, U, g.replace)
                        }
                    } else return this.location.assign(j);
                    if (g.trigger) return this.loadUrl(U)
                }
            },
            _updateHash: function(U, g, R) {
                if (R) {
                    var j = U.href.replace(/(javascript:|#).*$/, "");
                    U.replace(j + "#" + g)
                } else U.hash = "#" + g
            }
        }), n.history = new Te;
        var nt = function(U, g) {
            var R = this,
                j;
            return U && i.has(U, "constructor") ? j = U.constructor : j = function() {
                return R.apply(this, arguments)
            }, i.extend(j, R, g), j.prototype = i.create(R.prototype, U), j.prototype.constructor = j, j.__super__ = R.prototype, j
        };
        O.extend = u.extend = re.extend = be.extend = Te.extend = nt;
        var Tt = function() {
                throw new Error('A "url" property or function must be specified')
            },
            Pt = function(U, g) {
                var R = g.error;
                g.error = function(j) {
                    R && R.call(g.context, U, j, g), U.trigger("error", U, j, g)
                }
            };
        return n
    })
})(ze);
var ag = {
        exports: {}
    },
    Gp = {
        exports: {}
    },
    af;

function Zb() {
    return af || (af = 1, function(t, e) {
        (function(n, i) {
            t.exports = i(X.exports, ze)
        })(Ct, function(n, i) {
            n = "default" in n ? n.default : n, i = "default" in i ? i.default : i;
            var o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
                    return typeof h
                } : function(h) {
                    return h && typeof Symbol == "function" && h.constructor === Symbol ? "symbol" : typeof h
                },
                r = i.Radio,
                V = i.Radio = {};
            V.VERSION = "2.0.0", V.noConflict = function() {
                return i.Radio = r, this
            }, V.DEBUG = !1, V._debugText = function(h, w, T) {
                return h + (T ? " on the " + T + " channel" : "") + ': "' + w + '"'
            }, V.debugLog = function(h, w, T) {
                V.DEBUG && console && console.warn && console.warn(V._debugText(h, w, T))
            };
            var A = /\s+/;
            V._eventsApi = function(h, w, T, M) {
                if (!T) return !1;
                var O = {};
                if ((typeof T > "u" ? "undefined" : o(T)) === "object") {
                    for (var Q in T) {
                        var u = h[w].apply(h, [Q, T[Q]].concat(M));
                        A.test(Q) ? n.extend(O, u) : O[Q] = u
                    }
                    return O
                }
                if (A.test(T)) {
                    for (var J = T.split(A), se = 0, te = J.length; se < te; se++) O[J[se]] = h[w].apply(h, [J[se]].concat(M));
                    return O
                }
                return !1
            }, V._callHandler = function(h, w, T) {
                var M = T[0],
                    O = T[1],
                    Q = T[2];
                switch (T.length) {
                    case 0:
                        return h.call(w);
                    case 1:
                        return h.call(w, M);
                    case 2:
                        return h.call(w, M, O);
                    case 3:
                        return h.call(w, M, O, Q);
                    default:
                        return h.apply(w, T)
                }
            };

            function c(h, w, T, M) {
                var O = h[w];
                if ((!T || T === O.callback || T === O.callback._callback) && (!M || M === O.context)) return delete h[w], !0
            }

            function d(h, w, T, M) {
                h || (h = {});
                for (var O = w ? [w] : n.keys(h), Q = !1, u = 0, J = O.length; u < J; u++) w = O[u], !!h[w] && c(h, w, T, M) && (Q = !0);
                return Q
            }
            var m = {};

            function q(h) {
                return m[h] || (m[h] = n.bind(V.log, V, h))
            }
            n.extend(V, {
                log: function(w, T) {
                    if (!(typeof console > "u")) {
                        var M = n.toArray(arguments).slice(2);
                        console.log("[" + w + '] "' + T + '"', M)
                    }
                },
                tuneIn: function(w) {
                    var T = V.channel(w);
                    return T._tunedIn = !0, T.on("all", q(w)), this
                },
                tuneOut: function(w) {
                    var T = V.channel(w);
                    return T._tunedIn = !1, T.off("all", q(w)), delete m[w], this
                }
            });

            function v(h) {
                return n.isFunction(h) ? h : function() {
                    return h
                }
            }
            V.Requests = {
                request: function(w) {
                    var T = n.toArray(arguments).slice(1),
                        M = V._eventsApi(this, "request", w, T);
                    if (M) return M;
                    var O = this.channelName,
                        Q = this._requests;
                    if (O && this._tunedIn && V.log.apply(this, [O, w].concat(T)), Q && (Q[w] || Q.default)) {
                        var u = Q[w] || Q.default;
                        return T = Q[w] ? T : arguments, V._callHandler(u.callback, u.context, T)
                    } else V.debugLog("An unhandled request was fired", w, O)
                },
                reply: function(w, T, M) {
                    return V._eventsApi(this, "reply", w, [T, M]) ? this : (this._requests || (this._requests = {}), this._requests[w] && V.debugLog("A request was overwritten", w, this.channelName), this._requests[w] = {
                        callback: v(T),
                        context: M || this
                    }, this)
                },
                replyOnce: function(w, T, M) {
                    if (V._eventsApi(this, "replyOnce", w, [T, M])) return this;
                    var O = this,
                        Q = n.once(function() {
                            return O.stopReplying(w), v(T).apply(this, arguments)
                        });
                    return this.reply(w, Q, M)
                },
                stopReplying: function(w, T, M) {
                    return V._eventsApi(this, "stopReplying", w) ? this : (!w && !T && !M ? delete this._requests : d(this._requests, w, T, M) || V.debugLog("Attempted to remove the unregistered request", w, this.channelName), this)
                }
            }, V._channels = {}, V.channel = function(h) {
                if (!h) throw new Error("You must provide a name for the channel.");
                return V._channels[h] ? V._channels[h] : V._channels[h] = new V.Channel(h)
            }, V.Channel = function(h) {
                this.channelName = h
            }, n.extend(V.Channel.prototype, i.Events, V.Requests, {
                reset: function() {
                    return this.off(), this.stopListening(), this.stopReplying(), this
                }
            });
            var D, S, C = [i.Events, V.Requests];
            return n.each(C, function(h) {
                n.each(h, function(w, T) {
                    V[T] = function(M) {
                        return S = n.toArray(arguments).slice(1), D = this.channel(M), D[T].apply(D, S)
                    }
                })
            }), V.reset = function(h) {
                var w = h ? [this._channels[h]] : this._channels;
                n.each(w, function(T) {
                    T.reset()
                })
            }, V
        })
    }(Gp)), Gp.exports
}
/**
 * @license
 * MarionetteJS (Backbone.Marionette)
 * ----------------------------------
 * v3.5.1
 *
 * Copyright (c)2017 Derick Bailey, Muted Solutions, LLC.
 * Distributed under MIT license
 *
 * http://marionettejs.com
 */
(function(t, e) {
    (function(n, i) {
        t.exports = i(ze, X.exports, Zb())
    })(Ct, function(n, i, o) {
        n = n && n.hasOwnProperty("default") ? n.default : n, i = i && i.hasOwnProperty("default") ? i.default : i, o = o && o.hasOwnProperty("default") ? o.default : o;
        var r = "3.5.1",
            V = function(f) {
                return function(P) {
                    for (var H = arguments.length, ce = Array(H > 1 ? H - 1 : 0), Me = 1; Me < H; Me++) ce[Me - 1] = arguments[Me];
                    return f.apply(P, ce)
                }
            },
            A = n.Model.extend,
            c = function L(f, P) {
                i.isObject(f) && (f = f.prev + " is going to be removed in the future. Please use " + f.next + " instead." + (f.url ? " See: " + f.url : "")), !!lt.DEV_MODE && (P === void 0 || !P) && !L._cache[f] && (L._warn("Deprecation warning: " + f), L._cache[f] = !0)
            };
        c._console = typeof console < "u" ? console : {}, c._warn = function() {
            var L = c._console.warn || c._console.log || i.noop;
            return L.apply(c._console, arguments)
        }, c._cache = {};
        var d = function(f) {
                return document.documentElement.contains(f && f.parentNode)
            },
            m = function(f, P) {
                var H = this;
                !f || i.each(P, function(ce) {
                    var Me = f[ce];
                    Me !== void 0 && (H[ce] = Me)
                })
            },
            q = function(f) {
                if (!!f) return this.options && this.options[f] !== void 0 ? this.options[f] : this[f]
            },
            v = function(f) {
                var P = this;
                return i.reduce(f, function(H, ce, Me) {
                    return i.isFunction(ce) || (ce = P[ce]), ce && (H[Me] = ce), H
                }, {})
            },
            D = /(^|:)(\w)/gi;

        function S(L, f, P) {
            return P.toUpperCase()
        }
        var C = i.memoize(function(L) {
            return "on" + L.replace(D, S)
        });

        function h(L) {
            for (var f = arguments.length, P = Array(f > 1 ? f - 1 : 0), H = 1; H < f; H++) P[H - 1] = arguments[H];
            var ce = C(L),
                Me = q.call(this, ce),
                tt = void 0;
            return i.isFunction(Me) && (tt = Me.apply(this, P)), this.trigger.apply(this, arguments), tt
        }

        function w(L) {
            for (var f = arguments.length, P = Array(f > 1 ? f - 1 : 0), H = 1; H < f; H++) P[H - 1] = arguments[H];
            return i.isFunction(L.triggerMethod) ? L.triggerMethod.apply(L, P) : h.apply(L, P)
        }

        function T(L, f, P) {
            !L._getImmediateChildren || i.each(L._getImmediateChildren(), function(H) {
                !P(H) || w(H, f, H)
            })
        }

        function M(L) {
            return !L._isAttached
        }

        function O(L) {
            return M(L) ? (L._isAttached = !0, !0) : !1
        }

        function Q(L) {
            return L._isAttached
        }

        function u(L) {
            return Q(L) ? (L._isAttached = !1, !0) : !1
        }

        function J(L) {
            L._isAttached && L._isRendered && w(L, "dom:refresh", L)
        }

        function se(L) {
            L._isAttached && L._isRendered && w(L, "dom:remove", L)
        }

        function te() {
            T(this, "before:attach", M)
        }

        function ve() {
            T(this, "attach", O), J(this)
        }

        function be() {
            T(this, "before:detach", Q), se(this)
        }

        function oe() {
            T(this, "detach", u)
        }

        function Ie() {
            se(this)
        }

        function Y() {
            J(this)
        }

        function re(L) {
            L._areViewEventsMonitored || L.monitorViewEvents === !1 || (L._areViewEventsMonitored = !0, L.on({
                "before:attach": te,
                attach: ve,
                "before:detach": be,
                detach: oe,
                "before:render": Ie,
                render: Y
            }))
        }
        var ue = ["description", "fileName", "lineNumber", "name", "message", "number"],
            fe = A.call(Error, {
                urlRoot: "http://marionettejs.com/docs/v" + r + "/",
                constructor: function(f, P) {
                    i.isObject(f) ? (P = f, f = P.message) : P || (P = {});
                    var H = Error.call(this, f);
                    i.extend(this, i.pick(H, ue), i.pick(P, ue)), this.captureStackTrace(), P.url && (this.url = this.urlRoot + P.url)
                },
                captureStackTrace: function() {
                    Error.captureStackTrace && Error.captureStackTrace(this, fe)
                },
                toString: function() {
                    return this.name + ": " + this.message + (this.url ? " See: " + this.url : "")
                }
            });
        fe.extend = A;

        function qe(L, f, P, H, ce) {
            var Me = H.split(/\s+/);
            Me.length > 1 && c("Multiple handlers for a single event are deprecated. If needed, use a single handler to call multiple methods."), i.each(Me, function(tt) {
                var Gt = L[tt];
                if (!Gt) throw new fe('Method "' + tt + '" was configured as an event handler, but does not exist.');
                L[ce](f, P, Gt)
            })
        }

        function ge(L, f, P, H) {
            if (!i.isObject(P)) throw new fe({
                message: "Bindings must be an object.",
                url: "marionette.functions.html#marionettebindevents"
            });
            i.each(P, function(ce, Me) {
                if (i.isString(ce)) {
                    qe(L, f, Me, ce, H);
                    return
                }
                L[H](f, Me, ce)
            })
        }

        function Te(L, f) {
            return !L || !f ? this : (ge(this, L, f, "listenTo"), this)
        }

        function Le(L, f) {
            return L ? f ? (ge(this, L, f, "stopListening"), this) : (this.stopListening(L), this) : this
        }

        function Ge(L, f, P, H) {
            if (!i.isObject(P)) throw new fe({
                message: "Bindings must be an object.",
                url: "marionette.functions.html#marionettebindrequests"
            });
            var ce = v.call(L, P);
            f[H](ce, L)
        }

        function Xe(L, f) {
            return !L || !f ? this : (Ge(this, L, f, "reply"), this)
        }

        function nt(L, f) {
            return L ? f ? (Ge(this, L, f, "stopReplying"), this) : (L.stopReplying(null, null, this), this) : this
        }
        var Tt = function(f) {
                this.options = i.extend({}, i.result(this, "options"), f)
            },
            Pt = {
                normalizeMethods: v,
                _setOptions: Tt,
                mergeOptions: m,
                getOption: q,
                bindEvents: Te,
                unbindEvents: Le
            },
            U = {
                _initRadio: function() {
                    var f = i.result(this, "channelName");
                    if (!!f) {
                        if (!o) throw new fe({
                            name: "BackboneRadioMissing",
                            message: 'The dependency "backbone.radio" is missing.'
                        });
                        var P = this._channel = o.channel(f),
                            H = i.result(this, "radioEvents");
                        this.bindEvents(P, H);
                        var ce = i.result(this, "radioRequests");
                        this.bindRequests(P, ce), this.on("destroy", this._destroyRadio)
                    }
                },
                _destroyRadio: function() {
                    this._channel.stopReplying(null, null, this)
                },
                getChannel: function() {
                    return this._channel
                },
                bindEvents: Te,
                unbindEvents: Le,
                bindRequests: Xe,
                unbindRequests: nt
            },
            g = ["channelName", "radioEvents", "radioRequests"],
            R = function(f) {
                this.hasOwnProperty("options") || this._setOptions(f), this.mergeOptions(f, g), this._setCid(), this._initRadio(), this.initialize.apply(this, arguments)
            };
        R.extend = A, i.extend(R.prototype, n.Events, Pt, U, {
            cidPrefix: "mno",
            _isDestroyed: !1,
            isDestroyed: function() {
                return this._isDestroyed
            },
            initialize: function() {},
            _setCid: function() {
                this.cid || (this.cid = i.uniqueId(this.cidPrefix))
            },
            destroy: function() {
                if (this._isDestroyed) return this;
                for (var f = arguments.length, P = Array(f), H = 0; H < f; H++) P[H] = arguments[H];
                return this.triggerMethod.apply(this, ["before:destroy", this].concat(P)), this._isDestroyed = !0, this.triggerMethod.apply(this, ["destroy", this].concat(P)), this.stopListening(), this
            },
            triggerMethod: h
        });
        var j = function(f) {
            this.templateId = f
        };
        i.extend(j, {
            templateCaches: {},
            get: function(f, P) {
                var H = this.templateCaches[f];
                return H || (H = new j(f), this.templateCaches[f] = H), H.load(P)
            },
            clear: function() {
                for (var f = void 0, P = arguments.length, H = Array(P), ce = 0; ce < P; ce++) H[ce] = arguments[ce];
                var Me = H.length;
                if (Me > 0)
                    for (f = 0; f < Me; f++) delete this.templateCaches[H[f]];
                else this.templateCaches = {}
            }
        }), i.extend(j.prototype, {
            load: function(f) {
                if (this.compiledTemplate) return this.compiledTemplate;
                var P = this.loadTemplate(this.templateId, f);
                return this.compiledTemplate = this.compileTemplate(P, f), this.compiledTemplate
            },
            loadTemplate: function(f, P) {
                var H = n.$(f);
                if (!H.length) throw new fe({
                    name: "NoTemplateError",
                    message: 'Could not find template: "' + f + '"'
                });
                return H.html()
            },
            compileTemplate: function(f, P) {
                return i.template(f, P)
            }
        });
        var N = i.invokeMap || i.invoke;

        function W(L, f) {
            return L.behaviorClass ? L.behaviorClass : i.isFunction(L) ? L : i.isFunction(lt.Behaviors.behaviorsLookup) ? lt.Behaviors.behaviorsLookup(L, f)[f] : lt.Behaviors.behaviorsLookup[f]
        }

        function _(L, f) {
            return i.chain(f).map(function(P, H) {
                var ce = W(P, H),
                    Me = P === ce ? {} : P,
                    tt = new ce(Me, L),
                    Gt = _(L, i.result(tt, "behaviors"));
                return [tt].concat(Gt)
            }).flatten().value()
        }
        var he = {
                _initBehaviors: function() {
                    this._behaviors = this._getBehaviors()
                },
                _getBehaviors: function() {
                    var f = i.result(this, "behaviors");
                    return i.isObject(f) ? _(this, f) : {}
                },
                _getBehaviorTriggers: function() {
                    var f = N(this._behaviors, "getTriggers");
                    return i.reduce(f, function(P, H) {
                        return i.extend(P, H)
                    }, {})
                },
                _getBehaviorEvents: function() {
                    var f = N(this._behaviors, "getEvents");
                    return i.reduce(f, function(P, H) {
                        return i.extend(P, H)
                    }, {})
                },
                _proxyBehaviorViewProperties: function() {
                    N(this._behaviors, "proxyViewProperties")
                },
                _delegateBehaviorEntityEvents: function() {
                    N(this._behaviors, "delegateEntityEvents")
                },
                _undelegateBehaviorEntityEvents: function() {
                    N(this._behaviors, "undelegateEntityEvents")
                },
                _destroyBehaviors: function() {
                    for (var f = arguments.length, P = Array(f), H = 0; H < f; H++) P[H] = arguments[H];
                    N.apply(void 0, [this._behaviors, "destroy"].concat(P))
                },
                _removeBehavior: function(f) {
                    this._isDestroyed || (this.undelegate(".trig" + f.cid + " ." + f.cid), this._behaviors = i.without(this._behaviors, f))
                },
                _bindBehaviorUIElements: function() {
                    N(this._behaviors, "bindUIElements")
                },
                _unbindBehaviorUIElements: function() {
                    N(this._behaviors, "unbindUIElements")
                },
                _triggerEventOnBehaviors: function() {
                    for (var f = this._behaviors, P = 0, H = f && f.length; P < H; P++) h.apply(f[P], arguments)
                }
            },
            Pe = {
                _delegateEntityEvents: function(f, P) {
                    var H = i.result(this, "modelEvents");
                    H && (Le.call(this, f, H), Te.call(this, f, H));
                    var ce = i.result(this, "collectionEvents");
                    ce && (Le.call(this, P, ce), Te.call(this, P, ce))
                },
                _undelegateEntityEvents: function(f, P) {
                    var H = i.result(this, "modelEvents");
                    Le.call(this, f, H);
                    var ce = i.result(this, "collectionEvents");
                    Le.call(this, P, ce)
                }
            },
            xe = /^(\S+)\s*(.*)$/,
            Qe = function(f, P) {
                var H = f.match(xe);
                return H[1] + "." + P + " " + H[2]
            },
            He = {
                childViewEventPrefix: !0,
                triggersStopPropagation: !0,
                triggersPreventDefault: !0
            };

        function pt(L) {
            return !!He[L]
        }

        function Lt(L, f) {
            return He[L] = f
        }

        function yn(L, f) {
            i.isString(f) && (f = {
                event: f
            });
            var P = f.event,
                H = !!f.preventDefault;
            pt("triggersPreventDefault") && (H = f.preventDefault !== !1);
            var ce = !!f.stopPropagation;
            return pt("triggersStopPropagation") && (ce = f.stopPropagation !== !1),
                function(Me) {
                    H && Me.preventDefault(), ce && Me.stopPropagation(), L.triggerMethod(P, L, Me)
                }
        }
        var mt = {
                _getViewTriggers: function(f, P) {
                    var H = this;
                    return i.reduce(P, function(ce, Me, tt) {
                        return tt = Qe(tt, "trig" + H.cid), ce[tt] = yn(f, Me), ce
                    }, {})
                }
            },
            Dt = function(f, P) {
                return i.reduce(f, function(H, ce, Me) {
                    var tt = Et(Me, P);
                    return H[tt] = ce, H
                }, {})
            },
            Et = function(f, P) {
                return f.replace(/@ui\.[a-zA-Z-_$0-9]*/g, function(H) {
                    return P[H.slice(4)]
                })
            },
            cn = function L(f, P, H) {
                return i.each(f, function(ce, Me) {
                    i.isString(ce) ? f[Me] = Et(ce, P) : i.isObject(ce) && i.isArray(H) && (i.extend(ce, L(i.pick(ce, H), P)), i.each(H, function(tt) {
                        var Gt = ce[tt];
                        i.isString(Gt) && (ce[tt] = Et(Gt, P))
                    }))
                }), f
            },
            rt = {
                normalizeUIKeys: function(f) {
                    var P = this._getUIBindings();
                    return Dt(f, P)
                },
                normalizeUIString: function(f) {
                    var P = this._getUIBindings();
                    return Et(f, P)
                },
                normalizeUIValues: function(f, P) {
                    var H = this._getUIBindings();
                    return cn(f, H, P)
                },
                _getUIBindings: function() {
                    var f = i.result(this, "_uiBindings"),
                        P = i.result(this, "ui");
                    return f || P
                },
                _bindUIElements: function() {
                    var f = this;
                    if (!!this.ui) {
                        this._uiBindings || (this._uiBindings = this.ui);
                        var P = i.result(this, "_uiBindings");
                        this._ui = {}, i.each(P, function(H, ce) {
                            f._ui[ce] = f.$(H)
                        }), this.ui = this._ui
                    }
                },
                _unbindUIElements: function() {
                    var f = this;
                    !this.ui || !this._uiBindings || (i.each(this.ui, function(P, H) {
                        delete f.ui[H]
                    }), this.ui = this._uiBindings, delete this._uiBindings, delete this._ui)
                },
                _getUI: function(f) {
                    return this._ui[f]
                }
            };

        function Kt(L) {
            return L instanceof n.$ ? L : n.$(L)
        }

        function ee(L) {
            return this.prototype.Dom = i.extend({}, this.prototype.Dom, L), this
        }
        var Z = {
                createBuffer: function() {
                    return document.createDocumentFragment()
                },
                getEl: function(f) {
                    return Kt(f)
                },
                findEl: function(f, P) {
                    var H = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Kt(f);
                    return H.find(P)
                },
                hasEl: function(f, P) {
                    return f.contains(P && P.parentNode)
                },
                detachEl: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Kt(f);
                    P.detach()
                },
                replaceEl: function(f, P) {
                    if (f !== P) {
                        var H = P.parentNode;
                        !H || H.replaceChild(f, P)
                    }
                },
                swapEl: function(f, P) {
                    if (f !== P) {
                        var H = f.parentNode,
                            ce = P.parentNode;
                        if (!(!H || !ce)) {
                            var Me = f.nextSibling,
                                tt = P.nextSibling;
                            H.insertBefore(P, Me), ce.insertBefore(f, tt)
                        }
                    }
                },
                setContents: function(f, P) {
                    var H = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Kt(f);
                    H.html(P)
                },
                appendContents: function(f, P) {
                    var H = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
                        ce = H._$el,
                        Me = ce === void 0 ? Kt(f) : ce,
                        tt = H._$contents,
                        Gt = tt === void 0 ? Kt(P) : tt;
                    Me.append(Gt)
                },
                hasContents: function(f) {
                    return !!f && f.hasChildNodes()
                },
                detachContents: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Kt(f);
                    P.contents().detach()
                }
            },
            le = {
                Dom: Z,
                supportsRenderLifecycle: !0,
                supportsDestroyLifecycle: !0,
                _isDestroyed: !1,
                isDestroyed: function() {
                    return !!this._isDestroyed
                },
                _isRendered: !1,
                isRendered: function() {
                    return !!this._isRendered
                },
                _isAttached: !1,
                isAttached: function() {
                    return !!this._isAttached
                },
                delegateEvents: function(f) {
                    this._proxyBehaviorViewProperties(), this._buildEventProxies();
                    var P = this._getEvents(f);
                    typeof f > "u" && (this.events = P);
                    var H = i.extend({}, this._getBehaviorEvents(), P, this._getBehaviorTriggers(), this.getTriggers());
                    return n.View.prototype.delegateEvents.call(this, H), this
                },
                _getEvents: function(f) {
                    var P = f || this.events;
                    return i.isFunction(P) ? this.normalizeUIKeys(P.call(this)) : this.normalizeUIKeys(P)
                },
                getTriggers: function() {
                    if (!!this.triggers) {
                        var f = this.normalizeUIKeys(i.result(this, "triggers"));
                        return this._getViewTriggers(this, f)
                    }
                },
                delegateEntityEvents: function() {
                    return this._delegateEntityEvents(this.model, this.collection), this._delegateBehaviorEntityEvents(), this
                },
                undelegateEntityEvents: function() {
                    return this._undelegateEntityEvents(this.model, this.collection), this._undelegateBehaviorEntityEvents(), this
                },
                destroy: function() {
                    if (this._isDestroyed) return this;
                    for (var f = this._isAttached && !this._shouldDisableEvents, P = arguments.length, H = Array(P), ce = 0; ce < P; ce++) H[ce] = arguments[ce];
                    return this.triggerMethod.apply(this, ["before:destroy", this].concat(H)), f && this.triggerMethod("before:detach", this), this.unbindUIElements(), this._removeElement(), f && (this._isAttached = !1, this.triggerMethod("detach", this)), this._removeChildren(), this._isDestroyed = !0, this._isRendered = !1, this._destroyBehaviors.apply(this, H), this.triggerMethod.apply(this, ["destroy", this].concat(H)), this.stopListening(), this
                },
                _removeElement: function() {
                    this.$el.off().removeData(), this.Dom.detachEl(this.el, this.$el)
                },
                bindUIElements: function() {
                    return this._bindUIElements(), this._bindBehaviorUIElements(), this
                },
                unbindUIElements: function() {
                    return this._unbindUIElements(), this._unbindBehaviorUIElements(), this
                },
                getUI: function(f) {
                    return this._getUI(f)
                },
                childViewEventPrefix: function() {
                    return pt("childViewEventPrefix") ? "childview" : !1
                },
                triggerMethod: function() {
                    var f = h.apply(this, arguments);
                    return this._triggerEventOnBehaviors.apply(this, arguments), f
                },
                _buildEventProxies: function() {
                    this._childViewEvents = i.result(this, "childViewEvents"), this._childViewTriggers = i.result(this, "childViewTriggers")
                },
                _proxyChildViewEvents: function(f) {
                    this.listenTo(f, "all", this._childViewEventHandler)
                },
                _childViewEventHandler: function(f) {
                    for (var P = this.normalizeMethods(this._childViewEvents), H = arguments.length, ce = Array(H > 1 ? H - 1 : 0), Me = 1; Me < H; Me++) ce[Me - 1] = arguments[Me];
                    typeof P < "u" && i.isFunction(P[f]) && P[f].apply(this, ce);
                    var tt = this._childViewTriggers;
                    tt && i.isString(tt[f]) && this.triggerMethod.apply(this, [tt[f]].concat(ce));
                    var Gt = i.result(this, "childViewEventPrefix");
                    if (Gt !== !1) {
                        var Vn = Gt + ":" + f;
                        this.triggerMethod.apply(this, [Vn].concat(ce))
                    }
                }
            };
        i.extend(le, he, Pt, Pe, mt, rt);

        function K(L) {
            L._isRendered || (L.supportsRenderLifecycle || w(L, "before:render", L), L.render(), L.supportsRenderLifecycle || (L._isRendered = !0, w(L, "render", L)))
        }

        function Ve(L) {
            if (L.destroy) {
                L.destroy();
                return
            }
            L.supportsDestroyLifecycle || w(L, "before:destroy", L);
            var f = L._isAttached && !L._shouldDisableEvents;
            f && w(L, "before:detach", L), L.remove(), f && (L._isAttached = !1, w(L, "detach", L)), L._isDestroyed = !0, L.supportsDestroyLifecycle || w(L, "destroy", L)
        }
        var Re = ["allowMissingEl", "parentEl", "replaceElement"],
            De = R.extend({
                Dom: Z,
                cidPrefix: "mnr",
                replaceElement: !1,
                _isReplaced: !1,
                _isSwappingView: !1,
                constructor: function(f) {
                    if (this._setOptions(f), this.mergeOptions(f, Re), this._initEl = this.el = this.getOption("el"), this.el = this.el instanceof n.$ ? this.el[0] : this.el, !this.el) throw new fe({
                        name: "NoElError",
                        message: 'An "el" must be specified for a region.'
                    });
                    this.$el = this.getEl(this.el), R.call(this, f)
                },
                show: function(f, P) {
                    if (!!this._ensureElement(P)) return f = this._getView(f, P), f === this.currentView ? this : (this._isSwappingView = !!this.currentView, this.triggerMethod("before:show", this, f, P), f._isAttached || this.empty(P), this._setupChildView(f), this.currentView = f, K(f), this._attachView(f, P), this.triggerMethod("show", this, f, P), this._isSwappingView = !1, this)
                },
                _setupChildView: function(f) {
                    re(f), this._proxyChildViewEvents(f), f.on("destroy", this._empty, this)
                },
                _proxyChildViewEvents: function(f) {
                    var P = this._parentView;
                    !P || P._proxyChildViewEvents(f)
                },
                _shouldDisableMonitoring: function() {
                    return this._parentView && this._parentView.monitorViewEvents === !1
                },
                _attachView: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        H = !f._isAttached && d(this.el) && !this._shouldDisableMonitoring(),
                        ce = typeof P.replaceElement > "u" ? !!i.result(this, "replaceElement") : !!P.replaceElement;
                    H && w(f, "before:attach", f), ce ? this._replaceEl(f) : this.attachHtml(f), H && (f._isAttached = !0, w(f, "attach", f))
                },
                _ensureElement: function() {
                    var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    if (i.isObject(this.el) || (this.$el = this.getEl(this.el), this.el = this.$el[0], this.$el = this.Dom.getEl(this.el)), !this.$el || this.$el.length === 0) {
                        var P = typeof f.allowMissingEl > "u" ? !!i.result(this, "allowMissingEl") : !!f.allowMissingEl;
                        if (P) return !1;
                        throw new fe('An "el" must exist in DOM for this region ' + this.cid)
                    }
                    return !0
                },
                _getView: function(f) {
                    if (!f) throw new fe({
                        name: "ViewNotValid",
                        message: "The view passed is undefined and therefore invalid. You must pass a view instance to show."
                    });
                    if (f._isDestroyed) throw new fe({
                        name: "ViewDestroyedError",
                        message: 'View (cid: "' + f.cid + '") has already been destroyed and cannot be used.'
                    });
                    if (f instanceof n.View) return f;
                    var P = this._getViewOptions(f);
                    return new bi(P)
                },
                _getViewOptions: function(f) {
                    if (i.isFunction(f)) return {
                        template: f
                    };
                    if (i.isObject(f)) return f;
                    var P = function() {
                        return f
                    };
                    return {
                        template: P
                    }
                },
                getEl: function(f) {
                    var P = i.result(this, "parentEl");
                    return P && i.isString(f) ? this.Dom.findEl(P, f) : this.Dom.getEl(f)
                },
                _replaceEl: function(f) {
                    this._restoreEl(), f.on("before:destroy", this._restoreEl, this), this.Dom.replaceEl(f.el, this.el), this._isReplaced = !0
                },
                _restoreEl: function() {
                    if (!!this._isReplaced) {
                        var f = this.currentView;
                        !f || (this._detachView(f), this._isReplaced = !1)
                    }
                },
                isReplaced: function() {
                    return !!this._isReplaced
                },
                isSwappingView: function() {
                    return !!this._isSwappingView
                },
                attachHtml: function(f) {
                    this.Dom.appendContents(this.el, f.el, {
                        _$el: this.$el,
                        _$contents: f.$el
                    })
                },
                empty: function() {
                    var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
                            allowMissingEl: !0
                        },
                        P = this.currentView;
                    if (!P) return this._ensureElement(f) && this.detachHtml(), this;
                    var H = !f.preventDestroy;
                    return H || c("The preventDestroy option is deprecated. Use Region#detachView"), this._empty(P, H), this
                },
                _empty: function(f, P) {
                    f.off("destroy", this._empty, this), this.triggerMethod("before:empty", this, f), this._restoreEl(), delete this.currentView, f._isDestroyed || (P ? this.removeView(f) : this._detachView(f), this._stopChildViewEvents(f)), this.triggerMethod("empty", this, f)
                },
                _stopChildViewEvents: function(f) {
                    var P = this._parentView;
                    !P || this._parentView.stopListening(f)
                },
                destroyView: function(f) {
                    return f._isDestroyed || (f._shouldDisableEvents = this._shouldDisableMonitoring(), Ve(f)), f
                },
                removeView: function(f) {
                    this.destroyView(f)
                },
                detachView: function() {
                    var f = this.currentView;
                    if (!!f) return this._empty(f), f
                },
                _detachView: function(f) {
                    var P = f._isAttached && !this._shouldDisableMonitoring(),
                        H = this._isReplaced;
                    P && w(f, "before:detach", f), H ? this.Dom.replaceEl(this.el, f.el) : this.detachHtml(), P && (f._isAttached = !1, w(f, "detach", f))
                },
                detachHtml: function() {
                    this.Dom.detachContents(this.el, this.$el)
                },
                hasView: function() {
                    return !!this.currentView
                },
                reset: function(f) {
                    return this.empty(f), this.$el && (this.el = this._initEl), delete this.$el, this
                },
                destroy: function(f) {
                    return this._isDestroyed ? this : (this.reset(f), this._name && this._parentView._removeReferences(this._name), delete this._parentView, delete this._name, R.prototype.destroy.apply(this, arguments))
                }
            }, {
                setDomApi: ee
            }),
            Ke = function(L, f) {
                return L instanceof De ? L : We(L, f)
            };

        function We(L, f) {
            var P = i.extend({}, f);
            if (i.isString(L)) return i.extend(P, {
                el: L
            }), bt(P);
            if (i.isFunction(L)) return i.extend(P, {
                regionClass: L
            }), bt(P);
            if (i.isObject(L)) return L.selector && c("The selector option on a Region definition object is deprecated. Use el to pass a selector string"), i.extend(P, {
                el: L.selector
            }, L), bt(P);
            throw new fe({
                message: "Improper region configuration type.",
                url: "marionette.region.html#region-configuration-types"
            })
        }

        function bt(L) {
            var f = L.regionClass,
                P = i.omit(L, "regionClass");
            return new f(P)
        }
        var tn = {
                regionClass: De,
                _initRegions: function() {
                    this.regions = this.regions || {}, this._regions = {}, this.addRegions(i.result(this, "regions"))
                },
                _reInitRegions: function() {
                    N(this._regions, "reset")
                },
                addRegion: function(f, P) {
                    var H = {};
                    return H[f] = P, this.addRegions(H)[f]
                },
                addRegions: function(f) {
                    if (!i.isEmpty(f)) return f = this.normalizeUIValues(f, ["selector", "el"]), this.regions = i.extend({}, this.regions, f), this._addRegions(f)
                },
                _addRegions: function(f) {
                    var P = this,
                        H = {
                            regionClass: this.regionClass,
                            parentEl: i.partial(i.result, this, "el")
                        };
                    return i.reduce(f, function(ce, Me, tt) {
                        return ce[tt] = Ke(Me, H), P._addRegion(ce[tt], tt), ce
                    }, {})
                },
                _addRegion: function(f, P) {
                    this.triggerMethod("before:add:region", this, P, f), f._parentView = this, f._name = P, this._regions[P] = f, this.triggerMethod("add:region", this, P, f)
                },
                removeRegion: function(f) {
                    var P = this._regions[f];
                    return this._removeRegion(P, f), P
                },
                removeRegions: function() {
                    var f = this._getRegions();
                    return i.each(this._regions, i.bind(this._removeRegion, this)), f
                },
                _removeRegion: function(f, P) {
                    this.triggerMethod("before:remove:region", this, P, f), f.destroy(), this.triggerMethod("remove:region", this, P, f)
                },
                _removeReferences: function(f) {
                    delete this.regions[f], delete this._regions[f]
                },
                emptyRegions: function() {
                    var f = this.getRegions();
                    return N(f, "empty"), f
                },
                hasRegion: function(f) {
                    return !!this.getRegion(f)
                },
                getRegion: function(f) {
                    return this._isRendered || this.render(), this._regions[f]
                },
                _getRegions: function() {
                    return i.clone(this._regions)
                },
                getRegions: function() {
                    return this._isRendered || this.render(), this._getRegions()
                },
                showChildView: function(f, P) {
                    for (var H = this.getRegion(f), ce = arguments.length, Me = Array(ce > 2 ? ce - 2 : 0), tt = 2; tt < ce; tt++) Me[tt - 2] = arguments[tt];
                    return H.show.apply(H, [P].concat(Me))
                },
                detachChildView: function(f) {
                    return this.getRegion(f).detachView()
                },
                getChildView: function(f) {
                    return this.getRegion(f).currentView
                }
            },
            ot = {
                render: function(f, P) {
                    if (!f) throw new fe({
                        name: "TemplateNotFoundError",
                        message: "Cannot render the template since its false, null or undefined."
                    });
                    var H = i.isFunction(f) ? f : j.get(f);
                    return H(P)
                }
            },
            ui = ["behaviors", "childViewEventPrefix", "childViewEvents", "childViewTriggers", "collectionEvents", "events", "modelEvents", "regionClass", "regions", "template", "templateContext", "triggers", "ui"],
            bi = n.View.extend({
                constructor: function(f) {
                    this.render = i.bind(this.render, this), this._setOptions(f), this.mergeOptions(f, ui), re(this), this._initBehaviors(), this._initRegions();
                    var P = Array.prototype.slice.call(arguments);
                    P[0] = this.options, n.View.prototype.constructor.apply(this, P), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                serializeData: function() {
                    return !this.model && !this.collection ? {} : this.model ? this.serializeModel() : {
                        items: this.serializeCollection()
                    }
                },
                serializeModel: function() {
                    return this.model ? i.clone(this.model.attributes) : {}
                },
                serializeCollection: function() {
                    return this.collection ? this.collection.map(function(f) {
                        return i.clone(f.attributes)
                    }) : {}
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isRendered = this.Dom.hasContents(this.el), this._isAttached = d(this.el), this._isRendered && this.bindUIElements(), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._isRendered && this._reInitRegions(), this._renderTemplate(), this.bindUIElements(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                _renderTemplate: function() {
                    var f = this.getTemplate();
                    if (f === !1) {
                        c("template:false is deprecated.  Use _.noop.");
                        return
                    }
                    var P = this.mixinTemplateContext(this.serializeData()),
                        H = this._renderHtml(f, P);
                    this.attachElContent(H)
                },
                _renderHtml: function(f, P) {
                    return ot.render(f, P, this)
                },
                getTemplate: function() {
                    return this.template
                },
                mixinTemplateContext: function() {
                    var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        P = i.result(this, "templateContext");
                    return i.extend(f, P)
                },
                attachElContent: function(f) {
                    return this.Dom.setContents(this.el, f, this.$el), this
                },
                _removeChildren: function() {
                    this.removeRegions()
                },
                _getImmediateChildren: function() {
                    return i.chain(this._getRegions()).map("currentView").compact().value()
                }
            }, {
                setRenderer: function(f) {
                    return this.prototype._renderHtml = f, this
                },
                setDomApi: ee
            });
        i.extend(bi.prototype, le, tn);
        var ht = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck", "reduce", "partition"],
            mi = function(f, P) {
                i.each(ht, function(H) {
                    f[H] = function() {
                        var ce = i.result(this, P),
                            Me = Array.prototype.slice.call(arguments);
                        return i[H].apply(i, [ce].concat(Me))
                    }
                })
            },
            Is = function(f) {
                this._views = {}, this._indexByModel = {}, this._indexByCustom = {}, this._updateLength(), i.each(f, i.bind(this.add, this))
            };
        mi(Is.prototype, "_getViews"), i.extend(Is.prototype, {
            _getViews: function() {
                return i.values(this._views)
            },
            add: function(f, P) {
                return this._add(f, P)._updateLength()
            },
            _add: function(f, P) {
                var H = f.cid;
                return this._views[H] = f, f.model && (this._indexByModel[f.model.cid] = H), P && (this._indexByCustom[P] = H), this
            },
            findByModel: function(f) {
                return this.findByModelCid(f.cid)
            },
            findByModelCid: function(f) {
                var P = this._indexByModel[f];
                return this.findByCid(P)
            },
            findByCustom: function(f) {
                var P = this._indexByCustom[f];
                return this.findByCid(P)
            },
            findByIndex: function(f) {
                return i.values(this._views)[f]
            },
            findByCid: function(f) {
                return this._views[f]
            },
            remove: function(f) {
                return this._remove(f)._updateLength()
            },
            _remove: function(f) {
                var P = f.cid;
                return f.model && delete this._indexByModel[f.model.cid], i.some(this._indexByCustom, i.bind(function(H, ce) {
                    if (H === P) return delete this._indexByCustom[ce], !0
                }, this)), delete this._views[P], this
            },
            _updateLength: function() {
                return this.length = i.size(this._views), this
            }
        });
        var za = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "events", "filter", "emptyView", "emptyViewOptions", "modelEvents", "reorderOnSort", "sort", "triggers", "ui", "viewComparator"],
            si = n.View.extend({
                sort: !0,
                constructor: function(f) {
                    this.render = i.bind(this.render, this), this._setOptions(f), this.mergeOptions(f, za), re(this), this._initBehaviors(), this.once("render", this._initialEvents), this._initChildViewStorage(), this._bufferedChildren = [];
                    var P = Array.prototype.slice.call(arguments);
                    P[0] = this.options, n.View.prototype.constructor.apply(this, P), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                _startBuffering: function() {
                    this._isBuffering = !0
                },
                _endBuffering: function() {
                    var f = this._isAttached && this.monitorViewEvents !== !1,
                        P = f ? this._getImmediateChildren() : [];
                    this._isBuffering = !1, i.each(P, function(H) {
                        w(H, "before:attach", H)
                    }), this.attachBuffer(this, this._createBuffer()), i.each(P, function(H) {
                        H._isAttached = !0, w(H, "attach", H)
                    }), this._bufferedChildren = []
                },
                _getImmediateChildren: function() {
                    return i.values(this.children._views)
                },
                _initialEvents: function() {
                    this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.render), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                },
                _onCollectionAdd: function(f, P, H) {
                    var ce = H.at !== void 0 && (H.index || P.indexOf(f));
                    (this.filter || ce === !1) && (ce = i.indexOf(this._filteredSortedModels(ce), f)), this._shouldAddChild(f, ce) && (this._destroyEmptyView(), this._addChild(f, ce))
                },
                _onCollectionUpdate: function(f, P) {
                    var H = P.changes;
                    this._removeChildModels(H.removed)
                },
                _removeChildModels: function(f) {
                    var P = this._getRemovedViews(f);
                    !P.length || (this.children._updateLength(), this._updateIndices(P, !1), this.isEmpty() && this._showEmptyView())
                },
                _getRemovedViews: function(f) {
                    var P = this;
                    return i.reduce(f, function(H, ce) {
                        var Me = ce && P.children.findByModel(ce);
                        return !Me || Me._isDestroyed || (P._removeChildView(Me), H.push(Me)), H
                    }, [])
                },
                _removeChildView: function(f) {
                    this.triggerMethod("before:remove:child", this, f), this.children._remove(f), f._shouldDisableEvents = this.monitorViewEvents === !1, Ve(f), this.stopListening(f), this.triggerMethod("remove:child", this, f)
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isAttached = d(this.el), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._renderChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                setFilter: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        H = P.preventRender,
                        ce = this._isRendered && !this._isDestroyed,
                        Me = this.filter !== f,
                        tt = ce && Me && !H;
                    if (tt) {
                        var Gt = this._filteredSortedModels();
                        this.filter = f;
                        var Vn = this._filteredSortedModels();
                        this._applyModelDeltas(Vn, Gt)
                    } else this.filter = f;
                    return this
                },
                removeFilter: function(f) {
                    return this.setFilter(null, f)
                },
                _applyModelDeltas: function(f, P) {
                    var H = this,
                        ce = {};
                    i.each(f, function(tt, Gt) {
                        var Vn = !H.children.findByModel(tt);
                        Vn && H._onCollectionAdd(tt, H.collection, {
                            at: Gt
                        }), ce[tt.cid] = !0
                    });
                    var Me = i.filter(P, function(tt) {
                        return !ce[tt.cid] && H.children.findByModel(tt)
                    });
                    this._removeChildModels(Me)
                },
                reorder: function() {
                    var f = this,
                        P = this.children,
                        H = this._filteredSortedModels();
                    if (!H.length && this._showingEmptyView) return this;
                    var ce = i.some(H, function(Vn) {
                        return !P.findByModel(Vn)
                    });
                    if (ce) this.render();
                    else {
                        var Me = [],
                            tt = i.reduce(this.children._views, function(Vn, Fi) {
                                var vi = i.indexOf(H, Fi.model);
                                return vi === -1 ? (Me.push(Fi.model), Vn) : (Fi._index = vi, Vn[vi] = Fi.el, Vn)
                            }, new Array(H.length));
                        this.triggerMethod("before:reorder", this);
                        var Gt = this.Dom.createBuffer();
                        i.each(tt, function(Vn) {
                            f.Dom.appendContents(Gt, Vn)
                        }), this._appendReorderedChildren(Gt), this._removeChildModels(Me), this.triggerMethod("reorder", this)
                    }
                    return this
                },
                resortView: function() {
                    return this.reorderOnSort ? this.reorder() : this._renderChildren(), this
                },
                _sortViews: function() {
                    var f = this,
                        P = this._filteredSortedModels(),
                        H = i.find(P, function(ce, Me) {
                            var tt = f.children.findByModel(ce);
                            return !tt || tt._index !== Me
                        });
                    H && this.resortView()
                },
                _emptyViewIndex: -1,
                _appendReorderedChildren: function(f) {
                    this.Dom.appendContents(this.el, f, {
                        _$el: this.$el
                    })
                },
                _renderChildren: function() {
                    this._isRendered && (this._destroyEmptyView(), this._destroyChildren());
                    var f = this._filteredSortedModels();
                    this.isEmpty({
                        processedModels: f
                    }) ? this._showEmptyView() : (this.triggerMethod("before:render:children", this), this._startBuffering(), this._showCollection(f), this._endBuffering(), this.triggerMethod("render:children", this))
                },
                _createView: function(f, P) {
                    var H = this._getChildView(f),
                        ce = this._getChildViewOptions(f, P),
                        Me = this.buildChildView(f, H, ce);
                    return Me
                },
                _setupChildView: function(f, P) {
                    re(f), this._proxyChildViewEvents(f), this.sort && (f._index = P)
                },
                _showCollection: function(f) {
                    i.each(f, i.bind(this._addChild, this)), this.children._updateLength()
                },
                _filteredSortedModels: function(f) {
                    if (!this.collection || !this.collection.length) return [];
                    var P = this.getViewComparator(),
                        H = this.collection.models;
                    if (f = Math.min(Math.max(f, 0), H.length - 1), P) {
                        var ce = void 0;
                        f && (ce = H[f], H = H.slice(0, f).concat(H.slice(f + 1))), H = this._sortModelsBy(H, P), ce && H.splice(f, 0, ce)
                    }
                    return H = this._filterModels(H), H
                },
                getViewComparator: function() {
                    return this.viewComparator
                },
                _filterModels: function(f) {
                    var P = this;
                    return this.filter && (f = i.filter(f, function(H, ce) {
                        return P._shouldAddChild(H, ce)
                    })), f
                },
                _sortModelsBy: function(f, P) {
                    return typeof P == "string" ? i.sortBy(f, function(H) {
                        return H.get(P)
                    }) : P.length === 1 ? i.sortBy(f, i.bind(P, this)) : i.clone(f).sort(i.bind(P, this))
                },
                _showEmptyView: function() {
                    var f = this._getEmptyView();
                    if (f && !this._showingEmptyView) {
                        this._showingEmptyView = !0;
                        var P = new n.Model,
                            H = this.emptyViewOptions || this.childViewOptions;
                        i.isFunction(H) && (H = H.call(this, P, this._emptyViewIndex));
                        var ce = this.buildChildView(P, f, H);
                        this.triggerMethod("before:render:empty", this, ce), this.addChildView(ce, 0), this.triggerMethod("render:empty", this, ce)
                    }
                },
                _destroyEmptyView: function() {
                    this._showingEmptyView && (this.triggerMethod("before:remove:empty", this), this._destroyChildren(), delete this._showingEmptyView, this.triggerMethod("remove:empty", this))
                },
                _getEmptyView: function() {
                    var f = this.emptyView;
                    if (!!f) return this._getView(f)
                },
                _getChildView: function(f) {
                    var P = this.childView;
                    if (!P) throw new fe({
                        name: "NoChildViewError",
                        message: 'A "childView" must be specified'
                    });
                    if (P = this._getView(P, f), !P) throw new fe({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return P
                },
                _getView: function(f, P) {
                    if (f.prototype instanceof n.View || f === n.View) return f;
                    if (i.isFunction(f)) return f.call(this, P)
                },
                _addChild: function(f, P) {
                    var H = this._createView(f, P);
                    return this.addChildView(H, P), H
                },
                _getChildViewOptions: function(f, P) {
                    return i.isFunction(this.childViewOptions) ? this.childViewOptions(f, P) : this.childViewOptions
                },
                addChildView: function(f, P) {
                    return this.triggerMethod("before:add:child", this, f), this._setupChildView(f, P), this._isBuffering ? this.children._add(f) : (this._updateIndices(f, !0), this.children.add(f)), K(f), this._attachView(f, P), this.triggerMethod("add:child", this, f), f
                },
                _updateIndices: function(f, P) {
                    if (!!this.sort) {
                        if (!P) {
                            i.each(i.sortBy(this.children._views, "_index"), function(ce, Me) {
                                ce._index = Me
                            });
                            return
                        }
                        var H = i.isArray(f) ? i.max(f, "_index") : f;
                        i.isObject(H) && i.each(this.children._views, function(ce) {
                            ce._index >= H._index && (ce._index += 1)
                        })
                    }
                },
                _attachView: function(f, P) {
                    var H = !f._isAttached && !this._isBuffering && this._isAttached && this.monitorViewEvents !== !1;
                    H && w(f, "before:attach", f), this.attachHtml(this, f, P), H && (f._isAttached = !0, w(f, "attach", f))
                },
                buildChildView: function(f, P, H) {
                    var ce = i.extend({
                        model: f
                    }, H);
                    return new P(ce)
                },
                removeChildView: function(f) {
                    return !f || f._isDestroyed || (this._removeChildView(f), this.children._updateLength(), this._updateIndices(f, !1)), f
                },
                isEmpty: function(f) {
                    var P = void 0;
                    return i.result(f, "processedModels") ? P = f.processedModels : (P = this.collection ? this.collection.models : [], P = this._filterModels(P)), P.length === 0
                },
                attachBuffer: function(f, P) {
                    this.Dom.appendContents(f.el, P, {
                        _$el: f.$el
                    })
                },
                _createBuffer: function() {
                    var f = this,
                        P = this.Dom.createBuffer();
                    return i.each(this._bufferedChildren, function(H) {
                        f.Dom.appendContents(P, H.el, {
                            _$contents: H.$el
                        })
                    }), P
                },
                attachHtml: function(f, P, H) {
                    f._isBuffering ? f._bufferedChildren.splice(H, 0, P) : f._insertBefore(P, H) || f._insertAfter(P)
                },
                _insertBefore: function(f, P) {
                    var H = void 0,
                        ce = this.sort && P < this.children.length - 1;
                    return ce && (H = i.find(this.children._views, function(Me) {
                        return Me._index === P + 1
                    })), H ? (this.beforeEl(H.el, f.el), !0) : !1
                },
                beforeEl: function(f, P) {
                    this.$(f).before(P)
                },
                _insertAfter: function(f) {
                    this.Dom.appendContents(this.el, f.el, {
                        _$el: this.$el,
                        _$contents: f.$el
                    })
                },
                _initChildViewStorage: function() {
                    this.children = new Is
                },
                _removeChildren: function() {
                    this._destroyChildren()
                },
                _destroyChildren: function(f) {
                    !this.children.length || (this.triggerMethod("before:destroy:children", this), i.each(this.children._views, i.bind(this._removeChildView, this)), this.children._updateLength(), this.triggerMethod("destroy:children", this))
                },
                _shouldAddChild: function(f, P) {
                    var H = this.filter;
                    return !i.isFunction(H) || H.call(this, f, P, this.collection)
                }
            }, {
                setDomApi: ee
            });
        i.extend(si.prototype, le);
        var bn = function() {
            this._init()
        };
        mi(bn.prototype, "_views");

        function Ha(L, f) {
            return f.model && f.model.get(L)
        }
        i.extend(bn.prototype, {
            _init: function() {
                this._views = [], this._viewsByCid = {}, this._indexByModel = {}, this._updateLength()
            },
            _add: function(f) {
                var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this._views.length,
                    H = f.cid;
                this._viewsByCid[H] = f, f.model && (this._indexByModel[f.model.cid] = H), this._views.splice(P, 0, f), this._updateLength()
            },
            _sort: function(f, P) {
                return typeof f == "string" ? (f = i.partial(Ha, f), this._sortBy(f)) : f.length === 1 ? this._sortBy(i.bind(f, P)) : this._views.sort(i.bind(f, P))
            },
            _sortBy: function(f) {
                var P = i.sortBy(this._views, f);
                return this._set(P), P
            },
            _set: function(f) {
                this._views.length = 0, this._views.push.apply(this._views, f.slice(0)), this._updateLength()
            },
            _swap: function(f, P) {
                var H = this.findIndexByView(f),
                    ce = this.findIndexByView(P);
                if (!(H === -1 || ce === -1)) {
                    var Me = this._views[H];
                    this._views[H] = this._views[ce], this._views[ce] = Me
                }
            },
            findByModel: function(f) {
                return this.findByModelCid(f.cid)
            },
            findByModelCid: function(f) {
                var P = this._indexByModel[f];
                return this.findByCid(P)
            },
            findByIndex: function(f) {
                return this._views[f]
            },
            findIndexByView: function(f) {
                return this._views.indexOf(f)
            },
            findByCid: function(f) {
                return this._viewsByCid[f]
            },
            hasView: function(f) {
                return !!this.findByCid(f.cid)
            },
            _remove: function(f) {
                if (!!this._viewsByCid[f.cid]) {
                    f.model && delete this._indexByModel[f.model.cid], delete this._viewsByCid[f.cid];
                    var P = this.findIndexByView(f);
                    this._views.splice(P, 1), this._updateLength()
                }
            },
            _updateLength: function() {
                this.length = this._views.length
            }
        });
        var Na = ["behaviors", "childView", "childViewEventPrefix", "childViewEvents", "childViewOptions", "childViewTriggers", "collectionEvents", "emptyView", "emptyViewOptions", "events", "modelEvents", "sortWithCollection", "triggers", "ui", "viewComparator", "viewFilter"],
            Ps = n.View.extend({
                sortWithCollection: !0,
                constructor: function(f) {
                    this._setOptions(f), this.mergeOptions(f, Na), re(this), this.once("render", this._initialEvents), this._initChildViewStorage(), this._initBehaviors();
                    var P = Array.prototype.slice.call(arguments);
                    P[0] = this.options, n.View.prototype.constructor.apply(this, P), this.getEmptyRegion(), this.delegateEntityEvents(), this._triggerEventOnBehaviors("initialize", this)
                },
                _initChildViewStorage: function() {
                    this.children = new bn
                },
                getEmptyRegion: function() {
                    return this._emptyRegion && !this._emptyRegion.isDestroyed() ? this._emptyRegion : (this._emptyRegion = new De({
                        el: this.el,
                        replaceElement: !1
                    }), this._emptyRegion._parentView = this, this._emptyRegion)
                },
                _initialEvents: function() {
                    this.listenTo(this.collection, {
                        sort: this._onCollectionSort,
                        reset: this._onCollectionReset,
                        update: this._onCollectionUpdate
                    })
                },
                _onCollectionSort: function(f, P) {
                    var H = P.add,
                        ce = P.merge,
                        Me = P.remove;
                    !this.sortWithCollection || this.viewComparator === !1 || H || Me || ce || this.sort()
                },
                _onCollectionReset: function() {
                    this.render()
                },
                _onCollectionUpdate: function(f, P) {
                    var H = P.changes,
                        ce = H.removed.length && this._removeChildModels(H.removed);
                    this._addedViews = H.added.length && this._addChildModels(H.added), this._detachChildren(ce), this._showChildren(), this._removeChildViews(ce)
                },
                _removeChildModels: function(f) {
                    var P = this;
                    return i.reduce(f, function(H, ce) {
                        var Me = P._removeChildModel(ce);
                        return Me && H.push(Me), H
                    }, [])
                },
                _removeChildModel: function(f) {
                    var P = this.children.findByModel(f);
                    return P && this._removeChild(P), P
                },
                _removeChild: function(f) {
                    this.triggerMethod("before:remove:child", this, f), this.children._remove(f), this.triggerMethod("remove:child", this, f)
                },
                _addChildModels: function(f) {
                    return i.map(f, i.bind(this._addChildModel, this))
                },
                _addChildModel: function(f) {
                    var P = this._createChildView(f);
                    return this._addChild(P), P
                },
                _createChildView: function(f) {
                    var P = this._getChildView(f),
                        H = this._getChildViewOptions(f),
                        ce = this.buildChildView(f, P, H);
                    return ce
                },
                _addChild: function(f, P) {
                    this.triggerMethod("before:add:child", this, f), this._setupChildView(f), this.children._add(f, P), this.triggerMethod("add:child", this, f)
                },
                _getChildView: function(f) {
                    var P = this.childView;
                    if (!P) throw new fe({
                        name: "NoChildViewError",
                        message: 'A "childView" must be specified'
                    });
                    if (P = this._getView(P, f), !P) throw new fe({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return P
                },
                _getView: function(f, P) {
                    if (f.prototype instanceof n.View || f === n.View) return f;
                    if (i.isFunction(f)) return f.call(this, P)
                },
                _getChildViewOptions: function(f) {
                    return i.isFunction(this.childViewOptions) ? this.childViewOptions(f) : this.childViewOptions
                },
                buildChildView: function(f, P, H) {
                    var ce = i.extend({
                        model: f
                    }, H);
                    return new P(ce)
                },
                _setupChildView: function(f) {
                    re(f), f.on("destroy", this.removeChildView, this), this._proxyChildViewEvents(f)
                },
                _getImmediateChildren: function() {
                    return this.children._views
                },
                setElement: function() {
                    return n.View.prototype.setElement.apply(this, arguments), this._isAttached = d(this.el), this
                },
                render: function() {
                    return this._isDestroyed ? this : (this.triggerMethod("before:render", this), this._destroyChildren(), this.children._init(), this.collection && this._addChildModels(this.collection.models), this._showChildren(), this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                sort: function() {
                    return this._isDestroyed ? this : this.children.length ? (this._showChildren(), this) : this
                },
                _showChildren: function() {
                    if (this.isEmpty()) {
                        this._showEmptyView();
                        return
                    }
                    this._sortChildren(), this.filter()
                },
                isEmpty: function(f) {
                    return f || !this.children.length
                },
                _showEmptyView: function() {
                    var f = this._getEmptyView();
                    if (!!f) {
                        var P = this._getEmptyViewOptions(),
                            H = this.getEmptyRegion();
                        H.show(new f(P))
                    }
                },
                _getEmptyView: function() {
                    var f = this.emptyView;
                    if (!!f) return this._getView(f)
                },
                _destroyEmptyView: function() {
                    var f = this.getEmptyRegion();
                    f.hasView() && f.empty()
                },
                _getEmptyViewOptions: function() {
                    var f = this.emptyViewOptions || this.childViewOptions;
                    return i.isFunction(f) ? f.call(this) : f
                },
                _sortChildren: function() {
                    var f = this.getComparator();
                    !f || (delete this._addedViews, this.triggerMethod("before:sort", this), this.children._sort(f, this), this.triggerMethod("sort", this))
                },
                setComparator: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        H = P.preventRender,
                        ce = this.viewComparator !== f,
                        Me = ce && !H;
                    return this.viewComparator = f, Me && this.sort(), this
                },
                removeComparator: function(f) {
                    return this.setComparator(null, f)
                },
                getComparator: function() {
                    return this.viewComparator ? this.viewComparator : !this.sortWithCollection || this.viewComparator === !1 || !this.collection ? !1 : this._viewComparator
                },
                _viewComparator: function(f) {
                    return this.collection.indexOf(f.model)
                },
                filter: function() {
                    if (this._isDestroyed) return this;
                    if (!this.children.length) return this;
                    var f = this._filterChildren();
                    return this._renderChildren(f), this
                },
                _filterChildren: function() {
                    var f = this,
                        P = this._getFilter(),
                        H = this._addedViews;
                    if (delete this._addedViews, !P) return H || this.children._views;
                    this.triggerMethod("before:filter", this);
                    var ce = [],
                        Me = [];
                    return i.each(this.children._views, function(tt, Gt, Vn) {
                        (P.call(f, tt, Gt, Vn) ? ce : Me).push(tt)
                    }), this._detachChildren(Me), this.triggerMethod("filter", this, ce, Me), ce
                },
                _getFilter: function() {
                    var f = this.getFilter();
                    if (!f) return !1;
                    if (i.isFunction(f)) return f;
                    if (i.isObject(f)) {
                        var P = i.matches(f);
                        return function(H) {
                            return P(H.model && H.model.attributes)
                        }
                    }
                    if (i.isString(f)) return function(H) {
                        return H.model && H.model.get(f)
                    };
                    throw new fe({
                        name: "InvalidViewFilterError",
                        message: '"viewFilter" must be a function, predicate object literal, a string indicating a model attribute, or falsy'
                    })
                },
                getFilter: function() {
                    return this.viewFilter
                },
                setFilter: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        H = P.preventRender,
                        ce = this.viewFilter !== f,
                        Me = ce && !H;
                    return this.viewFilter = f, Me && this.filter(), this
                },
                removeFilter: function(f) {
                    return this.setFilter(null, f)
                },
                _detachChildren: function(f) {
                    i.each(f, i.bind(this._detachChildView, this))
                },
                _detachChildView: function(f) {
                    var P = f._isAttached && this.monitorViewEvents !== !1;
                    P && w(f, "before:detach", f), this.detachHtml(f), P && (f._isAttached = !1, w(f, "detach", f))
                },
                detachHtml: function(f) {
                    this.Dom.detachEl(f.el, f.$el)
                },
                _renderChildren: function(f) {
                    if (this.isEmpty(!f.length)) {
                        this._showEmptyView();
                        return
                    }
                    this._destroyEmptyView(), this.triggerMethod("before:render:children", this, f);
                    var P = this._getBuffer(f);
                    this._attachChildren(P, f), this.triggerMethod("render:children", this, f)
                },
                _attachChildren: function(f, P) {
                    var H = this._isAttached && this.monitorViewEvents !== !1;
                    P = H ? P : [], i.each(P, function(ce) {
                        ce._isAttached || w(ce, "before:attach", ce)
                    }), this.attachHtml(f), i.each(P, function(ce) {
                        ce._isAttached || (ce._isAttached = !0, w(ce, "attach", ce))
                    })
                },
                _getBuffer: function(f) {
                    var P = this,
                        H = this.Dom.createBuffer();
                    return i.each(f, function(ce) {
                        K(ce), P.Dom.appendContents(H, ce.el, {
                            _$contents: ce.$el
                        })
                    }), H
                },
                attachHtml: function(f) {
                    this.Dom.appendContents(this.el, f, {
                        _$el: this.$el
                    })
                },
                swapChildViews: function(f, P) {
                    if (!this.children.hasView(f) || !this.children.hasView(P)) throw new fe({
                        name: "ChildSwapError",
                        message: "Both views must be children of the collection view"
                    });
                    return this.children._swap(f, P), this.Dom.swapEl(f.el, P.el), this.Dom.hasEl(this.el, f.el) !== this.Dom.hasEl(this.el, P.el) && this.filter(), this
                },
                addChildView: function(f, P) {
                    return !f || f._isDestroyed || ((!P || P >= this.children.length) && (this._addedViews = [f]), this._addChild(f, P), this._showChildren()), f
                },
                detachChildView: function(f) {
                    return this.removeChildView(f, {
                        shouldDetach: !0
                    }), f
                },
                removeChildView: function(f, P) {
                    return f && (this._removeChildView(f, P), this._removeChild(f), this.isEmpty() && this._showEmptyView(), f)
                },
                _removeChildViews: function(f) {
                    i.each(f, i.bind(this._removeChildView, this))
                },
                _removeChildView: function(f) {
                    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        H = P.shouldDetach;
                    f.off("destroy", this.removeChildView, this), H ? this._detachChildView(f) : this._destroyChildView(f), this.stopListening(f)
                },
                _destroyChildView: function(f) {
                    f._isDestroyed || (f._shouldDisableEvents = this.monitorViewEvents === !1, Ve(f))
                },
                _removeChildren: function() {
                    this._destroyChildren();
                    var f = this.getEmptyRegion();
                    f.destroy(), delete this._addedViews
                },
                _destroyChildren: function() {
                    !this.children || !this.children.length || (this.triggerMethod("before:destroy:children", this), this.monitorViewEvents === !1 && this.Dom.detachContents(this.el, this.$el), i.each(this.children._views, i.bind(this._removeChildView, this)), this.triggerMethod("destroy:children", this))
                }
            }, {
                setDomApi: ee
            });
        i.extend(Ps.prototype, le);
        var vo = ["childViewContainer", "template", "templateContext"],
            Us = si.extend({
                constructor: function(f) {
                    c("CompositeView is deprecated. Convert to View at your earliest convenience"), this.mergeOptions(f, vo), si.prototype.constructor.apply(this, arguments)
                },
                _initialEvents: function() {
                    this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "update", this._onCollectionUpdate), this.listenTo(this.collection, "reset", this.renderChildren), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
                },
                _getChildView: function(f) {
                    var P = this.childView;
                    if (!P) return this.constructor;
                    if (P = this._getView(P, f), !P) throw new fe({
                        name: "InvalidChildViewError",
                        message: '"childView" must be a view class or a function that returns a view class'
                    });
                    return P
                },
                serializeData: function() {
                    return this.serializeModel()
                },
                render: function() {
                    return this._isDestroyed ? this : (this._isRendering = !0, this.resetChildViewContainer(), this.triggerMethod("before:render", this), this._renderTemplate(), this.bindUIElements(), this.renderChildren(), this._isRendering = !1, this._isRendered = !0, this.triggerMethod("render", this), this)
                },
                renderChildren: function() {
                    (this._isRendered || this._isRendering) && si.prototype._renderChildren.call(this)
                },
                attachBuffer: function(f, P) {
                    var H = this.getChildViewContainer(f);
                    this.Dom.appendContents(H[0], P, {
                        _$el: H
                    })
                },
                _insertAfter: function(f) {
                    var P = this.getChildViewContainer(this, f);
                    this.Dom.appendContents(P[0], f.el, {
                        _$el: P,
                        _$contents: f.$el
                    })
                },
                _appendReorderedChildren: function(f) {
                    var P = this.getChildViewContainer(this);
                    this.Dom.appendContents(P[0], f, {
                        _$el: P
                    })
                },
                getChildViewContainer: function(f, P) {
                    if (f.$childViewContainer) return f.$childViewContainer;
                    var H = void 0,
                        ce = f.childViewContainer;
                    if (ce) {
                        var Me = i.result(f, "childViewContainer");
                        if (Me.charAt(0) === "@" && f.ui ? H = f.ui[Me.substr(4)] : H = this.$(Me), H.length <= 0) throw new fe({
                            name: "ChildViewContainerMissingError",
                            message: 'The specified "childViewContainer" was not found: ' + f.childViewContainer
                        })
                    } else H = f.$el;
                    return f.$childViewContainer = H, H
                },
                resetChildViewContainer: function() {
                    this.$childViewContainer && (this.$childViewContainer = void 0)
                }
            }),
            Fs = i.pick(bi.prototype, "serializeModel", "getTemplate", "_renderTemplate", "_renderHtml", "mixinTemplateContext", "attachElContent");
        i.extend(Us.prototype, Fs);
        var wo = ["collectionEvents", "events", "modelEvents", "triggers", "ui"],
            xo = R.extend({
                cidPrefix: "mnb",
                constructor: function(f, P) {
                    this.view = P, this.defaults && c("Behavior defaults are deprecated. For similar functionality set options on the Behavior class."), this.defaults = i.clone(i.result(this, "defaults", {})), this._setOptions(i.extend({}, this.defaults, f)), this.mergeOptions(this.options, wo), this.ui = i.extend({}, i.result(this, "ui"), i.result(P, "ui")), R.apply(this, arguments)
                },
                $: function() {
                    return this.view.$.apply(this.view, arguments)
                },
                destroy: function() {
                    return this.stopListening(), this.view._removeBehavior(this), this
                },
                proxyViewProperties: function() {
                    return this.$el = this.view.$el, this.el = this.view.el, this
                },
                bindUIElements: function() {
                    return this._bindUIElements(), this
                },
                unbindUIElements: function() {
                    return this._unbindUIElements(), this
                },
                getUI: function(f) {
                    return this._getUI(f)
                },
                delegateEntityEvents: function() {
                    return this._delegateEntityEvents(this.view.model, this.view.collection), this
                },
                undelegateEntityEvents: function() {
                    return this._undelegateEntityEvents(this.view.model, this.view.collection), this
                },
                getEvents: function() {
                    var f = this,
                        P = this.normalizeUIKeys(i.result(this, "events"));
                    return i.reduce(P, function(H, ce, Me) {
                        return i.isFunction(ce) || (ce = f[ce]), ce && (Me = Qe(Me, f.cid), H[Me] = i.bind(ce, f)), H
                    }, {})
                },
                getTriggers: function() {
                    if (!!this.triggers) {
                        var f = this.normalizeUIKeys(i.result(this, "triggers"));
                        return this._getViewTriggers(this.view, f)
                    }
                }
            });
        i.extend(xo.prototype, Pe, mt, rt);
        var On = ["region", "regionClass"],
            ko = R.extend({
                cidPrefix: "mna",
                constructor: function(f) {
                    this._setOptions(f), this.mergeOptions(f, On), this._initRegion(), R.prototype.constructor.apply(this, arguments)
                },
                regionClass: De,
                _initRegion: function() {
                    var f = this.region;
                    if (!!f) {
                        var P = {
                            regionClass: this.regionClass
                        };
                        this._region = Ke(f, P)
                    }
                },
                getRegion: function() {
                    return this._region
                },
                showView: function(f) {
                    for (var P = this.getRegion(), H = arguments.length, ce = Array(H > 1 ? H - 1 : 0), Me = 1; Me < H; Me++) ce[Me - 1] = arguments[Me];
                    return P.show.apply(P, [f].concat(ce))
                },
                getView: function() {
                    return this.getRegion().currentView
                },
                start: function(f) {
                    return this.triggerMethod("before:start", this, f), this.triggerMethod("start", this, f), this
                }
            }),
            js = ["appRoutes", "controller"],
            Ui = n.Router.extend({
                constructor: function(f) {
                    this._setOptions(f), this.mergeOptions(f, js), n.Router.apply(this, arguments);
                    var P = this.appRoutes,
                        H = this._getController();
                    this.processAppRoutes(H, P), this.on("route", this._processOnRoute, this)
                },
                appRoute: function(f, P) {
                    var H = this._getController();
                    return this._addAppRoute(H, f, P), this
                },
                _processOnRoute: function(f, P) {
                    if (i.isFunction(this.onRoute)) {
                        var H = i.invert(this.appRoutes)[f];
                        this.onRoute(f, H, P)
                    }
                },
                processAppRoutes: function(f, P) {
                    var H = this;
                    if (!P) return this;
                    var ce = i.keys(P).reverse();
                    return i.each(ce, function(Me) {
                        H._addAppRoute(f, Me, P[Me])
                    }), this
                },
                _getController: function() {
                    return this.controller
                },
                _addAppRoute: function(f, P, H) {
                    var ce = f[H];
                    if (!ce) throw new fe('Method "' + H + '" was not found on the controller');
                    this.route(P, H, i.bind(ce, f))
                },
                triggerMethod: h
            });
        i.extend(Ui.prototype, Pt);

        function Co() {
            throw new fe({
                message: "You must define where your behaviors are stored.",
                url: "marionette.behaviors.md#behaviorslookup"
            })
        }
        var Qs = n.Marionette,
            lt = n.Marionette = {};
        return lt.noConflict = function() {
            return n.Marionette = Qs, this
        }, lt.bindEvents = V(Te), lt.unbindEvents = V(Le), lt.bindRequests = V(Xe), lt.unbindRequests = V(nt), lt.mergeOptions = V(m), lt.getOption = V(q), lt.normalizeMethods = V(v), lt.extend = A, lt.isNodeAttached = d, lt.deprecate = c, lt.triggerMethod = V(h), lt.triggerMethodOn = w, lt.isEnabled = pt, lt.setEnabled = Lt, lt.monitorViewEvents = re, lt.Behaviors = {}, lt.Behaviors.behaviorsLookup = Co, lt.Application = ko, lt.AppRouter = Ui, lt.Renderer = ot, lt.TemplateCache = j, lt.View = bi, lt.CollectionView = si, lt.NextCollectionView = Ps, lt.CompositeView = Us, lt.Behavior = xo, lt.Region = De, lt.Error = fe, lt.Object = R, lt.DEV_MODE = !1, lt.FEATURES = He, lt.VERSION = r, lt.DomApi = Z, lt.setDomApi = function(L) {
            si.setDomApi(L), Us.setDomApi(L), Ps.setDomApi(L), De.setDomApi(L), bi.setDomApi(L)
        }, lt
    }), Ct && Ct.Marionette && (Ct.Mn = Ct.Marionette)
})(ag);
const je = ag.exports;
class _b {
    static setup() {
        gtag("config", "G-V1QJVQMYF1", {
            send_page_view: !1
        })
    }
    static pageView(e) {
        gtag("event", "page_view", {
            page_title: e,
            page_location: `https://jackbox.tv/${e}`
        })
    }
    static gameStarted(e, n) {
        const i = {
            tag: e
        };
        n.isUGC !== void 0 && (i.is_ugc = n.isUGC), n.isSequel !== void 0 && (i.is_sequel = n.isSequel), n.locale !== void 0 && (i.locale = n.locale), n.mode !== void 0 && (i.mode = n.mode), n.numberOfPlayer !== void 0 && (i.number_of_players = n.numberOfPlayer), gtag("event", "game_start", i)
    }
    static bannerClick(e, n) {
        gtag("event", "banner_click", {
            url: e,
            location: n
        })
    }
    static externalLinkClick(e, n) {
        gtag("event", "external_link_click", {
            url: e,
            location: n
        })
    }
    static galleryClick(e, n) {
        gtag("event", "gallery_click", {
            category_id: e,
            location: n
        })
    }
    static galleryImpression(e, n) {
        gtag("event", "gallery_impression", {
            category_id: e,
            location: n
        })
    }
    static moderatorConnected(e) {
        gtag("event", "moderator_connected", {
            tag: e
        })
    }
    static itemModerated(e, n) {
        gtag("event", "item_moderated", {
            tag: e,
            was_rejected: n
        })
    }
    static playerKicked(e, n) {
        gtag("event", "player_kicked", {
            tag: e,
            is_lobby: n
        })
    }
}

function $b() {
    this.__data__ = [], this.size = 0
}
var ev = $b;

function tv(t, e) {
    return t === e || t !== t && e !== e
}
var nA = tv,
    nv = nA;

function iv(t, e) {
    for (var n = t.length; n--;)
        if (nv(t[n][0], e)) return n;
    return -1
}
var iA = iv,
    sv = iA,
    ov = Array.prototype,
    av = ov.splice;

function rv(t) {
    var e = this.__data__,
        n = sv(e, t);
    if (n < 0) return !1;
    var i = e.length - 1;
    return n == i ? e.pop() : av.call(e, n, 1), --this.size, !0
}
var Vv = rv,
    lv = iA;

function Av(t) {
    var e = this.__data__,
        n = lv(e, t);
    return n < 0 ? void 0 : e[n][1]
}
var cv = Av,
    dv = iA;

function pv(t) {
    return dv(this.__data__, t) > -1
}
var hv = pv,
    uv = iA;

function mv(t, e) {
    var n = this.__data__,
        i = uv(n, t);
    return i < 0 ? (++this.size, n.push([t, e])) : n[i][1] = e, this
}
var fv = mv,
    qv = ev,
    gv = Vv,
    yv = cv,
    bv = hv,
    vv = fv;

function Ra(t) {
    var e = -1,
        n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n;) {
        var i = t[e];
        this.set(i[0], i[1])
    }
}
Ra.prototype.clear = qv;
Ra.prototype.delete = gv;
Ra.prototype.get = yv;
Ra.prototype.has = bv;
Ra.prototype.set = vv;
var sA = Ra,
    wv = sA;

function xv() {
    this.__data__ = new wv, this.size = 0
}
var kv = xv;

function Cv(t) {
    var e = this.__data__,
        n = e.delete(t);
    return this.size = e.size, n
}
var Rv = Cv;

function Dv(t) {
    return this.__data__.get(t)
}
var Sv = Dv;

function Tv(t) {
    return this.__data__.has(t)
}
var Ev = Tv,
    Lv = typeof Ct == "object" && Ct && Ct.Object === Object && Ct,
    rg = Lv,
    Bv = rg,
    Mv = typeof self == "object" && self && self.Object === Object && self,
    Ov = Bv || Mv || Function("return this")(),
    Da = Ov,
    Iv = Da,
    Pv = Iv.Symbol,
    Vg = Pv,
    rf = Vg,
    lg = Object.prototype,
    Uv = lg.hasOwnProperty,
    Fv = lg.toString,
    cr = rf ? rf.toStringTag : void 0;

function jv(t) {
    var e = Uv.call(t, cr),
        n = t[cr];
    try {
        t[cr] = void 0;
        var i = !0
    } catch {}
    var o = Fv.call(t);
    return i && (e ? t[cr] = n : delete t[cr]), o
}
var Qv = jv,
    zv = Object.prototype,
    Hv = zv.toString;

function Nv(t) {
    return Hv.call(t)
}
var Gv = Nv,
    Vf = Vg,
    Xv = Qv,
    Yv = Gv,
    Kv = "[object Null]",
    Wv = "[object Undefined]",
    lf = Vf ? Vf.toStringTag : void 0;

function Jv(t) {
    return t == null ? t === void 0 ? Wv : Kv : lf && lf in Object(t) ? Xv(t) : Yv(t)
}
var oA = Jv;

function Zv(t) {
    var e = typeof t;
    return t != null && (e == "object" || e == "function")
}
var ho = Zv,
    _v = oA,
    $v = ho,
    e5 = "[object AsyncFunction]",
    t5 = "[object Function]",
    n5 = "[object GeneratorFunction]",
    i5 = "[object Proxy]";

function s5(t) {
    if (!$v(t)) return !1;
    var e = _v(t);
    return e == t5 || e == n5 || e == e5 || e == i5
}
var uu = s5,
    o5 = Da,
    a5 = o5["__core-js_shared__"],
    r5 = a5,
    Xp = r5,
    Af = function() {
        var t = /[^.]+$/.exec(Xp && Xp.keys && Xp.keys.IE_PROTO || "");
        return t ? "Symbol(src)_1." + t : ""
    }();

function V5(t) {
    return !!Af && Af in t
}
var l5 = V5,
    A5 = Function.prototype,
    c5 = A5.toString;

function d5(t) {
    if (t != null) {
        try {
            return c5.call(t)
        } catch {}
        try {
            return t + ""
        } catch {}
    }
    return ""
}
var p5 = d5,
    h5 = uu,
    u5 = l5,
    m5 = ho,
    f5 = p5,
    q5 = /[\\^$.*+?()[\]{}|]/g,
    g5 = /^\[object .+?Constructor\]$/,
    y5 = Function.prototype,
    b5 = Object.prototype,
    v5 = y5.toString,
    w5 = b5.hasOwnProperty,
    x5 = RegExp("^" + v5.call(w5).replace(q5, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");

function k5(t) {
    if (!m5(t) || u5(t)) return !1;
    var e = h5(t) ? x5 : g5;
    return e.test(f5(t))
}
var C5 = k5;

function R5(t, e) {
    return t == null ? void 0 : t[e]
}
var D5 = R5,
    S5 = C5,
    T5 = D5;

function E5(t, e) {
    var n = T5(t, e);
    return S5(n) ? n : void 0
}
var mu = E5,
    L5 = mu,
    B5 = Da,
    M5 = L5(B5, "Map"),
    Ag = M5,
    O5 = mu,
    I5 = O5(Object, "create"),
    aA = I5,
    cf = aA;

function P5() {
    this.__data__ = cf ? cf(null) : {}, this.size = 0
}
var U5 = P5;

function F5(t) {
    var e = this.has(t) && delete this.__data__[t];
    return this.size -= e ? 1 : 0, e
}
var j5 = F5,
    Q5 = aA,
    z5 = "__lodash_hash_undefined__",
    H5 = Object.prototype,
    N5 = H5.hasOwnProperty;

function G5(t) {
    var e = this.__data__;
    if (Q5) {
        var n = e[t];
        return n === z5 ? void 0 : n
    }
    return N5.call(e, t) ? e[t] : void 0
}
var X5 = G5,
    Y5 = aA,
    K5 = Object.prototype,
    W5 = K5.hasOwnProperty;

function J5(t) {
    var e = this.__data__;
    return Y5 ? e[t] !== void 0 : W5.call(e, t)
}
var Z5 = J5,
    _5 = aA,
    $5 = "__lodash_hash_undefined__";

function ew(t, e) {
    var n = this.__data__;
    return this.size += this.has(t) ? 0 : 1, n[t] = _5 && e === void 0 ? $5 : e, this
}
var tw = ew,
    nw = U5,
    iw = j5,
    sw = X5,
    ow = Z5,
    aw = tw;

function Sa(t) {
    var e = -1,
        n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n;) {
        var i = t[e];
        this.set(i[0], i[1])
    }
}
Sa.prototype.clear = nw;
Sa.prototype.delete = iw;
Sa.prototype.get = sw;
Sa.prototype.has = ow;
Sa.prototype.set = aw;
var rw = Sa,
    df = rw,
    Vw = sA,
    lw = Ag;

function Aw() {
    this.size = 0, this.__data__ = {
        hash: new df,
        map: new(lw || Vw),
        string: new df
    }
}
var cw = Aw;

function dw(t) {
    var e = typeof t;
    return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null
}
var pw = dw,
    hw = pw;

function uw(t, e) {
    var n = t.__data__;
    return hw(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map
}
var rA = uw,
    mw = rA;

function fw(t) {
    var e = mw(this, t).delete(t);
    return this.size -= e ? 1 : 0, e
}
var qw = fw,
    gw = rA;

function yw(t) {
    return gw(this, t).get(t)
}
var bw = yw,
    vw = rA;

function ww(t) {
    return vw(this, t).has(t)
}
var xw = ww,
    kw = rA;

function Cw(t, e) {
    var n = kw(this, t),
        i = n.size;
    return n.set(t, e), this.size += n.size == i ? 0 : 1, this
}
var Rw = Cw,
    Dw = cw,
    Sw = qw,
    Tw = bw,
    Ew = xw,
    Lw = Rw;

function Ta(t) {
    var e = -1,
        n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n;) {
        var i = t[e];
        this.set(i[0], i[1])
    }
}
Ta.prototype.clear = Dw;
Ta.prototype.delete = Sw;
Ta.prototype.get = Tw;
Ta.prototype.has = Ew;
Ta.prototype.set = Lw;
var Bw = Ta,
    Mw = sA,
    Ow = Ag,
    Iw = Bw,
    Pw = 200;

function Uw(t, e) {
    var n = this.__data__;
    if (n instanceof Mw) {
        var i = n.__data__;
        if (!Ow || i.length < Pw - 1) return i.push([t, e]), this.size = ++n.size, this;
        n = this.__data__ = new Iw(i)
    }
    return n.set(t, e), this.size = n.size, this
}
var Fw = Uw,
    jw = sA,
    Qw = kv,
    zw = Rv,
    Hw = Sv,
    Nw = Ev,
    Gw = Fw;

function Ea(t) {
    var e = this.__data__ = new jw(t);
    this.size = e.size
}
Ea.prototype.clear = Qw;
Ea.prototype.delete = zw;
Ea.prototype.get = Hw;
Ea.prototype.has = Nw;
Ea.prototype.set = Gw;
var Xw = Ea,
    Yw = mu,
    Kw = function() {
        try {
            var t = Yw(Object, "defineProperty");
            return t({}, "", {}), t
        } catch {}
    }(),
    cg = Kw,
    pf = cg;

function Ww(t, e, n) {
    e == "__proto__" && pf ? pf(t, e, {
        configurable: !0,
        enumerable: !0,
        value: n,
        writable: !0
    }) : t[e] = n
}
var fu = Ww,
    Jw = fu,
    Zw = nA;

function _w(t, e, n) {
    (n !== void 0 && !Zw(t[e], n) || n === void 0 && !(e in t)) && Jw(t, e, n)
}
var dg = _w;

function $w(t) {
    return function(e, n, i) {
        for (var o = -1, r = Object(e), V = i(e), A = V.length; A--;) {
            var c = V[t ? A : ++o];
            if (n(r[c], c, r) === !1) break
        }
        return e
    }
}
var e3 = $w,
    t3 = e3,
    n3 = t3(),
    i3 = n3,
    Sh = {
        exports: {}
    };
(function(t, e) {
    var n = Da,
        i = e && !e.nodeType && e,
        o = i && !0 && t && !t.nodeType && t,
        r = o && o.exports === i,
        V = r ? n.Buffer : void 0,
        A = V ? V.allocUnsafe : void 0;

    function c(d, m) {
        if (m) return d.slice();
        var q = d.length,
            v = A ? A(q) : new d.constructor(q);
        return d.copy(v), v
    }
    t.exports = c
})(Sh, Sh.exports);
var s3 = Da,
    o3 = s3.Uint8Array,
    a3 = o3,
    hf = a3;

function r3(t) {
    var e = new t.constructor(t.byteLength);
    return new hf(e).set(new hf(t)), e
}
var V3 = r3,
    l3 = V3;

function A3(t, e) {
    var n = e ? l3(t.buffer) : t.buffer;
    return new t.constructor(n, t.byteOffset, t.length)
}
var c3 = A3;

function d3(t, e) {
    var n = -1,
        i = t.length;
    for (e || (e = Array(i)); ++n < i;) e[n] = t[n];
    return e
}
var p3 = d3,
    h3 = ho,
    uf = Object.create,
    u3 = function() {
        function t() {}
        return function(e) {
            if (!h3(e)) return {};
            if (uf) return uf(e);
            t.prototype = e;
            var n = new t;
            return t.prototype = void 0, n
        }
    }(),
    m3 = u3;

function f3(t, e) {
    return function(n) {
        return t(e(n))
    }
}
var q3 = f3,
    g3 = q3,
    y3 = g3(Object.getPrototypeOf, Object),
    pg = y3,
    b3 = Object.prototype;

function v3(t) {
    var e = t && t.constructor,
        n = typeof e == "function" && e.prototype || b3;
    return t === n
}
var hg = v3,
    w3 = m3,
    x3 = pg,
    k3 = hg;

function C3(t) {
    return typeof t.constructor == "function" && !k3(t) ? w3(x3(t)) : {}
}
var R3 = C3;

function D3(t) {
    return t != null && typeof t == "object"
}
var Yr = D3,
    S3 = oA,
    T3 = Yr,
    E3 = "[object Arguments]";

function L3(t) {
    return T3(t) && S3(t) == E3
}
var B3 = L3,
    mf = B3,
    M3 = Yr,
    ug = Object.prototype,
    O3 = ug.hasOwnProperty,
    I3 = ug.propertyIsEnumerable,
    P3 = mf(function() {
        return arguments
    }()) ? mf : function(t) {
        return M3(t) && O3.call(t, "callee") && !I3.call(t, "callee")
    },
    mg = P3,
    U3 = Array.isArray,
    fg = U3,
    F3 = 9007199254740991;

function j3(t) {
    return typeof t == "number" && t > -1 && t % 1 == 0 && t <= F3
}
var qg = j3,
    Q3 = uu,
    z3 = qg;

function H3(t) {
    return t != null && z3(t.length) && !Q3(t)
}
var qu = H3,
    N3 = qu,
    G3 = Yr;

function X3(t) {
    return G3(t) && N3(t)
}
var Y3 = X3,
    Ml = {
        exports: {}
    };

function K3() {
    return !1
}
var W3 = K3;
(function(t, e) {
    var n = Da,
        i = W3,
        o = e && !e.nodeType && e,
        r = o && !0 && t && !t.nodeType && t,
        V = r && r.exports === o,
        A = V ? n.Buffer : void 0,
        c = A ? A.isBuffer : void 0,
        d = c || i;
    t.exports = d
})(Ml, Ml.exports);
var J3 = oA,
    Z3 = pg,
    _3 = Yr,
    $3 = "[object Object]",
    ex = Function.prototype,
    tx = Object.prototype,
    gg = ex.toString,
    nx = tx.hasOwnProperty,
    ix = gg.call(Object);

function sx(t) {
    if (!_3(t) || J3(t) != $3) return !1;
    var e = Z3(t);
    if (e === null) return !0;
    var n = nx.call(e, "constructor") && e.constructor;
    return typeof n == "function" && n instanceof n && gg.call(n) == ix
}
var ox = sx,
    ax = oA,
    rx = qg,
    Vx = Yr,
    lx = "[object Arguments]",
    Ax = "[object Array]",
    cx = "[object Boolean]",
    dx = "[object Date]",
    px = "[object Error]",
    hx = "[object Function]",
    ux = "[object Map]",
    mx = "[object Number]",
    fx = "[object Object]",
    qx = "[object RegExp]",
    gx = "[object Set]",
    yx = "[object String]",
    bx = "[object WeakMap]",
    vx = "[object ArrayBuffer]",
    wx = "[object DataView]",
    xx = "[object Float32Array]",
    kx = "[object Float64Array]",
    Cx = "[object Int8Array]",
    Rx = "[object Int16Array]",
    Dx = "[object Int32Array]",
    Sx = "[object Uint8Array]",
    Tx = "[object Uint8ClampedArray]",
    Ex = "[object Uint16Array]",
    Lx = "[object Uint32Array]",
    Yt = {};
Yt[xx] = Yt[kx] = Yt[Cx] = Yt[Rx] = Yt[Dx] = Yt[Sx] = Yt[Tx] = Yt[Ex] = Yt[Lx] = !0;
Yt[lx] = Yt[Ax] = Yt[vx] = Yt[cx] = Yt[wx] = Yt[dx] = Yt[px] = Yt[hx] = Yt[ux] = Yt[mx] = Yt[fx] = Yt[qx] = Yt[gx] = Yt[yx] = Yt[bx] = !1;

function Bx(t) {
    return Vx(t) && rx(t.length) && !!Yt[ax(t)]
}
var Mx = Bx;

function Ox(t) {
    return function(e) {
        return t(e)
    }
}
var Ix = Ox,
    Th = {
        exports: {}
    };
(function(t, e) {
    var n = rg,
        i = e && !e.nodeType && e,
        o = i && !0 && t && !t.nodeType && t,
        r = o && o.exports === i,
        V = r && n.process,
        A = function() {
            try {
                var c = o && o.require && o.require("util").types;
                return c || V && V.binding && V.binding("util")
            } catch {}
        }();
    t.exports = A
})(Th, Th.exports);
var Px = Mx,
    Ux = Ix,
    ff = Th.exports,
    qf = ff && ff.isTypedArray,
    Fx = qf ? Ux(qf) : Px,
    yg = Fx;

function jx(t, e) {
    if (!(e === "constructor" && typeof t[e] == "function") && e != "__proto__") return t[e]
}
var bg = jx,
    Qx = fu,
    zx = nA,
    Hx = Object.prototype,
    Nx = Hx.hasOwnProperty;

function Gx(t, e, n) {
    var i = t[e];
    (!(Nx.call(t, e) && zx(i, n)) || n === void 0 && !(e in t)) && Qx(t, e, n)
}
var Xx = Gx,
    Yx = Xx,
    Kx = fu;

function Wx(t, e, n, i) {
    var o = !n;
    n || (n = {});
    for (var r = -1, V = e.length; ++r < V;) {
        var A = e[r],
            c = i ? i(n[A], t[A], A, n, t) : void 0;
        c === void 0 && (c = t[A]), o ? Kx(n, A, c) : Yx(n, A, c)
    }
    return n
}
var Jx = Wx;

function Zx(t, e) {
    for (var n = -1, i = Array(t); ++n < t;) i[n] = e(n);
    return i
}
var _x = Zx,
    $x = 9007199254740991,
    e4 = /^(?:0|[1-9]\d*)$/;

function t4(t, e) {
    var n = typeof t;
    return e = e == null ? $x : e, !!e && (n == "number" || n != "symbol" && e4.test(t)) && t > -1 && t % 1 == 0 && t < e
}
var vg = t4,
    n4 = _x,
    i4 = mg,
    s4 = fg,
    o4 = Ml.exports,
    a4 = vg,
    r4 = yg,
    V4 = Object.prototype,
    l4 = V4.hasOwnProperty;

function A4(t, e) {
    var n = s4(t),
        i = !n && i4(t),
        o = !n && !i && o4(t),
        r = !n && !i && !o && r4(t),
        V = n || i || o || r,
        A = V ? n4(t.length, String) : [],
        c = A.length;
    for (var d in t)(e || l4.call(t, d)) && !(V && (d == "length" || o && (d == "offset" || d == "parent") || r && (d == "buffer" || d == "byteLength" || d == "byteOffset") || a4(d, c))) && A.push(d);
    return A
}
var c4 = A4;

function d4(t) {
    var e = [];
    if (t != null)
        for (var n in Object(t)) e.push(n);
    return e
}
var p4 = d4,
    h4 = ho,
    u4 = hg,
    m4 = p4,
    f4 = Object.prototype,
    q4 = f4.hasOwnProperty;

function g4(t) {
    if (!h4(t)) return m4(t);
    var e = u4(t),
        n = [];
    for (var i in t) i == "constructor" && (e || !q4.call(t, i)) || n.push(i);
    return n
}
var y4 = g4,
    b4 = c4,
    v4 = y4,
    w4 = qu;

function x4(t) {
    return w4(t) ? b4(t, !0) : v4(t)
}
var wg = x4,
    k4 = Jx,
    C4 = wg;

function R4(t) {
    return k4(t, C4(t))
}
var D4 = R4,
    gf = dg,
    S4 = Sh.exports,
    T4 = c3,
    E4 = p3,
    L4 = R3,
    yf = mg,
    bf = fg,
    B4 = Y3,
    M4 = Ml.exports,
    O4 = uu,
    I4 = ho,
    P4 = ox,
    U4 = yg,
    vf = bg,
    F4 = D4;

function j4(t, e, n, i, o, r, V) {
    var A = vf(t, n),
        c = vf(e, n),
        d = V.get(c);
    if (d) {
        gf(t, n, d);
        return
    }
    var m = r ? r(A, c, n + "", t, e, V) : void 0,
        q = m === void 0;
    if (q) {
        var v = bf(c),
            D = !v && M4(c),
            S = !v && !D && U4(c);
        m = c, v || D || S ? bf(A) ? m = A : B4(A) ? m = E4(A) : D ? (q = !1, m = S4(c, !0)) : S ? (q = !1, m = T4(c, !0)) : m = [] : P4(c) || yf(c) ? (m = A, yf(A) ? m = F4(A) : (!I4(A) || O4(A)) && (m = L4(c))) : q = !1
    }
    q && (V.set(c, m), o(m, c, i, r, V), V.delete(c)), gf(t, n, m)
}
var Q4 = j4,
    z4 = Xw,
    H4 = dg,
    N4 = i3,
    G4 = Q4,
    X4 = ho,
    Y4 = wg,
    K4 = bg;

function xg(t, e, n, i, o) {
    t !== e && N4(e, function(r, V) {
        if (o || (o = new z4), X4(r)) G4(t, e, V, n, xg, i, o);
        else {
            var A = i ? i(K4(t, V), r, V + "", t, e, o) : void 0;
            A === void 0 && (A = r), H4(t, V, A)
        }
    }, Y4)
}
var W4 = xg;

function J4(t) {
    return t
}
var kg = J4;

function Z4(t, e, n) {
    switch (n.length) {
        case 0:
            return t.call(e);
        case 1:
            return t.call(e, n[0]);
        case 2:
            return t.call(e, n[0], n[1]);
        case 3:
            return t.call(e, n[0], n[1], n[2])
    }
    return t.apply(e, n)
}
var _4 = Z4,
    $4 = _4,
    wf = Math.max;

function e7(t, e, n) {
    return e = wf(e === void 0 ? t.length - 1 : e, 0),
        function() {
            for (var i = arguments, o = -1, r = wf(i.length - e, 0), V = Array(r); ++o < r;) V[o] = i[e + o];
            o = -1;
            for (var A = Array(e + 1); ++o < e;) A[o] = i[o];
            return A[e] = n(V), $4(t, this, A)
        }
}
var t7 = e7;

function n7(t) {
    return function() {
        return t
    }
}
var i7 = n7,
    s7 = i7,
    xf = cg,
    o7 = kg,
    a7 = xf ? function(t, e) {
        return xf(t, "toString", {
            configurable: !0,
            enumerable: !1,
            value: s7(e),
            writable: !0
        })
    } : o7,
    r7 = a7,
    V7 = 800,
    l7 = 16,
    A7 = Date.now;

function c7(t) {
    var e = 0,
        n = 0;
    return function() {
        var i = A7(),
            o = l7 - (i - n);
        if (n = i, o > 0) {
            if (++e >= V7) return arguments[0]
        } else e = 0;
        return t.apply(void 0, arguments)
    }
}
var d7 = c7,
    p7 = r7,
    h7 = d7,
    u7 = h7(p7),
    m7 = u7,
    f7 = kg,
    q7 = t7,
    g7 = m7;

function y7(t, e) {
    return g7(q7(t, e, f7), t + "")
}
var b7 = y7,
    v7 = nA,
    w7 = qu,
    x7 = vg,
    k7 = ho;

function C7(t, e, n) {
    if (!k7(n)) return !1;
    var i = typeof e;
    return (i == "number" ? w7(n) && x7(e, n.length) : i == "string" && e in n) ? v7(n[e], t) : !1
}
var R7 = C7,
    D7 = b7,
    S7 = R7;

function T7(t) {
    return D7(function(e, n) {
        var i = -1,
            o = n.length,
            r = o > 1 ? n[o - 1] : void 0,
            V = o > 2 ? n[2] : void 0;
        for (r = t.length > 3 && typeof r == "function" ? (o--, r) : void 0, V && S7(n[0], n[1], V) && (r = o < 3 ? void 0 : r, o = 1), e = Object(e); ++i < o;) {
            var A = n[i];
            A && t(e, A, i, r)
        }
        return e
    })
}
var E7 = T7,
    L7 = W4,
    B7 = E7,
    M7 = B7(function(t, e, n) {
        L7(t, e, n)
    }),
    O7 = M7;
class Eh {
    static set(e) {
        if (e && this.isSupported(e)) {
            this.locale = e;
            return
        }
        this.locale = this.getPreferredDeviceLocale()
    }
    static getPreferredDeviceLocale() {
        const e = navigator.languages;
        for (let n = 0; n < e.length; n++)
            if (this.isSupported(e[n])) return e[n];
        return this.supported[0]
    }
    static isSupported(e) {
        return Object.values(this.supported).includes(e)
    }
    static mergeMessages(...e) {
        return O7(e[0], ...e)
    }
}
at(Eh, "locale"), at(Eh, "supported", ["en", "fr", "it", "de", "es", "es-XL"]);
const sf = class {
    static get serverUrl() {
        var n;
        const e = (n = this.getQueryParam("server")) != null ? n : this.getQueryParam("s");
        return !e || e === "live" ? window.location.hostname : e === "local" ? "https://localhost" : e.includes("localhost") ? e : `${e}.jackboxgames.com`
    }
    static get isCanvasSupported() {
        const e = document.createElement("canvas");
        return !!(e.getContext && e.getContext("2d"))
    }
    static toPrecision(e, n) {
        const i = 10 ** n;
        return Math.round((e + Number.EPSILON) * i) / i
    }
    static htmlUnescape(e) {
        return String(e).replace(/&quot;/gi, '"').replace(/&#39;/gi, "'").replace(/&lt;/gi, "<").replace(/&gt;/gi, ">").replace(/&amp;/gi, "&")
    }
    static htmlEscape(e) {
        return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
    }
    static sanitize(e) {
        const n = this.sanitizeInput(e).replace(/'/g, "\u2019");
        return this.htmlEscape(n).trim()
    }
    static sanitizeName(e) {
        return e.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF\u2026!?*$+\-'_ .,]/gi, "").replace(/'/g, "\u2019")
    }
    static sanitizeInput(e) {
        return e.replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF’]/gi, "")
    }
    static sanitizeEmoji(e) {
        return e.replace(/(\u00a9|\u00ae|[\u2000-\u2017]|[\u2020-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/, "")
    }
    static safeText(e) {
        const n = document.createElement("div");
        return n.textContent = e, n.innerHTML
    }
    static htmlTagsToBBCode(e, n) {
        if (!n.length) throw new Error("[Utils.htmlTagsToBBCode] No tag pairs were passed in");
        return n.reduce((i, o) => (i.replaceAll(`<${o[0]}>`, `[${o[1]}]`), i.replaceAll(`</${o[0]}>`, `</${o[1]}>`), i), e)
    }
    static hexToRgb(e) {
        const n = new ArrayBuffer(4);
        new DataView(n).setUint32(0, parseInt(e.replace("#", ""), 16), !1);
        const o = new Uint8Array(n);
        return `${o[1]},${o[2]},${o[3]}`
    }
    static adjustColor(e, n) {
        let i = !1,
            o = e;
        o[0] === "#" && (o = o.slice(1), i = !0);
        const r = parseInt(o, 16),
            V = Math.min(Math.max(0, (r >> 16) * n), 255),
            A = Math.min(Math.max(0, (r >> 8 & 255) * n), 255);
        let d = (Math.min(Math.max(0, (r & 255) * n), 255) | A << 8 | V << 16).toString(16);
        for (; d.length < o.length;) d = `0${d}`;
        return (i ? "#" : "") + d
    }
    static isInTolerance(e, n, i) {
        return !(Math.abs(e.x - n.x) < i || Math.abs(e.y - n.y) > i)
    }
    static getDistanceBetweenPoints(e, n) {
        const i = [e.x - n.x, e.y - n.y],
            o = Math.hypot(...i);
        return Math.round(o * 100) / 100
    }
    static getMidpoint(e, n) {
        return {
            x: (e.x + n.x) / 2,
            y: (e.y + n.y) / 2
        }
    }
    static getAngleBetweenPoints(e, n) {
        let o = Math.atan2(n.y - e.y, n.x - e.x) * (180 / Math.PI);
        return o < 0 && (o += 360), 360 - o
    }
    static getAngularDistance(e, n) {
        let i = (n - e) % 360;
        const o = i < 0 ? 1 : -1;
        return i = Math.abs(i), i > 180 ? o * (360 - i) : o * i
    }
    static getVelocity(e, n, i, o) {
        return this.getDistanceBetweenPoints(e, i) / (o - n)
    }
    static isInsideElement(e, n) {
        const i = n.getBoundingClientRect();
        return !(e.x < i.left || e.x > i.left + i.width || e.y < i.top || e.y > i.top + i.height)
    }
};
let un = sf;
at(un, "queryParams", new URLSearchParams(window.location.search)), at(un, "getQueryParam", e => sf.queryParams.get(e)), at(un, "sleep", e => new Promise(n => {
    window.setTimeout(n, e)
}));
class Jt {
    static get namespace() {
        var e, n;
        return (n = (e = window.tv.storage) == null ? void 0 : e.namespace) != null ? n : this.defaultNamespace
    }
    static get isDisabled() {
        var e, n;
        return (n = (e = window.tv.storage) == null ? void 0 : e.isDisabled) != null ? n : !1
    }
    static get tag() {
        var e;
        return (e = window.tv.storage) == null ? void 0 : e.tag
    }
    static get code() {
        var e;
        return (e = window.tv.storage) == null ? void 0 : e.code
    }
    static get isSupported() {
        if (this.isDisabled) return !1;
        try {
            return window.localStorage ? (window.localStorage.setItem("support-check", "1"), window.localStorage.removeItem("support-check"), !0) : !1
        } catch {
            return !1
        }
    }
    static setup(e, n) {
        var i, o;
        delete window.tv.storage, window.tv.storage = {
            namespace: (o = (i = un.getQueryParam("namespace")) != null ? i : un.getQueryParam("ns")) != null ? o : this.defaultNamespace,
            isDisabled: un.queryParams.has("incognito") || un.queryParams.has("nc")
        }, e && (window.tv.storage.tag = e), n && (window.tv.storage.code = n.toLowerCase(), this.clearCodeScopedKeys(window.tv.storage.code)), this.migrateNamespace("blobcast", this.defaultNamespace)
    }
    static get(e, n) {
        return this.isSupported ? window.localStorage.getItem(this.getScopedKey(e, n)) : null
    }
    static set(e, n, i = "none") {
        if (!!this.isSupported) return window.localStorage.setItem(this.getScopedSetKey(e, i), n)
    }
    static remove(e, n) {
        if (!!this.isSupported) return window.localStorage.removeItem(this.getScopedKey(e, n))
    }
    static setTag(e) {
        var V;
        const n = e.toLowerCase(),
            i = (V = this.get("tags")) != null ? V : "[]",
            o = n.split("-")[0];
        let r = JSON.parse(i);
        r = r.filter(A => {
            const c = A.split("-")[0];
            return o !== c
        }), r.push(n), this.set("tags", JSON.stringify(r))
    }
    static getScopedKey(e, n) {
        const i = `${this.namespace}:${e}`,
            o = this.tag ? `${this.namespace}:${e}:tag:${this.tag}` : null,
            r = this.code ? `${this.namespace}:${e}:code:${this.code}` : null;
        if (n === "none") return i;
        if (n === "tag") {
            if (!o) throw new Error('[Storage] requested "tag" scope but tv.storage.tag is undefined');
            return o
        }
        if (n === "code") {
            if (!r) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
            return r
        }
        return r && window.localStorage.getItem(r) !== null ? r : o && window.localStorage.getItem(o) !== null ? o : i
    }
    static getScopedSetKey(e, n = "none") {
        if (n === "tag") {
            if (!this.tag) throw new Error('[Storage] requested "room" scope but tv.storage.tag is undefined');
            return `${this.namespace}:${e}:tag:${this.tag}`
        }
        if (n === "code") {
            if (!this.code) throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
            return `${this.namespace}:${e}:code:${this.code}`
        }
        return `${this.namespace}:${e}`
    }
    static clearCodeScopedKeys(e) {
        !this.isSupported || Object.keys(window.localStorage).forEach(n => {
            const i = n.split(":code:");
            i.length <= 1 || i[1] !== e && window.localStorage.removeItem(n)
        })
    }
    static migrateNamespace(e, n) {
        !this.isSupported || Object.keys(window.localStorage).forEach(i => {
            if (!i.startsWith(`${e}-`)) return;
            const o = i.replace(`${e}-`, `${n}:`),
                r = window.localStorage.getItem(i);
            !r || (window.localStorage.setItem(o, r), window.localStorage.removeItem(i))
        })
    }
}
at(Jt, "defaultNamespace", "tv");
class po {
    constructor() {
        at(this, "artifacts");
        this.artifacts = this.list()
    }
    get hasUnviewed() {
        return this.artifacts.some(e => !e.viewed)
    }
    add(e, n) {
        po.add(e, n), this.artifacts = this.list()
    }
    static add(e, n) {
        if (!Jt.isSupported) return;
        const i = this.isTestArtifact(e) ? "http" : "https",
            o = this.isTestArtifact(e) ? "games-test.jackbox.tv" : "games.jackbox.tv",
            r = `${i}://${o}/artifact/${e.categoryId}/${e.artifactId}/`,
            V = Jt.get("galleries") || "[]";
        try {
            const A = JSON.parse(V) || [];
            if (A.some(c => c.url === r)) return;
            A.unshift({
                url: r,
                time: new Date().getTime(),
                categoryId: e.categoryId,
                viewed: !1
            }), Jt.set("galleries", JSON.stringify(A.slice(0, 40)))
        } catch {
            console.warn("[Artifacts] Unable to add artifact to local storage")
        }
    }
    remove(e) {
        if (!Jt.isSupported) return;
        const n = Jt.get("galleries") || "[]";
        try {
            const i = JSON.parse(n) || [];
            i.splice(e, 1), Jt.set("galleries", JSON.stringify(i)), this.artifacts = this.list()
        } catch {
            console.warn("[Artifacts] Unable to remove artifact")
        }
    }
    setAsViewed(e) {
        po.setAsViewed(e), this.artifacts = this.list()
    }
    static setAsViewed(e) {
        if (!Jt.isSupported) return;
        const n = Jt.get("galleries") || "[]";
        try {
            const i = JSON.parse(n) || [];
            i.length && (i[e].viewed = !0), Jt.set("galleries", JSON.stringify(i))
        } catch {
            console.warn(`[Artifacts] Unable to mark artifact ${e} as viewed`)
        }
    }
    static isTestArtifact(e) {
        var n;
        return ((n = e == null ? void 0 : e.rootId) == null ? void 0 : n.indexOf("test")) !== -1
    }
    list() {
        if (!Jt.isSupported) return [];
        const e = new Intl.DateTimeFormat(Eh.locale, {
                year: "numeric",
                month: "short",
                day: "numeric"
            }),
            n = Jt.get("galleries") || "[]",
            i = Date.now();
        try {
            return (JSON.parse(n) || []).filter(r => i - r.time < 525600 * 60 * 1e3).map(r => {
                const V = new Date(r.time),
                    A = e.format(V),
                    c = r.url.split("/"),
                    d = c[c.length - 1] === "" ? c[c.length - 2] : c[c.length - 1];
                let m = r.categoryId;
                return m || (r.url.indexOf("Quiplash2") !== -1 ? m = "Quiplash2Game" : r.url.indexOf("Drawful") !== -1 ? m = "DrawfulGame" : r.url.indexOf("TeeKO") !== -1 ? m = "TeeKOGame" : r.url.indexOf("TriviaDeath") !== -1 && (m = "TriviaDeathResults")), {
                    id: d,
                    gameName: m,
                    date: A,
                    ...r
                }
            })
        } catch {
            return console.warn("[Artifacts] Unable to parse artifacts array"), []
        }
    }
}
var Lh = {
    exports: {}
};
(function(t, e) {
    var n = typeof self < "u" ? self : Ct,
        i = function() {
            function r() {
                this.fetch = !1, this.DOMException = n.DOMException
            }
            return r.prototype = n, new r
        }();
    (function(r) {
        (function(V) {
            var A = {
                searchParams: "URLSearchParams" in r,
                iterable: "Symbol" in r && "iterator" in Symbol,
                blob: "FileReader" in r && "Blob" in r && function() {
                    try {
                        return new Blob, !0
                    } catch {
                        return !1
                    }
                }(),
                formData: "FormData" in r,
                arrayBuffer: "ArrayBuffer" in r
            };

            function c(Y) {
                return Y && DataView.prototype.isPrototypeOf(Y)
            }
            if (A.arrayBuffer) var d = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                m = ArrayBuffer.isView || function(Y) {
                    return Y && d.indexOf(Object.prototype.toString.call(Y)) > -1
                };

            function q(Y) {
                if (typeof Y != "string" && (Y = String(Y)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(Y)) throw new TypeError("Invalid character in header field name");
                return Y.toLowerCase()
            }

            function v(Y) {
                return typeof Y != "string" && (Y = String(Y)), Y
            }

            function D(Y) {
                var re = {
                    next: function() {
                        var ue = Y.shift();
                        return {
                            done: ue === void 0,
                            value: ue
                        }
                    }
                };
                return A.iterable && (re[Symbol.iterator] = function() {
                    return re
                }), re
            }

            function S(Y) {
                this.map = {}, Y instanceof S ? Y.forEach(function(re, ue) {
                    this.append(ue, re)
                }, this) : Array.isArray(Y) ? Y.forEach(function(re) {
                    this.append(re[0], re[1])
                }, this) : Y && Object.getOwnPropertyNames(Y).forEach(function(re) {
                    this.append(re, Y[re])
                }, this)
            }
            S.prototype.append = function(Y, re) {
                Y = q(Y), re = v(re);
                var ue = this.map[Y];
                this.map[Y] = ue ? ue + ", " + re : re
            }, S.prototype.delete = function(Y) {
                delete this.map[q(Y)]
            }, S.prototype.get = function(Y) {
                return Y = q(Y), this.has(Y) ? this.map[Y] : null
            }, S.prototype.has = function(Y) {
                return this.map.hasOwnProperty(q(Y))
            }, S.prototype.set = function(Y, re) {
                this.map[q(Y)] = v(re)
            }, S.prototype.forEach = function(Y, re) {
                for (var ue in this.map) this.map.hasOwnProperty(ue) && Y.call(re, this.map[ue], ue, this)
            }, S.prototype.keys = function() {
                var Y = [];
                return this.forEach(function(re, ue) {
                    Y.push(ue)
                }), D(Y)
            }, S.prototype.values = function() {
                var Y = [];
                return this.forEach(function(re) {
                    Y.push(re)
                }), D(Y)
            }, S.prototype.entries = function() {
                var Y = [];
                return this.forEach(function(re, ue) {
                    Y.push([ue, re])
                }), D(Y)
            }, A.iterable && (S.prototype[Symbol.iterator] = S.prototype.entries);

            function C(Y) {
                if (Y.bodyUsed) return Promise.reject(new TypeError("Already read"));
                Y.bodyUsed = !0
            }

            function h(Y) {
                return new Promise(function(re, ue) {
                    Y.onload = function() {
                        re(Y.result)
                    }, Y.onerror = function() {
                        ue(Y.error)
                    }
                })
            }

            function w(Y) {
                var re = new FileReader,
                    ue = h(re);
                return re.readAsArrayBuffer(Y), ue
            }

            function T(Y) {
                var re = new FileReader,
                    ue = h(re);
                return re.readAsText(Y), ue
            }

            function M(Y) {
                for (var re = new Uint8Array(Y), ue = new Array(re.length), fe = 0; fe < re.length; fe++) ue[fe] = String.fromCharCode(re[fe]);
                return ue.join("")
            }

            function O(Y) {
                if (Y.slice) return Y.slice(0);
                var re = new Uint8Array(Y.byteLength);
                return re.set(new Uint8Array(Y)), re.buffer
            }

            function Q() {
                return this.bodyUsed = !1, this._initBody = function(Y) {
                    this._bodyInit = Y, Y ? typeof Y == "string" ? this._bodyText = Y : A.blob && Blob.prototype.isPrototypeOf(Y) ? this._bodyBlob = Y : A.formData && FormData.prototype.isPrototypeOf(Y) ? this._bodyFormData = Y : A.searchParams && URLSearchParams.prototype.isPrototypeOf(Y) ? this._bodyText = Y.toString() : A.arrayBuffer && A.blob && c(Y) ? (this._bodyArrayBuffer = O(Y.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : A.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(Y) || m(Y)) ? this._bodyArrayBuffer = O(Y) : this._bodyText = Y = Object.prototype.toString.call(Y) : this._bodyText = "", this.headers.get("content-type") || (typeof Y == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : A.searchParams && URLSearchParams.prototype.isPrototypeOf(Y) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                }, A.blob && (this.blob = function() {
                    var Y = C(this);
                    if (Y) return Y;
                    if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                    if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                    if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                    return Promise.resolve(new Blob([this._bodyText]))
                }, this.arrayBuffer = function() {
                    return this._bodyArrayBuffer ? C(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(w)
                }), this.text = function() {
                    var Y = C(this);
                    if (Y) return Y;
                    if (this._bodyBlob) return T(this._bodyBlob);
                    if (this._bodyArrayBuffer) return Promise.resolve(M(this._bodyArrayBuffer));
                    if (this._bodyFormData) throw new Error("could not read FormData body as text");
                    return Promise.resolve(this._bodyText)
                }, A.formData && (this.formData = function() {
                    return this.text().then(te)
                }), this.json = function() {
                    return this.text().then(JSON.parse)
                }, this
            }
            var u = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

            function J(Y) {
                var re = Y.toUpperCase();
                return u.indexOf(re) > -1 ? re : Y
            }

            function se(Y, re) {
                re = re || {};
                var ue = re.body;
                if (Y instanceof se) {
                    if (Y.bodyUsed) throw new TypeError("Already read");
                    this.url = Y.url, this.credentials = Y.credentials, re.headers || (this.headers = new S(Y.headers)), this.method = Y.method, this.mode = Y.mode, this.signal = Y.signal, !ue && Y._bodyInit != null && (ue = Y._bodyInit, Y.bodyUsed = !0)
                } else this.url = String(Y);
                if (this.credentials = re.credentials || this.credentials || "same-origin", (re.headers || !this.headers) && (this.headers = new S(re.headers)), this.method = J(re.method || this.method || "GET"), this.mode = re.mode || this.mode || null, this.signal = re.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && ue) throw new TypeError("Body not allowed for GET or HEAD requests");
                this._initBody(ue)
            }
            se.prototype.clone = function() {
                return new se(this, {
                    body: this._bodyInit
                })
            };

            function te(Y) {
                var re = new FormData;
                return Y.trim().split("&").forEach(function(ue) {
                    if (ue) {
                        var fe = ue.split("="),
                            qe = fe.shift().replace(/\+/g, " "),
                            ge = fe.join("=").replace(/\+/g, " ");
                        re.append(decodeURIComponent(qe), decodeURIComponent(ge))
                    }
                }), re
            }

            function ve(Y) {
                var re = new S,
                    ue = Y.replace(/\r?\n[\t ]+/g, " ");
                return ue.split(/\r?\n/).forEach(function(fe) {
                    var qe = fe.split(":"),
                        ge = qe.shift().trim();
                    if (ge) {
                        var Te = qe.join(":").trim();
                        re.append(ge, Te)
                    }
                }), re
            }
            Q.call(se.prototype);

            function be(Y, re) {
                re || (re = {}), this.type = "default", this.status = re.status === void 0 ? 200 : re.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in re ? re.statusText : "OK", this.headers = new S(re.headers), this.url = re.url || "", this._initBody(Y)
            }
            Q.call(be.prototype), be.prototype.clone = function() {
                return new be(this._bodyInit, {
                    status: this.status,
                    statusText: this.statusText,
                    headers: new S(this.headers),
                    url: this.url
                })
            }, be.error = function() {
                var Y = new be(null, {
                    status: 0,
                    statusText: ""
                });
                return Y.type = "error", Y
            };
            var oe = [301, 302, 303, 307, 308];
            be.redirect = function(Y, re) {
                if (oe.indexOf(re) === -1) throw new RangeError("Invalid status code");
                return new be(null, {
                    status: re,
                    headers: {
                        location: Y
                    }
                })
            }, V.DOMException = r.DOMException;
            try {
                new V.DOMException
            } catch {
                V.DOMException = function(re, ue) {
                    this.message = re, this.name = ue;
                    var fe = Error(re);
                    this.stack = fe.stack
                }, V.DOMException.prototype = Object.create(Error.prototype), V.DOMException.prototype.constructor = V.DOMException
            }

            function Ie(Y, re) {
                return new Promise(function(ue, fe) {
                    var qe = new se(Y, re);
                    if (qe.signal && qe.signal.aborted) return fe(new V.DOMException("Aborted", "AbortError"));
                    var ge = new XMLHttpRequest;

                    function Te() {
                        ge.abort()
                    }
                    ge.onload = function() {
                        var Le = {
                            status: ge.status,
                            statusText: ge.statusText,
                            headers: ve(ge.getAllResponseHeaders() || "")
                        };
                        Le.url = "responseURL" in ge ? ge.responseURL : Le.headers.get("X-Request-URL");
                        var Ge = "response" in ge ? ge.response : ge.responseText;
                        ue(new be(Ge, Le))
                    }, ge.onerror = function() {
                        fe(new TypeError("Network request failed"))
                    }, ge.ontimeout = function() {
                        fe(new TypeError("Network request failed"))
                    }, ge.onabort = function() {
                        fe(new V.DOMException("Aborted", "AbortError"))
                    }, ge.open(qe.method, qe.url, !0), qe.credentials === "include" ? ge.withCredentials = !0 : qe.credentials === "omit" && (ge.withCredentials = !1), "responseType" in ge && A.blob && (ge.responseType = "blob"), qe.headers.forEach(function(Le, Ge) {
                        ge.setRequestHeader(Ge, Le)
                    }), qe.signal && (qe.signal.addEventListener("abort", Te), ge.onreadystatechange = function() {
                        ge.readyState === 4 && qe.signal.removeEventListener("abort", Te)
                    }), ge.send(typeof qe._bodyInit > "u" ? null : qe._bodyInit)
                })
            }
            return Ie.polyfill = !0, r.fetch || (r.fetch = Ie, r.Headers = S, r.Request = se, r.Response = be), V.Headers = S, V.Request = se, V.Response = be, V.fetch = Ie, Object.defineProperty(V, "__esModule", {
                value: !0
            }), V
        })({})
    })(i), i.fetch.ponyfill = !0, delete i.fetch.polyfill;
    var o = i;
    e = o.fetch, e.default = o.fetch, e.fetch = o.fetch, e.Headers = o.Headers, e.Request = o.Request, e.Response = o.Response, t.exports = e
})(Lh, Lh.exports);
var I7 = function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
        if (typeof Symbol.iterator == "symbol") return !0;
        var e = {},
            n = Symbol("test"),
            i = Object(n);
        if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(i) !== "[object Symbol]") return !1;
        var o = 42;
        e[n] = o;
        for (n in e) return !1;
        if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0) return !1;
        var r = Object.getOwnPropertySymbols(e);
        if (r.length !== 1 || r[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n)) return !1;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
            var V = Object.getOwnPropertyDescriptor(e, n);
            if (V.value !== o || V.enumerable !== !0) return !1
        }
        return !0
    },
    kf = typeof Symbol < "u" && Symbol,
    P7 = I7,
    U7 = function() {
        return typeof kf != "function" || typeof Symbol != "function" || typeof kf("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : P7()
    },
    F7 = "Function.prototype.bind called on incompatible ",
    Yp = Array.prototype.slice,
    j7 = Object.prototype.toString,
    Q7 = "[object Function]",
    z7 = function(e) {
        var n = this;
        if (typeof n != "function" || j7.call(n) !== Q7) throw new TypeError(F7 + n);
        for (var i = Yp.call(arguments, 1), o, r = function() {
                if (this instanceof o) {
                    var m = n.apply(this, i.concat(Yp.call(arguments)));
                    return Object(m) === m ? m : this
                } else return n.apply(e, i.concat(Yp.call(arguments)))
            }, V = Math.max(0, n.length - i.length), A = [], c = 0; c < V; c++) A.push("$" + c);
        if (o = Function("binder", "return function (" + A.join(",") + "){ return binder.apply(this,arguments); }")(r), n.prototype) {
            var d = function() {};
            d.prototype = n.prototype, o.prototype = new d, d.prototype = null
        }
        return o
    },
    H7 = z7,
    gu = Function.prototype.bind || H7,
    N7 = gu,
    G7 = N7.call(Function.call, Object.prototype.hasOwnProperty),
    xt, ma = SyntaxError,
    Cg = Function,
    ia = TypeError,
    Kp = function(t) {
        try {
            return Cg('"use strict"; return (' + t + ").constructor;")()
        } catch {}
    },
    Vo = Object.getOwnPropertyDescriptor;
if (Vo) try {
    Vo({}, "")
} catch {
    Vo = null
}
var Wp = function() {
        throw new ia
    },
    X7 = Vo ? function() {
        try {
            return arguments.callee, Wp
        } catch {
            try {
                return Vo(arguments, "callee").get
            } catch {
                return Wp
            }
        }
    }() : Wp,
    jo = U7(),
    As = Object.getPrototypeOf || function(t) {
        return t.__proto__
    },
    Go = {},
    Y7 = typeof Uint8Array > "u" ? xt : As(Uint8Array),
    sa = {
        "%AggregateError%": typeof AggregateError > "u" ? xt : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer > "u" ? xt : ArrayBuffer,
        "%ArrayIteratorPrototype%": jo ? As([][Symbol.iterator]()) : xt,
        "%AsyncFromSyncIteratorPrototype%": xt,
        "%AsyncFunction%": Go,
        "%AsyncGenerator%": Go,
        "%AsyncGeneratorFunction%": Go,
        "%AsyncIteratorPrototype%": Go,
        "%Atomics%": typeof Atomics > "u" ? xt : Atomics,
        "%BigInt%": typeof BigInt > "u" ? xt : BigInt,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView > "u" ? xt : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": Error,
        "%eval%": eval,
        "%EvalError%": EvalError,
        "%Float32Array%": typeof Float32Array > "u" ? xt : Float32Array,
        "%Float64Array%": typeof Float64Array > "u" ? xt : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? xt : FinalizationRegistry,
        "%Function%": Cg,
        "%GeneratorFunction%": Go,
        "%Int8Array%": typeof Int8Array > "u" ? xt : Int8Array,
        "%Int16Array%": typeof Int16Array > "u" ? xt : Int16Array,
        "%Int32Array%": typeof Int32Array > "u" ? xt : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": jo ? As(As([][Symbol.iterator]())) : xt,
        "%JSON%": typeof JSON == "object" ? JSON : xt,
        "%Map%": typeof Map > "u" ? xt : Map,
        "%MapIteratorPrototype%": typeof Map > "u" || !jo ? xt : As(new Map()[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": Object,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise > "u" ? xt : Promise,
        "%Proxy%": typeof Proxy > "u" ? xt : Proxy,
        "%RangeError%": RangeError,
        "%ReferenceError%": ReferenceError,
        "%Reflect%": typeof Reflect > "u" ? xt : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set > "u" ? xt : Set,
        "%SetIteratorPrototype%": typeof Set > "u" || !jo ? xt : As(new Set()[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? xt : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": jo ? As("" [Symbol.iterator]()) : xt,
        "%Symbol%": jo ? Symbol : xt,
        "%SyntaxError%": ma,
        "%ThrowTypeError%": X7,
        "%TypedArray%": Y7,
        "%TypeError%": ia,
        "%Uint8Array%": typeof Uint8Array > "u" ? xt : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? xt : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array > "u" ? xt : Uint16Array,
        "%Uint32Array%": typeof Uint32Array > "u" ? xt : Uint32Array,
        "%URIError%": URIError,
        "%WeakMap%": typeof WeakMap > "u" ? xt : WeakMap,
        "%WeakRef%": typeof WeakRef > "u" ? xt : WeakRef,
        "%WeakSet%": typeof WeakSet > "u" ? xt : WeakSet
    },
    K7 = function t(e) {
        var n;
        if (e === "%AsyncFunction%") n = Kp("async function () {}");
        else if (e === "%GeneratorFunction%") n = Kp("function* () {}");
        else if (e === "%AsyncGeneratorFunction%") n = Kp("async function* () {}");
        else if (e === "%AsyncGenerator%") {
            var i = t("%AsyncGeneratorFunction%");
            i && (n = i.prototype)
        } else if (e === "%AsyncIteratorPrototype%") {
            var o = t("%AsyncGenerator%");
            o && (n = As(o.prototype))
        }
        return sa[e] = n, n
    },
    Cf = {
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
    },
    Kr = gu,
    Ol = G7,
    W7 = Kr.call(Function.call, Array.prototype.concat),
    J7 = Kr.call(Function.apply, Array.prototype.splice),
    Rf = Kr.call(Function.call, String.prototype.replace),
    Il = Kr.call(Function.call, String.prototype.slice),
    Z7 = Kr.call(Function.call, RegExp.prototype.exec),
    _7 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
    $7 = /\\(\\)?/g,
    e6 = function(e) {
        var n = Il(e, 0, 1),
            i = Il(e, -1);
        if (n === "%" && i !== "%") throw new ma("invalid intrinsic syntax, expected closing `%`");
        if (i === "%" && n !== "%") throw new ma("invalid intrinsic syntax, expected opening `%`");
        var o = [];
        return Rf(e, _7, function(r, V, A, c) {
            o[o.length] = A ? Rf(c, $7, "$1") : V || r
        }), o
    },
    t6 = function(e, n) {
        var i = e,
            o;
        if (Ol(Cf, i) && (o = Cf[i], i = "%" + o[0] + "%"), Ol(sa, i)) {
            var r = sa[i];
            if (r === Go && (r = K7(i)), typeof r > "u" && !n) throw new ia("intrinsic " + e + " exists, but is not available. Please file an issue!");
            return {
                alias: o,
                name: i,
                value: r
            }
        }
        throw new ma("intrinsic " + e + " does not exist!")
    },
    yu = function(e, n) {
        if (typeof e != "string" || e.length === 0) throw new ia("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof n != "boolean") throw new ia('"allowMissing" argument must be a boolean');
        if (Z7(/^%?[^%]*%?$/g, e) === null) throw new ma("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var i = e6(e),
            o = i.length > 0 ? i[0] : "",
            r = t6("%" + o + "%", n),
            V = r.name,
            A = r.value,
            c = !1,
            d = r.alias;
        d && (o = d[0], J7(i, W7([0, 1], d)));
        for (var m = 1, q = !0; m < i.length; m += 1) {
            var v = i[m],
                D = Il(v, 0, 1),
                S = Il(v, -1);
            if ((D === '"' || D === "'" || D === "`" || S === '"' || S === "'" || S === "`") && D !== S) throw new ma("property names with quotes must have matching quotes");
            if ((v === "constructor" || !q) && (c = !0), o += "." + v, V = "%" + o + "%", Ol(sa, V)) A = sa[V];
            else if (A != null) {
                if (!(v in A)) {
                    if (!n) throw new ia("base intrinsic for " + e + " exists, but the property is not available.");
                    return
                }
                if (Vo && m + 1 >= i.length) {
                    var C = Vo(A, v);
                    q = !!C, q && "get" in C && !("originalValue" in C.get) ? A = C.get : A = A[v]
                } else q = Ol(A, v), A = A[v];
                q && !c && (sa[V] = A)
            }
        }
        return A
    },
    Rg = {
        exports: {}
    };
(function(t) {
    var e = gu,
        n = yu,
        i = n("%Function.prototype.apply%"),
        o = n("%Function.prototype.call%"),
        r = n("%Reflect.apply%", !0) || e.call(o, i),
        V = n("%Object.getOwnPropertyDescriptor%", !0),
        A = n("%Object.defineProperty%", !0),
        c = n("%Math.max%");
    if (A) try {
        A({}, "a", {
            value: 1
        })
    } catch {
        A = null
    }
    t.exports = function(q) {
        var v = r(e, o, arguments);
        if (V && A) {
            var D = V(v, "length");
            D.configurable && A(v, "length", {
                value: 1 + c(0, q.length - (arguments.length - 1))
            })
        }
        return v
    };
    var d = function() {
        return r(e, i, arguments)
    };
    A ? A(t.exports, "apply", {
        value: d
    }) : t.exports.apply = d
})(Rg);
var Dg = yu,
    Sg = Rg.exports,
    n6 = Sg(Dg("String.prototype.indexOf")),
    i6 = function(e, n) {
        var i = Dg(e, !!n);
        return typeof i == "function" && n6(e, ".prototype.") > -1 ? Sg(i) : i
    };
const s6 = {},
    o6 = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: s6
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    a6 = Jb(o6);
var bu = typeof Map == "function" && Map.prototype,
    Jp = Object.getOwnPropertyDescriptor && bu ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null,
    Pl = bu && Jp && typeof Jp.get == "function" ? Jp.get : null,
    r6 = bu && Map.prototype.forEach,
    vu = typeof Set == "function" && Set.prototype,
    Zp = Object.getOwnPropertyDescriptor && vu ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null,
    Ul = vu && Zp && typeof Zp.get == "function" ? Zp.get : null,
    V6 = vu && Set.prototype.forEach,
    l6 = typeof WeakMap == "function" && WeakMap.prototype,
    Rr = l6 ? WeakMap.prototype.has : null,
    A6 = typeof WeakSet == "function" && WeakSet.prototype,
    Dr = A6 ? WeakSet.prototype.has : null,
    c6 = typeof WeakRef == "function" && WeakRef.prototype,
    Df = c6 ? WeakRef.prototype.deref : null,
    d6 = Boolean.prototype.valueOf,
    p6 = Object.prototype.toString,
    h6 = Function.prototype.toString,
    u6 = String.prototype.match,
    wu = String.prototype.slice,
    hs = String.prototype.replace,
    m6 = String.prototype.toUpperCase,
    Sf = String.prototype.toLowerCase,
    Tg = RegExp.prototype.test,
    Tf = Array.prototype.concat,
    Ri = Array.prototype.join,
    f6 = Array.prototype.slice,
    Ef = Math.floor,
    Bh = typeof BigInt == "function" ? BigInt.prototype.valueOf : null,
    _p = Object.getOwnPropertySymbols,
    Mh = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null,
    fa = typeof Symbol == "function" && typeof Symbol.iterator == "object",
    Rn = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === fa ? "object" : "symbol") ? Symbol.toStringTag : null,
    Eg = Object.prototype.propertyIsEnumerable,
    Lf = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(t) {
        return t.__proto__
    } : null);

function Bf(t, e) {
    if (t === 1 / 0 || t === -1 / 0 || t !== t || t && t > -1e3 && t < 1e3 || Tg.call(/e/, e)) return e;
    var n = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof t == "number") {
        var i = t < 0 ? -Ef(-t) : Ef(t);
        if (i !== t) {
            var o = String(i),
                r = wu.call(e, o.length + 1);
            return hs.call(o, n, "$&_") + "." + hs.call(hs.call(r, /([0-9]{3})/g, "$&_"), /_$/, "")
        }
    }
    return hs.call(e, n, "$&_")
}
var Oh = a6,
    Mf = Oh.custom,
    Of = Bg(Mf) ? Mf : null,
    q6 = function t(e, n, i, o) {
        var r = n || {};
        if (cs(r, "quoteStyle") && r.quoteStyle !== "single" && r.quoteStyle !== "double") throw new TypeError('option "quoteStyle" must be "single" or "double"');
        if (cs(r, "maxStringLength") && (typeof r.maxStringLength == "number" ? r.maxStringLength < 0 && r.maxStringLength !== 1 / 0 : r.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
        var V = cs(r, "customInspect") ? r.customInspect : !0;
        if (typeof V != "boolean" && V !== "symbol") throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
        if (cs(r, "indent") && r.indent !== null && r.indent !== "	" && !(parseInt(r.indent, 10) === r.indent && r.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
        if (cs(r, "numericSeparator") && typeof r.numericSeparator != "boolean") throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
        var A = r.numericSeparator;
        if (typeof e > "u") return "undefined";
        if (e === null) return "null";
        if (typeof e == "boolean") return e ? "true" : "false";
        if (typeof e == "string") return Og(e, r);
        if (typeof e == "number") {
            if (e === 0) return 1 / 0 / e > 0 ? "0" : "-0";
            var c = String(e);
            return A ? Bf(e, c) : c
        }
        if (typeof e == "bigint") {
            var d = String(e) + "n";
            return A ? Bf(e, d) : d
        }
        var m = typeof r.depth > "u" ? 5 : r.depth;
        if (typeof i > "u" && (i = 0), i >= m && m > 0 && typeof e == "object") return Ih(e) ? "[Array]" : "[Object]";
        var q = I6(r, i);
        if (typeof o > "u") o = [];
        else if (Mg(o, e) >= 0) return "[Circular]";

        function v(Ie, Y, re) {
            if (Y && (o = f6.call(o), o.push(Y)), re) {
                var ue = {
                    depth: r.depth
                };
                return cs(r, "quoteStyle") && (ue.quoteStyle = r.quoteStyle), t(Ie, ue, i + 1, o)
            }
            return t(Ie, r, i + 1, o)
        }
        if (typeof e == "function" && !If(e)) {
            var D = R6(e),
                S = pl(e, v);
            return "[Function" + (D ? ": " + D : " (anonymous)") + "]" + (S.length > 0 ? " { " + Ri.call(S, ", ") + " }" : "")
        }
        if (Bg(e)) {
            var C = fa ? hs.call(String(e), /^(Symbol\(.*\))_[^)]*$/, "$1") : Mh.call(e);
            return typeof e == "object" && !fa ? dr(C) : C
        }
        if (B6(e)) {
            for (var h = "<" + Sf.call(String(e.nodeName)), w = e.attributes || [], T = 0; T < w.length; T++) h += " " + w[T].name + "=" + Lg(g6(w[T].value), "double", r);
            return h += ">", e.childNodes && e.childNodes.length && (h += "..."), h += "</" + Sf.call(String(e.nodeName)) + ">", h
        }
        if (Ih(e)) {
            if (e.length === 0) return "[]";
            var M = pl(e, v);
            return q && !O6(M) ? "[" + Ph(M, q) + "]" : "[ " + Ri.call(M, ", ") + " ]"
        }
        if (b6(e)) {
            var O = pl(e, v);
            return !("cause" in Error.prototype) && "cause" in e && !Eg.call(e, "cause") ? "{ [" + String(e) + "] " + Ri.call(Tf.call("[cause]: " + v(e.cause), O), ", ") + " }" : O.length === 0 ? "[" + String(e) + "]" : "{ [" + String(e) + "] " + Ri.call(O, ", ") + " }"
        }
        if (typeof e == "object" && V) {
            if (Of && typeof e[Of] == "function" && Oh) return Oh(e, {
                depth: m - i
            });
            if (V !== "symbol" && typeof e.inspect == "function") return e.inspect()
        }
        if (D6(e)) {
            var Q = [];
            return r6.call(e, function(Ie, Y) {
                Q.push(v(Y, e, !0) + " => " + v(Ie, e))
            }), Pf("Map", Pl.call(e), Q, q)
        }
        if (E6(e)) {
            var u = [];
            return V6.call(e, function(Ie) {
                u.push(v(Ie, e))
            }), Pf("Set", Ul.call(e), u, q)
        }
        if (S6(e)) return $p("WeakMap");
        if (L6(e)) return $p("WeakSet");
        if (T6(e)) return $p("WeakRef");
        if (w6(e)) return dr(v(Number(e)));
        if (k6(e)) return dr(v(Bh.call(e)));
        if (x6(e)) return dr(d6.call(e));
        if (v6(e)) return dr(v(String(e)));
        if (!y6(e) && !If(e)) {
            var J = pl(e, v),
                se = Lf ? Lf(e) === Object.prototype : e instanceof Object || e.constructor === Object,
                te = e instanceof Object ? "" : "null prototype",
                ve = !se && Rn && Object(e) === e && Rn in e ? wu.call(Bs(e), 8, -1) : te ? "Object" : "",
                be = se || typeof e.constructor != "function" ? "" : e.constructor.name ? e.constructor.name + " " : "",
                oe = be + (ve || te ? "[" + Ri.call(Tf.call([], ve || [], te || []), ": ") + "] " : "");
            return J.length === 0 ? oe + "{}" : q ? oe + "{" + Ph(J, q) + "}" : oe + "{ " + Ri.call(J, ", ") + " }"
        }
        return String(e)
    };

function Lg(t, e, n) {
    var i = (n.quoteStyle || e) === "double" ? '"' : "'";
    return i + t + i
}

function g6(t) {
    return hs.call(String(t), /"/g, "&quot;")
}

function Ih(t) {
    return Bs(t) === "[object Array]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function y6(t) {
    return Bs(t) === "[object Date]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function If(t) {
    return Bs(t) === "[object RegExp]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function b6(t) {
    return Bs(t) === "[object Error]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function v6(t) {
    return Bs(t) === "[object String]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function w6(t) {
    return Bs(t) === "[object Number]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function x6(t) {
    return Bs(t) === "[object Boolean]" && (!Rn || !(typeof t == "object" && Rn in t))
}

function Bg(t) {
    if (fa) return t && typeof t == "object" && t instanceof Symbol;
    if (typeof t == "symbol") return !0;
    if (!t || typeof t != "object" || !Mh) return !1;
    try {
        return Mh.call(t), !0
    } catch {}
    return !1
}

function k6(t) {
    if (!t || typeof t != "object" || !Bh) return !1;
    try {
        return Bh.call(t), !0
    } catch {}
    return !1
}
var C6 = Object.prototype.hasOwnProperty || function(t) {
    return t in this
};

function cs(t, e) {
    return C6.call(t, e)
}

function Bs(t) {
    return p6.call(t)
}

function R6(t) {
    if (t.name) return t.name;
    var e = u6.call(h6.call(t), /^function\s*([\w$]+)/);
    return e ? e[1] : null
}

function Mg(t, e) {
    if (t.indexOf) return t.indexOf(e);
    for (var n = 0, i = t.length; n < i; n++)
        if (t[n] === e) return n;
    return -1
}

function D6(t) {
    if (!Pl || !t || typeof t != "object") return !1;
    try {
        Pl.call(t);
        try {
            Ul.call(t)
        } catch {
            return !0
        }
        return t instanceof Map
    } catch {}
    return !1
}

function S6(t) {
    if (!Rr || !t || typeof t != "object") return !1;
    try {
        Rr.call(t, Rr);
        try {
            Dr.call(t, Dr)
        } catch {
            return !0
        }
        return t instanceof WeakMap
    } catch {}
    return !1
}

function T6(t) {
    if (!Df || !t || typeof t != "object") return !1;
    try {
        return Df.call(t), !0
    } catch {}
    return !1
}

function E6(t) {
    if (!Ul || !t || typeof t != "object") return !1;
    try {
        Ul.call(t);
        try {
            Pl.call(t)
        } catch {
            return !0
        }
        return t instanceof Set
    } catch {}
    return !1
}

function L6(t) {
    if (!Dr || !t || typeof t != "object") return !1;
    try {
        Dr.call(t, Dr);
        try {
            Rr.call(t, Rr)
        } catch {
            return !0
        }
        return t instanceof WeakSet
    } catch {}
    return !1
}

function B6(t) {
    return !t || typeof t != "object" ? !1 : typeof HTMLElement < "u" && t instanceof HTMLElement ? !0 : typeof t.nodeName == "string" && typeof t.getAttribute == "function"
}

function Og(t, e) {
    if (t.length > e.maxStringLength) {
        var n = t.length - e.maxStringLength,
            i = "... " + n + " more character" + (n > 1 ? "s" : "");
        return Og(wu.call(t, 0, e.maxStringLength), e) + i
    }
    var o = hs.call(hs.call(t, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, M6);
    return Lg(o, "single", e)
}

function M6(t) {
    var e = t.charCodeAt(0),
        n = {
            8: "b",
            9: "t",
            10: "n",
            12: "f",
            13: "r"
        } [e];
    return n ? "\\" + n : "\\x" + (e < 16 ? "0" : "") + m6.call(e.toString(16))
}

function dr(t) {
    return "Object(" + t + ")"
}

function $p(t) {
    return t + " { ? }"
}

function Pf(t, e, n, i) {
    var o = i ? Ph(n, i) : Ri.call(n, ", ");
    return t + " (" + e + ") {" + o + "}"
}

function O6(t) {
    for (var e = 0; e < t.length; e++)
        if (Mg(t[e], `
`) >= 0) return !1;
    return !0
}

function I6(t, e) {
    var n;
    if (t.indent === "	") n = "	";
    else if (typeof t.indent == "number" && t.indent > 0) n = Ri.call(Array(t.indent + 1), " ");
    else return null;
    return {
        base: n,
        prev: Ri.call(Array(e + 1), n)
    }
}

function Ph(t, e) {
    if (t.length === 0) return "";
    var n = `
` + e.prev + e.base;
    return n + Ri.call(t, "," + n) + `
` + e.prev
}

function pl(t, e) {
    var n = Ih(t),
        i = [];
    if (n) {
        i.length = t.length;
        for (var o = 0; o < t.length; o++) i[o] = cs(t, o) ? e(t[o], t) : ""
    }
    var r = typeof _p == "function" ? _p(t) : [],
        V;
    if (fa) {
        V = {};
        for (var A = 0; A < r.length; A++) V["$" + r[A]] = r[A]
    }
    for (var c in t) !cs(t, c) || n && String(Number(c)) === c && c < t.length || fa && V["$" + c] instanceof Symbol || (Tg.call(/[^\w$]/, c) ? i.push(e(c, t) + ": " + e(t[c], t)) : i.push(c + ": " + e(t[c], t)));
    if (typeof _p == "function")
        for (var d = 0; d < r.length; d++) Eg.call(t, r[d]) && i.push("[" + e(r[d]) + "]: " + e(t[r[d]], t));
    return i
}
var xu = yu,
    La = i6,
    P6 = q6,
    U6 = xu("%TypeError%"),
    hl = xu("%WeakMap%", !0),
    ul = xu("%Map%", !0),
    F6 = La("WeakMap.prototype.get", !0),
    j6 = La("WeakMap.prototype.set", !0),
    Q6 = La("WeakMap.prototype.has", !0),
    z6 = La("Map.prototype.get", !0),
    H6 = La("Map.prototype.set", !0),
    N6 = La("Map.prototype.has", !0),
    ku = function(t, e) {
        for (var n = t, i;
            (i = n.next) !== null; n = i)
            if (i.key === e) return n.next = i.next, i.next = t.next, t.next = i, i
    },
    G6 = function(t, e) {
        var n = ku(t, e);
        return n && n.value
    },
    X6 = function(t, e, n) {
        var i = ku(t, e);
        i ? i.value = n : t.next = {
            key: e,
            next: t.next,
            value: n
        }
    },
    Y6 = function(t, e) {
        return !!ku(t, e)
    },
    K6 = function() {
        var e, n, i, o = {
            assert: function(r) {
                if (!o.has(r)) throw new U6("Side channel does not contain " + P6(r))
            },
            get: function(r) {
                if (hl && r && (typeof r == "object" || typeof r == "function")) {
                    if (e) return F6(e, r)
                } else if (ul) {
                    if (n) return z6(n, r)
                } else if (i) return G6(i, r)
            },
            has: function(r) {
                if (hl && r && (typeof r == "object" || typeof r == "function")) {
                    if (e) return Q6(e, r)
                } else if (ul) {
                    if (n) return N6(n, r)
                } else if (i) return Y6(i, r);
                return !1
            },
            set: function(r, V) {
                hl && r && (typeof r == "object" || typeof r == "function") ? (e || (e = new hl), j6(e, r, V)) : ul ? (n || (n = new ul), H6(n, r, V)) : (i || (i = {
                    key: {},
                    next: null
                }), X6(i, r, V))
            }
        };
        return o
    },
    W6 = String.prototype.replace,
    J6 = /%20/g,
    eh = {
        RFC1738: "RFC1738",
        RFC3986: "RFC3986"
    },
    Cu = {
        default: eh.RFC3986,
        formatters: {
            RFC1738: function(t) {
                return W6.call(t, J6, "+")
            },
            RFC3986: function(t) {
                return String(t)
            }
        },
        RFC1738: eh.RFC1738,
        RFC3986: eh.RFC3986
    },
    Z6 = Cu,
    th = Object.prototype.hasOwnProperty,
    io = Array.isArray,
    xi = function() {
        for (var t = [], e = 0; e < 256; ++e) t.push("%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase());
        return t
    }(),
    _6 = function(e) {
        for (; e.length > 1;) {
            var n = e.pop(),
                i = n.obj[n.prop];
            if (io(i)) {
                for (var o = [], r = 0; r < i.length; ++r) typeof i[r] < "u" && o.push(i[r]);
                n.obj[n.prop] = o
            }
        }
    },
    Ig = function(e, n) {
        for (var i = n && n.plainObjects ? Object.create(null) : {}, o = 0; o < e.length; ++o) typeof e[o] < "u" && (i[o] = e[o]);
        return i
    },
    $6 = function t(e, n, i) {
        if (!n) return e;
        if (typeof n != "object") {
            if (io(e)) e.push(n);
            else if (e && typeof e == "object")(i && (i.plainObjects || i.allowPrototypes) || !th.call(Object.prototype, n)) && (e[n] = !0);
            else return [e, n];
            return e
        }
        if (!e || typeof e != "object") return [e].concat(n);
        var o = e;
        return io(e) && !io(n) && (o = Ig(e, i)), io(e) && io(n) ? (n.forEach(function(r, V) {
            if (th.call(e, V)) {
                var A = e[V];
                A && typeof A == "object" && r && typeof r == "object" ? e[V] = t(A, r, i) : e.push(r)
            } else e[V] = r
        }), e) : Object.keys(n).reduce(function(r, V) {
            var A = n[V];
            return th.call(r, V) ? r[V] = t(r[V], A, i) : r[V] = A, r
        }, o)
    },
    ek = function(e, n) {
        return Object.keys(n).reduce(function(i, o) {
            return i[o] = n[o], i
        }, e)
    },
    tk = function(t, e, n) {
        var i = t.replace(/\+/g, " ");
        if (n === "iso-8859-1") return i.replace(/%[0-9a-f]{2}/gi, unescape);
        try {
            return decodeURIComponent(i)
        } catch {
            return i
        }
    },
    nk = function(e, n, i, o, r) {
        if (e.length === 0) return e;
        var V = e;
        if (typeof e == "symbol" ? V = Symbol.prototype.toString.call(e) : typeof e != "string" && (V = String(e)), i === "iso-8859-1") return escape(V).replace(/%u[0-9a-f]{4}/gi, function(m) {
            return "%26%23" + parseInt(m.slice(2), 16) + "%3B"
        });
        for (var A = "", c = 0; c < V.length; ++c) {
            var d = V.charCodeAt(c);
            if (d === 45 || d === 46 || d === 95 || d === 126 || d >= 48 && d <= 57 || d >= 65 && d <= 90 || d >= 97 && d <= 122 || r === Z6.RFC1738 && (d === 40 || d === 41)) {
                A += V.charAt(c);
                continue
            }
            if (d < 128) {
                A = A + xi[d];
                continue
            }
            if (d < 2048) {
                A = A + (xi[192 | d >> 6] + xi[128 | d & 63]);
                continue
            }
            if (d < 55296 || d >= 57344) {
                A = A + (xi[224 | d >> 12] + xi[128 | d >> 6 & 63] + xi[128 | d & 63]);
                continue
            }
            c += 1, d = 65536 + ((d & 1023) << 10 | V.charCodeAt(c) & 1023), A += xi[240 | d >> 18] + xi[128 | d >> 12 & 63] + xi[128 | d >> 6 & 63] + xi[128 | d & 63]
        }
        return A
    },
    ik = function(e) {
        for (var n = [{
                obj: {
                    o: e
                },
                prop: "o"
            }], i = [], o = 0; o < n.length; ++o)
            for (var r = n[o], V = r.obj[r.prop], A = Object.keys(V), c = 0; c < A.length; ++c) {
                var d = A[c],
                    m = V[d];
                typeof m == "object" && m !== null && i.indexOf(m) === -1 && (n.push({
                    obj: V,
                    prop: d
                }), i.push(m))
            }
        return _6(n), e
    },
    sk = function(e) {
        return Object.prototype.toString.call(e) === "[object RegExp]"
    },
    ok = function(e) {
        return !e || typeof e != "object" ? !1 : !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e))
    },
    ak = function(e, n) {
        return [].concat(e, n)
    },
    rk = function(e, n) {
        if (io(e)) {
            for (var i = [], o = 0; o < e.length; o += 1) i.push(n(e[o]));
            return i
        }
        return n(e)
    },
    Pg = {
        arrayToObject: Ig,
        assign: ek,
        combine: ak,
        compact: ik,
        decode: tk,
        encode: nk,
        isBuffer: ok,
        isRegExp: sk,
        maybeMap: rk,
        merge: $6
    },
    Ug = K6,
    Uh = Pg,
    Sr = Cu,
    Vk = Object.prototype.hasOwnProperty,
    Uf = {
        brackets: function(e) {
            return e + "[]"
        },
        comma: "comma",
        indices: function(e, n) {
            return e + "[" + n + "]"
        },
        repeat: function(e) {
            return e
        }
    },
    Ji = Array.isArray,
    lk = String.prototype.split,
    Ak = Array.prototype.push,
    Fg = function(t, e) {
        Ak.apply(t, Ji(e) ? e : [e])
    },
    ck = Date.prototype.toISOString,
    Ff = Sr.default,
    qn = {
        addQueryPrefix: !1,
        allowDots: !1,
        charset: "utf-8",
        charsetSentinel: !1,
        delimiter: "&",
        encode: !0,
        encoder: Uh.encode,
        encodeValuesOnly: !1,
        format: Ff,
        formatter: Sr.formatters[Ff],
        indices: !1,
        serializeDate: function(e) {
            return ck.call(e)
        },
        skipNulls: !1,
        strictNullHandling: !1
    },
    dk = function(e) {
        return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "symbol" || typeof e == "bigint"
    },
    nh = {},
    pk = function t(e, n, i, o, r, V, A, c, d, m, q, v, D, S, C, h) {
        for (var w = e, T = h, M = 0, O = !1;
            (T = T.get(nh)) !== void 0 && !O;) {
            var Q = T.get(e);
            if (M += 1, typeof Q < "u") {
                if (Q === M) throw new RangeError("Cyclic object value");
                O = !0
            }
            typeof T.get(nh) > "u" && (M = 0)
        }
        if (typeof c == "function" ? w = c(n, w) : w instanceof Date ? w = q(w) : i === "comma" && Ji(w) && (w = Uh.maybeMap(w, function(ge) {
                return ge instanceof Date ? q(ge) : ge
            })), w === null) {
            if (r) return A && !S ? A(n, qn.encoder, C, "key", v) : n;
            w = ""
        }
        if (dk(w) || Uh.isBuffer(w)) {
            if (A) {
                var u = S ? n : A(n, qn.encoder, C, "key", v);
                if (i === "comma" && S) {
                    for (var J = lk.call(String(w), ","), se = "", te = 0; te < J.length; ++te) se += (te === 0 ? "" : ",") + D(A(J[te], qn.encoder, C, "value", v));
                    return [D(u) + (o && Ji(w) && J.length === 1 ? "[]" : "") + "=" + se]
                }
                return [D(u) + "=" + D(A(w, qn.encoder, C, "value", v))]
            }
            return [D(n) + "=" + D(String(w))]
        }
        var ve = [];
        if (typeof w > "u") return ve;
        var be;
        if (i === "comma" && Ji(w)) be = [{
            value: w.length > 0 ? w.join(",") || null : void 0
        }];
        else if (Ji(c)) be = c;
        else {
            var oe = Object.keys(w);
            be = d ? oe.sort(d) : oe
        }
        for (var Ie = o && Ji(w) && w.length === 1 ? n + "[]" : n, Y = 0; Y < be.length; ++Y) {
            var re = be[Y],
                ue = typeof re == "object" && typeof re.value < "u" ? re.value : w[re];
            if (!(V && ue === null)) {
                var fe = Ji(w) ? typeof i == "function" ? i(Ie, re) : Ie : Ie + (m ? "." + re : "[" + re + "]");
                h.set(e, M);
                var qe = Ug();
                qe.set(nh, h), Fg(ve, t(ue, fe, i, o, r, V, A, c, d, m, q, v, D, S, C, qe))
            }
        }
        return ve
    },
    hk = function(e) {
        if (!e) return qn;
        if (e.encoder !== null && typeof e.encoder < "u" && typeof e.encoder != "function") throw new TypeError("Encoder has to be a function.");
        var n = e.charset || qn.charset;
        if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var i = Sr.default;
        if (typeof e.format < "u") {
            if (!Vk.call(Sr.formatters, e.format)) throw new TypeError("Unknown format option provided.");
            i = e.format
        }
        var o = Sr.formatters[i],
            r = qn.filter;
        return (typeof e.filter == "function" || Ji(e.filter)) && (r = e.filter), {
            addQueryPrefix: typeof e.addQueryPrefix == "boolean" ? e.addQueryPrefix : qn.addQueryPrefix,
            allowDots: typeof e.allowDots > "u" ? qn.allowDots : !!e.allowDots,
            charset: n,
            charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : qn.charsetSentinel,
            delimiter: typeof e.delimiter > "u" ? qn.delimiter : e.delimiter,
            encode: typeof e.encode == "boolean" ? e.encode : qn.encode,
            encoder: typeof e.encoder == "function" ? e.encoder : qn.encoder,
            encodeValuesOnly: typeof e.encodeValuesOnly == "boolean" ? e.encodeValuesOnly : qn.encodeValuesOnly,
            filter: r,
            format: i,
            formatter: o,
            serializeDate: typeof e.serializeDate == "function" ? e.serializeDate : qn.serializeDate,
            skipNulls: typeof e.skipNulls == "boolean" ? e.skipNulls : qn.skipNulls,
            sort: typeof e.sort == "function" ? e.sort : null,
            strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : qn.strictNullHandling
        }
    },
    uk = function(t, e) {
        var n = t,
            i = hk(e),
            o, r;
        typeof i.filter == "function" ? (r = i.filter, n = r("", n)) : Ji(i.filter) && (r = i.filter, o = r);
        var V = [];
        if (typeof n != "object" || n === null) return "";
        var A;
        e && e.arrayFormat in Uf ? A = e.arrayFormat : e && "indices" in e ? A = e.indices ? "indices" : "repeat" : A = "indices";
        var c = Uf[A];
        if (e && "commaRoundTrip" in e && typeof e.commaRoundTrip != "boolean") throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
        var d = c === "comma" && e && e.commaRoundTrip;
        o || (o = Object.keys(n)), i.sort && o.sort(i.sort);
        for (var m = Ug(), q = 0; q < o.length; ++q) {
            var v = o[q];
            i.skipNulls && n[v] === null || Fg(V, pk(n[v], v, c, d, i.strictNullHandling, i.skipNulls, i.encode ? i.encoder : null, i.filter, i.sort, i.allowDots, i.serializeDate, i.format, i.formatter, i.encodeValuesOnly, i.charset, m))
        }
        var D = V.join(i.delimiter),
            S = i.addQueryPrefix === !0 ? "?" : "";
        return i.charsetSentinel && (i.charset === "iso-8859-1" ? S += "utf8=%26%2310003%3B&" : S += "utf8=%E2%9C%93&"), D.length > 0 ? S + D : ""
    },
    qa = Pg,
    Fh = Object.prototype.hasOwnProperty,
    mk = Array.isArray,
    pn = {
        allowDots: !1,
        allowPrototypes: !1,
        allowSparse: !1,
        arrayLimit: 20,
        charset: "utf-8",
        charsetSentinel: !1,
        comma: !1,
        decoder: qa.decode,
        delimiter: "&",
        depth: 5,
        ignoreQueryPrefix: !1,
        interpretNumericEntities: !1,
        parameterLimit: 1e3,
        parseArrays: !0,
        plainObjects: !1,
        strictNullHandling: !1
    },
    fk = function(t) {
        return t.replace(/&#(\d+);/g, function(e, n) {
            return String.fromCharCode(parseInt(n, 10))
        })
    },
    jg = function(t, e) {
        return t && typeof t == "string" && e.comma && t.indexOf(",") > -1 ? t.split(",") : t
    },
    qk = "utf8=%26%2310003%3B",
    gk = "utf8=%E2%9C%93",
    yk = function(e, n) {
        var i = {},
            o = n.ignoreQueryPrefix ? e.replace(/^\?/, "") : e,
            r = n.parameterLimit === 1 / 0 ? void 0 : n.parameterLimit,
            V = o.split(n.delimiter, r),
            A = -1,
            c, d = n.charset;
        if (n.charsetSentinel)
            for (c = 0; c < V.length; ++c) V[c].indexOf("utf8=") === 0 && (V[c] === gk ? d = "utf-8" : V[c] === qk && (d = "iso-8859-1"), A = c, c = V.length);
        for (c = 0; c < V.length; ++c)
            if (c !== A) {
                var m = V[c],
                    q = m.indexOf("]="),
                    v = q === -1 ? m.indexOf("=") : q + 1,
                    D, S;
                v === -1 ? (D = n.decoder(m, pn.decoder, d, "key"), S = n.strictNullHandling ? null : "") : (D = n.decoder(m.slice(0, v), pn.decoder, d, "key"), S = qa.maybeMap(jg(m.slice(v + 1), n), function(C) {
                    return n.decoder(C, pn.decoder, d, "value")
                })), S && n.interpretNumericEntities && d === "iso-8859-1" && (S = fk(S)), m.indexOf("[]=") > -1 && (S = mk(S) ? [S] : S), Fh.call(i, D) ? i[D] = qa.combine(i[D], S) : i[D] = S
            } return i
    },
    bk = function(t, e, n, i) {
        for (var o = i ? e : jg(e, n), r = t.length - 1; r >= 0; --r) {
            var V, A = t[r];
            if (A === "[]" && n.parseArrays) V = [].concat(o);
            else {
                V = n.plainObjects ? Object.create(null) : {};
                var c = A.charAt(0) === "[" && A.charAt(A.length - 1) === "]" ? A.slice(1, -1) : A,
                    d = parseInt(c, 10);
                !n.parseArrays && c === "" ? V = {
                    0: o
                } : !isNaN(d) && A !== c && String(d) === c && d >= 0 && n.parseArrays && d <= n.arrayLimit ? (V = [], V[d] = o) : c !== "__proto__" && (V[c] = o)
            }
            o = V
        }
        return o
    },
    vk = function(e, n, i, o) {
        if (!!e) {
            var r = i.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e,
                V = /(\[[^[\]]*])/,
                A = /(\[[^[\]]*])/g,
                c = i.depth > 0 && V.exec(r),
                d = c ? r.slice(0, c.index) : r,
                m = [];
            if (d) {
                if (!i.plainObjects && Fh.call(Object.prototype, d) && !i.allowPrototypes) return;
                m.push(d)
            }
            for (var q = 0; i.depth > 0 && (c = A.exec(r)) !== null && q < i.depth;) {
                if (q += 1, !i.plainObjects && Fh.call(Object.prototype, c[1].slice(1, -1)) && !i.allowPrototypes) return;
                m.push(c[1])
            }
            return c && m.push("[" + r.slice(c.index) + "]"), bk(m, n, i, o)
        }
    },
    wk = function(e) {
        if (!e) return pn;
        if (e.decoder !== null && e.decoder !== void 0 && typeof e.decoder != "function") throw new TypeError("Decoder has to be a function.");
        if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var n = typeof e.charset > "u" ? pn.charset : e.charset;
        return {
            allowDots: typeof e.allowDots > "u" ? pn.allowDots : !!e.allowDots,
            allowPrototypes: typeof e.allowPrototypes == "boolean" ? e.allowPrototypes : pn.allowPrototypes,
            allowSparse: typeof e.allowSparse == "boolean" ? e.allowSparse : pn.allowSparse,
            arrayLimit: typeof e.arrayLimit == "number" ? e.arrayLimit : pn.arrayLimit,
            charset: n,
            charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : pn.charsetSentinel,
            comma: typeof e.comma == "boolean" ? e.comma : pn.comma,
            decoder: typeof e.decoder == "function" ? e.decoder : pn.decoder,
            delimiter: typeof e.delimiter == "string" || qa.isRegExp(e.delimiter) ? e.delimiter : pn.delimiter,
            depth: typeof e.depth == "number" || e.depth === !1 ? +e.depth : pn.depth,
            ignoreQueryPrefix: e.ignoreQueryPrefix === !0,
            interpretNumericEntities: typeof e.interpretNumericEntities == "boolean" ? e.interpretNumericEntities : pn.interpretNumericEntities,
            parameterLimit: typeof e.parameterLimit == "number" ? e.parameterLimit : pn.parameterLimit,
            parseArrays: e.parseArrays !== !1,
            plainObjects: typeof e.plainObjects == "boolean" ? e.plainObjects : pn.plainObjects,
            strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : pn.strictNullHandling
        }
    },
    xk = function(t, e) {
        var n = wk(e);
        if (t === "" || t === null || typeof t > "u") return n.plainObjects ? Object.create(null) : {};
        for (var i = typeof t == "string" ? yk(t, n) : t, o = n.plainObjects ? Object.create(null) : {}, r = Object.keys(i), V = 0; V < r.length; ++V) {
            var A = r[V],
                c = vk(A, i[A], n, typeof t == "string");
            o = qa.merge(o, c, n)
        }
        return n.allowSparse === !0 ? o : qa.compact(o)
    },
    kk = uk,
    Ck = xk,
    Rk = Cu,
    Qg = {
        formats: Rk,
        parse: Ck,
        stringify: kk
    };
class Dk {
    constructor(e) {
        this.code = e.code, this.token = e.token, this.host = e.host
    }
}
class Sk {
    constructor(e) {
        this.appId = e.appId, this.appTag = e.appTag, this.audienceEnabled = e.audienceEnabled, this.code = e.code, this.host = e.host, this.audienceHost = e.audienceHost, this.locked = e.locked, this.full = e.full, this.moderationEnabled = e.moderationEnabled, this.passwordRequired = e.passwordRequired, this.twitchLocked = e.twitchLocked, this.locale = e.locale, this.keepalive = e.keepalive, this.controllerBranch = e.controllerBranch
    }
}
class Tk {
    constructor(e) {
        this.connections = e.connections
    }
}
class Ek {
    constructor(e) {
        this.cause = e.cause
    }
    whenReceived(e) {
        e.disconnect()
    }
}
class Lk {}
var VA = {
    CreateRoomReply: Dk,
    GetRoomReply: Sk,
    GetAudienceReply: Tk,
    RoomExit: Ek,
    RoomLock: Lk
};
const jf = Lh.exports,
    Bk = Qg,
    {
        CreateRoomReply: Mk,
        GetRoomReply: Ok
    } = VA;
class Ik {
    constructor(e) {
        if (!e.host) throw new Error("unable to create ecast APIClient: no host provided");
        if (this.host = e.host, !e.scheme) throw new Error("unable to create ecast APIClient: no scheme provided");
        this.scheme = e.scheme
    }
    url(e, n) {
        if (n) {
            let i = Bk.stringify(n);
            return `${this.scheme}://${window.location.hostname}/api/v2${e}?${i}`
        }
        return `${this.scheme}://${window.location.hostname}/api/v2${e}`
    }
    async createRoom(e) {
        let n = {
            userId: e.userId || "fart",
            appTag: e.appTag || "test"
        };
        e.password && (n.password = e.password), e.moderatorPassword && (n.moderatorPassword = e.moderatorPassword), e.twitchLocked && (n.twitchLocked = e.twitchLocked), e.locale && (n.locale = e.locale), e.keepalive && (n.keepalive = e.keepalive), e.controllerBranch && (n.controllerBranch = e.controllerBranch);
        let i = this.url("/rooms", n),
            V = await (await jf(i, {
                method: "POST"
            })).json();
        if (!V.ok) throw new Error(`failed to create room: ${V.error}`);
        let A = V.body;
        return new Mk({
            code: A.code,
            token: A.token,
            host: A.host
        })
    }
    async getRoom(e) {
        let n = this.url(`/rooms/${e.code}`),
            o = await (await jf(n)).json();
        if (!o.ok) throw new Error(`unable to get room with options ${JSON.stringify(e)}: ${o.error}`);
        let r = o.body;
        return new Ok({
            appId: r.appId,
            appTag: r.appTag,
            audienceEnabled: r.audienceEnabled,
            code: r.code,
            host: r.host,
            audienceHost: r.audienceHost,
            locked: r.locked,
            full: r.full,
            moderationEnabled: r.moderationEnabled,
            passwordRequired: r.passwordRequired,
            twitchLocked: r.twitchLocked,
            locale: r.locale,
            keepalive: r.keepalive,
            controllerBranch: r.controllerBranch
        })
    }
}
var Pk = {
        APIClient: Ik
    },
    Xo = null;
typeof WebSocket < "u" ? Xo = WebSocket : typeof MozWebSocket < "u" ? Xo = MozWebSocket : typeof Ct < "u" ? Xo = Ct.WebSocket || Ct.MozWebSocket : typeof window < "u" ? Xo = window.WebSocket || window.MozWebSocket : typeof self < "u" && (Xo = self.WebSocket || self.MozWebSocket);
var Uk = Xo,
    Ru = {
        exports: {}
    },
    oa = typeof Reflect == "object" ? Reflect : null,
    Qf = oa && typeof oa.apply == "function" ? oa.apply : function(e, n, i) {
        return Function.prototype.apply.call(e, n, i)
    },
    wl;
oa && typeof oa.ownKeys == "function" ? wl = oa.ownKeys : Object.getOwnPropertySymbols ? wl = function(e) {
    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
} : wl = function(e) {
    return Object.getOwnPropertyNames(e)
};

function Fk(t) {
    console && console.warn && console.warn(t)
}
var zg = Number.isNaN || function(e) {
    return e !== e
};

function zt() {
    zt.init.call(this)
}
Ru.exports = zt;
Ru.exports.once = Hk;
zt.EventEmitter = zt;
zt.prototype._events = void 0;
zt.prototype._eventsCount = 0;
zt.prototype._maxListeners = void 0;
var zf = 10;

function lA(t) {
    if (typeof t != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t)
}
Object.defineProperty(zt, "defaultMaxListeners", {
    enumerable: !0,
    get: function() {
        return zf
    },
    set: function(t) {
        if (typeof t != "number" || t < 0 || zg(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
        zf = t
    }
});
zt.init = function() {
    (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
};
zt.prototype.setMaxListeners = function(e) {
    if (typeof e != "number" || e < 0 || zg(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
    return this._maxListeners = e, this
};

function Hg(t) {
    return t._maxListeners === void 0 ? zt.defaultMaxListeners : t._maxListeners
}
zt.prototype.getMaxListeners = function() {
    return Hg(this)
};
zt.prototype.emit = function(e) {
    for (var n = [], i = 1; i < arguments.length; i++) n.push(arguments[i]);
    var o = e === "error",
        r = this._events;
    if (r !== void 0) o = o && r.error === void 0;
    else if (!o) return !1;
    if (o) {
        var V;
        if (n.length > 0 && (V = n[0]), V instanceof Error) throw V;
        var A = new Error("Unhandled error." + (V ? " (" + V.message + ")" : ""));
        throw A.context = V, A
    }
    var c = r[e];
    if (c === void 0) return !1;
    if (typeof c == "function") Qf(c, this, n);
    else
        for (var d = c.length, m = Kg(c, d), i = 0; i < d; ++i) Qf(m[i], this, n);
    return !0
};

function Ng(t, e, n, i) {
    var o, r, V;
    if (lA(n), r = t._events, r === void 0 ? (r = t._events = Object.create(null), t._eventsCount = 0) : (r.newListener !== void 0 && (t.emit("newListener", e, n.listener ? n.listener : n), r = t._events), V = r[e]), V === void 0) V = r[e] = n, ++t._eventsCount;
    else if (typeof V == "function" ? V = r[e] = i ? [n, V] : [V, n] : i ? V.unshift(n) : V.push(n), o = Hg(t), o > 0 && V.length > o && !V.warned) {
        V.warned = !0;
        var A = new Error("Possible EventEmitter memory leak detected. " + V.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        A.name = "MaxListenersExceededWarning", A.emitter = t, A.type = e, A.count = V.length, Fk(A)
    }
    return t
}
zt.prototype.addListener = function(e, n) {
    return Ng(this, e, n, !1)
};
zt.prototype.on = zt.prototype.addListener;
zt.prototype.prependListener = function(e, n) {
    return Ng(this, e, n, !0)
};

function jk() {
    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
}

function Gg(t, e, n) {
    var i = {
            fired: !1,
            wrapFn: void 0,
            target: t,
            type: e,
            listener: n
        },
        o = jk.bind(i);
    return o.listener = n, i.wrapFn = o, o
}
zt.prototype.once = function(e, n) {
    return lA(n), this.on(e, Gg(this, e, n)), this
};
zt.prototype.prependOnceListener = function(e, n) {
    return lA(n), this.prependListener(e, Gg(this, e, n)), this
};
zt.prototype.removeListener = function(e, n) {
    var i, o, r, V, A;
    if (lA(n), o = this._events, o === void 0) return this;
    if (i = o[e], i === void 0) return this;
    if (i === n || i.listener === n) --this._eventsCount === 0 ? this._events = Object.create(null) : (delete o[e], o.removeListener && this.emit("removeListener", e, i.listener || n));
    else if (typeof i != "function") {
        for (r = -1, V = i.length - 1; V >= 0; V--)
            if (i[V] === n || i[V].listener === n) {
                A = i[V].listener, r = V;
                break
            } if (r < 0) return this;
        r === 0 ? i.shift() : Qk(i, r), i.length === 1 && (o[e] = i[0]), o.removeListener !== void 0 && this.emit("removeListener", e, A || n)
    }
    return this
};
zt.prototype.off = zt.prototype.removeListener;
zt.prototype.removeAllListeners = function(e) {
    var n, i, o;
    if (i = this._events, i === void 0) return this;
    if (i.removeListener === void 0) return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : i[e] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete i[e]), this;
    if (arguments.length === 0) {
        var r = Object.keys(i),
            V;
        for (o = 0; o < r.length; ++o) V = r[o], V !== "removeListener" && this.removeAllListeners(V);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
    }
    if (n = i[e], typeof n == "function") this.removeListener(e, n);
    else if (n !== void 0)
        for (o = n.length - 1; o >= 0; o--) this.removeListener(e, n[o]);
    return this
};

function Xg(t, e, n) {
    var i = t._events;
    if (i === void 0) return [];
    var o = i[e];
    return o === void 0 ? [] : typeof o == "function" ? n ? [o.listener || o] : [o] : n ? zk(o) : Kg(o, o.length)
}
zt.prototype.listeners = function(e) {
    return Xg(this, e, !0)
};
zt.prototype.rawListeners = function(e) {
    return Xg(this, e, !1)
};
zt.listenerCount = function(t, e) {
    return typeof t.listenerCount == "function" ? t.listenerCount(e) : Yg.call(t, e)
};
zt.prototype.listenerCount = Yg;

function Yg(t) {
    var e = this._events;
    if (e !== void 0) {
        var n = e[t];
        if (typeof n == "function") return 1;
        if (n !== void 0) return n.length
    }
    return 0
}
zt.prototype.eventNames = function() {
    return this._eventsCount > 0 ? wl(this._events) : []
};

function Kg(t, e) {
    for (var n = new Array(e), i = 0; i < e; ++i) n[i] = t[i];
    return n
}

function Qk(t, e) {
    for (; e + 1 < t.length; e++) t[e] = t[e + 1];
    t.pop()
}

function zk(t) {
    for (var e = new Array(t.length), n = 0; n < e.length; ++n) e[n] = t[n].listener || t[n];
    return e
}

function Hk(t, e) {
    return new Promise(function(n, i) {
        function o(V) {
            t.removeListener(e, r), i(V)
        }

        function r() {
            typeof t.removeListener == "function" && t.removeListener("error", o), n([].slice.call(arguments))
        }
        Wg(t, e, r, {
            once: !0
        }), e !== "error" && Nk(t, o, {
            once: !0
        })
    })
}

function Nk(t, e, n) {
    typeof t.on == "function" && Wg(t, "error", e, n)
}

function Wg(t, e, n, i) {
    if (typeof t.on == "function") i.once ? t.once(e, n) : t.on(e, n);
    else if (typeof t.addEventListener == "function") t.addEventListener(e, function o(r) {
        i.once && t.removeEventListener(e, o), n(r)
    });
    else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t)
}
class Gk {
    constructor(e) {
        e && (this.error = e.error, this.to = e.to)
    }
    toString() {
        return `ObservedError{
	to:${this.to}
	error:${this.error}
}`
    }
}
class AA extends Error {
    constructor(e) {
        super(e), e && (this.code = e.code, this.message = e.message)
    }
}
class Wr extends AA {
    constructor(e) {
        super(e), this.code = 1e3, this.message = e && e.message ? e.message : "ecast server error"
    }
}
class Jg extends Wr {
    constructor(e) {
        super(e), this.code = 1001, this.message = e && e.message ? e.message : "create room failed"
    }
}
class Zg extends Wr {
    constructor(e) {
        super(e), this.code = 1002, this.message = e && e.message ? e.message : "unable to connect to room"
    }
}
class _g extends Wr {
    constructor(e) {
        super(e), this.code = 1003, this.message = e && e.message ? e.message : "server is shutting down"
    }
}
class It extends AA {
    constructor(e) {
        super(e), this.code = 2e3, this.message = e && e.message ? e.message : "ecast client error"
    }
}
class $g extends It {
    constructor(e) {
        super(e), this.code = 2001, this.message = e && e.message ? e.message : "parse error in ecast protocol"
    }
}
class e1 extends It {
    constructor(e) {
        super(e), this.code = 2002, this.message = e && e.message ? e.message : "missing opcode"
    }
}
class t1 extends It {
    constructor(e) {
        super(e), this.code = 2003, this.message = e && e.message ? e.message : "invalid opcode"
    }
}
class n1 extends It {
    constructor(e) {
        super(e), this.code = 2004, this.message = e && e.message ? e.message : "invalid arguments"
    }
}
class i1 extends It {
    constructor(e) {
        super(e), this.code = 2005, this.message = e && e.message ? e.message : "entity not found"
    }
}
class s1 extends It {
    constructor(e) {
        super(e), this.code = 2006, this.message = e && e.message ? e.message : "an entity already exists with that key"
    }
}
class o1 extends It {
    constructor(e) {
        super(e), this.code = 2007, this.message = e && e.message ? e.message : "the entity is not of the expected type"
    }
}
class a1 extends It {
    constructor(e) {
        super(e), this.code = 2008, this.message = e && e.message ? e.message : "no such client"
    }
}
class r1 extends It {
    constructor(e) {
        super(e), this.code = 2009, this.message = e && e.message ? e.message : "room is locked"
    }
}
class V1 extends It {
    constructor(e) {
        super(e), this.code = 2010, this.message = e && e.message ? e.message : "room is full"
    }
}
class l1 extends It {
    constructor(e) {
        super(e), this.code = 2011, this.message = e && e.message ? e.message : "no such license"
    }
}
class A1 extends It {
    constructor(e) {
        super(e), this.code = 2012, this.message = e && e.message ? e.message : "invalid license"
    }
}
class c1 extends It {
    constructor(e) {
        super(e), this.code = 2013, this.message = e && e.message ? e.message : "room not found"
    }
}
class d1 extends It {
    constructor(e) {
        super(e), this.code = 2014, this.message = e && e.message ? e.message : "requested role does not exist"
    }
}
class p1 extends It {
    constructor(e) {
        super(e), this.code = 2015, this.message = e && e.message ? e.message : "twitch login required"
    }
}
class h1 extends It {
    constructor(e) {
        super(e), this.code = 2016, this.message = e && e.message ? e.message : "no such option"
    }
}
class u1 extends It {
    constructor(e) {
        super(e), this.code = 2017, this.message = e && e.message ? e.message : "password required"
    }
}
class m1 extends It {
    constructor(e) {
        super(e), this.code = 2018, this.message = e && e.message ? e.message : "invalid room password"
    }
}
class f1 extends It {
    constructor(e) {
        super(e), this.code = 2019, this.message = e && e.message ? e.message : "missing name"
    }
}
class q1 extends It {
    constructor(e) {
        super(e), this.code = 2021, this.message = e && e.message ? e.message : "text did not pass text filters"
    }
}
class g1 extends It {
    constructor(e) {
        super(e), this.code = 2022, this.message = e && e.message ? e.message : "no such filter"
    }
}
class y1 extends It {
    constructor(e) {
        super(e), this.code = 2023, this.message = e && e.message ? e.message : "permission denied"
    }
}
class b1 extends It {
    constructor(e) {
        super(e), this.code = 2024, this.message = e && e.message ? e.message : "not connected to a room"
    }
}
class v1 extends It {
    constructor(e) {
        super(e), this.code = 2025, this.message = e && e.message ? e.message : "illegal operation"
    }
}
class w1 extends It {
    constructor(e) {
        super(e), this.code = 2026, this.message = e && e.message ? e.message : "invalid ACL change"
    }
}
class x1 extends It {
    constructor(e) {
        super(e), this.code = 2027, this.message = e && e.message ? e.message : "room has already ended"
    }
}
class k1 extends It {
    constructor(e) {
        super(e), this.code = 2028, this.message = e && e.message ? e.message : "the entity is locked"
    }
}
class C1 extends It {
    constructor(e) {
        super(e), this.code = 2420, this.message = e && e.message ? e.message : "rate limit exceeded"
    }
}

function Xk({
    code: t,
    message: e
}) {
    const n = Yk[t];
    return n ? new n({
        message: e
    }) : new AA({
        message: e
    })
}
var Zi = {
    createError: Xk,
    CallError: AA,
    EcastServerError: Wr,
    EcastCreateRoomFailed: Jg,
    EcastDialRoomFailed: Zg,
    EcastServerIsShuttingDown: _g,
    EcastClientError: It,
    EcastParseError: $g,
    EcastRequestIsMissingOpcode: e1,
    EcastRequestHasInvalidOpcode: t1,
    EcastRequestHasInvalidArguments: n1,
    EcastEntityNotFound: i1,
    EcastEntityAlreadyExists: s1,
    EcastEntityTypeError: o1,
    EcastNoSuchClient: a1,
    EcastRoomIsLocked: r1,
    EcastRoomIsFull: V1,
    EcastLicenseNotFound: l1,
    EcastLicenseCheckFailed: A1,
    EcastRoomNotFound: c1,
    EcastInvalidRole: d1,
    EcastTwitchLoginRequired: p1,
    EcastInvalidOption: h1,
    EcastPasswordRequired: u1,
    EcastInvalidPassword: m1,
    EcastNameRequired: f1,
    EcastFilterError: q1,
    EcastNoSuchFilter: g1,
    EcastPermissionDenied: y1,
    EcastNotConnected: b1,
    EcastIllegalOperation: v1,
    EcastACLChangeDenied: w1,
    EcastRoomHasEnded: x1,
    EcastEntityLocked: k1,
    EcastRateLimitExceeded: C1,
    ObservedError: Gk
};
const Yk = {
    1e3: Wr,
    1001: Jg,
    1002: Zg,
    1003: _g,
    2e3: It,
    2001: $g,
    2002: e1,
    2003: t1,
    2004: n1,
    2005: i1,
    2006: s1,
    2007: o1,
    2008: a1,
    2009: r1,
    2010: V1,
    2011: l1,
    2012: A1,
    2013: c1,
    2014: d1,
    2015: p1,
    2016: h1,
    2017: u1,
    2018: m1,
    2019: f1,
    2021: q1,
    2022: g1,
    2023: y1,
    2024: b1,
    2025: v1,
    2026: w1,
    2027: x1,
    2028: k1,
    2420: C1
};
class Kk {
    constructor(e) {
        this.id = e.id, this.deviceId = e.deviceId, this.name = e.name, this.secret = e.secret, this.reconnect = e.reconnect, this.entities = e.entities, this.here = e.here, this.profile = e.profile, this.replayEnd = e.replayEnd
    }
}
class Wk {
    constructor(e) {
        this.id = e.id, this.userId = e.userId, this.name = e.name, this.role = e.role, this.reconnect = e.reconnect
    }
}
class Jk {
    constructor(e) {
        this.id = e.id, this.role = e.role
    }
}
class Zk {
    constructor(e) {
        this.to = e.to, this.from = e.from, this.body = e.body, this.userId = e.userId
    }
}
class _k {
    constructor(e) {
        this.id = e.id, this.banned = e.banned, this.reason = e.reason
    }
}
var Du = {
    ClientConnected: Wk,
    ClientDisconnected: Jk,
    ClientKicked: _k,
    ClientSend: Zk,
    ClientWelcome: Kk
};
class $k {
    constructor(e) {
        this.choices = e.choices, this.key = e.key, this.meta = e.meta || {}
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `CountGroup{
	choices: ${this.choices}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var Su = {
    CountGroup: $k
};
class e8 {
    constructor(e) {
        this.key = e.key, this.count = e.count, this.meta = e.meta || {}
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `GCounter{
	count:${this.count}
	meta:${this.meta}
}`
    }
}
var Tu = {
    GCounter: e8
};
class t8 {
    constructor(e) {
        this.pc = e.pc, this.opcode = e.opcode, this.result = e.result
    }
}
var R1 = {
    Notification: t8
};
class n8 {
    constructor(e) {
        this.from = e.from, this.key = e.key, this.val = e.val, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `ObjectEntity{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
	meta:${JSON.stringify(this.meta)}
}`
    }
    toBlob() {
        return this.val
    }
}
class i8 {
    constructor(e) {
        this.message = e.message
    }
    toString() {
        return `ObjectEcho{message: ${this.message}}`
    }
}
var Eu = {
    ObjectEntity: n8,
    ObjectEcho: i8
};
class s8 {
    constructor(e) {
        this.key = e.key, this.count = e.count, this.meta = e.meta || {}
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `PNCounter{
	count:${this.count}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var Lu = {
    PNCounter: s8
};
class o8 {
    constructor(e) {
        this.pc = e.pc, this.re = e.re, this.opcode = e.opcode, this.result = e.result
    }
}
var D1 = {
    Reply: o8
};
class a8 {
    constructor(e) {
        this.seq = e.seq, this.opcode = e.opcode, this.params = e.params
    }
}
var r8 = {
    Request: a8
};
class V8 {
    constructor(e) {
        this.from = e.from, this.key = e.key, this.text = e.text, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
    }
    whenReceived(e) {
        e.entities[this.key] = this, e.emit("text " + this.key, this)
    }
    toString() {
        return `TextEntity{
	key:${this.key}
	text: ${this.text}
	meta:${JSON.stringify(this.meta)}
}`
    }
    toBlob() {
        return JSON.parse(this.text)
    }
}
class l8 {
    constructor(e) {
        this.message = e.message
    }
    toString() {
        return `TextEcho{message: ${this.message}
}`
    }
}
var Bu = {
    TextEntity: V8,
    TextEcho: l8
};
class A8 {
    constructor(e) {
        this.key = e.key, this.elements = e.elements, this.limit = e.limit, this.meta = e.meta || {}
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `TextRing{
	elements: ${this.elements}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
var Mu = {
    TextRing: A8
};
class c8 {
    constructor(e) {
        this.key = e.key, this.artifactId = e.artifactId, this.categoryId = e.categoryId, this.rootId = e.rootId, this.meta = e.meta || {}
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `ArtifactEntity${JSON.stringify(this)}
`
    }
}
var S1 = {
    ArtifactEntity: c8
};
class d8 {
    constructor(e) {
        this.key = e.key, this.colors = e.colors, this.lines = e.lines, this.live = e.live, this.maxPoints = e.maxPoints, this.size = e.size, this.weights = e.weights, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `Doodle{
	key:${this.key}
	colors:${this.colors}
	lines:${this.lines}
	live:${this.live}
	maxPoints:${this.maxPoints}
	size:${this.size}
	weights:${this.weights}
	meta:${JSON.stringify(this.meta)}
}`
    }
}
class p8 {
    constructor(e) {
        this.key = e.key, this.line = e.line
    }
    whenReceived(e) {
        e.entities[this.key].lines.push(this.line)
    }
    toString() {
        return `DoodleLine{
	val:${this.line}
}`
    }
}
class h8 {
    constructor(e) {
        this.key = e.key, this.index = e.index
    }
    whenReceived(e) {
        e.entities[this.key].lines.splice(this.index, 1)
    }
    toString() {
        return `DoodleLineRemoved{
	index:${this.index}
}`
    }
}
var Ou = {
    DoodleEntity: d8,
    DoodleLine: p8,
    DoodleLineRemoved: h8
};
class u8 {
    constructor(e) {
        this.key = e.key, this.size = e.size, this.version = e.version, this.from = e.from, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
    }
    whenRecived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `Stack{
	key:${this.key}
	size:${this.size}
	version:${this.version}
	from:${this.from}
	meta:${this.meta}
}`
    }
}
class m8 {
    constructor(e) {
        this.key = e.key, this.val = e.val
    }
    toString() {
        return `StackElement{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
}`
    }
}
class f8 {
    constructor(e) {
        this.key = e.key, this.vals = e.vals
    }
    toString() {
        return `StackElements{
	key:${this.key}
	values: ${JSON.stringify(this.vals)}
}`
    }
}
var T1 = {
    StackEntity: u8,
    StackElement: m8,
    StackElements: f8
};
class q8 {
    constructor(e) {
        this.key = e.key
    }
    whenReceived(e) {
        delete e.entities[this.key]
    }
    toString() {
        return `DropEntity{
	key:${this.key}
}`
    }
}
var E1 = {
    DropEntity: q8
};
class g8 {
    constructor(e) {
        this.message = e.message
    }
    toString() {
        return `Echo{message: ${this.message}
}`
    }
}
var y8 = {
    Echo: g8
};
class b8 {
    constructor(e) {
        this.key = e.key, this.from = e.from
    }
    whenReceived(e) {
        e.entities[this.key] && (e.entities[this.key].meta.locked = !0)
    }
    toString() {
        return `LockEntity{
	key:${this.key}
}`
    }
}
var v8 = {
    LockEntity: b8
};
class w8 {
    constructor() {}
    toString() {
        return "OK"
    }
}
var L1 = {
    OK: w8
};
class x8 {
    constructor(e) {
        this.from = e.from, this.key = e.key, this.val = e.val, this.restrictions = e.restrictions, this.version = e.version, this.meta = e.meta || {}, e.acl && (this.acl = e.acl)
    }
    whenReceived(e) {
        e.entities[this.key] = this
    }
    toString() {
        return `NumberEntity{
	key:${this.key}
	val: ${this.val}
	restrictions: ${JSON.stringify(this.restrictions)}
	meta: ${JSON.stringify(this.meta)}
}`
    }
}
var B1 = {
    NumberEntity: x8
};
const {
    ArtifactEntity: k8
} = S1, {
    ClientWelcome: C8,
    ClientConnected: R8,
    ClientDisconnected: D8,
    ClientKicked: S8,
    ClientSend: T8
} = Du, {
    CountGroup: E8
} = Su, {
    DoodleEntity: L8,
    DoodleLine: B8,
    DoodleLineRemoved: M8
} = Ou, {
    StackEntity: O8,
    StackElement: I8,
    StackElements: P8
} = T1, {
    DropEntity: U8
} = E1, {
    Echo: F8
} = y8, {
    LockEntity: j8
} = v8, {
    GCounter: Q8
} = Tu, {
    GetAudienceReply: z8,
    RoomExit: H8,
    RoomLock: N8
} = VA, {
    Notification: G8
} = R1, {
    OK: X8
} = L1, {
    NumberEntity: Y8
} = B1, {
    ObjectEcho: K8,
    ObjectEntity: W8
} = Eu, {
    PNCounter: Hf
} = Lu, {
    Reply: J8
} = D1, {
    TextEcho: Z8,
    TextEntity: _8
} = Bu, {
    TextRing: $8
} = Mu, {
    createError: Nf,
    ObservedError: e9
} = Zi;

function jh(t, e, n) {
    switch (t) {
        case "ok":
            return new X8;
        case "echo":
            return new F8({
                message: e.message
            });
        case "lock":
            return new j8({
                key: e.key,
                from: e.from
            });
        case "error":
            return Nf({
                code: e.code,
                message: e.msg
            });
        case "error/observed":
            return new e9({
                to: e.to,
                error: Nf({
                    code: e.error.code,
                    message: e.error.msg
                })
            });
        case "string":
            return e;
        case "text":
            return new _8({
                from: e.from,
                key: e.key,
                text: e.val,
                version: e.version,
                meta: n,
                acl: e.acl
            });
        case "text/echo":
            return new Z8({
                message: e.message
            });
        case "object":
            return new W8({
                from: e.from,
                key: e.key,
                val: e.val,
                meta: n,
                acl: e.acl
            });
        case "object/echo":
            return new K8({
                message: e.message
            });
        case "drop":
            return new U8({
                key: e.key
            });
        case "artifact":
            return new k8({
                key: e.key,
                artifactId: e.artifactId,
                categoryId: e.categoryId,
                rootId: e.rootId,
                meta: n
            });
        case "client/connected":
            return new R8({
                id: e.id,
                userId: e.userId,
                name: e.name,
                role: e.role,
                reconnect: e.reconnect
            });
        case "client/disconnected":
            return new D8({
                id: e.id,
                role: e.role
            });
        case "client/kicked":
            return new S8({
                id: e.id,
                banned: e.banned,
                reason: e.reason
            });
        case "client/send":
            return new T8({
                to: e.to,
                from: e.from,
                body: e.body,
                userId: e.userID
            });
        case "client/welcome": {
            let i = new C8({
                id: e.id,
                name: e.name,
                secret: e.secret,
                reconnect: e.reconnect,
                here: e.here,
                profile: e.profile,
                replayEnd: e.replayEnd
            });
            if (e.entities) {
                let o = {};
                Object.entries(e.entities).forEach(([r, V]) => {
                    o[r] = jh(V[0], V[1], V[2])
                }), i.entities = o
            }
            return i
        }
        case "doodle":
            return new L8({
                key: e.key,
                colors: e.val.colors,
                lines: e.val.lines,
                live: e.val.live,
                maxPoints: e.val.maxPoints,
                size: e.val.size,
                weights: e.val.weights,
                meta: n,
                acl: e.acl
            });
        case "doodle/line":
            return new B8({
                key: e.key,
                line: e.val
            });
        case "doodle/line/removed":
            return new M8({
                key: e.key,
                index: e.index
            });
        case "stack":
            return new O8({
                key: e.key,
                size: e.size,
                from: e.from,
                version: e.version,
                meta: e.meta,
                acl: e.acl
            });
        case "stack/element":
            return new I8({
                key: e.key,
                val: e.val
            });
        case "stack/elements":
            return new P8({
                key: e.key,
                vals: e.vals
            });
        case "number":
            return new Y8({
                key: e.key,
                val: e.val,
                restrictions: e.restrictions,
                from: e.from,
                version: e.version,
                meta: n,
                acl: e.acl
            });
        case "room/exit":
            return new H8({
                cause: e.cause
            });
        case "room/lock":
            return new N8;
        case "room/get-audience":
            return new z8({
                connections: e.connections
            });
        case "audience":
            return new Hf({
                key: t,
                count: e[1]
            });
        case "audience/count-group":
            return new E8({
                key: e.key,
                choices: e.choices,
                meta: n
            });
        case "audience/text-ring":
            return new $8({
                key: e.key,
                elements: e.elements,
                meta: n
            });
        case "audience/g-counter":
            return new Q8({
                key: e.key,
                count: e.count,
                meta: n
            });
        case "audience/pn-counter":
            return new Hf({
                key: e.key,
                count: e.count,
                meta: n
            });
        default:
            return console.error(`failed to parse result of type ${t}: ${JSON.stringify(e,null,2)}`), e
    }
}

function t9(t) {
    let e = JSON.parse(t.data),
        n = e.opcode || e.type;
    return e.re ? new J8({
        pc: e.pc,
        re: e.re,
        opcode: n,
        result: jh(n, e.result)
    }) : new G8({
        pc: e.pc,
        opcode: n,
        result: jh(n, e.result)
    })
}
var n9 = {
    parseResponseMessage: t9
};
const Gf = Uk,
    i9 = Qg,
    s9 = Ru.exports,
    {
        CallError: o9
    } = Zi,
    {
        ClientWelcome: a9
    } = Du,
    {
        CountGroup: r9
    } = Su,
    {
        GCounter: V9
    } = Tu,
    {
        Notification: Xf
    } = R1,
    {
        ObjectEntity: ih
    } = Eu,
    {
        PNCounter: l9
    } = Lu,
    {
        Reply: A9
    } = D1,
    {
        Request: c9
    } = r8,
    {
        TextEntity: sh
    } = Bu,
    {
        TextRing: d9
    } = Mu,
    {
        parseResponseMessage: p9
    } = n9,
    {
        DoodleEntity: h9
    } = Ou,
    {
        StackEntity: u9
    } = T1,
    m9 = 1e3 + Math.floor(Math.random() * 500),
    Yf = 13e3;
class f9 extends s9 {
    constructor(e) {
        if (super(), this.debug = e.debug || !1, !e.host) throw new Error("unable to create ecast WSClient: no host provided");
        if (this.host = e.host, !e.code) throw new Error("unable to create ecast WSClient: no room code provided");
        if (this.code = e.code, e.scheme ? this.scheme = e.scheme : this.scheme = "wss", e.secret && e.id) this.id = e.id, this.secret = e.secret;
        else {
            switch (e.role) {
                case "player":
                    if (!e.name) throw new Error("unable to create ecast WSClient: no name provided");
                    break;
                case "host":
                    if (!e.token) throw new Error("unable to create ecast WSClient: tried to connect with host role but without host token");
                    this.token = e.token;
                    break;
                case "moderator":
                    if (!e.password) throw new Error("unable to create ecast WSClient: tried to connect with moderator role but without password");
                    break
            }
            e.password && (this.password = e.password), e.twitchToken && (this.twitchToken = e.twitchToken)
        }
        this.name = e.name, this.role = e.role, this.deviceId = e.deviceId, this.userId = e.userId, this.conn = null, this.seq = 0, this.pending = {}, this.entities = {}, e.role == "host" && (this.replaySince = e.replaySince || 0, this.syncEntities = e.syncEntities || !1)
    }
    connect() {
        const e = {
            id: this.id,
            role: this.role,
            name: this.name,
            format: "json",
            "user-id": this.userId,
            password: this.password
        };
        this.deviceId && (e["device-id"] = this.deviceId), this.twitchToken && (e["twitch-token"] = this.twitchToken), this.secret && (e.secret = this.secret), this.role === "host" && (e["host-token"] = this.token, this.replaySince > 0 && (e["replay-since"] = this.replaySince), this.syncEntities && (e["sync-entities"] = this.syncEntities));
        const n = i9.stringify(e),
            i = this.role === "audience" || this.id > 1e7 ? `${this.scheme}://${window.location.hostname}/api/v2/audience/${this.code}/play?${n}` : `${this.scheme}://${window.location.hostname}/api/v2/rooms/${this.code}/play?${n}`;
        return new Promise((o, r) => {
            let V = !1,
                A = !1,
                c = m => {
                    o(m), V = !0
                },
                d = m => {
                    r(m), V = !0
                };
            this.conn = new Gf(i, "ecast-v0"), this.conn.onmessage = m => {
                this.debugLog(`recv <- ${JSON.stringify(JSON.parse(m.data),null,2)}`);
                const q = p9(m);
                if (q instanceof A9) this.onReply(q);
                else if (q instanceof Xf) {
                    if (q.result instanceof a9) A = !0, this.id = q.result.id, this.deviceId = q.result.deviceId, this.entities = q.result.entities, this.secret = q.result.secret, q.result.name && (this.name = q.result.name), c(q.result);
                    else if (!V) {
                        d(q.result);
                        return
                    }
                    this.onNotification(q)
                } else console.error(`failed to parse response messsage: ${q}`)
            }, this.conn.onerror = m => {
                V ? this.emit("socketError", m) : d(m)
            }, this.conn.onclose = m => {
                this.debugLog("onclose", m.code), A && m.code === 1006 ? this.reconnect() : this.emit("socketClose", m)
            }, this.conn.onopen = m => {
                this.emit("socketOpen", m)
            }
        })
    }
    sleep(e) {
        return new Promise(n => setTimeout(n, e))
    }
    debugLog(...e) {
        !this.debug || console.log(`%c[WSClient:${this.name}]`, "background-color:blue;color:white;", ...e)
    }
    async reconnect() {
        this.disconnect(), this.debugLog("Attempting to reconnect");
        let e = 1,
            n = m9;
        for (;;) try {
            this.emit("connection", {
                status: "connecting",
                attempt: e
            }), await this.connect(), this.debugLog("reconnected"), this.emit("connection", {
                status: "connected"
            });
            return
        } catch (i) {
            if (this.debugLog("reconnect error", i), i.code === 1005 || i.code === 1e3) {
                this.debugLog("unable to reconnect!", i), this.emit("socketClose", i);
                return
            }
            if (n >= Yf) {
                this.debugLog("reconnect failed!", i), this.emit("socketClose", i);
                return
            }
            e += 1, this.debugLog("waiting", n), this.emit("connection", {
                status: "waiting",
                attempt: e
            }), await this.sleep(n), n = Math.min(Yf, n * 2)
        }
    }
    disconnect() {
        !this.conn || (this.conn.close(), this.conn.onmessage = null, this.conn.onerror = null, this.conn.onopen = null, this.conn.onclose = null, this.conn = null)
    }
    onReply(e) {
        const n = e.re,
            i = this.pending[n];
        if (!i) {
            const o = new Xf(e);
            o.re = n, this.emit("notification", o);
            return
        }
        delete this.pending[n], e.result instanceof o9 ? i.reject(e.result) : i.resolve(e.result)
    }
    onNotification(e) {
        typeof e.result.whenReceived == "function" && e.result.whenReceived(this), this.emit("notification", e), this.emit(e.opcode, e.result)
    }
    send(e, n = {}) {
        if (!this.conn) throw new Error("No connection available");
        if (this.conn.readyState !== Gf.OPEN) throw new Error(`Socket not ready to send, readyState is ${this.conn.readyState}`);
        const i = ++this.seq,
            o = new c9({
                seq: i,
                opcode: e,
                params: n
            }),
            r = new Promise((A, c) => {
                this.pending[i] = {
                    resolve: A,
                    reject: c,
                    request: o
                }
            }),
            V = JSON.stringify(o);
        return this.debugLog(`send -> ${V}`), this.conn.send(V), r
    }
    lockRoom() {
        return this.send("room/lock")
    }
    startAudience() {
        return this.send("room/start-audience")
    }
    getAudience() {
        return this.send("room/get-audience")
    }
    mail(e, n) {
        return this.send("client/send", {
            from: this.id,
            to: e,
            body: n
        })
    }
    kick(e, n = !1, i) {
        return this.send("client/kick", {
            id: e,
            ban: n,
            reason: i
        })
    }
    async drop(e) {
        const n = await this.send("drop", {
            key: e
        });
        return delete this.entities[e], n
    }
    echo(e) {
        return this.send("echo", {
            message: e
        })
    }
    async lock(e) {
        const n = await this.send("lock", {
            key: e
        });
        return this.entities[e].meta.locked = !0, n
    }
    async getNumber(e) {
        const n = await this.send("number/get", {
            key: e
        });
        return this.entities[e].val = n.val, this.entities[e].restrictions = n.restrictions, n
    }
    async updateNumber(e, n) {
        const i = await this.send("number/update", {
            key: e,
            val: n
        });
        return this.entities[e].val = n, i
    }
    async createObject(e, n, i) {
        const o = {
            key: e,
            val: n
        };
        i && (o.acl = i);
        const r = await this.send("object/create", o);
        return this.entities[e] = new ih({
            key: e,
            val: n,
            meta: {
                locked: !1
            }
        }), r
    }
    echoObject(e) {
        return this.send("object/echo", {
            message: e
        })
    }
    async setObject(e, n, i) {
        const o = {
            key: e,
            val: n
        };
        i && (o.acl = i);
        const r = await this.send("object/set", o);
        return this.entities[e] = new ih({
            key: e,
            val: n,
            meta: {
                locked: !1
            }
        }), r
    }
    async updateObject(e, n) {
        const i = await this.send("object/update", {
            key: e,
            val: n
        });
        return this.entities[e] = new ih({
            key: e,
            val: n,
            meta: {
                locked: !1
            }
        }), i
    }
    echoText(e) {
        return this.send("text/echo", {
            message: e
        })
    }
    getText(e) {
        return this.send("text/get", {
            key: e
        })
    }
    async createText(e, n, i) {
        const o = {
                key: e,
                val: n
            },
            {
                acl: r,
                accept: V,
                reject: A
            } = i;
        r && (o.acl = r), V && (o.accept = V), A && (o.reject = A);
        const c = await this.send("text/create", o);
        return this.entities[e] = new sh({
            key: e,
            text: n,
            meta: {
                locked: !1
            }
        }), c
    }
    async setText(e, n, i) {
        const o = {
            key: e,
            val: n
        };
        i && (o.acl = i);
        const r = await this.send("text/set", o);
        return this.entities[e] = new sh({
            key: e,
            text: n,
            meta: {
                locked: !1
            }
        }), r
    }
    async updateText(e, n) {
        const i = await this.send("text/update", {
            key: e,
            val: n
        });
        return this.entities[e] = new sh({
            key: e,
            text: n,
            meta: {
                locked: !1
            }
        }), i
    }
    async createDoodle(e, n) {
        let i = {
            key: e
        };
        const {
            acl: o,
            colors: r,
            live: V,
            maxPoints: A,
            size: c,
            weights: d
        } = n;
        o && (i.acl = o), r && (i.colors = r), i.live = V, A != null && (i.maxPoints = A), c && (i.size = c), d && (i.weights = d);
        const m = await this.send("doodle/create", i);
        return this.entities[e] = new h9({
            key: e,
            colors: r,
            lines: [],
            live: V,
            locked: !1,
            maxPoints: i.maxPoints || 0,
            size: c,
            weights: d,
            meta: {
                locked: !1
            }
        }), m
    }
    async getDoodle(e) {
        return this.send("doodle/get", {
            key: e
        })
    }
    async strokeDoodle(e, n) {
        const {
            layer: i,
            color: o,
            weight: r,
            points: V
        } = n, A = await this.send("doodle/stroke", {
            key: e,
            layer: i,
            color: o,
            weight: r,
            points: V
        }), c = {
            layer: i,
            color: o,
            weight: r,
            points: V
        };
        return this.entities[e].lines.push(c), A
    }
    async undoDoodle(e) {
        const n = await this.send("doodle/undo", {
            key: e
        });
        return this.entities[e].lines.pop(), n
    }
    async createStack(e, n) {
        const i = {
            key: e
        };
        n && (i.acl = n);
        const o = await this.send("stack/create", i);
        return this.entities[e] = new u9({
            key: e,
            size: 0,
            meta: {
                locked: !1
            }
        }), o
    }
    async pushStack(e, n) {
        return await this.send("stack/push", {
            key: e,
            val: n
        })
    }
    async bulkPushStack(e, n) {
        return await this.send("stack/bulkpush", {
            key: e,
            vals: n
        })
    }
    async peekStack(e, n) {
        return await this.send("stack/peek", {
            key: e,
            size: n
        })
    }
    async popStack(e) {
        return await this.send("stack/pop", {
            key: e
        })
    }
    async createCountGroup(e, n) {
        const i = await this.send("audience/count-group/create", {
            name: e,
            options: n
        });
        return this.entities[e] = new r9({
            key: e,
            choices: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementCountGroupCounter(e, n, i = 1) {
        return this.send("audience/count-group/increment", {
            name: e,
            vote: n,
            times: i
        })
    }
    getCountGroup(e) {
        return this.send("audience/count-group/get", {
            name: e
        })
    }
    async createGCounter(e, n) {
        const i = await this.send("audience/g-counter/create", {
            key: e,
            count: n
        });
        return this.entities[e] = new V9({
            key: e,
            count: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementGCounter(e, n) {
        return this.send("audience/g-counter/increment", {
            key: e,
            times: n
        })
    }
    getGCounter(e) {
        return this.send("audience/g-counter/get", {
            key: e
        })
    }
    async createPNCounter(e, n) {
        const i = await this.send("audience/pn-counter/create", {
            key: e,
            count: n
        });
        return this.entities[e] = new l9({
            key: e,
            count: n,
            meta: {
                locked: !1
            }
        }), i
    }
    incrementPNCounter(e, n) {
        return this.send("audience/pn-counter/increment", {
            key: e,
            times: n
        })
    }
    decrementPNCounter(e, n) {
        return this.send("audience/pn-counter/decrement", {
            key: e,
            times: n
        })
    }
    getPNCounter(e) {
        return this.send("audience/pn-counter/get", {
            key: e
        })
    }
    async createTextRing(e, n) {
        const i = {
                key: e
            },
            {
                limit: o,
                accept: r,
                reject: V
            } = n;
        o && (i.limit = o), r && (i.accept = r), V && (i.reject = V);
        const A = await this.send("audience/text-ring/create", i);
        return this.entities[e] = new d9({
            key: e,
            elements: [],
            limit: o,
            meta: {
                locked: !1
            }
        }), A
    }
    getTextRing(e) {
        return this.send("audience/text-ring/get", {
            name: e
        })
    }
    pushTextRing(e, n) {
        return this.send("audience/text-ring/push", {
            name: e,
            text: n
        })
    }
}
var q9 = {
    WSClient: f9
};
const {
    APIClient: g9
} = Pk, {
    WSClient: y9
} = q9, {
    CreateRoomReply: b9,
    GetRoomReply: v9
} = VA, {
    ClientWelcome: w9,
    ClientDisconnected: x9
} = Du, {
    ArtifactEntity: k9
} = S1, {
    GCounter: C9
} = Tu, {
    NumberEntity: R9
} = B1, {
    TextEntity: D9
} = Bu, {
    DoodleEntity: S9
} = Ou, {
    ObjectEntity: T9
} = Eu, {
    CountGroup: E9
} = Su, {
    DropEntity: L9
} = E1, {
    OK: B9
} = L1, {
    RoomExit: M9
} = VA, {
    TextRing: O9
} = Mu, {
    PNCounter: I9
} = Lu;
var eo = {
    APIClient: g9,
    WSClient: y9,
    ClientWelcome: w9,
    CreateRoomReply: b9,
    DropEntity: L9,
    GetRoomReply: v9,
    ClientDisconnected: x9,
    RoomExit: M9,
    OK: B9,
    ArtifactEntity: k9,
    DoodleEntity: S9,
    NumberEntity: R9,
    CountGroup: E9,
    GCounter: C9,
    ObjectEntity: T9,
    PNCounter: I9,
    TextEntity: D9,
    TextRing: O9
};

function Kf(...t) {
    console.log(...t)
}

function P9(t) {
    throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')
}
var Wf = {
    exports: {}
};
(function(t, e) {
    (function(n, i) {
        i(e)
    })(Ct, function(n) {
        var i = typeof window < "u" ? window : typeof Ct < "u" ? Ct : typeof self < "u" ? self : {},
            o = function(Z, le) {
                if (le = le.split(":")[0], Z = +Z, !Z) return !1;
                switch (le) {
                    case "http":
                    case "ws":
                        return Z !== 80;
                    case "https":
                    case "wss":
                        return Z !== 443;
                    case "ftp":
                        return Z !== 21;
                    case "gopher":
                        return Z !== 70;
                    case "file":
                        return !1
                }
                return Z !== 0
            },
            r = Object.prototype.hasOwnProperty,
            V;

        function A(ee) {
            try {
                return decodeURIComponent(ee.replace(/\+/g, " "))
            } catch {
                return null
            }
        }

        function c(ee) {
            try {
                return encodeURIComponent(ee)
            } catch {
                return null
            }
        }

        function d(ee) {
            for (var Z = /([^=?#&]+)=?([^&]*)/g, le = {}, K; K = Z.exec(ee);) {
                var Ve = A(K[1]),
                    Re = A(K[2]);
                Ve === null || Re === null || Ve in le || (le[Ve] = Re)
            }
            return le
        }

        function m(ee, Z) {
            Z = Z || "";
            var le = [],
                K, Ve;
            typeof Z != "string" && (Z = "?");
            for (Ve in ee)
                if (r.call(ee, Ve)) {
                    if (K = ee[Ve], !K && (K === null || K === V || isNaN(K)) && (K = ""), Ve = c(Ve), K = c(K), Ve === null || K === null) continue;
                    le.push(Ve + "=" + K)
                } return le.length ? Z + le.join("&") : ""
        }
        var q = m,
            v = d,
            D = {
                stringify: q,
                parse: v
            },
            S = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
            C = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,
            h = "[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]",
            w = new RegExp("^" + h + "+");

        function T(ee) {
            return (ee || "").toString().replace(w, "")
        }
        var M = [
                ["#", "hash"],
                ["?", "query"],
                function(Z, le) {
                    return u(le.protocol) ? Z.replace(/\\/g, "/") : Z
                },
                ["/", "pathname"],
                ["@", "auth", 1],
                [NaN, "host", void 0, 1, 1],
                [/:(\d+)$/, "port", void 0, 1],
                [NaN, "hostname", void 0, 1, 1]
            ],
            O = {
                hash: 1,
                query: 1
            };

        function Q(ee) {
            var Z;
            typeof window < "u" ? Z = window : typeof i < "u" ? Z = i : typeof self < "u" ? Z = self : Z = {};
            var le = Z.location || {};
            ee = ee || le;
            var K = {},
                Ve = typeof ee,
                Re;
            if (ee.protocol === "blob:") K = new te(unescape(ee.pathname), {});
            else if (Ve === "string") {
                K = new te(ee, {});
                for (Re in O) delete K[Re]
            } else if (Ve === "object") {
                for (Re in ee) Re in O || (K[Re] = ee[Re]);
                K.slashes === void 0 && (K.slashes = S.test(ee.href))
            }
            return K
        }

        function u(ee) {
            return ee === "file:" || ee === "ftp:" || ee === "http:" || ee === "https:" || ee === "ws:" || ee === "wss:"
        }

        function J(ee, Z) {
            ee = T(ee), Z = Z || {};
            var le = C.exec(ee),
                K = le[1] ? le[1].toLowerCase() : "",
                Ve = !!le[2],
                Re = !!le[3],
                De = 0,
                Ke;
            return Ve ? Re ? (Ke = le[2] + le[3] + le[4], De = le[2].length + le[3].length) : (Ke = le[2] + le[4], De = le[2].length) : Re ? (Ke = le[3] + le[4], De = le[3].length) : Ke = le[4], K === "file:" ? De >= 2 && (Ke = Ke.slice(2)) : u(K) ? Ke = le[4] : K ? Ve && (Ke = Ke.slice(2)) : De >= 2 && u(Z.protocol) && (Ke = le[4]), {
                protocol: K,
                slashes: Ve || u(K),
                slashesCount: De,
                rest: Ke
            }
        }

        function se(ee, Z) {
            if (ee === "") return Z;
            for (var le = (Z || "/").split("/").slice(0, -1).concat(ee.split("/")), K = le.length, Ve = le[K - 1], Re = !1, De = 0; K--;) le[K] === "." ? le.splice(K, 1) : le[K] === ".." ? (le.splice(K, 1), De++) : De && (K === 0 && (Re = !0), le.splice(K, 1), De--);
            return Re && le.unshift(""), (Ve === "." || Ve === "..") && le.push(""), le.join("/")
        }

        function te(ee, Z, le) {
            if (ee = T(ee), !(this instanceof te)) return new te(ee, Z, le);
            var K, Ve, Re, De, Ke, We, bt = M.slice(),
                tn = typeof Z,
                ot = this,
                ui = 0;
            for (tn !== "object" && tn !== "string" && (le = Z, Z = null), le && typeof le != "function" && (le = D.parse), Z = Q(Z), Ve = J(ee || "", Z), K = !Ve.protocol && !Ve.slashes, ot.slashes = Ve.slashes || K && Z.slashes, ot.protocol = Ve.protocol || Z.protocol || "", ee = Ve.rest, (ot.protocol === "file:" || !Ve.slashes && (Ve.protocol || Ve.slashesCount < 2 || !u(ot.protocol))) && (bt[3] = [/(.*)/, "pathname"]); ui < bt.length; ui++) {
                if (De = bt[ui], typeof De == "function") {
                    ee = De(ee, ot);
                    continue
                }
                Re = De[0], We = De[1], Re !== Re ? ot[We] = ee : typeof Re == "string" ? ~(Ke = ee.indexOf(Re)) && (typeof De[2] == "number" ? (ot[We] = ee.slice(0, Ke), ee = ee.slice(Ke + De[2])) : (ot[We] = ee.slice(Ke), ee = ee.slice(0, Ke))) : (Ke = Re.exec(ee)) && (ot[We] = Ke[1], ee = ee.slice(0, Ke.index)), ot[We] = ot[We] || K && De[3] && Z[We] || "", De[4] && (ot[We] = ot[We].toLowerCase())
            }
            le && (ot.query = le(ot.query)), K && Z.slashes && ot.pathname.charAt(0) !== "/" && (ot.pathname !== "" || Z.pathname !== "") && (ot.pathname = se(ot.pathname, Z.pathname)), ot.pathname.charAt(0) !== "/" && u(ot.protocol) && (ot.pathname = "/" + ot.pathname), o(ot.port, ot.protocol) || (ot.host = ot.hostname, ot.port = ""), ot.username = ot.password = "", ot.auth && (De = ot.auth.split(":"), ot.username = De[0] || "", ot.password = De[1] || ""), ot.origin = ot.protocol !== "file:" && u(ot.protocol) && ot.host ? ot.protocol + "//" + ot.host : "null", ot.href = ot.toString()
        }

        function ve(ee, Z, le) {
            var K = this;
            switch (ee) {
                case "query":
                    typeof Z == "string" && Z.length && (Z = (le || D.parse)(Z)), K[ee] = Z;
                    break;
                case "port":
                    K[ee] = Z, o(Z, K.protocol) ? Z && (K.host = K.hostname + ":" + Z) : (K.host = K.hostname, K[ee] = "");
                    break;
                case "hostname":
                    K[ee] = Z, K.port && (Z += ":" + K.port), K.host = Z;
                    break;
                case "host":
                    K[ee] = Z, /:\d+$/.test(Z) ? (Z = Z.split(":"), K.port = Z.pop(), K.hostname = Z.join(":")) : (K.hostname = Z, K.port = "");
                    break;
                case "protocol":
                    K.protocol = Z.toLowerCase(), K.slashes = !le;
                    break;
                case "pathname":
                case "hash":
                    if (Z) {
                        var Ve = ee === "pathname" ? "/" : "#";
                        K[ee] = Z.charAt(0) !== Ve ? Ve + Z : Z
                    } else K[ee] = Z;
                    break;
                default:
                    K[ee] = Z
            }
            for (var Re = 0; Re < M.length; Re++) {
                var De = M[Re];
                De[4] && (K[De[1]] = K[De[1]].toLowerCase())
            }
            return K.origin = K.protocol !== "file:" && u(K.protocol) && K.host ? K.protocol + "//" + K.host : "null", K.href = K.toString(), K
        }

        function be(ee) {
            (!ee || typeof ee != "function") && (ee = D.stringify);
            var Z, le = this,
                K = le.protocol;
            K && K.charAt(K.length - 1) !== ":" && (K += ":");
            var Ve = K + (le.slashes || u(le.protocol) ? "//" : "");
            return le.username && (Ve += le.username, le.password && (Ve += ":" + le.password), Ve += "@"), Ve += le.host + le.pathname, Z = typeof le.query == "object" ? ee(le.query) : le.query, Z && (Ve += Z.charAt(0) !== "?" ? "?" + Z : Z), le.hash && (Ve += le.hash), Ve
        }
        te.prototype = {
            set: ve,
            toString: be
        }, te.extractProtocol = J, te.location = Q, te.trimLeft = T, te.qs = D;
        var oe = te;

        function Ie(ee, Z) {
            setTimeout(function(le) {
                return ee.call(le)
            }, 4, Z)
        }

        function Y(ee, Z) {
            typeof process < "u" && console[ee].call(null, Z)
        }

        function re(ee, Z) {
            ee === void 0 && (ee = []);
            var le = [];
            return ee.forEach(function(K) {
                Z(K) || le.push(K)
            }), le
        }

        function ue(ee, Z) {
            ee === void 0 && (ee = []);
            var le = [];
            return ee.forEach(function(K) {
                Z(K) && le.push(K)
            }), le
        }
        var fe = function() {
            this.listeners = {}
        };
        fe.prototype.addEventListener = function(Z, le) {
            typeof le == "function" && (Array.isArray(this.listeners[Z]) || (this.listeners[Z] = []), ue(this.listeners[Z], function(K) {
                return K === le
            }).length === 0 && this.listeners[Z].push(le))
        }, fe.prototype.removeEventListener = function(Z, le) {
            var K = this.listeners[Z];
            this.listeners[Z] = re(K, function(Ve) {
                return Ve === le
            })
        }, fe.prototype.dispatchEvent = function(Z) {
            for (var le = this, K = [], Ve = arguments.length - 1; Ve-- > 0;) K[Ve] = arguments[Ve + 1];
            var Re = Z.type,
                De = this.listeners[Re];
            return Array.isArray(De) ? (De.forEach(function(Ke) {
                K.length > 0 ? Ke.apply(le, K) : Ke.call(le, Z)
            }), !0) : !1
        };

        function qe(ee) {
            var Z = ee.indexOf("?");
            return Z >= 0 ? ee.slice(0, Z) : ee
        }
        var ge = function() {
            this.urlMap = {}
        };
        ge.prototype.attachWebSocket = function(Z, le) {
            var K = qe(le),
                Ve = this.urlMap[K];
            if (Ve && Ve.server && Ve.websockets.indexOf(Z) === -1) return Ve.websockets.push(Z), Ve.server
        }, ge.prototype.addMembershipToRoom = function(Z, le) {
            var K = this.urlMap[qe(Z.url)];
            K && K.server && K.websockets.indexOf(Z) !== -1 && (K.roomMemberships[le] || (K.roomMemberships[le] = []), K.roomMemberships[le].push(Z))
        }, ge.prototype.attachServer = function(Z, le) {
            var K = qe(le),
                Ve = this.urlMap[K];
            if (!Ve) return this.urlMap[K] = {
                server: Z,
                websockets: [],
                roomMemberships: {}
            }, Z
        }, ge.prototype.serverLookup = function(Z) {
            var le = qe(Z),
                K = this.urlMap[le];
            if (K) return K.server
        }, ge.prototype.websocketsLookup = function(Z, le, K) {
            var Ve = qe(Z),
                Re, De = this.urlMap[Ve];
            if (Re = De ? De.websockets : [], le) {
                var Ke = De.roomMemberships[le];
                Re = Ke || []
            }
            return K ? Re.filter(function(We) {
                return We !== K
            }) : Re
        }, ge.prototype.removeServer = function(Z) {
            delete this.urlMap[qe(Z)]
        }, ge.prototype.removeWebSocket = function(Z, le) {
            var K = qe(le),
                Ve = this.urlMap[K];
            Ve && (Ve.websockets = re(Ve.websockets, function(Re) {
                return Re === Z
            }))
        }, ge.prototype.removeMembershipFromRoom = function(Z, le) {
            var K = this.urlMap[qe(Z.url)],
                Ve = K.roomMemberships[le];
            K && Ve !== null && (K.roomMemberships[le] = re(Ve, function(Re) {
                return Re === Z
            }))
        };
        var Te = new ge,
            Le = {
                CLOSE_NORMAL: 1e3,
                CLOSE_GOING_AWAY: 1001,
                CLOSE_PROTOCOL_ERROR: 1002,
                CLOSE_UNSUPPORTED: 1003,
                CLOSE_NO_STATUS: 1005,
                CLOSE_ABNORMAL: 1006,
                UNSUPPORTED_DATA: 1007,
                POLICY_VIOLATION: 1008,
                CLOSE_TOO_LARGE: 1009,
                MISSING_EXTENSION: 1010,
                INTERNAL_ERROR: 1011,
                SERVICE_RESTART: 1012,
                TRY_AGAIN_LATER: 1013,
                TLS_HANDSHAKE: 1015
            },
            Ge = {
                CONSTRUCTOR_ERROR: "Failed to construct 'WebSocket':",
                CLOSE_ERROR: "Failed to execute 'close' on 'WebSocket':",
                EVENT: {
                    CONSTRUCT: "Failed to construct 'Event':",
                    MESSAGE: "Failed to construct 'MessageEvent':",
                    CLOSE: "Failed to construct 'CloseEvent':"
                }
            },
            Xe = function() {};
        Xe.prototype.stopPropagation = function() {}, Xe.prototype.stopImmediatePropagation = function() {}, Xe.prototype.initEvent = function(Z, le, K) {
            Z === void 0 && (Z = "undefined"), le === void 0 && (le = !1), K === void 0 && (K = !1), this.type = "" + Z, this.bubbles = Boolean(le), this.cancelable = Boolean(K)
        };
        var nt = function(ee) {
                function Z(le, K) {
                    if (K === void 0 && (K = {}), ee.call(this), !le) throw new TypeError(Ge.EVENT_ERROR + " 1 argument required, but only 0 present.");
                    if (typeof K != "object") throw new TypeError(Ge.EVENT_ERROR + " parameter 2 ('eventInitDict') is not an object.");
                    var Ve = K.bubbles,
                        Re = K.cancelable;
                    this.type = "" + le, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Re ? Boolean(Re) : !1, this.cancelBubble = !1, this.bubbles = Ve ? Boolean(Ve) : !1
                }
                return ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z, Z
            }(Xe),
            Tt = function(ee) {
                function Z(le, K) {
                    if (K === void 0 && (K = {}), ee.call(this), !le) throw new TypeError(Ge.EVENT.MESSAGE + " 1 argument required, but only 0 present.");
                    if (typeof K != "object") throw new TypeError(Ge.EVENT.MESSAGE + " parameter 2 ('eventInitDict') is not an object");
                    var Ve = K.bubbles,
                        Re = K.cancelable,
                        De = K.data,
                        Ke = K.origin,
                        We = K.lastEventId,
                        bt = K.ports;
                    this.type = "" + le, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Re ? Boolean(Re) : !1, this.canncelBubble = !1, this.bubbles = Ve ? Boolean(Ve) : !1, this.origin = "" + Ke, this.ports = typeof bt > "u" ? null : bt, this.data = typeof De > "u" ? null : De, this.lastEventId = "" + (We || "")
                }
                return ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z, Z
            }(Xe),
            Pt = function(ee) {
                function Z(le, K) {
                    if (K === void 0 && (K = {}), ee.call(this), !le) throw new TypeError(Ge.EVENT.CLOSE + " 1 argument required, but only 0 present.");
                    if (typeof K != "object") throw new TypeError(Ge.EVENT.CLOSE + " parameter 2 ('eventInitDict') is not an object");
                    var Ve = K.bubbles,
                        Re = K.cancelable,
                        De = K.code,
                        Ke = K.reason,
                        We = K.wasClean;
                    this.type = "" + le, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = Re ? Boolean(Re) : !1, this.cancelBubble = !1, this.bubbles = Ve ? Boolean(Ve) : !1, this.code = typeof De == "number" ? parseInt(De, 10) : 0, this.reason = "" + (Ke || ""), this.wasClean = We ? Boolean(We) : !1
                }
                return ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z, Z
            }(Xe);

        function U(ee) {
            var Z = ee.type,
                le = ee.target,
                K = new nt(Z);
            return le && (K.target = le, K.srcElement = le, K.currentTarget = le), K
        }

        function g(ee) {
            var Z = ee.type,
                le = ee.origin,
                K = ee.data,
                Ve = ee.target,
                Re = new Tt(Z, {
                    data: K,
                    origin: le
                });
            return Ve && (Re.target = Ve, Re.srcElement = Ve, Re.currentTarget = Ve), Re
        }

        function R(ee) {
            var Z = ee.code,
                le = ee.reason,
                K = ee.type,
                Ve = ee.target,
                Re = ee.wasClean;
            Re || (Re = Z === Le.CLOSE_NORMAL || Z === Le.CLOSE_NO_STATUS);
            var De = new Pt(K, {
                code: Z,
                reason: le,
                wasClean: Re
            });
            return Ve && (De.target = Ve, De.srcElement = Ve, De.currentTarget = Ve), De
        }

        function j(ee, Z, le) {
            ee.readyState = He.CLOSING;
            var K = Te.serverLookup(ee.url),
                Ve = R({
                    type: "close",
                    target: ee.target,
                    code: Z,
                    reason: le
                }),
                Re = R({
                    type: "server::close",
                    target: ee,
                    code: Z,
                    reason: le
                });
            Ie(function() {
                Te.removeWebSocket(ee, ee.url), ee.readyState = He.CLOSED, ee.dispatchEvent(Ve), ee.dispatchEvent(Re), K && K.dispatchEvent(Ve, K)
            }, ee)
        }

        function N(ee, Z, le) {
            ee.readyState = He.CLOSING;
            var K = Te.serverLookup(ee.url),
                Ve = R({
                    type: "close",
                    target: ee.target,
                    code: Z,
                    reason: le,
                    wasClean: !1
                }),
                Re = R({
                    type: "server::close",
                    target: ee,
                    code: Z,
                    reason: le,
                    wasClean: !1
                }),
                De = U({
                    type: "error",
                    target: ee.target
                });
            Ie(function() {
                Te.removeWebSocket(ee, ee.url), ee.readyState = He.CLOSED, ee.dispatchEvent(De), ee.dispatchEvent(Ve), ee.dispatchEvent(Re), K && K.dispatchEvent(Ve, K)
            }, ee)
        }

        function W(ee) {
            return Object.prototype.toString.call(ee) !== "[object Blob]" && !(ee instanceof ArrayBuffer) && (ee = String(ee)), ee
        }
        var _ = new WeakMap;

        function he(ee) {
            if (_.has(ee)) return _.get(ee);
            var Z = new Proxy(ee, {
                get: function(K, Ve) {
                    return Ve === "close" ? function(De) {
                        De === void 0 && (De = {});
                        var Ke = De.code || Le.CLOSE_NORMAL,
                            We = De.reason || "";
                        j(Z, Ke, We)
                    } : Ve === "send" ? function(De) {
                        De = W(De), ee.dispatchEvent(g({
                            type: "message",
                            data: De,
                            origin: this.url,
                            target: ee
                        }))
                    } : Ve === "on" ? function(De, Ke) {
                        ee.addEventListener("server::" + De, Ke)
                    } : Ve === "target" ? ee : K[Ve]
                }
            });
            return _.set(ee, Z), Z
        }

        function Pe(ee) {
            var Z = encodeURIComponent(ee).match(/%[89ABab]/g);
            return ee.length + (Z ? Z.length : 0)
        }

        function xe(ee) {
            var Z = new oe(ee),
                le = Z.pathname,
                K = Z.protocol,
                Ve = Z.hash;
            if (!ee) throw new TypeError(Ge.CONSTRUCTOR_ERROR + " 1 argument required, but only 0 present.");
            if (le || (Z.pathname = "/"), K === "") throw new SyntaxError(Ge.CONSTRUCTOR_ERROR + " The URL '" + Z.toString() + "' is invalid.");
            if (K !== "ws:" && K !== "wss:") throw new SyntaxError(Ge.CONSTRUCTOR_ERROR + " The URL's scheme must be either 'ws' or 'wss'. '" + K + "' is not allowed.");
            if (Ve !== "") throw new SyntaxError(Ge.CONSTRUCTOR_ERROR + " The URL contains a fragment identifier ('" + Ve + "'). Fragment identifiers are not allowed in WebSocket URLs.");
            return Z.toString()
        }

        function Qe(ee) {
            if (ee === void 0 && (ee = []), !Array.isArray(ee) && typeof ee != "string") throw new SyntaxError(Ge.CONSTRUCTOR_ERROR + " The subprotocol '" + ee.toString() + "' is invalid.");
            typeof ee == "string" && (ee = [ee]);
            var Z = ee.map(function(K) {
                    return {
                        count: 1,
                        protocol: K
                    }
                }).reduce(function(K, Ve) {
                    return K[Ve.protocol] = (K[Ve.protocol] || 0) + Ve.count, K
                }, {}),
                le = Object.keys(Z).filter(function(K) {
                    return Z[K] > 1
                });
            if (le.length > 0) throw new SyntaxError(Ge.CONSTRUCTOR_ERROR + " The subprotocol '" + le[0] + "' is duplicated.");
            return ee
        }
        var He = function(ee) {
            function Z(K, Ve) {
                ee.call(this), this._onopen = null, this._onmessage = null, this._onerror = null, this._onclose = null, this.url = xe(K), Ve = Qe(Ve), this.protocol = Ve[0] || "", this.binaryType = "blob", this.readyState = Z.CONNECTING;
                var Re = he(this),
                    De = Te.attachWebSocket(Re, this.url);
                Ie(function() {
                    if (De)
                        if (De.options.verifyClient && typeof De.options.verifyClient == "function" && !De.options.verifyClient()) this.readyState = Z.CLOSED, Y("error", "WebSocket connection to '" + this.url + "' failed: HTTP Authentication failed; no valid credentials available"), Te.removeWebSocket(Re, this.url), this.dispatchEvent(U({
                            type: "error",
                            target: this
                        })), this.dispatchEvent(R({
                            type: "close",
                            target: this,
                            code: Le.CLOSE_NORMAL
                        }));
                        else {
                            if (De.options.selectProtocol && typeof De.options.selectProtocol == "function") {
                                var We = De.options.selectProtocol(Ve),
                                    bt = We !== "",
                                    tn = Ve.indexOf(We) !== -1;
                                if (bt && !tn) {
                                    this.readyState = Z.CLOSED, Y("error", "WebSocket connection to '" + this.url + "' failed: Invalid Sub-Protocol"), Te.removeWebSocket(Re, this.url), this.dispatchEvent(U({
                                        type: "error",
                                        target: this
                                    })), this.dispatchEvent(R({
                                        type: "close",
                                        target: this,
                                        code: Le.CLOSE_NORMAL
                                    }));
                                    return
                                }
                                this.protocol = We
                            }
                            this.readyState = Z.OPEN, this.dispatchEvent(U({
                                type: "open",
                                target: this
                            })), De.dispatchEvent(U({
                                type: "connection"
                            }), Re)
                        }
                    else this.readyState = Z.CLOSED, this.dispatchEvent(U({
                        type: "error",
                        target: this
                    })), this.dispatchEvent(R({
                        type: "close",
                        target: this,
                        code: Le.CLOSE_NORMAL
                    })), Y("error", "WebSocket connection to '" + this.url + "' failed")
                }, this)
            }
            ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z;
            var le = {
                onopen: {},
                onmessage: {},
                onclose: {},
                onerror: {}
            };
            return le.onopen.get = function() {
                return this._onopen
            }, le.onmessage.get = function() {
                return this._onmessage
            }, le.onclose.get = function() {
                return this._onclose
            }, le.onerror.get = function() {
                return this._onerror
            }, le.onopen.set = function(K) {
                this.removeEventListener("open", this._onopen), this._onopen = K, this.addEventListener("open", K)
            }, le.onmessage.set = function(K) {
                this.removeEventListener("message", this._onmessage), this._onmessage = K, this.addEventListener("message", K)
            }, le.onclose.set = function(K) {
                this.removeEventListener("close", this._onclose), this._onclose = K, this.addEventListener("close", K)
            }, le.onerror.set = function(K) {
                this.removeEventListener("error", this._onerror), this._onerror = K, this.addEventListener("error", K)
            }, Z.prototype.send = function(Ve) {
                var Re = this;
                if (this.readyState === Z.CLOSING || this.readyState === Z.CLOSED) throw new Error("WebSocket is already in CLOSING or CLOSED state");
                var De = g({
                        type: "server::message",
                        origin: this.url,
                        data: W(Ve)
                    }),
                    Ke = Te.serverLookup(this.url);
                Ke && Ie(function() {
                    Re.dispatchEvent(De, Ve)
                }, Ke)
            }, Z.prototype.close = function(Ve, Re) {
                if (Ve !== void 0 && (typeof Ve != "number" || Ve !== 1e3 && (Ve < 3e3 || Ve > 4999))) throw new TypeError(Ge.CLOSE_ERROR + " The code must be either 1000, or between 3000 and 4999. " + Ve + " is neither.");
                if (Re !== void 0) {
                    var De = Pe(Re);
                    if (De > 123) throw new SyntaxError(Ge.CLOSE_ERROR + " The message must not be greater than 123 bytes.")
                }
                if (!(this.readyState === Z.CLOSING || this.readyState === Z.CLOSED)) {
                    var Ke = he(this);
                    this.readyState === Z.CONNECTING ? N(Ke, Ve || Le.CLOSE_ABNORMAL, Re) : j(Ke, Ve || Le.CLOSE_NO_STATUS, Re)
                }
            }, Object.defineProperties(Z.prototype, le), Z
        }(fe);
        He.CONNECTING = 0, He.prototype.CONNECTING = He.CONNECTING, He.OPEN = 1, He.prototype.OPEN = He.OPEN, He.CLOSING = 2, He.prototype.CLOSING = He.CLOSING, He.CLOSED = 3, He.prototype.CLOSED = He.CLOSED;
        var pt = function(ee) {
            return ee.reduce(function(Z, le) {
                return Z.indexOf(le) > -1 ? Z : Z.concat(le)
            }, [])
        };

        function Lt() {
            return typeof window < "u" ? window : typeof process == "object" && typeof P9 == "function" && typeof Ct == "object" ? Ct : this
        }
        var yn = {
                mock: !0,
                verifyClient: null,
                selectProtocol: null
            },
            mt = function(ee) {
                function Z(le, K) {
                    K === void 0 && (K = yn), ee.call(this);
                    var Ve = new oe(le);
                    Ve.pathname || (Ve.pathname = "/"), this.url = Ve.toString(), this.originalWebSocket = null;
                    var Re = Te.attachServer(this, this.url);
                    if (!Re) throw this.dispatchEvent(U({
                        type: "error"
                    })), new Error("A mock server is already listening on this url");
                    this.options = Object.assign({}, yn, K), this.options.mock && this.mockWebsocket()
                }
                return ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z, Z.prototype.mockWebsocket = function() {
                    var K = Lt();
                    this.originalWebSocket = K.WebSocket, K.WebSocket = He
                }, Z.prototype.restoreWebsocket = function() {
                    var K = Lt();
                    this.originalWebSocket !== null && (K.WebSocket = this.originalWebSocket), this.originalWebSocket = null
                }, Z.prototype.stop = function(K) {
                    K === void 0 && (K = function() {}), this.options.mock && this.restoreWebsocket(), Te.removeServer(this.url), typeof K == "function" && K()
                }, Z.prototype.on = function(K, Ve) {
                    this.addEventListener(K, Ve)
                }, Z.prototype.close = function(K) {
                    K === void 0 && (K = {});
                    var Ve = K.code,
                        Re = K.reason,
                        De = K.wasClean,
                        Ke = Te.websocketsLookup(this.url);
                    Te.removeServer(this.url), Ke.forEach(function(We) {
                        We.readyState = He.CLOSED, We.dispatchEvent(R({
                            type: "close",
                            target: We.target,
                            code: Ve || Le.CLOSE_NORMAL,
                            reason: Re || "",
                            wasClean: De
                        }))
                    }), this.dispatchEvent(R({
                        type: "close"
                    }), this)
                }, Z.prototype.emit = function(K, Ve, Re) {
                    var De = this;
                    Re === void 0 && (Re = {});
                    var Ke = Re.websockets;
                    Ke || (Ke = Te.websocketsLookup(this.url)), typeof Re != "object" || arguments.length > 3 ? (Ve = Array.prototype.slice.call(arguments, 1, arguments.length), Ve = Ve.map(function(We) {
                        return W(We)
                    })) : Ve = W(Ve), Ke.forEach(function(We) {
                        Array.isArray(Ve) ? We.dispatchEvent.apply(We, [g({
                            type: K,
                            data: Ve,
                            origin: De.url,
                            target: We.target
                        })].concat(Ve)) : We.dispatchEvent(g({
                            type: K,
                            data: Ve,
                            origin: De.url,
                            target: We.target
                        }))
                    })
                }, Z.prototype.clients = function() {
                    return Te.websocketsLookup(this.url)
                }, Z.prototype.to = function(K, Ve, Re) {
                    var De = this;
                    Re === void 0 && (Re = []);
                    var Ke = this,
                        We = pt(Re.concat(Te.websocketsLookup(this.url, K, Ve)));
                    return {
                        to: function(bt, tn) {
                            return De.to.call(De, bt, tn, We)
                        },
                        emit: function(tn, ot) {
                            Ke.emit(tn, ot, {
                                websockets: We
                            })
                        }
                    }
                }, Z.prototype.in = function() {
                    for (var K = [], Ve = arguments.length; Ve--;) K[Ve] = arguments[Ve];
                    return this.to.apply(null, K)
                }, Z.prototype.simulate = function(K) {
                    var Ve = Te.websocketsLookup(this.url);
                    K === "error" && Ve.forEach(function(Re) {
                        Re.readyState = He.CLOSED, Re.dispatchEvent(U({
                            type: "error"
                        }))
                    })
                }, Z
            }(fe);
        mt.of = function(Z) {
            return new mt(Z)
        };
        var Dt = function(ee) {
            function Z(K, Ve) {
                var Re = this;
                K === void 0 && (K = "socket.io"), Ve === void 0 && (Ve = ""), ee.call(this), this.binaryType = "blob";
                var De = new oe(K);
                De.pathname || (De.pathname = "/"), this.url = De.toString(), this.readyState = Z.CONNECTING, this.protocol = "", this.target = this, typeof Ve == "string" || typeof Ve == "object" && Ve !== null ? this.protocol = Ve : Array.isArray(Ve) && Ve.length > 0 && (this.protocol = Ve[0]);
                var Ke = Te.attachWebSocket(this, this.url);
                Ie(function() {
                    Ke ? (this.readyState = Z.OPEN, Ke.dispatchEvent(U({
                        type: "connection"
                    }), Ke, this), Ke.dispatchEvent(U({
                        type: "connect"
                    }), Ke, this), this.dispatchEvent(U({
                        type: "connect",
                        target: this
                    }))) : (this.readyState = Z.CLOSED, this.dispatchEvent(U({
                        type: "error",
                        target: this
                    })), this.dispatchEvent(R({
                        type: "close",
                        target: this,
                        code: Le.CLOSE_NORMAL
                    })), Y("error", "Socket.io connection to '" + this.url + "' failed"))
                }, this), this.addEventListener("close", function(We) {
                    Re.dispatchEvent(R({
                        type: "disconnect",
                        target: We.target,
                        code: We.code
                    }))
                })
            }
            ee && (Z.__proto__ = ee), Z.prototype = Object.create(ee && ee.prototype), Z.prototype.constructor = Z;
            var le = {
                broadcast: {}
            };
            return Z.prototype.close = function() {
                if (this.readyState === Z.OPEN) {
                    var Ve = Te.serverLookup(this.url);
                    return Te.removeWebSocket(this, this.url), this.readyState = Z.CLOSED, this.dispatchEvent(R({
                        type: "close",
                        target: this,
                        code: Le.CLOSE_NORMAL
                    })), Ve && Ve.dispatchEvent(R({
                        type: "disconnect",
                        target: this,
                        code: Le.CLOSE_NORMAL
                    }), Ve), this
                }
            }, Z.prototype.disconnect = function() {
                return this.close()
            }, Z.prototype.emit = function(Ve) {
                for (var Re = [], De = arguments.length - 1; De-- > 0;) Re[De] = arguments[De + 1];
                if (this.readyState !== Z.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                var Ke = g({
                        type: Ve,
                        origin: this.url,
                        data: Re
                    }),
                    We = Te.serverLookup(this.url);
                return We && We.dispatchEvent.apply(We, [Ke].concat(Re)), this
            }, Z.prototype.send = function(Ve) {
                return this.emit("message", Ve), this
            }, le.broadcast.get = function() {
                if (this.readyState !== Z.OPEN) throw new Error("SocketIO is already in CLOSING or CLOSED state");
                var K = this,
                    Ve = Te.serverLookup(this.url);
                if (!Ve) throw new Error("SocketIO can not find a server at the specified URL (" + this.url + ")");
                return {
                    emit: function(De, Ke) {
                        return Ve.emit(De, Ke, {
                            websockets: Te.websocketsLookup(K.url, null, K)
                        }), K
                    },
                    to: function(De) {
                        return Ve.to(De, K)
                    },
                    in: function(De) {
                        return Ve.in(De, K)
                    }
                }
            }, Z.prototype.on = function(Ve, Re) {
                return this.addEventListener(Ve, Re), this
            }, Z.prototype.off = function(Ve, Re) {
                this.removeEventListener(Ve, Re)
            }, Z.prototype.hasListeners = function(Ve) {
                var Re = this.listeners[Ve];
                return Array.isArray(Re) ? !!Re.length : !1
            }, Z.prototype.join = function(Ve) {
                Te.addMembershipToRoom(this, Ve)
            }, Z.prototype.leave = function(Ve) {
                Te.removeMembershipFromRoom(this, Ve)
            }, Z.prototype.to = function(Ve) {
                return this.broadcast.to(Ve)
            }, Z.prototype.in = function() {
                return this.to.apply(null, arguments)
            }, Z.prototype.dispatchEvent = function(Ve) {
                for (var Re = this, De = [], Ke = arguments.length - 1; Ke-- > 0;) De[Ke] = arguments[Ke + 1];
                var We = Ve.type,
                    bt = this.listeners[We];
                if (!Array.isArray(bt)) return !1;
                bt.forEach(function(tn) {
                    De.length > 0 ? tn.apply(Re, De) : tn.call(Re, Ve.data ? Ve.data : Ve)
                })
            }, Object.defineProperties(Z.prototype, le), Z
        }(fe);
        Dt.CONNECTING = 0, Dt.OPEN = 1, Dt.CLOSING = 2, Dt.CLOSED = 3;
        var Et = function(Z, le) {
            return new Dt(Z, le)
        };
        Et.connect = function(Z, le) {
            return Et(Z, le)
        };
        var cn = mt,
            rt = He,
            Kt = Et;
        n.Server = cn, n.WebSocket = rt, n.SocketIO = Kt, Object.defineProperty(n, "__esModule", {
            value: !0
        })
    })
})(Wf, Wf.exports);
var U9 = {
    exports: {}
};
(function(t) {
    (function() {
        function e(A, c) {
            var d = A.x - c.x,
                m = A.y - c.y;
            return d * d + m * m
        }

        function n(A, c, d) {
            var m = c.x,
                q = c.y,
                v = d.x - m,
                D = d.y - q;
            if (v !== 0 || D !== 0) {
                var S = ((A.x - m) * v + (A.y - q) * D) / (v * v + D * D);
                S > 1 ? (m = d.x, q = d.y) : S > 0 && (m += v * S, q += D * S)
            }
            return v = A.x - m, D = A.y - q, v * v + D * D
        }

        function i(A, c) {
            for (var d = A[0], m = [d], q, v = 1, D = A.length; v < D; v++) q = A[v], e(q, d) > c && (m.push(q), d = q);
            return d !== q && m.push(q), m
        }

        function o(A, c, d, m, q) {
            for (var v = m, D, S = c + 1; S < d; S++) {
                var C = n(A[S], A[c], A[d]);
                C > v && (D = S, v = C)
            }
            v > m && (D - c > 1 && o(A, c, D, m, q), q.push(A[D]), d - D > 1 && o(A, D, d, m, q))
        }

        function r(A, c) {
            var d = A.length - 1,
                m = [A[0]];
            return o(A, 0, d, c, m), m.push(A[d]), m
        }

        function V(A, c, d) {
            if (A.length <= 2) return A;
            var m = c !== void 0 ? c * c : 1;
            return A = d ? A : i(A, m), A = r(A, m), A
        }
        t.exports = V, t.exports.default = V
    })()
})(U9);
const F9 = je.View.extend({
    el: "#banner",
    template: ke.template(`
        <div class="banner-image"></div>
        <div class="banner-text"></div>
        <div class="banner-cta"></div>
    `),
    events: {
        click: "onBannerClick"
    },
    bindings: {
        ":el": {
            attributes: [{
                name: "class",
                observe: ["visible", "theme"],
                onGet([t, e]) {
                    let n = e || "no-theme";
                    return t && (n += " show"), n
                }
            }]
        },
        ".banner-text": "copy",
        ".banner-cta": "cta"
    },
    initialize() {
        this.render(), this.listenTo(this.model, "change:visible", this.visibleDidChange)
    },
    onBannerClick() {
        _b.bannerClick(this.getCampaign(), "post_game"), this.model.get("url") && window.open(this.model.get("url"), "_blank")
    },
    onRender() {
        this.stickit()
    },
    visibleDidChange() {
        setTimeout(() => {
            Ye(window).trigger("resize")
        }, .5)
    },
    getCampaign() {
        const t = this.model.get("url");
        if (!t) return "";
        let e = "";
        return t.split("?")[1] && (e = new URLSearchParams(window.location.search).get("utm_campaign") || ""), e
    }
});
class _i {
    static get isVisible() {
        return this.view ? this.view.state === "on" : !1
    }
    static async update(e, n) {
        if (!n || n.lobbyState !== "PostGame") {
            this.hide();
            return
        }
        this.view || await this.init(e, n), this.show()
    }
    static async init(e) {
        if (!e) {
            this.bannerData = !1;
            return
        }
        this.bannerData = await this.loadBannerData(e), this.bannerData && (this.view = new F9({
            model: new ze.Model(this.bannerData)
        }), this.isInitialized = !0)
    }
    static show() {
        !this.view || this.view.model.set({
            visible: !0
        })
    }
    static hide() {
        !this.view || this.view.model.set({
            visible: !1
        })
    }
    static async loadBannerData(e) {
        try {
            const i = await (await fetch({
                TV_ADROLL_ADVERTISABLE_ID: "WN335VM7RVAMPDZAOWMIHP",
                TV_ADROLL_PIXEL_ID: "WN335VM7RVAMPDZAOWMIHP",
                TV_CDN_IMAGES_URL: "https://s3.amazonaws.com/static.jackboxgames.com/game-images",
                TV_DEBUG: "false",
                TV_DOMAINS: "https://dev.jackbox.tv,https://qa.jackbox.tv,https://jackbox.tv,https://tinyshirts.jackboxgames.com",
                TV_ECAST: window.location.hostname,
                TV_GA_STREAM_ID: "3795853220",
                TV_GA_MEASUREMENT_ID: "G-V1QJVQMYF1",
                TV_S3_BUNDLES: "https://bundles.jackbox.tv",
                TV_S3_DEBUG: "https://jbg-ops.s3.amazonaws.com",
                TV_SENTRY_ALLOWED_URLS: "/(http|https):\\/\\/(\\S*\\.)?jackbox\\.tv/i",
                TV_SENTRY_DSN: "https://bb026273d98c4b99ab11c1de369f521f@o420318.ingest.sentry.io/6387933",
                TV_SENTRY_RATE: "0.2",
                TV_SLACK_DEBUG: "https://hooks.slack.com/services/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",
                TV_TWITCH_CLIENT_ID: "yn2iepd23vskpmkzgeg2lkfsct7gsc",
                BASE_URL: "https://bundles.jackbox.tv/main/pp7-everyday/",
                MODE: "production",
                DEV: !1,
                PROD: !0
            }.TV_BANNERS_URL)).json();
            return !i || !i.postGameBanners ? !1 : i.postGameBanners[e]
        } catch (n) {
            return console.error("Unable to load banner data", n), !1
        }
    }
}
at(_i, "view", null), at(_i, "isInitialized", !1), at(_i, "bannerConfig", null);
var j9 = {};
(function(t) {
    (function(e) {
        e(X.exports, ze, t)
    })(function(e, n, i) {
        n.Stickit = i, i._handlers = [], i.addHandler = function(h) {
            h = e.map(e.flatten([h]), function(w) {
                return e.defaults({}, w, {
                    updateModel: !0,
                    updateView: !0,
                    updateMethod: "text"
                })
            }), this._handlers = this._handlers.concat(h)
        }, i.ViewMixin = {
            _modelBindings: null,
            unstickit: function(h, w) {
                if (e.isObject(w)) {
                    e.each(w, function(O, Q) {
                        this.unstickit(h, Q)
                    }, this);
                    return
                }
                var T = [],
                    M = [];
                this._modelBindings = e.reject(this._modelBindings, function(O) {
                    if (!(h && O.model !== h) && !(w && O.config.selector != w)) return O.model.off(O.event, O.fn), M.push(O.config._destroy), T.push(O.model), !0
                }), e.invoke(e.uniq(T), "trigger", "stickit:unstuck", this.cid), e.each(e.uniq(M), function(O) {
                    O.call(this)
                }, this), this.$el.off(".stickit" + (h ? "." + h.cid : ""), w)
            },
            stickit: function(h, w) {
                var T = h || this.model,
                    M = w || e.result(this, "bindings") || {};
                this._modelBindings || (this._modelBindings = []), this.addBinding(T, M);
                var O = this.remove;
                return O.stickitWrapped || (this.remove = function() {
                    var Q = this;
                    return this.unstickit(), O && (Q = O.apply(this, arguments)), Q
                }), this.remove.stickitWrapped = !0, this
            },
            addBinding: function(h, w, T) {
                var M = h || this.model,
                    O = ".stickit." + M.cid;
                if (T = T || {}, e.isObject(w)) {
                    var Q = w;
                    e.each(Q, function(oe, Ie) {
                        this.addBinding(M, Ie, oe)
                    }, this);
                    return
                }
                var u = w === ":el" ? this.$el : this.$(w);
                if (this.unstickit(M, w), !!u.length) {
                    e.isString(T) && (T = {
                        observe: T
                    }), e.isFunction(T.observe) && (T.observe = T.observe.call(this));
                    var J = q(u, T),
                        se = J.observe;
                    J.selector = w, J.view = this;
                    var te = J.bindId = e.uniqueId(),
                        ve = e.extend({
                            stickitChange: J
                        }, J.setOptions);
                    if (J._destroy = function() {
                            V.call(this, J.destroy, u, M, J)
                        }, v(u, J, M, se), S(u, J, M, se), D(u, J, M), se) {
                        e.each(J.events, function(oe) {
                            var Ie = oe + O,
                                Y = function(ue) {
                                    var fe = V.call(this, J.getVal, u, ue, J, o.call(arguments, 1)),
                                        qe = A(J.updateModel, fe, ue, J);
                                    qe && d(M, se, fe, ve, J)
                                },
                                re = w === ":el" ? "" : w;
                            this.$el.on(Ie, re, e.bind(Y, this))
                        }, this), e.each(e.flatten([se]), function(oe) {
                            c(M, "change:" + oe, J, function(Ie, Y, re) {
                                var ue = re && re.stickitChange && re.stickitChange.bindId;
                                if (ue !== te) {
                                    var fe = m(M, se, J);
                                    C(u, J, fe, M)
                                }
                            })
                        });
                        var be = m(M, se, J);
                        C(u, J, be, M, !0)
                    }
                    V.call(this, J.initialize, u, M, J)
                }
            }
        }, e.extend(n.View.prototype, i.ViewMixin);
        var o = [].slice,
            r = function(h, w) {
                var T = (w || "").split("."),
                    M = e.reduce(T, function(O, Q) {
                        return O[Q]
                    }, h);
                return M == null ? h : M
            },
            V = function(h) {
                if (h = e.isString(h) ? r(this, h) : h, h) return h.apply(this, o.call(arguments, 1))
            },
            A = function(h, w, T) {
                if (e.isBoolean(h)) return h;
                if (e.isFunction(h) || e.isString(h)) {
                    var M = e.last(arguments).view;
                    return V.apply(M, arguments)
                }
                return !1
            },
            c = function(h, w, T, M) {
                var O = T.view;
                h.on(w, M, O), O._modelBindings.push({
                    model: h,
                    event: w,
                    fn: M,
                    config: T
                })
            },
            d = function(h, w, T, M, O) {
                var Q = {},
                    u = O.view;
                O.onSet && (T = V.call(u, O.onSet, T, O)), O.set ? V.call(u, O.set, w, T, M, O) : (Q[w] = T, e.isArray(w) && e.isArray(T) && (Q = e.reduce(w, function(J, se, te) {
                    return J[se] = e.has(T, te) ? T[te] : null, J
                }, {})), h.set(Q, M))
            },
            m = function(h, w, T) {
                var M = T.view,
                    O = function(J) {
                        return h[T.escape ? "escape" : "get"](J)
                    },
                    Q = function(J) {
                        return J == null ? "" : J
                    },
                    u = e.isArray(w) ? e.map(w, O) : O(w);
                return T.onGet && (u = V.call(M, T.onGet, u, T)), e.isArray(u) ? e.map(u, Q) : Q(u)
            },
            q = i.getConfiguration = function(h, w) {
                var T = [{
                    updateModel: !1,
                    updateMethod: "text",
                    update: function(O, Q, u, J) {
                        O[J.updateMethod] && O[J.updateMethod](Q)
                    },
                    getVal: function(O, Q, u) {
                        return O[u.updateMethod]()
                    }
                }];
                T = T.concat(e.filter(i._handlers, function(O) {
                    return h.is(O.selector)
                })), T.push(w);
                var M = e.extend.apply(e, T);
                return e.has(M, "updateView") || (M.updateView = !M.visible), M
            },
            v = function(h, w, T, M) {
                var O = ["autofocus", "autoplay", "async", "checked", "controls", "defer", "disabled", "hidden", "indeterminate", "loop", "multiple", "open", "readonly", "required", "scoped", "selected"],
                    Q = w.view;
                e.each(w.attributes || [], function(u) {
                    u = e.clone(u), u.view = Q;
                    var J = "",
                        se = u.observe || (u.observe = M),
                        te = function() {
                            var ve = e.contains(O, u.name) ? "prop" : "attr",
                                be = m(T, se, u);
                            u.name === "class" ? (h.removeClass(J).addClass(be), J = be) : h[ve](u.name, be)
                        };
                    e.each(e.flatten([se]), function(ve) {
                        c(T, "change:" + ve, w, te)
                    }), te()
                })
            },
            D = function(h, w, T, M) {
                e.each(w.classes || [], function(O, Q) {
                    e.isString(O) && (O = {
                        observe: O
                    }), O.view = w.view;
                    var u = O.observe,
                        J = function() {
                            var se = m(T, u, O);
                            h.toggleClass(Q, !!se)
                        };
                    e.each(e.flatten([u]), function(se) {
                        c(T, "change:" + se, w, J)
                    }), J()
                })
            },
            S = function(h, w, T, M) {
                if (w.visible != null) {
                    var O = w.view,
                        Q = function() {
                            var u = w.visible,
                                J = w.visibleFn,
                                se = m(T, M, w),
                                te = !!se;
                            (e.isFunction(u) || e.isString(u)) && (te = !!V.call(O, u, se, w)), J ? V.call(O, J, h, te, w) : h.toggle(te)
                        };
                    e.each(e.flatten([M]), function(u) {
                        c(T, "change:" + u, w, Q)
                    }), Q()
                }
            },
            C = function(h, w, T, M, O) {
                var Q = w.view;
                !A(w.updateView, T, w) || (V.call(Q, w.update, h, T, M, w), O || V.call(Q, w.afterUpdate, h, T, w))
            };
        return i.addHandler([{
            selector: "[contenteditable]",
            updateMethod: "html",
            events: ["input", "change"]
        }, {
            selector: "input",
            events: ["propertychange", "input", "change"],
            update: function(h, w) {
                h.val(w)
            },
            getVal: function(h) {
                return h.val()
            }
        }, {
            selector: "textarea",
            events: ["propertychange", "input", "change"],
            update: function(h, w) {
                h.val(w)
            },
            getVal: function(h) {
                return h.val()
            }
        }, {
            selector: 'input[type="radio"]',
            events: ["change"],
            update: function(h, w) {
                h.filter('[value="' + w + '"]').prop("checked", !0)
            },
            getVal: function(h) {
                return h.filter(":checked").val()
            }
        }, {
            selector: 'input[type="checkbox"]',
            events: ["change"],
            update: function(h, w, T, M) {
                if (h.length > 1) w || (w = []), h.each(function(Q, u) {
                    var J = n.$(u),
                        se = e.contains(w, J.val());
                    J.prop("checked", se)
                });
                else {
                    var O = e.isBoolean(w) ? w : w === h.val();
                    h.prop("checked", O)
                }
            },
            getVal: function(h) {
                var w;
                if (h.length > 1) w = e.reduce(h, function(M, O) {
                    var Q = n.$(O);
                    return Q.prop("checked") && M.push(Q.val()), M
                }, []);
                else {
                    w = h.prop("checked");
                    var T = h.val();
                    T !== "on" && T != null && (w = w ? h.val() : null)
                }
                return w
            }
        }, {
            selector: "select",
            events: ["change"],
            update: function(h, w, T, M) {
                var O, Q = M.selectOptions,
                    u = Q && Q.collection || void 0,
                    J = h.prop("multiple");
                if (!Q) {
                    Q = {};
                    var se = function(ge) {
                        return ge.map(function(Te, Le) {
                            var Ge = n.$(Le).data("stickit-bind-val");
                            return {
                                value: Ge !== void 0 ? Ge : Le.value,
                                label: Le.text
                            }
                        }).get()
                    };
                    h.find("optgroup").length ? (u = {
                        opt_labels: []
                    }, h.find("> option").length && (u.opt_labels.push(void 0), e.each(h.find("> option"), function(ge) {
                        u[void 0] = se(n.$(ge))
                    })), e.each(h.find("optgroup"), function(ge) {
                        var Te = n.$(ge).attr("label");
                        u.opt_labels.push(Te), u[Te] = se(n.$(ge).find("option"))
                    })) : u = se(h.find("option"))
                }
                Q.valuePath = Q.valuePath || "value", Q.labelPath = Q.labelPath || "label", Q.disabledPath = Q.disabledPath || "disabled";
                var te = function(ge, Te, Le) {
                    e.each(ge, function(Ge) {
                        var Xe = n.$("<option/>"),
                            nt = Ge,
                            Tt = function(j, N, W) {
                                Xe.text(j), nt = N, Xe.data("stickit-bind-val", nt), !e.isArray(nt) && !e.isObject(nt) && Xe.val(nt), W === !0 && Xe.prop("disabled", "disabled")
                            },
                            Pt, U, g;
                        Ge === "__default__" ? (Pt = Le.label, U = Le.value, g = Le.disabled) : (Pt = r(Ge, Q.labelPath), U = r(Ge, Q.valuePath), g = r(Ge, Q.disabledPath)), Tt(Pt, U, g);
                        var R = function() {
                            return !J && nt != null && Le != null && nt === Le ? !0 : !!(e.isObject(Le) && e.isEqual(nt, Le))
                        };
                        R() ? Xe.prop("selected", !0) : J && e.isArray(Le) && e.each(Le, function(j) {
                            e.isObject(j) && (j = r(j, Q.valuePath)), (j === nt || e.isObject(j) && e.isEqual(nt, j)) && Xe.prop("selected", !0)
                        }), Te.append(Xe)
                    })
                };
                if (h.find("*").remove(), e.isString(u)) {
                    var ve = window;
                    u.indexOf("this.") === 0 && (ve = this), u = u.replace(/^[a-z]*\.(.+)$/, "$1"), O = r(ve, u)
                } else e.isFunction(u) ? O = V.call(this, u, h, M) : O = u;
                if (O instanceof n.Collection) {
                    var be = O,
                        oe = function() {
                            var ge = m(T, M.observe, M);
                            V.call(this, M.update, h, ge, T, M)
                        },
                        Ie = function() {
                            be.off("add remove reset sort", oe)
                        },
                        Y = function() {
                            Ie(), be.off("stickit:selectRefresh"), T.off("stickit:selectRefresh")
                        };
                    be.trigger("stickit:selectRefresh"), be.once("stickit:selectRefresh", Ie, this), be.on("add remove reset sort", oe, this), T.trigger("stickit:selectRefresh"), T.once("stickit:selectRefresh", function() {
                        T.off("stickit:unstuck", Y)
                    }), T.once("stickit:unstuck", Y, this), O = O.toJSON()
                }
                if (Q.defaultOption) {
                    var re = e.isFunction(Q.defaultOption) ? Q.defaultOption.call(this, h, M) : Q.defaultOption;
                    te(["__default__"], h, re)
                }
                if (e.isArray(O)) te(O, h, w);
                else if (O.opt_labels) e.each(O.opt_labels, function(ge) {
                    var Te = n.$("<optgroup/>").attr("label", ge);
                    te(O[ge], Te, w), h.append(Te)
                });
                else {
                    var ue = [],
                        fe;
                    for (var qe in O) fe = {}, fe[Q.valuePath] = qe, fe[Q.labelPath] = O[qe], ue.push(fe);
                    ue = e.sortBy(ue, Q.comparator || Q.labelPath), te(ue, h, w)
                }
            },
            getVal: function(h) {
                var w = h.find("option:selected");
                return h.prop("multiple") ? e.map(w, function(T) {
                    return n.$(T).data("stickit-bind-val")
                }) : w.data("stickit-bind-val")
            }
        }]), i
    })
})(j9);
const Q9 = `<button type="button" class='button choice-button btn btn-lg'></button>
<button data-action='censor' class='button censor-button btn btn-lg'></button>`,
    M1 = je.View.extend({
        template: ke.template(Q9),
        model: new ze.Model({}),
        className() {
            let t = "button-group btn-group";
            return this.options.block !== !1 && (t += " btn-block"), t
        },
        events: {
            "click .button": "onClick"
        },
        bindings: {
            ":el": {
                observe: "visible",
                visible(t) {
                    return t !== !1
                },
                visibleFn(t, e) {
                    t.css("display", e ? "" : "none")
                },
                attributes: [{
                    name: "class",
                    observe: ["className", "selected", "disabled", "active"],
                    onGet([t, e, n, i]) {
                        let o = "";
                        return t && (o += t), e && (o += " selected"), n && (o += " disabled"), i && (o += " active"), o
                    }
                }]
            },
            "button:first": {
                observe: ["text", "html", "label"],
                updateMethod: "html",
                onGet([t, e, n]) {
                    return n ? this.$el.find("button:first").attr("aria-label", n) : this.$el.find("button:first").removeAttr("aria-label"), e || Ye("<div />").text(t).html()
                },
                attributes: [{
                    name: "disabled",
                    observe: "disabled"
                }, {
                    name: "data-action",
                    observe: "action",
                    onGet(t) {
                        return t || "choose"
                    }
                }, {
                    name: "data-index",
                    observe: "index"
                }, {
                    name: "data-key",
                    observe: "key"
                }, {
                    name: "style",
                    observe: "color",
                    onGet(t) {
                        if (!t) return "";
                        let e = "";
                        return t.text && (e += `color: ${t.text};`), t.background && (e += `background-color: ${t.background};`), e
                    }
                }, {
                    name: "type",
                    observe: "action",
                    onGet(t) {
                        return t === "submit" ? "submit" : "button"
                    }
                }]
            },
            ".censor-button": {
                observe: "censorable",
                visible: !0,
                visibleFn(t, e) {
                    e || t.remove()
                },
                attributes: [{
                    name: "data-index",
                    observe: "index"
                }, {
                    name: "class",
                    observe: ["className", "isWarned"],
                    onGet(t) {
                        if (!t) return null;
                        let e = "";
                        return t[0] && (e += t[0]), t[1] && (e += " isWarned"), e
                    }
                }]
            }
        },
        onRender() {
            this.model.set("index", this.getOption("index")), this.getOption("action") && this.model.set("action", this.getOption("action")), this.stickit()
        },
        onClick(t) {
            const e = Ye(t.target).data("action");
            this.triggerMethod(`button:${e}`, this.model)
        }
    });
var Ks, ml, Tr = typeof Map == "function" ? new Map : (Ks = [], ml = [], {
        has: function(t) {
            return Ks.indexOf(t) > -1
        },
        get: function(t) {
            return ml[Ks.indexOf(t)]
        },
        set: function(t, e) {
            Ks.indexOf(t) === -1 && (Ks.push(t), ml.push(e))
        },
        delete: function(t) {
            var e = Ks.indexOf(t);
            e > -1 && (Ks.splice(e, 1), ml.splice(e, 1))
        }
    }),
    O1 = function(t) {
        return new Event(t, {
            bubbles: !0
        })
    };
try {
    new Event("test")
} catch {
    O1 = function(e) {
        var n = document.createEvent("Event");
        return n.initEvent(e, !0, !1), n
    }
}

function z9(t) {
    var e = Tr.get(t);
    e && e.destroy()
}

function H9(t) {
    var e = Tr.get(t);
    e && e.update()
}
var mr = null;
typeof window > "u" || typeof window.getComputedStyle != "function" ? ((mr = function(t) {
    return t
}).destroy = function(t) {
    return t
}, mr.update = function(t) {
    return t
}) : ((mr = function(t, e) {
    return t && Array.prototype.forEach.call(t.length ? t : [t], function(n) {
        return function(i) {
            if (i && i.nodeName && i.nodeName === "TEXTAREA" && !Tr.has(i)) {
                var o, r = null,
                    V = null,
                    A = null,
                    c = function() {
                        i.clientWidth !== V && v()
                    },
                    d = function(D) {
                        window.removeEventListener("resize", c, !1), i.removeEventListener("input", v, !1), i.removeEventListener("keyup", v, !1), i.removeEventListener("autosize:destroy", d, !1), i.removeEventListener("autosize:update", v, !1), Object.keys(D).forEach(function(S) {
                            i.style[S] = D[S]
                        }), Tr.delete(i)
                    }.bind(i, {
                        height: i.style.height,
                        resize: i.style.resize,
                        overflowY: i.style.overflowY,
                        overflowX: i.style.overflowX,
                        wordWrap: i.style.wordWrap
                    });
                i.addEventListener("autosize:destroy", d, !1), "onpropertychange" in i && "oninput" in i && i.addEventListener("keyup", v, !1), window.addEventListener("resize", c, !1), i.addEventListener("input", v, !1), i.addEventListener("autosize:update", v, !1), i.style.overflowX = "hidden", i.style.wordWrap = "break-word", Tr.set(i, {
                    destroy: d,
                    update: v
                }), (o = window.getComputedStyle(i, null)).resize === "vertical" ? i.style.resize = "none" : o.resize === "both" && (i.style.resize = "horizontal"), r = o.boxSizing === "content-box" ? -(parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)) : parseFloat(o.borderTopWidth) + parseFloat(o.borderBottomWidth), isNaN(r) && (r = 0), v()
            }

            function m(D) {
                var S = i.style.width;
                i.style.width = "0px", i.style.width = S, i.style.overflowY = D
            }

            function q() {
                if (i.scrollHeight !== 0) {
                    var D = function(C) {
                            for (var h = []; C && C.parentNode && C.parentNode instanceof Element;) C.parentNode.scrollTop && h.push({
                                node: C.parentNode,
                                scrollTop: C.parentNode.scrollTop
                            }), C = C.parentNode;
                            return h
                        }(i),
                        S = document.documentElement && document.documentElement.scrollTop;
                    i.style.height = "", i.style.height = i.scrollHeight + r + "px", V = i.clientWidth, D.forEach(function(C) {
                        C.node.scrollTop = C.scrollTop
                    }), S && (document.documentElement.scrollTop = S)
                }
            }

            function v() {
                q();
                var D = Math.round(parseFloat(i.style.height)),
                    S = window.getComputedStyle(i, null),
                    C = S.boxSizing === "content-box" ? Math.round(parseFloat(S.height)) : i.offsetHeight;
                if (C < D ? S.overflowY === "hidden" && (m("scroll"), q(), C = S.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight) : S.overflowY !== "hidden" && (m("hidden"), q(), C = S.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(i, null).height)) : i.offsetHeight), A !== C) {
                    A = C;
                    var h = O1("autosize:resized");
                    try {
                        i.dispatchEvent(h)
                    } catch {}
                }
            }
        }(n)
    }), t
}).destroy = function(t) {
    return t && Array.prototype.forEach.call(t.length ? t : [t], z9), t
}, mr.update = function(t) {
    return t && Array.prototype.forEach.call(t.length ? t : [t], H9), t
});
var Jf = mr;
const N9 = `<form>\r
    <div class="form-group">\r
        <div class="inputGroup">\r
            <textarea id="input-text-textarea" rows="1" class="form-control jbg-input" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"></textarea>\r
            <span class="inlineSubmit">\r
                <button type="submit" class="btn btn-default inlineSubmitButton" type="button"><span class="inlineSubmitText">Send</span></button>\r
            </span>\r
            <span id="helpBlock2" class="help-block errorText"></span>\r
            <div class="charCountDisplay"><span class="charRemaining">70</span></div>\r
        </div>\r
    </div>\r
</form>`,
    Fl = je.View.extend({
        tagName: "div",
        className: "input",
        model: new ze.Model({}),
        template: ke.template(N9),
        events: {
            "keypress textarea": "onKeypress",
            "click .inlineSubmitButton": "onSubmitClick",
            "input textarea": "onInputChange"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "hidden",
                    onGet(t) {
                        return t === !0 ? "display: none;" : "display: block;"
                    }
                }, {
                    name: "class",
                    observe: "className",
                    onGet(t) {
                        return `input ${t!==void 0?t:""}`
                    }
                }]
            },
            textarea: {
                attributes: [{
                    name: "maxlength",
                    observe: "maxLength"
                }, {
                    name: "placeholder",
                    observe: "placeholder"
                }, {
                    name: "autocapitalize",
                    observe: "autocapitalize"
                }, {
                    name: "class",
                    observe: "className",
                    onGet(t) {
                        return `form-control ${t!==void 0?t:""}`
                    }
                }]
            },
            ".inputGroup": {
                attributes: [{
                    name: "class",
                    observe: "inlineSubmit",
                    onGet(t) {
                        return t === !0 ? "input-group" : ""
                    }
                }]
            },
            ".inlineSubmit": {
                attributes: [{
                    name: "class",
                    observe: "inlineSubmit",
                    onGet(t) {
                        return t === !0 ? "input-group-btn" : ""
                    }
                }, {
                    name: "style",
                    observe: "inlineSubmit",
                    onGet(t) {
                        return t === !0 ? "" : "display:none;"
                    }
                }]
            },
            ".inlineSubmitText": {
                observe: "inlineSubmitText",
                onGet(t) {
                    return t !== void 0 ? t : "Send"
                }
            },
            ".form-group": {
                attributes: [{
                    name: "class",
                    observe: "error",
                    onGet(t) {
                        return t ? "has-error" : ""
                    }
                }]
            },
            ".errorText": {
                observe: "error",
                updateMethod: "html",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? typeof t == "object" ? t.html ? t.html : Ye("<div />").text(t.text).html() : t : null
                }
            },
            ".charRemaining": "remaining",
            ".maxChars": "maxLength",
            ".charCountDisplay": {
                observe: ["maxLength", "counter"],
                visible(t) {
                    return t[0] && t[1]
                }
            }
        },
        render() {
            this.$el.html(this.template()), this.stickit(), this.model.set("remaining", this.model.get("maxLength"))
        },
        onAttach() {
            this.getOption("preventAutosize") || Jf(Ye("textarea"))
        },
        onSubmitClick() {
            return Ye("textarea").blur(), this.triggerMethod("input:submit", this), !1
        },
        onKeypress(t) {
            return this.model.set("error", ""), t.keyCode === 13 ? (Ye("textarea").blur(), this.triggerMethod("input:submit", this), !1) : !0
        },
        onInputChange() {
            const t = this.$("textarea").first();
            if (this.triggerMethod("input:text", this), !t) return;
            const e = t.val() || "";
            this.model.set("remaining", this.model.get("maxLength") - e.length)
        },
        focus() {
            Ye(this.$el).find("textarea").focus()
        },
        clearInput() {
            const t = Ye(this.$el).find("textarea");
            Ye(t).val(""), this.getOption("preventAutosize") || Jf.update(t), this.onInputChange()
        },
        setValue(t) {
            const e = Ye(this.$el).find("textarea");
            e[0].value = t, this.onInputChange()
        },
        getValue() {
            return this.$("textarea").val()
        },
        getSanitizedValue() {
            return un.sanitize(this.getValue())
        },
        sanitize(t) {
            return un.sanitize(t)
        },
        sanitizeInput(t) {
            return un.sanitizeInput(t)
        }
    }),
    G9 = '<div class="text"></div>',
    uo = je.View.extend({
        tagName: "div",
        template: ke.template(G9),
        model: new ze.Model({
            text: "",
            className: ""
        }),
        bindings: {
            ".text": {
                observe: ["text", "html"],
                updateMethod: "html",
                onGet([t, e]) {
                    return e !== void 0 ? e : Ye("<div />").text(t).html()
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "background",
                    onGet(t) {
                        return t ? `background-color: ${t};` : ""
                    }
                }, {
                    name: "class",
                    observe: "className"
                }]
            }
        },
        onRender() {
            this.stickit()
        }
    }),
    ks = je.CollectionView.extend({
        tagName: "div",
        className: "choices",
        childView(t) {
            return t.get("type") === "input" ? Fl : t.get("type") === "text" ? uo : M1
        },
        collection: new ze.Collection([]),
        initialize(t) {
            this.listenTo(this.collection, "sync", this.render), this.mergeOptions(t, ["block", "action"])
        },
        childViewOptions(t, e) {
            let n = !0,
                i;
            return t.get("block") !== void 0 ? n = t.get("block") : this.getOption("block") !== void 0 && (n = this.getOption("block")), t.get("action") !== void 0 ? i = t.get("action") : this.getOption("action") !== void 0 && (i = this.getOption("action")), {
                block: n,
                action: i,
                index: t.get("key") !== void 0 ? t.get("key") : e
            }
        }
    });
let Zf = {};

function I1(t, ...e) {
    !Zf[t] || Zf[t].map(n => n(...e))
}
let fr, xl;

function so() {
    return fr
}

function cA() {
    return xl
}

function X9(t) {
    if (fr = document.getElementById(t) || t || document.querySelector("canvas"), !fr) throw Error("You must provide a canvas element for the game");
    return xl = fr.getContext("2d"), xl.imageSmoothingEnabled = !1, I1("init"), {
        canvas: fr,
        context: xl
    }
}
class Iu {
    constructor({
        spriteSheet: e,
        frames: n,
        frameRate: i,
        loop: o = !0
    } = {}) {
        this.spriteSheet = e, this.frames = n, this.frameRate = i, this.loop = o;
        let {
            width: r,
            height: V,
            margin: A = 0
        } = e.frame;
        this.width = r, this.height = V, this.margin = A, this._f = 0, this._a = 0
    }
    clone() {
        return dA(this)
    }
    reset() {
        this._f = 0, this._a = 0
    }
    update(e = 1 / 60) {
        if (!(!this.loop && this._f == this.frames.length - 1))
            for (this._a += e; this._a * this.frameRate >= 1;) this._f = ++this._f % this.frames.length, this._a -= 1 / this.frameRate
    }
    render({
        x: e,
        y: n,
        width: i = this.width,
        height: o = this.height,
        context: r = cA()
    } = {}) {
        let V = this.frames[this._f] / this.spriteSheet._f | 0,
            A = this.frames[this._f] % this.spriteSheet._f | 0;
        r.drawImage(this.spriteSheet.image, A * this.width + (A * 2 + 1) * this.margin, V * this.height + (V * 2 + 1) * this.margin, this.width, this.height, e, n, i, o)
    }
}

function dA(t) {
    return new Iu(t)
}
dA.prototype = Iu.prototype;
dA.class = Iu;
const Y9 = () => {};

function K9() {
    let t = so();
    cA().clearRect(0, 0, t.width, t.height)
}

function W9({
    fps: t = 60,
    clearCanvas: e = !0,
    update: n,
    render: i
} = {}) {
    if (!(n && i)) throw Error("You must provide update() and render() functions");
    let o = 0,
        r = 1e3 / t,
        V = 1 / t,
        A = e ? K9 : Y9,
        c, d, m, q, v;
    const D = window.performance || Date;

    function S() {
        if (d = requestAnimationFrame(S), m = D.now(), q = m - c, c = m, !(q > 1e3)) {
            for (I1("tick"), o += q; o >= r;) v.update(V), o -= r;
            A(), v.render()
        }
    }
    return v = {
        update: n,
        render: i,
        isStopped: !0,
        start() {
            c = D.now(), this.isStopped = !1, requestAnimationFrame(S)
        },
        stop() {
            this.isStopped = !0, cancelAnimationFrame(d)
        },
        _frame: S,
        set _last(C) {
            c = C
        }
    }, v
}
class J9 {
    constructor({
        create: e,
        maxSize: n = 1024
    } = {}) {
        let i;
        if (!e || !(i = e()) || !(i.update && i.init && i.isAlive)) throw Error("Must provide create() function which returns an object with init(), update(), and isAlive() functions");
        this._c = e, this.objects = [e()], this.size = 0, this.maxSize = n
    }
    get(e = {}) {
        if (this.size === this.objects.length) {
            if (this.size === this.maxSize) return;
            for (let i = 0; i < this.size && this.objects.length < this.maxSize; i++) this.objects.push(this._c())
        }
        let n = this.objects[this.size];
        return this.size++, n.init(e), n
    }
    getAliveObjects() {
        return this.objects.slice(0, this.size)
    }
    clear() {
        this.size = this.objects.length = 0, this.objects.push(this._c())
    }
    update(e) {
        let n, i = !1;
        for (let o = this.size; o--;) n = this.objects[o], n.update(e), n.isAlive() || (i = !0, this.size--);
        i && this.objects.sort((o, r) => r.isAlive() - o.isAlive())
    }
    render() {
        for (let e = this.size; e--;) this.objects[e].render()
    }
}
J9.prototype;

function _f(t, e) {
    let n = [],
        i = e.x + e.width / 2,
        o = e.y + e.height / 2,
        r = t.y < o && t.y + t.height >= e.y,
        V = t.y + t.height >= o && t.y < e.y + e.height;
    return t.x < i && t.x + t.width >= e.x && (r && n.push(0), V && n.push(2)), t.x + t.width >= i && t.x < e.x + e.width && (r && n.push(1), V && n.push(3)), n
}
class Pu {
    constructor({
        maxDepth: e = 3,
        maxObjects: n = 25,
        bounds: i
    } = {}) {
        this.maxDepth = e, this.maxObjects = n;
        let o = so();
        this.bounds = i || {
            x: 0,
            y: 0,
            width: o.width,
            height: o.height
        }, this._b = !1, this._d = 0, this._o = [], this._s = [], this._p = null
    }
    clear() {
        this._s.map(function(e) {
            e.clear()
        }), this._b = !1, this._o.length = 0
    }
    get(e) {
        let n = new Set,
            i, o;
        for (; this._s.length && this._b;) {
            for (i = _f(e, this.bounds), o = 0; o < i.length; o++) this._s[i[o]].get(e).forEach(r => n.add(r));
            return Array.from(n)
        }
        return this._o.filter(r => r !== e)
    }
    add() {
        let e, n, i, o;
        for (n = 0; n < arguments.length; n++) {
            if (i = arguments[n], Array.isArray(i)) {
                this.add.apply(this, i);
                continue
            }
            if (this._b) {
                this._a(i);
                continue
            }
            if (this._o.push(i), this._o.length > this.maxObjects && this._d < this.maxDepth) {
                for (this._sp(), e = 0; o = this._o[e]; e++) this._a(o);
                this._o.length = 0
            }
        }
    }
    _a(e, n, i) {
        for (n = _f(e, this.bounds), i = 0; i < n.length; i++) this._s[n[i]].add(e)
    }
    _sp(e, n, i) {
        if (this._b = !0, !this._s.length)
            for (e = this.bounds.width / 2 | 0, n = this.bounds.height / 2 | 0, i = 0; i < 4; i++) this._s[i] = Uu({
                bounds: {
                    x: this.bounds.x + (i % 2 === 1 ? e : 0),
                    y: this.bounds.y + (i >= 2 ? n : 0),
                    width: e,
                    height: n
                },
                maxDepth: this.maxDepth,
                maxObjects: this.maxObjects
            }), this._s[i]._d = this._d + 1, this._s[i]._p = this
    }
}

function Uu(t) {
    return new Pu(t)
}
Uu.prototype = Pu.prototype;
Uu.class = Pu;
class Fu {
    constructor(e = 0, n = 0) {
        this._x = e, this._y = n
    }
    add(e, n = 1) {
        return aa(this.x + (e.x || 0) * n, this.y + (e.y || 0) * n, this)
    }
    clamp(e, n, i, o) {
        this._c = !0, this._a = e, this._b = n, this._d = i, this._e = o
    }
    get x() {
        return this._x
    }
    get y() {
        return this._y
    }
    set x(e) {
        this._x = this._c ? Math.min(Math.max(this._a, e), this._d) : e
    }
    set y(e) {
        this._y = this._c ? Math.min(Math.max(this._b, e), this._e) : e
    }
}

function aa(t, e, n = {}) {
    let i = new Fu(t, e);
    return n._c && (i.clamp(n._a, n._b, n._d, n._e), i.x = t, i.y = e), i
}
aa.prototype = Fu.prototype;
aa.class = Fu;
class ju {
    constructor(e) {
        this.init(e)
    }
    init(e = {}) {
        let {
            x: n,
            y: i,
            dx: o,
            dy: r,
            ddx: V,
            ddy: A,
            width: c,
            height: d,
            image: m
        } = e;
        this.position = aa(n, i), this.velocity = aa(o, r), this.acceleration = aa(V, A), this._fx = this._fy = 1, this.width = this.height = this.rotation = 0, this.ttl = 1 / 0, this.anchor = {
            x: 0,
            y: 0
        }, this.context = cA();
        for (let q in e) this[q] = e[q];
        m && (this.width = c !== void 0 ? c : m.width, this.height = d !== void 0 ? d : m.height), this.sx = 0, this.sy = 0
    }
    get x() {
        return this.position.x
    }
    get y() {
        return this.position.y
    }
    get dx() {
        return this.velocity.x
    }
    get dy() {
        return this.velocity.y
    }
    get ddx() {
        return this.acceleration.x
    }
    get ddy() {
        return this.acceleration.y
    }
    get animations() {
        return this._a
    }
    get viewX() {
        return this.x - this.sx
    }
    get viewY() {
        return this.y - this.sy
    }
    get width() {
        return this._w
    }
    get height() {
        return this._h
    }
    set x(e) {
        this.position.x = e
    }
    set y(e) {
        this.position.y = e
    }
    set dx(e) {
        this.velocity.x = e
    }
    set dy(e) {
        this.velocity.y = e
    }
    set ddx(e) {
        this.acceleration.x = e
    }
    set ddy(e) {
        this.acceleration.y = e
    }
    set animations(e) {
        let n, i;
        this._a = {};
        for (n in e) this._a[n] = e[n].clone(), i = i || this._a[n];
        this.currentAnimation = i, this.width = this.width || i.width, this.height = this.height || i.height
    }
    set viewX(e) {}
    set viewY(e) {}
    set width(e) {
        let n = e < 0 ? -1 : 1;
        this._fx = n, this._w = e * n
    }
    set height(e) {
        let n = e < 0 ? -1 : 1;
        this._fy = n, this._h = e * n
    }
    isAlive() {
        return this.ttl > 0
    }
    collidesWith(e) {
        if (this.rotation || e.rotation) return null;
        let n = this.x - this.width * this.anchor.x,
            i = this.y - this.height * this.anchor.y,
            o = e.x,
            r = e.y;
        return e.anchor && (o -= e.width * e.anchor.x, r -= e.height * e.anchor.y), n < o + e.width && n + this.width > o && i < r + e.height && i + this.height > r
    }
    update(e) {
        this.advance(e)
    }
    render() {
        this.draw()
    }
    playAnimation(e) {
        this.currentAnimation = this.animations[e], this.currentAnimation.loop || this.currentAnimation.reset()
    }
    advance(e) {
        this.velocity = this.velocity.add(this.acceleration, e), this.position = this.position.add(this.velocity, e), this.ttl--, this.currentAnimation && this.currentAnimation.update(e)
    }
    draw() {
        let e = -this.width * this.anchor.x,
            n = -this.height * this.anchor.y;
        if (this.context.save(), this.context.translate(this.viewX, this.viewY), this.rotation && this.context.rotate(this.rotation), this._fx == -1 || this._fy == -1) {
            let i = this.width / 2 + e,
                o = this.height / 2 + n;
            this.context.translate(i, o), this.context.scale(this._fx, this._fy), this.context.translate(-i, -o)
        }
        this.image ? this.context.drawImage(this.image, e, n, this.width, this.height) : this.currentAnimation ? this.currentAnimation.render({
            x: e,
            y: n,
            width: this.width,
            height: this.height,
            context: this.context
        }) : (this.context.fillStyle = this.color, this.context.fillRect(e, n, this.width, this.height)), this.context.restore()
    }
}

function Qu(t) {
    return new ju(t)
}
Qu.prototype = ju.prototype;
Qu.class = ju;

function Z9(t) {
    if (+t === t) return t;
    let e = [],
        n = t.split(".."),
        i = +n[0],
        o = +n[1],
        r = i;
    if (i < o)
        for (; r <= o; r++) e.push(r);
    else
        for (; r >= o; r--) e.push(r);
    return e
}
class _9 {
    constructor({
        image: e,
        frameWidth: n,
        frameHeight: i,
        frameMargin: o,
        animations: r
    } = {}) {
        if (!e) throw Error("You must provide an Image for the SpriteSheet");
        this.animations = {}, this.image = e, this.frame = {
            width: n,
            height: i,
            margin: o
        }, this._f = e.width / n | 0, this.createAnimations(r)
    }
    createAnimations(e) {
        let n, i;
        for (i in e) {
            let {
                frames: o,
                frameRate: r,
                loop: V
            } = e[i];
            if (n = [], o === void 0) throw Error("Animation " + i + " must provide a frames property");
            [].concat(o).map(A => {
                n = n.concat(Z9(A))
            }), this.animations[i] = dA({
                spriteSheet: this,
                frames: n,
                frameRate: r,
                loop: V
            })
        }
    }
}
_9.prototype;
var P1 = {
    exports: {}
};
/*!
 * sweetalert2 v11.4.26
 * Released under the MIT License.
 */
(function(t, e) {
    (function(n, i) {
        t.exports = i()
    })(Ct, function() {
        const n = "SweetAlert2:",
            i = y => {
                const x = [];
                for (let I = 0; I < y.length; I++) x.indexOf(y[I]) === -1 && x.push(y[I]);
                return x
            },
            o = y => y.charAt(0).toUpperCase() + y.slice(1),
            r = y => {
                console.warn("".concat(n, " ").concat(typeof y == "object" ? y.join(" ") : y))
            },
            V = y => {
                console.error("".concat(n, " ").concat(y))
            },
            A = [],
            c = y => {
                A.includes(y) || (A.push(y), r(y))
            },
            d = (y, x) => {
                c('"'.concat(y, '" is deprecated and will be removed in the next major release. Please use "').concat(x, '" instead.'))
            },
            m = y => typeof y == "function" ? y() : y,
            q = y => y && typeof y.toPromise == "function",
            v = y => q(y) ? y.toPromise() : Promise.resolve(y),
            D = y => y && Promise.resolve(y) === y,
            S = y => y[Math.floor(Math.random() * y.length)],
            C = {
                title: "",
                titleText: "",
                text: "",
                html: "",
                footer: "",
                icon: void 0,
                iconColor: void 0,
                iconHtml: void 0,
                template: void 0,
                toast: !1,
                showClass: {
                    popup: "swal2-show",
                    backdrop: "swal2-backdrop-show",
                    icon: "swal2-icon-show"
                },
                hideClass: {
                    popup: "swal2-hide",
                    backdrop: "swal2-backdrop-hide",
                    icon: "swal2-icon-hide"
                },
                customClass: {},
                target: "body",
                color: void 0,
                backdrop: !0,
                heightAuto: !0,
                allowOutsideClick: !0,
                allowEscapeKey: !0,
                allowEnterKey: !0,
                stopKeydownPropagation: !0,
                keydownListenerCapture: !1,
                showConfirmButton: !0,
                showDenyButton: !1,
                showCancelButton: !1,
                preConfirm: void 0,
                preDeny: void 0,
                confirmButtonText: "OK",
                confirmButtonAriaLabel: "",
                confirmButtonColor: void 0,
                denyButtonText: "No",
                denyButtonAriaLabel: "",
                denyButtonColor: void 0,
                cancelButtonText: "Cancel",
                cancelButtonAriaLabel: "",
                cancelButtonColor: void 0,
                buttonsStyling: !0,
                reverseButtons: !1,
                focusConfirm: !0,
                focusDeny: !1,
                focusCancel: !1,
                returnFocus: !0,
                showCloseButton: !1,
                closeButtonHtml: "&times;",
                closeButtonAriaLabel: "Close this dialog",
                loaderHtml: "",
                showLoaderOnConfirm: !1,
                showLoaderOnDeny: !1,
                imageUrl: void 0,
                imageWidth: void 0,
                imageHeight: void 0,
                imageAlt: "",
                timer: void 0,
                timerProgressBar: !1,
                width: void 0,
                padding: void 0,
                background: void 0,
                input: void 0,
                inputPlaceholder: "",
                inputLabel: "",
                inputValue: "",
                inputOptions: {},
                inputAutoTrim: !0,
                inputAttributes: {},
                inputValidator: void 0,
                returnInputValueOnDeny: !1,
                validationMessage: void 0,
                grow: !1,
                position: "center",
                progressSteps: [],
                currentProgressStep: void 0,
                progressStepsDistance: void 0,
                willOpen: void 0,
                didOpen: void 0,
                didRender: void 0,
                willClose: void 0,
                didClose: void 0,
                didDestroy: void 0,
                scrollbarPadding: !0
            },
            h = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
            w = {},
            T = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
            M = y => Object.prototype.hasOwnProperty.call(C, y),
            O = y => h.indexOf(y) !== -1,
            Q = y => w[y],
            u = y => {
                M(y) || r('Unknown parameter "'.concat(y, '"'))
            },
            J = y => {
                T.includes(y) && r('The parameter "'.concat(y, '" is incompatible with toasts'))
            },
            se = y => {
                Q(y) && d(y, Q(y))
            },
            te = y => {
                !y.backdrop && y.allowOutsideClick && r('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
                for (const x in y) u(x), y.toast && J(x), se(x)
            },
            ve = "swal2-",
            be = y => {
                const x = {};
                for (const I in y) x[y[I]] = ve + y[I];
                return x
            },
            oe = be(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "no-war"]),
            Ie = be(["success", "warning", "info", "question", "error"]),
            Y = () => document.body.querySelector(".".concat(oe.container)),
            re = y => {
                const x = Y();
                return x ? x.querySelector(y) : null
            },
            ue = y => re(".".concat(y)),
            fe = () => ue(oe.popup),
            qe = () => ue(oe.icon),
            ge = () => ue(oe.title),
            Te = () => ue(oe["html-container"]),
            Le = () => ue(oe.image),
            Ge = () => ue(oe["progress-steps"]),
            Xe = () => ue(oe["validation-message"]),
            nt = () => re(".".concat(oe.actions, " .").concat(oe.confirm)),
            Tt = () => re(".".concat(oe.actions, " .").concat(oe.deny)),
            Pt = () => ue(oe["input-label"]),
            U = () => re(".".concat(oe.loader)),
            g = () => re(".".concat(oe.actions, " .").concat(oe.cancel)),
            R = () => ue(oe.actions),
            j = () => ue(oe.footer),
            N = () => ue(oe["timer-progress-bar"]),
            W = () => ue(oe.close),
            _ = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`,
            he = () => {
                const y = Array.from(fe().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((I, $) => {
                        const Se = parseInt(I.getAttribute("tabindex")),
                            _e = parseInt($.getAttribute("tabindex"));
                        return Se > _e ? 1 : Se < _e ? -1 : 0
                    }),
                    x = Array.from(fe().querySelectorAll(_)).filter(I => I.getAttribute("tabindex") !== "-1");
                return i(y.concat(x)).filter(I => De(I))
            },
            Pe = () => Lt(document.body, oe.shown) && !Lt(document.body, oe["toast-shown"]) && !Lt(document.body, oe["no-backdrop"]),
            xe = () => fe() && Lt(fe(), oe.toast),
            Qe = () => fe().hasAttribute("data-loading"),
            He = {
                previousBodyPadding: null
            },
            pt = (y, x) => {
                if (y.textContent = "", x) {
                    const $ = new DOMParser().parseFromString(x, "text/html");
                    Array.from($.querySelector("head").childNodes).forEach(Se => {
                        y.appendChild(Se)
                    }), Array.from($.querySelector("body").childNodes).forEach(Se => {
                        y.appendChild(Se)
                    })
                }
            },
            Lt = (y, x) => {
                if (!x) return !1;
                const I = x.split(/\s+/);
                for (let $ = 0; $ < I.length; $++)
                    if (!y.classList.contains(I[$])) return !1;
                return !0
            },
            yn = (y, x) => {
                Array.from(y.classList).forEach(I => {
                    !Object.values(oe).includes(I) && !Object.values(Ie).includes(I) && !Object.values(x.showClass).includes(I) && y.classList.remove(I)
                })
            },
            mt = (y, x, I) => {
                if (yn(y, x), x.customClass && x.customClass[I]) {
                    if (typeof x.customClass[I] != "string" && !x.customClass[I].forEach) return r("Invalid type of customClass.".concat(I, '! Expected string or iterable object, got "').concat(typeof x.customClass[I], '"'));
                    rt(y, x.customClass[I])
                }
            },
            Dt = (y, x) => {
                if (!x) return null;
                switch (x) {
                    case "select":
                    case "textarea":
                    case "file":
                        return y.querySelector(".".concat(oe.popup, " > .").concat(oe[x]));
                    case "checkbox":
                        return y.querySelector(".".concat(oe.popup, " > .").concat(oe.checkbox, " input"));
                    case "radio":
                        return y.querySelector(".".concat(oe.popup, " > .").concat(oe.radio, " input:checked")) || y.querySelector(".".concat(oe.popup, " > .").concat(oe.radio, " input:first-child"));
                    case "range":
                        return y.querySelector(".".concat(oe.popup, " > .").concat(oe.range, " input"));
                    default:
                        return y.querySelector(".".concat(oe.popup, " > .").concat(oe.input))
                }
            },
            Et = y => {
                if (y.focus(), y.type !== "file") {
                    const x = y.value;
                    y.value = "", y.value = x
                }
            },
            cn = (y, x, I) => {
                !y || !x || (typeof x == "string" && (x = x.split(/\s+/).filter(Boolean)), x.forEach($ => {
                    Array.isArray(y) ? y.forEach(Se => {
                        I ? Se.classList.add($) : Se.classList.remove($)
                    }) : I ? y.classList.add($) : y.classList.remove($)
                }))
            },
            rt = (y, x) => {
                cn(y, x, !0)
            },
            Kt = (y, x) => {
                cn(y, x, !1)
            },
            ee = (y, x) => {
                const I = Array.from(y.children);
                for (let $ = 0; $ < I.length; $++) {
                    const Se = I[$];
                    if (Se instanceof HTMLElement && Lt(Se, x)) return Se
                }
            },
            Z = (y, x, I) => {
                I === "".concat(parseInt(I)) && (I = parseInt(I)), I || parseInt(I) === 0 ? y.style[x] = typeof I == "number" ? "".concat(I, "px") : I : y.style.removeProperty(x)
            },
            le = function(y) {
                let x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "flex";
                y.style.display = x
            },
            K = y => {
                y.style.display = "none"
            },
            Ve = (y, x, I, $) => {
                const Se = y.querySelector(x);
                Se && (Se.style[I] = $)
            },
            Re = function(y, x) {
                let I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "flex";
                x ? le(y, I) : K(y)
            },
            De = y => !!(y && (y.offsetWidth || y.offsetHeight || y.getClientRects().length)),
            Ke = () => !De(nt()) && !De(Tt()) && !De(g()),
            We = y => y.scrollHeight > y.clientHeight,
            bt = y => {
                const x = window.getComputedStyle(y),
                    I = parseFloat(x.getPropertyValue("animation-duration") || "0"),
                    $ = parseFloat(x.getPropertyValue("transition-duration") || "0");
                return I > 0 || $ > 0
            },
            tn = function(y) {
                let x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
                const I = N();
                De(I) && (x && (I.style.transition = "none", I.style.width = "100%"), setTimeout(() => {
                    I.style.transition = "width ".concat(y / 1e3, "s linear"), I.style.width = "0%"
                }, 10))
            },
            ot = () => {
                const y = N(),
                    x = parseInt(window.getComputedStyle(y).width);
                y.style.removeProperty("transition"), y.style.width = "100%";
                const I = parseInt(window.getComputedStyle(y).width),
                    $ = x / I * 100;
                y.style.removeProperty("transition"), y.style.width = "".concat($, "%")
            },
            ui = () => typeof window > "u" || typeof document > "u",
            bi = 100,
            ht = {},
            mi = () => {
                ht.previousActiveElement instanceof HTMLElement ? (ht.previousActiveElement.focus(), ht.previousActiveElement = null) : document.body && document.body.focus()
            },
            Is = y => new Promise(x => {
                if (!y) return x();
                const I = window.scrollX,
                    $ = window.scrollY;
                ht.restoreFocusTimeout = setTimeout(() => {
                    mi(), x()
                }, bi), window.scrollTo(I, $)
            }),
            za = `
 <div aria-labelledby="`.concat(oe.title, '" aria-describedby="').concat(oe["html-container"], '" class="').concat(oe.popup, `" tabindex="-1">
   <button type="button" class="`).concat(oe.close, `"></button>
   <ul class="`).concat(oe["progress-steps"], `"></ul>
   <div class="`).concat(oe.icon, `"></div>
   <img class="`).concat(oe.image, `" />
   <h2 class="`).concat(oe.title, '" id="').concat(oe.title, `"></h2>
   <div class="`).concat(oe["html-container"], '" id="').concat(oe["html-container"], `"></div>
   <input class="`).concat(oe.input, `" />
   <input type="file" class="`).concat(oe.file, `" />
   <div class="`).concat(oe.range, `">
     <input type="range" />
     <output></output>
   </div>
   <select class="`).concat(oe.select, `"></select>
   <div class="`).concat(oe.radio, `"></div>
   <label for="`).concat(oe.checkbox, '" class="').concat(oe.checkbox, `">
     <input type="checkbox" />
     <span class="`).concat(oe.label, `"></span>
   </label>
   <textarea class="`).concat(oe.textarea, `"></textarea>
   <div class="`).concat(oe["validation-message"], '" id="').concat(oe["validation-message"], `"></div>
   <div class="`).concat(oe.actions, `">
     <div class="`).concat(oe.loader, `"></div>
     <button type="button" class="`).concat(oe.confirm, `"></button>
     <button type="button" class="`).concat(oe.deny, `"></button>
     <button type="button" class="`).concat(oe.cancel, `"></button>
   </div>
   <div class="`).concat(oe.footer, `"></div>
   <div class="`).concat(oe["timer-progress-bar-container"], `">
     <div class="`).concat(oe["timer-progress-bar"], `"></div>
   </div>
 </div>
`).replace(/(^|\n)\s*/g, ""),
            si = () => {
                const y = Y();
                return y ? (y.remove(), Kt([document.documentElement, document.body], [oe["no-backdrop"], oe["toast-shown"], oe["has-column"]]), !0) : !1
            },
            bn = () => {
                ht.currentInstance.resetValidationMessage()
            },
            Ha = () => {
                const y = fe(),
                    x = ee(y, oe.input),
                    I = ee(y, oe.file),
                    $ = y.querySelector(".".concat(oe.range, " input")),
                    Se = y.querySelector(".".concat(oe.range, " output")),
                    _e = ee(y, oe.select),
                    an = y.querySelector(".".concat(oe.checkbox, " input")),
                    wi = ee(y, oe.textarea);
                x.oninput = bn, I.onchange = bn, _e.onchange = bn, an.onchange = bn, wi.oninput = bn, $.oninput = () => {
                    bn(), Se.value = $.value
                }, $.onchange = () => {
                    bn(), Se.value = $.value
                }
            },
            Na = y => typeof y == "string" ? document.querySelector(y) : y,
            Ps = y => {
                const x = fe();
                x.setAttribute("role", y.toast ? "alert" : "dialog"), x.setAttribute("aria-live", y.toast ? "polite" : "assertive"), y.toast || x.setAttribute("aria-modal", "true")
            },
            vo = y => {
                window.getComputedStyle(y).direction === "rtl" && rt(Y(), oe.rtl)
            },
            Us = y => {
                const x = si();
                if (ui()) {
                    V("SweetAlert2 requires document to initialize");
                    return
                }
                const I = document.createElement("div");
                I.className = oe.container, x && rt(I, oe["no-transition"]), pt(I, za);
                const $ = Na(y.target);
                $.appendChild(I), Ps(y), vo($), Ha()
            },
            Fs = (y, x) => {
                y instanceof HTMLElement ? x.appendChild(y) : typeof y == "object" ? wo(y, x) : y && pt(x, y)
            },
            wo = (y, x) => {
                y.jquery ? xo(x, y) : pt(x, y.toString())
            },
            xo = (y, x) => {
                if (y.textContent = "", 0 in x)
                    for (let I = 0; I in x; I++) y.appendChild(x[I].cloneNode(!0));
                else y.appendChild(x.cloneNode(!0))
            },
            On = (() => {
                if (ui()) return !1;
                const y = document.createElement("div"),
                    x = {
                        WebkitAnimation: "webkitAnimationEnd",
                        animation: "animationend"
                    };
                for (const I in x)
                    if (Object.prototype.hasOwnProperty.call(x, I) && typeof y.style[I] < "u") return x[I];
                return !1
            })(),
            ko = () => {
                const y = document.createElement("div");
                y.className = oe["scrollbar-measure"], document.body.appendChild(y);
                const x = y.getBoundingClientRect().width - y.clientWidth;
                return document.body.removeChild(y), x
            },
            js = (y, x) => {
                const I = R(),
                    $ = U();
                !x.showConfirmButton && !x.showDenyButton && !x.showCancelButton ? K(I) : le(I), mt(I, x, "actions"), Ui(I, $, x), pt($, x.loaderHtml), mt($, x, "loader")
            };

        function Ui(y, x, I) {
            const $ = nt(),
                Se = Tt(),
                _e = g();
            Qs($, "confirm", I), Qs(Se, "deny", I), Qs(_e, "cancel", I), Co($, Se, _e, I), I.reverseButtons && (I.toast ? (y.insertBefore(_e, $), y.insertBefore(Se, $)) : (y.insertBefore(_e, x), y.insertBefore(Se, x), y.insertBefore($, x)))
        }

        function Co(y, x, I, $) {
            if (!$.buttonsStyling) return Kt([y, x, I], oe.styled);
            rt([y, x, I], oe.styled), $.confirmButtonColor && (y.style.backgroundColor = $.confirmButtonColor, rt(y, oe["default-outline"])), $.denyButtonColor && (x.style.backgroundColor = $.denyButtonColor, rt(x, oe["default-outline"])), $.cancelButtonColor && (I.style.backgroundColor = $.cancelButtonColor, rt(I, oe["default-outline"]))
        }

        function Qs(y, x, I) {
            Re(y, I["show".concat(o(x), "Button")], "inline-block"), pt(y, I["".concat(x, "ButtonText")]), y.setAttribute("aria-label", I["".concat(x, "ButtonAriaLabel")]), y.className = oe[x], mt(y, I, "".concat(x, "Button")), rt(y, I["".concat(x, "ButtonClass")])
        }
        const lt = (y, x) => {
            const I = Y();
            !I || (L(I, x.backdrop), f(I, x.position), P(I, x.grow), mt(I, x, "container"))
        };

        function L(y, x) {
            typeof x == "string" ? y.style.background = x : x || rt([document.documentElement, document.body], oe["no-backdrop"])
        }

        function f(y, x) {
            x in oe ? rt(y, oe[x]) : (r('The "position" parameter is not valid, defaulting to "center"'), rt(y, oe.center))
        }

        function P(y, x) {
            if (x && typeof x == "string") {
                const I = "grow-".concat(x);
                I in oe && rt(y, oe[I])
            }
        }
        var H = {
            awaitingPromise: new WeakMap,
            promise: new WeakMap,
            innerParams: new WeakMap,
            domCache: new WeakMap
        };
        const ce = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
            Me = (y, x) => {
                const I = fe(),
                    $ = H.innerParams.get(y),
                    Se = !$ || x.input !== $.input;
                ce.forEach(_e => {
                    const an = ee(I, oe[_e]);
                    Vn(_e, x.inputAttributes), an.className = oe[_e], Se && K(an)
                }), x.input && (Se && tt(x), Fi(x))
            },
            tt = y => {
                if (!nn[y.input]) return V('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(y.input, '"'));
                const x = Ga(y.input),
                    I = nn[y.input](x, y);
                le(x), setTimeout(() => {
                    Et(I)
                })
            },
            Gt = y => {
                for (let x = 0; x < y.attributes.length; x++) {
                    const I = y.attributes[x].name;
                    ["type", "value", "style"].includes(I) || y.removeAttribute(I)
                }
            },
            Vn = (y, x) => {
                const I = Dt(fe(), y);
                if (!!I) {
                    Gt(I);
                    for (const $ in x) I.setAttribute($, x[$])
                }
            },
            Fi = y => {
                const x = Ga(y.input);
                typeof y.customClass == "object" && rt(x, y.customClass.input)
            },
            vi = (y, x) => {
                (!y.placeholder || x.inputPlaceholder) && (y.placeholder = x.inputPlaceholder)
            },
            ji = (y, x, I) => {
                if (I.inputLabel) {
                    y.id = oe.input;
                    const $ = document.createElement("label"),
                        Se = oe["input-label"];
                    $.setAttribute("for", y.id), $.className = Se, typeof I.customClass == "object" && rt($, I.customClass.inputLabel), $.innerText = I.inputLabel, x.insertAdjacentElement("beforebegin", $)
                }
            },
            Ga = y => ee(fe(), oe[y] || oe.input),
            ln = (y, x) => {
                ["string", "number"].includes(typeof x) ? y.value = "".concat(x) : D(x) || r('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof x, '"'))
            },
            nn = {};
        nn.text = nn.email = nn.password = nn.number = nn.tel = nn.url = (y, x) => (ln(y, x.inputValue), ji(y, y, x), vi(y, x), y.type = x.input, y), nn.file = (y, x) => (ji(y, y, x), vi(y, x), y), nn.range = (y, x) => {
            const I = y.querySelector("input"),
                $ = y.querySelector("output");
            return ln(I, x.inputValue), I.type = x.input, ln($, x.inputValue), ji(I, y, x), y
        }, nn.select = (y, x) => {
            if (y.textContent = "", x.inputPlaceholder) {
                const I = document.createElement("option");
                pt(I, x.inputPlaceholder), I.value = "", I.disabled = !0, I.selected = !0, y.appendChild(I)
            }
            return ji(y, y, x), y
        }, nn.radio = y => (y.textContent = "", y), nn.checkbox = (y, x) => {
            const I = Dt(fe(), "checkbox");
            I.value = "1", I.id = oe.checkbox, I.checked = Boolean(x.inputValue);
            const $ = y.querySelector("span");
            return pt($, x.inputPlaceholder), I
        }, nn.textarea = (y, x) => {
            ln(y, x.inputValue), vi(y, x), ji(y, y, x);
            const I = $ => parseInt(window.getComputedStyle($).marginLeft) + parseInt(window.getComputedStyle($).marginRight);
            return setTimeout(() => {
                if ("MutationObserver" in window) {
                    const $ = parseInt(window.getComputedStyle(fe()).width),
                        Se = () => {
                            const _e = y.offsetWidth + I(y);
                            _e > $ ? fe().style.width = "".concat(_e, "px") : fe().style.width = null
                        };
                    new MutationObserver(Se).observe(y, {
                        attributes: !0,
                        attributeFilter: ["style"]
                    })
                }
            }), y
        };
        const Ro = (y, x) => {
                const I = Te();
                mt(I, x, "htmlContainer"), x.html ? (Fs(x.html, I), le(I, "block")) : x.text ? (I.textContent = x.text, le(I, "block")) : K(I), Me(y, x)
            },
            pp = (y, x) => {
                const I = j();
                Re(I, x.footer), x.footer && Fs(x.footer, I), mt(I, x, "footer")
            },
            hp = (y, x) => {
                const I = W();
                pt(I, x.closeButtonHtml), mt(I, x, "closeButton"), Re(I, x.showCloseButton), I.setAttribute("aria-label", x.closeButtonAriaLabel)
            },
            Xa = (y, x) => {
                const I = H.innerParams.get(y),
                    $ = qe();
                if (I && x.icon === I.icon) {
                    WV($, x), Ya($, x);
                    return
                }
                if (!x.icon && !x.iconHtml) {
                    K($);
                    return
                }
                if (x.icon && Object.keys(Ie).indexOf(x.icon) === -1) {
                    V('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(x.icon, '"')), K($);
                    return
                }
                le($), WV($, x), Ya($, x), rt($, x.showClass.icon)
            },
            Ya = (y, x) => {
                for (const I in Ie) x.icon !== I && Kt(y, Ie[I]);
                rt(y, Ie[x.icon]), Nn(y, x), Do(), mt(y, x, "icon")
            },
            Do = () => {
                const y = fe(),
                    x = window.getComputedStyle(y).getPropertyValue("background-color"),
                    I = y.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
                for (let $ = 0; $ < I.length; $++) I[$].style.backgroundColor = x
            },
            KV = `
  <div class="swal2-success-circular-line-left"></div>
  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>
  <div class="swal2-success-circular-line-right"></div>
`,
            up = `
  <span class="swal2-x-mark">
    <span class="swal2-x-mark-line-left"></span>
    <span class="swal2-x-mark-line-right"></span>
  </span>
`,
            WV = (y, x) => {
                let I = y.innerHTML,
                    $;
                x.iconHtml ? $ = Ka(x.iconHtml) : x.icon === "success" ? ($ = KV, I = I.replace(/ style=".*?"/g, "")) : x.icon === "error" ? $ = up : $ = Ka({
                    question: "?",
                    warning: "!",
                    info: "i"
                } [x.icon]), I.trim() !== $.trim() && pt(y, $)
            },
            Nn = (y, x) => {
                if (!!x.iconColor) {
                    y.style.color = x.iconColor, y.style.borderColor = x.iconColor;
                    for (const I of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) Ve(y, I, "backgroundColor", x.iconColor);
                    Ve(y, ".swal2-success-ring", "borderColor", x.iconColor)
                }
            },
            Ka = y => '<div class="'.concat(oe["icon-content"], '">').concat(y, "</div>"),
            zs = (y, x) => {
                const I = Le();
                if (!x.imageUrl) return K(I);
                le(I, ""), I.setAttribute("src", x.imageUrl), I.setAttribute("alt", x.imageAlt), Z(I, "width", x.imageWidth), Z(I, "height", x.imageHeight), I.className = oe.image, mt(I, x, "image")
            },
            mp = (y, x) => {
                const I = Ge();
                if (!x.progressSteps || x.progressSteps.length === 0) return K(I);
                le(I), I.textContent = "", x.currentProgressStep >= x.progressSteps.length && r("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), x.progressSteps.forEach(($, Se) => {
                    const _e = fp($);
                    if (I.appendChild(_e), Se === x.currentProgressStep && rt(_e, oe["active-progress-step"]), Se !== x.progressSteps.length - 1) {
                        const an = Qi(x);
                        I.appendChild(an)
                    }
                })
            },
            fp = y => {
                const x = document.createElement("li");
                return rt(x, oe["progress-step"]), pt(x, y), x
            },
            Qi = y => {
                const x = document.createElement("li");
                return rt(x, oe["progress-step-line"]), y.progressStepsDistance && Z(x, "width", y.progressStepsDistance), x
            },
            zi = (y, x) => {
                const I = ge();
                Re(I, x.title || x.titleText, "block"), x.title && Fs(x.title, I), x.titleText && (I.innerText = x.titleText), mt(I, x, "title")
            },
            Wa = (y, x) => {
                const I = Y(),
                    $ = fe();
                x.toast ? (Z(I, "width", x.width), $.style.width = "100%", $.insertBefore(U(), qe())) : Z($, "width", x.width), Z($, "padding", x.padding), x.color && ($.style.color = x.color), x.background && ($.style.background = x.background), K(Xe()), qp($, x)
            },
            qp = (y, x) => {
                y.className = "".concat(oe.popup, " ").concat(De(y) ? x.showClass.popup : ""), x.toast ? (rt([document.documentElement, document.body], oe["toast-shown"]), rt(y, oe.toast)) : rt(y, oe.modal), mt(y, x, "popup"), typeof x.customClass == "string" && rt(y, x.customClass), x.icon && rt(y, oe["icon-".concat(x.icon)])
            },
            Ja = (y, x) => {
                Wa(y, x), lt(y, x), mp(y, x), Xa(y, x), zs(y, x), zi(y, x), hp(y, x), Ro(y, x), js(y, x), pp(y, x), typeof x.didRender == "function" && x.didRender(fe())
            },
            Hi = Object.freeze({
                cancel: "cancel",
                backdrop: "backdrop",
                close: "close",
                esc: "esc",
                timer: "timer"
            }),
            Hs = () => {
                Array.from(document.body.children).forEach(x => {
                    x === Y() || x.contains(Y()) || (x.hasAttribute("aria-hidden") && x.setAttribute("data-previous-aria-hidden", x.getAttribute("aria-hidden")), x.setAttribute("aria-hidden", "true"))
                })
            },
            Za = () => {
                Array.from(document.body.children).forEach(x => {
                    x.hasAttribute("data-previous-aria-hidden") ? (x.setAttribute("aria-hidden", x.getAttribute("data-previous-aria-hidden")), x.removeAttribute("data-previous-aria-hidden")) : x.removeAttribute("aria-hidden")
                })
            },
            So = ["swal-title", "swal-html", "swal-footer"],
            gp = y => {
                const x = typeof y.template == "string" ? document.querySelector(y.template) : y.template;
                if (!x) return {};
                const I = x.content;
                return xp(I), Object.assign(JV(I), yp(I), bp(I), _a(I), vp(I), wp(I, So))
            },
            JV = y => {
                const x = {};
                return Array.from(y.querySelectorAll("swal-param")).forEach($ => {
                    Ni($, ["name", "value"]);
                    const Se = $.getAttribute("name"),
                        _e = $.getAttribute("value");
                    typeof C[Se] == "boolean" && _e === "false" && (x[Se] = !1), typeof C[Se] == "object" && (x[Se] = JSON.parse(_e))
                }), x
            },
            yp = y => {
                const x = {};
                return Array.from(y.querySelectorAll("swal-button")).forEach($ => {
                    Ni($, ["type", "color", "aria-label"]);
                    const Se = $.getAttribute("type");
                    x["".concat(Se, "ButtonText")] = $.innerHTML, x["show".concat(o(Se), "Button")] = !0, $.hasAttribute("color") && (x["".concat(Se, "ButtonColor")] = $.getAttribute("color")), $.hasAttribute("aria-label") && (x["".concat(Se, "ButtonAriaLabel")] = $.getAttribute("aria-label"))
                }), x
            },
            bp = y => {
                const x = {},
                    I = y.querySelector("swal-image");
                return I && (Ni(I, ["src", "width", "height", "alt"]), I.hasAttribute("src") && (x.imageUrl = I.getAttribute("src")), I.hasAttribute("width") && (x.imageWidth = I.getAttribute("width")), I.hasAttribute("height") && (x.imageHeight = I.getAttribute("height")), I.hasAttribute("alt") && (x.imageAlt = I.getAttribute("alt"))), x
            },
            _a = y => {
                const x = {},
                    I = y.querySelector("swal-icon");
                return I && (Ni(I, ["type", "color"]), I.hasAttribute("type") && (x.icon = I.getAttribute("type")), I.hasAttribute("color") && (x.iconColor = I.getAttribute("color")), x.iconHtml = I.innerHTML), x
            },
            vp = y => {
                const x = {},
                    I = y.querySelector("swal-input");
                I && (Ni(I, ["type", "label", "placeholder", "value"]), x.input = I.getAttribute("type") || "text", I.hasAttribute("label") && (x.inputLabel = I.getAttribute("label")), I.hasAttribute("placeholder") && (x.inputPlaceholder = I.getAttribute("placeholder")), I.hasAttribute("value") && (x.inputValue = I.getAttribute("value")));
                const $ = Array.from(y.querySelectorAll("swal-input-option"));
                return $.length && (x.inputOptions = {}, $.forEach(Se => {
                    Ni(Se, ["value"]);
                    const _e = Se.getAttribute("value"),
                        an = Se.innerHTML;
                    x.inputOptions[_e] = an
                })), x
            },
            wp = (y, x) => {
                const I = {};
                for (const $ in x) {
                    const Se = x[$],
                        _e = y.querySelector(Se);
                    _e && (Ni(_e, []), I[Se.replace(/^swal-/, "")] = _e.innerHTML.trim())
                }
                return I
            },
            xp = y => {
                const x = So.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                Array.from(y.children).forEach(I => {
                    const $ = I.tagName.toLowerCase();
                    x.indexOf($) === -1 && r("Unrecognized element <".concat($, ">"))
                })
            },
            Ni = (y, x) => {
                Array.from(y.attributes).forEach(I => {
                    x.indexOf(I.name) === -1 && r(['Unrecognized attribute "'.concat(I.name, '" on <').concat(y.tagName.toLowerCase(), ">."), "".concat(x.length ? "Allowed attributes are: ".concat(x.join(", ")) : "To set the value, use HTML within the element.")])
                })
            };
        var ZV = {
            email: (y, x) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(y) ? Promise.resolve() : Promise.resolve(x || "Invalid email address"),
            url: (y, x) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(y) ? Promise.resolve() : Promise.resolve(x || "Invalid URL")
        };

        function kp(y) {
            y.inputValidator || Object.keys(ZV).forEach(x => {
                y.input === x && (y.inputValidator = ZV[x])
            })
        }

        function Cp(y) {
            (!y.target || typeof y.target == "string" && !document.querySelector(y.target) || typeof y.target != "string" && !y.target.appendChild) && (r('Target parameter is not valid, defaulting to "body"'), y.target = "body")
        }

        function _V(y) {
            kp(y), y.showLoaderOnConfirm && !y.preConfirm && r(`showLoaderOnConfirm is set to true, but preConfirm is not defined.
showLoaderOnConfirm should be used together with preConfirm, see usage example:
https://sweetalert2.github.io/#ajax-request`), Cp(y), typeof y.title == "string" && (y.title = y.title.split(`
`).join("<br />")), Us(y)
        }
        class $a {
            constructor(x, I) {
                this.callback = x, this.remaining = I, this.running = !1, this.start()
            }
            start() {
                return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining
            }
            stop() {
                return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date().getTime() - this.started.getTime()), this.remaining
            }
            increase(x) {
                const I = this.running;
                return I && this.stop(), this.remaining += x, I && this.start(), this.remaining
            }
            getTimerLeft() {
                return this.running && (this.stop(), this.start()), this.remaining
            }
            isRunning() {
                return this.running
            }
        }
        const $V = () => {
                He.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight && (He.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(He.previousBodyPadding + ko(), "px"))
            },
            er = () => {
                He.previousBodyPadding !== null && (document.body.style.paddingRight = "".concat(He.previousBodyPadding, "px"), He.previousBodyPadding = null)
            },
            el = () => {
                if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !Lt(document.body, oe.iosfix)) {
                    const x = document.body.scrollTop;
                    document.body.style.top = "".concat(x * -1, "px"), rt(document.body, oe.iosfix), tr(), tl()
                }
            },
            tl = () => {
                const y = navigator.userAgent,
                    x = !!y.match(/iPad/i) || !!y.match(/iPhone/i),
                    I = !!y.match(/WebKit/i);
                x && I && !y.match(/CriOS/i) && fe().scrollHeight > window.innerHeight - 44 && (Y().style.paddingBottom = "".concat(44, "px"))
            },
            tr = () => {
                const y = Y();
                let x;
                y.ontouchstart = I => {
                    x = Rp(I)
                }, y.ontouchmove = I => {
                    x && (I.preventDefault(), I.stopPropagation())
                }
            },
            Rp = y => {
                const x = y.target,
                    I = Y();
                return Dp(y) || Sp(y) ? !1 : x === I || !We(I) && x.tagName !== "INPUT" && x.tagName !== "TEXTAREA" && !(We(Te()) && Te().contains(x))
            },
            Dp = y => y.touches && y.touches.length && y.touches[0].touchType === "stylus",
            Sp = y => y.touches && y.touches.length > 1,
            Ns = () => {
                if (Lt(document.body, oe.iosfix)) {
                    const y = parseInt(document.body.style.top, 10);
                    Kt(document.body, oe.iosfix), document.body.style.top = "", document.body.scrollTop = y * -1
                }
            },
            nr = 10,
            ir = y => {
                const x = Y(),
                    I = fe();
                typeof y.willOpen == "function" && y.willOpen(I);
                const Se = window.getComputedStyle(document.body).overflowY;
                l(x, I, y), setTimeout(() => {
                    Tp(x, I)
                }, nr), Pe() && (Ep(x, y.scrollbarPadding, Se), Hs()), !xe() && !ht.previousActiveElement && (ht.previousActiveElement = document.activeElement), typeof y.didOpen == "function" && setTimeout(() => y.didOpen(I)), Kt(x, oe["no-transition"])
            },
            nl = y => {
                const x = fe();
                if (y.target !== x) return;
                const I = Y();
                x.removeEventListener(On, nl), I.style.overflowY = "auto"
            },
            Tp = (y, x) => {
                On && bt(x) ? (y.style.overflowY = "hidden", x.addEventListener(On, nl)) : y.style.overflowY = "auto"
            },
            Ep = (y, x, I) => {
                el(), x && I !== "hidden" && $V(), setTimeout(() => {
                    y.scrollTop = 0
                })
            },
            l = (y, x, I) => {
                rt(y, I.showClass.backdrop), x.style.setProperty("opacity", "0", "important"), le(x, "grid"), setTimeout(() => {
                    rt(x, I.showClass.popup), x.style.removeProperty("opacity")
                }, nr), rt([document.documentElement, document.body], oe.shown), I.heightAuto && I.backdrop && !I.toast && rt([document.documentElement, document.body], oe["height-auto"])
            },
            p = y => {
                let x = fe();
                x || new Ft, x = fe();
                const I = U();
                xe() ? K(qe()) : b(x, y), le(I), x.setAttribute("data-loading", "true"), x.setAttribute("aria-busy", "true"), x.focus()
            },
            b = (y, x) => {
                const I = R(),
                    $ = U();
                !x && De(nt()) && (x = nt()), le(I), x && (K(x), $.setAttribute("data-button-to-replace", x.className)), $.parentNode.insertBefore($, x), rt([y, I], oe.loading)
            },
            k = (y, x) => {
                x.input === "select" || x.input === "radio" ? ae(y, x) : ["text", "email", "number", "tel", "textarea"].includes(x.input) && (q(x.inputValue) || D(x.inputValue)) && (p(nt()), de(y, x))
            },
            B = (y, x) => {
                const I = y.getInput();
                if (!I) return null;
                switch (x.input) {
                    case "checkbox":
                        return F(I);
                    case "radio":
                        return z(I);
                    case "file":
                        return ie(I);
                    default:
                        return x.inputAutoTrim ? I.value.trim() : I.value
                }
            },
            F = y => y.checked ? 1 : 0,
            z = y => y.checked ? y.value : null,
            ie = y => y.files.length ? y.getAttribute("multiple") !== null ? y.files : y.files[0] : null,
            ae = (y, x) => {
                const I = fe(),
                    $ = Se => ye[x.input](I, Be(Se), x);
                q(x.inputOptions) || D(x.inputOptions) ? (p(nt()), v(x.inputOptions).then(Se => {
                    y.hideLoading(), $(Se)
                })) : typeof x.inputOptions == "object" ? $(x.inputOptions) : V("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof x.inputOptions))
            },
            de = (y, x) => {
                const I = y.getInput();
                K(I), v(x.inputValue).then($ => {
                    I.value = x.input === "number" ? parseFloat($) || 0 : "".concat($), le(I), I.focus(), y.hideLoading()
                }).catch($ => {
                    V("Error in inputValue promise: ".concat($)), I.value = "", le(I), I.focus(), y.hideLoading()
                })
            },
            ye = {
                select: (y, x, I) => {
                    const $ = ee(y, oe.select),
                        Se = (_e, an, wi) => {
                            const Bn = document.createElement("option");
                            Bn.value = wi, pt(Bn, an), Bn.selected = me(wi, I.inputValue), _e.appendChild(Bn)
                        };
                    x.forEach(_e => {
                        const an = _e[0],
                            wi = _e[1];
                        if (Array.isArray(wi)) {
                            const Bn = document.createElement("optgroup");
                            Bn.label = an, Bn.disabled = !1, $.appendChild(Bn), wi.forEach(Fo => Se(Bn, Fo[1], Fo[0]))
                        } else Se($, wi, an)
                    }), $.focus()
                },
                radio: (y, x, I) => {
                    const $ = ee(y, oe.radio);
                    x.forEach(_e => {
                        const an = _e[0],
                            wi = _e[1],
                            Bn = document.createElement("input"),
                            Fo = document.createElement("label");
                        Bn.type = "radio", Bn.name = oe.radio, Bn.value = an, me(an, I.inputValue) && (Bn.checked = !0);
                        const Hp = document.createElement("span");
                        pt(Hp, wi), Hp.className = oe.label, Fo.appendChild(Bn), Fo.appendChild(Hp), $.appendChild(Fo)
                    });
                    const Se = $.querySelectorAll("input");
                    Se.length && Se[0].focus()
                }
            },
            Be = y => {
                const x = [];
                return typeof Map < "u" && y instanceof Map ? y.forEach((I, $) => {
                    let Se = I;
                    typeof Se == "object" && (Se = Be(Se)), x.push([$, Se])
                }) : Object.keys(y).forEach(I => {
                    let $ = y[I];
                    typeof $ == "object" && ($ = Be($)), x.push([I, $])
                }), x
            },
            me = (y, x) => x && x.toString() === y.toString();

        function we() {
            const y = H.innerParams.get(this);
            if (!y) return;
            const x = H.domCache.get(this);
            K(x.loader), xe() ? y.icon && le(qe()) : et(x), Kt([x.popup, x.actions], oe.loading), x.popup.removeAttribute("aria-busy"), x.popup.removeAttribute("data-loading"), x.confirmButton.disabled = !1, x.denyButton.disabled = !1, x.cancelButton.disabled = !1
        }
        const et = y => {
            const x = y.popup.getElementsByClassName(y.loader.getAttribute("data-button-to-replace"));
            x.length ? le(x[0], "inline-block") : Ke() && K(y.actions)
        };

        function ut(y) {
            const x = H.innerParams.get(y || this),
                I = H.domCache.get(y || this);
            return I ? Dt(I.popup, x.input) : null
        }
        var Je = {
            swalPromiseResolve: new WeakMap,
            swalPromiseReject: new WeakMap
        };
        const sn = () => De(fe()),
            Zt = () => nt() && nt().click(),
            Sn = () => Tt() && Tt().click(),
            Mt = () => g() && g().click(),
            At = y => {
                y.keydownTarget && y.keydownHandlerAdded && (y.keydownTarget.removeEventListener("keydown", y.keydownHandler, {
                    capture: y.keydownListenerCapture
                }), y.keydownHandlerAdded = !1)
            },
            vn = (y, x, I, $) => {
                At(x), I.toast || (x.keydownHandler = Se => To(y, Se, $), x.keydownTarget = I.keydownListenerCapture ? window : fe(), x.keydownListenerCapture = I.keydownListenerCapture, x.keydownTarget.addEventListener("keydown", x.keydownHandler, {
                    capture: x.keydownListenerCapture
                }), x.keydownHandlerAdded = !0)
            },
            gt = (y, x, I) => {
                const $ = he();
                if ($.length) return x = x + I, x === $.length ? x = 0 : x === -1 && (x = $.length - 1), $[x].focus();
                fe().focus()
            },
            Xt = ["ArrowRight", "ArrowDown"],
            Gs = ["ArrowLeft", "ArrowUp"],
            To = (y, x, I) => {
                const $ = H.innerParams.get(y);
                !$ || x.isComposing || x.keyCode === 229 || ($.stopKeydownPropagation && x.stopPropagation(), x.key === "Enter" ? Tn(y, x, $) : x.key === "Tab" ? Gi(x, $) : [...Xt, ...Gs].includes(x.key) ? Xi(x.key) : x.key === "Escape" && wn(x, $, I))
            },
            Tn = (y, x, I) => {
                if (!!m(I.allowEnterKey) && x.target && y.getInput() && x.target instanceof HTMLElement && x.target.outerHTML === y.getInput().outerHTML) {
                    if (["textarea", "file"].includes(I.input)) return;
                    Zt(), x.preventDefault()
                }
            },
            Gi = (y, x) => {
                const I = y.target,
                    $ = he();
                let Se = -1;
                for (let _e = 0; _e < $.length; _e++)
                    if (I === $[_e]) {
                        Se = _e;
                        break
                    } y.shiftKey ? gt(x, Se, -1) : gt(x, Se, 1), y.stopPropagation(), y.preventDefault()
            },
            Xi = y => {
                const x = nt(),
                    I = Tt(),
                    $ = g();
                if (document.activeElement instanceof HTMLElement && ![x, I, $].includes(document.activeElement)) return;
                const Se = Xt.includes(y) ? "nextElementSibling" : "previousElementSibling";
                let _e = document.activeElement;
                for (let an = 0; an < R().children.length; an++) {
                    if (_e = _e[Se], !_e) return;
                    if (_e instanceof HTMLButtonElement && De(_e)) break
                }
                _e instanceof HTMLButtonElement && _e.focus()
            },
            wn = (y, x, I) => {
                m(x.allowEscapeKey) && (y.preventDefault(), I(Hi.esc))
            };

        function fi(y, x, I, $) {
            xe() ? ol(y, $) : (Is(I).then(() => ol(y, $)), At(ht)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (x.setAttribute("style", "display:none !important"), x.removeAttribute("class"), x.innerHTML = "") : x.remove(), Pe() && (er(), Ns(), Za()), In()
        }

        function In() {
            Kt([document.documentElement, document.body], [oe.shown, oe["height-auto"], oe["no-backdrop"], oe["toast-shown"]])
        }

        function Gn(y) {
            y = Ki(y);
            const x = Je.swalPromiseResolve.get(this),
                I = Yi(this);
            this.isAwaitingPromise() ? y.isDismissed || (vt(this), x(y)) : I && x(y)
        }

        function il() {
            return !!H.awaitingPromise.get(this)
        }
        const Yi = y => {
            const x = fe();
            if (!x) return !1;
            const I = H.innerParams.get(y);
            if (!I || Lt(x, I.hideClass.popup)) return !1;
            Kt(x, I.showClass.popup), rt(x, I.hideClass.popup);
            const $ = Y();
            return Kt($, I.showClass.backdrop), rt($, I.hideClass.backdrop), sl(y, x, I), !0
        };

        function sr(y) {
            const x = Je.swalPromiseReject.get(this);
            vt(this), x && x(y)
        }
        const vt = y => {
                y.isAwaitingPromise() && (H.awaitingPromise.delete(y), H.innerParams.get(y) || y._destroy())
            },
            Ki = y => typeof y > "u" ? {
                isConfirmed: !1,
                isDenied: !1,
                isDismissed: !0
            } : Object.assign({
                isConfirmed: !1,
                isDenied: !1,
                isDismissed: !1
            }, y),
            sl = (y, x, I) => {
                const $ = Y(),
                    Se = On && bt(x);
                typeof I.willClose == "function" && I.willClose(x), Se ? or(y, x, $, I.returnFocus, I.didClose) : fi(y, $, I.returnFocus, I.didClose)
            },
            or = (y, x, I, $, Se) => {
                ht.swalCloseEventFinishedCallback = fi.bind(null, y, I, $, Se), x.addEventListener(On, function(_e) {
                    _e.target === x && (ht.swalCloseEventFinishedCallback(), delete ht.swalCloseEventFinishedCallback)
                })
            },
            ol = (y, x) => {
                setTimeout(() => {
                    typeof x == "function" && x.bind(y.params)(), y._destroy()
                })
            };

        function Xs(y, x, I) {
            const $ = H.domCache.get(y);
            x.forEach(Se => {
                $[Se].disabled = I
            })
        }

        function al(y, x) {
            if (!y) return !1;
            if (y.type === "radio") {
                const $ = y.parentNode.parentNode.querySelectorAll("input");
                for (let Se = 0; Se < $.length; Se++) $[Se].disabled = x
            } else y.disabled = x
        }

        function rl() {
            Xs(this, ["confirmButton", "denyButton", "cancelButton"], !1)
        }

        function Lp() {
            Xs(this, ["confirmButton", "denyButton", "cancelButton"], !0)
        }

        function Bp() {
            return al(this.getInput(), !1)
        }

        function Mp() {
            return al(this.getInput(), !0)
        }

        function Eo(y) {
            const x = H.domCache.get(this),
                I = H.innerParams.get(this);
            pt(x.validationMessage, y), x.validationMessage.className = oe["validation-message"], I.customClass && I.customClass.validationMessage && rt(x.validationMessage, I.customClass.validationMessage), le(x.validationMessage);
            const $ = this.getInput();
            $ && ($.setAttribute("aria-invalid", !0), $.setAttribute("aria-describedby", oe["validation-message"]), Et($), rt($, oe.inputerror))
        }

        function Op() {
            const y = H.domCache.get(this);
            y.validationMessage && K(y.validationMessage);
            const x = this.getInput();
            x && (x.removeAttribute("aria-invalid"), x.removeAttribute("aria-describedby"), Kt(x, oe.inputerror))
        }

        function Ip() {
            return H.domCache.get(this).progressSteps
        }

        function Pp(y) {
            const x = fe(),
                I = H.innerParams.get(this);
            if (!x || Lt(x, I.hideClass.popup)) return r("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
            const $ = Ys(y),
                Se = Object.assign({}, I, $);
            Ja(this, Se), H.innerParams.set(this, Se), Object.defineProperties(this, {
                params: {
                    value: Object.assign({}, this.params, y),
                    writable: !1,
                    enumerable: !0
                }
            })
        }
        const Ys = y => {
            const x = {};
            return Object.keys(y).forEach(I => {
                O(I) ? x[I] = y[I] : r("Invalid parameter to update: ".concat(I))
            }), x
        };

        function Up() {
            const y = H.domCache.get(this),
                x = H.innerParams.get(this);
            if (!x) {
                oi(this);
                return
            }
            y.popup && ht.swalCloseEventFinishedCallback && (ht.swalCloseEventFinishedCallback(), delete ht.swalCloseEventFinishedCallback), typeof x.didDestroy == "function" && x.didDestroy(), ar(this)
        }
        const ar = y => {
                oi(y), delete y.params, delete ht.keydownHandler, delete ht.keydownTarget, delete ht.currentInstance
            },
            oi = y => {
                y.isAwaitingPromise() ? (Xn(H, y), H.awaitingPromise.set(y, !0)) : (Xn(Je, y), Xn(H, y))
            },
            Xn = (y, x) => {
                for (const I in y) y[I].delete(x)
            };
        var rr = Object.freeze({
            hideLoading: we,
            disableLoading: we,
            getInput: ut,
            close: Gn,
            isAwaitingPromise: il,
            rejectPromise: sr,
            handleAwaitingPromise: vt,
            closePopup: Gn,
            closeModal: Gn,
            closeToast: Gn,
            enableButtons: rl,
            disableButtons: Lp,
            enableInput: Bp,
            disableInput: Mp,
            showValidationMessage: Eo,
            resetValidationMessage: Op,
            getProgressSteps: Ip,
            update: Pp,
            _destroy: Up
        });
        const Vl = y => {
                const x = H.innerParams.get(y);
                y.disableButtons(), x.input ? Ot(y, "confirm") : Mo(y, !0)
            },
            ll = y => {
                const x = H.innerParams.get(y);
                y.disableButtons(), x.returnInputValueOnDeny ? Ot(y, "deny") : En(y, !1)
            },
            Fp = (y, x) => {
                y.disableButtons(), x(Hi.cancel)
            },
            Ot = (y, x) => {
                const I = H.innerParams.get(y);
                if (!I.input) {
                    V('The "input" parameter is needed to be set when using returnInputValueOn'.concat(o(x)));
                    return
                }
                const $ = B(y, I);
                I.inputValidator ? Lo(y, $, x) : y.getInput().checkValidity() ? x === "deny" ? En(y, $) : Mo(y, $) : (y.enableButtons(), y.showValidationMessage(I.validationMessage))
            },
            Lo = (y, x, I) => {
                const $ = H.innerParams.get(y);
                y.disableInput(), Promise.resolve().then(() => v($.inputValidator(x, $.validationMessage))).then(_e => {
                    y.enableButtons(), y.enableInput(), _e ? y.showValidationMessage(_e) : I === "deny" ? En(y, x) : Mo(y, x)
                })
            },
            En = (y, x) => {
                const I = H.innerParams.get(y || void 0);
                I.showLoaderOnDeny && p(Tt()), I.preDeny ? (H.awaitingPromise.set(y || void 0, !0), Promise.resolve().then(() => v(I.preDeny(x, I.validationMessage))).then(Se => {
                    Se === !1 ? (y.hideLoading(), vt(y)) : y.close({
                        isDenied: !0,
                        value: typeof Se > "u" ? x : Se
                    })
                }).catch(Se => Bo(y || void 0, Se))) : y.close({
                    isDenied: !0,
                    value: x
                })
            },
            Pn = (y, x) => {
                y.close({
                    isConfirmed: !0,
                    value: x
                })
            },
            Bo = (y, x) => {
                y.rejectPromise(x)
            },
            Mo = (y, x) => {
                const I = H.innerParams.get(y || void 0);
                I.showLoaderOnConfirm && p(), I.preConfirm ? (y.resetValidationMessage(), H.awaitingPromise.set(y || void 0, !0), Promise.resolve().then(() => v(I.preConfirm(x, I.validationMessage))).then(Se => {
                    De(Xe()) || Se === !1 ? (y.hideLoading(), vt(y)) : Pn(y, typeof Se > "u" ? x : Se)
                }).catch(Se => Bo(y || void 0, Se))) : Pn(y, x)
            },
            jp = (y, x, I) => {
                H.innerParams.get(y).toast ? Qp(y, x, I) : (Vr(x), cl(x), Oo(y, x, I))
            },
            Qp = (y, x, I) => {
                x.popup.onclick = () => {
                    const $ = H.innerParams.get(y);
                    $ && (Al($) || $.timer || $.input) || I(Hi.close)
                }
            },
            Al = y => y.showConfirmButton || y.showDenyButton || y.showCancelButton || y.showCloseButton;
        let ai = !1;
        const Vr = y => {
                y.popup.onmousedown = () => {
                    y.container.onmouseup = function(x) {
                        y.container.onmouseup = void 0, x.target === y.container && (ai = !0)
                    }
                }
            },
            cl = y => {
                y.container.onmousedown = () => {
                    y.popup.onmouseup = function(x) {
                        y.popup.onmouseup = void 0, (x.target === y.popup || y.popup.contains(x.target)) && (ai = !0)
                    }
                }
            },
            Oo = (y, x, I) => {
                x.container.onclick = $ => {
                    const Se = H.innerParams.get(y);
                    if (ai) {
                        ai = !1;
                        return
                    }
                    $.target === x.container && m(Se.allowOutsideClick) && I(Hi.backdrop)
                }
            },
            Io = y => typeof y == "object" && y.jquery,
            Po = y => y instanceof Element || Io(y),
            zp = y => {
                const x = {};
                return typeof y[0] == "object" && !Po(y[0]) ? Object.assign(x, y[0]) : ["title", "html", "icon"].forEach((I, $) => {
                    const Se = y[$];
                    typeof Se == "string" || Po(Se) ? x[I] = Se : Se !== void 0 && V("Unexpected type of ".concat(I, '! Expected "string" or "Element", got ').concat(typeof Se))
                }), x
            };

        function Uo() {
            const y = this;
            for (var x = arguments.length, I = new Array(x), $ = 0; $ < x; $++) I[$] = arguments[$];
            return new y(...I)
        }

        function lr(y) {
            class x extends this {
                _main($, Se) {
                    return super._main($, Object.assign({}, y, Se))
                }
            }
            return x
        }
        const Ar = () => ht.timeout && ht.timeout.getTimerLeft(),
            dl = () => {
                if (ht.timeout) return ot(), ht.timeout.stop()
            },
            G = () => {
                if (ht.timeout) {
                    const y = ht.timeout.start();
                    return tn(y), y
                }
            },
            ne = () => {
                const y = ht.timeout;
                return y && (y.running ? dl() : G())
            },
            Ae = y => {
                if (ht.timeout) {
                    const x = ht.timeout.increase(y);
                    return tn(x, !0), x
                }
            },
            Ce = () => ht.timeout && ht.timeout.isRunning();
        let pe = !1;
        const Ee = {};

        function Oe() {
            let y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "data-swal-template";
            Ee[y] = this, pe || (document.body.addEventListener("click", Ue), pe = !0)
        }
        const Ue = y => {
            for (let x = y.target; x && x !== document; x = x.parentNode)
                for (const I in Ee) {
                    const $ = x.getAttribute(I);
                    if ($) {
                        Ee[I].fire({
                            template: $
                        });
                        return
                    }
                }
        };
        var Ne = Object.freeze({
            isValidParameter: M,
            isUpdatableParameter: O,
            isDeprecatedParameter: Q,
            argsToParams: zp,
            isVisible: sn,
            clickConfirm: Zt,
            clickDeny: Sn,
            clickCancel: Mt,
            getContainer: Y,
            getPopup: fe,
            getTitle: ge,
            getHtmlContainer: Te,
            getImage: Le,
            getIcon: qe,
            getInputLabel: Pt,
            getCloseButton: W,
            getActions: R,
            getConfirmButton: nt,
            getDenyButton: Tt,
            getCancelButton: g,
            getLoader: U,
            getFooter: j,
            getTimerProgressBar: N,
            getFocusableElements: he,
            getValidationMessage: Xe,
            isLoading: Qe,
            fire: Uo,
            mixin: lr,
            showLoading: p,
            enableLoading: p,
            getTimerLeft: Ar,
            stopTimer: dl,
            resumeTimer: G,
            toggleTimer: ne,
            increaseTimer: Ae,
            isTimerRunning: Ce,
            bindClickHandler: Oe
        });
        let Ze;
        class $e {
            constructor() {
                if (typeof window > "u") return;
                Ze = this;
                for (var x = arguments.length, I = new Array(x), $ = 0; $ < x; $++) I[$] = arguments[$];
                const Se = Object.freeze(this.constructor.argsToParams(I));
                Object.defineProperties(this, {
                    params: {
                        value: Se,
                        writable: !1,
                        enumerable: !0,
                        configurable: !0
                    }
                });
                const _e = Ze._main(Ze.params);
                H.promise.set(this, _e)
            }
            _main(x) {
                let I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                te(Object.assign({}, I, x)), ht.currentInstance && (ht.currentInstance._destroy(), Pe() && Za()), ht.currentInstance = Ze;
                const $ = qt(x, I);
                _V($), Object.freeze($), ht.timeout && (ht.timeout.stop(), delete ht.timeout), clearTimeout(ht.restoreFocusTimeout);
                const Se = Ut(Ze);
                return Ja(Ze, $), H.innerParams.set(Ze, $), st(Ze, Se, $)
            }
            then(x) {
                return H.promise.get(this).then(x)
            } finally(x) {
                return H.promise.get(this).finally(x)
            }
        }
        const st = (y, x, I) => new Promise(($, Se) => {
                const _e = an => {
                    y.closePopup({
                        isDismissed: !0,
                        dismiss: an
                    })
                };
                Je.swalPromiseResolve.set(y, $), Je.swalPromiseReject.set(y, Se), x.confirmButton.onclick = () => Vl(y), x.denyButton.onclick = () => ll(y), x.cancelButton.onclick = () => Fp(y, _e), x.closeButton.onclick = () => _e(Hi.close), jp(y, x, _e), vn(y, ht, I, _e), k(y, I), ir(I), it(ht, I, _e), on(x, I), setTimeout(() => {
                    x.container.scrollTop = 0
                })
            }),
            qt = (y, x) => {
                const I = gp(y),
                    $ = Object.assign({}, C, x, I, y);
                return $.showClass = Object.assign({}, C.showClass, $.showClass), $.hideClass = Object.assign({}, C.hideClass, $.hideClass), $
            },
            Ut = y => {
                const x = {
                    popup: fe(),
                    container: Y(),
                    actions: R(),
                    confirmButton: nt(),
                    denyButton: Tt(),
                    cancelButton: g(),
                    loader: U(),
                    closeButton: W(),
                    validationMessage: Xe(),
                    progressSteps: Ge()
                };
                return H.domCache.set(y, x), x
            },
            it = (y, x, I) => {
                const $ = N();
                K($), x.timer && (y.timeout = new $a(() => {
                    I("timer"), delete y.timeout
                }, x.timer), x.timerProgressBar && (le($), mt($, x, "timerProgressBar"), setTimeout(() => {
                    y.timeout && y.timeout.running && tn(x.timer)
                })))
            },
            on = (y, x) => {
                if (!x.toast) {
                    if (!m(x.allowEnterKey)) return Ln();
                    dn(y, x) || gt(x, -1, 1)
                }
            },
            dn = (y, x) => x.focusDeny && De(y.denyButton) ? (y.denyButton.focus(), !0) : x.focusCancel && De(y.cancelButton) ? (y.cancelButton.focus(), !0) : x.focusConfirm && De(y.confirmButton) ? (y.confirmButton.focus(), !0) : !1,
            Ln = () => {
                document.activeElement instanceof HTMLElement && typeof document.activeElement.blur == "function" && document.activeElement.blur()
            };
        if (typeof window < "u" && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|xn--p1ai)$/) && Math.random() < .1) {
            const y = document.createElement("div");
            y.className = "leave-russia-now-and-apply-your-skills-to-the-world";
            const x = S([{
                text: `\u0412 \u043D\u0438\u0436\u0435\u043F\u0440\u0438\u0432\u0435\u0434\u0451\u043D\u043D\u043E\u043C \u0432\u0438\u0434\u0435\u043E \u043E\u0431\u044A\u044F\u0441\u043D\u044F\u0435\u0442\u0441\u044F \u043A\u0430\u043A \u043A\u0430\u0436\u0434\u044B\u0439 \u0438\u0437 \u043D\u0430\u0441 \u043C\u043E\u0436\u0435\u0442 \u043F\u043E\u043C\u043E\u0447\u044C \u0432 \u0442\u043E\u043C,
        <strong>\u0447\u0442\u043E\u0431\u044B \u044D\u0442\u0430 \u0431\u0435\u0441\u0441\u043C\u044B\u0441\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0431\u0435\u0441\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u043D\u0430\u044F \u0432\u043E\u0439\u043D\u0430 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430\u0441\u044C</strong>:`,
                id: "4CfDhaRkw7I"
            }, {
                text: "\u042D\u043C\u043F\u0430\u0442\u0438\u044F - \u0433\u043B\u0430\u0432\u043D\u043E\u0435 <strong>\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u0435\u0441\u043A\u043E\u0435</strong> \u0447\u0443\u0432\u0441\u0442\u0432\u043E. \u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u0441\u043E\u043F\u0435\u0440\u0435\u0436\u0438\u0432\u0430\u0442\u044C. <strong>\u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0441\u0435\u0431\u044F \u043D\u0430 \u043C\u0435\u0441\u0442\u043E \u0434\u0440\u0443\u0433\u043E\u0433\u043E.</strong>",
                id: "s-GLAIY4DXA"
            }]);
            pt(y, `
      <div>
        \u0415\u0441\u043B\u0438 \u043C\u044B \u043D\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043C \u0432\u043E\u0439\u043D\u0443, \u043E\u043D\u0430 \u043F\u0440\u0438\u0434\u0435\u0442 \u0432 \u0434\u043E\u043C <strong>\u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0438\u0437 \u043D\u0430\u0441</strong> \u0438 \u0435\u0451 \u043F\u043E\u0441\u043B\u0435\u0434\u0441\u0442\u0432\u0438\u044F \u0431\u0443\u0434\u0443\u0442 <strong>\u0443\u0436\u0430\u0441\u0430\u044E\u0449\u0438\u043C\u0438</strong>.
      </div>
      <div>
        \u041F\u0443\u0442\u0438\u043D\u0441\u043A\u0438\u0439 \u0440\u0435\u0436\u0438\u043C \u0437\u0430 20 \u0441 \u043B\u0438\u0448\u043D\u0438\u043C \u043B\u0435\u0442 \u0441\u0432\u043E\u0435\u0433\u043E \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043E\u0432\u0430\u043D\u0438\u044F \u0432\u0434\u043E\u043B\u0431\u0438\u043B \u043D\u0430\u043C, \u0447\u0442\u043E \u043C\u044B \u0431\u0435\u0441\u0441\u0438\u043B\u044C\u043D\u044B \u0438 \u043E\u0434\u0438\u043D \u0447\u0435\u043B\u043E\u0432\u0435\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u043D\u0438\u0447\u0435\u0433\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C. <strong>\u042D\u0442\u043E \u043D\u0435 \u0442\u0430\u043A!</strong>
      </div>
      <div>
        `.concat(x.text, `
      </div>
      <iframe width="560" height="315" src="https://www.youtube.com/embed/`).concat(x.id, `" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
      <div>
        \u041D\u0435\u0442 \u0432\u043E\u0439\u043D\u0435!
      </div>
      `));
            const I = document.createElement("button");
            I.innerHTML = "&times;", I.onclick = () => y.remove(), y.appendChild(I), window.addEventListener("load", () => {
                setTimeout(() => {
                    document.body.appendChild(y)
                }, 1e3)
            })
        }
        Object.assign($e.prototype, rr), Object.assign($e, Ne), Object.keys(rr).forEach(y => {
            $e[y] = function() {
                if (Ze) return Ze[y](...arguments)
            }
        }), $e.DismissReason = Hi, $e.version = "11.4.26";
        const Ft = $e;
        return Ft.default = Ft, Ft
    }), typeof Ct < "u" && Ct.Sweetalert2 && (Ct.swal = Ct.sweetAlert = Ct.Swal = Ct.SweetAlert = Ct.Sweetalert2), typeof document < "u" && function(n, i) {
        var o = n.createElement("style");
        if (n.getElementsByTagName("head")[0].appendChild(o), o.styleSheet) o.styleSheet.disabled || (o.styleSheet.cssText = i);
        else try {
            o.innerHTML = i
        } catch {
            o.innerText = i
        }
    }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.leave-russia-now-and-apply-your-skills-to-the-world{display:flex;position:fixed;z-index:1939;top:0;right:0;bottom:0;left:0;flex-direction:column;align-items:center;justify-content:center;padding:25px 0 20px;background:#20232a;color:#fff;text-align:center}.leave-russia-now-and-apply-your-skills-to-the-world div{max-width:560px;margin:10px;line-height:146%}.leave-russia-now-and-apply-your-skills-to-the-world iframe{max-width:100%;max-height:55.5555555556vmin;margin:16px auto}.leave-russia-now-and-apply-your-skills-to-the-world strong{border-bottom:2px dashed #fff}.leave-russia-now-and-apply-your-skills-to-the-world button{display:flex;position:fixed;z-index:1940;top:0;right:0;align-items:center;justify-content:center;width:48px;height:48px;margin-right:10px;margin-bottom:-10px;border:none;background:0 0;color:#aaa;font-size:48px;font-weight:700;cursor:pointer}.leave-russia-now-and-apply-your-skills-to-the-world button:hover{color:#fff}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}')
})(P1);
const Ai = P1.exports;
class Qt {
    static get DismissReason() {
        return Ai.DismissReason
    }
    static show(e, n = {}) {
        switch (Ai.isVisible() && Ai.close(), e instanceof Error && (n.text = e.message, e = "error"), e) {
            case "alert":
                return this.showAlert(n);
            case "custom":
                return this.showCustom(n);
            case "error":
                return this.showError(n);
            case "toast":
                return this.showToast(n);
            default:
                console.warn("Unknown alert type", e)
        }
        return !1
    }
    static close() {
        Ai.close()
    }
    static vibrate(e = [100, 100]) {
        !window.navigator || !window.navigator.vibrate || window.navigator.vibrate(e)
    }
    static async showAlert(e) {
        const n = e.customClass || {};
        return e.customClass = {
            ...n,
            popup: "jbgModal"
        }, e.titleText = e.titleText || "Error", Ai.fire(e)
    }
    static async showError(e) {
        const n = new URL("main/pp7/everyday/assets/8cdd50e7.png", self.location).href,
            i = e.customClass || {};
        return e.customClass = {
            ...i,
            popup: "jbgModal"
        }, e.titleText = e.titleText || "Error", n && (e.imageUrl = n), Ai.fire(e)
    }
    static async showCustom(e) {
        return Ai.fire(e)
    }
    static async showToast(e) {
        return e.toast = !0, e.showConfirmButton = !1, e.timer = e.timer || 2500, e.position = e.position || "bottom", Ai.fire(e)
    }
}
const $9 = `<div class="canvasContainer">\r
    <video id="cameraVideo" class="cameraVideo" autoplay playsinline class=""></video>\r
    <canvas id='cameraCanvas' class="cameraCanvas resizableCanvas" width="300px" height="408px" class=""></canvas>\r
    <img id="cameraImage" class="cameraImage visuallyhidden" />\r
</div>\r
<div class="cameraControls">\r
    <button id="exitButton" class="button exitButton"></button>\r
    <div class="buttons pre">\r
        <button id="switchButton" class="button switchButton"></button>\r
        <button id="snapshotButton" class="button snapshotButton"></button>\r
    </div>\r
    <div class="buttons post">\r
        <button id="cancelButton" class="button cancelButton"></button>\r
        <button id="confirmButton" class="button confirmButton"></button>\r
    </div>\r
</div>\r
<div style="display:none;">\r
    <img id="Mask" src='../../general/images/oval.png' />\r
</div>`,
    eC = {
        type: "camera",
        width: 300,
        height: 408,
        offsetX: 0,
        offsetY: 0,
        transmitting: !1,
        previewImage: null,
        mirror: !0,
        mask: !0,
        update(t) {
            if (this.video || (this.video = document.getElementById("cameraVideo")), this.image || (this.image = document.getElementById("Mask")), !this.video || !this.image) return;
            const e = this.video.videoWidth,
                n = this.video.videoHeight,
                i = so().width,
                o = so().height,
                r = Math.max(i / e, o / n);
            this.width = i, this.height = o, this.finalWidth = e * r, this.finalHeight = n * r, this.offsetX = .5 * (i - this.finalWidth), this.offsetY = .5 * (o - this.finalHeight), this.dy = this.transmitting ? Math.min(-100, this.dy) : 0, this.ddy = this.transmitting ? -1200 : 0, this.transmitting || (this.y = 0), this.advance(t)
        },
        render() {
            if (!this.video) return;
            const t = cA();
            t.save(), t.translate(this.x, this.y), this.preview ? t.drawImage(this.preview, 0, 0) : this.mirror ? (t.scale(-1, 1), t.drawImage(this.video, this.offsetX - so().width, this.offsetY, this.finalWidth, this.finalHeight)) : t.drawImage(this.video, this.offsetX, this.offsetY, this.finalWidth, this.finalHeight), t.restore(), !this.preview && this.mask && this.image && (t.scale(1, 1), t.drawImage(this.image, this.x, this.y, so().width, so().height))
        }
    },
    tC = je.View.extend({
        template: ke.template($9),
        className: "CameraUser",
        model: new ze.Model({
            image: null,
            width: 300,
            height: 408,
            transmitting: !1,
            access: !1,
            showSwitchButton: !1
        }),
        sprites: [],
        bindings: {
            ".pre": {
                classes: {
                    visible: {
                        observe: "image",
                        onGet(t) {
                            return !t
                        }
                    }
                }
            },
            ".post": {
                classes: {
                    visible: {
                        observe: "image",
                        onGet(t) {
                            return t
                        }
                    }
                }
            }
        },
        events: {
            "click #switchButton": "switchClicked",
            "click #snapshotButton": "snapshotClicked",
            "click #confirmButton": "confirmClicked",
            "click #cancelButton": "cancelClicked",
            "click #exitButton": "exitClicked"
        },
        initialize() {
            this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), this.update()
        },
        update() {
            !this.cameraSprite || (this.model.get("image") ? (this.previewImage = this.previewImage || new Image, this.previewImage.onload = () => {
                this.cameraSprite.preview = this.previewImage
            }, this.previewImage.src = this.model.get("image")) : this.cameraSprite.preview = null, this.cameraSprite.transmitting = this.model.get("transmitting"), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), this.$("#cameraCanvas").width(`${this.model.get("width")}px`), this.$("#cameraCanvas").height(`${this.model.get("height")}px`), this.onResize())
        },
        onRender() {
            this.stickit()
        },
        onAttach() {
            const t = this;
            X9("cameraCanvas"), t.sprites = [], t.gameLoop = W9({
                fps: 60,
                update(e) {
                    t.sprites.forEach(n => n.update(e)), t.sprites = t.sprites.filter(n => n.isAlive())
                },
                render(e) {
                    t.sprites.forEach(n => n.render(e))
                }
            });
            for (let e = 0; e < t.sprites.length; e++) t.sprites[e].ttl = 0;
            this.cameraSprite = Qu(eC), this.cameraSprite.width = this.model.get("width"), this.cameraSprite.height = this.model.get("height"), this.cameraSprite.mask = this.model.get("mask"), t.sprites.push(this.cameraSprite), t.gameLoop.start(), this.facingMode = "user", this.startCamera(), this.onResize()
        },
        async startCamera() {
            this.canvas = document.getElementById("cameraCanvas"), this.image = document.getElementById("cameraImage"), this.video = document.getElementById("cameraVideo");
            const t = this.altOption || "drawing";
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                const n = {
                    video: {
                        facingMode: this.facingMode,
                        width: 1280
                    },
                    audio: !1
                };
                try {
                    const i = await navigator.mediaDevices.getUserMedia(n),
                        o = await navigator.mediaDevices.enumerateDevices();
                    this.currentStream = i, this.video.srcObject = i, await this.video.play(), this.gotDevices(o)
                } catch (i) {
                    console.error(i), Qt.show("alert", {
                        titleText: "Unable to Access Camera",
                        text: `Looks like we don't have access to your device's camera. You can refresh and try again, or choose the ${t} option instead.`,
                        willClose: () => {
                            this.cameraAccessDenied()
                        }
                    })
                }
            } else Qt.show("alert", {
                titleText: "No Camera Access",
                text: `It looks like camera access isn't available from this browser. Try the ${t} option instead.`,
                willClose: () => {
                    this.cameraAccessDenied()
                }
            })
        },
        gotDevices(t) {
            let e = 0;
            t.forEach(n => {
                n.kind === "videoinput" && (e += 1)
            }), this.model.set("showSwitchButton", e > 1)
        },
        stopMediaTracks() {
            this.currentStream.getTracks().forEach(e => {
                e.stop()
            }), this.video.srcObject = null, this.model.unset("image")
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext);
            const t = this;
            for (let n = 0; n < t.sprites.length; n++) t.sprites[n].ttl = 0;
            t.gameLoop.update(1 / 60), t.gameLoop.stop(), this.currentStream && this.stopMediaTracks();
            const e = document.getElementsByClassName("pt-page");
            !e.length || (e[0].style.display = "table", e[0].style.display = "block")
        },
        switchClicked() {
            this.currentStream && this.stopMediaTracks(), this.facingMode = this.facingMode === "user" ? "environment" : "user", this.cameraSprite.mirror = this.facingMode === "user", this.startCamera()
        },
        snapshotClicked() {
            const t = this.canvas.toDataURL();
            this.model.set("image", t), this.model.set("transmitting", !1)
        },
        confirmClicked() {
            const t = this.model.get("sizesToSend") || [{
                    width: this.model.get("width"),
                    height: this.model.get("height")
                }],
                e = [];
            t.forEach(n => {
                if (!n.width || !n.height) return;
                const i = document.createElement("canvas");
                i.width = n.width, i.height = n.height;
                const o = i.getContext("2d");
                this.previewImage && o.drawImage(this.previewImage, 0, 0, i.width, i.height), this.model.set("transmitting", !0);
                const r = i.toDataURL().split(",")[1];
                e.push({
                    size: n,
                    picture: r
                })
            }), this.triggerMethod("camera:snapshot", e)
        },
        cancelClicked() {
            this.model.unset("image")
        },
        exitClicked() {
            this.triggerMethod("camera:exit")
        },
        cameraAccessDenied() {
            this.model.set("failed", !0), this.triggerMethod("camera:exit")
        },
        onResize() {
            const t = this.model.get("width"),
                e = this.model.get("height");
            if (!t || !e) return;
            const n = document.getElementById("cameraCanvas"),
                i = Ye(".canvasContainer");
            if (!n || !i) return;
            const o = i.width(),
                r = Math.max(Ye(window).innerHeight(), 250),
                V = Math.min(o / t, r / e),
                A = t * V,
                c = e * V;
            n.style.width = `${A}px`, n.style.height = `${c}px`, n.width = A, n.height = c
        }
    }),
    Ht = ze.Model.extend({
        defaults: {},
        set(t, e) {
            const n = ke.extend({}, this.attributes, this.defaults, t);
            return ze.Model.prototype.set.apply(this, [n, e]), this
        },
        setUpdate(t, e) {
            const n = ke.extend({}, this.defaults, this.attributes, t);
            return ze.Model.prototype.set.apply(this, [n, e]), this
        }
    }),
    nC = Ht.extend({
        defaults: {
            size: {
                width: 300,
                height: 408
            },
            sizesToSend: null,
            mask: !0,
            strings: {
                exitButton: "X",
                switchButton: `
                <svg width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-switch"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                <path
                    d="M 7.96875 2.578125 C 7.144531 2.578125 6.371094 2.8125 5.652344 3.289062
                        C 4.933594 3.753906 4.367188 4.394531 3.945312 5.210938
                        C 3.527344 6.03125 3.316406 6.921875 3.316406 7.878906 L 3.316406 8.058594 L 3.324219 8.242188
                        L 1.917969 8.347656 L 1.90625 7.878906 C 1.882812 7.273438 1.945312 6.683594 2.085938 6.113281
                        C 2.226562 5.542969 2.433594 4.992188 2.703125 4.457031
                        C 3.242188 3.378906 3.972656 2.527344 4.898438 1.898438
                        C 5.832031 1.273438 6.851562 0.960938 7.957031 0.960938
                        C 8.984375 0.960938 9.949219 1.242188 10.851562 1.808594 L 12.203125 0.15625 L 12.558594 4.71875
                        L 8.328125 4.882812 L 9.847656 3.023438 C 9.546875 2.875 9.238281 2.761719 8.925781 2.6875
                        C 8.617188 2.613281 8.296875 2.578125 7.96875 2.578125 Z M 12.632812 7.558594
                        L 14.03125 7.453125 L 14.039062 7.6875 L 14.039062 7.921875
                        C 14.039062 9.160156 13.761719 10.316406 13.210938 11.394531
                        C 12.664062 12.476562 11.929688 13.320312 11.007812 13.929688
                        C 10.089844 14.53125 9.082031 14.832031 7.980469 14.832031
                        C 6.992188 14.832031 6.035156 14.554688 5.105469 13.992188 L 3.746094 15.644531
                        L 3.394531 11.074219 L 7.621094 10.917969 L 6.101562 12.777344
                        C 6.402344 12.925781 6.710938 13.039062 7.027344 13.113281
                        C 7.339844 13.1875 7.65625 13.222656 7.980469 13.222656
                        C 8.835938 13.222656 9.613281 12.988281 10.316406 12.511719
                        C 11.039062 12.035156 11.601562 11.378906 12.007812 10.554688
                        C 12.433594 9.726562 12.644531 8.839844 12.644531 7.898438 L 12.644531 7.738281
                        Z M 12.632812 7.558594 "
                />
            </svg>`,
                snapshotButton: `
                <svg
                    width="1.5em"
                    height="1.5em"
                    viewBox="0 0 16 16"
                    class="bi bi-camera"
                    fill="currentColor"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        fill-rule="evenodd"
                        d="M15 12V6a1 1 0 0 0-1-1h-1.172a3 3 0 0 1-2.12-.879l-.83-.828A1 1 0 0 0 9.173 3
                            H6.828a1 1 0 0 0-.707.293l-.828.828A3 3 0 0 1 3.172 5H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h12
                            a1 1 0 0 0 1-1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172
                            a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828
                            A2 2 0 0 1 3.172 4H2z"
                    />
                    <path
                        fill-rule="evenodd"
                        d="M8 11a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"
                    />
                    <path d="M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z" />
                </svg>
            `,
                cancelButton: "Cancel",
                confirmButton: "Confirm"
            }
        }
    }),
    iC = je.View.extend({
        template: ke.template('<div id="cameraRegion" class="cameraRegion"></div>'),
        className: "Camera",
        model: new nC,
        regions: {
            camera: "#cameraRegion"
        },
        bindings: {
            "#exitButton": {
                observe: "strings",
                onGet: t => t.exitButton
            },
            "#switchButton": {
                observe: "strings",
                updateMethod: "html",
                onGet: t => t.switchButton
            },
            "#snapshotButton": {
                observe: "strings",
                updateMethod: "html",
                onGet: t => t.snapshotButton
            },
            "#cancelButton": {
                observe: "strings",
                onGet: t => t.cancelButton
            },
            "#confirmButton": {
                observe: "strings",
                onGet: t => t.confirmButton
            }
        },
        initialize(t) {
            this.cameraView = this.cameraView || new tC(t), this.listenTo(this.model, "change", this.update, this), this.update()
        },
        update() {
            this.cameraView.model.set("width", this.model.get("size").width), this.cameraView.model.set("height", this.model.get("size").height), this.cameraView.model.set("mask", this.model.get("mask")), this.cameraView.model.set("sizesToSend", this.model.get("sizesToSend"))
        },
        onBeforeDestroy() {
            this.getRegion("camera").empty()
        },
        onRender() {
            this.showChildView("camera", this.cameraView)
        },
        onChildviewCameraSnapshot(t) {
            t.length === 1 ? this.triggerMethod("client:message", {
                action: "camera",
                ...t[0]
            }) : this.triggerMethod("client:message", {
                action: "camera",
                pictures: t
            })
        },
        onAttach() {
            this.stickit()
        },
        onChildviewCameraExit() {
            this.triggerMethod("client:message", {
                action: "cancel"
            })
        }
    }),
    sC = '<a class="change-color button-color btn"></a>',
    oC = je.View.extend({
        tagName: "div",
        className: "colorSwatch",
        template: ke.template(sC),
        events: {
            click: "onClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    observe: ["className", "selected"],
                    name: "class",
                    onGet(t) {
                        let e = "";
                        return t[0] && (e += t[0]), t[1] && (e += " selected"), e
                    }
                }, {
                    name: "data-thickness",
                    observe: "thickness"
                }, {
                    name: "data-color",
                    observe: "hex"
                }]
            },
            "a.button-color": {
                attributes: [{
                    name: "data-color",
                    observe: "hex"
                }, {
                    name: "style",
                    observe: "hex",
                    onGet(t) {
                        return this.getOption("transparent") ? "" : `background-color: ${t};`
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onClick() {
            this.triggerMethod("palette:select", this.model)
        }
    }),
    aC = je.CollectionView.extend({
        tagName: "div",
        id: "color-buttons",
        className: "colorPalette",
        childView: oC,
        collection: new ze.Collection([]),
        initialize() {
            this.listenTo(this.collection, "sync", this.render)
        },
        childViewOptions() {
            return {
                transparent: this.getOption("transparent")
            }
        }
    }),
    rC = `<ul class="nav nav-colors">\r
    <li class="pull-left button-pad">\r
        <button id="undoButton" class="undo button">\r
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 64 64"><image x="12" y="20" width="41" height="39" xlink:href="main/pp7/everyday/assets/5f12600b.png"/></svg>\r
        </button>\r
    </li>\r
    <li class="pull-left button-pad"> \r
        <button id="thicknessButton" class="thickness button">  \r
            <div class="thickness-circle"></div>  \r
        </button>  \r
    </li> \r
    <li class="pull-right button-pad">\r
        <button id="showPaletteButton" class="showPalette button">\r
        </button>\r
    </li>\r
    <li class="pull-right button-pad">\r
        <button aria-label="choose color" id="currentColorButton" class="button currentColorButton">\r
            <div id="currentColor" class="currentColor"></div>\r
        </button>\r
    </li>\r
    <li id="color-palette" class="hide">\r
    </li>\r
</ul>\r
<div id="colorPaletteRegion" class="colorPaletteRegion">\r
`,
    VC = je.View.extend({
        tagName: "div",
        className: "picker",
        template: ke.template(rC),
        model: new ze.Model({}),
        regions: {
            colorPalette: "#colorPaletteRegion"
        },
        events: {
            "click #currentColorButton": "onPaletteClick",
            "click #showPaletteButton": "onPaletteClick"
        },
        triggers: {
            "click #thicknessButton": "choose:thickness",
            "click #undoButton": "choose:undo"
        },
        bindings: {
            "#currentColor": {
                attributes: [{
                    name: "style",
                    observe: "currentColor",
                    onGet(t) {
                        return `background-color: ${t}`
                    }
                }]
            },
            ".colorPaletteRegion": {
                classes: {
                    visible: {
                        observe: "visiblePalette"
                    }
                }
            },
            ".thickness-circle": {
                attributes: [{
                    name: "style",
                    observe: "thickness",
                    onGet(t) {
                        return `width: ${t*3}px; height: ${t*3}px;`
                    }
                }]
            }
        },
        initialize() {
            this.colorPaletteComponent = this.colorPaletteComponent || new aC({
                collection: new ze.Collection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        onRender() {
            this.showChildView("colorPalette", this.colorPaletteComponent)
        },
        onAttach() {
            this.stickit()
        },
        update() {
            const t = this.model.get("colors").map(e => typeof e == "object" ? e : {
                hex: e
            });
            this.colorPaletteComponent.collection.set(t)
        },
        onLine() {
            this.showPalette(!1)
        },
        onPaletteClick() {
            this.showPalette(!0)
        },
        showPalette(t = !0) {
            this.model.set("visiblePalette", t)
        },
        onChildviewChildviewPaletteSelect(t) {
            this.triggerMethod("choose:color", t), this.showPalette(!1)
        }
    });
class U1 {
    constructor(e, n, i) {
        at(this, "options");
        at(this, "canvas");
        at(this, "canvasCTX");
        at(this, "tipCanvas");
        at(this, "tipCanvasCTX");
        at(this, "lines", []);
        at(this, "image");
        at(this, "startX", null);
        at(this, "startY", null);
        at(this, "smoothedMouseX", null);
        at(this, "smoothedMouseY", null);
        at(this, "lastMouse", {});
        at(this, "lastMouseChangeVector", {});
        at(this, "lastSmoothedMouse", {});
        at(this, "lastThickness");
        at(this, "lastRotation");
        at(this, "colorLevel");
        this.options = i, this.canvas = document.createElement("canvas"), this.canvas.width = e, this.canvas.height = n, this.canvasCTX = this.canvas.getContext("2d"), this.tipCanvas = document.createElement("canvas"), this.tipCanvas.width = e, this.tipCanvas.height = n, this.tipCanvasCTX = this.tipCanvas.getContext("2d")
    }
    addLine(e, n, i, o) {
        this.lines.push({
            thickness: e,
            color: n,
            highlighter: i,
            points: []
        }), this.addPoint(o), this.update()
    }
    updateSize(e, n) {
        this.canvas.width = e, this.canvas.height = n
    }
    addPoint(e) {
        const n = {
                x: parseInt(e.x, 10),
                y: parseInt(e.y, 10)
            },
            i = this.lines[this.lines.length - 1];
        if (!(!i || !i.points)) {
            if (i.points.length !== 0) {
                const o = i.points[i.points.length - 1];
                if (o.x === n.x && o.y === n.y) return
            }
            i.points.push(n), i.points.length === 2 && i.points.unshift(i.points[1]), this.update()
        }
    }
    setLines(e) {
        const n = e.map(i => {
            let o = i.points;
            return typeof o == "string" ? o = i.points.split("|").map(r => ({
                x: parseInt(r.split(",")[0], 10),
                y: parseInt(r.split(",")[1], 10)
            })) : o = o.map(r => ({
                x: parseInt(r.x, 10),
                y: parseInt(r.y, 10)
            })), {
                color: i.color,
                thickness: i.thickness,
                points: o
            }
        });
        this.lines = n, this.update()
    }
    setImage(e) {
        this.image = e, this.update()
    }
    reset() {
        this.lines = [], this.image = null, this.update()
    }
    getLastLine() {
        const e = this.lines[this.lines.length - 1];
        return e ? {
            thickness: e.thickness,
            color: e.color,
            points: e.points.map(n => `${n.x},${n.y}`).join("|")
        } : null
    }
    getLines() {
        return this.lines.map(e => ({
            thickness: e.thickness,
            color: e.color,
            points: e.points.map(n => `${n.x},${n.y}`).join("|")
        }))
    }
    update() {
        this.canvasCTX && this.canvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.tipCanvasCTX && this.tipCanvasCTX.clearRect(0, 0, this.canvas.width, this.canvas.height), this.image && this.canvasCTX.drawImage(this.image, 0, 0), this.lines && this.lines.forEach(e => this.drawLine(e))
    }
    startLineInContext(e, n, i) {
        const o = e * this.options.minThickness;
        this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, o * this.options.dotMultiplier, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.options.cappedEnds && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.lastMouseChangeVector = {
            x: 0,
            y: 0
        }, this.startX = n, this.lastMouse.x = n, this.smoothedMouseX = n, this.lastSmoothedMouse.x = n, this.startY = i, this.lastMouse.y = i, this.smoothedMouseY = i, this.lastSmoothedMouse.y = i, this.lastThickness = o, this.lastRotation = void 0, this.colorLevel = 0
    }
    continueLineInContext(e, n, i) {
        const o = n - this.lastMouse.x,
            r = i - this.lastMouse.y;
        o * this.lastMouseChangeVector.x + r * this.lastMouseChangeVector.y < 0 && (this.tipCanvasCTX && this.canvasCTX.drawImage(this.tipCanvasCTX.canvas, 0, 0), this.smoothedMouseX = this.lastMouse.x, this.lastSmoothedMouse.x = this.lastMouse.x, this.smoothedMouseY = this.lastMouse.y, this.lastSmoothedMouse.y = this.lastMouse.y, this.lastRotation += Math.PI, this.lastThickness *= this.options.tipTaperFactor), this.smoothedMouseX += this.options.smoothingFactor * (n - this.smoothedMouseX), this.smoothedMouseY += this.options.smoothingFactor * (i - this.smoothedMouseY);
        const V = this.smoothedMouseX - this.lastSmoothedMouse.x,
            A = this.smoothedMouseY - this.lastSmoothedMouse.y,
            c = Math.sqrt(V * V + A * A);
        let d;
        c !== 0 ? d = Math.PI / 2 + Math.atan2(A, V) : d = 0;
        const m = this.options.minThickness * e + this.options.thicknessFactor * c,
            q = this.lastThickness + this.options.thicknessSmoothingFactor * (m - this.lastThickness);
        this.lastRotation === void 0 && (this.lastRotation = d);
        const v = this.lastRotation !== null ? Math.sin(this.lastRotation) : Math.sin(d),
            D = this.lastRotation !== null ? Math.cos(this.lastRotation) : Math.sin(d),
            S = Math.sin(d),
            C = Math.cos(d),
            h = this.lastThickness * v,
            w = this.lastThickness * D,
            T = q * S,
            M = q * C,
            O = .33 * c * v,
            Q = -.33 * c * D,
            u = this.lastSmoothedMouse.x + w + O,
            J = this.lastSmoothedMouse.y + h + Q,
            se = this.lastSmoothedMouse.x - w + O,
            te = this.lastSmoothedMouse.y - h + Q;
        this.canvasCTX.beginPath(), this.canvasCTX.moveTo(this.lastSmoothedMouse.x + w, this.lastSmoothedMouse.y + h), this.canvasCTX.quadraticCurveTo(u, J, this.smoothedMouseX + M, this.smoothedMouseY + T), this.canvasCTX.lineTo(this.smoothedMouseX - M, this.smoothedMouseY - T), this.canvasCTX.quadraticCurveTo(se, te, this.lastSmoothedMouse.x - w, this.lastSmoothedMouse.y - h), this.canvasCTX.closePath(), this.canvasCTX.fill(), this.canvasCTX.stroke();
        const ve = this.options.tipTaperFactor * q;
        this.tipCanvasCTX.clearRect(0, 0, this.tipCanvasCTX.canvas.width, this.tipCanvasCTX.canvas.height), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.arc(n, i, ve, 0, 2 * Math.PI, !0), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.tipCanvasCTX.beginPath(), this.tipCanvasCTX.moveTo(this.smoothedMouseX + M, this.smoothedMouseY + T), this.tipCanvasCTX.lineTo(n + this.options.tipTaperFactor * M, i + this.options.tipTaperFactor * T), this.tipCanvasCTX.lineTo(n - this.options.tipTaperFactor * M, i - this.options.tipTaperFactor * T), this.tipCanvasCTX.lineTo(this.smoothedMouseX - M, this.smoothedMouseY - T), this.tipCanvasCTX.closePath(), this.tipCanvasCTX.fill(), this.tipCanvasCTX.stroke(), this.lastSmoothedMouse = {
            x: this.smoothedMouseX,
            y: this.smoothedMouseY
        }, this.lastRotation = d, this.lastThickness = q, this.lastMouseChangeVector = {
            x: o,
            y: r
        }, this.lastMouse = {
            x: n,
            y: i
        }
    }
    drawLine(e) {
        if (!(!e || !e.color || !e.points || !e.thickness) && !(!this.canvasCTX || !this.tipCanvasCTX)) {
            this.canvasCTX.strokeStyle = e.color, this.canvasCTX.lineWidth = this.options.borderWidth, this.canvasCTX.lineCap = "round", this.canvasCTX.lineJoin = "bevel", this.canvasCTX.fillStyle = e.color, this.canvasCTX.strokeStyle = e.color, this.tipCanvasCTX.lineWidth = this.options.borderWidth, this.tipCanvasCTX.fillStyle = e.color, this.tipCanvasCTX.strokeStyle = e.color;
            for (let n = 0; n < e.points.length; n++) {
                const i = e.points[n];
                n === 0 && this.startLineInContext(e.thickness, i.x, i.y), this.continueLineInContext(e.thickness, i.x, i.y)
            }
            this.canvasCTX.drawImage(this.tipCanvas, 0, 0)
        }
    }
}
const $f = {
    color: "#000000",
    thickness: 3,
    highlighter: !1,
    sketchOptions: {
        minThickness: .5,
        thicknessFactor: .1,
        smoothingFactor: .55,
        thicknessSmoothingFactor: .6,
        tipTaperFactor: .7,
        cappedEnds: !1,
        borderWidth: 2,
        dotMultiplier: 2
    }
};
class lC {
    constructor(e, n = {}) {
        at(this, "canvasSelector");
        at(this, "canvas");
        at(this, "ctx");
        at(this, "options");
        at(this, "history");
        at(this, "layerNames", ["backgroundSketch", "highlighterSketch", "highlighterLineSketch", "markerSketch", "markerLineSketch"]);
        this.canvasSelector = e, this.canvas = Ye(this.canvasSelector)[0], this.ctx = this.canvas.getContext("2d"), this.options = Object.assign($f, n), this.history = [], this.layerNames.forEach(i => {
            const o = new U1(this.canvas.width, this.canvas.height, this.options.sketchOptions);
            o.name = i, this[i] = o
        })
    }
    update() {
        !this.ctx || (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.layerNames.forEach(e => {
            this.ctx.drawImage(this[e].canvas, 0, 0)
        }))
    }
    updateSize(e) {
        this.layerNames.forEach(n => {
            this[n].updateSize(e.width, e.height)
        })
    }
    setThickness(e) {
        this.options.thickness = e
    }
    setColor(e) {
        this.options.color = e
    }
    getHighlighter() {
        return !!this.options.highlighter
    }
    setHighlighter(e) {
        this.options.highlighter = e
    }
    setOptions(e) {
        const n = Object.assign($f.sketchOptions, e);
        this.layerNames.forEach(i => {
            this[i].options = n, this[i].update()
        }), this.update()
    }
    startLine(e) {
        (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addLine(this.options.thickness, this.options.color, this.options.highlighter, e)
    }
    moveLine(e) {
        (this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch).addPoint(e), this.update()
    }
    endLine() {
        const e = this.options.highlighter ? this.highlighterLineSketch : this.markerLineSketch,
            n = e.lines.pop();
        n.points && n.points.length > 1 && n.points.push(n.points[n.points.length - 2]), this.options.highlighter ? (this.highlighterSketch.lines.push(n), this.highlighterSketch.update(), this.history.push("highlighterSketch")) : (this.markerSketch.lines.push(n), this.markerSketch.update(), this.history.push("markerSketch")), e.reset(), this.update()
    }
    undoLine() {
        if (!this.history.length) return;
        const e = this.history.pop();
        this[e].lines.pop() && this[e].update()
    }
    isClean() {
        return !this.history.length
    }
    setLayerLines(e, n) {
        if (this.layerNames.indexOf(e) === -1) {
            console.error("invalid layer name", e);
            return
        }
        this[e].setLines(n), this.update()
    }
    setLayerImage(e, n) {
        this[e].setImage(n), this.update()
    }
    getLastLine() {
        return this.history.length === 0 ? null : this[this.history[this.history.length - 1]].getLastLine() || null
    }
    getLines() {
        return [...this.highlighterSketch.getLines(), ...this.markerSketch.getLines()]
    }
    getDataURL(e, n) {
        e === void 0 && (e = 1);
        const i = document.createElement("canvas"),
            o = this.canvas.width * e,
            r = this.canvas.height * e;
        i.width = o, i.height = r;
        const V = i.getContext("2d");
        return n && (V.fillStyle = n, V.fillRect(0, 0, o, r)), V.drawImage(this.highlighterSketch.canvas, 0, 0, o, r), V.drawImage(this.markerSketch.canvas, 0, 0, o, r), i.toDataURL()
    }
    resetAll() {
        this.layerNames.forEach(e => {
            this[e].reset()
        }), this.update()
    }
}
const AC = `<canvas id="fullLayer" class="sketchpad fullLayer" width='480' height='600' style=''></canvas>`,
    cC = je.View.extend({
        className: "Sketchpad canvasContainer",
        template: ke.template(AC),
        images: {},
        myViewOptions: ["color", "thickness", "background", "image"],
        sketchpad: null,
        bindings: {
            ".sketchpad": {
                attributes: [{
                    name: "width",
                    observe: "size",
                    onGet(t) {
                        return t ? t.width : ""
                    }
                }, {
                    name: "height",
                    observe: "size",
                    onGet(t) {
                        return t ? t.height : ""
                    }
                }, {
                    name: "style",
                    observe: ["background", "backgroundImageUrl"],
                    onGet([t, e]) {
                        let n = "";
                        return e && (n += `background-image:url(${e});`), t && (n += `background-color:${t};`), n
                    }
                }]
            }
        },
        events: {
            "contextmenu canvas": "handleContextMenu",
            "mousedown canvas": "start",
            "touchstart canvas": "start",
            "mousemove canvas": "move",
            "touchmove canvas": "move"
        },
        initialize(t) {
            this.color = "black", this.thicknessScale = -1, this.mergeOptions(t, this.myViewOptions), this.model.on("change:size", this.onUpdateSize, this), this.endWithContext = this.end.bind(this)
        },
        onUpdateSize() {
            this.sketchpad && this.sketchpad.updateSize(this.model.get("size"))
        },
        onRender() {
            this.stickit(), document.addEventListener("touchend", this.endWithContext), document.addEventListener("mouseup", this.endWithContext)
        },
        onAttach() {
            const t = `sketchpad-${this.model.cid}`;
            this.$("#fullLayer").addClass(t), this.sketchpad = new lC(`#fullLayer.${t}`), this.model.get("thicknesses") ? this.model.get("thicknesses").length === 1 && this.sketchpad.setThickness(this.model.get("thicknesses")[0]) : this.sketchpad.setThickness(1), this.triggerMethod("sketchpad:ready")
        },
        getCoords(t) {
            let e = t;
            e.preventDefault(), ["touchstart", "touchmove"].indexOf(e.type) !== -1 && (e = e.originalEvent.touches[0]);
            const n = this.sketchpad.canvas,
                i = Ye(n)[0].width / Ye(n).width(),
                o = n.getBoundingClientRect(),
                r = this.model.get("size"),
                V = this.sketchpad.options.thickness;
            let A = (e.clientX - o.left) * i;
            A = Math.min(r.width - V, Math.max(V, A));
            let c = (e.clientY - o.top) * i;
            return c = Math.min(r.height - V, Math.max(V, c)), {
                x: A,
                y: c
            }
        },
        fullImageCoord(t) {
            return `${parseInt(t.x+this.viewportOffset.x,10)},${parseInt(t.y+this.viewportOffset.y,10)}`
        },
        start(t) {
            const e = this.getCoords(t);
            this.sketchpad.startLine(e), this.isDrawing = !0
        },
        move(t) {
            if (!this.isDrawing) return;
            const e = this.getCoords(t);
            this.sketchpad.moveLine(e)
        },
        end(t, e) {
            !this.isDrawing || (this.isDrawing = !1, this.sketchpad.endLine(), e || this.triggerMethod("sketchpad:line", this.sketchpad.getLastLine()))
        },
        onBeforeDestroy() {
            this.getOption("mode") !== null && this.end(null, !0), document.removeEventListener("touchend", this.endWithContext), document.removeEventListener("mouseup", this.endWithContext)
        },
        leave() {
            this.getOption("mode") !== "draw" && this.tipShape.graphics.clear()
        },
        undoLine() {
            this.sketchpad.undoLine(), this.sketchpad.update(), this.triggerMethod("sketchpad:undo", this.sketchpad.history.length)
        },
        resetAll() {
            this.sketchpad && this.sketchpad.resetAll()
        },
        getColor() {
            return this.color
        },
        setColor(t) {
            this.color = t, this.sketchpad && this.sketchpad.setColor(t)
        },
        getThickness() {
            return this.thicknessScale
        },
        setThickness(t) {
            this.thicknessScale = t, this.sketchpad && this.sketchpad.setThickness(t)
        },
        getHighlighter() {
            return this.sketchpad ? this.sketchpad.getHighlighter() : !1
        },
        setHighlighter(t) {
            this.sketchpad && this.sketchpad.setHighlighter(t)
        },
        setOptions(t) {
            this.sketchpad && this.sketchpad.setOptions(t)
        },
        getLines() {
            return this.sketchpad ? this.sketchpad.getLines() : []
        },
        getImageData() {
            return this.sketchpad ? this.sketchpad.getDataURL(1, this.model.get("background")) : null
        },
        getThumbnailImage() {
            return this.sketchpad ? this.sketchpad.getDataURL(.33) : null
        },
        setLines(t) {
            !this.sketchpad || this.sketchpad.setLayerLines("backgroundSketch", t)
        },
        setImage(t) {
            const e = this.getOption("images")[t];
            if (!e) return;
            const n = new Image;
            n.onload = i => {
                const o = i.target;
                this.sketchpad.setLayerImage("backgroundSketch", o)
            }, n.src = e
        },
        handleContextMenu(t) {
            t.preventDefault()
        }
    }),
    dC = `<div class="controller-content">\r
    <div class="canvas-container">\r
        <div id="prompt" class="prompt"></div>\r
        <div id="toolbar" class="toolbar"></div>\r
        <div id="sketchpad"></div>\r
        <div id="buttons" class="buttons"></div>\r
        <div id="post-sketchpad" class="post-sketchpad">\r
            <div id="submit">\r
                <button id='submitdrawing' class="button submitDrawing">Submit</button><br/>\r
            </div>\r
            <button id='censorOptions' class='button'>Censor Options</button>\r
            <div class="footer"></div>\r
        </div>\r
        </div>\r
    </div>\r
</div>\r
`,
    pC = Ht.extend({
        defaults: {
            drawId: 0,
            objectKey: void 0,
            size: {
                width: 240,
                height: 300
            },
            actions: !1,
            colors: ["#3c6e6f", "#007727", "#b8aa01", "#0350a0", "#000000", "#966401", "#48019d", "#730075", "#9c0e3e"],
            background: "",
            thicknesses: [3, 6],
            defaultIndex: 4,
            classes: [],
            prompt: {
                html: ""
            },
            live: !1,
            image: !1,
            backgroundImageUrl: !1,
            lines: !1,
            hideSubmit: !1,
            autoSubmit: !1,
            allowEmpty: !1,
            disabled: !1,
            debug: !1,
            strings: {
                drawing_empty: "You must draw something!",
                submit: "submit",
                ERROR_REJECTED_OBJECT: "That's not allowed, enter something else!"
            }
        }
    }),
    hC = je.View.extend({
        className: "Draw",
        template: ke.template(dC),
        model: new pC,
        regions: {
            prompt: "#prompt",
            sketchpad: "#sketchpad",
            toolbar: "#toolbar",
            buttons: "#buttons"
        },
        events: {
            "click #submitdrawing": "onChildviewButtonSubmit"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return t ? t.join(" ") : ""
                    }
                }]
            },
            "#censorOptions": {
                visible: !1
            },
            ".footer": {
                observe: "footer",
                updateMethod: "html",
                onGet(t) {
                    return t ? t.html ? t.html : Ye("<div />").text(t.text).html() : null
                }
            },
            ".submitDrawing": {
                observe: ["hideSubmit", "actions", "strings"],
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t[0] || t[1] ? !1 : t[2] === void 0 ? "" : t[2].submit || "Submit"
                }
            }
        },
        initialize() {
            this.promptComponent = this.promptComponent || new uo({}), this.toolbarComponent = this.toolbarComponent || new VC({
                model: new ze.Model({})
            }), this.sketchpadComponent = this.sketchpadComponent || new cC({
                model: new ze.Model
            }), this.buttonsCollection = this.buttonsCollection || new ze.Collection([]), this.buttonsComponent = this.buttonsComponent || new ks({
                block: !1,
                collection: this.buttonsCollection
            }), this.options.thicknessIndex = -1, this.options.colorIndex = -1, this.drawId = this.model.get("drawId"), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
        },
        update() {
            this.model.get("drawId") !== this.getOption("drawId") && (this.resetDrawing(), this.drawId = this.model.get("drawId")), this.model.get("prompt") && this.promptComponent.model.set(this.model.get("prompt")), this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                width: 720,
                height: 900
            }), this.model.get("image") && (this.sketchpadComponent.setImage(this.images[this.model.get("image")]), this.onResize()), this.model.get("background") && this.sketchpadComponent.model.set("background", this.model.get("background")), this.model.get("backgroundImageUrl") && this.sketchpadComponent.model.set("backgroundImageUrl", this.model.get("backgroundImageUrl")), this.toolbarComponent && this.toolbarComponent.model.set("colors", this.model.get("colors")), this.model.get("actions") && this.buttonsCollection.set(this.model.get("actions")), this.model.get("autoSubmit") && this.autoSubmit(), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.onResize()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("toolbar", this.toolbarComponent), this.showChildView("sketchpad", this.sketchpadComponent), this.showChildView("buttons", this.buttonsComponent)
        },
        onChildviewAttach() {
            this.model.get("size") ? this.sketchpadComponent.model.set("size", this.model.get("size")) : this.sketchpadComponent.model.set("size", {
                width: 720,
                height: 900
            })
        },
        onAttach() {
            this.stickit(), this.update(), this.onResize(), Qt.vibrate()
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext)
        },
        resetDrawing() {
            this.sketchpadComponent.resetAll(), this.onChildviewSketchpadReady()
        },
        onChildviewSketchpadReady() {
            this.model.get("thicknesses") && this.options.thicknessIndex === -1 && this.onChildviewChooseThickness(), this.model.get("colors") && this.options.colorIndex === -1 && this.model.get("colors") && this.model.get("defaultIndex") !== void 0 && this.chooseColorByIndex(this.model.get("defaultIndex")), this.model.get("sketchOptions") && this.sketchpadComponent && this.sketchpadComponent.setOptions(this.model.get("sketchOptions")), this.model.get("lines") && this.sketchpadComponent.setLines(this.model.get("lines"))
        },
        chooseColorByIndex(t) {
            (t < 0 || t > this.model.get("colors").length) && (t = 0);
            let e = this.model.get("colors")[t];
            typeof e != "object" && (e = {
                hex: e
            }), this.chooseColor(e.hex, e)
        },
        onChildviewChooseColor(t) {
            this.chooseColor(t.get("hex"), t.attributes)
        },
        onChildviewChooseThickness() {
            this.options.thicknessIndex = (this.options.thicknessIndex + 1) % this.model.get("thicknesses").length;
            const t = this.model.get("thicknesses")[this.options.thicknessIndex];
            this.sketchpadComponent.setThickness(t), this.toolbarComponent && this.toolbarComponent.model.set("thickness", t)
        },
        onChildviewChooseUndo() {
            this.sketchpadComponent.undoLine()
        },
        chooseColor(t, e = {}) {
            this.sketchpadComponent.setColor(t), this.sketchpadComponent.setHighlighter(e.highlighter), this.toolbarComponent.model.set("highlighter", e.highlighter), e.thickness !== void 0 && this.sketchpadComponent.setThickness(e.thickness), this.toolbarComponent.model.set("currentColor", t)
        },
        onChildviewSketchpadLine(t) {
            if (this.toolbarComponent && this.toolbarComponent.onLine && this.toolbarComponent.onLine(), this.model.get("live")) {
                const e = {
                        line: t,
                        highlighter: this.sketchpadComponent.getHighlighter(),
                        action: "line"
                    },
                    n = this.model.get("objectKey");
                if (n !== void 0) {
                    const i = this.sketchpadComponent.getLines();
                    e.objectKey = n, e.val = {
                        lines: i
                    }
                }
                this.triggerMethod("client:message", e)
            }
        },
        onChildviewSketchpadUndo(t) {
            if (this.model.get("live")) {
                const e = {
                        action: "undo",
                        linesLength: t
                    },
                    n = this.model.get("objectKey");
                n !== void 0 && (e.objectKey = n, e.val = {
                    lines: this.sketchpadComponent.getLines()
                }), this.triggerMethod("client:message", e)
            }
        },
        autoSubmit() {
            this.sketchpadComponent.end(), this.sketchpadComponent.getLines().length > 0 && this.onChildviewButtonSubmit()
        },
        onChildviewChildviewButtonChoose(t) {
            this.onChildviewButtonChoose(t)
        },
        onChildviewButtonChoose(t) {
            this.triggerMethod("client:message", {
                action: "choose",
                index: t.get("key")
            })
        },
        onChildviewChildviewButtonSubmit() {
            this.onChildviewButtonSubmit()
        },
        onChildviewButtonSubmit() {
            const t = this.sketchpadComponent.getLines();
            if (t.length === 0 && !this.model.get("allowEmpty")) return Qt.show(Error(this.model.get("strings").drawing_empty)), !1;
            const e = {
                    lines: t,
                    action: "submit"
                },
                n = this.model.get("objectKey");
            return n && (e.objectKey = n, e.val = {
                lines: t,
                submit: !0
            }), this.triggerMethod("client:message", e), this.model.get("debug") && Qt.show("custom", {
                html: `<textarea id="lines" style='width:100%; height:400px;'>${JSON.stringify(t)}</textarea><button type="button" onclick="(function(){var copyText = document.querySelector('#lines'); copyText.select(); document.execCommand('copy');})();">Copy to clipboard</button>`
            }), !1
        },
        onObjectFilterError() {
            Qt.show(Error(this.model.get("strings").ERROR_REJECTED_OBJECT))
        },
        onResize() {
            const t = Ye("#sketchpad"),
                e = Ye("#sketchpad canvas")[0];
            if (!e) return;
            const n = parseInt(Ye(".controller-content").css("border-top-width"), 10) * 2 + Ye(".playerTopBar").innerHeight() + Ye("#prompt").innerHeight() + Ye("#toolbar").innerHeight() + parseInt(Ye(".canvasContainer").css("border-top-width"), 10) * 2 + Ye("#buttons").innerHeight() + Ye("#post-sketchpad").innerHeight() + 10,
                i = parseInt(parseInt(Ye(".canvasContainer").css("border-left-width"), 10) * 2 || 0 + parseInt(Ye(".canvasContainer").css("padding-left"), 10) * 2 || 0 + parseInt(Ye(".Draw").css("padding-left"), 10) * 2 || 0, 10),
                o = e.width,
                r = e.height,
                V = 2,
                A = Math.min(t.width() - i, o * V),
                c = Math.max(Ye("#controller-container").innerHeight() - n, 250),
                d = Math.min(A / o, c / r),
                m = o * d,
                q = r * d;
            e.style.width = `${m}px`, e.style.height = `${q}px`, window.scrollTo(0, 0)
        }
    }),
    uC = `<div>
    <div id="controller" class="state-controller controller-content">
        <form class="enterSingleTextForm">
            <fieldset class="enterSingleTextFieldset">
                <div id="prompt" class="prompt">prompt</div>
                <div id="input-region" class=""></div>
                <div id="buttons" class="">buttons</div>
            </fieldset>
        </form>
        <div class="enterSingleTextDone">
            <span class="doneText"></span>
        </div>
    </div>
</div>
`,
    mC = Ht.extend({
        defaults: {
            state: "EnterSingleText",
            actions: [{
                text: "submit",
                action: "submit"
            }],
            allowEmpty: !1,
            autoSubmit: !1,
            classes: [],
            doneText: "",
            entryId: void 0,
            entry: null,
            live: !1,
            maxLength: 500,
            textKey: void 0,
            textRingName: null,
            placeholder: "",
            autocapitalize: !1,
            className: "",
            inlineSubmit: !1,
            inlineSubmitText: "Submit",
            error: "",
            strings: {
                ERROR_NOTHING_ENTERED: "You need to enter something!",
                ERROR_REJECTED_TEXT: "That's not allowed, enter something else! (You can change the level of filtering in the game's settings menu)"
            }
        }
    }),
    fC = je.View.extend({
        className: "EnterSingleText scrollable",
        template: ke.template(uC),
        model: new mC,
        sessionModule: "comment",
        sessionName: " Comments",
        regions: {
            prompt: "#prompt",
            input: "#input-region",
            buttons: "#buttons"
        },
        events: {
            "submit form": "onChildviewInputSubmit"
        },
        bindings: {
            ".enterSingleTextForm": {
                observe: "entry",
                visible(t) {
                    return !t
                }
            },
            ".enterSingleTextDone": {
                observe: "entry",
                visible: !0
            },
            ".doneText": {
                observe: "doneText",
                updateMethod: "html",
                onGet(t) {
                    return t ? t.html ? t.html : Ye("<div />").text(t.text).html() : ""
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return !t || !t.bgColor ? "" : `background-color: ${t.bgColor}`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return t ? t.join(" ") : ""
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return t && t.buttonColor ? `background-color: ${t.buttonColor}` : null
                    }
                }]
            }
        },
        initialize() {
            this.currentEntry = null, this.shouldSubmit = !1, this.promptComponent = new uo({
                model: new ze.Model({
                    text: "",
                    className: ""
                })
            }), this.inputComponent = this.inputComponent || new Fl({
                model: new ze.Model({})
            }), this.buttonsCollection = this.buttonsCollection || new ze.Collection([{
                text: "submit"
            }]), this.buttonsComponent = this.buttonsComponent || new ks({
                block: !0,
                collection: this.buttonsCollection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        update() {
            this.model.get("isAudience") && ((this.model.get("entryId") === void 0 || this.model.get("entryId") !== this.entryId) && (this.audienceEntry = void 0), this.audienceEntry && this.model.setUpdate({
                entry: this.audienceEntry,
                entryId: this.model.get("entryId") || 0
            })), this.promptComponent.model.clear({
                silent: !0
            }).set(this.model.get("prompt")), this.inputComponent.model.set(this.model.attributes), this.buttonsComponent.options.block = this.model.get("block"), this.buttonsCollection.set(this.model.get("actions") || [{
                text: "submit",
                action: "submit"
            }]), this.model.get("entryId") && this.model.get("entryId") !== this.currentEntry && (this.inputComponent.clearInput(), this.currentEntry = this.model.get("entryId")), this.$el.find(".enterSingleTextFieldset").prop("disabled", !1), this.$el.find("textarea").focus(), this.stickit(), this.model.get("autoSubmit") && this.shouldSubmit && this.onChildviewInputSubmit()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("input", this.inputComponent), this.showChildView("buttons", this.buttonsComponent), this.stickit()
        },
        onAttach() {
            this.update(), Qt.vibrate()
        },
        onChildviewInputText(t) {
            let e = t.getValue();
            e.length > this.model.get("maxLength") && (e = e.substr(0, this.model.get("maxLength")), t.setValue(e)), this.shouldSubmit = e.length > 0, this.model.get("live") && (this.throttledSend || (this.throttledSend = ke.throttle(() => {
                const n = t.getSanitizedValue();
                if (n.length === 0) return;
                const i = {
                        action: "write-live",
                        entry: n
                    },
                    o = this.model.get("textKey");
                o !== void 0 && (i.textKey = o, i.val = n), this.triggerMethod("client:message", i)
            }, 500)), this.throttledSend())
        },
        onChildviewInputSubmit() {
            let t = this.inputComponent.getValue(),
                e = this.inputComponent.getSanitizedValue();
            if (this.model.setUpdate({
                    error: null
                }), e.length === 0 && !this.model.get("allowEmpty")) return this.model.setUpdate({
                error: this.model.get("strings").ERROR_NOTHING_ENTERED
            }), !1;
            t.length > this.model.get("maxLength") && (this.inputComponent.setValue(t.substr(0, this.model.get("maxLength"))), t = this.inputComponent.getValue(), e = this.inputComponent.getSanitizedValue()), this.shouldSubmit = !1;
            const n = {
                    action: "write",
                    entry: e
                },
                i = this.model.get("textKey");
            return i && (n.textKey = i, n.val = e), this.triggerMethod("client:message", n), this.model.get("isAudience") ? this.model.get("repeating") ? this.inputComponent.clearInput() : (this.audienceEntry = e, this.entryId = this.model.get("entryId") || 0, this.model.setUpdate({
                entry: this.audienceEntry,
                shotId: this.entryId
            })) : this.model.get("repeating") || this.$el.find(".enterSingleTextFieldset").prop("disabled", !0), !1
        },
        onTextFilterError() {
            this.model.setUpdate({
                error: this.model.get("strings").ERROR_REJECTED_TEXT
            })
        },
        onChildviewChildviewButtonSuggestion() {
            const t = this.model.get("suggestions"),
                e = this.inputComponent.getSanitizedValue(),
                n = ke.without(t, e);
            return this.inputComponent.setValue(ke.shuffle(n)[0]), !1
        },
        onChildviewChildviewButtonChoose(t) {
            return this.triggerMethod("client:message", {
                action: t.get("key")
            }), !1
        },
        onChildviewChildviewButtonHelp() {
            return this.triggerMethod("client:message", {
                action: "help"
            }), !1
        }
    });
je.View.extend({
    model: new ze.Model({}),
    myViewOptions: ["width", "height", "sketchOptions"],
    template: ke.template(`
        <h1 class='title'>ImageView</h1>
        <img class='imageData'>
    `),
    initialize(t) {
        this.mergeOptions(t, this.myViewOptions), this.model.on({
            "change:lines": this.setImageFromLines.bind(this)
        })
    },
    bindings: {
        ".title": {
            observe: "title",
            visible: !0,
            updateView: !0
        },
        ".imageData": {
            attributes: [{
                name: "src",
                observe: "src"
            }]
        }
    },
    setImageFromLines() {
        const t = this.getOption("width") || 640,
            e = this.getOption("height") || 640,
            n = this.getOption("sketchOptions"),
            i = this.model.get("lines") || [];
        if (!i.length || !n) return;
        const o = new U1(t, e, n);
        o.setLines(i), this.model.set("src", o.canvas.toDataURL("image/png"))
    },
    onRender() {
        this.stickit()
    }
});
je.View.extend({
    appId: "legacymain",
    appTag: "legacymain",
    template: null,
    client: null,
    initialize(t) {
        this.client = t.client, this.mergeOptions(t, ["appId", "appTag"]), this.model = new ze.Model({});
        const e = this.client.parseEntities();
        this.model.set(e), this.model.on("change", this.controllerUpdate, this), this.model.on("change", () => {
            this.update().catch(this.caughtError)
        }), this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.on("client:connection", this.onConnectionMessageWithContext), this.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.on("client:disconnected", this.onDisconnectedWithContext)
    },
    render() {
        this.model.set("username", un.safeText(this.client.name), {
            silent: !0
        }), this.$el.html(this.template(this.model.toJSON())), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext)
    },
    onEntityDidChange(t, e) {
        this.model.unset(t, {
            silent: !0
        }), this.model.set(t, e)
    },
    controllerUpdate() {
        const t = this.model.get("room") || {},
            e = t.state || "";
        let n = t.lobbyState;
        !n && e.indexOf("_") !== -1 && (n = t.state.split("_")[1]), n === "PostGame" || e === "Credits" || e === "GameOver" || e === "PostGame" || e === "DayEnd" || t.gameResults ? _i.isInitialized ? _i.show() : _i.init(this.getOption("appTag")).then(() => {
            _i.show()
        }) : _i.hide(), t.platformId && Jt.setTag(`platform-${t.platformId}`)
    },
    async update() {
        return null
    },
    caughtError(t) {
        throw t
    },
    onAttach() {
        this.update().catch(this.caughtError), Ye(".gallery-link").click(this.artifactClicked.bind(this)), this.client.isRole("broadcaster") && this.showTwitchBroadcasterDialog(20 * 1e3)
    },
    showTwitchBroadcasterDialog(t) {
        let e = `<div class='icon-${this.client.roles.broadcaster.platform}'>${this.client.roles.broadcaster.name}</div>`;
        e += "<div class='success'>You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.</div>", this.lacksAudience ? e += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (e += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), Qt.show("custom", {
            html: e,
            position: "bottom",
            timer: t,
            backdrop: "transparent",
            customClass: {
                container: "jbgTwitchContainer",
                popup: "jbgTwitchPopup",
                htmlContainer: "jbgTwitchContent",
                closeButton: "jbgCloseButton"
            },
            showCloseButton: !0,
            closeButtonHtml: '<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path><path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" /></svg >',
            showConfirmButton: !1,
            showClass: {
                popup: "jbgTwitchShow"
            },
            hideClass: {
                popup: "jbgTwitchHide"
            }
        })
    },
    onBeforeDestroy() {
        this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext)
    },
    artifactClicked() {
        po.setAsViewed(0)
    },
    showScreen(t, e) {
        const n = Ye(t);
        return this.activeScreen && t === this.activeScreen || (this.activeScreen && (Ye(this.activeScreen).fadeOut("fast", () => {}), Ye(this.activeScreen).show(), Ye(this.activeScreen).addClass("pt-page-off")), n.hide(), n.removeClass("pt-page-off"), n.removeClass("pt-page-moveToLeft"), n.fadeIn("fast", () => {
            e && e()
        }), this.activeScreen = t, this.onResize()), !1
    },
    notify() {
        Qt.vibrate()
    },
    onRoomWasDestroyed() {
        Jt.remove("roomCode"), Jt.remove("reconnect"), Qt.show("error", {
            titleText: "Disconnected",
            text: "Thanks for playing!",
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onDisconnected() {
        Qt.show("error", {
            titleText: "Disconnected",
            text: "You have been disconnected.",
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onConnectionMessage(t) {
        const e = `${t.status} ${t.attempt?`${t.attempt}/5'`:""}`;
        if (Qt.show("toast", {
                text: e
            }), t.status === "connected") {
            const n = this.client.parseEntities();
            this.model.set(n)
        }
    },
    onResize() {
        const t = Ye("#player").outerHeight(!0) || 0,
            e = _i.isVisible ? Ye("#slide-in-banner").outerHeight(!0) : 0,
            n = Ye(window).width(),
            i = Ye(window).height() - t;
        Ye(`.${this.getOption("appTag")}-page`).css("height", i - e), Ye(`.${this.getOption("appTag")}-page`).attr("height", i - e), Ye(`.${this.getOption("appTag")}-page`).css("top", t), Ye(`.${this.getOption("appTag")}-page`).css("width", n), Ye(`.${this.getOption("appTag")}-page`).attr("width", n)
    }
});
const qC = `<div id="controller" class="state-controller controller-content">
    <div id="title" class="lobbyTitle">title</div>
    <div id="vipMenu" class="vipMenu">
        <div id="choices" class="choicesContainer">choices</div>
    </div>
    <div class="characterSelect">
        <div id="charactersPrompt" class="charactersPrompt">
            <span id="charactersPromptText" class="charactersPromptText"></span>
        </div>
        <div id="characters" class="charactersContainer"></div>
    </div>
    <div id="artifactId" class="artifactContainer text">
        <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
            <button id="artifactButton" class="artifactButton"></button>
        </a>
    </div>
</div>`,
    gC = Ht.extend({
        defaults: {
            canChangeName: !1,
            playerIsVIP: !1,
            playerCanStartGame: !1,
            playerCanCensor: !1,
            gameCanStart: !1,
            gameIsStarting: !1,
            gameEnded: !1,
            game: {
                familyFriendly: !1,
                extendedTimers: !1,
                requireTwitch: !1,
                controllerOnly: !1,
                skipTutorials: !1
            },
            choices: [],
            artifact: null,
            characters: null,
            censorablePlayers: [],
            playerCanDoEpisodes: !1,
            playerCanReport: !1,
            playerCanViewAuthor: !1,
            lastUGCResult: null,
            history: [],
            activeContentId: null,
            formattedActiveContentId: null,
            isLocal: !1,
            strings: {
                wait: "Sit back and relax!",
                vip_waiting: "Waiting for all players to join",
                vip_canStart: "Press this button when everybody has joined",
                vip_cancel: "Press this button to cancel game start",
                vip_postgame: "What would you like to do now?",
                vip_episodes_menu: "Episodes Menu",
                vip_episodes_unload: "Unload Episode",
                vip_episodes_report: "Report Episode",
                vip_episodes_warning: "Warning: user generated content is not rated",
                vip_episodes_load: "Load an episode by id:",
                vip_episodes_select: "Or select an episode:",
                vip_episodes_back: "Back",
                vip_episodes_submit: "SUBMIT",
                vip_episodes_view_author: "View Author",
                button_start: "Everybody's In",
                button_cancel: "Cancel",
                button_changename: "Change Name",
                button_sameplayers: "Same Players",
                button_newplayers: "New Players",
                prompt_entername: "Enter your name",
                prompt_choosecharacter: "Select your character",
                button_censorOptions: "Censor Options",
                censor_prompt: ""
            }
        }
    }),
    yC = je.View.extend({
        tagName: "button",
        template: ke.template('<span class="flex-item"></span>'),
        className() {
            return `characters ${this.model.get("name")}`
        },
        events: {
            click: "onCharacterClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "bgcolor",
                    onGet(t) {
                        return t ? `background-color: ${t};` : ""
                    }
                }, {
                    name: "aria-label",
                    observe: "name"
                }, {
                    name: "disabled",
                    observe: "available",
                    onGet(t) {
                        return t !== void 0 ? !t : null
                    }
                }],
                classes: {
                    active: "active",
                    selected: {
                        observe: "selected",
                        onGet(t) {
                            return t
                        }
                    },
                    disabled: {
                        observe: "available",
                        onGet(t) {
                            return !t
                        }
                    }
                }
            }
        },
        onCharacterClick() {
            this.trigger("character:click", this.model)
        },
        onRender() {
            this.stickit()
        }
    }),
    qr = je.View.extend({
        className: "Lobby scrollable",
        template: ke.template(qC),
        model: new gC,
        titleComponent: null,
        choicesListView: null,
        charactersListView: null,
        regions: {
            title: "#title",
            choices: "#choices",
            characters: "#characters"
        },
        events: {
            "click .choice-button": "onButtonClick",
            "click .artifactLink": "onArtifactClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return !t || !t.bgColor ? "" : `background-color: ${t.bgColor};`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return t ? t.join(" ") : ""
                    }
                }]
            },
            ".artifactContainer": {
                observe: "artifact",
                visible: !0
            },
            ".artifactLink": {
                attributes: [{
                    name: "href",
                    observe: "artifact",
                    onGet(t) {
                        if (!t) return null;
                        let e = "games.jackbox.tv";
                        return t.rootId.indexOf("test") !== -1 && (e = "games-test.jackbox.tv"), `https://${e}/artifact/${t.categoryId}/${t.artifactId}/`
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return t && t.buttonColor ? `background-color: ${t.buttonColor}` : null
                    }
                }]
            },
            ".characterSelect": {
                observe: "characters",
                visible: !0
            },
            ".charactersPrompt": {
                observe: "characters",
                visible: !0,
                onGet(t) {
                    return t && !ke.isEmpty(t)
                }
            },
            ".charactersPromptText": {
                observe: "strings",
                onGet() {
                    return this.getOption("strings").prompt_choosecharacter
                }
            }
        },
        strings: {},
        initialize() {
            this.titleComponent = new uo({
                model: new ze.Model({})
            }), this.choicesListView = this.choicesListView || new ks, this.charactersListView = new je.CollectionView({
                childView: yC,
                className: "charactersList",
                collection: new ze.Collection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        update() {
            if (this.strings = this.model.get("strings"), this.choicesListView.collection.reset(), this.titleComponent.model.set("html", this.getOption("strings").wait), this.model.get("playerIsVIP") && (this.model.get("gameCanStart") ? this.model.get("playerCanStartGame") && (this.model.get("gameIsStarting") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_cancel), this.choicesListView.collection.add({
                    className: "vipCancel",
                    html: this.getOption("strings").button_cancel,
                    action: "cancel"
                })) : this.model.get("gameFinished") ? (this.titleComponent.model.set("html", this.getOption("strings").vip_postgame), this.choicesListView.collection.add({
                    html: this.getOption("strings").button_sameplayers,
                    action: "PostGame_Continue"
                }), this.choicesListView.collection.add({
                    html: this.getOption("strings").button_newplayers,
                    action: "PostGame_NewGame"
                })) : (this.titleComponent.model.set("html", this.getOption("strings").vip_canStart), this.choicesListView.collection.add({
                    className: "vipStart",
                    html: this.getOption("strings").button_start,
                    action: "start"
                }), this.model.get("playerCanCensor") && this.model.get("censorablePlayers").length > 0 && this.choicesListView.collection.add({
                    className: "vipCensorOptions",
                    html: this.getOption("strings").button_censorOptions,
                    action: "censorOptions"
                }))) : this.titleComponent.model.set("html", this.getOption("strings").vip_waiting)), this.model.get("playerCanDoEpisodes")) {
                if (this.model.get("activeContentId")) {
                    const n = this.model.get("activeContentId"),
                        i = this.model.get("history").find(r => n === (r.remoteContentId || r.localContentId)),
                        o = i && i.metadata ? un.htmlUnescape(i.metadata.title) : null;
                    o && this.choicesListView.collection.add({
                        type: "text",
                        text: o
                    }), this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_unload,
                        action: "ugc-unload",
                        block: !1
                    }), this.model.get("playerCanReport") && this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_report,
                        action: "ugc-report",
                        block: !1
                    }), this.model.get("playerCanViewAuthor") && this.choicesListView.collection.add({
                        html: this.getOption("strings").vip_episodes_view_author,
                        action: "ugc-view-author",
                        block: !1
                    })
                } else this.choicesListView.collection.add({
                    className: "vipEpisodesMenu",
                    html: this.getOption("strings").vip_episodes_menu,
                    action: "ugc"
                });
                const e = this.model.get("lastUGCResult");
                e && e.error && this.lastUGCResultId !== e.id && (Qt.show("alert", {
                    text: e.error
                }), this.lastUGCResultId = e.id)
            }
            this.model.get("canChangeName") && this.choicesListView.collection.add({
                html: this.getOption("strings").button_changename,
                action: "changeName"
            }), this.model.get("choices") && this.choicesListView.collection.add(this.model.get("choices"));
            const t = this.model.get("characters") || [];
            this.charactersListView.collection.set(ke.map(t, e => {
                const n = this.model.get("playerInfo") || {},
                    i = e;
                return i.bgcolor = n.buttonColor, i.selected = n.avatar === i.name, i
            })), this.stickit()
        },
        onRender() {
            this.showChildView("title", this.titleComponent), this.showChildView("choices", this.choicesListView), this.showChildView("characters", this.charactersListView), this.update()
        },
        onArtifactClick() {
            this.triggerMethod("track:event", {
                category: "PostGame",
                action: "galleryClicked"
            }), po.setAsViewed(0)
        },
        async onButtonClick(t) {
            const e = this;
            t.preventDefault();
            const i = Ye(t.currentTarget).data("action");
            if (i !== "back" && i !== "censorConfirm" && i !== "activateContentId")
                if (i === "changeName") try {
                        const o = await Qt.show("custom", {
                            input: "text",
                            title: this.getOption("strings").prompt_entername,
                            customClass: {
                                input: "playerName"
                            },
                            inputAttributes: {
                                maxlength: 12
                            },
                            inputValidator: r => r ? r.length > 12 ? "Limit 12 characters" : null : "You need to write something!"
                        });
                        if (o.dismiss) return;
                        this.triggerMethod("client:message", {
                            name: o.value
                        })
                    } catch {} else if (i === "censorOptions") Qt.show("custom", {
                        target: this.el,
                        html: "",
                        confirmButtonText: this.model.get("strings").button_cancel,
                        customClass: {
                            popup: "censorOptionsModal",
                            confirmButton: "cancelButton"
                        },
                        didOpen() {
                            const o = new ks({
                                    el: ".censorOptionsModal",
                                    action: "censor",
                                    collection: new ze.Collection
                                }),
                                r = [{
                                    type: "text",
                                    className: "prompt",
                                    html: e.model.get("strings").censor_prompt
                                }, ...e.model.get("censorablePlayers").map(V => ({
                                    action: "censorConfirm",
                                    html: V.name,
                                    key: V.id
                                }))];
                            o.collection.set(r), o.render(), e.listenTo(o, "childview:button:censorConfirm", e.censorPlayer)
                        }
                    });
                    else if (i === "ugc-unload") this.triggerMethod("client:message", {
                clearContentId: !0
            });
            else if (i === "ugc-report") {
                const o = "http://support.jackboxgames.com/",
                    r = this.model.get("formattedActiveContentId");
                window.open(`${o}?episodeID=${r}`, "_blank")
            } else i === "ugc-view-author" ? this.triggerMethod("client:message", {
                viewAuthor: !0
            }) : i === "ugc" ? Qt.show("custom", {
                target: this.el,
                html: "",
                showConfirmButton: !1,
                customClass: {
                    popup: "episodesModal"
                },
                background: e.model.get("playerInfo") && e.model.get("playerInfo").bgColor ? e.model.get("playerInfo").bgColor : null,
                padding: "10px 5px",
                didOpen: () => {
                    const o = new ks({
                        el: ".episodesModal",
                        action: "episode",
                        collection: new ze.Collection([])
                    });
                    o.collection.add({
                        html: this.model.get("strings").vip_episodes_back || "Back",
                        action: "back",
                        className: "backButton"
                    }), o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_load || "Load an episode by id:",
                        className: "header"
                    }), o.collection.add({
                        type: "input",
                        preventAutosize: !0,
                        placeholder: "???-????",
                        inlineSubmit: !0,
                        inlineSubmitText: this.model.get("strings").vip_episodes_submit || "SUBMIT",
                        className: "lobbyUgcInput"
                    }), o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_warning || "Warning: user generated content is not rated",
                        className: "danger"
                    }), e.model.get("history").length && (o.collection.add({
                        type: "text",
                        html: this.model.get("strings").vip_episodes_select || "Or select an episode:",
                        className: "episodesListHeader"
                    }), o.collection.add(e.model.get("history").map(r => ({
                        action: "activateContentId",
                        html: r.remoteContentId ? `${r.metadata.title}<br/>${r.formattedRemoteContentId}` : `${r.metadata.title}`,
                        key: r.remoteContentId || r.localContentId
                    })))), o.render(), Ye(".lobbyUgcInput").mask("aaa-aaaa", {
                        placeholder: "???-????"
                    }), e.listenTo(o, "childview:button:activateContentId", e.activateContentId), e.listenTo(o, "childview:button:back", () => {
                        Qt.close()
                    }), e.listenTo(o, "childview:input:submit", e.activateContentIdFromInput)
                }
            }) : this.triggerMethod("client:message", {
                action: i
            })
        },
        censorPlayer(t) {
            Qt.close(), this.triggerMethod("client:message", {
                action: "censor",
                id: t.get("key")
            })
        },
        activateContentId(t) {
            Qt.close(), this.triggerMethod("client:message", {
                activateContentId: !0,
                contentId: t.get("key")
            })
        },
        activateContentIdFromInput(t) {
            (t.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase() || "").length < 7 || (this.triggerMethod("client:message", {
                activateContentId: !0,
                contentId: t.getSanitizedValue().replace(/[^A-Za-z]/gi, "").toUpperCase()
            }), Qt.close())
        },
        onChildviewChildviewCharacterClick(t) {
            t.get("available") && !t.get("selected") && (this.triggerMethod("client:message", {
                action: "avatar",
                name: t.get("name")
            }), this.charactersListView.collection.forEach(e => {
                e.unset("active"), e.set("bgcolor", this.model.get("playerInfo").buttonColor)
            }), t.set("active", !0), t.set("bgcolor", this.model.get("playerInfo").textColor))
        }
    }),
    bC = `<div id="image" class="logo logo-image"></div>
<div id="message" class="message"><h2 class="messageText"></h2></div>
<div id="action" class="action"></div>
<div id="artifactId" class="artifactContainer text">
    <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
        <button id="artifactButton" class="artifactButton"></button>
    </a>
</div>
`,
    vC = Ht.extend({
        defaults: {
            message: {
                text: null
            },
            classes: [],
            artifact: null
        }
    }),
    wC = je.View.extend({
        className: "Logo",
        template: ke.template(bC),
        model: new vC,
        events: {
            touchstart: "onTouchStart",
            "click .artifactButton": "onArtifactClick"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return (t || []).join(" ")
                    }
                }]
            },
            ".message": {
                attributes: [{
                    name: "style",
                    observe: "message",
                    onGet(t) {
                        let e = "";
                        return t && (t.html || t.text) || (e += "display: none;"), e
                    }
                }]
            },
            ".messageText": {
                observe: "message",
                updateMethod: "html",
                onGet(t) {
                    return !t || !t.html && !t.text ? null : t.html ? t.html : Ye("<div />").text(t.text).html()
                }
            },
            "#action": "action",
            ".artifactContainer": {
                observe: "artifact",
                visible: !0
            },
            ".artifactLink": {
                attributes: [{
                    name: "href",
                    observe: "artifact",
                    onGet(t) {
                        const e = t || {
                            rootId: "",
                            categoryId: "",
                            artifactId: ""
                        };
                        let n = "games.jackbox.tv";
                        return e.rootId.indexOf("test") !== -1 && (n = "games-test.jackbox.tv"), `https://${n}/artifact/${e.categoryId}/${e.artifactId}/`
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onTouchStart(t) {
            t.target.tagName.toLowerCase() !== "button" && t.preventDefault()
        },
        onArtifactClick() {
            this.triggerMethod("track:event", {
                category: "PostGame",
                action: "galleryClicked"
            }), po.setAsViewed(0)
        }
    }),
    fl = {
        en: {
            LANGUAGE_NAME: "English",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Language",
            LOGIN: "Login",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnected",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Thanks for playing!"
        },
        fr: {
            LANGUAGE_NAME: "Fran\xE7ais",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Langue",
            LOGIN: "Connexion",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "D\xE9connect\xE9",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Vous avez \xE9t\xE9 d\xE9connect\xE9"
        },
        it: {
            LANGUAGE_NAME: "Italiano",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Lingua",
            LOGIN: "Accesso",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Disconnesso",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Disconnesso"
        },
        de: {
            LANGUAGE_NAME: "Deutsche",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "Sprache",
            LOGIN: "Login",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Getrennt",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Getrennt"
        },
        es: {
            LANGUAGE_NAME: "Espa\xF1ol",
            SUPPORTED_LANGUAGES: ["English", "Fran\xE7ais", "Italiano", "Deutsch", "Espa\xF1ol"],
            SUPPORTED_LOCALES: ["en", "fr", "it", "de", "es"],
            LANGUAGE: "idioma",
            LOGIN: "Iniciar sesi\xF3n",
            STRING_ERROR_SERVER_ROOM_DISCONNECTED: "Desconectado",
            STRING_ERROR_SERVER_ROOM_DESTROYED: "Desconectado"
        }
    },
    xC = `<div id="player" class="playerTopBar">
    <div id="playericon" class="playerIcon"></div>
    <div id="playername" class="playerName controller-text"></div>
</div>`,
    kC = je.View.extend({
        className: "playerTopBarView",
        template: ke.template(xC),
        model: new ze.Model,
        bindings: {
            ":el": {
                observe: ["username", "hidden"],
                visible(t) {
                    return t[0] && !t[1]
                },
                attributes: [{
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return (t || []).join(" ")
                    }
                }]
            },
            "#playername": {
                observe: "username",
                attributes: [{
                    name: "style",
                    observe: "textColor",
                    onGet(t) {
                        return t ? `color: ${t}` : ""
                    }
                }]
            },
            ".playerTopBar": {
                observe: "username",
                visible: !0,
                attributes: [{
                    name: "style",
                    observe: "topBarColor",
                    onGet(t) {
                        return t ? `background-color: ${t}` : ""
                    }
                }]
            },
            "#playericon": {
                observe: "avatar",
                visible: !0,
                attributes: [{
                    name: "class",
                    observe: "avatar"
                }]
            }
        },
        onRender() {
            this.stickit()
        }
    }),
    CC = `<div id="controller" class="state-controller controller-content">
    <div id="prompt" class="prompt text"></div>
    <div class="error text-danger"></div>
    <div id="choicesRegion"></div>
    <div id="chosen" class="chosen text"></div>
    <div class="makeSingleChoiceDone">
        <span class="doneText"></span>
    </div>
</div>`,
    RC = Ht.extend({
        defaults: {
            choiceId: void 0,
            type: "single",
            censorDialog: "none",
            chosen: null,
            choices: [],
            prompt: {},
            error: null,
            block: !0,
            classes: [],
            maxVotes: 16,
            doneText: {},
            announcePrompt: !1,
            countGroupName: null,
            strings: {
                your_choice: "Thank you. Your choice: ",
                censor_prompt: "Censor this?",
                censor_confirm: "Yes, Censor!",
                censor_cancel: "No!"
            }
        }
    }),
    DC = je.View.extend({
        className: "MakeSingleChoice scrollable",
        template: ke.template(CC),
        model: new RC,
        sessionModule: "vote",
        sessionName: " Vote",
        regions: {
            prompt: "#prompt",
            choices: "#choicesRegion"
        },
        bindings: {
            ".chosen": {
                observe: "chosen",
                updateMethod: "html",
                onGet(t) {
                    return t ? t.html ? t.html : Ye("<div />").text(t.text).html() : null
                }
            },
            ".choices": {
                observe: "chosen",
                visible(t) {
                    return t === "" || t === null
                }
            },
            ".error": {
                observe: "error",
                visible: !0,
                updateView: !0
            },
            ".makeSingleChoiceDone": {
                observe: "chosen",
                visible(t) {
                    return t !== null && t !== ""
                }
            },
            ".doneText": {
                observe: "doneText",
                updateMethod: "html",
                onGet(t) {
                    return t ? t.html ? t.html : Ye("<div />").text(t.text).html() : null
                }
            },
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return !t || !t.bgColor ? "" : `background-color: ${t.bgColor}`
                    }
                }, {
                    name: "class",
                    observe: "classes",
                    onGet(t) {
                        return t ? t.join(" ") : ""
                    }
                }]
            },
            ".choice-button": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return t && t.buttonColor ? `background-color:${t.buttonColor}` : null
                    }
                }]
            }
        },
        initialize() {
            this.promptComponent = this.promptComponent || new uo({
                model: new ze.Model
            }), this.choicesList = this.choicesList || new ks({
                action: "choose",
                collection: new ze.Collection
            }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
        },
        onBeforeDestroy() {
            this.model.get("type") === "multiple" && this.onChildviewChildviewButtonSubmit()
        },
        update() {
            this.promptComponent.model.clear({
                silent: !0
            }).set(this.model.get("prompt")), this.choicesList.options.block = this.model.get("block"), this.choicesList.collection.set(this.model.get("choices")), this.model.get("type") === "multiple" && ke.all(this.model.get("choices"), t => !t.disabled) && this.choicesList.collection.push({
                text: "Submit",
                action: "submit",
                block: !1
            }), this.model.get("isAudience") && ((this.model.get("choiceId") === void 0 || this.model.get("choiceId") !== this.getOption("choiceId")) && (this.selected = [], this.audienceChoice = void 0, this.votesLeft = void 0), this.selected.length > 0 && (this.model.get("type") === "multiple" ? this.choicesList.children.forEach(t => {
                this.selected.find(e => e === t.getOption("index")) !== void 0 && t.model.set("selected", !0)
            }) : this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.model.get("choiceId") || 0
            }))), this.choiceId = this.model.get("choiceId") || 0, this.stickit()
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.choicesList), this.stickit()
        },
        onAttach() {
            this.update(), Qt.vibrate()
        },
        onChildviewChildviewButtonChoose(t) {
            const e = t.get("action") || "choose",
                n = t.get("index"),
                i = this.model.get("type");
            switch (this.choicesList.children.forEach(o => {
                    o.model.set("disabled", i === "single"), o.model.set("active", !1)
                }), i) {
                case "multiple":
                    if (this.model.get("toggle") ? t.set("selected", !t.get("selected")) : t.set("selected", !0), this.model.get("isAudience")) {
                        const o = [];
                        this.choicesList.children.forEach(r => {
                            r.model.get("selected") && o.push(r.getOption("index"))
                        }), this.selected = o
                    }
                    return !1;
                case "repeating":
                    if (this.votesLeft === void 0 && (this.votesLeft = this.model.get("maxVotes")), this.delaySubmit || this.votesLeft <= 0 && this.model.get("isAudience")) return !1;
                    this.delaySubmit = !0, window.setTimeout(() => {
                        this.delaySubmit = !1
                    }, 101), this.votesLeft -= 1;
                    break;
                case "single":
                    t.set("selected", !0), t.set("active", !0);
                    break
            }
            return this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                action: e,
                choice: n
            }) : this.model.get("isAudience") && (this.selected = [t.get("index")], this.triggerMethod("client:countGroup", {
                name: this.model.get("countGroupName"),
                vote: n
            }), i !== "repeating" && this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.choiceId
            })), !1
        },
        displayAudienceChoice(t) {
            let e = "Thank you.";
            const n = t.map(o => {
                const r = this.choicesList.children.find(V => V.model.get("index") === o);
                return r ? r.model.get("html") || r.model.get("text") : ""
            });
            return t !== void 0 && this.model.get("strings") && (e = this.model.get("strings").your_choice + n.join(", ")), {
                html: e
            }
        },
        onChildviewChildviewButtonCensor(t) {
            const e = t.get("index"),
                n = t.get("html");
            if (this.model.get("censorDialog") === "confirm") t.get("isWarned") ? this.triggerMethod("client:message", {
                action: "censor",
                choice: e
            }) : t.set("isWarned", !0);
            else {
                if (this.model.get("censorDialog") === "warning") return Ai.close(), Ai.fire({
                    customClass: {
                        popup: "Dialog",
                        container: "container",
                        content: "content",
                        title: "title",
                        closeButton: "button closeButton",
                        cancelButton: "button cancelButton",
                        confirmButton: "button confirmButton",
                        denyButton: "button denyButton"
                    },
                    title: this.model.get("strings").censor_prompt,
                    text: n,
                    showCancelButton: !0,
                    confirmButtonText: this.model.get("strings").censor_confirm,
                    cancelButtonText: this.model.get("strings").censor_cancel,
                    confirmButtonColor: "#900"
                }).then(i => {
                    i.value && this.triggerMethod("client:message", {
                        action: "censor",
                        choice: e
                    })
                }), !1;
                this.triggerMethod("client:message", {
                    action: "censor",
                    choice: e
                })
            }
            return !1
        },
        onChildviewChildviewButtonSubmit() {
            let t = [];
            this.choicesList.children.forEach(n => {
                n.model.get("selected") && t.push(n.getOption("index"))
            });
            const e = t.join(",");
            this.model.get("isPlayer") ? this.triggerMethod("client:message", {
                action: "submit",
                choice: e
            }) : this.model.get("isAudience") && (this.triggerMethod("client:countGroup", {
                name: this.model.get("countGroupName"),
                vote: e
            }), this.model.get("type") !== "repeating" && (t = [], this.choicesList.children.forEach(n => {
                n.model.get("selected") && t.push(n.getOption("index"))
            }), this.selected = t, this.model.setUpdate({
                chosen: this.displayAudienceChoice(this.selected),
                choiceId: this.choiceId
            })))
        }
    });
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function eq(t, e) {
    var n = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
        var i = Object.getOwnPropertySymbols(t);
        e && (i = i.filter(function(o) {
            return Object.getOwnPropertyDescriptor(t, o).enumerable
        })), n.push.apply(n, i)
    }
    return n
}

function Oi(t) {
    for (var e = 1; e < arguments.length; e++) {
        var n = arguments[e] != null ? arguments[e] : {};
        e % 2 ? eq(Object(n), !0).forEach(function(i) {
            SC(t, i, n[i])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : eq(Object(n)).forEach(function(i) {
            Object.defineProperty(t, i, Object.getOwnPropertyDescriptor(n, i))
        })
    }
    return t
}

function kl(t) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? kl = function(e) {
        return typeof e
    } : kl = function(e) {
        return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, kl(t)
}

function SC(t, e, n) {
    return e in t ? Object.defineProperty(t, e, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : t[e] = n, t
}

function os() {
    return os = Object.assign || function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i])
        }
        return t
    }, os.apply(this, arguments)
}

function TC(t, e) {
    if (t == null) return {};
    var n = {},
        i = Object.keys(t),
        o, r;
    for (r = 0; r < i.length; r++) o = i[r], !(e.indexOf(o) >= 0) && (n[o] = t[o]);
    return n
}

function EC(t, e) {
    if (t == null) return {};
    var n = TC(t, e),
        i, o;
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(t);
        for (o = 0; o < r.length; o++) i = r[o], !(e.indexOf(i) >= 0) && (!Object.prototype.propertyIsEnumerable.call(t, i) || (n[i] = t[i]))
    }
    return n
}
var LC = "1.15.0";

function ns(t) {
    if (typeof window < "u" && window.navigator) return !!navigator.userAgent.match(t)
}
var ls = ns(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i),
    Jr = ns(/Edge/i),
    tq = ns(/firefox/i),
    Er = ns(/safari/i) && !ns(/chrome/i) && !ns(/android/i),
    F1 = ns(/iP(ad|od|hone)/i),
    j1 = ns(/chrome/i) && ns(/android/i),
    Q1 = {
        capture: !1,
        passive: !1
    };

function Bt(t, e, n) {
    t.addEventListener(e, n, !ls && Q1)
}

function St(t, e, n) {
    t.removeEventListener(e, n, !ls && Q1)
}

function jl(t, e) {
    if (!!e) {
        if (e[0] === ">" && (e = e.substring(1)), t) try {
            if (t.matches) return t.matches(e);
            if (t.msMatchesSelector) return t.msMatchesSelector(e);
            if (t.webkitMatchesSelector) return t.webkitMatchesSelector(e)
        } catch {
            return !1
        }
        return !1
    }
}

function BC(t) {
    return t.host && t !== document && t.host.nodeType ? t.host : t.parentNode
}

function Ci(t, e, n, i) {
    if (t) {
        n = n || document;
        do {
            if (e != null && (e[0] === ">" ? t.parentNode === n && jl(t, e) : jl(t, e)) || i && t === n) return t;
            if (t === n) break
        } while (t = BC(t))
    }
    return null
}
var nq = /\s+/g;

function Kn(t, e, n) {
    if (t && e)
        if (t.classList) t.classList[n ? "add" : "remove"](e);
        else {
            var i = (" " + t.className + " ").replace(nq, " ").replace(" " + e + " ", " ");
            t.className = (i + (n ? " " + e : "")).replace(nq, " ")
        }
}

function ct(t, e, n) {
    var i = t && t.style;
    if (i) {
        if (n === void 0) return document.defaultView && document.defaultView.getComputedStyle ? n = document.defaultView.getComputedStyle(t, "") : t.currentStyle && (n = t.currentStyle), e === void 0 ? n : n[e];
        !(e in i) && e.indexOf("webkit") === -1 && (e = "-webkit-" + e), i[e] = n + (typeof n == "string" ? "" : "px")
    }
}

function ra(t, e) {
    var n = "";
    if (typeof t == "string") n = t;
    else
        do {
            var i = ct(t, "transform");
            i && i !== "none" && (n = i + " " + n)
        } while (!e && (t = t.parentNode));
    var o = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
    return o && new o(n)
}

function z1(t, e, n) {
    if (t) {
        var i = t.getElementsByTagName(e),
            o = 0,
            r = i.length;
        if (n)
            for (; o < r; o++) n(i[o], o);
        return i
    }
    return []
}

function Li() {
    var t = document.scrollingElement;
    return t || document.documentElement
}

function An(t, e, n, i, o) {
    if (!(!t.getBoundingClientRect && t !== window)) {
        var r, V, A, c, d, m, q;
        if (t !== window && t.parentNode && t !== Li() ? (r = t.getBoundingClientRect(), V = r.top, A = r.left, c = r.bottom, d = r.right, m = r.height, q = r.width) : (V = 0, A = 0, c = window.innerHeight, d = window.innerWidth, m = window.innerHeight, q = window.innerWidth), (e || n) && t !== window && (o = o || t.parentNode, !ls))
            do
                if (o && o.getBoundingClientRect && (ct(o, "transform") !== "none" || n && ct(o, "position") !== "static")) {
                    var v = o.getBoundingClientRect();
                    V -= v.top + parseInt(ct(o, "border-top-width")), A -= v.left + parseInt(ct(o, "border-left-width")), c = V + r.height, d = A + r.width;
                    break
                } while (o = o.parentNode);
        if (i && t !== window) {
            var D = ra(o || t),
                S = D && D.a,
                C = D && D.d;
            D && (V /= C, A /= S, q /= S, m /= C, c = V + m, d = A + q)
        }
        return {
            top: V,
            left: A,
            bottom: c,
            right: d,
            width: q,
            height: m
        }
    }
}

function iq(t, e, n) {
    for (var i = us(t, !0), o = An(t)[e]; i;) {
        var r = An(i)[n],
            V = void 0;
        if (n === "top" || n === "left" ? V = o >= r : V = o <= r, !V) return i;
        if (i === Li()) break;
        i = us(i, !1)
    }
    return !1
}

function ga(t, e, n, i) {
    for (var o = 0, r = 0, V = t.children; r < V.length;) {
        if (V[r].style.display !== "none" && V[r] !== Vt.ghost && (i || V[r] !== Vt.dragged) && Ci(V[r], n.draggable, t, !1)) {
            if (o === e) return V[r];
            o++
        }
        r++
    }
    return null
}

function zu(t, e) {
    for (var n = t.lastElementChild; n && (n === Vt.ghost || ct(n, "display") === "none" || e && !jl(n, e));) n = n.previousElementSibling;
    return n || null
}

function li(t, e) {
    var n = 0;
    if (!t || !t.parentNode) return -1;
    for (; t = t.previousElementSibling;) t.nodeName.toUpperCase() !== "TEMPLATE" && t !== Vt.clone && (!e || jl(t, e)) && n++;
    return n
}

function sq(t) {
    var e = 0,
        n = 0,
        i = Li();
    if (t)
        do {
            var o = ra(t),
                r = o.a,
                V = o.d;
            e += t.scrollLeft * r, n += t.scrollTop * V
        } while (t !== i && (t = t.parentNode));
    return [e, n]
}

function MC(t, e) {
    for (var n in t)
        if (!!t.hasOwnProperty(n)) {
            for (var i in e)
                if (e.hasOwnProperty(i) && e[i] === t[n][i]) return Number(n)
        } return -1
}

function us(t, e) {
    if (!t || !t.getBoundingClientRect) return Li();
    var n = t,
        i = !1;
    do
        if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {
            var o = ct(n);
            if (n.clientWidth < n.scrollWidth && (o.overflowX == "auto" || o.overflowX == "scroll") || n.clientHeight < n.scrollHeight && (o.overflowY == "auto" || o.overflowY == "scroll")) {
                if (!n.getBoundingClientRect || n === document.body) return Li();
                if (i || e) return n;
                i = !0
            }
        } while (n = n.parentNode);
    return Li()
}

function OC(t, e) {
    if (t && e)
        for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
    return t
}

function oh(t, e) {
    return Math.round(t.top) === Math.round(e.top) && Math.round(t.left) === Math.round(e.left) && Math.round(t.height) === Math.round(e.height) && Math.round(t.width) === Math.round(e.width)
}
var Lr;

function H1(t, e) {
    return function() {
        if (!Lr) {
            var n = arguments,
                i = this;
            n.length === 1 ? t.call(i, n[0]) : t.apply(i, n), Lr = setTimeout(function() {
                Lr = void 0
            }, e)
        }
    }
}

function IC() {
    clearTimeout(Lr), Lr = void 0
}

function N1(t, e, n) {
    t.scrollLeft += e, t.scrollTop += n
}

function G1(t) {
    var e = window.Polymer,
        n = window.jQuery || window.Zepto;
    return e && e.dom ? e.dom(t).cloneNode(!0) : n ? n(t).clone(!0)[0] : t.cloneNode(!0)
}
var Zn = "Sortable" + new Date().getTime();

function PC() {
    var t = [],
        e;
    return {
        captureAnimationState: function() {
            if (t = [], !!this.options.animation) {
                var i = [].slice.call(this.el.children);
                i.forEach(function(o) {
                    if (!(ct(o, "display") === "none" || o === Vt.ghost)) {
                        t.push({
                            target: o,
                            rect: An(o)
                        });
                        var r = Oi({}, t[t.length - 1].rect);
                        if (o.thisAnimationDuration) {
                            var V = ra(o, !0);
                            V && (r.top -= V.f, r.left -= V.e)
                        }
                        o.fromRect = r
                    }
                })
            }
        },
        addAnimationState: function(i) {
            t.push(i)
        },
        removeAnimationState: function(i) {
            t.splice(MC(t, {
                target: i
            }), 1)
        },
        animateAll: function(i) {
            var o = this;
            if (!this.options.animation) {
                clearTimeout(e), typeof i == "function" && i();
                return
            }
            var r = !1,
                V = 0;
            t.forEach(function(A) {
                var c = 0,
                    d = A.target,
                    m = d.fromRect,
                    q = An(d),
                    v = d.prevFromRect,
                    D = d.prevToRect,
                    S = A.rect,
                    C = ra(d, !0);
                C && (q.top -= C.f, q.left -= C.e), d.toRect = q, d.thisAnimationDuration && oh(v, q) && !oh(m, q) && (S.top - q.top) / (S.left - q.left) === (m.top - q.top) / (m.left - q.left) && (c = FC(S, v, D, o.options)), oh(q, m) || (d.prevFromRect = m, d.prevToRect = q, c || (c = o.options.animation), o.animate(d, S, q, c)), c && (r = !0, V = Math.max(V, c), clearTimeout(d.animationResetTimer), d.animationResetTimer = setTimeout(function() {
                    d.animationTime = 0, d.prevFromRect = null, d.fromRect = null, d.prevToRect = null, d.thisAnimationDuration = null
                }, c), d.thisAnimationDuration = c)
            }), clearTimeout(e), r ? e = setTimeout(function() {
                typeof i == "function" && i()
            }, V) : typeof i == "function" && i(), t = []
        },
        animate: function(i, o, r, V) {
            if (V) {
                ct(i, "transition", ""), ct(i, "transform", "");
                var A = ra(this.el),
                    c = A && A.a,
                    d = A && A.d,
                    m = (o.left - r.left) / (c || 1),
                    q = (o.top - r.top) / (d || 1);
                i.animatingX = !!m, i.animatingY = !!q, ct(i, "transform", "translate3d(" + m + "px," + q + "px,0)"), this.forRepaintDummy = UC(i), ct(i, "transition", "transform " + V + "ms" + (this.options.easing ? " " + this.options.easing : "")), ct(i, "transform", "translate3d(0,0,0)"), typeof i.animated == "number" && clearTimeout(i.animated), i.animated = setTimeout(function() {
                    ct(i, "transition", ""), ct(i, "transform", ""), i.animated = !1, i.animatingX = !1, i.animatingY = !1
                }, V)
            }
        }
    }
}

function UC(t) {
    return t.offsetWidth
}

function FC(t, e, n, i) {
    return Math.sqrt(Math.pow(e.top - t.top, 2) + Math.pow(e.left - t.left, 2)) / Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) * i.animation
}
var Qo = [],
    ah = {
        initializeByDefault: !0
    },
    Zr = {
        mount: function(e) {
            for (var n in ah) ah.hasOwnProperty(n) && !(n in e) && (e[n] = ah[n]);
            Qo.forEach(function(i) {
                if (i.pluginName === e.pluginName) throw "Sortable: Cannot mount plugin ".concat(e.pluginName, " more than once")
            }), Qo.push(e)
        },
        pluginEvent: function(e, n, i) {
            var o = this;
            this.eventCanceled = !1, i.cancel = function() {
                o.eventCanceled = !0
            };
            var r = e + "Global";
            Qo.forEach(function(V) {
                !n[V.pluginName] || (n[V.pluginName][r] && n[V.pluginName][r](Oi({
                    sortable: n
                }, i)), n.options[V.pluginName] && n[V.pluginName][e] && n[V.pluginName][e](Oi({
                    sortable: n
                }, i)))
            })
        },
        initializePlugins: function(e, n, i, o) {
            Qo.forEach(function(A) {
                var c = A.pluginName;
                if (!(!e.options[c] && !A.initializeByDefault)) {
                    var d = new A(e, n, e.options);
                    d.sortable = e, d.options = e.options, e[c] = d, os(i, d.defaults)
                }
            });
            for (var r in e.options)
                if (!!e.options.hasOwnProperty(r)) {
                    var V = this.modifyOption(e, r, e.options[r]);
                    typeof V < "u" && (e.options[r] = V)
                }
        },
        getEventProperties: function(e, n) {
            var i = {};
            return Qo.forEach(function(o) {
                typeof o.eventProperties == "function" && os(i, o.eventProperties.call(n[o.pluginName], e))
            }), i
        },
        modifyOption: function(e, n, i) {
            var o;
            return Qo.forEach(function(r) {
                !e[r.pluginName] || r.optionListeners && typeof r.optionListeners[n] == "function" && (o = r.optionListeners[n].call(e[r.pluginName], i))
            }), o
        }
    };

function jC(t) {
    var e = t.sortable,
        n = t.rootEl,
        i = t.name,
        o = t.targetEl,
        r = t.cloneEl,
        V = t.toEl,
        A = t.fromEl,
        c = t.oldIndex,
        d = t.newIndex,
        m = t.oldDraggableIndex,
        q = t.newDraggableIndex,
        v = t.originalEvent,
        D = t.putSortable,
        S = t.extraEventProperties;
    if (e = e || n && n[Zn], !!e) {
        var C, h = e.options,
            w = "on" + i.charAt(0).toUpperCase() + i.substr(1);
        window.CustomEvent && !ls && !Jr ? C = new CustomEvent(i, {
            bubbles: !0,
            cancelable: !0
        }) : (C = document.createEvent("Event"), C.initEvent(i, !0, !0)), C.to = V || n, C.from = A || n, C.item = o || n, C.clone = r, C.oldIndex = c, C.newIndex = d, C.oldDraggableIndex = m, C.newDraggableIndex = q, C.originalEvent = v, C.pullMode = D ? D.lastPutMode : void 0;
        var T = Oi(Oi({}, S), Zr.getEventProperties(i, e));
        for (var M in T) C[M] = T[M];
        n && n.dispatchEvent(C), h[w] && h[w].call(e, C)
    }
}
var QC = ["evt"],
    Un = function(e, n) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
            o = i.evt,
            r = EC(i, QC);
        Zr.pluginEvent.bind(Vt)(e, n, Oi({
            dragEl: Fe,
            parentEl: en,
            ghostEl: ft,
            rootEl: Wt,
            nextEl: to,
            lastDownEl: Cl,
            cloneEl: _t,
            cloneHidden: ps,
            dragStarted: gr,
            putSortable: fn,
            activeSortable: Vt.active,
            originalEvent: o,
            oldIndex: Jo,
            oldDraggableIndex: Br,
            newIndex: Wn,
            newDraggableIndex: ds,
            hideGhostForTarget: W1,
            unhideGhostForTarget: J1,
            cloneNowHidden: function() {
                ps = !0
            },
            cloneNowShown: function() {
                ps = !1
            },
            dispatchSortableEvent: function(A) {
                Mn({
                    sortable: n,
                    name: A,
                    originalEvent: o
                })
            }
        }, r))
    };

function Mn(t) {
    jC(Oi({
        putSortable: fn,
        cloneEl: _t,
        targetEl: Fe,
        rootEl: Wt,
        oldIndex: Jo,
        oldDraggableIndex: Br,
        newIndex: Wn,
        newDraggableIndex: ds
    }, t))
}
var Fe, en, ft, Wt, to, Cl, _t, ps, Jo, Wn, Br, ds, ql, fn, Yo = !1,
    Ql = !1,
    zl = [],
    Ws, qi, rh, Vh, oq, aq, gr, zo, Mr, Or = !1,
    gl = !1,
    Rl, xn, lh = [],
    Qh = !1,
    Hl = [],
    pA = typeof document < "u",
    yl = F1,
    rq = Jr || ls ? "cssFloat" : "float",
    zC = pA && !j1 && !F1 && "draggable" in document.createElement("div"),
    X1 = function() {
        if (!!pA) {
            if (ls) return !1;
            var t = document.createElement("x");
            return t.style.cssText = "pointer-events:auto", t.style.pointerEvents === "auto"
        }
    }(),
    Y1 = function(e, n) {
        var i = ct(e),
            o = parseInt(i.width) - parseInt(i.paddingLeft) - parseInt(i.paddingRight) - parseInt(i.borderLeftWidth) - parseInt(i.borderRightWidth),
            r = ga(e, 0, n),
            V = ga(e, 1, n),
            A = r && ct(r),
            c = V && ct(V),
            d = A && parseInt(A.marginLeft) + parseInt(A.marginRight) + An(r).width,
            m = c && parseInt(c.marginLeft) + parseInt(c.marginRight) + An(V).width;
        if (i.display === "flex") return i.flexDirection === "column" || i.flexDirection === "column-reverse" ? "vertical" : "horizontal";
        if (i.display === "grid") return i.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
        if (r && A.float && A.float !== "none") {
            var q = A.float === "left" ? "left" : "right";
            return V && (c.clear === "both" || c.clear === q) ? "vertical" : "horizontal"
        }
        return r && (A.display === "block" || A.display === "flex" || A.display === "table" || A.display === "grid" || d >= o && i[rq] === "none" || V && i[rq] === "none" && d + m > o) ? "vertical" : "horizontal"
    },
    HC = function(e, n, i) {
        var o = i ? e.left : e.top,
            r = i ? e.right : e.bottom,
            V = i ? e.width : e.height,
            A = i ? n.left : n.top,
            c = i ? n.right : n.bottom,
            d = i ? n.width : n.height;
        return o === A || r === c || o + V / 2 === A + d / 2
    },
    NC = function(e, n) {
        var i;
        return zl.some(function(o) {
            var r = o[Zn].options.emptyInsertThreshold;
            if (!(!r || zu(o))) {
                var V = An(o),
                    A = e >= V.left - r && e <= V.right + r,
                    c = n >= V.top - r && n <= V.bottom + r;
                if (A && c) return i = o
            }
        }), i
    },
    K1 = function(e) {
        function n(r, V) {
            return function(A, c, d, m) {
                var q = A.options.group.name && c.options.group.name && A.options.group.name === c.options.group.name;
                if (r == null && (V || q)) return !0;
                if (r == null || r === !1) return !1;
                if (V && r === "clone") return r;
                if (typeof r == "function") return n(r(A, c, d, m), V)(A, c, d, m);
                var v = (V ? A : c).options.group.name;
                return r === !0 || typeof r == "string" && r === v || r.join && r.indexOf(v) > -1
            }
        }
        var i = {},
            o = e.group;
        (!o || kl(o) != "object") && (o = {
            name: o
        }), i.name = o.name, i.checkPull = n(o.pull, !0), i.checkPut = n(o.put), i.revertClone = o.revertClone, e.group = i
    },
    W1 = function() {
        !X1 && ft && ct(ft, "display", "none")
    },
    J1 = function() {
        !X1 && ft && ct(ft, "display", "")
    };
pA && !j1 && document.addEventListener("click", function(t) {
    if (Ql) return t.preventDefault(), t.stopPropagation && t.stopPropagation(), t.stopImmediatePropagation && t.stopImmediatePropagation(), Ql = !1, !1
}, !0);
var Js = function(e) {
        if (Fe) {
            e = e.touches ? e.touches[0] : e;
            var n = NC(e.clientX, e.clientY);
            if (n) {
                var i = {};
                for (var o in e) e.hasOwnProperty(o) && (i[o] = e[o]);
                i.target = i.rootEl = n, i.preventDefault = void 0, i.stopPropagation = void 0, n[Zn]._onDragOver(i)
            }
        }
    },
    GC = function(e) {
        Fe && Fe.parentNode[Zn]._isOutsideThisEl(e.target)
    };

function Vt(t, e) {
    if (!(t && t.nodeType && t.nodeType === 1)) throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(t));
    this.el = t, this.options = e = os({}, e), t[Zn] = this;
    var n = {
        group: null,
        sort: !0,
        disabled: !1,
        store: null,
        handle: null,
        draggable: /^[uo]l$/i.test(t.nodeName) ? ">li" : ">*",
        swapThreshold: 1,
        invertSwap: !1,
        invertedSwapThreshold: null,
        removeCloneOnHide: !0,
        direction: function() {
            return Y1(t, this.options)
        },
        ghostClass: "sortable-ghost",
        chosenClass: "sortable-chosen",
        dragClass: "sortable-drag",
        ignore: "a, img",
        filter: null,
        preventOnFilter: !0,
        animation: 0,
        easing: null,
        setData: function(V, A) {
            V.setData("Text", A.textContent)
        },
        dropBubble: !1,
        dragoverBubble: !1,
        dataIdAttr: "data-id",
        delay: 0,
        delayOnTouchOnly: !1,
        touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
        forceFallback: !1,
        fallbackClass: "sortable-fallback",
        fallbackOnBody: !1,
        fallbackTolerance: 0,
        fallbackOffset: {
            x: 0,
            y: 0
        },
        supportPointer: Vt.supportPointer !== !1 && "PointerEvent" in window && !Er,
        emptyInsertThreshold: 5
    };
    Zr.initializePlugins(this, t, n);
    for (var i in n) !(i in e) && (e[i] = n[i]);
    K1(e);
    for (var o in this) o.charAt(0) === "_" && typeof this[o] == "function" && (this[o] = this[o].bind(this));
    this.nativeDraggable = e.forceFallback ? !1 : zC, this.nativeDraggable && (this.options.touchStartThreshold = 1), e.supportPointer ? Bt(t, "pointerdown", this._onTapStart) : (Bt(t, "mousedown", this._onTapStart), Bt(t, "touchstart", this._onTapStart)), this.nativeDraggable && (Bt(t, "dragover", this), Bt(t, "dragenter", this)), zl.push(this.el), e.store && e.store.get && this.sort(e.store.get(this) || []), os(this, PC())
}
Vt.prototype = {
    constructor: Vt,
    _isOutsideThisEl: function(e) {
        !this.el.contains(e) && e !== this.el && (zo = null)
    },
    _getDirection: function(e, n) {
        return typeof this.options.direction == "function" ? this.options.direction.call(this, e, n, Fe) : this.options.direction
    },
    _onTapStart: function(e) {
        if (!!e.cancelable) {
            var n = this,
                i = this.el,
                o = this.options,
                r = o.preventOnFilter,
                V = e.type,
                A = e.touches && e.touches[0] || e.pointerType && e.pointerType === "touch" && e,
                c = (A || e).target,
                d = e.target.shadowRoot && (e.path && e.path[0] || e.composedPath && e.composedPath()[0]) || c,
                m = o.filter;
            if ($C(i), !Fe && !(/mousedown|pointerdown/.test(V) && e.button !== 0 || o.disabled) && !d.isContentEditable && !(!this.nativeDraggable && Er && c && c.tagName.toUpperCase() === "SELECT") && (c = Ci(c, o.draggable, i, !1), !(c && c.animated) && Cl !== c)) {
                if (Jo = li(c), Br = li(c, o.draggable), typeof m == "function") {
                    if (m.call(this, e, c, this)) {
                        Mn({
                            sortable: n,
                            rootEl: d,
                            name: "filter",
                            targetEl: c,
                            toEl: i,
                            fromEl: i
                        }), Un("filter", n, {
                            evt: e
                        }), r && e.cancelable && e.preventDefault();
                        return
                    }
                } else if (m && (m = m.split(",").some(function(q) {
                        if (q = Ci(d, q.trim(), i, !1), q) return Mn({
                            sortable: n,
                            rootEl: q,
                            name: "filter",
                            targetEl: c,
                            fromEl: i,
                            toEl: i
                        }), Un("filter", n, {
                            evt: e
                        }), !0
                    }), m)) {
                    r && e.cancelable && e.preventDefault();
                    return
                }
                o.handle && !Ci(d, o.handle, i, !1) || this._prepareDragStart(e, A, c)
            }
        }
    },
    _prepareDragStart: function(e, n, i) {
        var o = this,
            r = o.el,
            V = o.options,
            A = r.ownerDocument,
            c;
        if (i && !Fe && i.parentNode === r) {
            var d = An(i);
            if (Wt = r, Fe = i, en = Fe.parentNode, to = Fe.nextSibling, Cl = i, ql = V.group, Vt.dragged = Fe, Ws = {
                    target: Fe,
                    clientX: (n || e).clientX,
                    clientY: (n || e).clientY
                }, oq = Ws.clientX - d.left, aq = Ws.clientY - d.top, this._lastX = (n || e).clientX, this._lastY = (n || e).clientY, Fe.style["will-change"] = "all", c = function() {
                    if (Un("delayEnded", o, {
                            evt: e
                        }), Vt.eventCanceled) {
                        o._onDrop();
                        return
                    }
                    o._disableDelayedDragEvents(), !tq && o.nativeDraggable && (Fe.draggable = !0), o._triggerDragStart(e, n), Mn({
                        sortable: o,
                        name: "choose",
                        originalEvent: e
                    }), Kn(Fe, V.chosenClass, !0)
                }, V.ignore.split(",").forEach(function(m) {
                    z1(Fe, m.trim(), Ah)
                }), Bt(A, "dragover", Js), Bt(A, "mousemove", Js), Bt(A, "touchmove", Js), Bt(A, "mouseup", o._onDrop), Bt(A, "touchend", o._onDrop), Bt(A, "touchcancel", o._onDrop), tq && this.nativeDraggable && (this.options.touchStartThreshold = 4, Fe.draggable = !0), Un("delayStart", this, {
                    evt: e
                }), V.delay && (!V.delayOnTouchOnly || n) && (!this.nativeDraggable || !(Jr || ls))) {
                if (Vt.eventCanceled) {
                    this._onDrop();
                    return
                }
                Bt(A, "mouseup", o._disableDelayedDrag), Bt(A, "touchend", o._disableDelayedDrag), Bt(A, "touchcancel", o._disableDelayedDrag), Bt(A, "mousemove", o._delayedDragTouchMoveHandler), Bt(A, "touchmove", o._delayedDragTouchMoveHandler), V.supportPointer && Bt(A, "pointermove", o._delayedDragTouchMoveHandler), o._dragStartTimer = setTimeout(c, V.delay)
            } else c()
        }
    },
    _delayedDragTouchMoveHandler: function(e) {
        var n = e.touches ? e.touches[0] : e;
        Math.max(Math.abs(n.clientX - this._lastX), Math.abs(n.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag()
    },
    _disableDelayedDrag: function() {
        Fe && Ah(Fe), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents()
    },
    _disableDelayedDragEvents: function() {
        var e = this.el.ownerDocument;
        St(e, "mouseup", this._disableDelayedDrag), St(e, "touchend", this._disableDelayedDrag), St(e, "touchcancel", this._disableDelayedDrag), St(e, "mousemove", this._delayedDragTouchMoveHandler), St(e, "touchmove", this._delayedDragTouchMoveHandler), St(e, "pointermove", this._delayedDragTouchMoveHandler)
    },
    _triggerDragStart: function(e, n) {
        n = n || e.pointerType == "touch" && e, !this.nativeDraggable || n ? this.options.supportPointer ? Bt(document, "pointermove", this._onTouchMove) : n ? Bt(document, "touchmove", this._onTouchMove) : Bt(document, "mousemove", this._onTouchMove) : (Bt(Fe, "dragend", this), Bt(Wt, "dragstart", this._onDragStart));
        try {
            document.selection ? Dl(function() {
                document.selection.empty()
            }) : window.getSelection().removeAllRanges()
        } catch {}
    },
    _dragStarted: function(e, n) {
        if (Yo = !1, Wt && Fe) {
            Un("dragStarted", this, {
                evt: n
            }), this.nativeDraggable && Bt(document, "dragover", GC);
            var i = this.options;
            !e && Kn(Fe, i.dragClass, !1), Kn(Fe, i.ghostClass, !0), Vt.active = this, e && this._appendGhost(), Mn({
                sortable: this,
                name: "start",
                originalEvent: n
            })
        } else this._nulling()
    },
    _emulateDragOver: function() {
        if (qi) {
            this._lastX = qi.clientX, this._lastY = qi.clientY, W1();
            for (var e = document.elementFromPoint(qi.clientX, qi.clientY), n = e; e && e.shadowRoot && (e = e.shadowRoot.elementFromPoint(qi.clientX, qi.clientY), e !== n);) n = e;
            if (Fe.parentNode[Zn]._isOutsideThisEl(e), n)
                do {
                    if (n[Zn]) {
                        var i = void 0;
                        if (i = n[Zn]._onDragOver({
                                clientX: qi.clientX,
                                clientY: qi.clientY,
                                target: e,
                                rootEl: n
                            }), i && !this.options.dragoverBubble) break
                    }
                    e = n
                } while (n = n.parentNode);
            J1()
        }
    },
    _onTouchMove: function(e) {
        if (Ws) {
            var n = this.options,
                i = n.fallbackTolerance,
                o = n.fallbackOffset,
                r = e.touches ? e.touches[0] : e,
                V = ft && ra(ft, !0),
                A = ft && V && V.a,
                c = ft && V && V.d,
                d = yl && xn && sq(xn),
                m = (r.clientX - Ws.clientX + o.x) / (A || 1) + (d ? d[0] - lh[0] : 0) / (A || 1),
                q = (r.clientY - Ws.clientY + o.y) / (c || 1) + (d ? d[1] - lh[1] : 0) / (c || 1);
            if (!Vt.active && !Yo) {
                if (i && Math.max(Math.abs(r.clientX - this._lastX), Math.abs(r.clientY - this._lastY)) < i) return;
                this._onDragStart(e, !0)
            }
            if (ft) {
                V ? (V.e += m - (rh || 0), V.f += q - (Vh || 0)) : V = {
                    a: 1,
                    b: 0,
                    c: 0,
                    d: 1,
                    e: m,
                    f: q
                };
                var v = "matrix(".concat(V.a, ",").concat(V.b, ",").concat(V.c, ",").concat(V.d, ",").concat(V.e, ",").concat(V.f, ")");
                ct(ft, "webkitTransform", v), ct(ft, "mozTransform", v), ct(ft, "msTransform", v), ct(ft, "transform", v), rh = m, Vh = q, qi = r
            }
            e.cancelable && e.preventDefault()
        }
    },
    _appendGhost: function() {
        if (!ft) {
            var e = this.options.fallbackOnBody ? document.body : Wt,
                n = An(Fe, !0, yl, !0, e),
                i = this.options;
            if (yl) {
                for (xn = e; ct(xn, "position") === "static" && ct(xn, "transform") === "none" && xn !== document;) xn = xn.parentNode;
                xn !== document.body && xn !== document.documentElement ? (xn === document && (xn = Li()), n.top += xn.scrollTop, n.left += xn.scrollLeft) : xn = Li(), lh = sq(xn)
            }
            ft = Fe.cloneNode(!0), Kn(ft, i.ghostClass, !1), Kn(ft, i.fallbackClass, !0), Kn(ft, i.dragClass, !0), ct(ft, "transition", ""), ct(ft, "transform", ""), ct(ft, "box-sizing", "border-box"), ct(ft, "margin", 0), ct(ft, "top", n.top), ct(ft, "left", n.left), ct(ft, "width", n.width), ct(ft, "height", n.height), ct(ft, "opacity", "0.8"), ct(ft, "position", yl ? "absolute" : "fixed"), ct(ft, "zIndex", "100000"), ct(ft, "pointerEvents", "none"), Vt.ghost = ft, e.appendChild(ft), ct(ft, "transform-origin", oq / parseInt(ft.style.width) * 100 + "% " + aq / parseInt(ft.style.height) * 100 + "%")
        }
    },
    _onDragStart: function(e, n) {
        var i = this,
            o = e.dataTransfer,
            r = i.options;
        if (Un("dragStart", this, {
                evt: e
            }), Vt.eventCanceled) {
            this._onDrop();
            return
        }
        Un("setupClone", this), Vt.eventCanceled || (_t = G1(Fe), _t.removeAttribute("id"), _t.draggable = !1, _t.style["will-change"] = "", this._hideClone(), Kn(_t, this.options.chosenClass, !1), Vt.clone = _t), i.cloneId = Dl(function() {
            Un("clone", i), !Vt.eventCanceled && (i.options.removeCloneOnHide || Wt.insertBefore(_t, Fe), i._hideClone(), Mn({
                sortable: i,
                name: "clone"
            }))
        }), !n && Kn(Fe, r.dragClass, !0), n ? (Ql = !0, i._loopId = setInterval(i._emulateDragOver, 50)) : (St(document, "mouseup", i._onDrop), St(document, "touchend", i._onDrop), St(document, "touchcancel", i._onDrop), o && (o.effectAllowed = "move", r.setData && r.setData.call(i, o, Fe)), Bt(document, "drop", i), ct(Fe, "transform", "translateZ(0)")), Yo = !0, i._dragStartId = Dl(i._dragStarted.bind(i, n, e)), Bt(document, "selectstart", i), gr = !0, Er && ct(document.body, "user-select", "none")
    },
    _onDragOver: function(e) {
        var n = this.el,
            i = e.target,
            o, r, V, A = this.options,
            c = A.group,
            d = Vt.active,
            m = ql === c,
            q = A.sort,
            v = fn || d,
            D, S = this,
            C = !1;
        if (Qh) return;

        function h(qe, ge) {
            Un(qe, S, Oi({
                evt: e,
                isOwner: m,
                axis: D ? "vertical" : "horizontal",
                revert: V,
                dragRect: o,
                targetRect: r,
                canSort: q,
                fromSortable: v,
                target: i,
                completed: T,
                onMove: function(Le, Ge) {
                    return bl(Wt, n, Fe, o, Le, An(Le), e, Ge)
                },
                changed: M
            }, ge))
        }

        function w() {
            h("dragOverAnimationCapture"), S.captureAnimationState(), S !== v && v.captureAnimationState()
        }

        function T(qe) {
            return h("dragOverCompleted", {
                insertion: qe
            }), qe && (m ? d._hideClone() : d._showClone(S), S !== v && (Kn(Fe, fn ? fn.options.ghostClass : d.options.ghostClass, !1), Kn(Fe, A.ghostClass, !0)), fn !== S && S !== Vt.active ? fn = S : S === Vt.active && fn && (fn = null), v === S && (S._ignoreWhileAnimating = i), S.animateAll(function() {
                h("dragOverAnimationComplete"), S._ignoreWhileAnimating = null
            }), S !== v && (v.animateAll(), v._ignoreWhileAnimating = null)), (i === Fe && !Fe.animated || i === n && !i.animated) && (zo = null), !A.dragoverBubble && !e.rootEl && i !== document && (Fe.parentNode[Zn]._isOutsideThisEl(e.target), !qe && Js(e)), !A.dragoverBubble && e.stopPropagation && e.stopPropagation(), C = !0
        }

        function M() {
            Wn = li(Fe), ds = li(Fe, A.draggable), Mn({
                sortable: S,
                name: "change",
                toEl: n,
                newIndex: Wn,
                newDraggableIndex: ds,
                originalEvent: e
            })
        }
        if (e.preventDefault !== void 0 && e.cancelable && e.preventDefault(), i = Ci(i, A.draggable, n, !0), h("dragOver"), Vt.eventCanceled) return C;
        if (Fe.contains(e.target) || i.animated && i.animatingX && i.animatingY || S._ignoreWhileAnimating === i) return T(!1);
        if (Ql = !1, d && !A.disabled && (m ? q || (V = en !== Wt) : fn === this || (this.lastPutMode = ql.checkPull(this, d, Fe, e)) && c.checkPut(this, d, Fe, e))) {
            if (D = this._getDirection(e, i) === "vertical", o = An(Fe), h("dragOverValid"), Vt.eventCanceled) return C;
            if (V) return en = Wt, w(), this._hideClone(), h("revert"), Vt.eventCanceled || (to ? Wt.insertBefore(Fe, to) : Wt.appendChild(Fe)), T(!0);
            var O = zu(n, A.draggable);
            if (!O || WC(e, D, this) && !O.animated) {
                if (O === Fe) return T(!1);
                if (O && n === e.target && (i = O), i && (r = An(i)), bl(Wt, n, Fe, o, i, r, e, !!i) !== !1) return w(), O && O.nextSibling ? n.insertBefore(Fe, O.nextSibling) : n.appendChild(Fe), en = n, M(), T(!0)
            } else if (O && KC(e, D, this)) {
                var Q = ga(n, 0, A, !0);
                if (Q === Fe) return T(!1);
                if (i = Q, r = An(i), bl(Wt, n, Fe, o, i, r, e, !1) !== !1) return w(), n.insertBefore(Fe, Q), en = n, M(), T(!0)
            } else if (i.parentNode === n) {
                r = An(i);
                var u = 0,
                    J, se = Fe.parentNode !== n,
                    te = !HC(Fe.animated && Fe.toRect || o, i.animated && i.toRect || r, D),
                    ve = D ? "top" : "left",
                    be = iq(i, "top", "top") || iq(Fe, "top", "top"),
                    oe = be ? be.scrollTop : void 0;
                zo !== i && (J = r[ve], Or = !1, gl = !te && A.invertSwap || se), u = JC(e, i, r, D, te ? 1 : A.swapThreshold, A.invertedSwapThreshold == null ? A.swapThreshold : A.invertedSwapThreshold, gl, zo === i);
                var Ie;
                if (u !== 0) {
                    var Y = li(Fe);
                    do Y -= u, Ie = en.children[Y]; while (Ie && (ct(Ie, "display") === "none" || Ie === ft))
                }
                if (u === 0 || Ie === i) return T(!1);
                zo = i, Mr = u;
                var re = i.nextElementSibling,
                    ue = !1;
                ue = u === 1;
                var fe = bl(Wt, n, Fe, o, i, r, e, ue);
                if (fe !== !1) return (fe === 1 || fe === -1) && (ue = fe === 1), Qh = !0, setTimeout(YC, 30), w(), ue && !re ? n.appendChild(Fe) : i.parentNode.insertBefore(Fe, ue ? re : i), be && N1(be, 0, oe - be.scrollTop), en = Fe.parentNode, J !== void 0 && !gl && (Rl = Math.abs(J - An(i)[ve])), M(), T(!0)
            }
            if (n.contains(Fe)) return T(!1)
        }
        return !1
    },
    _ignoreWhileAnimating: null,
    _offMoveEvents: function() {
        St(document, "mousemove", this._onTouchMove), St(document, "touchmove", this._onTouchMove), St(document, "pointermove", this._onTouchMove), St(document, "dragover", Js), St(document, "mousemove", Js), St(document, "touchmove", Js)
    },
    _offUpEvents: function() {
        var e = this.el.ownerDocument;
        St(e, "mouseup", this._onDrop), St(e, "touchend", this._onDrop), St(e, "pointerup", this._onDrop), St(e, "touchcancel", this._onDrop), St(document, "selectstart", this)
    },
    _onDrop: function(e) {
        var n = this.el,
            i = this.options;
        if (Wn = li(Fe), ds = li(Fe, i.draggable), Un("drop", this, {
                evt: e
            }), en = Fe && Fe.parentNode, Wn = li(Fe), ds = li(Fe, i.draggable), Vt.eventCanceled) {
            this._nulling();
            return
        }
        Yo = !1, gl = !1, Or = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), zh(this.cloneId), zh(this._dragStartId), this.nativeDraggable && (St(document, "drop", this), St(n, "dragstart", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), Er && ct(document.body, "user-select", ""), ct(Fe, "transform", ""), e && (gr && (e.cancelable && e.preventDefault(), !i.dropBubble && e.stopPropagation()), ft && ft.parentNode && ft.parentNode.removeChild(ft), (Wt === en || fn && fn.lastPutMode !== "clone") && _t && _t.parentNode && _t.parentNode.removeChild(_t), Fe && (this.nativeDraggable && St(Fe, "dragend", this), Ah(Fe), Fe.style["will-change"] = "", gr && !Yo && Kn(Fe, fn ? fn.options.ghostClass : this.options.ghostClass, !1), Kn(Fe, this.options.chosenClass, !1), Mn({
            sortable: this,
            name: "unchoose",
            toEl: en,
            newIndex: null,
            newDraggableIndex: null,
            originalEvent: e
        }), Wt !== en ? (Wn >= 0 && (Mn({
            rootEl: en,
            name: "add",
            toEl: en,
            fromEl: Wt,
            originalEvent: e
        }), Mn({
            sortable: this,
            name: "remove",
            toEl: en,
            originalEvent: e
        }), Mn({
            rootEl: en,
            name: "sort",
            toEl: en,
            fromEl: Wt,
            originalEvent: e
        }), Mn({
            sortable: this,
            name: "sort",
            toEl: en,
            originalEvent: e
        })), fn && fn.save()) : Wn !== Jo && Wn >= 0 && (Mn({
            sortable: this,
            name: "update",
            toEl: en,
            originalEvent: e
        }), Mn({
            sortable: this,
            name: "sort",
            toEl: en,
            originalEvent: e
        })), Vt.active && ((Wn == null || Wn === -1) && (Wn = Jo, ds = Br), Mn({
            sortable: this,
            name: "end",
            toEl: en,
            originalEvent: e
        }), this.save()))), this._nulling()
    },
    _nulling: function() {
        Un("nulling", this), Wt = Fe = en = ft = to = _t = Cl = ps = Ws = qi = gr = Wn = ds = Jo = Br = zo = Mr = fn = ql = Vt.dragged = Vt.ghost = Vt.clone = Vt.active = null, Hl.forEach(function(e) {
            e.checked = !0
        }), Hl.length = rh = Vh = 0
    },
    handleEvent: function(e) {
        switch (e.type) {
            case "drop":
            case "dragend":
                this._onDrop(e);
                break;
            case "dragenter":
            case "dragover":
                Fe && (this._onDragOver(e), XC(e));
                break;
            case "selectstart":
                e.preventDefault();
                break
        }
    },
    toArray: function() {
        for (var e = [], n, i = this.el.children, o = 0, r = i.length, V = this.options; o < r; o++) n = i[o], Ci(n, V.draggable, this.el, !1) && e.push(n.getAttribute(V.dataIdAttr) || _C(n));
        return e
    },
    sort: function(e, n) {
        var i = {},
            o = this.el;
        this.toArray().forEach(function(r, V) {
            var A = o.children[V];
            Ci(A, this.options.draggable, o, !1) && (i[r] = A)
        }, this), n && this.captureAnimationState(), e.forEach(function(r) {
            i[r] && (o.removeChild(i[r]), o.appendChild(i[r]))
        }), n && this.animateAll()
    },
    save: function() {
        var e = this.options.store;
        e && e.set && e.set(this)
    },
    closest: function(e, n) {
        return Ci(e, n || this.options.draggable, this.el, !1)
    },
    option: function(e, n) {
        var i = this.options;
        if (n === void 0) return i[e];
        var o = Zr.modifyOption(this, e, n);
        typeof o < "u" ? i[e] = o : i[e] = n, e === "group" && K1(i)
    },
    destroy: function() {
        Un("destroy", this);
        var e = this.el;
        e[Zn] = null, St(e, "mousedown", this._onTapStart), St(e, "touchstart", this._onTapStart), St(e, "pointerdown", this._onTapStart), this.nativeDraggable && (St(e, "dragover", this), St(e, "dragenter", this)), Array.prototype.forEach.call(e.querySelectorAll("[draggable]"), function(n) {
            n.removeAttribute("draggable")
        }), this._onDrop(), this._disableDelayedDragEvents(), zl.splice(zl.indexOf(this.el), 1), this.el = e = null
    },
    _hideClone: function() {
        if (!ps) {
            if (Un("hideClone", this), Vt.eventCanceled) return;
            ct(_t, "display", "none"), this.options.removeCloneOnHide && _t.parentNode && _t.parentNode.removeChild(_t), ps = !0
        }
    },
    _showClone: function(e) {
        if (e.lastPutMode !== "clone") {
            this._hideClone();
            return
        }
        if (ps) {
            if (Un("showClone", this), Vt.eventCanceled) return;
            Fe.parentNode == Wt && !this.options.group.revertClone ? Wt.insertBefore(_t, Fe) : to ? Wt.insertBefore(_t, to) : Wt.appendChild(_t), this.options.group.revertClone && this.animate(Fe, _t), ct(_t, "display", ""), ps = !1
        }
    }
};

function XC(t) {
    t.dataTransfer && (t.dataTransfer.dropEffect = "move"), t.cancelable && t.preventDefault()
}

function bl(t, e, n, i, o, r, V, A) {
    var c, d = t[Zn],
        m = d.options.onMove,
        q;
    return window.CustomEvent && !ls && !Jr ? c = new CustomEvent("move", {
        bubbles: !0,
        cancelable: !0
    }) : (c = document.createEvent("Event"), c.initEvent("move", !0, !0)), c.to = e, c.from = t, c.dragged = n, c.draggedRect = i, c.related = o || e, c.relatedRect = r || An(e), c.willInsertAfter = A, c.originalEvent = V, t.dispatchEvent(c), m && (q = m.call(d, c, V)), q
}

function Ah(t) {
    t.draggable = !1
}

function YC() {
    Qh = !1
}

function KC(t, e, n) {
    var i = An(ga(n.el, 0, n.options, !0)),
        o = 10;
    return e ? t.clientX < i.left - o || t.clientY < i.top && t.clientX < i.right : t.clientY < i.top - o || t.clientY < i.bottom && t.clientX < i.left
}

function WC(t, e, n) {
    var i = An(zu(n.el, n.options.draggable)),
        o = 10;
    return e ? t.clientX > i.right + o || t.clientX <= i.right && t.clientY > i.bottom && t.clientX >= i.left : t.clientX > i.right && t.clientY > i.top || t.clientX <= i.right && t.clientY > i.bottom + o
}

function JC(t, e, n, i, o, r, V, A) {
    var c = i ? t.clientY : t.clientX,
        d = i ? n.height : n.width,
        m = i ? n.top : n.left,
        q = i ? n.bottom : n.right,
        v = !1;
    if (!V) {
        if (A && Rl < d * o) {
            if (!Or && (Mr === 1 ? c > m + d * r / 2 : c < q - d * r / 2) && (Or = !0), Or) v = !0;
            else if (Mr === 1 ? c < m + Rl : c > q - Rl) return -Mr
        } else if (c > m + d * (1 - o) / 2 && c < q - d * (1 - o) / 2) return ZC(e)
    }
    return v = v || V, v && (c < m + d * r / 2 || c > q - d * r / 2) ? c > m + d / 2 ? 1 : -1 : 0
}

function ZC(t) {
    return li(Fe) < li(t) ? 1 : -1
}

function _C(t) {
    for (var e = t.tagName + t.className + t.src + t.href + t.textContent, n = e.length, i = 0; n--;) i += e.charCodeAt(n);
    return i.toString(36)
}

function $C(t) {
    Hl.length = 0;
    for (var e = t.getElementsByTagName("input"), n = e.length; n--;) {
        var i = e[n];
        i.checked && Hl.push(i)
    }
}

function Dl(t) {
    return setTimeout(t, 0)
}

function zh(t) {
    return clearTimeout(t)
}
pA && Bt(document, "touchmove", function(t) {
    (Vt.active || Yo) && t.cancelable && t.preventDefault()
});
Vt.utils = {
    on: Bt,
    off: St,
    css: ct,
    find: z1,
    is: function(e, n) {
        return !!Ci(e, n, e, !1)
    },
    extend: OC,
    throttle: H1,
    closest: Ci,
    toggleClass: Kn,
    clone: G1,
    index: li,
    nextTick: Dl,
    cancelNextTick: zh,
    detectDirection: Y1,
    getChild: ga
};
Vt.get = function(t) {
    return t[Zn]
};
Vt.mount = function() {
    for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
    e[0].constructor === Array && (e = e[0]), e.forEach(function(i) {
        if (!i.prototype || !i.prototype.constructor) throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(i));
        i.utils && (Vt.utils = Oi(Oi({}, Vt.utils), i.utils)), Zr.mount(i)
    })
};
Vt.create = function(t, e) {
    return new Vt(t, e)
};
Vt.version = LC;
var rn = [],
    yr, Hh, Nh = !1,
    ch, dh, Nl, br;

function eR() {
    function t() {
        this.defaults = {
            scroll: !0,
            forceAutoScrollFallback: !1,
            scrollSensitivity: 30,
            scrollSpeed: 10,
            bubbleScroll: !0
        };
        for (var e in this) e.charAt(0) === "_" && typeof this[e] == "function" && (this[e] = this[e].bind(this))
    }
    return t.prototype = {
        dragStarted: function(n) {
            var i = n.originalEvent;
            this.sortable.nativeDraggable ? Bt(document, "dragover", this._handleAutoScroll) : this.options.supportPointer ? Bt(document, "pointermove", this._handleFallbackAutoScroll) : i.touches ? Bt(document, "touchmove", this._handleFallbackAutoScroll) : Bt(document, "mousemove", this._handleFallbackAutoScroll)
        },
        dragOverCompleted: function(n) {
            var i = n.originalEvent;
            !this.options.dragOverBubble && !i.rootEl && this._handleAutoScroll(i)
        },
        drop: function() {
            this.sortable.nativeDraggable ? St(document, "dragover", this._handleAutoScroll) : (St(document, "pointermove", this._handleFallbackAutoScroll), St(document, "touchmove", this._handleFallbackAutoScroll), St(document, "mousemove", this._handleFallbackAutoScroll)), Vq(), Sl(), IC()
        },
        nulling: function() {
            Nl = Hh = yr = Nh = br = ch = dh = null, rn.length = 0
        },
        _handleFallbackAutoScroll: function(n) {
            this._handleAutoScroll(n, !0)
        },
        _handleAutoScroll: function(n, i) {
            var o = this,
                r = (n.touches ? n.touches[0] : n).clientX,
                V = (n.touches ? n.touches[0] : n).clientY,
                A = document.elementFromPoint(r, V);
            if (Nl = n, i || this.options.forceAutoScrollFallback || Jr || ls || Er) {
                ph(n, this.options, A, i);
                var c = us(A, !0);
                Nh && (!br || r !== ch || V !== dh) && (br && Vq(), br = setInterval(function() {
                    var d = us(document.elementFromPoint(r, V), !0);
                    d !== c && (c = d, Sl()), ph(n, o.options, d, i)
                }, 10), ch = r, dh = V)
            } else {
                if (!this.options.bubbleScroll || us(A, !0) === Li()) {
                    Sl();
                    return
                }
                ph(n, this.options, us(A, !1), !1)
            }
        }
    }, os(t, {
        pluginName: "scroll",
        initializeByDefault: !0
    })
}

function Sl() {
    rn.forEach(function(t) {
        clearInterval(t.pid)
    }), rn = []
}

function Vq() {
    clearInterval(br)
}
var ph = H1(function(t, e, n, i) {
        if (!!e.scroll) {
            var o = (t.touches ? t.touches[0] : t).clientX,
                r = (t.touches ? t.touches[0] : t).clientY,
                V = e.scrollSensitivity,
                A = e.scrollSpeed,
                c = Li(),
                d = !1,
                m;
            Hh !== n && (Hh = n, Sl(), yr = e.scroll, m = e.scrollFn, yr === !0 && (yr = us(n, !0)));
            var q = 0,
                v = yr;
            do {
                var D = v,
                    S = An(D),
                    C = S.top,
                    h = S.bottom,
                    w = S.left,
                    T = S.right,
                    M = S.width,
                    O = S.height,
                    Q = void 0,
                    u = void 0,
                    J = D.scrollWidth,
                    se = D.scrollHeight,
                    te = ct(D),
                    ve = D.scrollLeft,
                    be = D.scrollTop;
                D === c ? (Q = M < J && (te.overflowX === "auto" || te.overflowX === "scroll" || te.overflowX === "visible"), u = O < se && (te.overflowY === "auto" || te.overflowY === "scroll" || te.overflowY === "visible")) : (Q = M < J && (te.overflowX === "auto" || te.overflowX === "scroll"), u = O < se && (te.overflowY === "auto" || te.overflowY === "scroll"));
                var oe = Q && (Math.abs(T - o) <= V && ve + M < J) - (Math.abs(w - o) <= V && !!ve),
                    Ie = u && (Math.abs(h - r) <= V && be + O < se) - (Math.abs(C - r) <= V && !!be);
                if (!rn[q])
                    for (var Y = 0; Y <= q; Y++) rn[Y] || (rn[Y] = {});
                (rn[q].vx != oe || rn[q].vy != Ie || rn[q].el !== D) && (rn[q].el = D, rn[q].vx = oe, rn[q].vy = Ie, clearInterval(rn[q].pid), (oe != 0 || Ie != 0) && (d = !0, rn[q].pid = setInterval(function() {
                    i && this.layer === 0 && Vt.active._onTouchMove(Nl);
                    var re = rn[this.layer].vy ? rn[this.layer].vy * A : 0,
                        ue = rn[this.layer].vx ? rn[this.layer].vx * A : 0;
                    typeof m == "function" && m.call(Vt.dragged.parentNode[Zn], ue, re, t, Nl, rn[this.layer].el) !== "continue" || N1(rn[this.layer].el, ue, re)
                }.bind({
                    layer: q
                }), 24))), q++
            } while (e.bubbleScroll && v !== c && (v = us(v, !1)));
            Nh = d
        }
    }, 30),
    Z1 = function(e) {
        var n = e.originalEvent,
            i = e.putSortable,
            o = e.dragEl,
            r = e.activeSortable,
            V = e.dispatchSortableEvent,
            A = e.hideGhostForTarget,
            c = e.unhideGhostForTarget;
        if (!!n) {
            var d = i || r;
            A();
            var m = n.changedTouches && n.changedTouches.length ? n.changedTouches[0] : n,
                q = document.elementFromPoint(m.clientX, m.clientY);
            c(), d && !d.el.contains(q) && (V("spill"), this.onSpill({
                dragEl: o,
                putSortable: i
            }))
        }
    };

function Hu() {}
Hu.prototype = {
    startIndex: null,
    dragStart: function(e) {
        var n = e.oldDraggableIndex;
        this.startIndex = n
    },
    onSpill: function(e) {
        var n = e.dragEl,
            i = e.putSortable;
        this.sortable.captureAnimationState(), i && i.captureAnimationState();
        var o = ga(this.sortable.el, this.startIndex, this.options);
        o ? this.sortable.el.insertBefore(n, o) : this.sortable.el.appendChild(n), this.sortable.animateAll(), i && i.animateAll()
    },
    drop: Z1
};
os(Hu, {
    pluginName: "revertOnSpill"
});

function Nu() {}
Nu.prototype = {
    onSpill: function(e) {
        var n = e.dragEl,
            i = e.putSortable,
            o = i || this.sortable;
        o.captureAnimationState(), n.parentNode && n.parentNode.removeChild(n), o.animateAll()
    },
    drop: Z1
};
os(Nu, {
    pluginName: "removeOnSpill"
});
Vt.mount(new eR);
Vt.mount(Nu, Hu);
const tR = `<div id="controller" class="state-controller controller-content">\r
    <div id="prompt" class="prompt text"></div>\r
    <div class="error text-danger"></div>\r
    <div id="choicesRegion"></div>\r
    <div id="chosen" class="chosen text"></div>\r
    <div class="makeSingleChoiceDone">\r
        <span class="doneText"></span>\r
    </div>\r
</div>`,
    nR = Ht.extend({
        defaults: {
            choiceId: void 0,
            type: "single",
            censorDialog: "none",
            chosen: null,
            choices: [],
            prompt: {},
            error: null,
            block: !0,
            classes: [],
            maxVotes: 16,
            doneText: {},
            announcePrompt: !1,
            strings: {
                your_choice: "Thank you. Your choice: ",
                censor_prompt: "Censor this?",
                censor_confirm: "Yes, Censor!",
                censor_cancel: "No!"
            }
        }
    }),
    iR = je.View.extend({
        tagName: "div",
        className: "sortable-item",
        template: ke.template("<div class='text'></div>"),
        model: new ze.Model({}),
        bindings: {
            ":el": {
                attributes: [{
                    name: "data-id",
                    observe: "key"
                }]
            },
            ".text": "html"
        },
        onAttach() {
            this.stickit()
        }
    }),
    lq = je.CollectionView.extend({
        tagName: "div",
        className: "sortable-collection",
        childView: iR,
        collection: new ze.Collection([]),
        initialize(t) {
            this.listenTo(this.collection, "sync", this.render), this.mergeOptions(t, ["block"])
        }
    }),
    sR = je.View.extend({
        className: "SorterView",
        template: ke.template(`
        <div id="rankedChoicesRegion"></div>
        <div class="instructions">Choose where this item ranks:</div>
        <div id="unrankedChoicesRegion"></div>
        <div id="lockInRegion"></div>
    `),
        model: new ze.Model({
            rankedLength: 1,
            choices: []
        }),
        bindings: {
            ".instructions": {
                observe: "rankedLength",
                visible: !0,
                onGet(t) {
                    return t < 3
                }
            },
            "#unrankedChoicesRegion": {
                observe: ["rankedLength", "choices"],
                visible: !0,
                onGet(t) {
                    return t[0] !== t[1].length
                }
            },
            "#lockInRegion": {
                observe: ["rankedLength", "choices"],
                visible: !0,
                onGet(t) {
                    return t[0] === t[1].length
                }
            }
        },
        regions: {
            rankedChoices: "#rankedChoicesRegion",
            unrankedChoices: "#unrankedChoicesRegion",
            lockInRegion: "#lockInRegion"
        },
        initialize() {
            this.rankedCollectionView = this.rankedCollectionView || new lq({
                collection: new ze.Collection([])
            }), this.unrankedCollectionView = this.unrankedCollectionView || new lq({
                className: "sortable-collection unranked",
                collection: new ze.Collection([])
            }), this.lockInView = this.lockInView || new M1({
                block: !1,
                model: new ze.Model({
                    action: "lock",
                    html: "Lock In"
                })
            }), this.listenTo(this.model, "change:choices", this.update, this)
        },
        onAttach() {
            this.showChildView("rankedChoices", this.rankedCollectionView), this.showChildView("unrankedChoices", this.unrankedCollectionView), this.showChildView("lockInRegion", this.lockInView), this.stickit(), this.update()
        },
        update() {
            const t = this.model.get("choices"),
                e = t.slice(0, 1),
                n = t.slice(1);
            this.rankedSortable && this.rankedSortable.destroy(), this.rankedCollectionView.collection.set(e), this.rankedSortable = Vt.create(this.rankedCollectionView.el, {
                group: "shared",
                onSort: this.handleOnSort.bind(this),
                animation: 100,
                delay: 100
            }), this.unrankedSortable && this.unrankedSortable.destroy(), this.unrankedCollectionView.collection.set(n), this.unrankedSortable = Vt.create(this.unrankedCollectionView.el, {
                className: "unranked",
                group: {
                    name: "shared",
                    put: !1
                },
                sort: !1
            })
        },
        moveItemInArray(t, e, n) {
            const i = t.slice(0);
            if (e === n) return i;
            const o = i[e];
            return i.splice(e, 1), i.splice(n, 0, o), i
        },
        handleOnSort() {
            const t = this.model.get("choices"),
                e = this.rankedSortable.toArray();
            e.length === t.length && this.triggerMethod("sorted", e), this.model.set("rankedLength", e.length)
        },
        onChildviewButtonLock() {
            const t = this.rankedSortable.toArray();
            this.triggerMethod("lock", t)
        }
    }),
    oR = je.View.extend({
        className: "Sortable scrollable",
        template: ke.template(tR),
        model: new nR,
        regions: {
            prompt: "#prompt",
            choices: "#choicesRegion"
        },
        initialize() {
            this.promptComponent = this.promptComponent || new uo({
                model: new ze.Model
            }), this.sorterView = this.sorterView || new sR({}), this.listenTo(this.model, "change", this.update, this)
        },
        onAttach() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("choices", this.sorterView)
        },
        update() {
            this.promptComponent.model.set(this.model.get("prompt")), this.model.get("choices").length !== this.sorterView.model.get("choices").length && this.sorterView.model.set("choices", this.model.get("choices"))
        },
        onChildviewSorted(t) {
            this.triggerMethod("client:message", {
                action: "sort",
                order: t
            })
        },
        onChildviewLock(t) {
            this.triggerMethod("client:message", {
                action: "sort",
                lock: !0,
                order: t
            })
        }
    }),
    aR = `<div id="controller" class="state-controller controller-content">
	<div class="ugc-action-toggle-visibility">
    	<span class="text toggle_prompts_prompt">toggle_prompts_prompt</span><br/>
    	<button id="ugc-toggle-visibility-button-controller" class="ugc-toggle-visibility-button ugc-toggle-visibility-button-controller" data-target="controller"></button>
    	<button id="ugc-toggle-visibility-button-screen" class="ugc-toggle-visibility-button  ugc-toggle-visibility-button-screen" data-target="screen"></button>
    </div>
    <div class="ugc-action-play">
        <div class="ugc-episode-name"></div>
    </div>
	<div class="ugc-action-new">
		<button class="button action-button create_new_episode" type="button" id="ugc-new-button">create_new_episode</button>
	</div>

	<div class="ugc-action-load">
    	<p class="ugc-option text-box ugc-load previous_episodes">previous_episodes</p>
		<div id="episodesRegion"></div>
	</div>

    <div id="prompt" class="prompt ugc-text"></div>
    <div id="ugc-no-actions">
    	<div id="ugc-no-actions-text"></div>
    </div>

    <div class="ugc-action-add">
    	<div id="inputRegion"></div>
    </div>

    <div class="ugc-action-title">
		<p class="text-box">
            <span class='text create_new_name_prompt'>create_new_name_prompt</span>
        </p>
    	<div id="titleInputRegion"></div>
    </div>

    <div class="ugc-action-close">
    	<button class="button action-button button_close" data-action="close">button_close</button>
    </div>
    <div class="ugc-action-unlock">
    	<button class="button action-button button_edit" data-action="unlock">button_edit</button>
    </div>
	<div class="ugc-action-done">
    	<button class="button action-button button_done" data-action="done">button_done</button>
    </div>
	<div class="ugc-action-submit">
    	<button class="button action-button button_publish" data-action="submit">button_publish</button>
    </div>

    <div class="ugc-action-play">
        <button class="button action-button button_play" data-action="play">button_play</button>
    </div>

    <div class="ugc-action-remove-content">
        <button class="button action-button button_delete" data-action="remove-content">button_delete</button>
    </div>

    <div class="ugc-action-exit">
        <button class="button action-button button_back_to_menu" data-action="exit">button_back_to_menu</button>
    </div>

    <div class="ugc-action-episodes">
        <button class="button action-button button_back_to_episodes" data-action="episodes">button_back_to_episodes</button>
    </div>

    <div class="ugc-action-remove">
        <div id="promptsCount" class="promptsCount"></div>
    	<div id="promptsRegion"></div>
    </div>
</div>`,
    rR = Ht.extend({
        defaults: {
            controllerVisibility: !0,
            episodes: [],
            episodeTitle: "",
            index: 0,
            maxContentLength: 45,
            maxTitleLength: 20,
            name: "",
            noActionsText: "",
            prompts: [],
            screenVisibility: !0,
            state: "UGC",
            text: "",
            validActions: [],
            strings: {
                tos_warning: "By sharing content, you agree to our Terms of service",
                tos_warning_agree: "agree and share",
                tos_warning_back: "back to menu",
                create_new_episode: "create a new episode",
                create_new_name_prompt: "first things first, enter a name for the episode that will contain all your prompts and hit create.",
                create_new_button: "create",
                button_back_to_episodes: "back to episodes",
                button_back_to_menu: "back to menu",
                previous_episodes: "previous episodes:",
                toggle_prompts_prompt: "tap to show/hide prompts",
                button_close: "close",
                button_done: "done",
                button_add: "add prompt",
                input_placeholder: "enter a prompt",
                label_hidden: "hidden",
                button_edit: "edit",
                button_save: "save",
                button_publish: "publish",
                button_play: "play",
                button_delete: "delete",
                delete_warning: "Are you sure you want to delete this episode?",
                delete_warning_confirm: "Yes",
                delete_warning_cancel: "No"
            }
        }
    }),
    VR = je.View.extend({
        className: "UGC scrollable",
        template: ke.template(aR),
        model: new rR,
        regions: {
            prompt: "#prompt",
            episodes: "#episodesRegion",
            input: "#inputRegion",
            titleInput: "#titleInputRegion",
            prompts: "#promptsRegion"
        },
        events: {
            "click #ugc-new-button": "onNewButtonClicked",
            "click #ugc-toggle-visibility-button-controller": "onToggleVisibilityController",
            "click #ugc-toggle-visibility-button-screen": "onToggleVisibilityScreen",
            "click .action-button": "onActionButtonClicked"
        },
        bindings: {
            ".ugc-text": {
                observe: "text",
                visible: !0,
                updateView: !0
            },
            ".ugc-action-add": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("add") !== -1
                }
            },
            ".ugc-action-close": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("close") !== -1
                }
            },
            ".ugc-action-exit": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("exit") !== -1
                }
            },
            ".ugc-action-load": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("load") !== -1
                }
            },
            ".ugc-action-new": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("new") !== -1
                }
            },
            ".ugc-action-play": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("play") !== -1
                }
            },
            ".ugc-action-remove": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("remove") !== -1
                }
            },
            ".ugc-action-remove-content": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("remove-content") !== -1
                }
            },
            ".ugc-action-done": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("done") !== -1
                }
            },
            ".ugc-action-submit": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("submit") !== -1
                }
            },
            ".ugc-action-title": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("title") !== -1
                }
            },
            ".ugc-action-toggle-visibility": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("toggle-visibility") !== -1
                }
            },
            ".ugc-action-unlock": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("unlock") !== -1
                }
            },
            ".ugc-action-episodes": {
                observe: "validActions",
                visible(t) {
                    return t && t.indexOf("episodes") !== -1
                }
            },
            "#ugc-no-actions": {
                observe: "validActions",
                visible(t) {
                    return !t || t.length === 0
                }
            },
            "#ugc-no-actions-text": {
                observe: "noActionsText",
                onGet(t) {
                    return typeof t == "string" ? t : ""
                }
            },
            "#ugc-toggle-visibility-button-controller": {
                classes: {
                    on: "controllerVisibility"
                }
            },
            "#ugc-toggle-visibility-button-screen": {
                classes: {
                    on: "screenVisibility"
                }
            },
            ".ugc-episode-name": "episodeTitle",
            ".create_new_episode": {
                observe: "strings",
                onGet(t) {
                    return t.create_new_episode || "create_new_episode"
                }
            },
            ".previous_episodes": {
                observe: "strings",
                onGet(t) {
                    return t.previous_episodes || "previous_episodes"
                }
            },
            ".toggle_prompts_prompt": {
                observe: "strings",
                onGet(t) {
                    return t.toggle_prompts_prompt || "toggle_prompts_prompt"
                }
            },
            ".create_new_name_prompt": {
                observe: "strings",
                onGet(t) {
                    return t.create_new_name_prompt || "create_new_name_prompt"
                }
            },
            ".button_close": {
                observe: "strings",
                onGet(t) {
                    return t.button_close || "button_close"
                }
            },
            ".button_edit": {
                observe: "strings",
                onGet(t) {
                    return t.button_edit || "button_edit"
                }
            },
            ".button_done": {
                observe: "strings",
                onGet(t) {
                    return t.button_done || "button_done"
                }
            },
            ".button_publish": {
                observe: "strings",
                onGet(t) {
                    return t.button_publish || "button_publish"
                }
            },
            ".button_play": {
                observe: "strings",
                onGet(t) {
                    return t.button_play || "button_play"
                }
            },
            ".button_delete": {
                observe: "strings",
                onGet(t) {
                    return t.button_delete || "button_delete"
                }
            },
            ".button_back_to_episodes": {
                observe: "strings",
                onGet(t) {
                    return t.button_back_to_episodes || "button_back_to_episodes"
                }
            },
            ".button_back_to_menu": {
                observe: "strings",
                onGet(t) {
                    return t.button_back_to_menu || "button_back_to_menu"
                }
            },
            "#promptsCount": {
                observe: ["prompts", "strings", "count", "maxCount"],
                onGet() {
                    const t = this.model.get("count"),
                        e = this.model.get("maxCount"),
                        n = this.model.get("prompts") || [],
                        i = this.model.get("strings").label_hidden || "hidden",
                        o = n.length;
                    let r = `${t}/${e}`;
                    return o < t && (r += ` (${t-o} ${i})`), r
                }
            }
        },
        initialize(t) {
            this.client = t.client, this.promptComponent = this.promptComponent || new uo({
                model: new ze.Model
            }), this.episodesList = this.episodesList || new ks({
                action: "load",
                collection: new ze.Collection
            }), this.inputComponent = this.inputComponent || new Fl({
                model: new ze.Model({
                    inlineSubmit: !0,
                    inlineSubmitText: "",
                    className: "addPrompt",
                    counter: !0
                })
            }), this.titleInputComponent = this.titleInputComponent || new Fl({
                model: new ze.Model({
                    inlineSubmit: !0,
                    counter: !0
                })
            }), this.promptsList = this.promptsList || new ks({
                action: "remove",
                collection: new ze.Collection
            }), this.selected = [], this.listenTo(this.model, "change", this.update, this)
        },
        onRender() {
            this.showChildView("prompt", this.promptComponent), this.showChildView("episodes", this.episodesList), this.showChildView("input", this.inputComponent), this.showChildView("titleInput", this.titleInputComponent), this.showChildView("prompts", this.promptsList)
        },
        onAttach() {
            this.stickit(), this.update(), Qt.vibrate()
        },
        update() {
            const t = this.model.get("validActions").length === 0 ? this.model.get("noActionsText") : this.model.get("text");
            this.promptComponent.model.set("text", t);
            const e = this.model.get("episodes").map(n => {
                const i = un.htmlUnescape(n.metadata.title);
                let o = un.safeText(i);
                return o += n.remoteContentId !== null ? `<br><div class='episodeId'>${n.formattedRemoteContentId}</div>` : "", {
                    key: n.remoteContentId || n.localContentId,
                    html: o
                }
            });
            this.episodesList.collection.set(e), this.inputComponent.model.set("maxLength", this.model.get("maxContentLength")), this.inputComponent.model.set("inlineSubmitText", this.model.get("strings").button_add), this.titleInputComponent.model.set("maxLength", this.model.get("maxTitleLength")), this.titleInputComponent.model.set("inlineSubmitText", this.model.get("strings").create_new_button), this.promptsList.collection.set(this.model.get("prompts").map(n => {
                const i = ke.extend({}, n);
                i.text = un.htmlUnescape(n.text);
                let o = n.author !== this.client.userId ? "other" : "self";
                return n.className && (o += ` ${n.className}`), {
                    ...i,
                    className: o
                }
            }))
        },
        onNewButtonClicked() {
            this.triggerMethod("client:message", {
                action: "new"
            })
        },
        onChildviewInputSubmit() {
            let t, e;
            this.model.get("validActions").indexOf("add") !== -1 ? (t = "add", e = this.inputComponent.getSanitizedValue(), this.inputComponent.clearInput(), this.inputComponent.focus()) : this.model.get("validActions").indexOf("title") !== -1 && (t = "title", e = this.titleInputComponent.getValue(), this.titleInputComponent.clearInput()), !(!t || !e) && this.triggerMethod("client:message", {
                action: t,
                text: e
            })
        },
        onChildviewChildviewButtonLoad(t) {
            this.triggerMethod("client:message", {
                action: "load",
                contentId: t.get("key")
            })
        },
        onChildviewChildviewButtonRemove(t) {
            this.triggerMethod("client:message", {
                action: "remove",
                key: t.get("key")
            })
        },
        onToggleVisibilityController() {
            this.triggerMethod("client:message", {
                action: "toggle-visibility",
                target: "controller"
            })
        },
        onToggleVisibilityScreen() {
            this.triggerMethod("client:message", {
                action: "toggle-visibility",
                target: "screen"
            })
        },
        onActionButtonClicked(t) {
            const e = Ye(t.currentTarget).data("action");
            if (e === "submit") {
                this.showTermsOfService();
                return
            }
            if (e === "remove-content") {
                this.showConfirmDeleteDialog();
                return
            }
            this.triggerMethod("client:message", {
                action: e
            })
        },
        showTermsOfService() {
            const t = `
            <a href='https://www.jackboxgames.com/terms-of-service/' target='_blank' >
                <br>
                <div class="tosLink">
                    <svg
                        class="bi bi-link-45deg"
                        width="1em"
                        height="1em"
                        viewBox="0 0 16 16"
                        fill="currentColor"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M4.715 6.542L3.343 7.914a3 3 0 1 0 4.243 4.243
                                l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.001 1.001 0 0 0-.154.199 2 2 0 0 1 .861 3.337
                                L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"
                        />
                        <path
                            d="M5.712 6.96l.167-.167a1.99 1.99 0 0 1 .896-.518 1.99 1.99 0 0 1 .518-.896
                                l.167-.167A3.004 3.004 0 0 0 6 5.499c-.22.46-.316.963-.288 1.46z"
                        />
                        <path
                            d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346
                                L9.12 3.55a2 2 0 0 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287
                                l1.372-1.372a3 3 0 0 0-4.243-4.243L6.586 4.672z"
                        />
                        <path
                            d="M10 9.5a2.99 2.99 0 0 0 .288-1.46
                                l-.167.167a1.99 1.99 0 0 1-.896.518 1.99 1.99 0 0 1-.518.896
                                l-.167.167A3.004 3.004 0 0 0 10 9.501z"
                        />
                    </svg>
                </div>
            </a>
        `;
            Ai.fire({
                target: this.el,
                html: `${this.model.get("strings").tos_warning}${t}`,
                showCancelButton: !0,
                confirmButtonText: this.model.get("strings").tos_warning_agree,
                cancelButtonText: this.model.get("strings").tos_warning_back,
                customClass: {
                    popup: "ugcModal",
                    confirmButton: "button confirmButton",
                    cancelButton: "button cancelButton"
                }
            }).then(e => {
                e.value && this.triggerMethod("client:message", {
                    action: "submit"
                })
            })
        },
        showConfirmDeleteDialog() {
            Ai.fire({
                target: this.el,
                text: this.model.get("strings").delete_warning,
                showCancelButton: !0,
                confirmButtonText: this.model.get("strings").delete_warning_confirm,
                cancelButtonText: this.model.get("strings").delete_warning_cancel,
                customClass: {
                    popup: "ugcModal",
                    confirmButton: "button confirmButton",
                    cancelButton: "button cancelButton"
                }
            }).then(t => {
                t.value && this.triggerMethod("client:message", {
                    action: "remove-content"
                })
            })
        },
        onChildviewChildviewButtonChoose(t) {
            const e = t.get("text");
            this.triggerMethod("client:message", {
                action: "remove",
                text: e
            })
        }
    }),
    lR = `<svg id="range-picker" class="range-picker" viewBox="-40 -40 80 80">
    <defs>
        <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
            <stop offset="0%" style="stop-color:rgb(0,0,0); stop-opacity:0.5" />
            <stop offset="60%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="80%" style="stop-color:rgb(0,0,0); stop-opacity:0.9" />
            <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0.7" />
        </radialGradient>
        <svg id="Layer_3" data-name="Layer 3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.67 271.33">
            <title>astroIcon</title>
            <path class="cls-1" d="M253.83,108.17H210.89A57.83,57.83,0,0,1,160,138.5H140a57.83,57.83,0,0,1-50.89-30.33H46.17a19.5,19.5,0,0,0-19.5,19.5v11a19.5,19.5,0,0,0,19.5,19.5H70.4a19.5,19.5,0,0,1,19.5,19.5V259.8a17.37,17.37,0,0,0,17.36,17.37H115A17.37,17.37,0,0,0,132.4,259.8V236.53a17.37,17.37,0,0,1,17.37-17.36h0a17.36,17.36,0,0,1,17.36,17.36V259.8a17.37,17.37,0,0,0,17.37,17.37h9a17.37,17.37,0,0,0,17.36-17.37V177.67a19.5,19.5,0,0,1,19.5-19.5h23.49a19.5,19.5,0,0,0,19.5-19.5v-11A19.5,19.5,0,0,0,253.83,108.17Z" transform="translate(-18.17 -14.33)"/>
            <rect class="cls-1" x="64" y="8.5" width="135.67" height="115.67" rx="57.83" ry="57.83"/>
        </svg>
        <svg
           xmlns:dc="http://purl.org/dc/elements/1.1/"
           xmlns:cc="http://creativecommons.org/ns#"
           xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns="http://www.w3.org/2000/svg"
           height="55"
           width="40"
           xml:space="preserve"
           viewBox="-20 -27.5 40 55"
           y="0px"
           x="0px"
           id="Layer_1"
           version="1.1"><metadata
           id="metadata10"><rdf:RDF><cc:Work
               rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
                 rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
           id="defs8" />
        <path
           style="fill:#ffffff"
           d="m -20,27.5 20,-55 20,55 -20,-13 z"
           class="st0"
           id="aimArrow" />
        </svg>

    </defs>

    <circle class="background" r="16" cx="0" cy="0" />
    <circle class="background-gradient" r="32" cx="0" cy="0" fill="url(#grad1)" />
    <circle class="background-border" r=33 cx=0 cy=0 stroke="black" stroke-width="2" fill="none" />
    <circle id="health-display" class="health-display" r="33" cx="0" cy="0" />
    <circle class="circle-deadzone" fill="black" fill-opacity="0.8" r=1 cx=0 cy=0 stroke="white" stroke-width="0.3" stroke-dasharray="3.5 1.52" />
    
    <circle class="crosshair-center" r=1 cx=0 cy=0 />
    <circle class="circle-border-white" r="32" cx="0" cy="0" stroke="#ffffff" stroke-width="0.3" fill="none"/>
    <line class="line-helper-left" x1="-32" y1="0" x2="0" y2="0" ></line>
    <line class="line-helper-right" x1="32" y1="0" x2="0" y2="0" ></line>
    <circle class="locked-in-fade" r="17" cx="0" cy="0" />
    <line class="locked-in-line" x1="0" y1="0" x2="0" y2="0" display="inline"></line>
    <use class="aimArrow" xlink:href="#Layer_1" transform="rotate(180)" x="-2" y="-2.5" width="4" height="5"></use>
    <use class="astro" xlink:href="#Layer_3" transform="translate(-8, -8)" width="16" height="16"></use>
    <text id="text" class="text" x=0 y=10 text-anchor="middle" font-size=30 stroke="white">H</text>
</svg>`,
    AR = je.View.extend({
        className: "RadialView",
        template: ke.template(lR),
        model: new ze.Model({
            isTouching: !1,
            angle: 0,
            vector: {
                x: 0,
                y: 0
            },
            touchBuffer: 5
        }),
        events: {
            "mousedown .range-picker": "start",
            "touchstart .range-picker": "start",
            "touchmove .range-picker": "start",
            touchmove: "move",
            touchend: "end"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "lockedIn" : ""
                    }
                }]
            },
            ".background": {
                attributes: [{
                    name: "style",
                    observe: "accentColor",
                    onGet(t) {
                        return `stroke: ${t}`
                    }
                }]
            },
            ".health-display": {
                attributes: [{
                    name: "style",
                    observe: ["selector", "accentColor"],
                    onGet(t) {
                        let e = "";
                        const n = t[0],
                            i = t[1];
                        i && (e += `stroke:${i};`);
                        const o = n * 207,
                            r = 207 * (1 - n);
                        return e += `stroke-dasharray:${o} ${r};`, e += `transform:rotate(${-360*n-90}deg);`, e
                    }
                }]
            },
            ".line-helper-left": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "none" : "inline"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.y : 1
                    }
                }]
            },
            ".line-helper-right": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "none" : "inline"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.y : 1
                    }
                }]
            },
            ".locked-in-line": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "inline" : "none"
                    }
                }, {
                    name: "x2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.x : 1
                    }
                }, {
                    name: "y2",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.y : 1
                    }
                }]
            },
            ".circle-deadzone": {
                attributes: [{
                    name: "r",
                    observe: "isTouching",
                    onGet(t) {
                        return "9.6"
                    }
                }]
            },
            ".text": "text",
            ".astro": {
                attributes: [{
                    name: "style",
                    observe: ["accentColor", "lockedIn"],
                    onGet(t) {
                        let e = "";
                        return e += `fill:${t[1]?"black":t[0]};`, e += `stroke:${t[1]?"#cccccc":"#ff00ff"};`, e
                    }
                }, {
                    name: "x",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.x : 1
                    }
                }, {
                    name: "y",
                    observe: "vector",
                    onGet(t) {
                        return t ? t.y : 1
                    }
                }, {
                    name: "width",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? 8 : 16
                    }
                }, {
                    name: "height",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? 8 : 16
                    }
                }, {
                    name: "transform",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "translate(-4, -4)" : "translate(-8,-8)"
                    }
                }]
            },
            ".locked-in-fade": {
                attributes: [{
                    name: "display",
                    observe: "lockedIn",
                    onGet(t) {
                        return t ? "inline" : "none"
                    }
                }]
            },
            ".aimArrow": {
                attributes: [{
                    name: "transform",
                    observe: "angle",
                    onGet(t) {
                        let e = "";
                        return e += ` rotate(${t+180})`, e
                    }
                }, {
                    name: "display",
                    observe: ["lockedIn", "vector"],
                    onGet(t) {
                        return t[0] && this.getDistance(t[1]) > 0 ? "inline" : "none"
                    }
                }]
            }
        },
        initialize() {
            this.model.on("change:angle", this.updateAngle, this), this.model.on("change:vector", this.updateVector, this), this.model.on("change:isTouching", this.updateIsTouching, this)
        },
        updateAngle() {
            this.triggerMethod("angle", this.model.get("angle"))
        },
        updateVector() {
            this.triggerMethod("vector", this.getNormalizedVector())
        },
        updateIsTouching() {
            this.triggerMethod("isTouching", this.model.get("isTouching"))
        },
        onRender() {
            this.stickit()
        },
        start(t) {
            const e = this.eventToCoord(t);
            this.startCoord || (this.startCoord = e)
        },
        move(t) {
            t.preventDefault();
            const e = this.eventToCoord(t);
            if (!this.model.get("isTouching") && this.startCoord && this.getDistance(e, this.startCoord) > this.model.get("touchBuffer") && this.model.set("isTouching", !0), !this.model.get("isTouching") || this.model.get("lockedIn")) return;
            const n = this.coordToVector(e);
            this.model.set("vector", n);
            const i = this.coordToAngle(e);
            this.model.set("angle", i)
        },
        end() {
            this.startCoord = null, this.model.get("isTouching") && (this.model.set("isTouching", !1), this.triggerMethod("end", this.model))
        },
        getDistance(t, e) {
            e || (e = {
                x: 0,
                y: 0
            });
            const n = {
                x: e.x - t.x,
                y: e.y - t.y
            };
            return Math.sqrt(n.x ** 2 + n.y ** 2)
        },
        getNormalizedVector() {
            const t = ke.extend({}, this.model.get("vector"));
            return t.x /= 32, t.y /= 32, t
        },
        eventToCoord(t) {
            const e = this.$el[0].getBoundingClientRect();
            return t.targetTouches && t.targetTouches instanceof TouchList && t.targetTouches.length > 0 ? {
                x: t.targetTouches[0].pageX - e.left,
                y: t.targetTouches[0].pageY - e.top
            } : {
                x: t.clientX - e.left,
                y: t.clientY - e.top
            }
        },
        coordToAngle(t) {
            const e = this.coordToVector(t);
            let n = Math.atan2(-e.x, e.y);
            return n += Math.PI, n = parseInt(n * 180 / Math.PI, 10), n
        },
        coordToVector(t) {
            const e = this.$el[0].getBoundingClientRect(),
                n = {
                    x: t.x - parseInt(e.width, 10) / 2,
                    y: t.y - parseInt(e.height, 10) / 2
                },
                i = 76 / e.width;
            n.x *= i, n.y *= i;
            const o = this.getDistance(n);
            if (o > 32) {
                const r = 32 / o;
                n.x *= r, n.y *= r
            }
            return n
        }
    }),
    cR = `<div id="status-bar" class="health text">\r
    <div id="weaponBorder" class="weaponBorder">\r
        <div id="weaponIcon" class="weaponIcon"></div>\r
    </div>\r
</div>\r
<div id="radial" class="radial"></div>\r
<div id="control-panel" class="control-panel">\r
    <div class="message text">message</div>\r
    <div class="weaponNameContainer text">\r
        <div class="weaponIcon small"></div>\r
        <span class="weaponName">weapon name</span>\r
    </div>\r
    <div class="weaponText text">weapon text</div>\r
</div>`,
    dR = Ht.extend({
        defaults: {
            shotId: void 0,
            state: "Shoot",
            throttle: 44,
            weapon: {},
            playerCanSwap: !1,
            characterCurrentHealth: null,
            characterMaxHealth: null,
            lockedIn: !1,
            selectorCircle: !0,
            classes: [],
            message: ""
        }
    }),
    pR = je.View.extend({
        model: new dR,
        template: ke.template(cR),
        className: "Shoot",
        client: null,
        regions: {
            radial: "#radial"
        },
        events: {
            "click .swap-button": "swapPlayer",
            touchstart: "eat",
            "click #reconnect": "reconnect"
        },
        eat(t) {
            t.preventDefault()
        },
        move(t) {
            this.radialComponent.move(t)
        },
        end(t) {
            this.radialComponent.end(t)
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "style",
                    observe: "playerInfo",
                    onGet(t) {
                        return t && t.bgcolor ? `background-color:${t.bgcolor}` : ""
                    }
                }]
            },
            ".swap-button": {
                observe: "playerCanSwap",
                visible: !0
            },
            ".health": {
                observe: "characterCurrentHealth",
                visible(t) {
                    return t !== null
                }
            },
            ".currentHealth": "characterCurrentHealth",
            ".maxHealth": "characterMaxHealth",
            ".weaponText": {
                observe: "weapon",
                onGet(t) {
                    return t.text
                }
            },
            ".message": "message",
            ".weaponBorder": {
                attributes: [{
                    name: "class",
                    observe: "weapon",
                    onGet(t) {
                        return t ? t.count ? `count-${t.count}` : "" : null
                    }
                }]
            },
            ".weaponIcon": {
                attributes: [{
                    name: "class",
                    observe: "weapon",
                    onGet(t) {
                        return t ? t.id : ""
                    }
                }]
            },
            ".weaponName": {
                observe: "weapon",
                onGet(t) {
                    return t ? t.name ? t.name : t.id : ""
                }
            }
        },
        onChildviewVector(t) {
            this.throttledUpdate && this.throttledUpdate(t)
        },
        updateVector(t) {
            this.model.get("isAudience") || t.x === 0 && t.y === 0 || !this.radialComponent.model.get("isTouching") || this.triggerMethod("client:message", {
                action: "move",
                type: "move",
                vector: t
            })
        },
        onChildviewEnd() {
            if (this.model.get("lockedIn")) return;
            const t = this.radialComponent.getNormalizedVector();
            if (Math.sqrt(t.x * t.x + t.y * t.y) < .3) {
                this.radialComponent.model.set("vector", {
                    x: 0,
                    y: 0
                }), this.radialComponent.model.set("angle", 180), this.model.get("isPlayer") && this.triggerMethod("client:message", {
                    action: "cancel",
                    type: "cancel"
                });
                return
            }
            const n = this.model.get("weapon"),
                i = n.id ? n.id : this.model.get("weapon"),
                o = this.radialComponent.model.get("angle"),
                r = Math.floor(o / 10);
            this.triggerMethod("client:message", {
                action: "fire",
                type: "fire",
                weapon: i,
                vector: t
            }), this.model.get("isAudience") && (this.audienceShot = r * 10, this.shotId = this.model.get("shotId") || 0, this.model.setUpdate({
                lockedIn: !0,
                shotId: this.shotId
            }))
        },
        initialize(t) {
            this.client = t.client, this.radialComponent = new AR({
                model: new ze.Model({
                    isTouching: !1,
                    angle: 0,
                    vector: {
                        x: 0,
                        y: 0
                    },
                    touchBuffer: 5
                })
            }), this.throttledUpdate = ke.throttle(this.updateVector, this.model.get("throttle")), this.listenTo(this.model, "change", this.update, this), this.onResizeWithContext = this.onResize.bind(this), window.addEventListener("resize", this.onResizeWithContext), Ye(window).on("mousemove", this.move.bind(this)), Ye(window).on("mouseup", this.end.bind(this))
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.onResizeWithContext), Ye(window).off("mousemove"), Ye(window).off("mouseup")
        },
        update() {
            const t = this.model.get("characterCurrentHealth"),
                e = this.model.get("characterMaxHealth");
            if (this.radialComponent.model.set("selector", t / e), this.radialComponent.model.set("accentColor", this.model.get("characterColor")), this.radialComponent.model.set("lockedIn", this.model.get("lockedIn")), this.radialComponent.model.set("text", ""), this.client.isRole("audience") && ((this.model.get("shotId") === void 0 || this.model.get("shotId") !== this.shotId) && (this.audienceShot = void 0), this.audienceShot && (this.model.setUpdate({
                    lockedIn: !0,
                    shotId: this.model.get("shotId") || 0
                }), this.radialComponent.model.set("text", `${this.audienceShot}\xB0`))), !this.model.get("lockedIn") && !this.radialComponent.model.get("isTouching") && this.radialComponent.model.set("vector", {
                    x: 0,
                    y: 0
                }), this.throttledUpdate = ke.throttle(this.updateVector, this.model.get("throttle")), this.model.get("lockedIn")) this.notified = !1;
            else {
                if (!this.notified && this.model.get("state") === "Shoot") {
                    const n = {
                        ClusterBombs: [45, 60, 45, 60, 45, 60],
                        PlayerWeapon: [100, 100],
                        RainbowCannon: [45, 60, 45, 60, 45, 60],
                        Repeater: [45, 60, 45, 60, 45, 60],
                        Seeker: [45, 60, 45, 60, 45, 60],
                        Shield: [45, 60, 45, 60, 45, 60],
                        Stun: [45, 60, 45, 60, 45, 60],
                        SuperBlaster: [45, 60, 45, 60, 45, 60]
                    } [this.model.get("weapon").id];
                    Qt.vibrate(n)
                }
                this.notified = !0
            }
        },
        onRender() {
            this.showChildView("radial", this.radialComponent), this.stickit()
        },
        onAttach() {
            this.update(), this.onResize(), Qt.vibrate()
        },
        onResize() {
            const t = Ye(".radial"),
                e = Ye("#status-bar").outerHeight() + Ye(".playerTopBar").outerHeight() + Ye("#control-panel").outerHeight() + 10,
                n = Ye(".controller-page").width(),
                i = window.innerHeight - e,
                o = Math.max(150, Math.min(n, i));
            t.css("width", `${o}px`), t.css("height", `${o}px`), window.scrollTo(0, 0)
        }
    }),
    _1 = `<div id="textDescriptions" class="textDescriptions" role="log" aria-atomic="false" aria-relevant="additions" aria-live="polite"></div>
<div id="controller-container" class="state-controller controller-page">
    <div id="playerRegion"></div>
    <div id="controller-main">
        <div class="loadingSpinner">
            <i class="fas fa-spinner fa-spin" style="font-size:48px"></i>
        </div>
    </div>
</div>
<div id="broadcaster" role="button" aria-label="twitch broadcaster information" style="display:none;" class="twitchBroadcasterIcon"></div>
`;
const Ho = je.View.extend({
    client: null,
    template: ke.template(_1),
    playerTopBar: null,
    className() {
        return `pt-page ${this.getOption("appTag")}`
    },
    regions: {
        player: "#playerRegion",
        controller: {
            el: "#controller-main",
            replaceElement: !0
        }
    },
    events: {
        "click .twitchBroadcasterIcon": "onTwitchBroadcasterIconClick"
    },
    bindings: {
        ":el": {
            attributes: [{
                name: "class",
                observe: "blob",
                onGet(t) {
                    let e = `pt-page ${this.getOption("appTag")}`;
                    return t && t.locale && (e += ` ${t.locale}`), e
                }
            }]
        },
        ".twitchBroadcasterIcon": {
            observe: ["broadcaster", "blob"],
            visible: !0,
            onGet([t, e]) {
                return t && e && !e.artifact && ["Lobby", "Logo"].includes(e.state)
            }
        }
    },
    initialize(t) {
        this.mergeOptions(t, ["appId", "appTag"]), this.locale = "en", this.client = t.client, this.playerTopBar = this.playerTopBar || new kC, this.onEntityDidChangeWithContext = this.onEntityDidChange.bind(this), this.onTextDescriptionsWithContext = this.onTextDescriptions.bind(this), this.onRoomWasDestroyedWithContext = this.onRoomWasDestroyed.bind(this), this.onDisconnectedWithContext = this.onDisconnected.bind(this), this.onConnectionMessageWithContext = this.onConnectionMessage.bind(this), t.client.on("client:entityDidChange", this.onEntityDidChangeWithContext), t.client.on("client:textDescriptions", this.onTextDescriptionsWithContext), t.client.on("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), t.client.on("client:disconnected", this.onDisconnectedWithContext), t.client.on("client:connection", this.onConnectionMessageWithContext), this.model = new ze.Model({});
        const e = t.client.parseEntities();
        this.model.set(e), this.model.on({
            "change:player": this.setBlob,
            "change:room": this.setBlob,
            "change:audiencePlayer": this.setBlob,
            "change:blob": this.update
        }, this), this.render(), this.setBlob(), window.addEventListener("resize", this.onResize)
    },
    onRender() {
        this.update(), this.stickit()
    },
    onAttach() {
        this.showChildView("player", this.playerTopBar), this.onResize(), this.client.isRole("broadcaster") && (this.model.set("broadcaster", this.client.isRole("broadcaster")), this.showTwitchBroadcasterDialog(20 * 1e3))
    },
    onBeforeDestroy() {
        this.model.stopListening(), this.client.off("client:entityDidChange", this.onEntityDidChangeWithContext), this.client.off("client:textDescriptions", this.onTextDescriptionsWithContext), this.client.off("client:roomWasDestroyed", this.onRoomWasDestroyedWithContext), this.client.off("client:disconnected", this.onDisconnectedWithContext), this.client.off("client:connection", this.onConnectionMessageWithContext)
    },
    updateLayout() {
        const e = this.model.get("blob").state;
        if (this.getGameLayout(e) !== -1) return null;
        switch (e) {
            case "Draw":
                return this.setLayout(hC);
            case "EnterSingleText":
                return this.setLayout(fC);
            case "Lobby":
                return this.setLayout(qr);
            case "Logo":
                return this.setLayout(wC);
            case "MakeSingleChoice":
                return this.setLayout(DC);
            case "Shoot":
                return this.setLayout(pR);
            case "Sortable":
                return this.setLayout(oR);
            case "Camera":
                return this.setLayout(iC);
            case "UGC":
                return this.setLayout(VR);
            default:
                return new Error("No common layout found")
        }
    },
    setLayout(t) {
        const e = new t(this.options),
            n = this.getRegion("controller");
        !n || (n.reset(), e.model.set(this.model.get("blob")), this.showChildView("controller", e), this.currentLayout = e, this.currentState = this.model.get("blob").state)
    },
    onEntityDidChange(t, e) {
        this.model.unset(t, {
            silent: !0
        }), this.model.set(t, e)
    },
    onTextDescriptions(t, e) {
        this.setTextDescriptions(e.latestDescriptions)
    },
    setBlob() {
        const t = this.model.get("player"),
            e = this.model.get("room"),
            n = this.model.get("audiencePlayer");
        let i = {};
        t && !ke.isEmpty(t) ? i = {
            ...ke.omit(e, "audience"),
            ...t
        } : this.client.isRole("audience") && n ? i = {
            ...ke.omit(e, "audience"),
            ...n.audience
        } : this.client.isRole("audience") && e && e.audience ? i = {
            ...ke.omit(e, "audience"),
            ...e.audience
        } : i = e || {}, i.isPlayer = this.client.isRole("player"), i.isAudience = this.client.isRole("audience"), i = this.parseBlob(i), !i.state && i.isAudience && (i.state = "Logo"), i.platformId && Jt.set(`platform-${i.platformId}`), i.locale && typeof i.locale == "string" && (this.locale = i.locale), this.model.set({
            blob: i
        })
    },
    update: ke.debounce(function() {
        const e = this.model.get("blob");
        !e || (this.willUpdate(), e.playerInfo ? this.playerTopBar.model.set(e.playerInfo) : this.playerTopBar.model.clear(), !this.currentState || this.currentState !== e.state ? (this.updateLayout(), this.currentLayout && this.currentLayout.model.set(e)) : this.currentLayout && this.currentLayout.model.set(e), e.textDescriptions && this.setTextDescriptions(e.textDescriptions), e.artifact && po.add(e.artifact, this.client.appTag), this.didUpdate())
    }, 25),
    willUpdate() {},
    didUpdate() {},
    setTextDescriptions(t) {
        t && t.length && (this.textDescriptions = this.textDescriptions || [], t.forEach(e => {
            (e.id === void 0 || !this.textDescriptions.slice(-10).find(n => n.id === e.id)) && (this.textDescriptions.push(e), Ye("#textDescriptions").append(Ye("<p />").text(e.text)))
        }))
    },
    parseBlob(t) {
        return t
    },
    getGameLayout() {
        return -1
    },
    formatSessionMessage(t) {
        return t
    },
    onTwitchBroadcasterIconClick() {
        this.showTwitchBroadcasterDialog()
    },
    showTwitchBroadcasterDialog(t) {
        let e = `
            <div class='icon-${this.client.roles.broadcaster.platform}'>
                ${this.client.roles.broadcaster.name}
            </div>`;
        e += `
            <div class='success'>
                You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.
            </div>`, this.lacksAudience ? e += "<div class='warning'>THIS GAME DOESN'T HAVE AN AUDIENCE FEATURE</div>" : this.client.roomInfo.audienceEnabled || (e += "<div class='warning'>THIS ROOM DOESN'T HAVE THE AUDIENCE SETTING ENABLED</div>"), Qt.show("custom", {
            html: e,
            position: "bottom",
            timer: t,
            backdrop: "transparent",
            customClass: {
                container: "jbgTwitchContainer",
                popup: "jbgTwitchPopup",
                htmlContainer: "jbgTwitchContent",
                closeButton: "jbgCloseButton"
            },
            showCloseButton: !0,
            closeButtonHtml: `
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 2.00006L2 20" stroke="#0C0C0C" stroke-width="3"></path>
                    <path d="M2 2.00001L20 20" stroke="#0C0C0C" stroke-width="3" />
                </svg>`,
            showConfirmButton: !1,
            showClass: {
                popup: "jbgTwitchShow"
            },
            hideClass: {
                popup: "jbgTwitchHide"
            }
        })
    },
    onResize() {
        const t = Ye(window).width(),
            e = Ye(window).height();
        Ye(".content,.controller-page").css({
            height: e,
            width: t
        })
    },
    onRoomWasDestroyed() {
        Jt.remove("roomCode"), Jt.remove("reconnect"), Qt.show("error", {
            titleText: fl[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            text: fl[this.locale].STRING_ERROR_SERVER_ROOM_DESTROYED,
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onDisconnected() {
        Qt.show("error", {
            titleText: fl[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            text: fl[this.locale].STRING_ERROR_SERVER_ROOM_DISCONNECTED,
            willClose: () => {
                window.location.reload(!0)
            }
        })
    },
    onConnectionMessage(t) {
        const e = `${t.status} ${t.attempt?`${t.attempt}/5`:""}`;
        if (Qt.show("toast", {
                text: e
            }), t.status === "connected") {
            const n = this.client.parseEntities();
            this.model.set(n)
        }
    },
    async onChildviewClientMessage(t) {
        if (this.client.isRole("player"))
            if (t.textKey) try {
                await this.client.updateText(t.textKey, t.val)
            } catch (e) {
                if (e instanceof Zi.EcastEntityNotFound || e instanceof Zi.EcastPermissionDenied) console.error(`Couldn't update text entity ${t.textKey}: ${e.message}`);
                else if (e instanceof Zi.EcastFilterError) this.currentLayout.onTextFilterError && this.currentLayout.onTextFilterError(e);
                else throw console.error(`Unhandled error updating text entity ${t.textKey}`), e
            } else if (t.objectKey) try {
                await this.client.updateObject(t.objectKey, t.val)
            } catch (e) {
                if (e instanceof Zi.EcastEntityNotFound || e instanceof Zi.EcastPermissionDenied) console.error(`Couldn't update object entity ${t.objectKey}: ${e.message}`);
                else if (e instanceof Zi.EcastFilterError) this.currentLayout.onObjectFilterError && this.currentLayout.onObjectFilterError(e);
                else throw console.error(`Unhandled error updating object entity ${t.objectKey}`), e
            } else {
                const e = this.formatSessionMessage(t);
                this.client.send("SendMessageToRoomOwner", e)
            } else if (this.client.isRole("audience")) {
                const e = this.currentLayout.sessionModule,
                    n = this.formatSessionMessage(t);
                if (!e) return;
                if (e === "vote") {
                    const i = this.currentLayout.model.get("countGroupName"),
                        o = n.vote;
                    this.onChildviewClientCountGroup({
                        name: i,
                        vote: o
                    })
                }
                if (e === "comment") {
                    const i = this.currentLayout.model.get("textRingName"),
                        o = n.entry;
                    this.onChildviewClientTextRing({
                        name: i,
                        text: o
                    })
                }
            }
    },
    onChildviewClientSessionMessage(t) {
        this.client.sessionSend(t.sessionModule, t.sessionName, t.sessionMessage)
    },
    onChildviewClientCountGroup({
        name: t,
        vote: e
    }) {
        t || (t = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.incrementCountGroupCounter(t, e)
    },
    onChildviewClientGCounter({
        key: t,
        times: e
    }) {
        this.client.incrementGCounter(t, e)
    },
    onChildviewClientTextRing({
        name: t,
        text: e
    }) {
        t || (t = this.sessionModulePrefix + this.currentLayout.sessionName), this.client.pushTextRing(t, e)
    }
});
var $1 = {
    exports: {}
};
/*!
 * EventEmitter v5.2.9 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - https://oli.me.uk/
 * @preserve
 */
(function(t) {
    (function(e) {
        function n() {}
        var i = n.prototype,
            o = e.EventEmitter;

        function r(c, d) {
            for (var m = c.length; m--;)
                if (c[m].listener === d) return m;
            return -1
        }

        function V(c) {
            return function() {
                return this[c].apply(this, arguments)
            }
        }
        i.getListeners = function(d) {
            var m = this._getEvents(),
                q, v;
            if (d instanceof RegExp) {
                q = {};
                for (v in m) m.hasOwnProperty(v) && d.test(v) && (q[v] = m[v])
            } else q = m[d] || (m[d] = []);
            return q
        }, i.flattenListeners = function(d) {
            var m = [],
                q;
            for (q = 0; q < d.length; q += 1) m.push(d[q].listener);
            return m
        }, i.getListenersAsObject = function(d) {
            var m = this.getListeners(d),
                q;
            return m instanceof Array && (q = {}, q[d] = m), q || m
        };

        function A(c) {
            return typeof c == "function" || c instanceof RegExp ? !0 : c && typeof c == "object" ? A(c.listener) : !1
        }
        i.addListener = function(d, m) {
            if (!A(m)) throw new TypeError("listener must be a function");
            var q = this.getListenersAsObject(d),
                v = typeof m == "object",
                D;
            for (D in q) q.hasOwnProperty(D) && r(q[D], m) === -1 && q[D].push(v ? m : {
                listener: m,
                once: !1
            });
            return this
        }, i.on = V("addListener"), i.addOnceListener = function(d, m) {
            return this.addListener(d, {
                listener: m,
                once: !0
            })
        }, i.once = V("addOnceListener"), i.defineEvent = function(d) {
            return this.getListeners(d), this
        }, i.defineEvents = function(d) {
            for (var m = 0; m < d.length; m += 1) this.defineEvent(d[m]);
            return this
        }, i.removeListener = function(d, m) {
            var q = this.getListenersAsObject(d),
                v, D;
            for (D in q) q.hasOwnProperty(D) && (v = r(q[D], m), v !== -1 && q[D].splice(v, 1));
            return this
        }, i.off = V("removeListener"), i.addListeners = function(d, m) {
            return this.manipulateListeners(!1, d, m)
        }, i.removeListeners = function(d, m) {
            return this.manipulateListeners(!0, d, m)
        }, i.manipulateListeners = function(d, m, q) {
            var v, D, S = d ? this.removeListener : this.addListener,
                C = d ? this.removeListeners : this.addListeners;
            if (typeof m == "object" && !(m instanceof RegExp))
                for (v in m) m.hasOwnProperty(v) && (D = m[v]) && (typeof D == "function" ? S.call(this, v, D) : C.call(this, v, D));
            else
                for (v = q.length; v--;) S.call(this, m, q[v]);
            return this
        }, i.removeEvent = function(d) {
            var m = typeof d,
                q = this._getEvents(),
                v;
            if (m === "string") delete q[d];
            else if (d instanceof RegExp)
                for (v in q) q.hasOwnProperty(v) && d.test(v) && delete q[v];
            else delete this._events;
            return this
        }, i.removeAllListeners = V("removeEvent"), i.emitEvent = function(d, m) {
            var q = this.getListenersAsObject(d),
                v, D, S, C, h;
            for (C in q)
                if (q.hasOwnProperty(C))
                    for (v = q[C].slice(0), S = 0; S < v.length; S++) D = v[S], D.once === !0 && this.removeListener(d, D.listener), h = D.listener.apply(this, m || []), h === this._getOnceReturnValue() && this.removeListener(d, D.listener);
            return this
        }, i.trigger = V("emitEvent"), i.emit = function(d) {
            var m = Array.prototype.slice.call(arguments, 1);
            return this.emitEvent(d, m)
        }, i.setOnceReturnValue = function(d) {
            return this._onceReturnValue = d, this
        }, i._getOnceReturnValue = function() {
            return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0
        }, i._getEvents = function() {
            return this._events || (this._events = {})
        }, n.noConflict = function() {
            return e.EventEmitter = o, n
        }, t.exports ? t.exports = n : e.EventEmitter = n
    })(typeof window < "u" ? window : Ct || {})
})($1);
const hR = $1.exports;
class uR extends hR {
    constructor(n, i) {
        super();
        at(this, "wsClient");
        at(this, "name");
        at(this, "id");
        at(this, "userId");
        at(this, "uuid");
        at(this, "joinAs", "player");
        at(this, "room");
        at(this, "roles", {});
        at(this, "code", null);
        at(this, "host");
        at(this, "onPlayerWelcome", n => {
            this.id = n.id, this.roles = n.profile ? n.profile.roles : {}, n.here && (this.host = Object.values(n.here).find(({
                roles: i
            }) => i.host)), this.emit("client:didJoinRoom", {
                appId: this.room.appId,
                appTag: this.room.appTag,
                id: n.id,
                reconnect: `${n.id}:${this.joinAs}:${n.secret}`
            })
        });
        at(this, "parseEntities", () => {
            if (!this.wsClient) return {};
            const n = this.wsClient.entities,
                i = {};
            return Object.keys(n).forEach(o => {
                const r = n[o];
                o === "room" || o === "bc:room" || o === "roomBlob" ? (r instanceof eo.TextEntity && (i.room = r.toBlob()), r instanceof eo.ObjectEntity && (i.room = r.val)) : o === "player" || o === `player:${this.id}` || o === `bc:customer:${this.userId}` ? (r instanceof eo.TextEntity && (i.player = r.toBlob()), r instanceof eo.ObjectEntity && (i.player = r.val)) : o === "audiencePlayer" && (r instanceof eo.TextEntity && (i.audiencePlayer = r.toBlob()), r instanceof eo.ObjectEntity && (i.audiencePlayer = r.val))
            }), i
        });
        this.wsClient = n, this.name = n.name, this.userId = n.userId, this.uuid = n.userId, this.joinAs = n.role, this.room = i.room, n.on("object", this.onObject.bind(this)), n.on("room/exit", this.onRoomExit.bind(this)), n.on("socketClose", this.onSocketClose.bind(this)), n.on("connection", this.onConnection.bind(this)), n.on("text", this.onText.bind(this)), this.onPlayerWelcome(i.welcome)
    }
    get entities() {
        return this.wsClient ? this.wsClient.entities : {
            none: !0
        }
    }
    get isReady() {
        var n;
        return ((n = this.wsClient) == null ? void 0 : n.conn.readyState) === WebSocket.OPEN
    }
    isRole(n) {
        const i = Object.keys(this.roles);
        return !i.length && n === "audience" ? !0 : i.includes(n)
    }
    disconnect() {
        !this.wsClient || (this.wsClient.disconnect(), this.wsClient = null)
    }
    onText(n) {
        const i = n.key,
            o = n.text;
        let r = n.text;
        try {
            r = JSON.parse(r)
        } catch {
            Kf(`[Ecast Client] Unhandled text notification: ${n.key} ${o}`);
            return
        }
        const V = r;
        i === "room" ? this.emit("client:entityDidChange", i, V) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", V) : i === "bc:room" ? this.emit("client:entityDidChange", "room", V) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", V) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", V) : Kf(`[Ecast Client] Unhandled json notification: ${i}`)
    }
    onObject(n) {
        const i = n.key,
            o = n.val;
        i === "room" ? this.emit("client:entityDidChange", i, o) : i === "player" ? this.emit("client:entityDidChange", "player", o) : i === `player:${this.id}` ? this.emit("client:entityDidChange", "player", o) : i === "textDescriptions" ? this.emit("client:textDescriptions", i, o) : i === "bc:room" ? this.emit("client:entityDidChange", "room", o) : i === "audiencePlayer" ? this.emit("client:entityDidChange", "audiencePlayer", o) : i === `bc:customer:${this.userId}` ? this.emit("client:entityDidChange", "player", o) : console.warn(`[Ecast Client] Unhandled json notification: ${i}`)
    }
    onSocketClose(n) {
        n instanceof Zi.EcastServerError || n.code === 1005 || n.code === 1e3 ? this.emit("client:roomWasDestroyed") : this.emit("client:disconnected"), this.disconnect(), this.code = null
    }
    onRoomExit(n) {
        this.emit("client:disconnected", n), this.disconnect()
    }
    onConnection(n) {
        this.emit("client:connection", n)
    }
    async send(n, i) {
        var o, r;
        if (!!this.isReady) try {
            if (n === "SendMessageToRoomOwner") {
                const V = (r = (o = this.host) == null ? void 0 : o.id) != null ? r : "1";
                await this.wsClient.mail(V, i)
            } else await this.wsClient.send(n, i)
        } catch (V) {
            console.error(V)
        }
    }
    sessionSend(n, i, o) {
        !this.isReady || (n === "vote" && this.incrementCountGroupCounter(i, `${o.vote}`), n === "comment" && this.pushTextRing(i, `${o.comment}`))
    }
    async updateText(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.updateText(n, i)
        } catch (o) {
            throw console.warn("Text update rejected.", o), o
        }
    }
    async updateObject(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.updateObject(n, i)
        } catch (o) {
            throw console.warn("Object update rejected.", o), o
        }
    }
    async incrementCountGroupCounter(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.incrementCountGroupCounter(n, `${i}`)
        } catch (o) {
            console.error(o)
        }
    }
    async incrementGCounter(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.incrementGCounter(n, i)
        } catch (o) {
            console.error(o)
        }
    }
    async pushTextRing(n, i) {
        if (!!this.isReady) try {
            await this.wsClient.pushTextRing(n, `${i}`)
        } catch (o) {
            console.error(o)
        }
    }
}
const mR = `<div id="content-region" class="content"></div>
<div id="debug-region" class="debug"></div>
<div id="banner" class="post-banner"></div>`;
(function(t) {
    t(Ye)
})(function(t) {
    var e, n = navigator.userAgent,
        i = /iphone/i.test(n),
        o = /chrome/i.test(n),
        r = /android/i.test(n);
    t.mask = {
        definitions: {
            9: "[0-9]",
            a: "[A-Za-z]",
            "*": "[A-Za-z0-9]"
        },
        autoclear: !0,
        dataName: "rawMaskFn",
        placeholder: "_"
    }, t.fn.extend({
        caret: function(V, A) {
            var c;
            if (this.length !== 0 && !this.is(":hidden")) return typeof V == "number" ? (A = typeof A == "number" ? A : V, this.each(function() {
                this.setSelectionRange ? this.setSelectionRange(V, A) : this.createTextRange && (c = this.createTextRange(), c.collapse(!0), c.moveEnd("character", A), c.moveStart("character", V), c.select())
            })) : (this[0].setSelectionRange ? (V = this[0].selectionStart, A = this[0].selectionEnd) : document.selection && document.selection.createRange && (c = document.selection.createRange(), V = 0 - c.duplicate().moveStart("character", -1e5), A = V + c.text.length), {
                begin: V,
                end: A
            })
        },
        unmask: function() {
            return this.trigger("unmask")
        },
        mask: function(V, A) {
            var c, d, m, q, v, D, S, C;
            if (!V && this.length > 0) {
                c = t(this[0]);
                var h = c.data(t.mask.dataName);
                return h ? h() : void 0
            }
            return A = t.extend({
                autoclear: t.mask.autoclear,
                placeholder: t.mask.placeholder,
                completed: null
            }, A), d = t.mask.definitions, m = [], q = S = V.length, v = null, t.each(V.split(""), function(w, T) {
                T == "?" ? (S--, q = w) : d[T] ? (m.push(new RegExp(d[T])), v === null && (v = m.length - 1), q > w && (D = m.length - 1)) : m.push(null)
            }), this.trigger("unmask").each(function() {
                function w() {
                    if (A.completed) {
                        for (var qe = v; D >= qe; qe++)
                            if (m[qe] && re[qe] === T(qe)) return;
                        A.completed.call(Y)
                    }
                }

                function T(qe) {
                    return A.placeholder.charAt(qe < A.placeholder.length ? qe : 0)
                }

                function M(qe) {
                    for (; ++qe < S && !m[qe];);
                    return qe
                }

                function O(qe) {
                    for (; --qe >= 0 && !m[qe];);
                    return qe
                }

                function Q(qe, ge) {
                    var Te, Le;
                    if (!(0 > qe)) {
                        for (Te = qe, Le = M(ge); S > Te; Te++)
                            if (m[Te]) {
                                if (!(S > Le && m[Te].test(re[Le]))) break;
                                re[Te] = re[Le], re[Le] = T(Le), Le = M(Le)
                            } oe(), Y.caret(Math.max(v, qe))
                    }
                }

                function u(qe) {
                    var ge, Te, Le, Ge;
                    for (ge = qe, Te = T(qe); S > ge; ge++)
                        if (m[ge]) {
                            if (Le = M(ge), Ge = re[ge], re[ge] = Te, !(S > Le && m[Le].test(Ge))) break;
                            Te = Ge
                        }
                }

                function J() {
                    var qe = Y.val(),
                        ge = Y.caret();
                    if (C && C.length && C.length > qe.length) {
                        for (Ie(!0); ge.begin > 0 && !m[ge.begin - 1];) ge.begin--;
                        if (ge.begin === 0)
                            for (; ge.begin < v && !m[ge.begin];) ge.begin++;
                        Y.caret(ge.begin, ge.begin)
                    } else {
                        for (Ie(!0); ge.begin < S && !m[ge.begin];) ge.begin++;
                        Y.caret(ge.begin, ge.begin)
                    }
                    w()
                }

                function se() {
                    Ie(), Y.val() != fe && Y.change()
                }

                function te(qe) {
                    if (!Y.prop("readonly")) {
                        var ge, Te, Le, Ge = qe.which || qe.keyCode;
                        C = Y.val(), Ge === 8 || Ge === 46 || i && Ge === 127 ? (ge = Y.caret(), Te = ge.begin, Le = ge.end, Le - Te === 0 && (Te = Ge !== 46 ? O(Te) : Le = M(Te - 1), Le = Ge === 46 ? M(Le) : Le), be(Te, Le), Q(Te, Le - 1), qe.preventDefault()) : Ge === 13 ? se.call(this, qe) : Ge === 27 && (Y.val(fe), Y.caret(0, Ie()), qe.preventDefault())
                    }
                }

                function ve(qe) {
                    if (!Y.prop("readonly")) {
                        var ge, Te, Le, Ge = qe.which || qe.keyCode,
                            Xe = Y.caret();
                        if (!(qe.ctrlKey || qe.altKey || qe.metaKey || 32 > Ge) && Ge && Ge !== 13) {
                            if (Xe.end - Xe.begin !== 0 && (be(Xe.begin, Xe.end), Q(Xe.begin, Xe.end - 1)), ge = M(Xe.begin - 1), S > ge && (Te = String.fromCharCode(Ge), m[ge].test(Te))) {
                                if (u(ge), re[ge] = Te, oe(), Le = M(ge), r) {
                                    var nt = function() {
                                        t.proxy(t.fn.caret, Y, Le)()
                                    };
                                    setTimeout(nt, 0)
                                } else Y.caret(Le);
                                Xe.begin <= D && w()
                            }
                            qe.preventDefault()
                        }
                    }
                }

                function be(qe, ge) {
                    var Te;
                    for (Te = qe; ge > Te && S > Te; Te++) m[Te] && (re[Te] = T(Te))
                }

                function oe() {
                    Y.val(re.join(""))
                }

                function Ie(qe) {
                    var ge, Te, Le, Ge = Y.val(),
                        Xe = -1;
                    for (ge = 0, Le = 0; S > ge; ge++)
                        if (m[ge]) {
                            for (re[ge] = T(ge); Le++ < Ge.length;)
                                if (Te = Ge.charAt(Le - 1), m[ge].test(Te)) {
                                    re[ge] = Te, Xe = ge;
                                    break
                                } if (Le > Ge.length) {
                                be(ge + 1, S);
                                break
                            }
                        } else re[ge] === Ge.charAt(Le) && Le++, q > ge && (Xe = ge);
                    return qe ? oe() : q > Xe + 1 ? A.autoclear || re.join("") === ue ? (Y.val() && Y.val(""), be(0, S)) : oe() : (oe(), Y.val(Y.val().substring(0, Xe + 1))), q ? ge : v
                }
                var Y = t(this),
                    re = t.map(V.split(""), function(qe, ge) {
                        return qe != "?" ? d[qe] ? T(ge) : qe : void 0
                    }),
                    ue = re.join(""),
                    fe = Y.val();
                Y.data(t.mask.dataName, function() {
                    return t.map(re, function(qe, ge) {
                        return m[ge] && qe != T(ge) ? qe : null
                    }).join("")
                }), Y.one("unmask", function() {
                    Y.off(".mask").removeData(t.mask.dataName)
                }).on("focus.mask", function() {
                    if (!Y.prop("readonly")) {
                        clearTimeout(e);
                        var qe;
                        fe = Y.val(), qe = Ie(), e = setTimeout(function() {
                            Y.get(0) === document.activeElement && (oe(), qe == V.replace("?", "").length ? Y.caret(0, qe) : Y.caret(qe))
                        }, 10)
                    }
                }).on("blur.mask", se).on("keydown.mask", te).on("keypress.mask", ve).on("input.mask paste.mask", function() {
                    Y.prop("readonly") || setTimeout(function() {
                        var qe = Ie(!0);
                        Y.caret(qe), w()
                    }, 0)
                }), o && r && Y.off("input.mask").on("input.mask", J), Ie()
            })
        }
    })
});
window.$ = Ye;
window.jQuery = Ye;
const fR = je.View.extend({
        className: "app-root",
        template: ke.template(mR),
        regions: {
            content: "#content-region",
            dialog: "#dialog-region",
            debug: "#debug-region"
        },
        showView(t, e = {}) {
            const n = new t(e);
            this.showChildView("content", n)
        }
    }),
    qR = t => {
        let e;
        window.tv.register({
            connect: n => (e = new eo.WSClient(n), e.connect()),
            mount: n => {
                const i = new uR(e, n);
                let o = new je.Application({
                    region: "#app",
                    onStart() {
                        const r = new fR;
                        this.showView(r), r.showView(t.MainView, {
                            appId: n.room.appId,
                            appTag: n.room.appTag,
                            replayer: n.replayer,
                            client: i
                        })
                    }
                });
                return o.start(), () => {
                    o.destroy(), o = null
                }
            },
            info: n => ({
                branch: n.branch,
                tag: n.app,
                type: n.type,
                version: n.version,
                wrapper: "marionette"
            })
        })
    },
    gR = `<div class="player-avatar avatar"></div>
<div class="info-avatar collab0 avatar"></div>
<div class="info-avatar collab1 avatar"></div>
<div class="info-avatar collab2 avatar"></div>
<div class="info-avatar collab3 avatar"></div>
<div class="info-avatar collab4 avatar"></div>
<div class="info-avatar collab5 avatar"></div>
<div class="info-avatar collab6 avatar"></div>
<div class="points"></div>
<div class="bar background-color"></div>
<div class="info-role role"><span></span></div>
<div class="player-role role"><span></span></div>
<div class="text info-text"></div>
<div class="text player-text"></div>`,
    yR = ze.Model.extend({
        defaults: {
            pendingState: null,
            state: "normal",
            playerText: null,
            playerColor: null,
            playerAvatar: null,
            playerRole: null,
            infoText: null,
            infoAvatars: [],
            infoColor: null,
            infoRole: null,
            alertQueue: [],
            isAlerting: !1,
            alertId: null,
            alertText: null,
            alertAvatars: [],
            alertColor: null,
            alertPoints: null
        },
        clearAlert() {
            this.set({
                isAlerting: !1,
                alertId: null,
                alertText: null,
                alertAvatars: [],
                alertColor: null,
                alertPoints: null
            })
        },
        setNextAlert() {
            const t = this.get("alertQueue"),
                e = t.shift();
            this.set({
                alertQueue: t,
                isAlerting: !0,
                alertId: e.id,
                alertText: e.text,
                alertAvatars: e.avatars,
                alertColor: e.color,
                infoRole: "NEEDS HELP",
                alertPoints: e.points
            })
        }
    }),
    bR = je.View.extend({
        className: "info-bar",
        model: new ze.Model,
        infoModel: new yR,
        template: ke.template(gR),
        alertTimeout: null,
        events: {
            click: "onClick"
        },
        infoBindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: ["isAlerting", "state", "collabType"],
                    onGet([t, e, n]) {
                        if (t) return "alerting";
                        let i = e;
                        return n && (i += ` collab-${n}`), i
                    }
                }]
            },
            ".bar": {
                attributes: [{
                    name: "class",
                    observe: ["state", "alertColor", "playerColor", "infoColor"],
                    onGet([t, e, n, i]) {
                        return t === "emergency" ? "" : e || (t === "normal" ? n : i || "")
                    }
                }]
            },
            ".player-text": "playerText",
            ".player-avatar": {
                attributes: [{
                    name: "class",
                    observe: "playerAvatar",
                    onGet(t) {
                        return t ? `visible ${t}` : ""
                    }
                }]
            },
            ".info-text": {
                observe: ["alertText", "infoText"],
                onGet([t, e]) {
                    return t || e || ""
                }
            },
            ".player-role span": "playerRole",
            ".player-role": {
                classes: {
                    show: "playerRole"
                }
            },
            ".info-role span": "infoRole",
            ".info-role": {
                classes: {
                    show: {
                        observe: ["infoRole", "state", "isAlerting", "infoAvatars"],
                        onGet([t, e, n, i]) {
                            return t ? n ? !0 : e === "normal" && !n ? !1 : i.length > 0 : !1
                        }
                    }
                }
            },
            ".points": {
                observe: "alertPoints",
                onGet: t => `+${t}`
            }
        },
        initialize() {
            this.listenTo(this.infoModel, "change:pendingState", this.onPendingStateChange), this.listenTo(this.infoModel, "change:alertQueue", this.onAlertQueueChange)
        },
        onRender() {
            this.stickit(this.infoModel, this.infoBindings), this.addCollabBindings()
        },
        addCollabBindings() {
            for (let t = 0; t <= 6; t++) this.addBinding(this.infoModel, `.info-avatar.collab${t}`, {
                attributes: [{
                    name: "class",
                    observe: ["isAlerting", "state", "alertAvatars", "infoAvatars"],
                    onGet: ([e, n, i, o]) => {
                        let r = "";
                        return i.length > t ? (r += i[t], e && (r += " visible"), r) : (o.length > t && (r += o[t], n !== "normal" && (r += " visible")), r)
                    }
                }]
            })
        },
        onPendingStateChange(t, e) {
            if (!e) return;
            const n = this.infoModel.get("pendingState");
            this.infoModel.set({
                pendingState: null,
                state: n
            })
        },
        updateAlertingState() {
            if (this.alertTimeout) return;
            if (!this.infoModel.get("alertQueue").length) {
                this.infoModel.set({
                    isAlerting: !1
                }), setTimeout(() => {
                    this.infoModel.clearAlert()
                }, 1e3);
                return
            }
            this.infoModel.setNextAlert(), this.startAlertTimeout()
        },
        onAlertQueueChange(t, e) {
            !e || !e.length || this.updateAlertingState()
        },
        startAlertTimeout() {
            this.alertTimeout = setTimeout(() => {
                this.alertTimeout && clearTimeout(this.alertTimeout), this.alertTimeout = null, this.updateAlertingState()
            }, 3e3)
        },
        onClick() {
            !this.infoModel.get("isAlerting") || this.triggerMethod("client:message", {
                action: "joinTask",
                id: this.infoModel.get("alertId")
            })
        }
    });
class vR {
    constructor(e, n) {
        at(this, "currentState");
        at(this, "data");
        at(this, "update", {});
        if (this.currentState = e, this.data = n, n.state === "Lobby" && n.lobbyState && n.lobbyState === "PostGame") {
            this.update.playerText = null, this.update.playerColor = null, this.update.playerAvatar = null, this.update.playerRole = null, this.setPendingState("unassigned");
            return
        }
        if (this.parsePlayerData(n), n.alerts) {
            const i = this.parseAlerts(n.alerts, n.tasks);
            this.update.alertQueue = e.alertQueue.concat(i)
        }
        if (!n.playerInfo || !n.playerInfo.avatar) {
            this.setPendingState("unassigned");
            return
        }
        if (n.state === "EmergencyObserver") {
            this.setPendingState("emergency"), this.parseEmergencyData(n);
            return
        }
        if (n.category === "EMERGENCY") {
            this.setPendingState("emergency"), this.parseEmergencyData(n);
            return
        }
        if (n.isCanceledBy && n.isCanceledBy.captain) {
            this.setPendingState("collab"), this.parseCanceledByData(n.isCanceledBy);
            return
        }
        if (n.cancels) {
            this.setPendingState("collab"), this.parseCancelerData(n.cancels);
            return
        }
        if (n.participationType && n.participationType !== "SOLO") {
            switch (this.setPendingState("collab"), n.participationType) {
                case "ALL":
                    this.parseAllCollabData(n);
                    break;
                case "OPEN":
                    this.parseOpenCollabData(n);
                    break;
                case "HELP":
                    this.parseHelpCollabData(n);
                    break
            }
            return
        }
        this.setPendingState("normal")
    }
    get isCaptain() {
        return this.data.captain ? this.data.playerInfo.name === this.data.captain.name : !1
    }
    get participants() {
        return this.data.participant ? [this.data.participant] : this.data.participants ? this.data.participants : []
    }
    get otherParticipants() {
        const e = this.data.participant ? [this.data.participant] : this.data.participants;
        return e ? e.filter(n => n.name !== this.data.playerInfo.name) : []
    }
    setPendingState(e) {
        this.currentState.state !== e && (this.update.pendingState = e)
    }
    parseRoleFromAvatar(e) {
        return e.includes("Adult") ? "ADULT" : e.includes("Child") ? "CHILD" : e.includes("Teen") ? "TEEN" : ""
    }
    parsePlayerData(e) {
        this.update.playerText = e.playerInfo && e.playerInfo.name ? e.playerInfo.name : null, this.update.playerColor = e.playerInfo && e.playerInfo.avatar ? e.playerInfo.avatar : null, this.update.playerAvatar = e.playerInfo && e.playerInfo.avatar ? e.playerInfo.avatar : null, this.update.playerRole = e.playerInfo && e.playerInfo.role ? e.playerInfo.role.id : null
    }
    parseEmergencyData(e) {
        e.playerThatCausedEmergency || (e.playerThatCausedEmergency = {
            avatar: "Audience",
            name: "The Cat"
        }), this.update.infoColor = this.update.playerColor, this.update.infoAvatars = [e.playerThatCausedEmergency.avatar], this.update.infoText = `BLAME ${e.playerThatCausedEmergency.name}`, this.update.infoRole = "DID THIS"
    }
    parseCancelerData(e) {
        const n = e.captain || {};
        this.update.infoColor = this.update.playerColor, this.update.infoAvatars = [n.avatar], this.update.infoText = `STOPPING ${n.name}`, this.update.infoRole = "SELFISH"
    }
    parseCanceledByData(e) {
        const n = e.captain || {};
        this.update.infoColor = n.avatar, this.update.infoAvatars = [n.avatar], this.update.infoText = `${n.name} IS SCOLDING YOU`, this.update.infoRole = "KILLJOY"
    }
    parseAllCollabData(e) {
        const n = this.otherParticipants;
        this.update.infoColor = this.update.playerColor, this.update.infoAvatars = n.map(i => i.avatar), e.waitingFor ? e.waitingFor.length === 1 ? this.update.infoText = "WAITING FOR 1 MORE" : (this.update.infoText = `WAITING FOR ${e.waitingFor.length} OTHERS`, this.update.infoRole = "THE FAM") : this.update.infoText = "EVERYONE IS HERE"
    }
    parseOpenCollabData(e) {
        const n = e.captain,
            i = this.participants,
            o = this.otherParticipants;
        if (e.state === "WaitingForAny") {
            this.update.infoColor = this.update.playerColor, this.update.infoAvatars = [], this.update.infoText = "WAITING FOR HELPERS";
            return
        }
        if (!n) {
            this.update.infoColor = this.update.playerColor, this.update.infoAvatars = [], this.update.infoText = "CAPTAIN HAS LEFT";
            return
        }
        if (this.isCaptain) {
            this.update.infoColor = this.update.playerColor, this.update.infoAvatars = i.map(r => r.avatar), this.update.infoRole = this.parseContextualParticipantRole(e.state), this.update.playerRole = this.parseContextualCaptainRole(e.state), i.length === 1 ? this.update.infoText = `${i[0].name} IS HELPING` : this.update.infoText = `YOU HAVE ${i.length} HELPERS`;
            return
        }
        this.update.infoColor = n.avatar, this.update.infoAvatars = [n.avatar], this.update.infoRole = this.parseContextualParticipantRole(e.state), o.forEach(r => this.update.infoAvatars.push(r.avatar)), o.length === 0 ? this.update.infoText = `HELPING ${n.name}` : this.update.infoText = `${n.name} HAS ${i.length} HELPERS`
    }
    parseHelpCollabData(e) {
        const n = e.captain,
            i = this.participants;
        if (this.isCaptain) {
            this.update.infoColor = i[0].avatar, this.update.infoAvatars = [i[0].avatar], this.update.infoText = `WORKING WITH ${i[0].name}`, this.update.infoRole = this.parseContextualCaptainRole(e.state), this.update.playerRole = this.parseContextualParticipantRole(e.state);
            return
        }
        this.update.infoColor = n.avatar, this.update.infoAvatars = [n.avatar], this.update.infoText = `WORKING WITH ${n.name}`, this.update.infoRole = this.parseContextualParticipantRole(e.state), this.update.playerRole = this.parseContextualCaptainRole(e.state)
    }
    parseContextualCaptainRole(e) {
        switch (e = e.replace("Participant", "").replace("Captain", ""), e) {
            case "FindMechanic":
                return "DESCRIBER";
            case "GatherMechanic":
                return "INSTRUCTOR";
            case "GizmosMechanic":
                return "INSTRUCTOR";
            case "InstructionsMechanic":
                return "ASSISTANT";
            case "SearchMechanic":
                return "SEARCHER";
            case "TextMechanic":
                return "READER";
            case "TravelMechanic":
                return "NAVIGATOR";
            default:
                return "HELPER"
        }
    }
    parseContextualParticipantRole(e) {
        switch (e = e.replace("Participant", "").replace("Captain", ""), e) {
            case "FindMechanic":
                return "FINDER";
            case "GatherMechanic":
                return "GATHERERS";
            case "GizmosMechanic":
                return "OPERATOR";
            case "InstructionsMechanic":
                return "INSTRUCTOR";
            case "SearchMechanic":
                return "SEARCHERS";
            case "TextMechanic":
                return "WRITER";
            case "TravelMechanic":
                return "DRIVER";
            default:
                return "NEEDER"
        }
    }
    parseAlerts(e, n) {
        return e.filter(i => i.task && i.task.category !== "CANCELER").map(i => {
            n || (n = []);
            const o = n.find(r => r.id === i.task.id);
            return {
                id: i.task.id,
                text: `${i.player.name} needs help`,
                avatars: [i.player.avatar],
                color: i.player.avatar,
                points: o ? o.participationPoints : 0
            }
        })
    }
}
const wR = je.View.extend({
        className: "empty",
        template: ke.template('<p class="empty"></p>')
    }),
    xR = `<button>
    <div class="bar-container">
        <div class="bar"></div>
    </div>
    <div class="task-icon">
        <div class="clip"></div>
    </div>
    <p class="name"></p>
</button>
<div class="help-background"></div>
<div class="alert-background background-color"></div>
<p class="help-text text-color"></p>
<div class="score"></div>`,
    kR = je.View.extend({
        tagName: "div",
        className: "task",
        template: ke.template(xR),
        triggers: {
            click: "button:join"
        },
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: ["isNew", "isFreshAlert", "isOld", "category", "status", "alert"],
                    onGet: "parseClasses"
                }]
            },
            ".name": {
                observe: "name",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                onGet(t) {
                    return `+${t}`
                },
                classes: {
                    hidden: {
                        observe: "participationPoints",
                        onGet(t) {
                            return !t
                        }
                    }
                }
            },
            ".bar": {
                attributes: [{
                    name: "style",
                    observe: "time",
                    onGet(t) {
                        return !t || t.leftInMs <= 0 ? "" : `width: ${t.leftInMs/t.totalInMs*100}%`
                    }
                }]
            },
            ".alert-background": {
                attributes: [{
                    name: "class",
                    observe: "alert",
                    onGet(t) {
                        return t ? t.player.avatar : ""
                    }
                }]
            },
            ".help-text": {
                observe: ["status", "alert"],
                updateMethod: "html",
                onGet([t, e]) {
                    return this.model.isAvailableOpenOrAll() || t === "CAN_ASK_FOR_HELP" ? "ASK FOR HELP" : t === "WAITING_FOR_HELP" ? "WAITING FOR HELP" : e && this.model.needsHelp() ? `
                            <div class="avatar head ${e.player.avatar}"></div>
                            <span>HELP</span> ${e.player.name}
                        ` : ""
                },
                attributes: [{
                    name: "class",
                    observe: "alert",
                    onGet(t) {
                        return t ? t.player.avatar : ""
                    }
                }]
            },
            ".task-icon": {
                attributes: [{
                    name: "class",
                    observe: "theme",
                    onGet(t) {
                        return t ? `theme-${t.toLowerCase()}` : ""
                    }
                }]
            }
        },
        initialize(t) {
            t.model.get("isNew") && setTimeout(() => t.model.set({
                isNew: !1
            }), 300), this.listenTo(this.model, "change:isFreshAlert", this.onIsFreshAlertChange), this.onIsFreshAlertChange()
        },
        onRender() {
            this.stickit()
        },
        onIsFreshAlertChange() {
            this.model.get("isFreshAlert") && setTimeout(() => this.model.set({
                isFreshAlert: !1
            }), 2e3)
        },
        parseClasses([t, e, n, i, o]) {
            let r = i.toLowerCase();
            return t && (r += " new"), e && (r += " fresh"), n && (r += " old"), (this.model.isHelpTask() || this.model.isAvailableOpenOrAll()) && (r += " help"), o === "WAITING_FOR_HELP" && (r += " waiting"), this.model.needsHelp() && (r += " needy"), r
        }
    }),
    CR = ze.Model.extend({
        defaults: {
            disabled: !1
        },
        needsHelp() {
            return this.get("alert") && this.get("status") === "AVAILABLE"
        },
        isAvailableOpenOrAll() {
            const t = this.get("alert"),
                e = this.get("status"),
                n = this.get("participationType");
            return t || e !== "AVAILABLE" ? !1 : n === "OPEN" || n === "ALL"
        },
        isHelpTask() {
            const t = this.get("status");
            return !!(t === "WAITING_FOR_HELP" || t === "CAN_ASK_FOR_HELP" || t === "BUSY" || this.needsHelp())
        },
        isImportant() {
            return !!(this.get("category") === "STORY" || this.get("category") === "CANCELER" || this.isAvailableOpenOrAll() || this.isHelpTask())
        }
    }),
    RR = ze.Collection.extend({
        model: CR,
        hasSet: !1,
        comparator: (t, e) => {
            const n = t.isImportant(),
                i = e.isImportant();
            return n && !i ? -1 : i && !n ? 1 : t.id < e.id ? -1 : 1
        },
        parseTasks(t) {
            if ((!t || !t.length) && this.reset(), !this.length) {
                ze.Collection.prototype.set.apply(this, [t]);
                return
            }
            const e = [],
                n = [];
            t.forEach(i => {
                e.push(i.id), i.alert = i.alert || null, i.alert && n.push(i.id), this.findWhere({
                    id: i.id
                }) ? i.isNew = !1 : (i.isNew = !0, i.alert && (i.isFreshAlert = !0))
            }), this.each(i => {
                const o = e.includes(i.get("id")),
                    r = n.includes(i.get("id"));
                o ? i.get("isOld") && (i.set({
                    isOld: !1
                }), r && i.set({
                    isFreshAlert: !0
                })) : i.set({
                    isOld: !0
                }), !i.get("alert") && r && i.set({
                    isFreshAlert: !0
                })
            }), this.add(t, {
                merge: !0
            })
        }
    }),
    DR = je.CollectionView.extend({
        tagName: "div",
        className: "tasks",
        childView: kR,
        emptyView: wR,
        collection: new RR,
        timeLeftInterval: null,
        initialize() {
            this.startTimers()
        },
        onBeforeDestroy() {
            this.pauseTimers()
        },
        startTimers() {
            this.timeLeftInterval || (this.timeLeftInterval = setInterval(this.onInterval.bind(this), 500))
        },
        pauseTimers() {
            !this.timeLeftInterval || (clearInterval(this.timeLeftInterval), this.timeLeftInterval = null)
        },
        onInterval() {
            this.collection.forEach(t => {
                const e = t.get("time");
                !e || e.leftInMs <= 0 || t.set({
                    time: {
                        totalInMs: e.totalInMs,
                        leftInMs: e.leftInMs - 500
                    }
                })
            })
        }
    }),
    SR = `<div class="clamp">
    <div class="title"></div>
    <div id="tasks-region"></div>
</div>`,
    TR = Ht.extend({
        defaults: {
            taskResult: null
        }
    }),
    ER = je.View.extend({
        className: "scrollable tasks-list",
        template: ke.template(SR),
        model: new TR,
        tasksComponent: null,
        regions: {
            tasks: "#tasks-region"
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ":el": {
                classes: {
                    dead: "isWaiting"
                }
            },
            ".title": {
                observe: "playerInfo",
                onGet(t) {
                    return `${t.role.id} TASK LIST`
                }
            },
            ".empty": {
                observe: "playerInfo",
                onGet(t) {
                    return `Chill... No ${t.role.id} Tasks Available Right Now`
                }
            },
            ".success": {
                observe: "taskResult",
                visible(t) {
                    return t === "SUCCESS"
                }
            },
            ".failure": {
                observe: "taskResult",
                visible(t) {
                    return t === "FAILURE"
                }
            }
        },
        initialize() {
            this.model.set({
                isWaiting: !0
            }), this.tasksComponent = new DR, this.listenTo(this.model, "change", this.update, this), this.listenTo(this.model, "change:isPaused", this.updatePaused, this), this.hasResult = !1, setTimeout(() => {
                this.model.set({
                    isWaiting: !1
                })
            }, 500)
        },
        update() {
            const t = this.model.get("tasks");
            this.tasksComponent.collection.name = this.model.get("playerInfo").name, this.tasksComponent.collection.parseTasks(t), this.stickit()
        },
        updatePaused(t, e) {
            !this.tasksComponent || (e ? this.tasksComponent.pauseTimers() : this.tasksComponent.startTimers())
        },
        onRender() {
            this.showChildView("tasks", this.tasksComponent), this.stickit()
        },
        onAttach() {
            this.update(), this.updateResult()
        },
        onDestroy() {
            this.tasksComponent.collection.reset()
        },
        updateResult() {
            const t = this.model.get("taskResult");
            if (!!t) {
                if (t.success) {
                    this.triggerMethod("result", {
                        type: "success",
                        category: t.taskCategory.id.toLowerCase(),
                        points: t.taskCategory.participantPoints
                    });
                    return
                }
                if (t.wasCanceled && t.playerThatCanceled) {
                    this.triggerMethod("result", {
                        type: "fail",
                        message: `${t.playerThatCanceled.name}<br/>STOPPED</br>YOU!`
                    });
                    return
                }
                this.triggerMethod("result", {
                    type: "fail"
                })
            }
        },
        onChildviewChildviewButtonJoin(t) {
            this.triggerMethod("client:message", {
                action: "joinTask",
                id: t.model.get("id")
            })
        }
    }),
    LR = `
    <div class="particles"></div>
    <div class="circle"></div>
    <p class="message"></p>
    <div class="count-up"></div>
`,
    BR = je.View.extend({
        className: "result",
        template: ke.template(LR),
        model: new ze.Model,
        hideTimer: null,
        countUpInterval: null,
        failText: ["TOO<br/>BAD", "NOT<br/>GREAT", "NO<br/>GOOD", "THUMBS<br/>DOWN"],
        emergencyText: ["CRISIS<br/>AVERTED", "PHEW!", "MERCY!", "SAVED<br/>THE DAY", "THAT<br/>WAS<br/>CLOSE", "HEROIC<br/>SAVE", "THANK<br/>HADES"],
        selfishText: ["DEVILISH", "YOU<br/>DEVIL!", "SNEAKY!", "HOPE<br/>YOU'RE<br/>HAPPY", "DEMONIC", "GOT AWAY WITH IT", "DIABOLICAL", "FIENDISH", "DEVIOUS", "SLY DEVIL", "NOBODY SAW", "AT WHAT<br/>COST?"],
        cancelerText: ["FAMILY<br/>HERO", "YOU<br/>TELL 'EM!", "THIS IS<br/>YOUR<br/>HOUSE", "ORDER<br/>RESTORED", "FUN<br/>CANCELED", "JOY<br/>AVERTED", "RULES<br/>ARE<br/>RULES", "YOU ARE<br/>THE LAW", "KAPOW!"],
        successText: ["NICE<br/>ONE", "GOT<br/>IT", "GOOD<br/>JOB", "GREAT<br/>WORK", "WELL<br/>DONE", "GREAT", "GOOD<br/>FOR YOU", "BEAUTIFUL", "YOU<br/>DID IT", "TERRIFIC", "NICE<br/>GOING", "MUY<br/>BIEN", "SUPERB", "KEEP<br/>IT UP", "WAY<br/>TO GO", "COOL<br/>MOVES", "HECK<br/>YEAH", "NOT<br/>BAD", "DEEECENT", "BRAVO"],
        storyText: ["WOAH!", "HOLY<br/>SMOKES", "BIG<br/>POINTS", "HUGE", "SO GREAT", "MASSIVE<br/>WIN", "HUMDINGER", "SPICY", "DING<br/>DING", "YES<br/>PLEASE", "PLOT<br/>POINT"],
        messages: {
            EAT_BUGS: "Tasty!<br/>Chomp more!",
            POSE_FOR_PIC: "Adorable!<br/>Keep hamming!",
            SHOW_BELLY: "Good flop!<br/>Flop again!",
            SHOW_CLAWS: "Great!<br/>Keep holding!",
            FIGHT_VACUUM: "Nice!<br/>Keep fighting!",
            DESTROY_LITTER: "Nice mess!<br/>Go again!",
            LAY_ON_LAPTOP: "Great!<br/>Hold your<br/>ground!",
            VOMIT: "Almost!<br/>Keep horking!",
            DART_OUT: "Sneaky!<br/>Go again!",
            SCRATCH_CHAIR: "Great!<br/>Scratch again!",
            KNOCK_ITEMS: "Nice!<br/>Keep<br/>smacking!",
            PAW_WATER: "Refreshing!<br/>Go again!",
            SHOW_BELLY_TRAP: "Good flop!<br/>Flop again!"
        },
        bindings: {
            ":el": {
                observe: "type",
                visible: !0,
                attributes: [{
                    name: "class",
                    observe: ["type", "points", "category"],
                    onGet([t, e, n]) {
                        let i = t;
                        return e && (i += " show-count-up"), n && (i += ` ${n}`), i
                    }
                }]
            },
            ".particles": {
                observe: "category",
                updateMethod: "html",
                onGet: "getParticleHTML"
            },
            ".message": {
                observe: "message",
                updateMethod: "html"
            },
            ".count-up": "countUp"
        },
        onRender() {
            this.stickit()
        },
        getCannedMessage(t, e) {
            return t === "success" ? e === "emergency" ? ke.sample(this.emergencyText) : e === "selfish" ? ke.sample(this.selfishText) : e === "canceler" ? ke.sample(this.cancelerText) : e === "story" ? ke.sample(this.storyText) : e === "audienceStep" ? ke.sample(this.audienceStepText) : ke.sample(this.successText) : ke.sample(this.failText)
        },
        show(t) {
            if (t.type !== "success" && t.type !== "fail") throw new Error("Unknown Result Type");
            this.model.set({
                type: t.type,
                category: t.category || "",
                message: t.message || this.messages[t.messageKey] || this.getCannedMessage(t.type, t.category),
                points: t.points
            }), t.points && setTimeout(() => {
                this.startCountUp(t.points)
            }, 150), this.hideTimer && clearTimeout(this.hideTimer), this.hideTimer = setTimeout(() => {
                this.hide()
            }, 2500)
        },
        hide() {
            this.model.clear()
        },
        startCountUp(t) {
            let e = 15,
                n = 0;
            const i = Math.floor(t / 15);
            this.countUpInterval = setInterval(() => {
                if (e === 0) {
                    clearInterval(this.countUpInterval), this.model.set({
                        countUp: `+${t}`
                    });
                    return
                }
                this.model.set({
                    countUp: `+${n}`
                }), e -= 1, n += i
            }, 30)
        },
        getParticleHTML(t) {
            if (t === "story") {
                let e = "";
                for (let n = 0; n <= 20; n++) {
                    const i = ke.random(0, 3),
                        o = ke.random(0, 750),
                        r = ke.random(750, 1e3);
                    e += `
                    <div class="particle-container" style="transform: rotate(${n*(360/20)}deg);">
                        <div class="star particle particle-${i}" style="animation-duration: ${r}ms; animation-delay: ${o}ms"></div>
                    </div>
                `
                }
                return e
            }
            return ""
        }
    }),
    MR = `<div class="clamp">
    <p class="info">This task can\u2019t start without helpers. Yell at your family to join you.</br>Or you can leave this task by tapping the X.</p>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    OR = je.View.extend({
        className: "waiting any mechanic",
        template: ke.template(MR),
        model: new Ht,
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "name",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            }
        },
        onRender() {
            this.stickit()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    IR = `<div class="scrollable">
    <div class="clamp">
        <div class="info">This task can't start until everyone is here.</div>
        <div class="waiting">Waiting for:</div>
        <div class="players"></div>
        <div class="info">Guilt these family members into joining!</div>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    PR = je.View.extend({
        className: "mechanic waiting all",
        template: ke.template(IR),
        model: new Ht,
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "name",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".players": {
                observe: "waitingFor",
                updateMethod: "html",
                onGet(t) {
                    if (!t) return "";
                    let e = "";
                    return t.forEach(n => {
                        e += `<div class="player text-color ${n.avatar}"><div class="avatar ${n.avatar}"></div>${n.name}</div>`
                    }), e
                }
            }
        },
        onRender() {
            this.stickit()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    UR = `<p>THE HOUSE IS ON FIRE!</p>
<div class="starter"></div>
<div class="fixer"></div>`,
    FR = je.View.extend({
        className: "emergency",
        template: ke.template(UR),
        model: new Ht,
        bindings: {
            ".starter": {
                observe: "playerThatCausedEmergency",
                onGet(t) {
                    return t ? `${t.name} selfish action caused it` : "BUG: NO PLAYER CAUSED THIS WHY?"
                }
            },
            ".fixer": {
                observe: "captain",
                onGet(t) {
                    return `${t.name} has to fix it`
                }
            }
        },
        onRender() {
            this.stickit()
        }
    });

function Wi(t) {
    if (t === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t
}

function ey(t, e) {
    t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e
}
/*!
 * GSAP 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var jn = {
        autoSleep: 120,
        force3D: "auto",
        nullTargetWarn: 1,
        units: {
            lineHeight: ""
        }
    },
    ya = {
        duration: .5,
        overwrite: !1,
        delay: 0
    },
    Gu, Bi = 1e8,
    jt = 1 / Bi,
    Gh = Math.PI * 2,
    jR = Gh / 4,
    QR = 0,
    ty = Math.sqrt,
    zR = Math.cos,
    HR = Math.sin,
    Dn = function(e) {
        return typeof e == "string"
    },
    mn = function(e) {
        return typeof e == "function"
    },
    as = function(e) {
        return typeof e == "number"
    },
    Xu = function(e) {
        return typeof e > "u"
    },
    rs = function(e) {
        return typeof e == "object"
    },
    Qn = function(e) {
        return e !== !1
    },
    ny = function() {
        return typeof window < "u"
    },
    Aq = function(e) {
        return mn(e) || Dn(e)
    },
    iy = typeof ArrayBuffer == "function" && ArrayBuffer.isView || function() {},
    ti = Array.isArray,
    Xh = /(?:-?\.?\d|\.)+/gi,
    sy = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
    Zo = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
    hh = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
    oy = /[+-]=-?[.\d]+/,
    ay = /[^,'"\[\]\s]+/gi,
    NR = /[\d.+\-=]+(?:e[-+]\d*)*/i,
    $t, ki, Yh, Yu, ii = {},
    Gl = {},
    ry, Vy = function(e) {
        return (Gl = va(e, ii)) && Ii
    },
    Ku = function(e, n) {
        return console.warn("Invalid property", e, "set to", n, "Missing plugin? gsap.registerPlugin()")
    },
    Xl = function(e, n) {
        return !n && console.warn(e)
    },
    ly = function(e, n) {
        return e && (ii[e] = n) && Gl && (Gl[e] = n) || ii
    },
    ba = function() {
        return 0
    },
    Wu = {},
    Cs = [],
    Kh = {},
    Ay, Jn = {},
    uh = {},
    cq = 30,
    Tl = [],
    Ju = "",
    Zu = function(e) {
        var n = e[0],
            i, o;
        if (rs(n) || mn(n) || (e = [e]), !(i = (n._gsap || {}).harness)) {
            for (o = Tl.length; o-- && !Tl[o].targetTest(n););
            i = Tl[o]
        }
        for (o = e.length; o--;) e[o] && (e[o]._gsap || (e[o]._gsap = new Ly(e[o], i))) || e.splice(o, 1);
        return e
    },
    lo = function(e) {
        return e._gsap || Zu(di(e))[0]._gsap
    },
    cy = function(e, n, i) {
        return (i = e[n]) && mn(i) ? e[n]() : Xu(i) && e.getAttribute && e.getAttribute(n) || i
    },
    ni = function(e, n) {
        return (e = e.split(",")).forEach(n) || e
    },
    wt = function(e) {
        return Math.round(e * 1e5) / 1e5 || 0
    },
    GR = function(e, n) {
        for (var i = n.length, o = 0; e.indexOf(n[o]) < 0 && ++o < i;);
        return o < i
    },
    Yl = function() {
        var e = Cs.length,
            n = Cs.slice(0),
            i, o;
        for (Kh = {}, Cs.length = 0, i = 0; i < e; i++) o = n[i], o && o._lazy && (o.render(o._lazy[0], o._lazy[1], !0)._lazy = 0)
    },
    dy = function(e, n, i, o) {
        Cs.length && Yl(), e.render(n, i, o), Cs.length && Yl()
    },
    py = function(e) {
        var n = parseFloat(e);
        return (n || n === 0) && (e + "").match(ay).length < 2 ? n : Dn(e) ? e.trim() : e
    },
    hy = function(e) {
        return e
    },
    hi = function(e, n) {
        for (var i in n) i in e || (e[i] = n[i]);
        return e
    },
    XR = function(e, n) {
        for (var i in n) i in e || i === "duration" || i === "ease" || (e[i] = n[i])
    },
    va = function(e, n) {
        for (var i in n) e[i] = n[i];
        return e
    },
    dq = function t(e, n) {
        for (var i in n) i !== "__proto__" && i !== "constructor" && i !== "prototype" && (e[i] = rs(n[i]) ? t(e[i] || (e[i] = {}), n[i]) : n[i]);
        return e
    },
    Wh = function(e, n) {
        var i = {},
            o;
        for (o in e) o in n || (i[o] = e[o]);
        return i
    },
    El = function(e) {
        var n = e.parent || $t,
            i = e.keyframes ? XR : hi;
        if (Qn(e.inherit))
            for (; n;) i(e, n.vars.defaults), n = n.parent || n._dp;
        return e
    },
    YR = function(e, n) {
        for (var i = e.length, o = i === n.length; o && i-- && e[i] === n[i];);
        return i < 0
    },
    KR = function(e, n, i, o, r) {
        i === void 0 && (i = "_first"), o === void 0 && (o = "_last");
        var V = e[o],
            A;
        if (r)
            for (A = n[r]; V && V[r] > A;) V = V._prev;
        return V ? (n._next = V._next, V._next = n) : (n._next = e[i], e[i] = n), n._next ? n._next._prev = n : e[o] = n, n._prev = V, n.parent = n._dp = e, n
    },
    hA = function(e, n, i, o) {
        i === void 0 && (i = "_first"), o === void 0 && (o = "_last");
        var r = n._prev,
            V = n._next;
        r ? r._next = V : e[i] === n && (e[i] = V), V ? V._prev = r : e[o] === n && (e[o] = r), n._next = n._prev = n.parent = null
    },
    Ss = function(e, n) {
        e.parent && (!n || e.parent.autoRemoveChildren) && e.parent.remove(e), e._act = 0
    },
    Ao = function(e, n) {
        if (e && (!n || n._end > e._dur || n._start < 0))
            for (var i = e; i;) i._dirty = 1, i = i.parent;
        return e
    },
    WR = function(e) {
        for (var n = e.parent; n && n.parent;) n._dirty = 1, n.totalDuration(), n = n.parent;
        return e
    },
    JR = function t(e) {
        return !e || e._ts && t(e.parent)
    },
    pq = function(e) {
        return e._repeat ? wa(e._tTime, e = e.duration() + e._rDelay) * e : 0
    },
    wa = function(e, n) {
        var i = Math.floor(e /= n);
        return e && i === e ? i - 1 : i
    },
    Kl = function(e, n) {
        return (e - n._start) * n._ts + (n._ts >= 0 ? 0 : n._dirty ? n.totalDuration() : n._tDur)
    },
    _u = function(e) {
        return e._end = wt(e._start + (e._tDur / Math.abs(e._ts || e._rts || jt) || 0))
    },
    uy = function(e, n) {
        var i = e._dp;
        return i && i.smoothChildTiming && e._ts && (e._start = wt(i._time - (e._ts > 0 ? n / e._ts : ((e._dirty ? e.totalDuration() : e._tDur) - n) / -e._ts)), _u(e), i._dirty || Ao(i, e)), e
    },
    my = function(e, n) {
        var i;
        if ((n._time || n._initted && !n._dur) && (i = Kl(e.rawTime(), n), (!n._dur || _r(0, n.totalDuration(), i) - n._tTime > jt) && n.render(i, !0)), Ao(e, n)._dp && e._initted && e._time >= e._dur && e._ts) {
            if (e._dur < e.duration())
                for (i = e; i._dp;) i.rawTime() >= 0 && i.totalTime(i._tTime), i = i._dp;
            e._zTime = -jt
        }
    },
    Di = function(e, n, i, o) {
        return n.parent && Ss(n), n._start = wt((as(i) ? i : i || e !== $t ? Vi(e, i, n) : e._time) + n._delay), n._end = wt(n._start + (n.totalDuration() / Math.abs(n.timeScale()) || 0)), KR(e, n, "_first", "_last", e._sort ? "_start" : 0), Jh(n) || (e._recent = n), o || my(e, n), e
    },
    fy = function(e, n) {
        return (ii.ScrollTrigger || Ku("scrollTrigger", n)) && ii.ScrollTrigger.create(n, e)
    },
    qy = function(e, n, i, o) {
        if (gD(e, n), !e._initted) return 1;
        if (!i && e._pt && (e._dur && e.vars.lazy !== !1 || !e._dur && e.vars.lazy) && Ay !== ci.frame) return Cs.push(e), e._lazy = [n, o], 1
    },
    ZR = function t(e) {
        var n = e.parent;
        return n && n._ts && n._initted && !n._lock && (n.rawTime() < 0 || t(n))
    },
    Jh = function(e) {
        var n = e.data;
        return n === "isFromStart" || n === "isStart"
    },
    _R = function(e, n, i, o) {
        var r = e.ratio,
            V = n < 0 || !n && (!e._start && ZR(e) && !(!e._initted && Jh(e)) || (e._ts < 0 || e._dp._ts < 0) && !Jh(e)) ? 0 : 1,
            A = e._rDelay,
            c = 0,
            d, m, q;
        if (A && e._repeat && (c = _r(0, e._tDur, n), m = wa(c, A), q = wa(e._tTime, A), e._yoyo && m & 1 && (V = 1 - V), m !== q && (r = 1 - V, e.vars.repeatRefresh && e._initted && e.invalidate())), V !== r || o || e._zTime === jt || !n && e._zTime) {
            if (!e._initted && qy(e, n, o, i)) return;
            for (q = e._zTime, e._zTime = n || (i ? jt : 0), i || (i = n && !q), e.ratio = V, e._from && (V = 1 - V), e._time = 0, e._tTime = c, d = e._pt; d;) d.r(V, d.d), d = d._next;
            e._startAt && n < 0 && e._startAt.render(n, !0, !0), e._onUpdate && !i && _n(e, "onUpdate"), c && e._repeat && !i && e.parent && _n(e, "onRepeat"), (n >= e._tDur || n < 0) && e.ratio === V && (V && Ss(e, 1), i || (_n(e, V ? "onComplete" : "onReverseComplete", !0), e._prom && e._prom()))
        } else e._zTime || (e._zTime = n)
    },
    $R = function(e, n, i) {
        var o;
        if (i > n)
            for (o = e._first; o && o._start <= i;) {
                if (!o._dur && o.data === "isPause" && o._start > n) return o;
                o = o._next
            } else
                for (o = e._last; o && o._start >= i;) {
                    if (!o._dur && o.data === "isPause" && o._start < n) return o;
                    o = o._prev
                }
    },
    xa = function(e, n, i, o) {
        var r = e._repeat,
            V = wt(n) || 0,
            A = e._tTime / e._tDur;
        return A && !o && (e._time *= V / e._dur), e._dur = V, e._tDur = r ? r < 0 ? 1e10 : wt(V * (r + 1) + e._rDelay * r) : V, A && !o ? uy(e, e._tTime = e._tDur * A) : e.parent && _u(e), i || Ao(e.parent, e), e
    },
    hq = function(e) {
        return e instanceof Fn ? Ao(e) : xa(e, e._dur)
    },
    eD = {
        _start: 0,
        endTime: ba,
        totalDuration: ba
    },
    Vi = function t(e, n, i) {
        var o = e.labels,
            r = e._recent || eD,
            V = e.duration() >= Bi ? r.endTime(!1) : e._dur,
            A, c, d;
        return Dn(n) && (isNaN(n) || n in o) ? (c = n.charAt(0), d = n.substr(-1) === "%", A = n.indexOf("="), c === "<" || c === ">" ? (A >= 0 && (n = n.replace(/=/, "")), (c === "<" ? r._start : r.endTime(r._repeat >= 0)) + (parseFloat(n.substr(1)) || 0) * (d ? (A < 0 ? r : i).totalDuration() / 100 : 1)) : A < 0 ? (n in o || (o[n] = V), o[n]) : (c = parseFloat(n.charAt(A - 1) + n.substr(A + 1)), d && i && (c = c / 100 * (ti(i) ? i[0] : i).totalDuration()), A > 1 ? t(e, n.substr(0, A - 1), i) + c : V + c)) : n == null ? V : +n
    },
    Ir = function(e, n, i) {
        var o = as(n[1]),
            r = (o ? 2 : 1) + (e < 2 ? 0 : 1),
            V = n[r],
            A, c;
        if (o && (V.duration = n[1]), V.parent = i, e) {
            for (A = V, c = i; c && !("immediateRender" in A);) A = c.vars.defaults || {}, c = Qn(c.vars.inherit) && c.parent;
            V.immediateRender = Qn(A.immediateRender), e < 2 ? V.runBackwards = 1 : V.startAt = n[r - 1]
        }
        return new hn(n[0], V, n[r + 1])
    },
    Ms = function(e, n) {
        return e || e === 0 ? n(e) : n
    },
    _r = function(e, n, i) {
        return i < e ? e : i > n ? n : i
    },
    ei = function(e) {
        if (typeof e != "string") return "";
        var n = NR.exec(e);
        return n ? e.substr(n.index + n[0].length) : ""
    },
    tD = function(e, n, i) {
        return Ms(i, function(o) {
            return _r(e, n, o)
        })
    },
    Zh = [].slice,
    gy = function(e, n) {
        return e && rs(e) && "length" in e && (!n && !e.length || e.length - 1 in e && rs(e[0])) && !e.nodeType && e !== ki
    },
    nD = function(e, n, i) {
        return i === void 0 && (i = []), e.forEach(function(o) {
            var r;
            return Dn(o) && !n || gy(o, 1) ? (r = i).push.apply(r, di(o)) : i.push(o)
        }) || i
    },
    di = function(e, n, i) {
        return Dn(e) && !i && (Yh || !ka()) ? Zh.call((n || Yu).querySelectorAll(e), 0) : ti(e) ? nD(e, i) : gy(e) ? Zh.call(e, 0) : e ? [e] : []
    },
    iD = function(e) {
        return e = di(e)[0] || Xl("Invalid scope") || {},
            function(n) {
                var i = e.current || e.nativeElement || e;
                return di(n, i.querySelectorAll ? i : i === e ? Xl("Invalid scope") || Yu.createElement("div") : e)
            }
    },
    yy = function(e) {
        return e.sort(function() {
            return .5 - Math.random()
        })
    },
    by = function(e) {
        if (mn(e)) return e;
        var n = rs(e) ? e : {
                each: e
            },
            i = Va(n.ease),
            o = n.from || 0,
            r = parseFloat(n.base) || 0,
            V = {},
            A = o > 0 && o < 1,
            c = isNaN(o) || A,
            d = n.axis,
            m = o,
            q = o;
        return Dn(o) ? m = q = {
                center: .5,
                edges: .5,
                end: 1
            } [o] || 0 : !A && c && (m = o[0], q = o[1]),
            function(v, D, S) {
                var C = (S || n).length,
                    h = V[C],
                    w, T, M, O, Q, u, J, se, te;
                if (!h) {
                    if (te = n.grid === "auto" ? 0 : (n.grid || [1, Bi])[1], !te) {
                        for (J = -Bi; J < (J = S[te++].getBoundingClientRect().left) && te < C;);
                        te--
                    }
                    for (h = V[C] = [], w = c ? Math.min(te, C) * m - .5 : o % te, T = c ? C * q / te - .5 : o / te | 0, J = 0, se = Bi, u = 0; u < C; u++) M = u % te - w, O = T - (u / te | 0), h[u] = Q = d ? Math.abs(d === "y" ? O : M) : ty(M * M + O * O), Q > J && (J = Q), Q < se && (se = Q);
                    o === "random" && yy(h), h.max = J - se, h.min = se, h.v = C = (parseFloat(n.amount) || parseFloat(n.each) * (te > C ? C - 1 : d ? d === "y" ? C / te : te : Math.max(te, C / te)) || 0) * (o === "edges" ? -1 : 1), h.b = C < 0 ? r - C : r, h.u = ei(n.amount || n.each) || 0, i = i && C < 0 ? Sy(i) : i
                }
                return C = (h[v] - h.min) / h.max || 0, wt(h.b + (i ? i(C) : C) * h.v) + h.u
            }
    },
    _h = function(e) {
        var n = e < 1 ? Math.pow(10, (e + "").length - 2) : 1;
        return function(i) {
            var o = Math.round(parseFloat(i) / e) * e * n;
            return (o - o % 1) / n + (as(i) ? 0 : ei(i))
        }
    },
    vy = function(e, n) {
        var i = ti(e),
            o, r;
        return !i && rs(e) && (o = i = e.radius || Bi, e.values ? (e = di(e.values), (r = !as(e[0])) && (o *= o)) : e = _h(e.increment)), Ms(n, i ? mn(e) ? function(V) {
            return r = e(V), Math.abs(r - V) <= o ? r : V
        } : function(V) {
            for (var A = parseFloat(r ? V.x : V), c = parseFloat(r ? V.y : 0), d = Bi, m = 0, q = e.length, v, D; q--;) r ? (v = e[q].x - A, D = e[q].y - c, v = v * v + D * D) : v = Math.abs(e[q] - A), v < d && (d = v, m = q);
            return m = !o || d <= o ? e[m] : V, r || m === V || as(V) ? m : m + ei(V)
        } : _h(e))
    },
    wy = function(e, n, i, o) {
        return Ms(ti(e) ? !n : i === !0 ? !!(i = 0) : !o, function() {
            return ti(e) ? e[~~(Math.random() * e.length)] : (i = i || 1e-5) && (o = i < 1 ? Math.pow(10, (i + "").length - 2) : 1) && Math.floor(Math.round((e - i / 2 + Math.random() * (n - e + i * .99)) / i) * i * o) / o
        })
    },
    sD = function() {
        for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
        return function(o) {
            return n.reduce(function(r, V) {
                return V(r)
            }, o)
        }
    },
    oD = function(e, n) {
        return function(i) {
            return e(parseFloat(i)) + (n || ei(i))
        }
    },
    aD = function(e, n, i) {
        return ky(e, n, 0, 1, i)
    },
    xy = function(e, n, i) {
        return Ms(i, function(o) {
            return e[~~n(o)]
        })
    },
    rD = function t(e, n, i) {
        var o = n - e;
        return ti(e) ? xy(e, t(0, e.length), n) : Ms(i, function(r) {
            return (o + (r - e) % o) % o + e
        })
    },
    VD = function t(e, n, i) {
        var o = n - e,
            r = o * 2;
        return ti(e) ? xy(e, t(0, e.length - 1), n) : Ms(i, function(V) {
            return V = (r + (V - e) % r) % r || 0, e + (V > o ? r - V : V)
        })
    },
    uA = function(e) {
        for (var n = 0, i = "", o, r, V, A; ~(o = e.indexOf("random(", n));) V = e.indexOf(")", o), A = e.charAt(o + 7) === "[", r = e.substr(o + 7, V - o - 7).match(A ? ay : Xh), i += e.substr(n, o - n) + wy(A ? r : +r[0], A ? 0 : +r[1], +r[2] || 1e-5), n = V + 1;
        return i + e.substr(n, e.length - n)
    },
    ky = function(e, n, i, o, r) {
        var V = n - e,
            A = o - i;
        return Ms(r, function(c) {
            return i + ((c - e) / V * A || 0)
        })
    },
    lD = function t(e, n, i, o) {
        var r = isNaN(e + n) ? 0 : function(D) {
            return (1 - D) * e + D * n
        };
        if (!r) {
            var V = Dn(e),
                A = {},
                c, d, m, q, v;
            if (i === !0 && (o = 1) && (i = null), V) e = {
                p: e
            }, n = {
                p: n
            };
            else if (ti(e) && !ti(n)) {
                for (m = [], q = e.length, v = q - 2, d = 1; d < q; d++) m.push(t(e[d - 1], e[d]));
                q--, r = function(S) {
                    S *= q;
                    var C = Math.min(v, ~~S);
                    return m[C](S - C)
                }, i = n
            } else o || (e = va(ti(e) ? [] : {}, e));
            if (!m) {
                for (c in n) $u.call(A, e, c, "get", n[c]);
                r = function(S) {
                    return n0(S, A) || (V ? e.p : e)
                }
            }
        }
        return Ms(i, r)
    },
    uq = function(e, n, i) {
        var o = e.labels,
            r = Bi,
            V, A, c;
        for (V in o) A = o[V] - n, A < 0 == !!i && A && r > (A = Math.abs(A)) && (c = V, r = A);
        return c
    },
    _n = function(e, n, i) {
        var o = e.vars,
            r = o[n],
            V, A;
        if (!!r) return V = o[n + "Params"], A = o.callbackScope || e, i && Cs.length && Yl(), V ? r.apply(A, V) : r.call(A)
    },
    vr = function(e) {
        return Ss(e), e.scrollTrigger && e.scrollTrigger.kill(!1), e.progress() < 1 && _n(e, "onInterrupt"), e
    },
    _o, AD = function(e) {
        e = !e.name && e.default || e;
        var n = e.name,
            i = mn(e),
            o = n && !i && e.init ? function() {
                this._props = []
            } : e,
            r = {
                init: ba,
                render: n0,
                add: $u,
                kill: CD,
                modifier: kD,
                rawVars: 0
            },
            V = {
                targetTest: 0,
                get: 0,
                getSetter: t0,
                aliases: {},
                register: 0
            };
        if (ka(), e !== o) {
            if (Jn[n]) return;
            hi(o, hi(Wh(e, r), V)), va(o.prototype, va(r, Wh(e, V))), Jn[o.prop = n] = o, e.targetTest && (Tl.push(o), Wu[n] = 1), n = (n === "css" ? "CSS" : n.charAt(0).toUpperCase() + n.substr(1)) + "Plugin"
        }
        ly(n, o), e.register && e.register(Ii, o, zn)
    },
    Nt = 255,
    wr = {
        aqua: [0, Nt, Nt],
        lime: [0, Nt, 0],
        silver: [192, 192, 192],
        black: [0, 0, 0],
        maroon: [128, 0, 0],
        teal: [0, 128, 128],
        blue: [0, 0, Nt],
        navy: [0, 0, 128],
        white: [Nt, Nt, Nt],
        olive: [128, 128, 0],
        yellow: [Nt, Nt, 0],
        orange: [Nt, 165, 0],
        gray: [128, 128, 128],
        purple: [128, 0, 128],
        green: [0, 128, 0],
        red: [Nt, 0, 0],
        pink: [Nt, 192, 203],
        cyan: [0, Nt, Nt],
        transparent: [Nt, Nt, Nt, 0]
    },
    mh = function(e, n, i) {
        return e = e < 0 ? e + 1 : e > 1 ? e - 1 : e, (e * 6 < 1 ? n + (i - n) * e * 6 : e < .5 ? i : e * 3 < 2 ? n + (i - n) * (2 / 3 - e) * 6 : n) * Nt + .5 | 0
    },
    Cy = function(e, n, i) {
        var o = e ? as(e) ? [e >> 16, e >> 8 & Nt, e & Nt] : 0 : wr.black,
            r, V, A, c, d, m, q, v, D, S;
        if (!o) {
            if (e.substr(-1) === "," && (e = e.substr(0, e.length - 1)), wr[e]) o = wr[e];
            else if (e.charAt(0) === "#") {
                if (e.length < 6 && (r = e.charAt(1), V = e.charAt(2), A = e.charAt(3), e = "#" + r + r + V + V + A + A + (e.length === 5 ? e.charAt(4) + e.charAt(4) : "")), e.length === 9) return o = parseInt(e.substr(1, 6), 16), [o >> 16, o >> 8 & Nt, o & Nt, parseInt(e.substr(7), 16) / 255];
                e = parseInt(e.substr(1), 16), o = [e >> 16, e >> 8 & Nt, e & Nt]
            } else if (e.substr(0, 3) === "hsl") {
                if (o = S = e.match(Xh), !n) c = +o[0] % 360 / 360, d = +o[1] / 100, m = +o[2] / 100, V = m <= .5 ? m * (d + 1) : m + d - m * d, r = m * 2 - V, o.length > 3 && (o[3] *= 1), o[0] = mh(c + 1 / 3, r, V), o[1] = mh(c, r, V), o[2] = mh(c - 1 / 3, r, V);
                else if (~e.indexOf("=")) return o = e.match(sy), i && o.length < 4 && (o[3] = 1), o
            } else o = e.match(Xh) || wr.transparent;
            o = o.map(Number)
        }
        return n && !S && (r = o[0] / Nt, V = o[1] / Nt, A = o[2] / Nt, q = Math.max(r, V, A), v = Math.min(r, V, A), m = (q + v) / 2, q === v ? c = d = 0 : (D = q - v, d = m > .5 ? D / (2 - q - v) : D / (q + v), c = q === r ? (V - A) / D + (V < A ? 6 : 0) : q === V ? (A - r) / D + 2 : (r - V) / D + 4, c *= 60), o[0] = ~~(c + .5), o[1] = ~~(d * 100 + .5), o[2] = ~~(m * 100 + .5)), i && o.length < 4 && (o[3] = 1), o
    },
    Ry = function(e) {
        var n = [],
            i = [],
            o = -1;
        return e.split(Rs).forEach(function(r) {
            var V = r.match(Zo) || [];
            n.push.apply(n, V), i.push(o += V.length + 1)
        }), n.c = i, n
    },
    mq = function(e, n, i) {
        var o = "",
            r = (e + o).match(Rs),
            V = n ? "hsla(" : "rgba(",
            A = 0,
            c, d, m, q;
        if (!r) return e;
        if (r = r.map(function(v) {
                return (v = Cy(v, n, 1)) && V + (n ? v[0] + "," + v[1] + "%," + v[2] + "%," + v[3] : v.join(",")) + ")"
            }), i && (m = Ry(e), c = i.c, c.join(o) !== m.c.join(o)))
            for (d = e.replace(Rs, "1").split(Zo), q = d.length - 1; A < q; A++) o += d[A] + (~c.indexOf(A) ? r.shift() || V + "0,0,0,0)" : (m.length ? m : r.length ? r : i).shift());
        if (!d)
            for (d = e.split(Rs), q = d.length - 1; A < q; A++) o += d[A] + r[A];
        return o + d[q]
    },
    Rs = function() {
        var t = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
            e;
        for (e in wr) t += "|" + e + "\\b";
        return new RegExp(t + ")", "gi")
    }(),
    cD = /hsl[a]?\(/,
    Dy = function(e) {
        var n = e.join(" "),
            i;
        if (Rs.lastIndex = 0, Rs.test(n)) return i = cD.test(n), e[1] = mq(e[1], i), e[0] = mq(e[0], i, Ry(e[1])), !0
    },
    Wl, ci = function() {
        var t = Date.now,
            e = 500,
            n = 33,
            i = t(),
            o = i,
            r = 1e3 / 240,
            V = r,
            A = [],
            c, d, m, q, v, D, S = function C(h) {
                var w = t() - o,
                    T = h === !0,
                    M, O, Q, u;
                if (w > e && (i += w - n), o += w, Q = o - i, M = Q - V, (M > 0 || T) && (u = ++q.frame, v = Q - q.time * 1e3, q.time = Q = Q / 1e3, V += M + (M >= r ? 4 : r - M), O = 1), T || (c = d(C)), O)
                    for (D = 0; D < A.length; D++) A[D](Q, v, u, h)
            };
        return q = {
            time: 0,
            frame: 0,
            tick: function() {
                S(!0)
            },
            deltaRatio: function(h) {
                return v / (1e3 / (h || 60))
            },
            wake: function() {
                ry && (!Yh && ny() && (ki = Yh = window, Yu = ki.document || {}, ii.gsap = Ii, (ki.gsapVersions || (ki.gsapVersions = [])).push(Ii.version), Vy(Gl || ki.GreenSockGlobals || !ki.gsap && ki || {}), m = ki.requestAnimationFrame), c && q.sleep(), d = m || function(h) {
                    return setTimeout(h, V - q.time * 1e3 + 1 | 0)
                }, Wl = 1, S(2))
            },
            sleep: function() {
                (m ? ki.cancelAnimationFrame : clearTimeout)(c), Wl = 0, d = ba
            },
            lagSmoothing: function(h, w) {
                e = h || 1 / jt, n = Math.min(w, e, 0)
            },
            fps: function(h) {
                r = 1e3 / (h || 240), V = q.time * 1e3 + r
            },
            add: function(h) {
                A.indexOf(h) < 0 && A.push(h), ka()
            },
            remove: function(h) {
                var w;
                ~(w = A.indexOf(h)) && A.splice(w, 1) && D >= w && D--
            },
            _listeners: A
        }, q
    }(),
    ka = function() {
        return !Wl && ci.wake()
    },
    Rt = {},
    dD = /^[\d.\-M][\d.\-,\s]/,
    pD = /["']/g,
    hD = function(e) {
        for (var n = {}, i = e.substr(1, e.length - 3).split(":"), o = i[0], r = 1, V = i.length, A, c, d; r < V; r++) c = i[r], A = r !== V - 1 ? c.lastIndexOf(",") : c.length, d = c.substr(0, A), n[o] = isNaN(d) ? d.replace(pD, "").trim() : +d, o = c.substr(A + 1).trim();
        return n
    },
    uD = function(e) {
        var n = e.indexOf("(") + 1,
            i = e.indexOf(")"),
            o = e.indexOf("(", n);
        return e.substring(n, ~o && o < i ? e.indexOf(")", i + 1) : i)
    },
    mD = function(e) {
        var n = (e + "").split("("),
            i = Rt[n[0]];
        return i && n.length > 1 && i.config ? i.config.apply(null, ~e.indexOf("{") ? [hD(n[1])] : uD(e).split(",").map(py)) : Rt._CE && dD.test(e) ? Rt._CE("", e) : i
    },
    Sy = function(e) {
        return function(n) {
            return 1 - e(1 - n)
        }
    },
    Ty = function t(e, n) {
        for (var i = e._first, o; i;) i instanceof Fn ? t(i, n) : i.vars.yoyoEase && (!i._yoyo || !i._repeat) && i._yoyo !== n && (i.timeline ? t(i.timeline, n) : (o = i._ease, i._ease = i._yEase, i._yEase = o, i._yoyo = n)), i = i._next
    },
    Va = function(e, n) {
        return e && (mn(e) ? e : Rt[e] || mD(e)) || n
    },
    mo = function(e, n, i, o) {
        i === void 0 && (i = function(c) {
            return 1 - n(1 - c)
        }), o === void 0 && (o = function(c) {
            return c < .5 ? n(c * 2) / 2 : 1 - n((1 - c) * 2) / 2
        });
        var r = {
                easeIn: n,
                easeOut: i,
                easeInOut: o
            },
            V;
        return ni(e, function(A) {
            Rt[A] = ii[A] = r, Rt[V = A.toLowerCase()] = i;
            for (var c in r) Rt[V + (c === "easeIn" ? ".in" : c === "easeOut" ? ".out" : ".inOut")] = Rt[A + "." + c] = r[c]
        }), r
    },
    Ey = function(e) {
        return function(n) {
            return n < .5 ? (1 - e(1 - n * 2)) / 2 : .5 + e((n - .5) * 2) / 2
        }
    },
    fh = function t(e, n, i) {
        var o = n >= 1 ? n : 1,
            r = (i || (e ? .3 : .45)) / (n < 1 ? n : 1),
            V = r / Gh * (Math.asin(1 / o) || 0),
            A = function(m) {
                return m === 1 ? 1 : o * Math.pow(2, -10 * m) * HR((m - V) * r) + 1
            },
            c = e === "out" ? A : e === "in" ? function(d) {
                return 1 - A(1 - d)
            } : Ey(A);
        return r = Gh / r, c.config = function(d, m) {
            return t(e, d, m)
        }, c
    },
    qh = function t(e, n) {
        n === void 0 && (n = 1.70158);
        var i = function(V) {
                return V ? --V * V * ((n + 1) * V + n) + 1 : 0
            },
            o = e === "out" ? i : e === "in" ? function(r) {
                return 1 - i(1 - r)
            } : Ey(i);
        return o.config = function(r) {
            return t(e, r)
        }, o
    };
ni("Linear,Quad,Cubic,Quart,Quint,Strong", function(t, e) {
    var n = e < 5 ? e + 1 : e;
    mo(t + ",Power" + (n - 1), e ? function(i) {
        return Math.pow(i, n)
    } : function(i) {
        return i
    }, function(i) {
        return 1 - Math.pow(1 - i, n)
    }, function(i) {
        return i < .5 ? Math.pow(i * 2, n) / 2 : 1 - Math.pow((1 - i) * 2, n) / 2
    })
});
Rt.Linear.easeNone = Rt.none = Rt.Linear.easeIn;
mo("Elastic", fh("in"), fh("out"), fh());
(function(t, e) {
    var n = 1 / e,
        i = 2 * n,
        o = 2.5 * n,
        r = function(A) {
            return A < n ? t * A * A : A < i ? t * Math.pow(A - 1.5 / e, 2) + .75 : A < o ? t * (A -= 2.25 / e) * A + .9375 : t * Math.pow(A - 2.625 / e, 2) + .984375
        };
    mo("Bounce", function(V) {
        return 1 - r(1 - V)
    }, r)
})(7.5625, 2.75);
mo("Expo", function(t) {
    return t ? Math.pow(2, 10 * (t - 1)) : 0
});
mo("Circ", function(t) {
    return -(ty(1 - t * t) - 1)
});
mo("Sine", function(t) {
    return t === 1 ? 1 : -zR(t * jR) + 1
});
mo("Back", qh("in"), qh("out"), qh());
Rt.SteppedEase = Rt.steps = ii.SteppedEase = {
    config: function(e, n) {
        e === void 0 && (e = 1);
        var i = 1 / e,
            o = e + (n ? 0 : 1),
            r = n ? 1 : 0,
            V = 1 - jt;
        return function(A) {
            return ((o * _r(0, V, A) | 0) + r) * i
        }
    }
};
ya.ease = Rt["quad.out"];
ni("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function(t) {
    return Ju += t + "," + t + "Params,"
});
var Ly = function(e, n) {
        this.id = QR++, e._gsap = this, this.target = e, this.harness = n, this.get = n ? n.get : cy, this.set = n ? n.getSetter : t0
    },
    zr = function() {
        function t(n) {
            this.vars = n, this._delay = +n.delay || 0, (this._repeat = n.repeat === 1 / 0 ? -2 : n.repeat || 0) && (this._rDelay = n.repeatDelay || 0, this._yoyo = !!n.yoyo || !!n.yoyoEase), this._ts = 1, xa(this, +n.duration, 1, 1), this.data = n.data, Wl || ci.wake()
        }
        var e = t.prototype;
        return e.delay = function(i) {
            return i || i === 0 ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + i - this._delay), this._delay = i, this) : this._delay
        }, e.duration = function(i) {
            return arguments.length ? this.totalDuration(this._repeat > 0 ? i + (i + this._rDelay) * this._repeat : i) : this.totalDuration() && this._dur
        }, e.totalDuration = function(i) {
            return arguments.length ? (this._dirty = 0, xa(this, this._repeat < 0 ? i : (i - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur
        }, e.totalTime = function(i, o) {
            if (ka(), !arguments.length) return this._tTime;
            var r = this._dp;
            if (r && r.smoothChildTiming && this._ts) {
                for (uy(this, i), !r._dp || r.parent || my(r, this); r.parent;) r.parent._time !== r._start + (r._ts >= 0 ? r._tTime / r._ts : (r.totalDuration() - r._tTime) / -r._ts) && r.totalTime(r._tTime, !0), r = r.parent;
                !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && i < this._tDur || this._ts < 0 && i > 0 || !this._tDur && !i) && Di(this._dp, this, this._start - this._delay)
            }
            return (this._tTime !== i || !this._dur && !o || this._initted && Math.abs(this._zTime) === jt || !i && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = i), dy(this, i, o)), this
        }, e.time = function(i, o) {
            return arguments.length ? this.totalTime(Math.min(this.totalDuration(), i + pq(this)) % this._dur || (i ? this._dur : 0), o) : this._time
        }, e.totalProgress = function(i, o) {
            return arguments.length ? this.totalTime(this.totalDuration() * i, o) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio
        }, e.progress = function(i, o) {
            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - i : i) + pq(this), o) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio
        }, e.iteration = function(i, o) {
            var r = this.duration() + this._rDelay;
            return arguments.length ? this.totalTime(this._time + (i - 1) * r, o) : this._repeat ? wa(this._tTime, r) + 1 : 1
        }, e.timeScale = function(i) {
            if (!arguments.length) return this._rts === -jt ? 0 : this._rts;
            if (this._rts === i) return this;
            var o = this.parent && this._ts ? Kl(this.parent._time, this) : this._tTime;
            return this._rts = +i || 0, this._ts = this._ps || i === -jt ? 0 : this._rts, WR(this.totalTime(_r(-this._delay, this._tDur, o), !0))
        }, e.paused = function(i) {
            return arguments.length ? (this._ps !== i && (this._ps = i, i ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (ka(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && (this._tTime -= jt) && Math.abs(this._zTime) !== jt))), this) : this._ps
        }, e.startTime = function(i) {
            if (arguments.length) {
                this._start = i;
                var o = this.parent || this._dp;
                return o && (o._sort || !this.parent) && Di(o, this, i - this._delay), this
            }
            return this._start
        }, e.endTime = function(i) {
            return this._start + (Qn(i) ? this.totalDuration() : this.duration()) / Math.abs(this._ts)
        }, e.rawTime = function(i) {
            var o = this.parent || this._dp;
            return o ? i && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? Kl(o.rawTime(i), this) : this._tTime : this._tTime
        }, e.globalTime = function(i) {
            for (var o = this, r = arguments.length ? i : o.rawTime(); o;) r = o._start + r / (o._ts || 1), o = o._dp;
            return r
        }, e.repeat = function(i) {
            return arguments.length ? (this._repeat = i === 1 / 0 ? -2 : i, hq(this)) : this._repeat === -2 ? 1 / 0 : this._repeat
        }, e.repeatDelay = function(i) {
            return arguments.length ? (this._rDelay = i, hq(this)) : this._rDelay
        }, e.yoyo = function(i) {
            return arguments.length ? (this._yoyo = i, this) : this._yoyo
        }, e.seek = function(i, o) {
            return this.totalTime(Vi(this, i), Qn(o))
        }, e.restart = function(i, o) {
            return this.play().totalTime(i ? -this._delay : 0, Qn(o))
        }, e.play = function(i, o) {
            return i != null && this.seek(i, o), this.reversed(!1).paused(!1)
        }, e.reverse = function(i, o) {
            return i != null && this.seek(i || this.totalDuration(), o), this.reversed(!0).paused(!1)
        }, e.pause = function(i, o) {
            return i != null && this.seek(i, o), this.paused(!0)
        }, e.resume = function() {
            return this.paused(!1)
        }, e.reversed = function(i) {
            return arguments.length ? (!!i !== this.reversed() && this.timeScale(-this._rts || (i ? -jt : 0)), this) : this._rts < 0
        }, e.invalidate = function() {
            return this._initted = this._act = 0, this._zTime = -jt, this
        }, e.isActive = function() {
            var i = this.parent || this._dp,
                o = this._start,
                r;
            return !!(!i || this._ts && this._initted && i.isActive() && (r = i.rawTime(!0)) >= o && r < this.endTime(!0) - jt)
        }, e.eventCallback = function(i, o, r) {
            var V = this.vars;
            return arguments.length > 1 ? (o ? (V[i] = o, r && (V[i + "Params"] = r), i === "onUpdate" && (this._onUpdate = o)) : delete V[i], this) : V[i]
        }, e.then = function(i) {
            var o = this;
            return new Promise(function(r) {
                var V = mn(i) ? i : hy,
                    A = function() {
                        var d = o.then;
                        o.then = null, mn(V) && (V = V(o)) && (V.then || V === o) && (o.then = d), r(V), o.then = d
                    };
                o._initted && o.totalProgress() === 1 && o._ts >= 0 || !o._tTime && o._ts < 0 ? A() : o._prom = A
            })
        }, e.kill = function() {
            vr(this)
        }, t
    }();
hi(zr.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: !1,
    parent: null,
    _initted: !1,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -jt,
    _prom: 0,
    _ps: !1,
    _rts: 1
});
var Fn = function(t) {
    ey(e, t);

    function e(i, o) {
        var r;
        return i === void 0 && (i = {}), r = t.call(this, i) || this, r.labels = {}, r.smoothChildTiming = !!i.smoothChildTiming, r.autoRemoveChildren = !!i.autoRemoveChildren, r._sort = Qn(i.sortChildren), $t && Di(i.parent || $t, Wi(r), o), i.reversed && r.reverse(), i.paused && r.paused(!0), i.scrollTrigger && fy(Wi(r), i.scrollTrigger), r
    }
    var n = e.prototype;
    return n.to = function(o, r, V) {
        return Ir(0, arguments, this), this
    }, n.from = function(o, r, V) {
        return Ir(1, arguments, this), this
    }, n.fromTo = function(o, r, V, A) {
        return Ir(2, arguments, this), this
    }, n.set = function(o, r, V) {
        return r.duration = 0, r.parent = this, El(r).repeatDelay || (r.repeat = 0), r.immediateRender = !!r.immediateRender, new hn(o, r, Vi(this, V), 1), this
    }, n.call = function(o, r, V) {
        return Di(this, hn.delayedCall(0, o, r), V)
    }, n.staggerTo = function(o, r, V, A, c, d, m) {
        return V.duration = r, V.stagger = V.stagger || A, V.onComplete = d, V.onCompleteParams = m, V.parent = this, new hn(o, V, Vi(this, c)), this
    }, n.staggerFrom = function(o, r, V, A, c, d, m) {
        return V.runBackwards = 1, El(V).immediateRender = Qn(V.immediateRender), this.staggerTo(o, r, V, A, c, d, m)
    }, n.staggerFromTo = function(o, r, V, A, c, d, m, q) {
        return A.startAt = V, El(A).immediateRender = Qn(A.immediateRender), this.staggerTo(o, r, A, c, d, m, q)
    }, n.render = function(o, r, V) {
        var A = this._time,
            c = this._dirty ? this.totalDuration() : this._tDur,
            d = this._dur,
            m = this !== $t && o > c - jt && o >= 0 ? c : o < jt ? 0 : o,
            q = this._zTime < 0 != o < 0 && (this._initted || !d),
            v, D, S, C, h, w, T, M, O, Q, u, J;
        if (m !== this._tTime || V || q) {
            if (A !== this._time && d && (m += this._time - A, o += this._time - A), v = m, O = this._start, M = this._ts, w = !M, q && (d || (A = this._zTime), (o || !r) && (this._zTime = o)), this._repeat) {
                if (u = this._yoyo, h = d + this._rDelay, this._repeat < -1 && o < 0) return this.totalTime(h * 100 + o, r, V);
                if (v = wt(m % h), m === c ? (C = this._repeat, v = d) : (C = ~~(m / h), C && C === m / h && (v = d, C--), v > d && (v = d)), Q = wa(this._tTime, h), !A && this._tTime && Q !== C && (Q = C), u && C & 1 && (v = d - v, J = 1), C !== Q && !this._lock) {
                    var se = u && Q & 1,
                        te = se === (u && C & 1);
                    if (C < Q && (se = !se), A = se ? 0 : d, this._lock = 1, this.render(A || (J ? 0 : wt(C * h)), r, !d)._lock = 0, this._tTime = m, !r && this.parent && _n(this, "onRepeat"), this.vars.repeatRefresh && !J && (this.invalidate()._lock = 1), A && A !== this._time || w !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) return this;
                    if (d = this._dur, c = this._tDur, te && (this._lock = 2, A = se ? d : -1e-4, this.render(A, !0), this.vars.repeatRefresh && !J && this.invalidate()), this._lock = 0, !this._ts && !w) return this;
                    Ty(this, J)
                }
            }
            if (this._hasPause && !this._forcing && this._lock < 2 && (T = $R(this, wt(A), wt(v)), T && (m -= v - (v = T._start))), this._tTime = m, this._time = v, this._act = !M, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = o, A = 0), !A && v && !r && (_n(this, "onStart"), this._tTime !== m)) return this;
            if (v >= A && o >= 0)
                for (D = this._first; D;) {
                    if (S = D._next, (D._act || v >= D._start) && D._ts && T !== D) {
                        if (D.parent !== this) return this.render(o, r, V);
                        if (D.render(D._ts > 0 ? (v - D._start) * D._ts : (D._dirty ? D.totalDuration() : D._tDur) + (v - D._start) * D._ts, r, V), v !== this._time || !this._ts && !w) {
                            T = 0, S && (m += this._zTime = -jt);
                            break
                        }
                    }
                    D = S
                } else {
                    D = this._last;
                    for (var ve = o < 0 ? o : v; D;) {
                        if (S = D._prev, (D._act || ve <= D._end) && D._ts && T !== D) {
                            if (D.parent !== this) return this.render(o, r, V);
                            if (D.render(D._ts > 0 ? (ve - D._start) * D._ts : (D._dirty ? D.totalDuration() : D._tDur) + (ve - D._start) * D._ts, r, V), v !== this._time || !this._ts && !w) {
                                T = 0, S && (m += this._zTime = ve ? -jt : jt);
                                break
                            }
                        }
                        D = S
                    }
                }
            if (T && !r && (this.pause(), T.render(v >= A ? 0 : -jt)._zTime = v >= A ? 1 : -1, this._ts)) return this._start = O, _u(this), this.render(o, r, V);
            this._onUpdate && !r && _n(this, "onUpdate", !0), (m === c && c >= this.totalDuration() || !m && A) && (O === this._start || Math.abs(M) !== Math.abs(this._ts)) && (this._lock || ((o || !d) && (m === c && this._ts > 0 || !m && this._ts < 0) && Ss(this, 1), !r && !(o < 0 && !A) && (m || A || !c) && (_n(this, m === c && o >= 0 ? "onComplete" : "onReverseComplete", !0), this._prom && !(m < c && this.timeScale() > 0) && this._prom())))
        }
        return this
    }, n.add = function(o, r) {
        var V = this;
        if (as(r) || (r = Vi(this, r, o)), !(o instanceof zr)) {
            if (ti(o)) return o.forEach(function(A) {
                return V.add(A, r)
            }), this;
            if (Dn(o)) return this.addLabel(o, r);
            if (mn(o)) o = hn.delayedCall(0, o);
            else return this
        }
        return this !== o ? Di(this, o, r) : this
    }, n.getChildren = function(o, r, V, A) {
        o === void 0 && (o = !0), r === void 0 && (r = !0), V === void 0 && (V = !0), A === void 0 && (A = -Bi);
        for (var c = [], d = this._first; d;) d._start >= A && (d instanceof hn ? r && c.push(d) : (V && c.push(d), o && c.push.apply(c, d.getChildren(!0, r, V)))), d = d._next;
        return c
    }, n.getById = function(o) {
        for (var r = this.getChildren(1, 1, 1), V = r.length; V--;)
            if (r[V].vars.id === o) return r[V]
    }, n.remove = function(o) {
        return Dn(o) ? this.removeLabel(o) : mn(o) ? this.killTweensOf(o) : (hA(this, o), o === this._recent && (this._recent = this._last), Ao(this))
    }, n.totalTime = function(o, r) {
        return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = wt(ci.time - (this._ts > 0 ? o / this._ts : (this.totalDuration() - o) / -this._ts))), t.prototype.totalTime.call(this, o, r), this._forcing = 0, this) : this._tTime
    }, n.addLabel = function(o, r) {
        return this.labels[o] = Vi(this, r), this
    }, n.removeLabel = function(o) {
        return delete this.labels[o], this
    }, n.addPause = function(o, r, V) {
        var A = hn.delayedCall(0, r || ba, V);
        return A.data = "isPause", this._hasPause = 1, Di(this, A, Vi(this, o))
    }, n.removePause = function(o) {
        var r = this._first;
        for (o = Vi(this, o); r;) r._start === o && r.data === "isPause" && Ss(r), r = r._next
    }, n.killTweensOf = function(o, r, V) {
        for (var A = this.getTweensOf(o, V), c = A.length; c--;) ms !== A[c] && A[c].kill(o, r);
        return this
    }, n.getTweensOf = function(o, r) {
        for (var V = [], A = di(o), c = this._first, d = as(r), m; c;) c instanceof hn ? GR(c._targets, A) && (d ? (!ms || c._initted && c._ts) && c.globalTime(0) <= r && c.globalTime(c.totalDuration()) > r : !r || c.isActive()) && V.push(c) : (m = c.getTweensOf(A, r)).length && V.push.apply(V, m), c = c._next;
        return V
    }, n.tweenTo = function(o, r) {
        r = r || {};
        var V = this,
            A = Vi(V, o),
            c = r,
            d = c.startAt,
            m = c.onStart,
            q = c.onStartParams,
            v = c.immediateRender,
            D, S = hn.to(V, hi({
                ease: r.ease || "none",
                lazy: !1,
                immediateRender: !1,
                time: A,
                overwrite: "auto",
                duration: r.duration || Math.abs((A - (d && "time" in d ? d.time : V._time)) / V.timeScale()) || jt,
                onStart: function() {
                    if (V.pause(), !D) {
                        var h = r.duration || Math.abs((A - (d && "time" in d ? d.time : V._time)) / V.timeScale());
                        S._dur !== h && xa(S, h, 0, 1).render(S._time, !0, !0), D = 1
                    }
                    m && m.apply(S, q || [])
                }
            }, r));
        return v ? S.render(0) : S
    }, n.tweenFromTo = function(o, r, V) {
        return this.tweenTo(r, hi({
            startAt: {
                time: Vi(this, o)
            }
        }, V))
    }, n.recent = function() {
        return this._recent
    }, n.nextLabel = function(o) {
        return o === void 0 && (o = this._time), uq(this, Vi(this, o))
    }, n.previousLabel = function(o) {
        return o === void 0 && (o = this._time), uq(this, Vi(this, o), 1)
    }, n.currentLabel = function(o) {
        return arguments.length ? this.seek(o, !0) : this.previousLabel(this._time + jt)
    }, n.shiftChildren = function(o, r, V) {
        V === void 0 && (V = 0);
        for (var A = this._first, c = this.labels, d; A;) A._start >= V && (A._start += o, A._end += o), A = A._next;
        if (r)
            for (d in c) c[d] >= V && (c[d] += o);
        return Ao(this)
    }, n.invalidate = function() {
        var o = this._first;
        for (this._lock = 0; o;) o.invalidate(), o = o._next;
        return t.prototype.invalidate.call(this)
    }, n.clear = function(o) {
        o === void 0 && (o = !0);
        for (var r = this._first, V; r;) V = r._next, this.remove(r), r = V;
        return this._dp && (this._time = this._tTime = this._pTime = 0), o && (this.labels = {}), Ao(this)
    }, n.totalDuration = function(o) {
        var r = 0,
            V = this,
            A = V._last,
            c = Bi,
            d, m, q;
        if (arguments.length) return V.timeScale((V._repeat < 0 ? V.duration() : V.totalDuration()) / (V.reversed() ? -o : o));
        if (V._dirty) {
            for (q = V.parent; A;) d = A._prev, A._dirty && A.totalDuration(), m = A._start, m > c && V._sort && A._ts && !V._lock ? (V._lock = 1, Di(V, A, m - A._delay, 1)._lock = 0) : c = m, m < 0 && A._ts && (r -= m, (!q && !V._dp || q && q.smoothChildTiming) && (V._start += m / V._ts, V._time -= m, V._tTime -= m), V.shiftChildren(-m, !1, -1 / 0), c = 0), A._end > r && A._ts && (r = A._end), A = d;
            xa(V, V === $t && V._time > r ? V._time : r, 1, 1), V._dirty = 0
        }
        return V._tDur
    }, e.updateRoot = function(o) {
        if ($t._ts && (dy($t, Kl(o, $t)), Ay = ci.frame), ci.frame >= cq) {
            cq += jn.autoSleep || 120;
            var r = $t._first;
            if ((!r || !r._ts) && jn.autoSleep && ci._listeners.length < 2) {
                for (; r && !r._ts;) r = r._next;
                r || ci.sleep()
            }
        }
    }, e
}(zr);
hi(Fn.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
});
var fD = function(e, n, i, o, r, V, A) {
        var c = new zn(this._pt, e, n, 0, 1, Py, null, r),
            d = 0,
            m = 0,
            q, v, D, S, C, h, w, T;
        for (c.b = i, c.e = o, i += "", o += "", (w = ~o.indexOf("random(")) && (o = uA(o)), V && (T = [i, o], V(T, e, n), i = T[0], o = T[1]), v = i.match(hh) || []; q = hh.exec(o);) S = q[0], C = o.substring(d, q.index), D ? D = (D + 1) % 5 : C.substr(-5) === "rgba(" && (D = 1), S !== v[m++] && (h = parseFloat(v[m - 1]) || 0, c._pt = {
            _next: c._pt,
            p: C || m === 1 ? C : ",",
            s: h,
            c: S.charAt(1) === "=" ? parseFloat(S.substr(2)) * (S.charAt(0) === "-" ? -1 : 1) : parseFloat(S) - h,
            m: D && D < 4 ? Math.round : 0
        }, d = hh.lastIndex);
        return c.c = d < o.length ? o.substring(d, o.length) : "", c.fp = A, (oy.test(o) || w) && (c.e = 0), this._pt = c, c
    },
    $u = function(e, n, i, o, r, V, A, c, d) {
        mn(o) && (o = o(r || 0, e, V));
        var m = e[n],
            q = i !== "get" ? i : mn(m) ? d ? e[n.indexOf("set") || !mn(e["get" + n.substr(3)]) ? n : "get" + n.substr(3)](d) : e[n]() : m,
            v = mn(m) ? d ? vD : Oy : e0,
            D;
        if (Dn(o) && (~o.indexOf("random(") && (o = uA(o)), o.charAt(1) === "=" && (D = parseFloat(q) + parseFloat(o.substr(2)) * (o.charAt(0) === "-" ? -1 : 1) + (ei(q) || 0), (D || D === 0) && (o = D))), q !== o) return !isNaN(q * o) && o !== "" ? (D = new zn(this._pt, e, n, +q || 0, o - (q || 0), typeof m == "boolean" ? xD : Iy, 0, v), d && (D.fp = d), A && D.modifier(A, this, e), this._pt = D) : (!m && !(n in e) && Ku(n, o), fD.call(this, e, n, q, o, v, c || jn.stringFilter, d))
    },
    qD = function(e, n, i, o, r) {
        if (mn(e) && (e = Pr(e, r, n, i, o)), !rs(e) || e.style && e.nodeType || ti(e) || iy(e)) return Dn(e) ? Pr(e, r, n, i, o) : e;
        var V = {},
            A;
        for (A in e) V[A] = Pr(e[A], r, n, i, o);
        return V
    },
    By = function(e, n, i, o, r, V) {
        var A, c, d, m;
        if (Jn[e] && (A = new Jn[e]).init(r, A.rawVars ? n[e] : qD(n[e], o, r, V, i), i, o, V) !== !1 && (i._pt = c = new zn(i._pt, r, e, 0, 1, A.render, A, 0, A.priority), i !== _o))
            for (d = i._ptLookup[i._targets.indexOf(r)], m = A._props.length; m--;) d[A._props[m]] = c;
        return A
    },
    ms, gD = function t(e, n) {
        var i = e.vars,
            o = i.ease,
            r = i.startAt,
            V = i.immediateRender,
            A = i.lazy,
            c = i.onUpdate,
            d = i.onUpdateParams,
            m = i.callbackScope,
            q = i.runBackwards,
            v = i.yoyoEase,
            D = i.keyframes,
            S = i.autoRevert,
            C = e._dur,
            h = e._startAt,
            w = e._targets,
            T = e.parent,
            M = T && T.data === "nested" ? T.parent._targets : w,
            O = e._overwrite === "auto" && !Gu,
            Q = e.timeline,
            u, J, se, te, ve, be, oe, Ie, Y, re, ue, fe, qe;
        if (Q && (!D || !o) && (o = "none"), e._ease = Va(o, ya.ease), e._yEase = v ? Sy(Va(v === !0 ? o : v, ya.ease)) : 0, v && e._yoyo && !e._repeat && (v = e._yEase, e._yEase = e._ease, e._ease = v), e._from = !Q && !!i.runBackwards, !Q) {
            if (Ie = w[0] ? lo(w[0]).harness : 0, fe = Ie && i[Ie.prop], u = Wh(i, Wu), h && h.render(-1, !0).kill(), r)
                if (Ss(e._startAt = hn.set(w, hi({
                        data: "isStart",
                        overwrite: !1,
                        parent: T,
                        immediateRender: !0,
                        lazy: Qn(A),
                        startAt: null,
                        delay: 0,
                        onUpdate: c,
                        onUpdateParams: d,
                        callbackScope: m,
                        stagger: 0
                    }, r))), n < 0 && !V && !S && e._startAt.render(-1, !0), V) {
                    if (n > 0 && !S && (e._startAt = 0), C && n <= 0) {
                        n && (e._zTime = n);
                        return
                    }
                } else S === !1 && (e._startAt = 0);
            else if (q && C) {
                if (h) !S && (e._startAt = 0);
                else if (n && (V = !1), se = hi({
                        overwrite: !1,
                        data: "isFromStart",
                        lazy: V && Qn(A),
                        immediateRender: V,
                        stagger: 0,
                        parent: T
                    }, u), fe && (se[Ie.prop] = fe), Ss(e._startAt = hn.set(w, se)), n < 0 && e._startAt.render(-1, !0), !V) t(e._startAt, jt);
                else if (!n) return
            }
            for (e._pt = 0, A = C && Qn(A) || A && !C, J = 0; J < w.length; J++) {
                if (ve = w[J], oe = ve._gsap || Zu(w)[J]._gsap, e._ptLookup[J] = re = {}, Kh[oe.id] && Cs.length && Yl(), ue = M === w ? J : M.indexOf(ve), Ie && (Y = new Ie).init(ve, fe || u, e, ue, M) !== !1 && (e._pt = te = new zn(e._pt, ve, Y.name, 0, 1, Y.render, Y, 0, Y.priority), Y._props.forEach(function(ge) {
                        re[ge] = te
                    }), Y.priority && (be = 1)), !Ie || fe)
                    for (se in u) Jn[se] && (Y = By(se, u, e, ue, ve, M)) ? Y.priority && (be = 1) : re[se] = te = $u.call(e, ve, se, "get", u[se], ue, M, 0, i.stringFilter);
                e._op && e._op[J] && e.kill(ve, e._op[J]), O && e._pt && (ms = e, $t.killTweensOf(ve, re, e.globalTime(0)), qe = !e.parent, ms = 0), e._pt && A && (Kh[oe.id] = 1)
            }
            be && Uy(e), e._onInit && e._onInit(e)
        }
        e._onUpdate = c, e._initted = (!e._op || e._pt) && !qe
    },
    yD = function(e, n) {
        var i = e[0] ? lo(e[0]).harness : 0,
            o = i && i.aliases,
            r, V, A, c;
        if (!o) return n;
        r = va({}, n);
        for (V in o)
            if (V in r)
                for (c = o[V].split(","), A = c.length; A--;) r[c[A]] = r[V];
        return r
    },
    Pr = function(e, n, i, o, r) {
        return mn(e) ? e.call(n, i, o, r) : Dn(e) && ~e.indexOf("random(") ? uA(e) : e
    },
    My = Ju + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
    bD = (My + ",id,stagger,delay,duration,paused,scrollTrigger").split(","),
    hn = function(t) {
        ey(e, t);

        function e(i, o, r, V) {
            var A;
            typeof o == "number" && (r.duration = o, o = r, r = null), A = t.call(this, V ? o : El(o)) || this;
            var c = A.vars,
                d = c.duration,
                m = c.delay,
                q = c.immediateRender,
                v = c.stagger,
                D = c.overwrite,
                S = c.keyframes,
                C = c.defaults,
                h = c.scrollTrigger,
                w = c.yoyoEase,
                T = o.parent || $t,
                M = (ti(i) || iy(i) ? as(i[0]) : "length" in o) ? [i] : di(i),
                O, Q, u, J, se, te, ve, be;
            if (A._targets = M.length ? Zu(M) : Xl("GSAP target " + i + " not found. https://greensock.com", !jn.nullTargetWarn) || [], A._ptLookup = [], A._overwrite = D, S || v || Aq(d) || Aq(m)) {
                if (o = A.vars, O = A.timeline = new Fn({
                        data: "nested",
                        defaults: C || {}
                    }), O.kill(), O.parent = O._dp = Wi(A), O._start = 0, S) hi(O.vars.defaults, {
                    ease: "none"
                }), v ? M.forEach(function(oe, Ie) {
                    return S.forEach(function(Y, re) {
                        return O.to(oe, Y, re ? ">" : Ie * v)
                    })
                }) : S.forEach(function(oe) {
                    return O.to(M, oe, ">")
                });
                else {
                    if (J = M.length, ve = v ? by(v) : ba, rs(v))
                        for (se in v) ~My.indexOf(se) && (be || (be = {}), be[se] = v[se]);
                    for (Q = 0; Q < J; Q++) {
                        u = {};
                        for (se in o) bD.indexOf(se) < 0 && (u[se] = o[se]);
                        u.stagger = 0, w && (u.yoyoEase = w), be && va(u, be), te = M[Q], u.duration = +Pr(d, Wi(A), Q, te, M), u.delay = (+Pr(m, Wi(A), Q, te, M) || 0) - A._delay, !v && J === 1 && u.delay && (A._delay = m = u.delay, A._start += m, u.delay = 0), O.to(te, u, ve(Q, te, M))
                    }
                    O.duration() ? d = m = 0 : A.timeline = 0
                }
                d || A.duration(d = O.duration())
            } else A.timeline = 0;
            return D === !0 && !Gu && (ms = Wi(A), $t.killTweensOf(M), ms = 0), Di(T, Wi(A), r), o.reversed && A.reverse(), o.paused && A.paused(!0), (q || !d && !S && A._start === wt(T._time) && Qn(q) && JR(Wi(A)) && T.data !== "nested") && (A._tTime = -jt, A.render(Math.max(0, -m))), h && fy(Wi(A), h), A
        }
        var n = e.prototype;
        return n.render = function(o, r, V) {
            var A = this._time,
                c = this._tDur,
                d = this._dur,
                m = o > c - jt && o >= 0 ? c : o < jt ? 0 : o,
                q, v, D, S, C, h, w, T, M;
            if (!d) _R(this, o, r, V);
            else if (m !== this._tTime || !o || V || !this._initted && this._tTime || this._startAt && this._zTime < 0 != o < 0) {
                if (q = m, T = this.timeline, this._repeat) {
                    if (S = d + this._rDelay, this._repeat < -1 && o < 0) return this.totalTime(S * 100 + o, r, V);
                    if (q = wt(m % S), m === c ? (D = this._repeat, q = d) : (D = ~~(m / S), D && D === m / S && (q = d, D--), q > d && (q = d)), h = this._yoyo && D & 1, h && (M = this._yEase, q = d - q), C = wa(this._tTime, S), q === A && !V && this._initted) return this;
                    D !== C && (T && this._yEase && Ty(T, h), this.vars.repeatRefresh && !h && !this._lock && (this._lock = V = 1, this.render(wt(S * D), !0).invalidate()._lock = 0))
                }
                if (!this._initted) {
                    if (qy(this, o < 0 ? o : q, V, r)) return this._tTime = 0, this;
                    if (d !== this._dur) return this.render(o, r, V)
                }
                if (this._tTime = m, this._time = q, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = w = (M || this._ease)(q / d), this._from && (this.ratio = w = 1 - w), q && !A && !r && _n(this, "onStart"), q && !A && !r && (_n(this, "onStart"), this._tTime !== m)) return this;
                for (v = this._pt; v;) v.r(w, v.d), v = v._next;
                T && T.render(o < 0 ? o : !q && h ? -jt : T._dur * w, r, V) || this._startAt && (this._zTime = o), this._onUpdate && !r && (o < 0 && this._startAt && this._startAt.render(o, !0, V), _n(this, "onUpdate")), this._repeat && D !== C && this.vars.onRepeat && !r && this.parent && _n(this, "onRepeat"), (m === this._tDur || !m) && this._tTime === m && (o < 0 && this._startAt && !this._onUpdate && this._startAt.render(o, !0, !0), (o || !d) && (m === this._tDur && this._ts > 0 || !m && this._ts < 0) && Ss(this, 1), !r && !(o < 0 && !A) && (m || A) && (_n(this, m === c ? "onComplete" : "onReverseComplete", !0), this._prom && !(m < c && this.timeScale() > 0) && this._prom()))
            }
            return this
        }, n.targets = function() {
            return this._targets
        }, n.invalidate = function() {
            return this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(), t.prototype.invalidate.call(this)
        }, n.kill = function(o, r) {
            if (r === void 0 && (r = "all"), !o && (!r || r === "all")) return this._lazy = this._pt = 0, this.parent ? vr(this) : this;
            if (this.timeline) {
                var V = this.timeline.totalDuration();
                return this.timeline.killTweensOf(o, r, ms && ms.vars.overwrite !== !0)._first || vr(this), this.parent && V !== this.timeline.totalDuration() && xa(this, this._dur * this.timeline._tDur / V, 0, 1), this
            }
            var A = this._targets,
                c = o ? di(o) : A,
                d = this._ptLookup,
                m = this._pt,
                q, v, D, S, C, h, w;
            if ((!r || r === "all") && YR(A, c)) return r === "all" && (this._pt = 0), vr(this);
            for (q = this._op = this._op || [], r !== "all" && (Dn(r) && (C = {}, ni(r, function(T) {
                    return C[T] = 1
                }), r = C), r = yD(A, r)), w = A.length; w--;)
                if (~c.indexOf(A[w])) {
                    v = d[w], r === "all" ? (q[w] = r, S = v, D = {}) : (D = q[w] = q[w] || {}, S = r);
                    for (C in S) h = v && v[C], h && ((!("kill" in h.d) || h.d.kill(C) === !0) && hA(this, h, "_pt"), delete v[C]), D !== "all" && (D[C] = 1)
                } return this._initted && !this._pt && m && vr(this), this
        }, e.to = function(o, r) {
            return new e(o, r, arguments[2])
        }, e.from = function(o, r) {
            return Ir(1, arguments)
        }, e.delayedCall = function(o, r, V, A) {
            return new e(r, 0, {
                immediateRender: !1,
                lazy: !1,
                overwrite: !1,
                delay: o,
                onComplete: r,
                onReverseComplete: r,
                onCompleteParams: V,
                onReverseCompleteParams: V,
                callbackScope: A
            })
        }, e.fromTo = function(o, r, V) {
            return Ir(2, arguments)
        }, e.set = function(o, r) {
            return r.duration = 0, r.repeatDelay || (r.repeat = 0), new e(o, r)
        }, e.killTweensOf = function(o, r, V) {
            return $t.killTweensOf(o, r, V)
        }, e
    }(zr);
hi(hn.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
});
ni("staggerTo,staggerFrom,staggerFromTo", function(t) {
    hn[t] = function() {
        var e = new Fn,
            n = Zh.call(arguments, 0);
        return n.splice(t === "staggerFromTo" ? 5 : 4, 0, 0), e[t].apply(e, n)
    }
});
var e0 = function(e, n, i) {
        return e[n] = i
    },
    Oy = function(e, n, i) {
        return e[n](i)
    },
    vD = function(e, n, i, o) {
        return e[n](o.fp, i)
    },
    wD = function(e, n, i) {
        return e.setAttribute(n, i)
    },
    t0 = function(e, n) {
        return mn(e[n]) ? Oy : Xu(e[n]) && e.setAttribute ? wD : e0
    },
    Iy = function(e, n) {
        return n.set(n.t, n.p, Math.round((n.s + n.c * e) * 1e6) / 1e6, n)
    },
    xD = function(e, n) {
        return n.set(n.t, n.p, !!(n.s + n.c * e), n)
    },
    Py = function(e, n) {
        var i = n._pt,
            o = "";
        if (!e && n.b) o = n.b;
        else if (e === 1 && n.e) o = n.e;
        else {
            for (; i;) o = i.p + (i.m ? i.m(i.s + i.c * e) : Math.round((i.s + i.c * e) * 1e4) / 1e4) + o, i = i._next;
            o += n.c
        }
        n.set(n.t, n.p, o, n)
    },
    n0 = function(e, n) {
        for (var i = n._pt; i;) i.r(e, i.d), i = i._next
    },
    kD = function(e, n, i, o) {
        for (var r = this._pt, V; r;) V = r._next, r.p === o && r.modifier(e, n, i), r = V
    },
    CD = function(e) {
        for (var n = this._pt, i, o; n;) o = n._next, n.p === e && !n.op || n.op === e ? hA(this, n, "_pt") : n.dep || (i = 1), n = o;
        return !i
    },
    RD = function(e, n, i, o) {
        o.mSet(e, n, o.m.call(o.tween, i, o.mt), o)
    },
    Uy = function(e) {
        for (var n = e._pt, i, o, r, V; n;) {
            for (i = n._next, o = r; o && o.pr > n.pr;) o = o._next;
            (n._prev = o ? o._prev : V) ? n._prev._next = n: r = n, (n._next = o) ? o._prev = n : V = n, n = i
        }
        e._pt = r
    },
    zn = function() {
        function t(n, i, o, r, V, A, c, d, m) {
            this.t = i, this.s = r, this.c = V, this.p = o, this.r = A || Iy, this.d = c || this, this.set = d || e0, this.pr = m || 0, this._next = n, n && (n._prev = this)
        }
        var e = t.prototype;
        return e.modifier = function(i, o, r) {
            this.mSet = this.mSet || this.set, this.set = RD, this.m = i, this.mt = r, this.tween = o
        }, t
    }();
ni(Ju + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function(t) {
    return Wu[t] = 1
});
ii.TweenMax = ii.TweenLite = hn;
ii.TimelineLite = ii.TimelineMax = Fn;
$t = new Fn({
    sortChildren: !1,
    defaults: ya,
    autoRemoveChildren: !0,
    id: "root",
    smoothChildTiming: !0
});
jn.stringFilter = Dy;
var Jl = {
    registerPlugin: function() {
        for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
        n.forEach(function(o) {
            return AD(o)
        })
    },
    timeline: function(e) {
        return new Fn(e)
    },
    getTweensOf: function(e, n) {
        return $t.getTweensOf(e, n)
    },
    getProperty: function(e, n, i, o) {
        Dn(e) && (e = di(e)[0]);
        var r = lo(e || {}).get,
            V = i ? hy : py;
        return i === "native" && (i = ""), e && (n ? V((Jn[n] && Jn[n].get || r)(e, n, i, o)) : function(A, c, d) {
            return V((Jn[A] && Jn[A].get || r)(e, A, c, d))
        })
    },
    quickSetter: function(e, n, i) {
        if (e = di(e), e.length > 1) {
            var o = e.map(function(m) {
                    return Ii.quickSetter(m, n, i)
                }),
                r = o.length;
            return function(m) {
                for (var q = r; q--;) o[q](m)
            }
        }
        e = e[0] || {};
        var V = Jn[n],
            A = lo(e),
            c = A.harness && (A.harness.aliases || {})[n] || n,
            d = V ? function(m) {
                var q = new V;
                _o._pt = 0, q.init(e, i ? m + i : m, _o, 0, [e]), q.render(1, q), _o._pt && n0(1, _o)
            } : A.set(e, c);
        return V ? d : function(m) {
            return d(e, c, i ? m + i : m, A, 1)
        }
    },
    isTweening: function(e) {
        return $t.getTweensOf(e, !0).length > 0
    },
    defaults: function(e) {
        return e && e.ease && (e.ease = Va(e.ease, ya.ease)), dq(ya, e || {})
    },
    config: function(e) {
        return dq(jn, e || {})
    },
    registerEffect: function(e) {
        var n = e.name,
            i = e.effect,
            o = e.plugins,
            r = e.defaults,
            V = e.extendTimeline;
        (o || "").split(",").forEach(function(A) {
            return A && !Jn[A] && !ii[A] && Xl(n + " effect requires " + A + " plugin.")
        }), uh[n] = function(A, c, d) {
            return i(di(A), hi(c || {}, r), d)
        }, V && (Fn.prototype[n] = function(A, c, d) {
            return this.add(uh[n](A, rs(c) ? c : (d = c) && {}, this), d)
        })
    },
    registerEase: function(e, n) {
        Rt[e] = Va(n)
    },
    parseEase: function(e, n) {
        return arguments.length ? Va(e, n) : Rt
    },
    getById: function(e) {
        return $t.getById(e)
    },
    exportRoot: function(e, n) {
        e === void 0 && (e = {});
        var i = new Fn(e),
            o, r;
        for (i.smoothChildTiming = Qn(e.smoothChildTiming), $t.remove(i), i._dp = 0, i._time = i._tTime = $t._time, o = $t._first; o;) r = o._next, (n || !(!o._dur && o instanceof hn && o.vars.onComplete === o._targets[0])) && Di(i, o, o._start - o._delay), o = r;
        return Di($t, i, 0), i
    },
    utils: {
        wrap: rD,
        wrapYoyo: VD,
        distribute: by,
        random: wy,
        snap: vy,
        normalize: aD,
        getUnit: ei,
        clamp: tD,
        splitColor: Cy,
        toArray: di,
        selector: iD,
        mapRange: ky,
        pipe: sD,
        unitize: oD,
        interpolate: lD,
        shuffle: yy
    },
    install: Vy,
    effects: uh,
    ticker: ci,
    updateRoot: Fn.updateRoot,
    plugins: Jn,
    globalTimeline: $t,
    core: {
        PropTween: zn,
        globals: ly,
        Tween: hn,
        Timeline: Fn,
        Animation: zr,
        getCache: lo,
        _removeLinkedListItem: hA,
        suppressOverwrites: function(e) {
            return Gu = e
        }
    }
};
ni("to,from,fromTo,delayedCall,set,killTweensOf", function(t) {
    return Jl[t] = hn[t]
});
ci.add(Fn.updateRoot);
_o = Jl.to({}, {
    duration: 0
});
var DD = function(e, n) {
        for (var i = e._pt; i && i.p !== n && i.op !== n && i.fp !== n;) i = i._next;
        return i
    },
    SD = function(e, n) {
        var i = e._targets,
            o, r, V;
        for (o in n)
            for (r = i.length; r--;) V = e._ptLookup[r][o], V && (V = V.d) && (V._pt && (V = DD(V, o)), V && V.modifier && V.modifier(n[o], e, i[r], o))
    },
    gh = function(e, n) {
        return {
            name: e,
            rawVars: 1,
            init: function(o, r, V) {
                V._onInit = function(A) {
                    var c, d;
                    if (Dn(r) && (c = {}, ni(r, function(m) {
                            return c[m] = 1
                        }), r = c), n) {
                        c = {};
                        for (d in r) c[d] = n(r[d]);
                        r = c
                    }
                    SD(A, r)
                }
            }
        }
    },
    Ii = Jl.registerPlugin({
        name: "attr",
        init: function(e, n, i, o, r) {
            var V, A;
            for (V in n) A = this.add(e, "setAttribute", (e.getAttribute(V) || 0) + "", n[V], o, r, 0, 0, V), A && (A.op = V), this._props.push(V)
        }
    }, {
        name: "endArray",
        init: function(e, n) {
            for (var i = n.length; i--;) this.add(e, i, e[i] || 0, n[i])
        }
    }, gh("roundProps", _h), gh("modifiers"), gh("snap", vy)) || Jl;
hn.version = Fn.version = Ii.version = "3.7.0";
ry = 1;
ny() && ka();
Rt.Power0;
Rt.Power1;
var $i = Rt.Power2;
Rt.Power3;
var TD = Rt.Power4,
    kt = Rt.Linear;
Rt.Quad;
Rt.Cubic;
Rt.Quart;
Rt.Quint;
Rt.Strong;
Rt.Elastic;
Rt.Back;
Rt.SteppedEase;
Rt.Bounce;
Rt.Sine;
Rt.Expo;
Rt.Circ;
/*!
 * CSSPlugin 3.7.0
 * https://greensock.com
 *
 * Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var fq, fs, la, i0, oo, qq, ED = function() {
        return typeof window < "u"
    },
    Ts = {},
    no = 180 / Math.PI,
    Aa = Math.PI / 180,
    No = Math.atan2,
    gq = 1e8,
    Fy = /([A-Z])/g,
    LD = /(?:left|right|width|margin|padding|x)/i,
    BD = /[\s,\(]\S/,
    qs = {
        autoAlpha: "opacity,visibility",
        scale: "scaleX,scaleY",
        alpha: "opacity"
    },
    jy = function(e, n) {
        return n.set(n.t, n.p, Math.round((n.s + n.c * e) * 1e4) / 1e4 + n.u, n)
    },
    MD = function(e, n) {
        return n.set(n.t, n.p, e === 1 ? n.e : Math.round((n.s + n.c * e) * 1e4) / 1e4 + n.u, n)
    },
    OD = function(e, n) {
        return n.set(n.t, n.p, e ? Math.round((n.s + n.c * e) * 1e4) / 1e4 + n.u : n.b, n)
    },
    ID = function(e, n) {
        var i = n.s + n.c * e;
        n.set(n.t, n.p, ~~(i + (i < 0 ? -.5 : .5)) + n.u, n)
    },
    Qy = function(e, n) {
        return n.set(n.t, n.p, e ? n.e : n.b, n)
    },
    zy = function(e, n) {
        return n.set(n.t, n.p, e !== 1 ? n.b : n.e, n)
    },
    PD = function(e, n, i) {
        return e.style[n] = i
    },
    UD = function(e, n, i) {
        return e.style.setProperty(n, i)
    },
    FD = function(e, n, i) {
        return e._gsap[n] = i
    },
    jD = function(e, n, i) {
        return e._gsap.scaleX = e._gsap.scaleY = i
    },
    QD = function(e, n, i, o, r) {
        var V = e._gsap;
        V.scaleX = V.scaleY = i, V.renderTransform(r, V)
    },
    zD = function(e, n, i, o, r) {
        var V = e._gsap;
        V[n] = i, V.renderTransform(r, V)
    },
    gn = "transform",
    Es = gn + "Origin",
    Hy, $h = function(e, n) {
        var i = fs.createElementNS ? fs.createElementNS((n || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), e) : fs.createElement(e);
        return i.style ? i : fs.createElement(e)
    },
    is = function t(e, n, i) {
        var o = getComputedStyle(e);
        return o[n] || o.getPropertyValue(n.replace(Fy, "-$1").toLowerCase()) || o.getPropertyValue(n) || !i && t(e, Ca(n) || n, 1) || ""
    },
    yq = "O,Moz,ms,Ms,Webkit".split(","),
    Ca = function(e, n, i) {
        var o = n || oo,
            r = o.style,
            V = 5;
        if (e in r && !i) return e;
        for (e = e.charAt(0).toUpperCase() + e.substr(1); V-- && !(yq[V] + e in r););
        return V < 0 ? null : (V === 3 ? "ms" : V >= 0 ? yq[V] : "") + e
    },
    eu = function() {
        ED() && window.document && (fq = window, fs = fq.document, la = fs.documentElement, oo = $h("div") || {
            style: {}
        }, $h("div"), gn = Ca(gn), Es = gn + "Origin", oo.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", Hy = !!Ca("perspective"), i0 = 1)
    },
    yh = function t(e) {
        var n = $h("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
            i = this.parentNode,
            o = this.nextSibling,
            r = this.style.cssText,
            V;
        if (la.appendChild(n), n.appendChild(this), this.style.display = "block", e) try {
            V = this.getBBox(), this._gsapBBox = this.getBBox, this.getBBox = t
        } catch {} else this._gsapBBox && (V = this._gsapBBox());
        return i && (o ? i.insertBefore(this, o) : i.appendChild(this)), la.removeChild(n), this.style.cssText = r, V
    },
    bq = function(e, n) {
        for (var i = n.length; i--;)
            if (e.hasAttribute(n[i])) return e.getAttribute(n[i])
    },
    Ny = function(e) {
        var n;
        try {
            n = e.getBBox()
        } catch {
            n = yh.call(e, !0)
        }
        return n && (n.width || n.height) || e.getBBox === yh || (n = yh.call(e, !0)), n && !n.width && !n.x && !n.y ? {
            x: +bq(e, ["x", "cx", "x1"]) || 0,
            y: +bq(e, ["y", "cy", "y1"]) || 0,
            width: 0,
            height: 0
        } : n
    },
    Gy = function(e) {
        return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && Ny(e))
    },
    Hr = function(e, n) {
        if (n) {
            var i = e.style;
            n in Ts && n !== Es && (n = gn), i.removeProperty ? ((n.substr(0, 2) === "ms" || n.substr(0, 6) === "webkit") && (n = "-" + n), i.removeProperty(n.replace(Fy, "-$1").toLowerCase())) : i.removeAttribute(n)
        }
    },
    gs = function(e, n, i, o, r, V) {
        var A = new zn(e._pt, n, i, 0, 1, V ? zy : Qy);
        return e._pt = A, A.b = o, A.e = r, e._props.push(i), A
    },
    vq = {
        deg: 1,
        rad: 1,
        turn: 1
    },
    Ls = function t(e, n, i, o) {
        var r = parseFloat(i) || 0,
            V = (i + "").trim().substr((r + "").length) || "px",
            A = oo.style,
            c = LD.test(n),
            d = e.tagName.toLowerCase() === "svg",
            m = (d ? "client" : "offset") + (c ? "Width" : "Height"),
            q = 100,
            v = o === "px",
            D = o === "%",
            S, C, h, w;
        return o === V || !r || vq[o] || vq[V] ? r : (V !== "px" && !v && (r = t(e, n, i, "px")), w = e.getCTM && Gy(e), (D || V === "%") && (Ts[n] || ~n.indexOf("adius")) ? (S = w ? e.getBBox()[c ? "width" : "height"] : e[m], wt(D ? r / S * q : r / 100 * S)) : (A[c ? "width" : "height"] = q + (v ? V : o), C = ~n.indexOf("adius") || o === "em" && e.appendChild && !d ? e : e.parentNode, w && (C = (e.ownerSVGElement || {}).parentNode), (!C || C === fs || !C.appendChild) && (C = fs.body), h = C._gsap, h && D && h.width && c && h.time === ci.time ? wt(r / h.width * q) : ((D || V === "%") && (A.position = is(e, "position")), C === e && (A.position = "static"), C.appendChild(oo), S = oo[m], C.removeChild(oo), A.position = "absolute", c && D && (h = lo(C), h.time = ci.time, h.width = C[m]), wt(v ? S * r / q : S && r ? q / S * r : 0))))
    },
    Ko = function(e, n, i, o) {
        var r;
        return i0 || eu(), n in qs && n !== "transform" && (n = qs[n], ~n.indexOf(",") && (n = n.split(",")[0])), Ts[n] && n !== "transform" ? (r = Gr(e, o), r = n !== "transformOrigin" ? r[n] : r.svg ? r.origin : _l(is(e, Es)) + " " + r.zOrigin + "px") : (r = e.style[n], (!r || r === "auto" || o || ~(r + "").indexOf("calc(")) && (r = Zl[n] && Zl[n](e, n, i) || is(e, n) || cy(e, n) || (n === "opacity" ? 1 : 0))), i && !~(r + "").trim().indexOf(" ") ? Ls(e, n, r, i) + i : r
    },
    HD = function(e, n, i, o) {
        if (!i || i === "none") {
            var r = Ca(n, e, 1),
                V = r && is(e, r, 1);
            V && V !== i ? (n = r, i = V) : n === "borderColor" && (i = is(e, "borderTopColor"))
        }
        var A = new zn(this._pt, e.style, n, 0, 1, Py),
            c = 0,
            d = 0,
            m, q, v, D, S, C, h, w, T, M, O, Q, u;
        if (A.b = i, A.e = o, i += "", o += "", o === "auto" && (e.style[n] = o, o = is(e, n) || o, e.style[n] = i), m = [i, o], Dy(m), i = m[0], o = m[1], v = i.match(Zo) || [], u = o.match(Zo) || [], u.length) {
            for (; q = Zo.exec(o);) h = q[0], T = o.substring(c, q.index), S ? S = (S + 1) % 5 : (T.substr(-5) === "rgba(" || T.substr(-5) === "hsla(") && (S = 1), h !== (C = v[d++] || "") && (D = parseFloat(C) || 0, O = C.substr((D + "").length), Q = h.charAt(1) === "=" ? +(h.charAt(0) + "1") : 0, Q && (h = h.substr(2)), w = parseFloat(h), M = h.substr((w + "").length), c = Zo.lastIndex - M.length, M || (M = M || jn.units[n] || O, c === o.length && (o += M, A.e += M)), O !== M && (D = Ls(e, n, C, M) || 0), A._pt = {
                _next: A._pt,
                p: T || d === 1 ? T : ",",
                s: D,
                c: Q ? Q * w : w - D,
                m: S && S < 4 || n === "zIndex" ? Math.round : 0
            });
            A.c = c < o.length ? o.substring(c, o.length) : ""
        } else A.r = n === "display" && o === "none" ? zy : Qy;
        return oy.test(o) && (A.e = 0), this._pt = A, A
    },
    wq = {
        top: "0%",
        bottom: "100%",
        left: "0%",
        right: "100%",
        center: "50%"
    },
    ND = function(e) {
        var n = e.split(" "),
            i = n[0],
            o = n[1] || "50%";
        return (i === "top" || i === "bottom" || o === "left" || o === "right") && (e = i, i = o, o = e), n[0] = wq[i] || i, n[1] = wq[o] || o, n.join(" ")
    },
    GD = function(e, n) {
        if (n.tween && n.tween._time === n.tween._dur) {
            var i = n.t,
                o = i.style,
                r = n.u,
                V = i._gsap,
                A, c, d;
            if (r === "all" || r === !0) o.cssText = "", c = 1;
            else
                for (r = r.split(","), d = r.length; --d > -1;) A = r[d], Ts[A] && (c = 1, A = A === "transformOrigin" ? Es : gn), Hr(i, A);
            c && (Hr(i, gn), V && (V.svg && i.removeAttribute("transform"), Gr(i, 1), V.uncache = 1))
        }
    },
    Zl = {
        clearProps: function(e, n, i, o, r) {
            if (r.data !== "isFromStart") {
                var V = e._pt = new zn(e._pt, n, i, 0, 0, GD);
                return V.u = o, V.pr = -10, V.tween = r, e._props.push(i), 1
            }
        }
    },
    Nr = [1, 0, 0, 1, 0, 0],
    Xy = {},
    Yy = function(e) {
        return e === "matrix(1, 0, 0, 1, 0, 0)" || e === "none" || !e
    },
    xq = function(e) {
        var n = is(e, gn);
        return Yy(n) ? Nr : n.substr(7).match(sy).map(wt)
    },
    s0 = function(e, n) {
        var i = e._gsap || lo(e),
            o = e.style,
            r = xq(e),
            V, A, c, d;
        return i.svg && e.getAttribute("transform") ? (c = e.transform.baseVal.consolidate().matrix, r = [c.a, c.b, c.c, c.d, c.e, c.f], r.join(",") === "1,0,0,1,0,0" ? Nr : r) : (r === Nr && !e.offsetParent && e !== la && !i.svg && (c = o.display, o.display = "block", V = e.parentNode, (!V || !e.offsetParent) && (d = 1, A = e.nextSibling, la.appendChild(e)), r = xq(e), c ? o.display = c : Hr(e, "display"), d && (A ? V.insertBefore(e, A) : V ? V.appendChild(e) : la.removeChild(e))), n && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r)
    },
    tu = function(e, n, i, o, r, V) {
        var A = e._gsap,
            c = r || s0(e, !0),
            d = A.xOrigin || 0,
            m = A.yOrigin || 0,
            q = A.xOffset || 0,
            v = A.yOffset || 0,
            D = c[0],
            S = c[1],
            C = c[2],
            h = c[3],
            w = c[4],
            T = c[5],
            M = n.split(" "),
            O = parseFloat(M[0]) || 0,
            Q = parseFloat(M[1]) || 0,
            u, J, se, te;
        i ? c !== Nr && (J = D * h - S * C) && (se = O * (h / J) + Q * (-C / J) + (C * T - h * w) / J, te = O * (-S / J) + Q * (D / J) - (D * T - S * w) / J, O = se, Q = te) : (u = Ny(e), O = u.x + (~M[0].indexOf("%") ? O / 100 * u.width : O), Q = u.y + (~(M[1] || M[0]).indexOf("%") ? Q / 100 * u.height : Q)), o || o !== !1 && A.smooth ? (w = O - d, T = Q - m, A.xOffset = q + (w * D + T * C) - w, A.yOffset = v + (w * S + T * h) - T) : A.xOffset = A.yOffset = 0, A.xOrigin = O, A.yOrigin = Q, A.smooth = !!o, A.origin = n, A.originIsAbsolute = !!i, e.style[Es] = "0px 0px", V && (gs(V, A, "xOrigin", d, O), gs(V, A, "yOrigin", m, Q), gs(V, A, "xOffset", q, A.xOffset), gs(V, A, "yOffset", v, A.yOffset)), e.setAttribute("data-svg-origin", O + " " + Q)
    },
    Gr = function(e, n) {
        var i = e._gsap || new Ly(e);
        if ("x" in i && !n && !i.uncache) return i;
        var o = e.style,
            r = i.scaleX < 0,
            V = "px",
            A = "deg",
            c = is(e, Es) || "0",
            d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J, se, te, ve, be, oe, Ie, Y, re, ue, fe, qe, ge, Te, Le, Ge, Xe, nt;
        return d = m = q = S = C = h = w = T = M = 0, v = D = 1, i.svg = !!(e.getCTM && Gy(e)), u = s0(e, i.svg), i.svg && (ue = (!i.uncache || c === "0px 0px") && !n && e.getAttribute("data-svg-origin"), tu(e, ue || c, !!ue || i.originIsAbsolute, i.smooth !== !1, u)), O = i.xOrigin || 0, Q = i.yOrigin || 0, u !== Nr && (ve = u[0], be = u[1], oe = u[2], Ie = u[3], d = Y = u[4], m = re = u[5], u.length === 6 ? (v = Math.sqrt(ve * ve + be * be), D = Math.sqrt(Ie * Ie + oe * oe), S = ve || be ? No(be, ve) * no : 0, w = oe || Ie ? No(oe, Ie) * no + S : 0, w && (D *= Math.abs(Math.cos(w * Aa))), i.svg && (d -= O - (O * ve + Q * oe), m -= Q - (O * be + Q * Ie))) : (nt = u[6], Ge = u[7], ge = u[8], Te = u[9], Le = u[10], Xe = u[11], d = u[12], m = u[13], q = u[14], J = No(nt, Le), C = J * no, J && (se = Math.cos(-J), te = Math.sin(-J), ue = Y * se + ge * te, fe = re * se + Te * te, qe = nt * se + Le * te, ge = Y * -te + ge * se, Te = re * -te + Te * se, Le = nt * -te + Le * se, Xe = Ge * -te + Xe * se, Y = ue, re = fe, nt = qe), J = No(-oe, Le), h = J * no, J && (se = Math.cos(-J), te = Math.sin(-J), ue = ve * se - ge * te, fe = be * se - Te * te, qe = oe * se - Le * te, Xe = Ie * te + Xe * se, ve = ue, be = fe, oe = qe), J = No(be, ve), S = J * no, J && (se = Math.cos(J), te = Math.sin(J), ue = ve * se + be * te, fe = Y * se + re * te, be = be * se - ve * te, re = re * se - Y * te, ve = ue, Y = fe), C && Math.abs(C) + Math.abs(S) > 359.9 && (C = S = 0, h = 180 - h), v = wt(Math.sqrt(ve * ve + be * be + oe * oe)), D = wt(Math.sqrt(re * re + nt * nt)), J = No(Y, re), w = Math.abs(J) > 2e-4 ? J * no : 0, M = Xe ? 1 / (Xe < 0 ? -Xe : Xe) : 0), i.svg && (ue = e.getAttribute("transform"), i.forceCSS = e.setAttribute("transform", "") || !Yy(is(e, gn)), ue && e.setAttribute("transform", ue))), Math.abs(w) > 90 && Math.abs(w) < 270 && (r ? (v *= -1, w += S <= 0 ? 180 : -180, S += S <= 0 ? 180 : -180) : (D *= -1, w += w <= 0 ? 180 : -180)), i.x = d - ((i.xPercent = d && (i.xPercent || (Math.round(e.offsetWidth / 2) === Math.round(-d) ? -50 : 0))) ? e.offsetWidth * i.xPercent / 100 : 0) + V, i.y = m - ((i.yPercent = m && (i.yPercent || (Math.round(e.offsetHeight / 2) === Math.round(-m) ? -50 : 0))) ? e.offsetHeight * i.yPercent / 100 : 0) + V, i.z = q + V, i.scaleX = wt(v), i.scaleY = wt(D), i.rotation = wt(S) + A, i.rotationX = wt(C) + A, i.rotationY = wt(h) + A, i.skewX = w + A, i.skewY = T + A, i.transformPerspective = M + V, (i.zOrigin = parseFloat(c.split(" ")[2]) || 0) && (o[Es] = _l(c)), i.xOffset = i.yOffset = 0, i.force3D = jn.force3D, i.renderTransform = i.svg ? YD : Hy ? Ky : XD, i.uncache = 0, i
    },
    _l = function(e) {
        return (e = e.split(" "))[0] + " " + e[1]
    },
    bh = function(e, n, i) {
        var o = ei(n);
        return wt(parseFloat(n) + parseFloat(Ls(e, "x", i + "px", o))) + o
    },
    XD = function(e, n) {
        n.z = "0px", n.rotationY = n.rotationX = "0deg", n.force3D = 0, Ky(e, n)
    },
    Zs = "0deg",
    pr = "0px",
    _s = ") ",
    Ky = function(e, n) {
        var i = n || this,
            o = i.xPercent,
            r = i.yPercent,
            V = i.x,
            A = i.y,
            c = i.z,
            d = i.rotation,
            m = i.rotationY,
            q = i.rotationX,
            v = i.skewX,
            D = i.skewY,
            S = i.scaleX,
            C = i.scaleY,
            h = i.transformPerspective,
            w = i.force3D,
            T = i.target,
            M = i.zOrigin,
            O = "",
            Q = w === "auto" && e && e !== 1 || w === !0;
        if (M && (q !== Zs || m !== Zs)) {
            var u = parseFloat(m) * Aa,
                J = Math.sin(u),
                se = Math.cos(u),
                te;
            u = parseFloat(q) * Aa, te = Math.cos(u), V = bh(T, V, J * te * -M), A = bh(T, A, -Math.sin(u) * -M), c = bh(T, c, se * te * -M + M)
        }
        h !== pr && (O += "perspective(" + h + _s), (o || r) && (O += "translate(" + o + "%, " + r + "%) "), (Q || V !== pr || A !== pr || c !== pr) && (O += c !== pr || Q ? "translate3d(" + V + ", " + A + ", " + c + ") " : "translate(" + V + ", " + A + _s), d !== Zs && (O += "rotate(" + d + _s), m !== Zs && (O += "rotateY(" + m + _s), q !== Zs && (O += "rotateX(" + q + _s), (v !== Zs || D !== Zs) && (O += "skew(" + v + ", " + D + _s), (S !== 1 || C !== 1) && (O += "scale(" + S + ", " + C + _s), T.style[gn] = O || "translate(0, 0)"
    },
    YD = function(e, n) {
        var i = n || this,
            o = i.xPercent,
            r = i.yPercent,
            V = i.x,
            A = i.y,
            c = i.rotation,
            d = i.skewX,
            m = i.skewY,
            q = i.scaleX,
            v = i.scaleY,
            D = i.target,
            S = i.xOrigin,
            C = i.yOrigin,
            h = i.xOffset,
            w = i.yOffset,
            T = i.forceCSS,
            M = parseFloat(V),
            O = parseFloat(A),
            Q, u, J, se, te;
        c = parseFloat(c), d = parseFloat(d), m = parseFloat(m), m && (m = parseFloat(m), d += m, c += m), c || d ? (c *= Aa, d *= Aa, Q = Math.cos(c) * q, u = Math.sin(c) * q, J = Math.sin(c - d) * -v, se = Math.cos(c - d) * v, d && (m *= Aa, te = Math.tan(d - m), te = Math.sqrt(1 + te * te), J *= te, se *= te, m && (te = Math.tan(m), te = Math.sqrt(1 + te * te), Q *= te, u *= te)), Q = wt(Q), u = wt(u), J = wt(J), se = wt(se)) : (Q = q, se = v, u = J = 0), (M && !~(V + "").indexOf("px") || O && !~(A + "").indexOf("px")) && (M = Ls(D, "x", V, "px"), O = Ls(D, "y", A, "px")), (S || C || h || w) && (M = wt(M + S - (S * Q + C * J) + h), O = wt(O + C - (S * u + C * se) + w)), (o || r) && (te = D.getBBox(), M = wt(M + o / 100 * te.width), O = wt(O + r / 100 * te.height)), te = "matrix(" + Q + "," + u + "," + J + "," + se + "," + M + "," + O + ")", D.setAttribute("transform", te), T && (D.style[gn] = te)
    },
    KD = function(e, n, i, o, r, V) {
        var A = 360,
            c = Dn(r),
            d = parseFloat(r) * (c && ~r.indexOf("rad") ? no : 1),
            m = V ? d * V : d - o,
            q = o + m + "deg",
            v, D;
        return c && (v = r.split("_")[1], v === "short" && (m %= A, m !== m % (A / 2) && (m += m < 0 ? A : -A)), v === "cw" && m < 0 ? m = (m + A * gq) % A - ~~(m / A) * A : v === "ccw" && m > 0 && (m = (m - A * gq) % A - ~~(m / A) * A)), e._pt = D = new zn(e._pt, n, i, o, m, MD), D.e = q, D.u = "deg", e._props.push(i), D
    },
    kq = function(e, n) {
        for (var i in n) e[i] = n[i];
        return e
    },
    WD = function(e, n, i) {
        var o = kq({}, i._gsap),
            r = "perspective,force3D,transformOrigin,svgOrigin",
            V = i.style,
            A, c, d, m, q, v, D, S;
        o.svg ? (d = i.getAttribute("transform"), i.setAttribute("transform", ""), V[gn] = n, A = Gr(i, 1), Hr(i, gn), i.setAttribute("transform", d)) : (d = getComputedStyle(i)[gn], V[gn] = n, A = Gr(i, 1), V[gn] = d);
        for (c in Ts) d = o[c], m = A[c], d !== m && r.indexOf(c) < 0 && (D = ei(d), S = ei(m), q = D !== S ? Ls(i, c, d, S) : parseFloat(d), v = parseFloat(m), e._pt = new zn(e._pt, A, c, q, v - q, jy), e._pt.u = S || 0, e._props.push(c));
        kq(A, o)
    };
ni("padding,margin,Width,Radius", function(t, e) {
    var n = "Top",
        i = "Right",
        o = "Bottom",
        r = "Left",
        V = (e < 3 ? [n, i, o, r] : [n + r, n + i, o + i, o + r]).map(function(A) {
            return e < 2 ? t + A : "border" + A + t
        });
    Zl[e > 1 ? "border" + t : t] = function(A, c, d, m, q) {
        var v, D;
        if (arguments.length < 4) return v = V.map(function(S) {
            return Ko(A, S, d)
        }), D = v.join(" "), D.split(v[0]).length === 5 ? v[0] : D;
        v = (m + "").split(" "), D = {}, V.forEach(function(S, C) {
            return D[S] = v[C] = v[C] || v[(C - 1) / 2 | 0]
        }), A.init(c, D, q)
    }
});
var Wy = {
    name: "css",
    register: eu,
    targetTest: function(e) {
        return e.style && e.nodeType
    },
    init: function(e, n, i, o, r) {
        var V = this._props,
            A = e.style,
            c = i.vars.startAt,
            d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J;
        i0 || eu();
        for (C in n)
            if (C !== "autoRound" && (m = n[C], !(Jn[C] && By(C, n, i, o, e, r)))) {
                if (D = typeof m, S = Zl[C], D === "function" && (m = m.call(i, o, e, r), D = typeof m), D === "string" && ~m.indexOf("random(") && (m = uA(m)), S) S(this, e, C, m, i) && (J = 1);
                else if (C.substr(0, 2) === "--") d = (getComputedStyle(e).getPropertyValue(C) + "").trim(), m += "", Rs.lastIndex = 0, Rs.test(d) || (h = ei(d), w = ei(m)), w ? h !== w && (d = Ls(e, C, d, w) + w) : h && (m += h), this.add(A, "setProperty", d, m, o, r, 0, 0, C), V.push(C);
                else if (D !== "undefined") {
                    if (c && C in c ? (d = typeof c[C] == "function" ? c[C].call(i, o, e, r) : c[C], C in jn.units && !ei(d) && (d += jn.units[C]), (d + "").charAt(1) === "=" && (d = Ko(e, C))) : d = Ko(e, C), v = parseFloat(d), T = D === "string" && m.charAt(1) === "=" ? +(m.charAt(0) + "1") : 0, T && (m = m.substr(2)), q = parseFloat(m), C in qs && (C === "autoAlpha" && (v === 1 && Ko(e, "visibility") === "hidden" && q && (v = 0), gs(this, A, "visibility", v ? "inherit" : "hidden", q ? "inherit" : "hidden", !q)), C !== "scale" && C !== "transform" && (C = qs[C], ~C.indexOf(",") && (C = C.split(",")[0]))), M = C in Ts, M) {
                        if (O || (Q = e._gsap, Q.renderTransform && !n.parseTransform || Gr(e, n.parseTransform), u = n.smoothOrigin !== !1 && Q.smooth, O = this._pt = new zn(this._pt, A, gn, 0, 1, Q.renderTransform, Q, 0, -1), O.dep = 1), C === "scale") this._pt = new zn(this._pt, Q, "scaleY", Q.scaleY, (T ? T * q : q - Q.scaleY) || 0), V.push("scaleY", C), C += "X";
                        else if (C === "transformOrigin") {
                            m = ND(m), Q.svg ? tu(e, m, 0, u, 0, this) : (w = parseFloat(m.split(" ")[2]) || 0, w !== Q.zOrigin && gs(this, Q, "zOrigin", Q.zOrigin, w), gs(this, A, C, _l(d), _l(m)));
                            continue
                        } else if (C === "svgOrigin") {
                            tu(e, m, 1, u, 0, this);
                            continue
                        } else if (C in Xy) {
                            KD(this, Q, C, v, m, T);
                            continue
                        } else if (C === "smoothOrigin") {
                            gs(this, Q, "smooth", Q.smooth, m);
                            continue
                        } else if (C === "force3D") {
                            Q[C] = m;
                            continue
                        } else if (C === "transform") {
                            WD(this, m, e);
                            continue
                        }
                    } else C in A || (C = Ca(C) || C);
                    if (M || (q || q === 0) && (v || v === 0) && !BD.test(m) && C in A) h = (d + "").substr((v + "").length), q || (q = 0), w = ei(m) || (C in jn.units ? jn.units[C] : h), h !== w && (v = Ls(e, C, d, w)), this._pt = new zn(this._pt, M ? Q : A, C, v, T ? T * q : q - v, !M && (w === "px" || C === "zIndex") && n.autoRound !== !1 ? ID : jy), this._pt.u = w || 0, h !== w && (this._pt.b = d, this._pt.r = OD);
                    else if (C in A) HD.call(this, e, C, d, m);
                    else if (C in e) this.add(e, C, d || e[C], m, o, r);
                    else {
                        Ku(C, m);
                        continue
                    }
                    V.push(C)
                }
            } J && Uy(this)
    },
    get: Ko,
    aliases: qs,
    getSetter: function(e, n, i) {
        var o = qs[n];
        return o && o.indexOf(",") < 0 && (n = o), n in Ts && n !== Es && (e._gsap.x || Ko(e, "x")) ? i && qq === i ? n === "scale" ? jD : FD : (qq = i || {}) && (n === "scale" ? QD : zD) : e.style && !Xu(e.style[n]) ? PD : ~n.indexOf("-") ? UD : t0(e, n)
    },
    core: {
        _removeProperty: Hr,
        _getMatrix: s0
    }
};
Ii.utils.checkPrefix = Ca;
(function(t, e, n, i) {
    var o = ni(t + "," + e + "," + n, function(r) {
        Ts[r] = 1
    });
    ni(e, function(r) {
        jn.units[r] = "deg", Xy[r] = 1
    }), qs[o[13]] = t + "," + e, ni(i, function(r) {
        var V = r.split(":");
        qs[V[1]] = o[V[0]]
    })
})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");
ni("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function(t) {
    jn.units[t] = "px"
});
Ii.registerPlugin(Wy);
var s = Ii.registerPlugin(Wy) || Ii;
s.core.Tween;
const Jy = {
        EAT_BUGS: {
            state: "TapResultingMechanic",
            tapsRequired: 25,
            waitInMs: 450,
            scene: "AudienceSpawnEatBugs",
            successTitle: "So helpful!",
            successText: "You deserve a delicious treat"
        },
        POSE_FOR_PIC: {
            state: "HoldMechanic",
            durationInMs: 1e4,
            scene: "AudienceSpawnPoseForPic",
            successTitle: "Too cute!",
            successText: "Someone's gotta post these pics"
        },
        SHOW_BELLY: {
            state: "RotateMechanic",
            direction: "CLOCKWISE",
            rotationsInDeg: 9e3,
            scene: "AudienceSpawnShowBelly",
            successTitle: "So fluffy!",
            successText: "You earned a nice belly rub"
        },
        SHOW_CLAWS: {
            state: "HoldMechanic",
            durationInMs: 1e4,
            scene: "AudienceSpawnShowClaws",
            successTitle: "So patient!",
            successText: "Now the family can clip your claws"
        },
        FIGHT_VACUUM: {
            state: "TapResultingMechanic",
            tapsRequired: 25,
            waitInMs: 450,
            scene: "AudienceSpawnFightVacuum",
            successTitle: "You broke the vacuum!",
            successText: "Now someone has to get it fixed"
        },
        DESTROY_LITTER: {
            state: "TapResultingMechanic",
            tapsRequired: 35,
            waitInMs: 250,
            scene: "AudienceSpawnDestroyLitter",
            successTitle: "Big mess!",
            successText: "Now someone has to sweep it up"
        },
        LAY_ON_LAPTOP: {
            state: "HoldMechanic",
            durationInMs: 1e4,
            scene: "AudienceSpawnLayOnLaptop",
            successTitle: "You claimed the laptop!",
            successText: "It will take a mighty shove to move you"
        },
        VOMIT: {
            state: "TapResultingMechanic",
            tapsRequired: 35,
            waitInMs: 250,
            scene: "AudienceSpawnVomit",
            successTitle: "You puked!",
            successText: "Now someone has to clean it up"
        },
        DART_OUT: {
            state: "TapResultingMechanic",
            tapsRequired: 35,
            waitInMs: 250,
            scene: "AudienceSpawnDartOut",
            successTitle: "You escaped!",
            successText: "Now the family has to find you"
        },
        SCRATCH_CHAIR: {
            state: "TapResultingMechanic",
            tapsRequired: 35,
            waitInMs: 250,
            scene: "AudienceSpawnScratchChair",
            successTitle: "Chair ruined!",
            successText: "Someone's definitely going to scold you for this"
        },
        KNOCK_ITEMS: {
            state: "TapResultingMechanic",
            tapsRequired: 35,
            waitInMs: 250,
            scene: "AudienceSpawnKnockItems",
            successTitle: "You showed that crap who's boss!",
            successText: "Now someone has to pick up your mess"
        },
        PAW_WATER: {
            state: "HoldMechanic",
            durationInMs: 1e4,
            scene: "AudienceSpawnPawWater",
            successTitle: "Your water now!",
            successText: "Someone has to fill a new glass if they want their own"
        },
        SHOW_BELLY_TRAP: {
            state: "RotateMechanic",
            direction: "CLOCKWISE",
            rotationsInDeg: 9e3,
            scene: "AudienceSpawnShowBelly",
            successTitle: "Your trap is set!",
            successText: "When the family tries to pet you, they'll get a surprise scratch"
        }
    },
    JD = {
        ADULT: {
            state: "ScrubMechanic",
            instructions: "Fuss at <NAME> for being selfish",
            distance: "LONG",
            scene: "CancelerAdult"
        },
        TEEN: {
            state: "RotateMechanic",
            instructions: "Roll your eyes at <NAME> to make them feel bad",
            direction: "CLOCKWISE",
            rotationsInDeg: 6480,
            scene: "CancelerTeen"
        },
        CHILD: {
            state: "TapResultingMechanic",
            instructions: "Throw a tantrum because <NAME> is being selfish",
            tapsRequired: 20,
            waitInMs: 250,
            scene: "CancelerChild"
        }
    },
    ZD = `<div class="scene-box">
    <svg class="bg-cat" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 750" xml:space="preserve">
        <path d="M974.27,473.61c13.47-0.79,22.38-3.37,26.73-7.72c-25.47-6.68-75.9-4.45-105.09-4.53c5.99-15.39,11.72-31.49,17.17-48.34
            c-26.49,9.29-46.82,14.15-62.97,18.42c18.61-32.08,25.55-70.3,20.79-114.65c-23.37,3.56-50.5,7.72-81.39,12.48
            C757.83,185.09,684.96,78.56,570.9,9.65c-3.57,38.42-8.71,93.07-15.45,163.96c-33.36-5.84-71.07-6.15-102.77,1.78
            c-3.96-70.5-6.93-126.93-8.91-169.31C314.26,70.24,237.03,189.25,212.08,363.11c-20.59-5.54-57.62-13.66-111.09-24.36
            c10.3,48.32,27.92,83.96,52.87,106.93c-8.71-0.79-23.37-1.58-43.96-2.38c0.11,0.57,0.23,1.13,0.35,1.7
            C91.98,445.63,9.02,434.39,0,447.47c34.13,11.93,66.56,7.22,113.3,10.97c10.6,41.6,31.79,83.2,63.59,124.79
            c-9.54,2.83-16.83,5.5-21.84,8c2.1,5.78,20.13,2.63,28.76,0.82C342.99,800.9,705.14,797,847.59,560.19
            c19.07,0.62,35.43-0.46,5.13-8.5c7.73-13.09,15.14-27.03,22.24-41.82c2.12-1.57,80.15,6.46,76.15-0.62
            c-23.93-3.81-47.88-6.66-71.84-8.55c3.97-8.62,7.83-17.5,11.6-26.66L974.27,473.61z"
        />
    </svg>
    <div class="frame">
        <svg class="frame-cat" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 750" xml:space="preserve">
            <path d="M974.27,473.61c13.47-0.79,22.38-3.37,26.73-7.72c-25.47-6.68-75.9-4.45-105.09-4.53c5.99-15.39,11.72-31.49,17.17-48.34
                c-26.49,9.29-46.82,14.15-62.97,18.42c18.61-32.08,25.55-70.3,20.79-114.65c-23.37,3.56-50.5,7.72-81.39,12.48
                C757.83,185.09,684.96,78.56,570.9,9.65c-3.57,38.42-8.71,93.07-15.45,163.96c-33.36-5.84-71.07-6.15-102.77,1.78
                c-3.96-70.5-6.93-126.93-8.91-169.31C314.26,70.24,237.03,189.25,212.08,363.11c-20.59-5.54-57.62-13.66-111.09-24.36
                c10.3,48.32,27.92,83.96,52.87,106.93c-8.71-0.79-23.37-1.58-43.96-2.38c0.11,0.57,0.23,1.13,0.35,1.7
                C91.98,445.63,9.02,434.39,0,447.47c34.13,11.93,66.56,7.22,113.3,10.97c10.6,41.6,31.79,83.2,63.59,124.79
                c-9.54,2.83-16.83,5.5-21.84,8c2.1,5.78,20.13,2.63,28.76,0.82C342.99,800.9,705.14,797,847.59,560.19
                c19.07,0.62,35.43-0.46,5.13-8.5c7.73-13.09,15.14-27.03,22.24-41.82c2.12-1.57,80.15,6.46,76.15-0.62
                c-23.93-3.81-47.88-6.66-71.84-8.55c3.97-8.62,7.83-17.5,11.6-26.66L974.27,473.61z"
            />
        </svg>
        <div class="box"></div>
        <p class="title"></p>
        <p class="message"></p>
    </div>
    <p class="waiting"></p>
</div>`,
    _D = je.View.extend({
        className: "audience-success",
        template: ke.template(ZD),
        model: new ze.Model,
        waitingText: ["Waiting for<br/>the next<br/>opurrrtunity", "Taking a little<br/>cat nap", "Nothing to do<br/>right meow", "Mischief<br/>is on a<br/>temporary paws", "Wait fur<br/>a moment", "More tasks<br/>just a<br/>whisker away"],
        bindings: {
            ".waiting": {
                observe: "waitingText",
                updateMethod: "html"
            },
            ".title": "title",
            ".message": "text"
        },
        onRender() {
            this.stickit(), this.triggerMethod("result")
        },
        onAttach() {
            s.timeline({
                delay: .25
            }).to(".frame", {
                opacity: 1,
                duration: .05
            }).to(".frame", {
                scale: 1,
                rotate: -3,
                duration: .3,
                ease: "back.out(3)"
            }, 0).to(".frame-cat", {
                y: 0,
                duration: .25,
                ease: "back.out(3)"
            }, .4).to(".frame", {
                scale: .5,
                duration: .3,
                ease: "back.in(3)"
            }, 3).to(".frame-cat", {
                y: 200,
                duration: .25,
                ease: "back.in(3)"
            }, 3).to(".frame", {
                opacity: 0,
                duration: .05
            }, 3.25).to(".waiting", {
                opacity: 1,
                duration: .05
            }, 5).to(".waiting", {
                scale: 1,
                duration: .25,
                ease: "back.out(3)"
            }, 5).to(".bg-cat", {
                opacity: 1,
                duration: .4
            }, 5);
            const t = this.model.get("taskResult"),
                e = Jy[t.id] || {
                    successTitle: "You did it!",
                    successText: "Now the family has to deal with your shenanigans."
                };
            this.model.set({
                waitingText: ke.sample(this.waitingText),
                title: e.successTitle,
                text: e.successText
            })
        }
    }),
    $D = `
<p class="prompt">This Week's Challenge</p>
<div class="stone-panel">
    <div class="grade"></div>
    <p class="title title-outline"></p>
    <p class="title"></p>
</div>
<div class="stone-buttons">
    <div class="button-wrapper">
        <button class="stone-button prev"><span>previous<br/>episode</span></button>
    </div>
    <div class="button-wrapper">
        <button class="stone-button next"><span>next<br/>episode</span></button>
    </div>
</div>
`,
    eS = ze.Model.extend({
        selectedEpisode() {
            const t = this.get("episodes"),
                e = this.get("selected");
            if (!!t) return t[e]
        },
        selectPrevious() {
            if (this.get("lobbyState") === "Countdown") return;
            const t = this.get("episodes"),
                e = this.get("selected");
            e === 0 ? this.set({
                selected: t.length - 1
            }) : this.set({
                selected: e - 1
            })
        },
        selectNext() {
            if (this.get("lobbyState") === "Countdown") return;
            const t = this.get("episodes"),
                e = this.get("selected");
            e === t.length - 1 ? this.set({
                selected: 0
            }) : this.set({
                selected: e + 1
            })
        }
    }),
    tS = je.View.extend({
        className: "picker",
        template: ke.template($D),
        model: new eS,
        events: {
            "click .prev": "onPreviousClick",
            "click .next": "onNextClick"
        },
        bindings: {
            ":el": {
                classes: {
                    disabled: {
                        observe: "lobbyState",
                        onGet: t => t === "Countdown"
                    }
                }
            },
            ".grade, .title": {
                attributes: [{
                    name: "class",
                    observe: "selected",
                    onGet() {
                        const t = this.model.selectedEpisode();
                        return !t || !t.grade ? "" : `grade-${t.grade.toLowerCase()}`
                    }
                }]
            },
            ".title": {
                observe: "selected",
                onGet() {
                    const t = this.model.selectedEpisode();
                    return !t || !t.name ? "" : t.name
                }
            }
        },
        initialize() {
            this.model.set({
                selected: 0
            })
        },
        onRender() {
            this.stickit()
        },
        onAttach() {
            this.stickit()
        },
        onPreviousClick() {
            this.model.selectPrevious(), this.send(this.model.selectedEpisode().index)
        },
        onNextClick() {
            this.model.selectNext(), this.send(this.model.selectedEpisode().index)
        },
        send: ke.debounce(function(e) {
            this.triggerMethod("picker", e)
        }, 300)
    }),
    nS = `<div id="controller" class="state-controller controller-content">
    <div id="title" class="lobbyTitle">title</div>
    <div id="vipMenu" class="vipMenu">
        <div id="choices" class="choicesContainer">choices</div>
    </div>
    <div id="picker-region"></div>
    <div class="characterSelect">
        <div id="charactersPrompt" class="charactersPrompt">
            <span id="charactersPromptText" class="charactersPromptText"></span>
        </div>
        <div id="characters" class="charactersContainer"></div>
    </div>
    <div id="artifactId" class="artifactContainer text">
        <a id="artifactLink" aria-label="Visit the Gallery" class="artifactLink" target="_blank">
            <button id="artifactButton" class="artifactButton"></button>
        </a>
    </div>
</div>`,
    iS = qr.extend({
        template: ke.template(nS),
        pickerView: null,
        regions: {
            ...qr.prototype.regions,
            picker: "#picker-region"
        },
        onRender() {
            this.model.get("episodes") && !this.pickerView && (this.pickerView = new tS, this.showChildView("picker", this.pickerView)), qr.prototype.onRender.apply(this)
        },
        update() {
            const t = this.model.get("episodes");
            t && this.pickerView && (t[0].score === void 0 && this.scoreEpisodes(t), t.sort((e, n) => e.score - n.score), this.pickerView.model.set({
                episodes: t
            })), qr.prototype.update.apply(this)
        },
        scoreEpisodes(t) {
            t.forEach((e, n) => {
                if (e.index = n, n === 0) {
                    e.score = 0;
                    return
                }
                if (!e.grade) {
                    e.score = 1;
                    return
                }
                if (e.grade === "F") {
                    e.score = 2;
                    return
                }
                if (e.grade === "C") {
                    e.score = 3;
                    return
                }
                if (e.grade === "B") {
                    e.score = 4;
                    return
                }
                e.score = 5
            })
        },
        onChildviewPicker(t) {
            this.triggerMethod("client:message", {
                action: "choose-episode",
                index: t
            })
        }
    }),
    sS = {
        2046660: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSB3YXRjaGluZyBvYnNjdXJlIGhvcnJvciBtb3ZpZXMu",
        2107822: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBidXlpbmcgb3V0LW9mLXByaW50IEphcGFuZXNlIHZpZGVvIGdhbWVzLg==",
        2323324: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBsb29raW5nIGZvciBhIHBpZWNlIG9mIG1lYXQsIGEgZmlzaCBib25lLCBhbmQgYSBwaWVjZSBvZiBjaGVlc2Uu",
        2343333: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtYWtpbmcgYXJ0Lg==",
        2772227: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtZW1vcml6aW5nICc5MHMgZ2FtZSBzaG93IHRyaXZpYS4=",
        3218666: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtYWtpbmcgYSBtZXNzLg==",
        3230444: "V2UncmUgc29ycnkuIFRoaXMgcmVzaWRlbnQgZG9lc24ndCBnZXQgYSBzcGVjaWFsIHNob3V0LW91dCBqb2tlIGJlY2F1c2UgdGhleSB3b3JrIGhlcmUgbm93Lg==",
        3330777: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtb2RkaW5nLg==",
        3764440: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBzdHJlYW1pbmcu",
        3996444: "QXJlIHlvdSBsb29raW5nIGZvciB0aGUgI3JlYWx3cmVja2luZ2NyZXc/",
        3999800: "SGV5IHBvcHMsIGxvb2sgYXQgdGhpcyBjb29sIGdhbWUgSSBtYWRlLiBIb3BlIHlvdSBsaWtlIGl0Lg==",
        4440123: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgbmV2ZXIgd3JvdGUgYSBqb2tlIGFib3V0IGhpbXNlbGYu",
        4566229: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBzdHJlYW1pbmcu",
        5039666: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgbm90IGN1cnJlbnRseSBpbiB0aGlzIGRpbWVuc2lvbi4=",
        6666666: "WW91J3ZlIHJlYWNoZWQgU3VwZXIgRGVjZW50IENyZWF0aXZlIElucHV0IENvbnN1bHRhbnQsIFN0ZXZlICJ3YXQiIFBha2FsIQ==",
        6782512: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBwdXJzdWluZyBhIGhpZ2hlciBlZHVjYXRpb24u",
        7379876: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtYWtpbmcgYXJ0Lg==",
        7770999: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtYWtpbmcgY29taWNzLg==",
        8762220: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtYWtpbmcgYXJ0Lg==",
        8857529: "V2UncmUgc29ycnkuIFRoZXJlIGlzIG5vIHRpcCBsaW5lIGZvciBmYW1pbHkgdG9nZXRoZXJuZXNzLg==",
        8863331: "WW91IGhhdmUgcmVhY2hlZCBNdXJyeSBCcnVpbi4gSSBjYW4ndCBjb21lIHRvIHRoZSBwaG9uZSBiZWNhdXNlIEknbSBwbGF5aW5nIHBva2VyIHdpdGggSmFjayBLbHVnbWFuLg==",
        9312929: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBMQVJQaW5nLg==",
        9395552: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgc3RpbGwgYnVzeSBmaW5pc2hpbmcgdGhpcyB2aWRlbyBnYW1lLg==",
        9491112: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBtb2RkaW5nLg==",
        9812681: "V2UncmUgc29ycnkuIFRoZSByZXNpZGVudCB5b3UgaGF2ZSBkaWFsZWQgaXMgYnVzeSBwdXR0aW5nIGEgZ2lhbnQgc2hyaW1wIGluIHRoZSBtYWlsLg=="
    },
    oS = `<div class="scrollable">
    <div class="clamp">
        <div class="dialed"></div>
        <button class="clear">CLEAR</button>
        <div class="handset">
            <button class="key" data-dial="1"><div class="key-move">1</div></button>
            <button class="key" data-dial="2"><div class="key-move">2</div></button>
            <button class="key" data-dial="3"><div class="key-move">3</div></button>
            <button class="key" data-dial="4"><div class="key-move">4</div></button>
            <button class="key" data-dial="5"><div class="key-move">5</div></button>
            <button class="key" data-dial="6"><div class="key-move">6</div></button>
            <button class="key" data-dial="7"><div class="key-move">7</div></button>
            <button class="key" data-dial="8"><div class="key-move">8</div></button>
            <button class="key" data-dial="9"><div class="key-move">9</div></button>
            <button class="key key-star" data-dial="*"><div class="key-move">*</div></button>
            <button class="key" data-dial="0"><div class="key-move">0</div></button>
            <button class="key key-pound" data-dial="#"><div class="key-move">#</div></button>
        </div>
        <button class="button phonebook-button"><div class="icon"></div>OPEN PHONEBOOK</button>
    </div>
</div>
<div class="phonebook">
    <div class="listings">
        <h2>The Town Phonebook</h2>
        <h3>A</h3>
        <dl class="listing"><dt>Abram Vorman</dt><dd>791-9666</dd></dl>
        <dl class="listing"><dt>Act Like You've Been There Drama School</dt><dd>979-5678</dd></dl>
        <dl class="listing"><dt>Adrian Goof</dt><dd>222-2288</dd></dl>
        <dl class="listing"><dt>Agatha Coffin</dt><dd>718-6543</dd></dl>
        <dl class="listing"><dt>Agnes Longbottom</dt><dd>666-9898</dd></dl>
        <dl class="listing"><dt>Aileen Twaddle</dt><dd>431-9426</dd></dl>
        <dl class="listing"><dt>Ajay Gilderoy, MD</dt><dd>537-6976</dd></dl>
        <dl class="listing"><dt>Alejandra Raisinette</dt><dd>929-1066</dd></dl>
        <dl class="listing"><dt>Alfred J. Charon Post Office</dt><dd>642-3217</dd></dl>
        <dl class="listing"><dt>All-Is-Frost Ice Cream</dt><dd>456-4567</dd></dl>
        <dl class="listing"><dt>Amelia Smelting-Foxery</dt><dd>606-5678</dd></dl>
        <dl class="listing"><dt>Angry Geese Park</dt><dd>373-7322</dd></dl>
        <dl class="listing"><dt>Animal Control</dt><dd>885-6663</dd></dl>
        <dl class="listing"><dt>Anne's House of Door Keys</dt><dd>981-2681</dd></dl>
        <dl class="listing"><dt>Antenna Rippers Car Wash</dt><dd>822-7788</dd></dl>
        <dl class="listing"><dt>Armando Quixote</dt><dd>543-3421</dd></dl>
        <dl class="listing"><dt>Artie Clickman</dt><dd>266-6789</dd></dl>
        <dl class="listing"><dt>Ashok Kumarvelous</dt><dd>310-1983</dd></dl>
        <dl class="listing"><dt>Aspen Fantismo</dt><dd>210-2223</dd></dl>
        <dl class="listing"><dt>Aster Roth Train Station</dt><dd>987-3000</dd></dl>
        <dl class="listing"><dt>Aunt Flemm</dt><dd>881-5432</dd></dl>
        <dl class="listing"><dt>Aunt Hecuba</dt><dd>210-5999</dd></dl>
        <h3>B</h3>
        <dl class="listing"><dt>Bacon Barn, The</dt><dd>567-6789</dd></dl>
        <dl class="listing"><dt>Baskets of Robins</dt><dd>969-3587</dd></dl>
        <dl class="listing"><dt>Bass Instincts Guitar Lessons</dt><dd>456-6229</dd></dl>
        <dl class="listing"><dt>Ben Jacobs</dt><dd>210-7822</dd></dl>
        <dl class="listing"><dt>Berdie Fabble</dt><dd>973-5040</dd></dl>
        <dl class="listing"><dt>Beshave Yourself</dt><dd>981-2681</dd></dl>
        <dl class="listing"><dt>BigBand Internet Service</dt><dd>849-8765</dd></dl>
        <dl class="listing"><dt>Big Rock Astronomical Observatory</dt><dd>222-5577</dd></dl>
        <dl class="listing"><dt>Big Snake Pond</dt><dd>252-2345</dd></dl>
        <dl class="listing"><dt>Bike Milder</dt><dd>464-8769</dd></dl>
        <dl class="listing"><dt>Bill's Bankrupt Independent Theater</dt><dd>955-6665</dd></dl>
        <dl class="listing"><dt>Bobo\u2019s: Home of the Thrown Kebabs</dt><dd>987-8484</dd></dl>
        <dl class="listing"><dt>Bob Robson\u2019s Single-Use Autos</dt><dd>789-5432</dd></dl>
        <dl class="listing"><dt>Boniface Cheebles</dt><dd>738-4666</dd></dl>
        <dl class="listing"><dt>Bonk Crockley</dt><dd>495-0123</dd></dl>
        <dl class="listing"><dt>Brassy Brenda's Trumpet Lessons</dt><dd>363-5678</dd></dl>
        <dl class="listing"><dt>Brenda Yanluo</dt><dd>571-5550</dd></dl>
        <dl class="listing"><dt>Broken Seat Cinemas</dt><dd>567-8888</dd></dl>
        <dl class="listing"><dt>Bud Needletoes</dt><dd>432-0666</dd></dl>
        <dl class="listing"><dt>Bug-B-Bye-Bye Exterminators</dt><dd>502-4242</dd></dl>
        <dl class="listing"><dt>Build-A-Bra-Workshop</dt><dd>858-0099</dd></dl>
        <dl class="listing"><dt>Burpie Hale</dt><dd>366-8934</dd></dl>
        <dl class="listing"><dt>Butter Trough, The</dt><dd>965-0000</dd></dl>
        <dl class="listing"><dt>Buy 'n Food</dt><dd>863-1010</dd></dl>
        <dl class="listing"><dt>By-The-Pound Buffet</dt><dd>678-4444</dd></dl>
        <h3>C</h3>
        <dl class="listing"><dt>Cabbage Thompson Jr.</dt><dd>414-6555</dd></dl>
        <dl class="listing"><dt>Caked n' Loaded</dt><dd>666-2345</dd></dl>
        <dl class="listing"><dt>Calgary Chumprints</dt><dd>444-1234</dd></dl>
        <dl class="listing"><dt>Can-Do Kendo</dt><dd>876-2220</dd></dl>
        <dl class="listing"><dt>Carmella Whoopingcough</dt><dd>328-5184</dd></dl>
        <dl class="listing"><dt>Carnival Wilson</dt><dd>503-9666</dd></dl>
        <dl class="listing"><dt>Car Side, The</dt><dd>320-3339</dd></dl>
        <dl class="listing"><dt>Cash 4 Gold 4 Seeds 4 Less</dt><dd>444-3894</dd></dl>
        <dl class="listing"><dt>Cassiel Seraph</dt><dd>706-3456</dd></dl>
        <dl class="listing"><dt>Cave O\u2019 Savings</dt><dd>432-1554</dd></dl>
        <dl class="listing"><dt>Cecelia Baggage</dt><dd>234-2130</dd></dl>
        <dl class="listing"><dt>Ceramic Panic</dt><dd>931-2929</dd></dl>
        <dl class="listing"><dt>Chap-Pier-One</dt><dd>543-2220</dd></dl>
        <dl class="listing"><dt>Chase McClure</dt><dd>939-5552</dd></dl>
        <dl class="listing"><dt>Chatty Carl</dt><dd>938-8765</dd></dl>
        <dl class="listing"><dt>Chib Spittleton</dt><dd>222-2226</dd></dl>
        <dl class="listing"><dt>Chikn 4 U</dt><dd>678-8881</dd></dl>
        <dl class="listing"><dt>Chili Fountain, The</dt><dd>789-0001</dd></dl>
        <dl class="listing"><dt>Choir Beware Singing Lessons</dt><dd>376-4440</dd></dl>
        <dl class="listing"><dt>Cirque du Squirrel</dt><dd>595-4554</dd></dl>
        <dl class="listing"><dt>City Hall</dt><dd>987-6543</dd></dl>
        <dl class="listing"><dt>C.J. O\u2019Ballyhoo\u2019s American Eatery</dt><dd>535-7777</dd></dl>
        <dl class="listing"><dt>Clearance-Meat Jerky Club</dt><dd>787-7740</dd></dl>
        <dl class="listing"><dt>Cliff Cholera</dt><dd>319-6057</dd></dl>
        <dl class="listing"><dt>Clora Head</dt><dd>982-0222</dd></dl>
        <dl class="listing"><dt>Cloverton's Rec Center</dt><dd>321-8666</dd></dl>
        <dl class="listing"><dt>Container Contentment</dt><dd>765-2222</dd></dl>
        <dl class="listing"><dt>Contemporary Art Museum For Dads</dt><dd>984-1234</dd></dl>
        <dl class="listing"><dt>Coral\u2019s Jr. Seafood</dt><dd>712-1234</dd></dl>
        <dl class="listing"><dt>Corduroy P. Munke</dt><dd>321-8593</dd></dl>
        <dl class="listing"><dt>Corky Zigzag, MD</dt><dd>987-0123</dd></dl>
        <dl class="listing"><dt>Corncob McBilge</dt><dd>917-4751</dd></dl>
        <dl class="listing"><dt>Cornwallace Stickle</dt><dd>750-1234</dd></dl>
        <dl class="listing"><dt>Coward Appleton</dt><dd>446-4949</dd></dl>
        <dl class="listing"><dt>Coyo Kaleido</dt><dd>672-6868</dd></dl>
        <dl class="listing"><dt>Craig Jacobs</dt><dd>719-0044</dd></dl>
        <dl class="listing"><dt>Crimp Beardbody</dt><dd>406-8068</dd></dl>
        <dl class="listing"><dt>Cyrus McNabbers</dt><dd>780-8436</dd></dl>
        <h3>D</h3>
        <dl class="listing"><dt>Daphne Ornery</dt><dd>409-2876</dd></dl>
        <dl class="listing"><dt>Daredare Si</dt><dd>845-9876</dd></dl>
        <dl class="listing"><dt>Decent Kitty Care</dt><dd>937-4999</dd></dl>
        <dl class="listing"><dt>Delilah Hucksuckle</dt><dd>765-8451</dd></dl>
        <dl class="listing"><dt>Dellbert Mints</dt><dd>999-5552</dd></dl>
        <dl class="listing"><dt>Devils Family</dt><dd>552-9481</dd></dl>
        <dl class="listing"><dt>Dirt Pile Park</dt><dd>543-3939</dd></dl>
        <dl class="listing"><dt>DJ Mixmaster Max Mustermann</dt><dd>750-1116</dd></dl>
        <dl class="listing"><dt>Dog & Cat Repair</dt><dd>439-0000</dd></dl>
        <dl class="listing"><dt>Donna Chaffington's Dance Studio</dt><dd>737-9876</dd></dl>
        <dl class="listing"><dt>Doug\u2019s Yoga and Bait</dt><dd>432-8222</dd></dl>
        <dl class="listing"><dt>Drawing-A-Blank Art Supplies</dt><dd>372-7799</dd></dl>
        <dl class="listing"><dt>Dr. Meowski DVM</dt><dd>432-7069</dd></dl>
        <dl class="listing"><dt>Dumpy\u2019s Discount Cargo Pants</dt><dd>567-1356</dd></dl>
        <h3>E</h3>
        <dl class="listing"><dt>Edith Wickerbasket</dt><dd>898-2525</dd></dl>
        <dl class="listing"><dt>Eerie Acres Retirement Home</dt><dd>527-5550</dd></dl>
        <dl class="listing"><dt>Elfrieda Mulberry</dt><dd>679-6870</dd></dl>
        <dl class="listing"><dt>Emily's Slightly Corrupted Gems</dt><dd>777-0999</dd></dl>
        <dl class="listing"><dt>Emmaline Morris</dt><dd>876-2220</dd></dl>
        <dl class="listing"><dt>E.Roy Finley, DDS</dt><dd>965-8104</dd></dl>
        <dl class="listing"><dt>Ezekiel Horsefeather</dt><dd>543-4040</dd></dl>
        <h3>F</h3>
        <dl class="listing"><dt>Fanciful Aunt Home Decor</dt><dd>345-7018</dd></dl>
        <dl class="listing"><dt>Fancy Pants Cinemas</dt><dd>389-1450</dd></dl>
        <dl class="listing"><dt>Fedora Jenkins</dt><dd>317-9933</dd></dl>
        <dl class="listing"><dt>Ferd Parkington</dt><dd>424-3076</dd></dl>
        <dl class="listing"><dt>Ferguson's Discount Piano Lessons</dt><dd>444-0123</dd></dl>
        <dl class="listing"><dt>Fine Aid Pharmacy</dt><dd>795-5678</dd></dl>
        <dl class="listing"><dt>Fix-Is-In Construction, The</dt><dd>876-8765</dd></dl>
        <dl class="listing"><dt>Flint Pemples</dt><dd>545-6543</dd></dl>
        <dl class="listing"><dt>Florence Butt</dt><dd>321-3737</dd></dl>
        <dl class="listing"><dt>Foggy Lagoon Park</dt><dd>434-1234</dd></dl>
        <dl class="listing"><dt>Forrest Smallmouth</dt><dd>543-4321</dd></dl>
        <dl class="listing"><dt>Fragrant Phil's Taxi Service</dt><dd>987-2224</dd></dl>
        <dl class="listing"><dt>Frank Spongeman, MD</dt><dd>923-0001</dd></dl>
        <dl class="listing"><dt>Fulano de Tallgrass</dt><dd>678-6666</dd></dl>
        <h3>G</h3>
        <dl class="listing"><dt>Gaberdine Joey: Aussie Kids Clothing, The</dt><dd>789-6271</dd></dl>
        <dl class="listing"><dt>Gabriel Tootlebloom</dt><dd>375-4539</dd></dl>
        <dl class="listing"><dt>Gale Tiddlywinks</dt><dd>310-9876</dd></dl>
        <dl class="listing"><dt>Garland McRae</dt><dd>696-4449</dd></dl>
        <dl class="listing"><dt>Gary Tengu</dt><dd>456-4444</dd></dl>
        <dl class="listing"><dt>Gas N\u2019 Sushi</dt><dd>565-4443</dd></dl>
        <dl class="listing"><dt>Gears N Beers Autoshop and Brewery</dt><dd>678-2512</dd></dl>
        <dl class="listing"><dt>Gently Used Produce</dt><dd>743-3535</dd></dl>
        <dl class="listing"><dt>Gertrude Dixie</dt><dd>765-7744</dd></dl>
        <dl class="listing"><dt>Gijs F Unas III</dt><dd>730-5749</dd></dl>
        <dl class="listing"><dt>Ginny St. Porridge</dt><dd>777-0999</dd></dl>
        <dl class="listing"><dt>Gnute Ipswitch</dt><dd>210-9292</dd></dl>
        <dl class="listing"><dt>Gortnoy Cornmedley</dt><dd>486-3788</dd></dl>
        <dl class="listing"><dt>Greasy Fork, The</dt><dd>262-5757</dd></dl>
        <dl class="listing"><dt>Gretta Grisspiddler</dt><dd>323-0444</dd></dl>
        <dl class="listing"><dt>Gristle Spot, The</dt><dd>939-1234</dd></dl>
        <h3>H</h3>
        <dl class="listing"><dt>Halley Jacobs</dt><dd>598-0404</dd></dl>
        <dl class="listing"><dt>Ham By The Foot</dt><dd>247-1082</dd></dl>
        <dl class="listing"><dt>Hand Turkey Art Museum</dt><dd>934-7654</dd></dl>
        <dl class="listing"><dt>Happy Bowel Vegan Buffet, The</dt><dd>765-5049</dd></dl>
        <dl class="listing"><dt>Happy Hamsmanning</dt><dd>504-1333</dd></dl>
        <dl class="listing"><dt>Happy Scales Lizard Salon</dt><dd>765-3210</dd></dl>
        <dl class="listing"><dt>Harvey Nutts</dt><dd>627-9238</dd></dl>
        <dl class="listing"><dt>Heapin\u2019 Heaps o\u2019 Heaps</dt><dd>418-5000</dd></dl>
        <dl class="listing"><dt>Heck Pancake</dt><dd>237-9000</dd></dl>
        <dl class="listing"><dt>Holly T. Small</dt><dd>931-2929</dd></dl>
        <dl class="listing"><dt>Horace Oaf</dt><dd>213-6363</dd></dl>
        <h3>I</h3>
        <dl class="listing"><dt>Ignacio Firestarter</dt><dd>525-6008</dd></dl>
        <dl class="listing"><dt>Imp Fancy</dt><dd>444-7722</dd></dl>
        <dl class="listing"><dt>Infernal Affairs</dt><dd>722-1333</dd></dl>
        <dl class="listing"><dt>Insect Relocation Services</dt><dd>567-6999</dd></dl>
        <dl class="listing"><dt>International Museum of Corn Dogs, The</dt><dd>423-7676</dd></dl>
        <dl class="listing"><dt>Investinal Fortitude Savings and Loan</dt><dd>333-9988</dd></dl>
        <dl class="listing"><dt>Isaac Jephcots</dt><dd>636-3333</dd></dl>
        <dl class="listing"><dt>Ivy Trickle</dt><dd>565-2226</dd></dl>
        <h3>J</h3>
        <dl class="listing"><dt>Janet Borgleman, DDS</dt><dd>321-8765</dd></dl>
        <dl class="listing"><dt>Jean Duponte Cristo</dt><dd>222-9876</dd></dl>
        <dl class="listing"><dt>Jeff \u201CGeoff\u201D Jefferstein</dt><dd>710-1111</dd></dl>
        <dl class="listing"><dt>Jeff Hansen</dt><dd>764-9999</dd></dl>
        <dl class="listing"><dt>Jen\u2019s Vegan Bathmats</dt><dd>469-5599</dd></dl>
        <dl class="listing"><dt>Jim James Jonatheux, DDS</dt><dd>678-8281</dd></dl>
        <dl class="listing"><dt>Jimminy Myron Crankenfitz</dt><dd>948-7779</dd></dl>
        <dl class="listing"><dt>Jimmy Duranto</dt><dd>343-4567</dd></dl>
        <dl class="listing"><dt>Joanna Custardio</dt><dd>888-4321</dd></dl>
        <dl class="listing"><dt>John Boring</dt><dd>262-1010</dd></dl>
        <dl class="listing"><dt>John Kangaroo</dt><dd>234-8270</dd></dl>
        <dl class="listing"><dt>Johnny Gumlately</dt><dd>876-9999</dd></dl>
        <dl class="listing"><dt>John\u2019s Irregular Casket Shop</dt><dd>555-1747</dd></dl>
        <dl class="listing"><dt>J. \u201COnion\u201D Crotchswaddle</dt><dd>909-2214</dd></dl>
        <dl class="listing"><dt>Jos Joskens Yo-Yo's</dt><dd>987-1111</dd></dl>
        <dl class="listing"><dt>Just Old Calendars</dt><dd>242-3636</dd></dl>
        <h3>K</h3>
        <dl class="listing"><dt>Karen\u2019s Non-Possessed Doll Shop</dt><dd>663-8880</dd></dl>
        <dl class="listing"><dt>Kate Stark</dt><dd>376-4440</dd></dl>
        <dl class="listing"><dt>Kayla Swift</dt><dd>210-2222</dd></dl>
        <dl class="listing"><dt>Kelly Paleczny</dt><dd>321-8666</dd></dl>
        <dl class="listing"><dt>Kevin Pullman, DDS</dt><dd>979-7575</dd></dl>
        <dl class="listing"><dt>Kip Ortiz</dt><dd>678-6789</dd></dl>
        <dl class="listing"><dt>Kiss Pista's Pistachio Kisses</dt><dd>959-3456</dd></dl>
        <dl class="listing"><dt>Kurt I. Mukha</dt><dd>771-4441</dd></dl>
        <h3>L</h3>
        <dl class="listing"><dt>Lacey\u2019s Tablecloths & Gowns</dt><dd>765-7222</dd></dl>
        <dl class="listing"><dt>Lefty\u2019s Unpaired Gloves</dt><dd>567-4445</dd></dl>
        <dl class="listing"><dt>Lem N. Forlolz</dt><dd>737-9876</dd></dl>
        <dl class="listing"><dt>Leon Fishbucket</dt><dd>444-3335</dd></dl>
        <dl class="listing"><dt>Leroy Bowditch</dt><dd>313-7333</dd></dl>
        <dl class="listing"><dt>Lightly Stolen Cars</dt><dd>992-0005</dd></dl>
        <dl class="listing"><dt>Li Kumari</dt><dd>454-4321</dd></dl>
        <dl class="listing"><dt>Lil \u201CLi\u2019l Goober\u201D Goober</dt><dd>288-4444</dd></dl>
        <dl class="listing"><dt>Little Lord Little League Fields</dt><dd>234-3333</dd></dl>
        <dl class="listing"><dt>Logan Lee</dt><dd>204-6660</dd></dl>
        <dl class="listing"><dt>Luella Bedwetter</dt><dd>496-4567</dd></dl>
        <dl class="listing"><dt>Luke Poodtootle</dt><dd>660-8888</dd></dl>
        <dl class="listing"><dt>Lulabelle Gertz-Smalley</dt><dd>432-9819</dd></dl>
        <h3>M</h3>
        <dl class="listing"><dt>Mabel Rustbucket</dt><dd>919-8789</dd></dl>
        <dl class="listing"><dt>Madam Harriet's Psychic Hotline</dt><dd>948-6565</dd></dl>
        <dl class="listing"><dt>Manny Manananggal</dt><dd>484-3344</dd></dl>
        <dl class="listing"><dt>Man Vanderslice</dt><dd>965-8866</dd></dl>
        <dl class="listing"><dt>Marjorie Humid</dt><dd>734-7111</dd></dl>
        <dl class="listing"><dt>Marty and the Fuzz Drive-Time Radio</dt><dd>483-7654</dd></dl>
        <dl class="listing"><dt>Matilda Lampfoot</dt><dd>765-7779</dd></dl>
        <dl class="listing"><dt>Melon Ballerz</dt><dd>682-0000</dd></dl>
        <dl class="listing"><dt>Mengano Wu</dt><dd>765-8882</dd></dl>
        <dl class="listing"><dt>Mid-life Crisis Sports Cars</dt><dd>333-0777</dd></dl>
        <dl class="listing"><dt>Miles of Aisles Discount Market</dt><dd>754-1152</dd></dl>
        <dl class="listing"><dt>Mind Your Own Beeswax Candlemaking Studio</dt><dd>712-8889</dd></dl>
        <dl class="listing"><dt>Misc. Rib Shack</dt><dd>259-1112</dd></dl>
        <dl class="listing"><dt>Mom Fatherman</dt><dd>757-6867</dd></dl>
        <dl class="listing"><dt>Mordechai H. Sizzle</dt><dd>261-6543</dd></dl>
        <dl class="listing"><dt>Morten Menigmandible</dt><dd>631-5555</dd></dl>
        <dl class="listing"><dt>Mostly No-Kill Pest Removal</dt><dd>540-2288</dd></dl>
        <dl class="listing"><dt>Murry Bruin</dt><dd>886-3331</dd></dl>
        <dl class="listing"><dt>Museum of \u201CArt\u201D, The</dt><dd>910-5959</dd></dl>
        <dl class="listing"><dt>Museum of Benches, The</dt><dd>228-8909</dd></dl>
        <dl class="listing"><dt>Museum of Clever Bumper Stickers</dt><dd>345-9999</dd></dl>
        <dl class="listing"><dt>Museum of Potato Chips That Look Like Things</dt><dd>880-3300</dd></dl>
        <dl class="listing"><dt>Museum of Science and Hearsay</dt><dd>306-3333</dd></dl>
        <dl class="listing"><dt>Mysterious Crevice Park</dt><dd>272-4237</dd></dl>
        <dl class="listing"><dt>Mystic Philip's High Quality Medium Service</dt><dd>730-7774</dd></dl>
        <h3>N</h3>
        <dl class="listing"><dt>Nan D. Bear</dt><dd>966-2222</dd></dl>
        <dl class="listing"><dt>National Aeronautics and Space Administration</dt><dd>567-5642</dd></dl>
        <dl class="listing"><dt>Nine Circles Circular</dt><dd>636-6688</dd></dl>
        <dl class="listing"><dt>Nothing But Toilet Seats</dt><dd>619-7878</dd></dl>
        <h3>O</h3>
        <dl class="listing"><dt>Old Bones Creamery</dt><dd>987-7079</dd></dl>
        <dl class="listing"><dt>Old Raisin Winery</dt><dd>234-3444</dd></dl>
        <dl class="listing"><dt>Ol\u2019 Hambone\u2019s Pig Petting Zoo</dt><dd>539-3555</dd></dl>
        <dl class="listing"><dt>Omnipresent Studios</dt><dd>379-1444</dd></dl>
        <h3>P</h3>
        <dl class="listing"><dt>Party Township</dt><dd>208-9494</dd></dl>
        <dl class="listing"><dt>Pay-By-The-Minute Roller Coasters</dt><dd>345-7711</dd></dl>
        <dl class="listing"><dt>Penny Plinkstein</dt><dd>937-3331</dd></dl>
        <dl class="listing"><dt>PensCrafters 1-Hour Pens</dt><dd>949-5454</dd></dl>
        <dl class="listing"><dt>Pepa Z. Depa</dt><dd>579-1177</dd></dl>
        <dl class="listing"><dt>Pepper-Phonies Vegan Pizza</dt><dd>646-5555</dd></dl>
        <dl class="listing"><dt>Pet Vet, The</dt><dd>654-5555</dd></dl>
        <dl class="listing"><dt>Pho-getta Bout It!</dt><dd>943-5432</dd></dl>
        <dl class="listing"><dt>Pinco Pallino's Pastry Palace</dt><dd>656-4321</dd></dl>
        <dl class="listing"><dt>Pizza Fun Time</dt><dd>678-8883</dd></dl>
        <dl class="listing"><dt>Planetarium of the Apes</dt><dd>567-7000</dd></dl>
        <dl class="listing"><dt>Poopsie Gumball</dt><dd>345-9933</dd></dl>
        <dl class="listing"><dt>Poorly Labelled Salt and/or Sugar Supply</dt><dd>838-4422</dd></dl>
        <dl class="listing"><dt>Popsicle Stick Louvre</dt><dd>626-6818</dd></dl>
        <dl class="listing"><dt>Porch Debris Warehouse</dt><dd>444-5389</dd></dl>
        <dl class="listing"><dt>Pretentious Home & Yard</dt><dd>350-0123</dd></dl>
        <dl class="listing"><dt>Priya Gildong</dt><dd>778-4466</dd></dl>
        <dl class="listing"><dt>Psychic Enemies Network</dt><dd>678-3131</dd></dl>
        <h3>Q</h3>
        <dl class="listing"><dt>Quik Fix-A-Vac</dt><dd>471-3210</dd></dl>
        <dl class="listing"><dt>Quite-A-Repair</dt><dd>465-2222</dd></dl>
        <h3>R</h3>
        <dl class="listing"><dt>Rebecca Impundulu</dt><dd>252-6694</dd></dl>
        <dl class="listing"><dt>Ride or Don't Taxi Service</dt><dd>307-7555</dd></dl>
        <dl class="listing"><dt>Riley Phoenix</dt><dd>654-2555</dd></dl>
        <dl class="listing"><dt>Rivers Bank</dt><dd>274-7722</dd></dl>
        <dl class="listing"><dt>Rob Camitti\u2019s Superfluous Cars</dt><dd>367-7154</dd></dl>
        <dl class="listing"><dt>Rodent Capture & Rapture</dt><dd>904-8444</dd></dl>
        <dl class="listing"><dt>Ronald Stoolback</dt><dd>456-1923</dd></dl>
        <dl class="listing"><dt>Ryan DiGiorgi</dt><dd>444-0123</dd></dl>
        <dl class="listing"><dt>Rye Dash: Fastest Bread in Town</dt><dd>323-0444</dd></dl>
        <h3>S</h3>
        <dl class="listing"><dt>Salon And Hair-Well</dt><dd>432-1554</dd></dl>
        <dl class="listing"><dt>Samuel Raintoot</dt><dd>222-3335</dd></dl>
        <dl class="listing"><dt>Santiago Lemontoe</dt><dd>210-8898</dd></dl>
        <dl class="listing"><dt>Scenic Underlook</dt><dd>634-3355</dd></dl>
        <dl class="listing"><dt>Shelby Hoddle</dt><dd>790-8811</dd></dl>
        <dl class="listing"><dt>Sherman Lyness</dt><dd>838-5559</dd></dl>
        <dl class="listing"><dt>Shirt-Outta-Luck Dry Cleaners</dt><dd>345-0006</dd></dl>
        <dl class="listing"><dt>Sidney Hammockman</dt><dd>345-5111</dd></dl>
        <dl class="listing"><dt>Slow and Steady Pigeon Messaging Service</dt><dd>976-0001</dd></dl>
        <dl class="listing"><dt>Smarm to Table Sarcastic Grocers</dt><dd>738-1234</dd></dl>
        <dl class="listing"><dt>Snarf & Hurl</dt><dd>577-5432</dd></dl>
        <dl class="listing"><dt>Special Agent Normal Neighborman</dt><dd>272-4422</dd></dl>
        <dl class="listing"><dt>Speedy Getaway Travel Agency</dt><dd>693-3399</dd></dl>
        <dl class="listing"><dt>Spoons \u2018R We</dt><dd>345-3355</dd></dl>
        <dl class="listing"><dt>Srednestatisticheskiy Sedans</dt><dd>210-4444</dd></dl>
        <dl class="listing"><dt>Stad's Thawed Pre-Jawed Scrod</dt><dd>277-2227</dd></dl>
        <dl class="listing"><dt>Steve Phlansby</dt><dd>386-5013</dd></dl>
        <dl class="listing"><dt>Sylvester Brunch</dt><dd>282-5222</dd></dl>
        <h3>T</h3>
        <dl class="listing"><dt>Tad Thoodle</dt><dd>252-9974</dd></dl>
        <dl class="listing"><dt>Take Me for a Ride Cab Co.</dt><dd>565-1333</dd></dl>
        <dl class="listing"><dt>Teeds Wyvern</dt><dd>879-1234</dd></dl>
        <dl class="listing"><dt>Teenage Waistline</dt><dd>654-5063</dd></dl>
        <dl class="listing"><dt>TGIH Year-Round Halloween Depot</dt><dd>326-6190</dd></dl>
        <dl class="listing"><dt>Three Minute Escape Rooms</dt><dd>654-9876</dd></dl>
        <dl class="listing"><dt>Thurman Nogood</dt><dd>939-5656</dd></dl>
        <dl class="listing"><dt>Tim Simian Chimp Mechanic</dt><dd>603-4000</dd></dl>
        <dl class="listing"><dt>Tipsy Tune's Unsteady Autos</dt><dd>456-6229</dd></dl>
        <dl class="listing"><dt>Toadboy's Slightly Used Reptiles</dt><dd>678-2512</dd></dl>
        <dl class="listing"><dt>Tom Pudding</dt><dd>424-6737</dd></dl>
        <dl class="listing"><dt>Toot Pootladder</dt><dd>678-1717</dd></dl>
        <dl class="listing"><dt>Trent Jormbo</dt><dd>345-8886</dd></dl>
        <dl class="listing"><dt>TV Addict's Guide</dt><dd>338-5544</dd></dl>
        <h3>U</h3>
        <dl class="listing"><dt>Under the Counter Pharmacy</dt><dd>637-3210</dd></dl>
        <dl class="listing"><dt>U. Xie</dt><dd>234-3333</dd></dl>
        <h3>V</h3>
        <dl class="listing"><dt>Vance VanVan\u2019s Van Lot</dt><dd>293-5971</dd></dl>
        <dl class="listing"><dt>Vardenis Pavardenis</dt><dd>345-8333</dd></dl>
        <dl class="listing"><dt>Vestworld</dt><dd>787-1111</dd></dl>
        <dl class="listing"><dt>Vincent Pricecheck</dt><dd>555-0003</dd></dl>
        <dl class="listing"><dt>Vivian Stickler, DDS</dt><dd>210-2555</dd></dl>
        <h3>W</h3>
        <dl class="listing"><dt>Walken Clinic, The</dt><dd>567-0007</dd></dl>
        <dl class="listing"><dt>Wang Zutano</dt><dd>242-4678</dd></dl>
        <dl class="listing"><dt>Waterdance</dt><dd>915-1508</dd></dl>
        <dl class="listing"><dt>Welcome to Yarnia</dt><dd>935-5511</dd></dl>
        <dl class="listing"><dt>We 'R Toys</dt><dd>502-5678</dd></dl>
        <dl class="listing"><dt>Wilford O\u2019Hicks</dt><dd>885-3434</dd></dl>
        <dl class="listing"><dt>Wok This Way</dt><dd>696-0666</dd></dl>
        <dl class="listing"><dt>Wreckin' Crew Theatre</dt><dd>399-6444</dd></dl>
        <dl class="listing"><dt>Wylie Skidd</dt><dd>526-1947</dd></dl>
        <h3>Y</h3>
        <dl class="listing"><dt>Yakkin' Zack AM Radio Show</dt><dd>383-4222</dd></dl>
        <dl class="listing"><dt>Yakkity Kayak Whitewater Rafting</dt><dd>949-1112</dd></dl>
        <dl class="listing"><dt>Yamada Honeycomb</dt><dd>277-2227</dd></dl>
        <dl class="listing"><dt>Yosup's To-Go Cups</dt><dd>333-0777</dd></dl>
        <h3>Z</h3>
        <dl class="listing"><dt>Zak Zakaryas</dt><dd>949-1112</dd></dl>
        <dl class="listing"><dt>Zhang P\xE9rez, MD</dt><dd>841-6804</dd></dl>
        <dl class="listing"><dt>Zippy Zip Memorial Post Office</dt><dd>987-6551</dd></dl>
        <dl class="listing"><dt>Zuzu\u2019s Kettles</dt><dd>248-4949</dd></dl>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></div>
</div>`,
    aS = Ht.extend({
        defaults: {
            dialed: ""
        }
    }),
    rS = je.View.extend({
        className: "mechanic phone",
        template: ke.template(oS),
        model: new aS,
        isTouch: !1,
        events: {
            "click .leave": "onLeaveClick",
            "click .clear": "onClearClick",
            "mousedown .key": "onKeyDown",
            "touchstart .key": "onKeyStart",
            "touchend .key": "onKeyEnd",
            "click .key": "onKeyClick",
            "click .phonebook-button": "onPhonebookClick"
        },
        bindings: {
            ".instructions": {
                observe: "listingName",
                onGet(t) {
                    return `Call "${t}"`
                }
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".dialed": {
                observe: "dialed",
                onGet(t) {
                    t = t.padEnd(7, "_");
                    const e = t.slice(0, 3),
                        n = t.slice(3);
                    return `${e}-${n}`
                }
            },
            ".phonebook": {
                classes: {
                    visible: "showPhonebook"
                }
            },
            ".leave": {
                classes: {
                    back: {
                        observe: "showPhonebook",
                        onGet: t => t
                    }
                }
            },
            ".clamp": {
                classes: {
                    visible: {
                        observe: "showPhonebook",
                        onGet: t => !t
                    }
                }
            }
        },
        initialize() {
            this.model.setUpdate({
                isWaiting: !1,
                dialed: "",
                showPhonebook: !1
            }), this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck)
        },
        onRender() {
            this.stickit()
        },
        onMistakeCheck(t) {
            if (!t.get("isWaiting") || Object.keys(t.changed).length > 2) return;
            let e = sS[this.model.previous("dialed")];
            e && atob && (e = atob(e)), this.triggerMethod("result", {
                type: "fail",
                category: e ? "number" : "",
                message: e || "WRONG<br/>NUMBER"
            }), this.model.setUpdate({
                dialed: "",
                isWaiting: !1
            })
        },
        onLeaveClick() {
            if (this.model.get("showPhonebook")) {
                this.model.setUpdate({
                    showPhonebook: !1
                });
                return
            }
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        onClearClick() {
            this.model.setUpdate({
                dialed: ""
            })
        },
        onPhonebookClick() {
            this.model.setUpdate({
                showPhonebook: !0
            })
        },
        onCloseClick() {
            this.model.setUpdate({
                showPhonebook: !1
            })
        },
        onKeyStart(t) {
            this.isTouch = !0, Ye(t.currentTarget).addClass("down"), this.onKey(t)
        },
        onKeyEnd(t) {
            Ye(t.currentTarget).removeClass("down")
        },
        onKeyClick(t) {
            this.isTouch || this.onKey(t)
        },
        onKey(t) {
            if (this.model.get("isWaiting")) return;
            const e = `${Ye(t.currentTarget).data("dial")}`,
                n = `${this.model.get("dialed")}${e}`;
            this.model.setUpdate({
                dialed: n
            }), !(n.length < 7) && (this.model.setUpdate({
                isWaiting: !0
            }), this.triggerMethod("client:message", {
                action: "dial",
                num: n
            }))
        }
    }),
    VS = `<div class="avatar head"></div>
<p class="speaker"></p>
<p class="text"></p>`,
    lS = je.View.extend({
        className: "comment background-color",
        template: ke.template(VS),
        bindings: {
            ":el": {
                attributes: [{
                    name: "class",
                    observe: "playerInfo",
                    onGet(t) {
                        let e = "comment";
                        return t ? e += ` me ${t.avatar}` : e += " npc", e
                    }
                }]
            },
            ".avatar": {
                attributes: [{
                    name: "class",
                    observe: ["playerInfo", "partnerIcon"],
                    onGet([t, e]) {
                        return t ? t.avatar : e || ""
                    }
                }]
            },
            ".speaker": "speaker",
            ".text": "text"
        },
        onRender() {
            this.stickit()
        }
    }),
    AS = ze.Collection.extend({
        model: ze.Model
    }),
    cS = je.CollectionView.extend({
        tagName: "div",
        className: "conversation",
        childView: lS,
        collection: new AS
    }),
    dS = '<button class="choice button"></button>',
    pS = je.View.extend({
        tagName: "div",
        template: ke.template(dS),
        events: {
            click: "onClick"
        },
        bindings: {
            button: "text"
        },
        onRender() {
            this.stickit()
        },
        onClick() {
            this.triggerMethod("button:select", this.model)
        }
    }),
    hS = `
    <div class="ball ball-1"></div>
    <div class="ball ball-2"></div>
    <div class="ball ball-3"></div>
`,
    uS = je.View.extend({
        tagName: "div",
        className: "wait",
        template: ke.template(hS)
    }),
    mS = ze.Collection.extend({
        model: ze.Model
    }),
    fS = je.CollectionView.extend({
        tagName: "div",
        className: "choices",
        childView: pS,
        emptyView: uS,
        collection: new mS
    }),
    qS = `<div class="dialog-container">
    <div id="conversation-region"></div>
    <div id="choices-region"></div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    gS = Ht.extend({
        defaults: {
            conversation: [],
            choices: []
        }
    }),
    yS = je.View.extend({
        className: "mechanic dialog",
        template: ke.template(qS),
        model: new gS,
        conversationView: null,
        choicesView: null,
        waitTimeout: null,
        responseTimeout: null,
        regions: {
            conversation: "#conversation-region",
            choices: "#choices-region"
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".choices": {
                attributes: [{
                    name: "class",
                    observe: "choices",
                    onGet(t) {
                        return t.length === 4 ? "four" : ""
                    }
                }]
            }
        },
        initialize() {
            this.conversationView = new cS, this.choicesView = new fS, this.listenTo(this.model, "change", this.update, this), this.listenTo(this.model, "change:stepIndex", this.resetData), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                conversation: [],
                choices: [],
                selected: null
            }), this.conversationView.collection.reset(), this.choicesView.collection.reset()
        },
        update() {
            const t = this.model.get("conversation");
            t.forEach(n => {
                n.speaker === this.model.get("playerInfo").name ? n.playerInfo = this.model.get("playerInfo") : n.partnerIcon = this.model.get("partnerIcon")
            });
            const e = this.model.get("choices").map(n => ({
                text: n
            }));
            this.choicesView.collection.set(e), this.conversationView.collection.length ? this.addResponses(t, e) : (this.conversationView.collection.set(t), this.choicesView.collection.set(e))
        },
        onRender() {
            this.showChildView("conversation", this.conversationView), this.showChildView("choices", this.choicesView), this.stickit()
        },
        onBeforeDestroy() {
            this.conversationView.destroy(), this.choicesView.destroy(), this.clearTimeouts()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        onChildviewChildviewButtonSelect(t) {
            this.triggerMethod("client:message", {
                action: "respond",
                index: t.collection.indexOf(t)
            })
        },
        addResponses(t, e) {
            if (!t.length) return;
            const n = t[t.length - 2],
                i = t[t.length - 1],
                o = this.getRegion("conversation").el;
            this.choicesView.collection.reset(), this.conversationView.collection.add(n), o && (o.scrollTop = o.scrollHeight), this.clearTimeouts(), this.waitTimeout = setTimeout(() => {
                this.conversationView.collection.add({
                    speaker: i.speaker,
                    partnerIcon: i.partnerIcon,
                    text: "..."
                }), o && (o.scrollTop = o.scrollHeight)
            }, 500), this.responseTimeout = setTimeout(() => {
                this.conversationView.collection.last().set(i), this.choicesView.collection.set(e), o && (o.scrollTop = o.scrollHeight)
            }, 2e3)
        },
        clearTimeouts() {
            this.waitTimeout && (clearTimeout(this.waitTimeout), this.waitTimeout = null), this.responseTimeout && (clearTimeout(this.responseTimeout), this.responseTimeout = null)
        }
    }),
    bS = `
    <div class="press"></div>
`,
    vS = je.View.extend({
        className: "gizmo gizmo-button",
        template: ke.template(bS),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ":el": {
                classes: {
                    on: "value"
                }
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            let t = 0;
            const e = this.model.get("value"),
                n = setInterval(() => {
                    if (t >= 10) {
                        setTimeout(() => {
                            this.model.set({
                                value: e
                            })
                        }, 200), clearInterval(n);
                        return
                    }
                    this.model.set({
                        value: t % 2 === 1 ? 0 : 1
                    }), t += 1
                }, 50)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            const t = this.model.get("value");
            this.model.set({
                value: !t
            })
        }
    }),
    wS = `
    <div class="dip dip-0"></div>
    <div class="dip dip-1"></div>
    <div class="dip dip-2"></div>
`,
    xS = je.View.extend({
        className: "gizmo gizmo-dips",
        template: ke.template(wS),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".dip-0": {
                classes: {
                    on: {
                        observe: "value",
                        onGet(t) {
                            return t.toString(2).padStart(3, 0)[0] === "1"
                        }
                    }
                }
            },
            ".dip-1": {
                classes: {
                    on: {
                        observe: "value",
                        onGet(t) {
                            return t.toString(2).padStart(3, 0)[1] === "1"
                        }
                    }
                }
            },
            ".dip-2": {
                classes: {
                    on: {
                        observe: "value",
                        onGet(t) {
                            return t.toString(2).padStart(3, 0)[2] === "1"
                        }
                    }
                }
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            const t = this.model.get("value");
            setTimeout(() => {
                this.model.set({
                    value: ke.random(0, 8)
                })
            }, 200), setTimeout(() => {
                this.model.set({
                    value: ke.random(0, 8)
                })
            }, 400), setTimeout(() => {
                this.model.set({
                    value: t
                })
            }, 600)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 7 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    kS = `
    <div class="base"></div>
    <div class="indicator"></div>
`,
    CS = je.View.extend({
        className: "gizmo gizmo-direction",
        template: ke.template(kS),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".indicator": {
                attributes: [{
                    name: "style",
                    observe: "value",
                    onGet(t) {
                        return t === 0 ? "transform: rotate(0deg) scaleY(1);" : t === 1 ? "transform: rotate(90deg) scaleY(1);" : t === 2 ? "transform: rotate(0deg) scaleY(-1);" : t === 3 ? "transform: rotate(90deg) scaleY(-1);" : ""
                    }
                }]
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            const t = this.model.get("value");
            setTimeout(() => {
                this.model.set({
                    value: 0
                })
            }, 1), setTimeout(() => {
                this.model.set({
                    value: 2
                })
            }, 300), setTimeout(() => {
                this.model.set({
                    value: t
                })
            }, 600)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 3 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    RS = je.View.extend({
        className: "gizmo gizmo-empty",
        template: ke.template(""),
        model: new ze.Model({
            value: null
        })
    });
/*!
 * paths 3.7.0
 * https://greensock.com
 *
 * Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var DS = /[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,
    SS = /(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,
    TS = /[\+\-]?\d*\.?\d+e[\+\-]?\d+/ig,
    ES = /(^[#\.][a-z]|[a-y][a-z])/i,
    LS = Math.PI / 180,
    BS = 180 / Math.PI,
    ys = Math.sin,
    bs = Math.cos,
    pi = Math.abs,
    es = Math.sqrt,
    Ll = Math.atan2,
    nu = 1e8,
    Cq = function(e) {
        return typeof e == "string"
    },
    Zy = function(e) {
        return typeof e == "number"
    },
    MS = function(e) {
        return typeof e > "u"
    },
    OS = {},
    IS = {},
    $l = 1e5,
    _y = function(e) {
        return Math.round((e + nu) % 1 * $l) / $l || (e < 0 ? 0 : 1)
    },
    yt = function(e) {
        return Math.round(e * $l) / $l || 0
    },
    Rq = function(e) {
        return Math.round(e * 1e10) / 1e10 || 0
    },
    Dq = function(e, n, i, o) {
        var r = e[n],
            V = o === 1 ? 6 : iu(r, i, o);
        if (V && V + i + 2 < r.length) return e.splice(n, 0, r.slice(0, i + V + 2)), r.splice(0, i + V), 1
    },
    PS = function(e, n) {
        var i = e.length;
        for (n || e.reverse(); i--;) e[i].reversed || $o(e[i])
    },
    Sq = function(e, n) {
        return n.totalLength = e.totalLength, e.samples ? (n.samples = e.samples.slice(0), n.lookup = e.lookup.slice(0), n.minLength = e.minLength, n.resolution = e.resolution) : e.totalPoints && (n.totalPoints = e.totalPoints), n
    },
    US = function(e, n) {
        var i = e.length,
            o = e[i - 1] || [],
            r = o.length;
        i && n[0] === o[r - 2] && n[1] === o[r - 1] && (n = o.concat(n.slice(2)), i--), e[i] = n
    };

function Ur(t) {
    t = Cq(t) && ES.test(t) && document.querySelector(t) || t;
    var e = t.getAttribute ? t : 0,
        n;
    return e && (t = t.getAttribute("d")) ? (e._gsPath || (e._gsPath = {}), n = e._gsPath[t], n && !n._dirty ? n : e._gsPath[t] = Mi(t)) : t ? Cq(t) ? Mi(t) : Zy(t[0]) ? [t] : t : console.warn("Expecting a <path> element or an SVG path data string")
}

function FS(t) {
    for (var e = [], n = 0; n < t.length; n++) e[n] = Sq(t[n], t[n].slice(0));
    return Sq(t, e)
}

function $o(t) {
    var e = 0,
        n;
    for (t.reverse(); e < t.length; e += 2) n = t[e], t[e] = t[e + 1], t[e + 1] = n;
    t.reversed = !t.reversed
}
var jS = function(e, n) {
        var i = document.createElementNS("http://www.w3.org/2000/svg", "path"),
            o = [].slice.call(e.attributes),
            r = o.length,
            V;
        for (n = "," + n + ","; --r > -1;) V = o[r].nodeName.toLowerCase(), n.indexOf("," + V + ",") < 0 && i.setAttributeNS(null, V, o[r].nodeValue);
        return i
    },
    QS = {
        rect: "rx,ry,x,y,width,height",
        circle: "r,cx,cy",
        ellipse: "rx,ry,cx,cy",
        line: "x1,x2,y1,y2"
    },
    zS = function(e, n) {
        for (var i = n ? n.split(",") : [], o = {}, r = i.length; --r > -1;) o[i[r]] = +e.getAttribute(i[r]) || 0;
        return o
    };

function o0(t, e) {
    var n = t.tagName.toLowerCase(),
        i = .552284749831,
        o, r, V, A, c, d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J, se, te;
    return n === "path" || !t.getBBox ? t : (d = jS(t, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points"), te = zS(t, QS[n]), n === "rect" ? (A = te.rx, c = te.ry || A, r = te.x, V = te.y, D = te.width - A * 2, S = te.height - c * 2, A || c ? (C = r + A * (1 - i), h = r + A, w = h + D, T = w + A * i, M = w + A, O = V + c * (1 - i), Q = V + c, u = Q + S, J = u + c * i, se = u + c, o = "M" + M + "," + Q + " V" + u + " C" + [M, J, T, se, w, se, w - (w - h) / 3, se, h + (w - h) / 3, se, h, se, C, se, r, J, r, u, r, u - (u - Q) / 3, r, Q + (u - Q) / 3, r, Q, r, O, C, V, h, V, h + (w - h) / 3, V, w - (w - h) / 3, V, w, V, T, V, M, O, M, Q].join(",") + "z") : o = "M" + (r + D) + "," + V + " v" + S + " h" + -D + " v" + -S + " h" + D + "z") : n === "circle" || n === "ellipse" ? (n === "circle" ? (A = c = te.r, q = A * i) : (A = te.rx, c = te.ry, q = c * i), r = te.cx, V = te.cy, m = A * i, o = "M" + (r + A) + "," + V + " C" + [r + A, V + q, r + m, V + c, r, V + c, r - m, V + c, r - A, V + q, r - A, V, r - A, V - q, r - m, V - c, r, V - c, r + m, V - c, r + A, V - q, r + A, V].join(",") + "z") : n === "line" ? o = "M" + te.x1 + "," + te.y1 + " L" + te.x2 + "," + te.y2 : (n === "polyline" || n === "polygon") && (v = (t.getAttribute("points") + "").match(SS) || [], r = v.shift(), V = v.shift(), o = "M" + r + "," + V + " L" + v.join(","), n === "polygon" && (o += "," + r + "," + V + "z")), d.setAttribute("d", Ds(d._gsRawPath = Mi(o))), e && t.parentNode && (t.parentNode.insertBefore(d, t), t.parentNode.removeChild(t)), d)
}

function $y(t, e, n) {
    var i = t[e],
        o = t[e + 2],
        r = t[e + 4],
        V;
    return i += (o - i) * n, o += (r - o) * n, i += (o - i) * n, V = o + (r + (t[e + 6] - r) * n - o) * n - i, i = t[e + 1], o = t[e + 3], r = t[e + 5], i += (o - i) * n, o += (r - o) * n, i += (o - i) * n, yt(Ll(o + (r + (t[e + 7] - r) * n - o) * n - i, V) * BS)
}

function e2(t, e, n) {
    n = MS(n) ? 1 : Rq(n) || 0, e = Rq(e) || 0;
    var i = Math.max(0, ~~(pi(n - e) - 1e-8)),
        o = FS(t);
    if (e > n && (e = 1 - e, n = 1 - n, PS(o), o.totalLength = 0), e < 0 || n < 0) {
        var r = Math.abs(~~Math.min(e, n)) + 1;
        e += r, n += r
    }
    o.totalLength || ca(o);
    var V = n > 1,
        A = Tq(o, e, OS, !0),
        c = Tq(o, n, IS),
        d = c.segment,
        m = A.segment,
        q = c.segIndex,
        v = A.segIndex,
        D = c.i,
        S = A.i,
        C = v === q,
        h = D === S && C,
        w, T, M, O, Q, u, J, se;
    if (V || i) {
        for (w = q < v || C && D < S || h && c.t < A.t, Dq(o, v, S, A.t) && (v++, w || (q++, h ? (c.t = (c.t - A.t) / (1 - A.t), D = 0) : C && (D -= S))), 1 - (n - e) < 1e-5 ? q = v - 1 : !c.t && q ? q-- : Dq(o, q, D, c.t) && w && v++, A.t === 1 && (v = (v + 1) % o.length), Q = [], u = o.length, J = 1 + u * i, se = v, J += (u - v + q) % u, O = 0; O < J; O++) US(Q, o[se++ % u]);
        o = Q
    } else if (M = c.t === 1 ? 6 : iu(d, D, c.t), e !== n)
        for (T = iu(m, S, h ? A.t / c.t : A.t), C && (M += T), d.splice(D + M + 2), (T || S) && m.splice(0, S + T), O = o.length; O--;)(O < v || O > q) && o.splice(O, 1);
    else d.angle = $y(d, D + M, 0), D += M, A = d[D], c = d[D + 1], d.length = d.totalLength = 0, d.totalPoints = o.totalPoints = 8, d.push(A, c, A, c, A, c, A, c);
    return o.totalLength = 0, o
}

function HS(t, e, n) {
    e = e || 0, t.samples || (t.samples = [], t.lookup = []);
    var i = ~~t.resolution || 12,
        o = 1 / i,
        r = n ? e + n * 6 + 1 : t.length,
        V = t[e],
        A = t[e + 1],
        c = e ? e / 6 * i : 0,
        d = t.samples,
        m = t.lookup,
        q = (e ? t.minLength : nu) || nu,
        v = d[c + n * i - 1],
        D = e ? d[c - 1] : 0,
        S, C, h, w, T, M, O, Q, u, J, se, te, ve, be, oe, Ie, Y;
    for (d.length = m.length = 0, C = e + 2; C < r; C += 6) {
        if (h = t[C + 4] - V, w = t[C + 2] - V, T = t[C] - V, Q = t[C + 5] - A, u = t[C + 3] - A, J = t[C + 1] - A, M = O = se = te = 0, pi(h) < 1e-5 && pi(Q) < 1e-5 && pi(T) + pi(J) < 1e-5) t.length > 8 && (t.splice(C, 6), C -= 6, r -= 6);
        else
            for (S = 1; S <= i; S++) be = o * S, ve = 1 - be, M = O - (O = (be * be * h + 3 * ve * (be * w + ve * T)) * be), se = te - (te = (be * be * Q + 3 * ve * (be * u + ve * J)) * be), Ie = es(se * se + M * M), Ie < q && (q = Ie), D += Ie, d[c++] = D;
        V += h, A += Q
    }
    if (v)
        for (v -= D; c < d.length; c++) d[c] += v;
    if (d.length && q)
        for (t.totalLength = Y = d[d.length - 1] || 0, t.minLength = q, Ie = oe = 0, S = 0; S < Y; S += q) m[Ie++] = d[oe] < S ? ++oe : oe;
    else t.totalLength = d[0] = 0;
    return e ? D - d[e / 2 - 1] : D
}

function ca(t, e) {
    var n, i, o;
    for (o = n = i = 0; o < t.length; o++) t[o].resolution = ~~e || 12, i += t[o].length, n += HS(t[o]);
    return t.totalPoints = i, t.totalLength = n, t
}

function iu(t, e, n) {
    if (n <= 0 || n >= 1) return 0;
    var i = t[e],
        o = t[e + 1],
        r = t[e + 2],
        V = t[e + 3],
        A = t[e + 4],
        c = t[e + 5],
        d = t[e + 6],
        m = t[e + 7],
        q = i + (r - i) * n,
        v = r + (A - r) * n,
        D = o + (V - o) * n,
        S = V + (c - V) * n,
        C = q + (v - q) * n,
        h = D + (S - D) * n,
        w = A + (d - A) * n,
        T = c + (m - c) * n;
    return v += (w - v) * n, S += (T - S) * n, t.splice(e + 2, 4, yt(q), yt(D), yt(C), yt(h), yt(C + (v - C) * n), yt(h + (S - h) * n), yt(v), yt(S), yt(w), yt(T)), t.samples && t.samples.splice(e / 6 * t.resolution | 0, 0, 0, 0, 0, 0, 0, 0), 6
}

function Tq(t, e, n, i) {
    n = n || {}, t.totalLength || ca(t), (e < 0 || e > 1) && (e = _y(e));
    var o = 0,
        r = t[0],
        V, A, c, d, m, q, v;
    if (!e) v = q = o = 0, r = t[0];
    else if (e === 1) v = 1, o = t.length - 1, r = t[o], q = r.length - 8;
    else {
        if (t.length > 1) {
            for (c = t.totalLength * e, m = q = 0;
                (m += t[q++].totalLength) < c;) o = q;
            r = t[o], d = m - r.totalLength, e = (c - d) / (m - d) || 0
        }
        V = r.samples, A = r.resolution, c = r.totalLength * e, q = r.lookup[~~(c / r.minLength)] || 0, d = q ? V[q - 1] : 0, m = V[q], m < c && (d = m, m = V[++q]), v = 1 / A * ((c - d) / (m - d) + q % A), q = ~~(q / A) * 6, i && v === 1 && (q + 6 < r.length ? (q += 6, v = 0) : o + 1 < t.length && (q = v = 0, r = t[++o]))
    }
    return n.t = v, n.i = q, n.path = t, n.segment = r, n.segIndex = o, n
}

function Eq(t, e, n, i) {
    var o = t[0],
        r = i || {},
        V, A, c, d, m, q, v, D, S;
    if ((e < 0 || e > 1) && (e = _y(e)), t.length > 1) {
        for (c = t.totalLength * e, m = q = 0;
            (m += t[q++].totalLength) < c;) o = t[q];
        d = m - o.totalLength, e = (c - d) / (m - d) || 0
    }
    return V = o.samples, A = o.resolution, c = o.totalLength * e, q = o.lookup[e < 1 ? ~~(c / o.minLength) : o.lookup.length - 1] || 0, d = q ? V[q - 1] : 0, m = V[q], m < c && (d = m, m = V[++q]), v = 1 / A * ((c - d) / (m - d) + q % A) || 0, S = 1 - v, q = ~~(q / A) * 6, D = o[q], r.x = yt((v * v * (o[q + 6] - D) + 3 * S * (v * (o[q + 4] - D) + S * (o[q + 2] - D))) * v + D), r.y = yt((v * v * (o[q + 7] - (D = o[q + 1])) + 3 * S * (v * (o[q + 5] - D) + S * (o[q + 3] - D))) * v + D), n && (r.angle = o.totalLength ? $y(o, q, v >= 1 ? 1 - 1e-9 : v || 1e-9) : o.angle || 0), r
}

function ea(t, e, n, i, o, r, V) {
    for (var A = t.length, c, d, m, q, v; --A > -1;)
        for (c = t[A], d = c.length, m = 0; m < d; m += 2) q = c[m], v = c[m + 1], c[m] = q * e + v * i + r, c[m + 1] = q * n + v * o + V;
    return t._dirty = 1, t
}

function NS(t, e, n, i, o, r, V, A, c) {
    if (!(t === A && e === c)) {
        n = pi(n), i = pi(i);
        var d = o % 360 * LS,
            m = bs(d),
            q = ys(d),
            v = Math.PI,
            D = v * 2,
            S = (t - A) / 2,
            C = (e - c) / 2,
            h = m * S + q * C,
            w = -q * S + m * C,
            T = h * h,
            M = w * w,
            O = T / (n * n) + M / (i * i);
        O > 1 && (n = es(O) * n, i = es(O) * i);
        var Q = n * n,
            u = i * i,
            J = (Q * u - Q * M - u * T) / (Q * M + u * T);
        J < 0 && (J = 0);
        var se = (r === V ? -1 : 1) * es(J),
            te = se * (n * w / i),
            ve = se * -(i * h / n),
            be = (t + A) / 2,
            oe = (e + c) / 2,
            Ie = be + (m * te - q * ve),
            Y = oe + (q * te + m * ve),
            re = (h - te) / n,
            ue = (w - ve) / i,
            fe = (-h - te) / n,
            qe = (-w - ve) / i,
            ge = re * re + ue * ue,
            Te = (ue < 0 ? -1 : 1) * Math.acos(re / es(ge)),
            Le = (re * qe - ue * fe < 0 ? -1 : 1) * Math.acos((re * fe + ue * qe) / es(ge * (fe * fe + qe * qe)));
        isNaN(Le) && (Le = v), !V && Le > 0 ? Le -= D : V && Le < 0 && (Le += D), Te %= D, Le %= D;
        var Ge = Math.ceil(pi(Le) / (D / 4)),
            Xe = [],
            nt = Le / Ge,
            Tt = 4 / 3 * ys(nt / 2) / (1 + bs(nt / 2)),
            Pt = m * n,
            U = q * n,
            g = q * -i,
            R = m * i,
            j;
        for (j = 0; j < Ge; j++) o = Te + j * nt, h = bs(o), w = ys(o), re = bs(o += nt), ue = ys(o), Xe.push(h - Tt * w, w + Tt * h, re + Tt * ue, ue - Tt * re, re, ue);
        for (j = 0; j < Xe.length; j += 2) h = Xe[j], w = Xe[j + 1], Xe[j] = h * Pt + w * g + Ie, Xe[j + 1] = h * U + w * R + Y;
        return Xe[j - 2] = A, Xe[j - 1] = c, Xe
    }
}

function Mi(t) {
    var e = (t + "").replace(TS, function(te) {
            var ve = +te;
            return ve < 1e-4 && ve > -1e-4 ? 0 : ve
        }).match(DS) || [],
        n = [],
        i = 0,
        o = 0,
        r = 2 / 3,
        V = e.length,
        A = 0,
        c = "ERROR: malformed path: " + t,
        d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J, se = function(ve, be, oe, Ie) {
            T = (oe - ve) / 3, M = (Ie - be) / 3, C.push(ve + T, be + M, oe - T, Ie - M, oe, Ie)
        };
    if (!t || !isNaN(e[0]) || isNaN(e[1])) return console.log(c), n;
    for (d = 0; d < V; d++)
        if (Q = D, isNaN(e[d]) ? (D = e[d].toUpperCase(), S = D !== e[d]) : d--, q = +e[d + 1], v = +e[d + 2], S && (q += i, v += o), d || (h = q, w = v), D === "M") C && (C.length < 8 ? n.length -= 1 : A += C.length), i = h = q, o = w = v, C = [q, v], n.push(C), d += 2, D = "L";
        else if (D === "C") C || (C = [0, 0]), S || (i = o = 0), C.push(q, v, i + e[d + 3] * 1, o + e[d + 4] * 1, i += e[d + 5] * 1, o += e[d + 6] * 1), d += 6;
    else if (D === "S") T = i, M = o, (Q === "C" || Q === "S") && (T += i - C[C.length - 4], M += o - C[C.length - 3]), S || (i = o = 0), C.push(T, M, q, v, i += e[d + 3] * 1, o += e[d + 4] * 1), d += 4;
    else if (D === "Q") T = i + (q - i) * r, M = o + (v - o) * r, S || (i = o = 0), i += e[d + 3] * 1, o += e[d + 4] * 1, C.push(T, M, i + (q - i) * r, o + (v - o) * r, i, o), d += 4;
    else if (D === "T") T = i - C[C.length - 4], M = o - C[C.length - 3], C.push(i + T, o + M, q + (i + T * 1.5 - q) * r, v + (o + M * 1.5 - v) * r, i = q, o = v), d += 2;
    else if (D === "H") se(i, o, i = q, o), d += 1;
    else if (D === "V") se(i, o, i, o = q + (S ? o - i : 0)), d += 1;
    else if (D === "L" || D === "Z") D === "Z" && (q = h, v = w, C.closed = !0), (D === "L" || pi(i - q) > .5 || pi(o - v) > .5) && (se(i, o, q, v), D === "L" && (d += 2)), i = q, o = v;
    else if (D === "A") {
        if (u = e[d + 4], J = e[d + 5], T = e[d + 6], M = e[d + 7], m = 7, u.length > 1 && (u.length < 3 ? (M = T, T = J, m--) : (M = J, T = u.substr(2), m -= 2), J = u.charAt(1), u = u.charAt(0)), O = NS(i, o, +e[d + 1], +e[d + 2], +e[d + 3], +u, +J, (S ? i : 0) + T * 1, (S ? o : 0) + M * 1), d += m, O)
            for (m = 0; m < O.length; m++) C.push(O[m]);
        i = C[C.length - 2], o = C[C.length - 1]
    } else console.log(c);
    return d = C.length, d < 6 ? (n.pop(), d = 0) : C[0] === C[d - 2] && C[1] === C[d - 1] && (C.closed = !0), n.totalPoints = A + d, n
}

function GS(t, e) {
    e === void 0 && (e = 1);
    for (var n = t[0], i = 0, o = [n, i], r = 2; r < t.length; r += 2) o.push(n, i, t[r], i = (t[r] - n) * e / 2, n = t[r], -i);
    return o
}

function su(t, e, n) {
    pi(t[0] - t[2]) < 1e-4 && pi(t[1] - t[3]) < 1e-4 && (t = t.slice(2));
    var i = t.length - 2,
        o = +t[0],
        r = +t[1],
        V = +t[2],
        A = +t[3],
        c = [o, r, o, r],
        d = V - o,
        m = A - r,
        q = Math.abs(t[i] - o) < .001 && Math.abs(t[i + 1] - r) < .001,
        v, D, S, C, h, w, T, M, O, Q, u, J, se, te;
    for (isNaN(n) && (n = Math.PI / 10), q && (t.push(V, A), V = o, A = r, o = t[i - 2], r = t[i - 1], t.unshift(o, r), i += 4), e = e || e === 0 ? +e : 1, h = 2; h < i; h += 2) v = o, D = r, o = V, r = A, V = +t[h + 2], A = +t[h + 3], !(o === V && r === A) && (w = d, M = m, d = V - o, m = A - r, T = V - v, O = A - D, J = w * w + M * M, se = d * d + m * m, te = T * T + O * O, S = Math.acos((J + se - te) / es(4 * J * se)), u = S / Math.PI * e, Q = es(J) * u, u *= es(se), (o !== v || r !== D) && (S > n ? (C = Ll(O, T), c.push(yt(o - bs(C) * Q), yt(r - ys(C) * Q), yt(o), yt(r), yt(o + bs(C) * u), yt(r + ys(C) * u))) : (C = Ll(M, w), c.push(yt(o - bs(C) * Q), yt(r - ys(C) * Q)), C = Ll(m, d), c.push(yt(o), yt(r), yt(o + bs(C) * u), yt(r + ys(C) * u)))));
    return o !== V || r !== A || c.length < 4 ? c.push(yt(V), yt(A), yt(V), yt(A)) : c.length -= 2, q && (c.splice(0, 6), c.length = c.length - 6), c
}

function Ds(t) {
    Zy(t[0]) && (t = [t]);
    var e = "",
        n = t.length,
        i, o, r, V;
    for (o = 0; o < n; o++) {
        for (V = t[o], e += "M" + yt(V[0]) + "," + yt(V[1]) + " C", i = V.length, r = 2; r < i; r++) e += yt(V[r++]) + "," + yt(V[r++]) + " " + yt(V[r++]) + "," + yt(V[r++]) + " " + yt(V[r++]) + "," + yt(V[r]) + " ";
        V.closed && (e += "z")
    }
    return e
}
/*!
 * MorphSVGPlugin 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var gi, a0, xr, t2, kr, n2 = function() {
        return gi || typeof window < "u" && (gi = window.gsap) && gi.registerPlugin && gi
    },
    vh = function(e) {
        return typeof e == "function"
    },
    ao = Math.atan2,
    Lq = Math.cos,
    Bq = Math.sin,
    ts = Math.sqrt,
    mA = Math.PI,
    Mq = mA * 2,
    XS = mA * .3,
    YS = mA * .7,
    i2 = 1e20,
    Xr = /[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi,
    KS = /(^[#\.][a-z]|[a-y][a-z])/i,
    WS = /[achlmqstvz]/i,
    vs = function(e) {
        return console && console.warn(e)
    },
    JS = 1,
    Oq = function(e) {
        var n = e.length,
            i = 0,
            o = 0,
            r;
        for (r = 0; r < n; r++) i += e[r++], o += e[r];
        return [i / (n / 2), o / (n / 2)]
    },
    da = function(e) {
        var n = e.length,
            i = e[0],
            o = i,
            r = e[1],
            V = r,
            A, c, d;
        for (d = 6; d < n; d += 6) A = e[d], c = e[d + 1], A > i ? i = A : A < o && (o = A), c > r ? r = c : c < V && (V = c);
        return e.centerX = (i + o) / 2, e.centerY = (r + V) / 2, e.size = (i - o) * (r - V)
    },
    Fr = function(e, n) {
        n === void 0 && (n = 3);
        for (var i = e.length, o = e[0][0], r = o, V = e[0][1], A = V, c = 1 / n, d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J, se; --i > -1;)
            for (D = e[i], d = D.length, v = 6; v < d; v += 6)
                for (w = D[v], T = D[v + 1], M = D[v + 2] - w, u = D[v + 3] - T, O = D[v + 4] - w, J = D[v + 5] - T, Q = D[v + 6] - w, se = D[v + 7] - T, S = n; --S > -1;) C = c * S, h = 1 - C, m = (C * C * Q + 3 * h * (C * O + h * M)) * C + w, q = (C * C * se + 3 * h * (C * J + h * u)) * C + T, m > o ? o = m : m < r && (r = m), q > V ? V = q : q < A && (A = q);
        return e.centerX = (o + r) / 2, e.centerY = (V + A) / 2, e.left = r, e.width = o - r, e.top = A, e.height = V - A, e.size = (o - r) * (V - A)
    },
    ZS = function(e, n) {
        return n.length - e.length
    },
    Iq = function(e, n) {
        var i = e.size || da(e),
            o = n.size || da(n);
        return Math.abs(o - i) < (i + o) / 20 ? n.centerX - e.centerX || n.centerY - e.centerY : o - i
    },
    Pq = function(e, n) {
        var i = e.slice(0),
            o = e.length,
            r = o - 2,
            V, A;
        for (n = n | 0, V = 0; V < o; V++) A = (V + n) % r, e[V++] = i[A], e[V] = i[A + 1]
    },
    wh = function(e, n, i, o, r) {
        var V = e.length,
            A = 0,
            c = V - 2,
            d, m, q, v;
        for (i *= 6, m = 0; m < V; m += 6) d = (m + i) % c, v = e[d] - (n[m] - o), q = e[d + 1] - (n[m + 1] - r), A += ts(q * q + v * v);
        return A
    },
    _S = function(e, n, i) {
        var o = e.length,
            r = Oq(e),
            V = Oq(n),
            A = V[0] - r[0],
            c = V[1] - r[1],
            d = wh(e, n, 0, A, c),
            m = 0,
            q, v, D;
        for (D = 6; D < o; D += 6) v = wh(e, n, D / 6, A, c), v < d && (d = v, m = D);
        if (i)
            for (q = e.slice(0), $o(q), D = 6; D < o; D += 6) v = wh(q, n, D / 6, A, c), v < d && (d = v, m = -D);
        return m / 6
    },
    $S = function(e, n, i) {
        for (var o = e.length, r = i2, V = 0, A = 0, c, d, m, q, v, D; --o > -1;)
            for (c = e[o], D = c.length, v = 0; v < D; v += 6) d = c[v] - n, m = c[v + 1] - i, q = ts(d * d + m * m), q < r && (r = q, V = c[v], A = c[v + 1]);
        return [V, A]
    },
    eT = function(e, n, i, o, r, V) {
        var A = n.length,
            c = 0,
            d = Math.min(e.size || da(e), n[i].size || da(n[i])) * o,
            m = i2,
            q = e.centerX + r,
            v = e.centerY + V,
            D, S, C, h, w;
        for (S = i; S < A && (D = n[S].size || da(n[S]), !(D < d)); S++) C = n[S].centerX - q, h = n[S].centerY - v, w = ts(C * C + h * h), w < m && (c = S, m = w);
        return w = n[c], n.splice(c, 1), w
    },
    xh = function(e, n) {
        var i = 0,
            o = .999999,
            r = e.length,
            V = n / ((r - 2) / 6),
            A, c, d, m, q, v, D, S, C, h, w, T, M, O;
        for (M = 2; M < r; M += 6)
            for (i += V; i > o;) A = e[M - 2], c = e[M - 1], d = e[M], m = e[M + 1], q = e[M + 2], v = e[M + 3], D = e[M + 4], S = e[M + 5], O = 1 / ((Math.floor(i) || 1) + 1), C = A + (d - A) * O, w = d + (q - d) * O, C += (w - C) * O, w += (q + (D - q) * O - w) * O, h = c + (m - c) * O, T = m + (v - m) * O, h += (T - h) * O, T += (v + (S - v) * O - T) * O, e.splice(M, 4, A + (d - A) * O, c + (m - c) * O, C, h, C + (w - C) * O, h + (T - h) * O, w, T, q + (D - q) * O, v + (S - v) * O), M += 6, r += 6, i--;
        return e
    },
    ou = function(e, n, i, o, r) {
        var V = n.length - e.length,
            A = V > 0 ? n : e,
            c = V > 0 ? e : n,
            d = 0,
            m = o === "complexity" ? ZS : Iq,
            q = o === "position" ? 0 : typeof o == "number" ? o : .8,
            v = c.length,
            D = typeof i == "object" && i.push ? i.slice(0) : [i],
            S = D[0] === "reverse" || D[0] < 0,
            C = i === "log",
            h, w, T, M, O, Q, u;
        if (!!c[0]) {
            if (A.length > 1 && (e.sort(m), n.sort(m), Q = A.size || Fr(A), Q = c.size || Fr(c), Q = A.centerX - c.centerX, u = A.centerY - c.centerY, m === Iq))
                for (v = 0; v < c.length; v++) A.splice(v, 0, eT(c[v], A, v, q, Q, u));
            if (V)
                for (V < 0 && (V = -V), A[0].length > c[0].length && xh(c[0], (A[0].length - c[0].length) / 6 | 0), v = c.length; d < V;) M = A[v].size || da(A[v]), T = $S(c, A[v].centerX, A[v].centerY), M = T[0], O = T[1], c[v++] = [M, O, M, O, M, O, M, O], c.totalPoints += 8, d++;
            for (v = 0; v < e.length; v++) h = n[v], w = e[v], V = h.length - w.length, V < 0 ? xh(h, -V / 6 | 0) : V > 0 && xh(w, V / 6 | 0), S && r !== !1 && !w.reversed && $o(w), i = D[v] || D[v] === 0 ? D[v] : "auto", i && (w.closed || Math.abs(w[0] - w[w.length - 2]) < .5 && Math.abs(w[1] - w[w.length - 1]) < .5 ? i === "auto" || i === "log" ? (D[v] = i = _S(w, h, !v || r === !1), i < 0 && (S = !0, $o(w), i = -i), Pq(w, i * 6)) : i !== "reverse" && (v && i < 0 && $o(w), Pq(w, (i < 0 ? -i : i) * 6)) : !S && (i === "auto" && Math.abs(h[0] - w[0]) + Math.abs(h[1] - w[1]) + Math.abs(h[h.length - 2] - w[w.length - 2]) + Math.abs(h[h.length - 1] - w[w.length - 1]) > Math.abs(h[0] - w[w.length - 2]) + Math.abs(h[1] - w[w.length - 1]) + Math.abs(h[h.length - 2] - w[0]) + Math.abs(h[h.length - 1] - w[1]) || i % 2) ? ($o(w), D[v] = -1, S = !0) : i === "auto" ? D[v] = 0 : i === "reverse" && (D[v] = -1), w.closed !== h.closed && (w.closed = h.closed = !1));
            return C && vs("shapeIndex:[" + D.join(",") + "]"), e.shapeIndex = D, D
        }
    },
    Uq = function(e, n, i, o, r) {
        var V = Mi(e[0]),
            A = Mi(e[1]);
        !ou(V, A, n || n === 0 ? n : "auto", i, r) || (e[0] = Ds(V), e[1] = Ds(A), (o === "log" || o === !0) && vs('precompile:["' + e[0] + '","' + e[1] + '"]'))
    },
    tT = function(e, n) {
        if (!n) return e;
        var i = e.match(Xr) || [],
            o = i.length,
            r = "",
            V, A, c;
        for (n === "reverse" ? (A = o - 1, V = -2) : (A = ((parseInt(n, 10) || 0) * 2 + 1 + o * 100) % o, V = 2), c = 0; c < o; c += 2) r += i[A - 1] + "," + i[A] + " ", A = (A + V) % o;
        return r
    },
    Fq = function(e, n) {
        var i = 0,
            o = parseFloat(e[0]),
            r = parseFloat(e[1]),
            V = o + "," + r + " ",
            A = .999999,
            c, d, m, q, v, D, S;
        for (m = e.length, c = n * .5 / (m * .5 - 1), d = 0; d < m - 2; d += 2) {
            if (i += c, D = parseFloat(e[d + 2]), S = parseFloat(e[d + 3]), i > A)
                for (v = 1 / (Math.floor(i) + 1), q = 1; i > A;) V += (o + (D - o) * v * q).toFixed(2) + "," + (r + (S - r) * v * q).toFixed(2) + " ", i--, q++;
            V += D + "," + S + " ", o = D, r = S
        }
        return V
    },
    au = function(e) {
        var n = e[0].match(Xr) || [],
            i = e[1].match(Xr) || [],
            o = i.length - n.length;
        o > 0 ? e[0] = Fq(n, o) : e[1] = Fq(i, -o)
    },
    nT = function(e) {
        return isNaN(e) ? au : function(n) {
            au(n), n[1] = tT(n[1], parseInt(e, 10))
        }
    },
    iT = function(e, n, i) {
        var o = typeof e == "string",
            r, V;
        return (!o || KS.test(e) || (e.match(Xr) || []).length < 3) && (r = a0(e)[0], r ? (V = (r.nodeName + "").toUpperCase(), n && V !== "PATH" && (r = o0(r, !1), V = "PATH"), e = r.getAttribute(V === "PATH" ? "d" : "points") || "", r === i && (e = r.getAttributeNS(null, "data-original") || e)) : (vs("WARNING: invalid morph to: " + e), e = !1)), e
    },
    jq = function(e, n) {
        for (var i = e.length, o = .2 * (n || 1), r, V, A, c, d, m, q, v, D, S, C, h; --i > -1;) {
            for (V = e[i], C = V.isSmooth = V.isSmooth || [0, 0, 0, 0], h = V.smoothData = V.smoothData || [0, 0, 0, 0], C.length = 4, v = V.length - 2, q = 6; q < v; q += 6) A = V[q] - V[q - 2], c = V[q + 1] - V[q - 1], d = V[q + 2] - V[q], m = V[q + 3] - V[q + 1], D = ao(c, A), S = ao(m, d), r = Math.abs(D - S) < o, r && (h[q - 2] = D, h[q + 2] = S, h[q - 1] = ts(A * A + c * c), h[q + 3] = ts(d * d + m * m)), C.push(r, r, 0, 0, r, r);
            V[v] === V[0] && V[v + 1] === V[1] && (A = V[0] - V[v - 2], c = V[1] - V[v - 1], d = V[2] - V[0], m = V[3] - V[1], D = ao(c, A), S = ao(m, d), Math.abs(D - S) < o && (h[v - 2] = D, h[2] = S, h[v - 1] = ts(A * A + c * c), h[3] = ts(d * d + m * m), C[v - 2] = C[v - 1] = !0))
        }
        return e
    },
    Qq = function(e) {
        var n = e.trim().split(" "),
            i = ~e.indexOf("left") ? 0 : ~e.indexOf("right") ? 100 : isNaN(parseFloat(n[0])) ? 50 : parseFloat(n[0]),
            o = ~e.indexOf("top") ? 0 : ~e.indexOf("bottom") ? 100 : isNaN(parseFloat(n[1])) ? 50 : parseFloat(n[1]);
        return {
            x: i / 100,
            y: o / 100
        }
    },
    sT = function(e) {
        return e !== e % mA ? e + (e < 0 ? Mq : -Mq) : e
    },
    zq = "Use MorphSVGPlugin.convertToPath() to convert to a path before morphing.",
    oT = function(e, n, i, o) {
        var r = this._origin,
            V = this._eOrigin,
            A = e[i] - r.x,
            c = e[i + 1] - r.y,
            d = ts(A * A + c * c),
            m = ao(c, A),
            q, v;
        return A = n[i] - V.x, c = n[i + 1] - V.y, q = ao(c, A) - m, v = sT(q), !o && xr && Math.abs(v + xr.ca) < XS && (o = xr), this._anchorPT = xr = {
            _next: this._anchorPT,
            t: e,
            sa: m,
            ca: o && v * o.ca < 0 && Math.abs(v) > YS ? q : v,
            sl: d,
            cl: ts(A * A + c * c) - d,
            i
        }
    },
    Hq = function(e) {
        gi = n2(), kr = kr || gi && gi.plugins.morphSVG, gi && kr ? (a0 = gi.utils.toArray, kr.prototype._tweenRotation = oT, t2 = 1) : e && vs("Please gsap.registerPlugin(MorphSVGPlugin)")
    },
    ta = {
        version: "3.7.0",
        name: "morphSVG",
        rawVars: 1,
        register: function(e, n) {
            gi = e, kr = n, Hq()
        },
        init: function(e, n, i, o, r) {
            if (t2 || Hq(1), !n) return vs("invalid shape"), !1;
            vh(n) && (n = n.call(i, o, e, r));
            var V, A, c, d, m, q, v, D, S, C, h, w, T, M, O, Q, u, J, se, te, ve, be;
            if (typeof n == "string" || n.getBBox || n[0]) n = {
                shape: n
            };
            else if (typeof n == "object") {
                V = {};
                for (A in n) V[A] = vh(n[A]) && A !== "render" ? n[A].call(i, o, e, r) : n[A];
                n = V
            }
            var oe = e.nodeType ? window.getComputedStyle(e) : {},
                Ie = oe.fill + "",
                Y = !(Ie === "none" || (Ie.match(Xr) || [])[3] === "0" || oe.fillRule === "evenodd"),
                re = (n.origin || "50 50").split(",");
            if (V = (e.nodeName + "").toUpperCase(), m = V === "POLYLINE" || V === "POLYGON", V !== "PATH" && !m && !n.prop) return vs("Cannot morph a <" + V + "> element. " + zq), !1;
            if (A = V === "PATH" ? "d" : "points", !n.prop && !vh(e.setAttribute)) return !1;
            if (d = iT(n.shape || n.d || n.points || "", A === "d", e), m && WS.test(d)) return vs("A <" + V + "> cannot accept path data. " + zq), !1;
            if (q = n.shapeIndex || n.shapeIndex === 0 ? n.shapeIndex : "auto", v = n.map || ta.defaultMap, this._prop = n.prop, this._render = n.render || ta.defaultRender, this._apply = "updateTarget" in n ? n.updateTarget : ta.defaultUpdateTarget, this._rnd = Math.pow(10, isNaN(n.precision) ? 2 : +n.precision), this._tween = i, d) {
                if (this._target = e, u = typeof n.precompile == "object", C = this._prop ? e[this._prop] : e.getAttribute(A), !this._prop && !e.getAttributeNS(null, "data-original") && e.setAttributeNS(null, "data-original", C), A === "d" || this._prop) {
                    if (C = Mi(u ? n.precompile[0] : C), h = Mi(u ? n.precompile[1] : d), !u && !ou(C, h, q, v, Y)) return !1;
                    for ((n.precompile === "log" || n.precompile === !0) && vs('precompile:["' + Ds(C) + '","' + Ds(h) + '"]'), ve = (n.type || ta.defaultType) !== "linear", ve && (C = jq(C, n.smoothTolerance), h = jq(h, n.smoothTolerance), C.size || Fr(C), h.size || Fr(h), te = Qq(re[0]), this._origin = C.origin = {
                            x: C.left + te.x * C.width,
                            y: C.top + te.y * C.height
                        }, re[1] && (te = Qq(re[1])), this._eOrigin = {
                            x: h.left + te.x * h.width,
                            y: h.top + te.y * h.height
                        }), this._rawPath = e._gsRawPath = C, T = C.length; --T > -1;)
                        for (O = C[T], Q = h[T], D = O.isSmooth || [], S = Q.isSmooth || [], M = O.length, xr = 0, w = 0; w < M; w += 2)(Q[w] !== O[w] || Q[w + 1] !== O[w + 1]) && (ve ? D[w] && S[w] ? (J = O.smoothData, se = Q.smoothData, be = w + (w === M - 4 ? 7 - M : 5), this._controlPT = {
                            _next: this._controlPT,
                            i: w,
                            j: T,
                            l1s: J[w + 1],
                            l1c: se[w + 1] - J[w + 1],
                            l2s: J[be],
                            l2c: se[be] - J[be]
                        }, c = this._tweenRotation(O, Q, w + 2), this._tweenRotation(O, Q, w, c), this._tweenRotation(O, Q, be - 1, c), w += 4) : this._tweenRotation(O, Q, w) : (c = this.add(O, w, O[w], Q[w]), c = this.add(O, w + 1, O[w + 1], Q[w + 1]) || c))
                } else c = this.add(e, "setAttribute", e.getAttribute(A) + "", d + "", o, r, 0, nT(q), A);
                ve && (this.add(this._origin, "x", this._origin.x, this._eOrigin.x), c = this.add(this._origin, "y", this._origin.y, this._eOrigin.y)), c && (this._props.push("morphSVG"), c.end = d, c.endProp = A)
            }
            return JS
        },
        render: function(e, n) {
            for (var i = n._rawPath, o = n._controlPT, r = n._anchorPT, V = n._rnd, A = n._target, c = n._pt, d, m, q, v, D, S, C, h, w, T, M, O, Q; c;) c.r(e, c.d), c = c._next;
            if (e === 1 && n._apply)
                for (c = n._pt; c;) c.end && (n._prop ? A[n._prop] = c.end : A.setAttribute(c.endProp, c.end)), c = c._next;
            else if (i) {
                for (; r;) S = r.sa + e * r.ca, D = r.sl + e * r.cl, r.t[r.i] = n._origin.x + Lq(S) * D, r.t[r.i + 1] = n._origin.y + Bq(S) * D, r = r._next;
                for (q = e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1; o;) C = o.i, v = i[o.j], Q = C + (C === v.length - 4 ? 7 - v.length : 5), S = ao(v[Q] - v[C + 1], v[Q - 1] - v[C]), M = Bq(S), O = Lq(S), w = v[C + 2], T = v[C + 3], D = o.l1s + q * o.l1c, v[C] = w - O * D, v[C + 1] = T - M * D, D = o.l2s + q * o.l2c, v[Q - 1] = w + O * D, v[Q] = T + M * D, o = o._next;
                if (A._gsRawPath = i, n._apply) {
                    for (d = "", m = " ", h = 0; h < i.length; h++)
                        for (v = i[h], D = v.length, d += "M" + (v[0] * V | 0) / V + m + (v[1] * V | 0) / V + " C", C = 2; C < D; C++) d += (v[C] * V | 0) / V + m;
                    n._prop ? A[n._prop] = d : A.setAttribute("d", d)
                }
            }
            n._render && i && n._render.call(n._tween, i, A)
        },
        kill: function(e) {
            this._pt = this._rawPath = 0
        },
        getRawPath: Ur,
        stringToRawPath: Mi,
        rawPathToString: Ds,
        normalizeStrings: function(e, n, i) {
            var o = i.shapeIndex,
                r = i.map,
                V = [e, n];
            return Uq(V, o, r), V
        },
        pathFilter: Uq,
        pointsFilter: au,
        getTotalSize: Fr,
        equalizeSegmentQuantity: ou,
        convertToPath: function(e, n) {
            return a0(e).map(function(i) {
                return o0(i, n !== !1)
            })
        },
        defaultType: "linear",
        defaultUpdateTarget: !0,
        defaultMap: "size"
    };
n2() && gi.registerPlugin(ta);
s.registerPlugin(ta);
const aT = `
    <div class="line-wrapper">
        <div class="div-line ver0"></div>
        <div class="div-line ver1"></div>
        <div class="div-line ver2"></div>
        <div class="div-line center"></div>
        <div class="div-line hor0"></div>
        <div class="div-line hor1"></div>
        <svg version="1.1" viewBox="0 0 500 100" overflow="visible">
            <path class="line" d="M500.82,61c0,0-204.58,0-238.04,0S0.82,61,0.82,61"/>
        </svg>
    </div>
    <div class="name"></div>
`,
    rT = je.View.extend({
        className: "gizmo gizmo-eq",
        template: ke.template(aT),
        model: new ze.Model,
        paths: [{
            name: "FLAT",
            path: "M500.82,61c0,0-204.58,0-238.04,0S0.82,61,0.82,61"
        }, {
            name: "HI-BOOST",
            path: "M0.32,137.5c13-11,43-40,88-40s59,36,95,36s110-126,317-126"
        }, {
            name: "LO-BOOST",
            path: "M0.32,4.5c109,0,165,100,283,100s104-63,217-63"
        }, {
            name: "MID-BOOST",
            path: "M0.32,75.5c131,0,153-68,279-68s116,68,221,68"
        }, {
            name: "SPOKEN",
            path: "M0.32,54.5c64,0,65,29,136,29c42,0,121-69,209-69s78,35,155,35"
        }, {
            name: "HI-PASS",
            path: "M0,0.5c0,0,252,0,274,0s226,9,226,96"
        }],
        bindings: {
            ".name": {
                observe: "value",
                onGet(t) {
                    return this.paths[t].name
                }
            }
        },
        events: {
            click: "onClick"
        },
        initialize() {
            this.listenTo(this.model, "change:value", this.onValueChange)
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        onAttach() {
            this.updateLine(this.model.get("value"), 0)
        },
        intro() {
            let t = 0;
            const e = this.model.get("value"),
                n = setInterval(() => {
                    if (t >= 3) {
                        this.model.set({
                            value: e
                        }), clearInterval(n);
                        return
                    }
                    this.model.set({
                        value: ke.random(0, 5)
                    }), t += 1
                }, 250)
        },
        updateLine(t, e) {
            const n = this.$el.find(".line");
            s.to(n[0], {
                duration: e,
                morphSVG: this.paths[t].path
            })
        },
        onValueChange(t, e) {
            this.updateLine(e, .25)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 5 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    VT = `<div class="lights-wrapper">
    <svg version="1.1" viewBox="0 0 230 200">

        <g class="light light-0">
            <path class="on-border" d="M108.4,59.54H0V0h108.4V59.54z M4.58,54.96h99.24V4.58H4.58V54.96z" />
            <g class="off-border">
                <polygon points="107.63,58.78 103.05,58.78 103.05,55.73 104.58,55.73 104.58,54.2 107.63,54.2 	" />
                <path d="M97.31,58.78h-5.75v-3.05h5.75V58.78z M85.81,58.78h-5.75v-3.05h5.75V58.78z M74.32,58.78h-5.75v-3.05h5.75V58.78z
                    M62.82,58.78h-5.75v-3.05h5.75V58.78z M51.32,58.78h-5.75v-3.05h5.75V58.78z M39.83,58.78h-5.75v-3.05h5.75V58.78z M28.33,58.78
                    h-5.75v-3.05h5.75V58.78z M16.84,58.78h-5.75v-3.05h5.75V58.78z" />
                <polygon points="5.34,58.78 0.76,58.78 0.76,54.2 3.82,54.2 3.82,55.73 5.34,55.73 	" />
                <path d="M3.82,48.77H0.76v-5.43h3.05V48.77z M3.82,37.91H0.76v-5.43h3.05V37.91z M3.82,27.06H0.76v-5.43h3.05V27.06z M3.82,16.2
                    H0.76v-5.43h3.05V16.2z" />
                <polygon points="3.82,5.34 0.76,5.34 0.76,0.76 5.34,0.76 5.34,3.82 3.82,3.82 	" />
                <path d="M97.31,3.82h-5.75V0.76h5.75V3.82z M85.81,3.82h-5.75V0.76h5.75V3.82z M74.31,3.82h-5.75V0.76h5.75V3.82z M62.82,3.82
                    h-5.75V0.76h5.75V3.82z M51.32,3.82h-5.75V0.76h5.75V3.82z M39.83,3.82h-5.75V0.76h5.75V3.82z M28.33,3.82h-5.75V0.76h5.75V3.82z
                    M16.84,3.82h-5.75V0.76h5.75V3.82z" />
                <polygon points="107.63,5.34 104.58,5.34 104.58,3.82 103.05,3.82 103.05,0.76 107.63,0.76 	" />
                <path d="M107.63,48.77h-3.05v-5.43h3.05V48.77z M107.63,37.91h-3.05v-5.43h3.05V37.91z M107.63,27.06h-3.05v-5.43h3.05V27.06z
                    M107.63,16.2h-3.05v-5.43h3.05V16.2z" />
            </g>
            <g class="text">
                <path d="M11.99,45v-8.18c1.37,1.4,2.84,2.47,4.39,3.21c1.56,0.73,3.12,1.1,4.7,1.1c1.85,0,3.21-0.46,4.07-1.39
		c0.86-0.92,1.29-2.4,1.29-4.43V17.27H17.8v-6.22h15.7v24.26c0,4.35-0.91,7.47-2.74,9.34c-1.83,1.87-4.84,2.81-9.03,2.81
		c-1.52,0-3.1-0.21-4.75-0.62C15.33,46.42,13.66,45.81,11.99,45z" />
                <path d="M42.12,11h11.51c3.97,0,6.96,0.75,8.96,2.26c2,1.51,3,3.76,3,6.76c0,2.3-0.59,4.09-1.77,5.38
		c-1.18,1.29-2.91,2.04-5.19,2.25c2.73,0.27,4.78,1.19,6.16,2.75c1.38,1.56,2.07,3.75,2.07,6.56c0,3.45-1.04,5.94-3.11,7.49
		c-2.07,1.55-5.45,2.32-10.12,2.32H42.12V11z M48.94,16.62v8.3h4.69c1.79,0,3.06-0.32,3.82-0.96c0.76-0.64,1.14-1.69,1.14-3.16
		c0-1.47-0.39-2.53-1.16-3.19c-0.77-0.66-2.04-0.99-3.79-0.99H48.94z M48.94,30.55v10.58h4.69c2.25,0,3.82-0.38,4.73-1.15
		c0.9-0.77,1.35-2.1,1.35-4c0-1.93-0.47-3.32-1.41-4.16c-0.94-0.85-2.5-1.27-4.67-1.27H48.94z" />
                <path d="M89.74,40.31v-6.82h-4.83v-5.93h11.01v16.37c-1.36,1.16-2.85,2.05-4.49,2.64c-1.63,0.6-3.39,0.9-5.25,0.9
		c-4.63,0-8.2-1.61-10.72-4.82c-2.52-3.21-3.78-7.78-3.78-13.7c0-6.01,1.27-10.61,3.82-13.78c2.54-3.17,6.22-4.76,11.02-4.76
		c1.44,0,2.85,0.2,4.23,0.61c1.39,0.41,2.69,0.99,3.9,1.76v7.82c-0.99-1.28-2.13-2.24-3.41-2.88c-1.28-0.65-2.69-0.97-4.22-0.97
		c-2.68,0-4.68,1.01-6.01,3.03c-1.32,2.02-1.99,5.08-1.99,9.18c0,3.97,0.64,6.99,1.91,9.07c1.28,2.07,3.13,3.11,5.57,3.11
		c0.73,0,1.37-0.07,1.91-0.2C88.97,40.78,89.41,40.58,89.74,40.31z" />
            </g>
        </g>

        <g class="light light-2">
            <path class="on-border" d="M108.4,129.77H0V70.23h108.4V129.77z M4.58,125.19h99.24V74.81H4.58V125.19z" />
            <g class="off-border">
                <polygon
                    points="107.63,129.01 103.05,129.01 103.05,125.95 104.58,125.95 104.58,124.43 107.63,124.43 	" />
                <path d="M97.31,129.01h-5.75v-3.05h5.75V129.01z M85.81,129.01h-5.75v-3.05h5.75V129.01z M74.32,129.01h-5.75v-3.05h5.75V129.01z
                    M62.82,129.01h-5.75v-3.05h5.75V129.01z M51.32,129.01h-5.75v-3.05h5.75V129.01z M39.83,129.01h-5.75v-3.05h5.75V129.01z
                    M28.33,129.01h-5.75v-3.05h5.75V129.01z M16.84,129.01h-5.75v-3.05h5.75V129.01z" />
                <polygon points="5.34,129.01 0.76,129.01 0.76,124.43 3.82,124.43 3.82,125.95 5.34,125.95 	" />
                <path d="M3.82,119H0.76v-5.43h3.05V119z M3.82,108.14H0.76v-5.43h3.05V108.14z M3.82,97.29H0.76v-5.43h3.05V97.29z M3.82,86.43
                    H0.76V81h3.05V86.43z" />
                <polygon points="3.82,75.57 0.76,75.57 0.76,70.99 5.34,70.99 5.34,74.05 3.82,74.05 	" />
                <path d="M97.31,74.05h-5.75v-3.05h5.75V74.05z M85.81,74.05h-5.75v-3.05h5.75V74.05z M74.31,74.05h-5.75v-3.05h5.75V74.05z
                    M62.82,74.05h-5.75v-3.05h5.75V74.05z M51.32,74.05h-5.75v-3.05h5.75V74.05z M39.83,74.05h-5.75v-3.05h5.75V74.05z M28.33,74.05
                    h-5.75v-3.05h5.75V74.05z M16.84,74.05h-5.75v-3.05h5.75V74.05z" />
                <polygon points="107.63,75.57 104.58,75.57 104.58,74.05 103.05,74.05 103.05,70.99 107.63,70.99 	" />
                <path d="M107.63,119h-3.05v-5.43h3.05V119z M107.63,108.14h-3.05v-5.43h3.05V108.14z M107.63,97.29h-3.05v-5.43h3.05V97.29z
                    M107.63,86.43h-3.05V81h3.05V86.43z" />
            </g>
            <g class="text">
                <path d="M12.66,81.72h7.56c5.84,0,10.04,1.39,12.61,4.18c2.57,2.78,3.85,7.33,3.85,13.65c0,6.33-1.28,10.9-3.85,13.7
		c-2.57,2.8-6.77,4.2-12.61,4.2h-7.56V81.72z M19.72,88.09v22.99h1.91c2.78,0,4.75-0.87,5.93-2.62c1.18-1.75,1.77-4.72,1.77-8.91
		c0-4.16-0.59-7.11-1.77-8.85c-1.18-1.74-3.16-2.61-5.93-2.61H19.72z" />
                <path d="M56.41,117.45h-7.06V87.9h-9.07v-6.17h25.19v6.17h-9.07V117.45z" />
                <path d="M72.16,81.72h7.56c5.84,0,10.04,1.39,12.61,4.18c2.57,2.78,3.85,7.33,3.85,13.65c0,6.33-1.28,10.9-3.85,13.7
		c-2.57,2.8-6.77,4.2-12.61,4.2h-7.56V81.72z M79.21,88.09v22.99h1.91c2.78,0,4.75-0.87,5.93-2.62c1.18-1.75,1.77-4.72,1.77-8.91
		c0-4.16-0.59-7.11-1.77-8.85c-1.18-1.74-3.16-2.61-5.93-2.61H79.21z" />
            </g>
        </g>

        <g class="light light-4">
            <path class="on-border" d="M108.4,200H0v-59.54h108.4V200z M4.58,195.42h99.24v-50.38H4.58V195.42z" />
            <g class="off-border">
                <polygon
                    points="107.63,199.24 103.05,199.24 103.05,196.18 104.58,196.18 104.58,194.66 107.63,194.66 	" />
                <path d="M97.31,199.24h-5.75v-3.05h5.75V199.24z M85.81,199.24h-5.75v-3.05h5.75V199.24z M74.32,199.24h-5.75v-3.05h5.75V199.24z
                    M62.82,199.24h-5.75v-3.05h5.75V199.24z M51.32,199.24h-5.75v-3.05h5.75V199.24z M39.83,199.24h-5.75v-3.05h5.75V199.24z
                    M28.33,199.24h-5.75v-3.05h5.75V199.24z M16.84,199.24h-5.75v-3.05h5.75V199.24z" />
                <polygon points="5.34,199.24 0.76,199.24 0.76,194.66 3.82,194.66 3.82,196.18 5.34,196.18 	" />
                <path d="M3.82,189.23H0.76v-5.43h3.05V189.23z M3.82,178.37H0.76v-5.43h3.05V178.37z M3.82,167.51H0.76v-5.43h3.05V167.51z
                    M3.82,156.66H0.76v-5.43h3.05V156.66z" />
                <polygon points="3.82,145.8 0.76,145.8 0.76,141.22 5.34,141.22 5.34,144.27 3.82,144.27 	" />
                <path d="M97.31,144.27h-5.75v-3.05h5.75V144.27z M85.81,144.27h-5.75v-3.05h5.75V144.27z M74.31,144.27h-5.75v-3.05h5.75V144.27z
                    M62.82,144.27h-5.75v-3.05h5.75V144.27z M51.32,144.27h-5.75v-3.05h5.75V144.27z M39.83,144.27h-5.75v-3.05h5.75V144.27z
                    M28.33,144.27h-5.75v-3.05h5.75V144.27z M16.84,144.27h-5.75v-3.05h5.75V144.27z" />
                <polygon points="107.63,145.8 104.58,145.8 104.58,144.27 103.05,144.27 103.05,141.22 107.63,141.22 	" />
                <path d="M107.63,189.23h-3.05v-5.43h3.05V189.23z M107.63,178.37h-3.05v-5.43h3.05V178.37z M107.63,167.52h-3.05v-5.43h3.05V167.52
                    z M107.63,156.66h-3.05v-5.43h3.05V156.66z" />
            </g>
            <g class="text">
                <path d="M27.66,188.12H20.6v-29.55h-9.07v-6.17h25.19v6.17h-9.07V188.12z" />
                <path d="M43.01,152.4h9.69c4.93,0,8.47,0.88,10.64,2.63c2.16,1.75,3.24,4.6,3.24,8.54s-1.08,6.79-3.24,8.54
		c-2.16,1.75-5.71,2.63-10.64,2.63h-2.63v13.38h-7.06V152.4z M50.06,158.33v10.48h2.9c2.31,0,3.94-0.39,4.87-1.17
		c0.93-0.78,1.4-2.14,1.4-4.07s-0.47-3.29-1.4-4.07c-0.93-0.78-2.56-1.17-4.87-1.17H50.06z" />
                <path d="M86.46,156.6v10.29h10.29v5.69H86.46v10.34h-5.67v-10.34H70.46v-5.69h10.34V156.6H86.46z" />
            </g>
        </g>

        <g class="light light-1">
            <path class="on-border" d="M230,59.54H121.6V0H230V59.54z M126.18,54.96h99.24V4.58h-99.24V54.96z" />
            <g class="off-border">
                <polygon points="229.24,58.78 224.66,58.78 224.66,55.73 226.18,55.73 226.18,54.2 229.24,54.2 	" />
                <path d="M218.91,58.78h-5.75v-3.05h5.75V58.78z M207.41,58.78h-5.75v-3.05h5.75V58.78z M195.92,58.78h-5.75v-3.05h5.75V58.78z
                M184.42,58.78h-5.75v-3.05h5.75V58.78z M172.93,58.78h-5.75v-3.05h5.75V58.78z M161.43,58.78h-5.75v-3.05h5.75V58.78z
                M149.94,58.78h-5.75v-3.05h5.75V58.78z M138.44,58.78h-5.75v-3.05h5.75V58.78z" />
                <polygon points="126.95,58.78 122.37,58.78 122.37,54.2 125.42,54.2 125.42,55.73 126.95,55.73 	" />
                <path d="M125.42,48.77h-3.05v-5.43h3.05V48.77z M125.42,37.91h-3.05v-5.43h3.05V37.91z M125.42,27.06h-3.05v-5.43h3.05V27.06z
                M125.42,16.2h-3.05v-5.43h3.05V16.2z" />
                <polygon points="125.42,5.34 122.37,5.34 122.37,0.76 126.95,0.76 126.95,3.82 125.42,3.82 	" />
                <path d="M218.91,3.82h-5.75V0.76h5.75V3.82z M207.41,3.82h-5.75V0.76h5.75V3.82z M195.92,3.82h-5.75V0.76h5.75V3.82z M184.42,3.82
                h-5.75V0.76h5.75V3.82z M172.93,3.82h-5.75V0.76h5.75V3.82z M161.43,3.82h-5.75V0.76h5.75V3.82z M149.94,3.82h-5.75V0.76h5.75V3.82
                z M138.44,3.82h-5.75V0.76h5.75V3.82z" />
                <polygon points="229.24,5.34 226.18,5.34 226.18,3.82 224.66,3.82 224.66,0.76 229.24,0.76 	" />
                <path d="M229.24,48.77h-3.05v-5.43h3.05V48.77z M229.24,37.91h-3.05v-5.43h3.05V37.91z M229.24,27.06h-3.05v-5.43h3.05V27.06z
                M229.24,16.2h-3.05v-5.43h3.05V16.2z" />
            </g>
            <g class="text">
                <path d="M147,47.32c-0.22,0.05-0.41,0.08-0.56,0.11c-0.15,0.02-0.3,0.04-0.44,0.04c-4.1,0-7.21-1.56-9.32-4.69
		c-2.11-3.13-3.17-7.74-3.17-13.83c0-6.11,1.06-10.73,3.17-13.85c2.11-3.13,5.24-4.69,9.37-4.69c4.15,0,7.28,1.56,9.39,4.69
		c2.11,3.13,3.17,7.74,3.17,13.85c0,4.2-0.5,7.71-1.51,10.54c-1,2.83-2.46,4.85-4.38,6.06l4.45,4.35l-4.83,3.59L147,47.32z
		 M146.04,16.74c-1.8,0-3.12,0.96-3.95,2.88c-0.83,1.92-1.24,5.03-1.24,9.32c0,4.27,0.41,7.37,1.24,9.3
		c0.83,1.92,2.15,2.88,3.95,2.88c1.82,0,3.14-0.96,3.97-2.88c0.83-1.92,1.24-5.02,1.24-9.3c0-4.29-0.42-7.4-1.24-9.32
		C149.18,17.7,147.86,16.74,146.04,16.74z" />
                <path d="M166.43,46.77V11.05h7.06v29.5h15.1v6.22H166.43z" />
                <path d="M203.94,30.78h-3.78v-6.22h3.78c1.75,0,3.11-0.35,4.08-1.04c0.96-0.69,1.45-1.67,1.45-2.93c0-1.32-0.48-2.36-1.45-3.1
		c-0.97-0.74-2.33-1.11-4.08-1.11c-1.34,0-2.78,0.17-4.31,0.5s-3.12,0.82-4.76,1.46v-6.41c1.64-0.49,3.26-0.87,4.86-1.14
		c1.59-0.26,3.13-0.39,4.59-0.39c3.76,0,6.7,0.82,8.8,2.46c2.11,1.64,3.16,3.91,3.16,6.79c0,2.12-0.61,3.86-1.82,5.2
		c-1.21,1.35-2.94,2.23-5.19,2.64c2.55,0.45,4.5,1.46,5.84,3.05c1.34,1.59,2.01,3.67,2.01,6.26c0,3.46-1.11,6.1-3.33,7.92
		c-2.22,1.82-5.44,2.73-9.67,2.73c-1.8,0-3.58-0.15-5.32-0.45c-1.75-0.3-3.42-0.74-5.01-1.32v-6.56c1.5,0.75,3.12,1.32,4.86,1.71
		c1.74,0.39,3.56,0.59,5.48,0.59s3.43-0.44,4.55-1.33c1.12-0.89,1.67-2.08,1.67-3.58c0-1.83-0.56-3.25-1.67-4.25
		C207.56,31.28,205.98,30.78,203.94,30.78z" />
            </g>
        </g>

        <g class="light light-3">
            <path class="on-border" d="M230,129.77H121.6V70.23H230V129.77z M126.18,125.19h99.24V74.81h-99.24V125.19z" />
            <g class="off-border">
                <polygon
                    points="229.24,129.01 224.66,129.01 224.66,125.95 226.18,125.95 226.18,124.43 229.24,124.43 	" />
                <path d="M218.91,129.01h-5.75v-3.05h5.75V129.01z M207.41,129.01h-5.75v-3.05h5.75V129.01z M195.92,129.01h-5.75v-3.05h5.75V129.01
                z M184.42,129.01h-5.75v-3.05h5.75V129.01z M172.93,129.01h-5.75v-3.05h5.75V129.01z M161.43,129.01h-5.75v-3.05h5.75V129.01z
                M149.94,129.01h-5.75v-3.05h5.75V129.01z M138.44,129.01h-5.75v-3.05h5.75V129.01z" />
                <polygon
                    points="126.95,129.01 122.37,129.01 122.37,124.43 125.42,124.43 125.42,125.95 126.95,125.95 	" />
                <path d="M125.42,119h-3.05v-5.43h3.05V119z M125.42,108.14h-3.05v-5.43h3.05V108.14z M125.42,97.29h-3.05v-5.43h3.05V97.29z
                M125.42,86.43h-3.05V81h3.05V86.43z" />
                <polygon points="125.42,75.57 122.37,75.57 122.37,70.99 126.95,70.99 126.95,74.05 125.42,74.05 	" />
                <path d="M218.91,74.05h-5.75v-3.05h5.75V74.05z M207.41,74.05h-5.75v-3.05h5.75V74.05z M195.92,74.05h-5.75v-3.05h5.75V74.05z
                M184.42,74.05h-5.75v-3.05h5.75V74.05z M172.93,74.05h-5.75v-3.05h5.75V74.05z M161.43,74.05h-5.75v-3.05h5.75V74.05z
                M149.94,74.05h-5.75v-3.05h5.75V74.05z M138.44,74.05h-5.75v-3.05h5.75V74.05z" />
                <polygon points="229.24,75.57 226.18,75.57 226.18,74.05 224.66,74.05 224.66,70.99 229.24,70.99 	" />
                <path d="M229.24,119h-3.05v-5.43h3.05V119z M229.24,108.14h-3.05v-5.43h3.05V108.14z M229.24,97.29h-3.05v-5.43h3.05V97.29z
                M229.24,86.43h-3.05V81h3.05V86.43z" />
            </g>
            <g class="text">
                <path
                    d="M157.17,116.42c-1.12,0.57-2.29,1-3.52,1.29c-1.23,0.29-2.52,0.43-3.88,0.43c-4.82,0-8.49-1.59-11.03-4.76
		s-3.8-7.76-3.8-13.76c0-6.01,1.27-10.61,3.8-13.78c2.54-3.17,6.21-4.76,11.03-4.76c1.36,0,2.66,0.14,3.9,0.43s2.41,0.72,3.49,1.29
		v7.85c-1.21-1.12-2.39-1.93-3.53-2.45c-1.14-0.52-2.32-0.78-3.53-0.78c-2.58,0-4.53,1.02-5.85,3.07c-1.32,2.05-1.97,5.09-1.97,9.13
		c0,4.02,0.66,7.05,1.97,9.1c1.32,2.05,3.27,3.07,5.85,3.07c1.21,0,2.39-0.26,3.53-0.78c1.14-0.52,2.32-1.34,3.53-2.45V116.42z" />
                <path d="M163.59,104.26V81.72h7.06v24.31c0,1.79,0.45,3.19,1.36,4.2s2.17,1.52,3.78,1.52c1.61,0,2.87-0.51,3.78-1.52
		s1.36-2.41,1.36-4.2V81.72h7.06v22.54c0,4.85-0.97,8.37-2.9,10.58c-1.93,2.2-5.03,3.3-9.31,3.3c-4.26,0-7.36-1.1-9.29-3.3
		C164.56,112.64,163.59,109.11,163.59,104.26z" />
                <polygon points="218.2,117.45 192.91,117.45 205.69,97.72 	" />
            </g>
        </g>

        <g class="light light-5">
            <path class="on-border" d="M230,200H121.6v-59.54H230V200z M126.18,195.42h99.24v-50.38h-99.24V195.42z" />
            <g class="off-border">
                <polygon
                    points="229.24,199.24 224.66,199.24 224.66,196.18 226.18,196.18 226.18,194.66 229.24,194.66 	" />
                <path d="M218.91,199.24h-5.75v-3.05h5.75V199.24z M207.41,199.24h-5.75v-3.05h5.75V199.24z M195.92,199.24h-5.75v-3.05h5.75V199.24
                z M184.42,199.24h-5.75v-3.05h5.75V199.24z M172.93,199.24h-5.75v-3.05h5.75V199.24z M161.43,199.24h-5.75v-3.05h5.75V199.24z
                M149.94,199.24h-5.75v-3.05h5.75V199.24z M138.44,199.24h-5.75v-3.05h5.75V199.24z" />
                <polygon
                    points="126.95,199.24 122.37,199.24 122.37,194.66 125.42,194.66 125.42,196.18 126.95,196.18 	" />
                <path d="M125.42,189.23h-3.05v-5.43h3.05V189.23z M125.42,178.37h-3.05v-5.43h3.05V178.37z M125.42,167.51h-3.05v-5.43h3.05V167.51
                z M125.42,156.66h-3.05v-5.43h3.05V156.66z" />
                <polygon points="125.42,145.8 122.37,145.8 122.37,141.22 126.95,141.22 126.95,144.27 125.42,144.27 	" />
                <path d="M218.91,144.27h-5.75v-3.05h5.75V144.27z M207.41,144.27h-5.75v-3.05h5.75V144.27z M195.92,144.27h-5.75v-3.05h5.75V144.27
                z M184.42,144.27h-5.75v-3.05h5.75V144.27z M172.93,144.27h-5.75v-3.05h5.75V144.27z M161.43,144.27h-5.75v-3.05h5.75V144.27z
                M149.94,144.27h-5.75v-3.05h5.75V144.27z M138.44,144.27h-5.75v-3.05h5.75V144.27z" />
                <polygon points="229.24,145.8 226.18,145.8 226.18,144.27 224.66,144.27 224.66,141.22 229.24,141.22 	" />
                <path d="M229.24,189.23h-3.05v-5.43h3.05V189.23z M229.24,178.37h-3.05v-5.43h3.05V178.37z M229.24,167.52h-3.05v-5.43h3.05V167.52
                z M229.24,156.66h-3.05v-5.43h3.05V156.66z" />
            </g>
            <g class="text">
                <path
                    d="M134.29,152.35h11.51c3.97,0,6.96,0.75,8.96,2.26c2,1.51,3,3.76,3,6.76c0,2.3-0.59,4.09-1.77,5.38
		c-1.18,1.29-2.91,2.04-5.19,2.25c2.73,0.27,4.78,1.19,6.16,2.75c1.38,1.56,2.07,3.75,2.07,6.56c0,3.45-1.04,5.94-3.11,7.49
		c-2.07,1.55-5.45,2.32-10.12,2.32h-11.51V152.35z M141.11,157.98v8.3h4.69c1.79,0,3.06-0.32,3.82-0.96
		c0.76-0.64,1.14-1.69,1.14-3.16c0-1.47-0.39-2.53-1.16-3.19c-0.77-0.66-2.04-0.99-3.79-0.99H141.11z M141.11,171.9v10.58h4.69
		c2.25,0,3.82-0.38,4.73-1.15c0.9-0.77,1.35-2.1,1.35-4c0-1.93-0.47-3.32-1.41-4.16c-0.94-0.84-2.5-1.27-4.67-1.27H141.11z" />
                <path
                    d="M210.11,171.25c0.7,0.14,1.31,0.47,1.83,0.99c0.52,0.52,1.15,1.53,1.9,3.03l6.46,12.85h-7.75l-4.31-9.02
		c-0.13-0.25-0.3-0.61-0.5-1.05c-1.26-2.7-2.74-4.04-4.45-4.04h-2.25v14.12h-7.06V152.4h10.19c4.59,0,7.89,0.81,9.89,2.44
		c2,1.63,3,4.28,3,7.94c0,2.46-0.6,4.41-1.79,5.86S212.36,170.97,210.11,171.25z M201.04,158.33v9.74h3.33
		c1.93,0,3.31-0.38,4.15-1.14c0.84-0.76,1.26-2.01,1.26-3.74s-0.42-2.98-1.24-3.73c-0.83-0.75-2.22-1.12-4.16-1.12H201.04z" />
                <circle cx="175.79" cy="169.76" r="12.56" />
            </g>
        </g>
    </svg>
</div>
<div class="lights-button"></div>`,
    lT = je.View.extend({
        className: "gizmo gizmo-light",
        template: ke.template(VT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        onRender() {
            this.stickit(), this.addBindings(), this.options.isCaptain && this.intro()
        },
        addBindings() {
            for (let t = 0; t <= 5; t++) this.addBinding(this.model, `.light-${t}`, {
                classes: {
                    on: {
                        observe: "value",
                        onGet(e) {
                            return e === t
                        }
                    }
                }
            })
        },
        intro() {
            let t = 0;
            const e = this.model.get("value"),
                n = setInterval(() => {
                    if (t >= 5) {
                        this.model.set({
                            value: e
                        }), clearInterval(n);
                        return
                    }
                    this.model.set({
                        value: ke.random(0, 5)
                    }), t += 1
                }, 150)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 5 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    AT = `<div class="number-wrapper">
    <svg version="1.1" viewBox="0 0 500 500">
        <polygon class="number-0" points="170.32,51.84 144.4,25.92 170.32,0 329.68,0 355.6,25.92 329.68,51.84 "/>
        <polygon class="number-1" points="112.04,58.28 137.96,32.36 163.88,58.28 163.88,217.64 137.96,243.56 112.04,217.64 "/>
        <polygon class="number-2" points="336.12,58.28 362.04,32.36 387.96,58.28 387.96,217.64 362.04,243.56 336.12,217.64 "/>
        <polygon class="number-3" points="170.32,275.92 144.4,250 170.32,224.08 329.68,224.08 355.6,250 329.68,275.92 "/>
        <polygon class="number-4" points="112.04,282.36 137.96,256.44 163.88,282.36 163.88,441.72 137.96,467.64 112.04,441.72 "/>
        <polygon class="number-5" points="336.12,282.36 362.04,256.44 387.96,282.36 387.96,441.72 362.04,467.64 336.12,441.72 "/>
        <polygon class="number-6" points="170.32,500 144.4,474.08 170.32,448.16 329.68,448.16 355.6,474.08 329.68,500 "/>
    </svg>
</div>`,
    cT = je.View.extend({
        className: "gizmo gizmo-number",
        template: ke.template(AT),
        model: new ze.Model,
        lcd: [
            [1, 1, 1, 0, 1, 1, 1],
            [0, 1, 0, 0, 1, 0, 0],
            [1, 0, 1, 1, 1, 0, 1],
            [1, 0, 1, 1, 0, 1, 1],
            [0, 1, 1, 1, 0, 1, 0],
            [1, 1, 0, 1, 0, 1, 1],
            [1, 1, 0, 1, 1, 1, 1],
            [1, 0, 1, 0, 0, 1, 0],
            [1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 0, 1, 0]
        ],
        events: {
            click: "onClick"
        },
        onRender() {
            this.stickit(), this.addBindings(), this.options.isCaptain && this.intro()
        },
        addBindings() {
            for (let t = 0; t <= 9; t++) this.addBinding(this.model, `.number-${t}`, {
                classes: {
                    on: {
                        observe: "value",
                        onGet(e) {
                            return this.lcd[e][t]
                        }
                    }
                }
            })
        },
        intro() {
            let t = 0;
            const e = this.model.get("value"),
                n = setInterval(() => {
                    if (t >= 5) {
                        this.model.set({
                            value: e
                        }), clearInterval(n);
                        return
                    }
                    this.model.set({
                        value: ke.random(0, 9)
                    }), t += 1
                }, 150)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 9 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    dT = `
    <div class="dial">
        <div class="indicator"></div>
    </div>
    <div class="label lo">LO</div>
    <div class="label mid">MID</div>
    <div class="label hi">HI</div>
`,
    pT = je.View.extend({
        className: "gizmo gizmo-power",
        template: ke.template(dT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".indicator": {
                attributes: [{
                    name: "style",
                    observe: "value",
                    onGet(t) {
                        return t === 0 ? "transform: rotate(-45deg);" : t === 1 ? "transform: rotate(0deg);" : t === 2 ? "transform: rotate(45deg);" : ""
                    }
                }]
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            const t = this.model.get("value");
            setTimeout(() => {
                this.model.set({
                    value: 0
                })
            }, 1), setTimeout(() => {
                this.model.set({
                    value: 2
                })
            }, 300), setTimeout(() => {
                this.model.set({
                    value: t
                })
            }, 600)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 2 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    hT = `
    <div class="switch switch-0"></div>
    <div class="switch switch-1"></div>
    <div class="switch switch-2"></div>
`,
    uT = je.View.extend({
        className: "gizmo gizmo-rocker",
        template: ke.template(hT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".switch-0": {
                classes: {
                    on: {
                        observe: "value",
                        onGet: t => t === 0
                    }
                }
            },
            ".switch-1": {
                classes: {
                    on: {
                        observe: "value",
                        onGet: t => t === 1
                    }
                }
            },
            ".switch-2": {
                classes: {
                    on: {
                        observe: "value",
                        onGet: t => t === 2
                    }
                }
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            let t = 0;
            const e = this.model.get("value"),
                n = setInterval(() => {
                    if (t >= 7) {
                        this.model.set({
                            value: e
                        }), clearInterval(n);
                        return
                    }
                    this.model.set({
                        value: ke.random(0, 2)
                    }), t += 1
                }, 100)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 2 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    mT = `
    <div class="base"></div>
    <div class="switch"></div>
`,
    fT = je.View.extend({
        className: "gizmo gizmo-switch",
        template: ke.template(mT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ":el": {
                classes: {
                    on: "value"
                }
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            const t = this.model.get("value");
            setTimeout(() => {
                this.model.set({
                    value: !t
                })
            }, 200), setTimeout(() => {
                this.model.set({
                    value: t
                })
            }, 500)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            const t = this.model.get("value");
            this.model.set({
                value: !t
            })
        }
    }),
    qT = `
    <input type="text" class="screen" placeholder="ENTER" maxlength="8"/>
`,
    gT = je.View.extend({
        className: "gizmo gizmo-text",
        template: ke.template(qT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".screen": {
                observe: "value",
                attributes: [{
                    name: "disabled",
                    observe: "isDisabled",
                    onGet: t => t
                }]
            }
        },
        initialize() {
            this.model.set({
                isDisabled: !this.options.isCaptain
            })
        },
        onRender() {
            this.stickit()
        }
    }),
    yT = `<div class="display">
    <div class="markings">
        <svg version="1.1" viewBox="0 0 500 200">
            <line x1="252.5" y1="98.5" x2="252.5" y2="122.75"/>
            <line x1="351.91" y1="108.07" x2="347.38" y2="131.36"/>
            <line x1="447.67" y1="136.44" x2="439.43" y2="156.84"/>
            <line x1="153.09" y1="108.07" x2="157.57" y2="131.15"/>
            <line x1="57.33" y1="136.44" x2="65.41" y2="156.44"/>
            <path d="M26.72,172.7L26.72,172.7c141.81-66.37,306.91-66.6,448.87-0.67l0,0"/>
            <path class="solo" d="M0,199.94c155.04-85.87,344.85-86.01,500-0.41"/>
        </svg>
    </div>
    <div class="needle"></div>
</div>
<div class="dial"></div>
`,
    bT = je.View.extend({
        className: "gizmo gizmo-tuner",
        template: ke.template(yT),
        model: new ze.Model,
        events: {
            click: "onClick"
        },
        bindings: {
            ".needle": {
                attributes: [{
                    name: "style",
                    observe: "value",
                    onGet(t) {
                        return t === 0 ? "transform: rotate(-27deg);" : t === 1 ? "transform: rotate(-14deg);" : t === 2 ? "transform: rotate(0);" : t === 3 ? "transform: rotate(14deg);" : t === 4 ? "transform: rotate(27deg);" : ""
                    }
                }]
            }
        },
        onRender() {
            this.stickit(), this.options.isCaptain && this.intro()
        },
        intro() {
            const t = this.model.get("value");
            setTimeout(() => {
                this.model.set({
                    value: 0
                })
            }, 1), setTimeout(() => {
                this.model.set({
                    value: 4
                })
            }, 300), setTimeout(() => {
                this.model.set({
                    value: t
                })
            }, 600)
        },
        onClick() {
            if (!this.options.isCaptain) return;
            let t = this.model.get("value");
            t === 4 ? t = 0 : t += 1, this.model.set({
                value: t
            })
        }
    }),
    vT = ze.Model.extend({}),
    wT = ze.Collection.extend({
        model: vT
    }),
    xT = je.CollectionView.extend({
        tagName: "div",
        className: "gizmos",
        collection: new wT,
        childView(t) {
            switch (t.get("type")) {
                case "BUTTON":
                    return vS;
                case "DIPS":
                    return xS;
                case "DIRECTION":
                    return CS;
                case "EQ":
                    return rT;
                case "LIGHT":
                    return lT;
                case "NUMBER":
                    return cT;
                case "POWER":
                    return pT;
                case "ROCKER":
                    return uT;
                case "SWITCH":
                    return fT;
                case "TEXT":
                    return gT;
                case "TUNER":
                    return bT;
                default:
                    return RS
            }
        },
        childViewOptions() {
            return this.options
        }
    }),
    kT = `<div class="scrollable">
    <div class="clamp">
        <div class="info">Test Test</div>
        <div class="gizmo-panel">
            <div class="panel-name-wrapper">
                <div class="panel-name"></div>
            </div>
            <div id="panel-region"></div>
        </div>
        <button class="button submit">SUBMIT</button>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></div>
</div>`,
    Nq = je.View.extend({
        className: "mechanic gizmos",
        template: ke.template(kT),
        model: new Ht,
        regions: {
            panel: "#panel-region"
        },
        events: {
            "click .submit": "onSubmitClick",
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".panel-name": "name",
            ".info": {
                observe: ["state", "participant", "captain"],
                updateMethod: "html",
                onGet([t, e, n]) {
                    return t === "GizmosMechanicCaptain" ? `You are setting the gizmos. Ask <span class="player-name ${e.avatar}">${e.name}</span> for the correct settings.` : `These are the correct gizmo settings. Describe them to <span class="player-name ${n.avatar}">${n.name}</span>.`
                }
            },
            ".gizmo-panel": {
                classes: {
                    interactive: {
                        observe: "state",
                        onGet: t => t === "GizmosMechanicCaptain"
                    }
                }
            },
            ".submit": {
                observe: "state",
                visible: t => t === "GizmosMechanicCaptain"
            }
        },
        initialize() {
            this.panelComponent = new xT, this.listenTo(this.model, "change", this.update, this), this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck), this.listenTo(this.model, "change:stepIndex", this.resetData), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                isWaiting: !1
            }), this.panelComponent.collection.reset()
        },
        update() {
            const t = this.model.get("gizmos");
            this.panelComponent.options.isCaptain = this.model.get("state") === "GizmosMechanicCaptain", this.panelComponent.collection.length === 0 && this.panelComponent.collection.set(t), this.stickit()
        },
        onRender() {
            this.showChildView("panel", this.panelComponent), this.stickit()
        },
        onAttach() {
            this.update()
        },
        onMistakeCheck(t) {
            !t.get("isWaiting") || (this.model.setUpdate({
                isWaiting: !1
            }), this.triggerMethod("result", {
                type: "fail",
                message: "TRY<br/>AGAIN"
            }))
        },
        onSubmitClick() {
            if (this.model.get("state") === "GizmosMechanicParticipant" || this.model.get("isWaiting")) return;
            this.model.setUpdate({
                isWaiting: !0
            });
            const e = this.panelComponent.collection.map(n => n.get("value"));
            this.triggerMethod("client:message", {
                action: "submit",
                values: e
            })
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    });
/*!
 * 
 * ZingTouch v1.0.6
 * Author: ZingChart http://zingchart.com
 * License: MIT
 */
(function(t) {
    function e(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports
    }
    var n = {};
    return e.m = t, e.c = n, e.p = "", e(0)
})([function(t, e, n) {
    function i(V) {
        return V && V.__esModule ? V : {
            default: V
        }
    }
    var o = n(1),
        r = i(o);
    window.ZingTouch = r.default
}, function(t, e, n) {
    function i(Q) {
        return Q && Q.__esModule ? Q : {
            default: Q
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var o = n(2),
        r = i(o),
        V = n(4),
        A = i(V),
        c = n(10),
        d = i(c),
        m = n(12),
        q = i(m),
        v = n(13),
        D = i(v),
        S = n(14),
        C = i(S),
        h = n(15),
        w = i(h),
        T = n(16),
        M = i(T),
        O = {
            _regions: [],
            Gesture: A.default,
            Expand: d.default,
            Pan: q.default,
            Pinch: D.default,
            Rotate: C.default,
            Swipe: w.default,
            Tap: M.default,
            Region: function(Q, u, J) {
                var se = O._regions.length,
                    te = new r.default(Q, u, J, se);
                return O._regions.push(te), te
            }
        };
    e.default = O
}, function(t, e, n) {
    function i(C) {
        return C && C.__esModule ? C : {
            default: C
        }
    }

    function o(C, h) {
        if (!(C instanceof h)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = function() {
            function C(h, w) {
                for (var T = 0; T < w.length; T++) {
                    var M = w[T];
                    M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(h, M.key, M)
                }
            }
            return function(h, w, T) {
                return w && C(h.prototype, w), T && C(h, T), h
            }
        }(),
        V = n(3),
        A = i(V),
        c = n(4),
        d = i(c),
        m = n(6),
        q = i(m),
        v = n(9),
        D = i(v),
        S = function() {
            function C(h, w, T, M) {
                var O = this;
                o(this, C), this.id = M, this.element = h, this.capture = typeof w < "u" && w, this.preventDefault = typeof T > "u" || T, this.state = new D.default(M);
                var Q = [];
                Q = window.PointerEvent && !window.TouchEvent ? ["pointerdown", "pointermove", "pointerup"] : ["mousedown", "mousemove", "mouseup", "touchstart", "touchmove", "touchend"], Q.map(function(u) {
                    h.addEventListener(u, function(J) {
                        (0, q.default)(J, O)
                    }, O.capture)
                })
            }
            return r(C, [{
                key: "bind",
                value: function(h, w, T, M, O) {
                    if (!h || h && !h.tagName) throw "Bind must contain an element";
                    return O = typeof O < "u" && O, w ? void this.state.addBinding(h, w, T, M, O) : new A.default(h, O, this.state)
                }
            }, {
                key: "bindOnce",
                value: function(h, w, T, M) {
                    this.bind(h, w, T, M, !0)
                }
            }, {
                key: "unbind",
                value: function(h, w) {
                    var T = this,
                        M = this.state.retrieveBindingsByElement(h),
                        O = [];
                    return M.forEach(function(Q) {
                        if (w) {
                            if (typeof w == "string" && T.state.registeredGestures[w]) {
                                var u = T.state.registeredGestures[w];
                                u.id === Q.gesture.id && (h.removeEventListener(Q.gesture.getId(), Q.handler, Q.capture), O.push(Q))
                            }
                        } else h.removeEventListener(Q.gesture.getId(), Q.handler, Q.capture), O.push(Q)
                    }), O
                }
            }, {
                key: "register",
                value: function(h, w) {
                    if (typeof h != "string") throw new Error("Parameter key is an invalid string");
                    if (!w instanceof d.default) throw new Error("Parameter gesture is an invalid Gesture object");
                    w.setType(h), this.state.registerGesture(w, h)
                }
            }, {
                key: "unregister",
                value: function(h) {
                    this.state.bindings.forEach(function(T) {
                        T.gesture.getType() === h && T.element.removeEventListener(T.gesture.getId(), T.handler, T.capture)
                    });
                    var w = this.state.registeredGestures[h];
                    return delete this.state.registeredGestures[h], w
                }
            }]), C
        }();
    e.default = S
}, function(t, e) {
    function n(o, r) {
        if (!(o instanceof r)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = function o(r, V, A) {
        var c = this;
        n(this, o), this.element = r, Object.keys(A.registeredGestures).forEach(function(d) {
            c[d] = function(m, q) {
                return A.addBinding(c.element, d, m, q, V), c
            }
        })
    };
    e.default = i
}, function(t, e, n) {
    function i(d) {
        return d && d.__esModule ? d : {
            default: d
        }
    }

    function o(d, m) {
        if (!(d instanceof m)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = function() {
            function d(m, q) {
                for (var v = 0; v < q.length; v++) {
                    var D = q[v];
                    D.enumerable = D.enumerable || !1, D.configurable = !0, "value" in D && (D.writable = !0), Object.defineProperty(m, D.key, D)
                }
            }
            return function(m, q, v) {
                return q && d(m.prototype, q), v && d(m, v), m
            }
        }(),
        V = n(5),
        A = i(V),
        c = function() {
            function d() {
                o(this, d), this.type = null, this.id = null
            }
            return r(d, [{
                key: "setType",
                value: function(m) {
                    this.type = m
                }
            }, {
                key: "getType",
                value: function() {
                    return this.type
                }
            }, {
                key: "setId",
                value: function(m) {
                    this.id = m
                }
            }, {
                key: "getId",
                value: function() {
                    return this.id !== null ? this.id : this.type
                }
            }, {
                key: "update",
                value: function(m) {
                    for (var q in m) this[q] && (this[q] = m[q])
                }
            }, {
                key: "start",
                value: function(m, q, v) {
                    return null
                }
            }, {
                key: "move",
                value: function(m, q, v) {
                    return null
                }
            }, {
                key: "end",
                value: function(m) {
                    return null
                }
            }, {
                key: "isValid",
                value: function(m, q, v) {
                    var D = !0;
                    return m.length > 1 && m.forEach(function(S) {
                        A.default.isInside(S.initial.x, S.initial.y, v) || (D = !1)
                    }), D
                }
            }]), d
        }();
    e.default = c
}, function(t, e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = 360,
        i = 180,
        o = {
            normalizeEvent: function(r) {
                switch (r) {
                    case "mousedown":
                    case "touchstart":
                    case "pointerdown":
                        return "start";
                    case "mousemove":
                    case "touchmove":
                    case "pointermove":
                        return "move";
                    case "mouseup":
                    case "touchend":
                    case "pointerup":
                        return "end";
                    default:
                        return null
                }
            },
            isWithin: function(r, V, A, c, d) {
                return Math.abs(V - c) <= d && Math.abs(r - A) <= d
            },
            distanceBetweenTwoPoints: function(r, V, A, c) {
                var d = Math.sqrt((V - r) * (V - r) + (c - A) * (c - A));
                return Math.round(100 * d) / 100
            },
            getMidpoint: function(r, V, A, c) {
                return {
                    x: (r + V) / 2,
                    y: (A + c) / 2
                }
            },
            getAngle: function(r, V, A, c) {
                var d = Math.atan2(c - V, A - r) * (i / Math.PI);
                return n - (d < 0 ? n + d : d)
            },
            getAngularDistance: function(r, V) {
                var A = (V - r) % n,
                    c = A < 0 ? 1 : -1;
                return A = Math.abs(A), A > i ? c * (n - A) : c * A
            },
            getVelocity: function(r, V, A, c, d, m) {
                var q = this.distanceBetweenTwoPoints(r, c, V, d);
                return q / (m - A)
            },
            getRightMostInput: function(r) {
                var V = null,
                    A = Number.MIN_VALUE;
                return r.forEach(function(c) {
                    c.initial.x > A && (V = c)
                }), V
            },
            isInteger: function(r) {
                return typeof r == "number" && r % 1 === 0
            },
            isInside: function(r, V, A) {
                var c = A.getBoundingClientRect();
                return r > c.left && r < c.left + c.width && V > c.top && V < c.top + c.height
            },
            getPropagationPath: function(r) {
                if (r.path) return r.path;
                for (var V = [], A = r.target; A != document;) V.push(A), A = A.parentNode;
                return V
            },
            getPathIndex: function(r, V) {
                var A = r.length;
                return r.forEach(function(c, d) {
                    c === V && (A = d)
                }), A
            },
            setMSPreventDefault: function(r) {
                r.style["-ms-content-zooming"] = "none", r.style["touch-action"] = "none"
            },
            removeMSPreventDefault: function(r) {
                r.style["-ms-content-zooming"] = "", r.style["touch-action"] = ""
            }
        };
    e.default = o
}, function(t, e, n) {
    function i(q) {
        return q && q.__esModule ? q : {
            default: q
        }
    }

    function o(q, v) {
        var D = v.state;
        if (D.inputs.length !== 0 || m.default.normalizeEvent(q.type) === "start") {
            if (typeof q.buttons < "u" && m.default.normalizeEvent(q.type) !== "end" && q.buttons === 0) return void D.resetInputs();
            if (D.updateInputs(q, v.element)) {
                var S = D.retrieveBindingsByInitialPos();
                S.length > 0 && function() {
                    v.preventDefault ? (m.default.setMSPreventDefault(v.element), q.preventDefault ? q.preventDefault() : q.returnValue = !1) : m.default.removeMSPreventDefault(v.element);
                    var h = {},
                        w = (0, c.default)(S, q, D);
                    w.forEach(function(T) {
                        var M = T.binding.gesture.id;
                        if (h[M]) {
                            var O = m.default.getPropagationPath(q);
                            m.default.getPathIndex(O, T.binding.element) < m.default.getPathIndex(O, h[M].binding.element) && (h[M] = T)
                        } else h[M] = T
                    }), Object.keys(h).forEach(function(T) {
                        var M = h[T];
                        (0, V.default)(M.binding, M.data, M.events)
                    })
                }();
                var C = 0;
                D.inputs.forEach(function(h) {
                    h.getCurrentEventType() === "end" && C++
                }), C === D.inputs.length && D.resetInputs()
            }
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(7),
        V = i(r),
        A = n(8),
        c = i(A),
        d = n(5),
        m = i(d);
    e.default = o
}, function(t, e) {
    function n(o, r, V) {
        r.events = V;
        var A = new CustomEvent(o.gesture.getId(), {
            detail: r,
            bubbles: !0,
            cancelable: !0
        });
        i(o.element, A, o)
    }

    function i(o, r, V) {
        o.dispatchEvent(r), V.bindOnce && ZingTouch.unbind(V.element, V.gesture.getType())
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.default = n
}, function(t, e, n) {
    function i(A) {
        return A && A.__esModule ? A : {
            default: A
        }
    }

    function o(A, c, d) {
        var m = V.default.normalizeEvent(c.type),
            q = [];
        return A.forEach(function(v) {
            var D = v.gesture[m](d.inputs, d, v.element);
            D && function() {
                var S = [];
                d.inputs.forEach(function(C) {
                    S.push(C.current)
                }), q.push({
                    binding: v,
                    data: D,
                    events: S
                })
            }()
        }), q
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(5),
        V = i(r);
    e.default = o
}, function(t, e, n) {
    function i(Y) {
        return Y && Y.__esModule ? Y : {
            default: Y
        }
    }

    function o(Y, re) {
        if (!(Y instanceof re)) throw new TypeError("Cannot call a class as a function")
    }

    function r(Y, re) {
        for (var ue = 0; ue < Y.length; ue++)
            if (Y[ue].identifier === re) return Y[ue];
        return null
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var V = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Y) {
            return typeof Y
        } : function(Y) {
            return Y && typeof Symbol == "function" && Y.constructor === Symbol && Y !== Symbol.prototype ? "symbol" : typeof Y
        },
        A = function() {
            function Y(re, ue) {
                for (var fe = 0; fe < ue.length; fe++) {
                    var qe = ue[fe];
                    qe.enumerable = qe.enumerable || !1, qe.configurable = !0, "value" in qe && (qe.writable = !0), Object.defineProperty(re, qe.key, qe)
                }
            }
            return function(re, ue, fe) {
                return ue && Y(re.prototype, ue), fe && Y(re, fe), re
            }
        }(),
        c = n(4),
        d = i(c),
        m = n(10),
        q = i(m),
        v = n(12),
        D = i(v),
        S = n(13),
        C = i(S),
        h = n(14),
        w = i(h),
        T = n(15),
        M = i(T),
        O = n(16),
        Q = i(O),
        u = n(17),
        J = i(u),
        se = n(18),
        te = i(se),
        ve = n(5),
        be = i(ve),
        oe = 0,
        Ie = function() {
            function Y(re) {
                o(this, Y), this.regionId = re, this.inputs = [], this.bindings = [], this.numGestures = 0, this.registeredGestures = {}, this.registerGesture(new q.default, "expand"), this.registerGesture(new D.default, "pan"), this.registerGesture(new w.default, "rotate"), this.registerGesture(new C.default, "pinch"), this.registerGesture(new M.default, "swipe"), this.registerGesture(new Q.default, "tap")
            }
            return A(Y, [{
                key: "addBinding",
                value: function(re, ue, fe, qe, ge) {
                    var Te = void 0;
                    if (re && typeof re.tagName > "u") throw new Error("Parameter element is an invalid object.");
                    if (typeof fe != "function") throw new Error("Parameter handler is invalid.");
                    if (typeof ue == "string" && Object.keys(this.registeredGestures).indexOf(ue) === -1) throw new Error("Parameter " + ue + " is not a registered gesture");
                    if ((typeof ue > "u" ? "undefined" : V(ue)) === "object" && !(ue instanceof d.default)) throw new Error("Parameter for the gesture is not of a Gesture type");
                    typeof ue == "string" ? Te = this.registeredGestures[ue] : (Te = ue, Te.id === "" && this.assignGestureId(Te)), this.bindings.push(new J.default(re, Te, fe, qe, ge)), re.addEventListener(Te.getId(), fe, qe)
                }
            }, {
                key: "retrieveBindingsByElement",
                value: function(re) {
                    var ue = [];
                    return this.bindings.map(function(fe) {
                        fe.element === re && ue.push(fe)
                    }), ue
                }
            }, {
                key: "retrieveBindingsByInitialPos",
                value: function() {
                    var re = this,
                        ue = [];
                    return this.bindings.forEach(function(fe) {
                        var qe = re.inputs.filter(function(ge) {
                            return be.default.isInside(ge.initial.x, ge.initial.y, fe.element)
                        });
                        qe.length > 0 && ue.push(fe)
                    }), ue
                }
            }, {
                key: "updateInputs",
                value: function(re, ue) {
                    function fe(Le, Ge, Xe, nt) {
                        var Tt = be.default.normalizeEvent(Le.type),
                            Pt = r(Ge.inputs, Xe);
                        return Tt === "start" && Pt || Tt !== "start" && Pt && !be.default.isInside(Pt.current.x, Pt.current.y, nt) ? void Ge.resetInputs() : Tt === "start" || Pt ? void(Tt === "start" ? Ge.inputs.push(new te.default(Le, Xe)) : Pt.update(Le, Xe)) : void Ge.resetInputs()
                    }
                    var qe = oe,
                        ge = re.touches ? "TouchEvent" : re.pointerType ? "PointerEvent" : "MouseEvent";
                    switch (ge) {
                        case "TouchEvent":
                            for (var Te in re.changedTouches) re.changedTouches.hasOwnProperty(Te) && be.default.isInteger(parseInt(Te)) && (qe = re.changedTouches[Te].identifier, fe(re, this, qe, ue));
                            break;
                        case "PointerEvent":
                            qe = re.pointerId, fe(re, this, qe, ue);
                            break;
                        case "MouseEvent":
                        default:
                            fe(re, this, oe, ue)
                    }
                    return !0
                }
            }, {
                key: "resetInputs",
                value: function() {
                    this.inputs = []
                }
            }, {
                key: "numActiveInputs",
                value: function() {
                    var re = this.inputs.filter(function(ue) {
                        return ue.current.type !== "end"
                    });
                    return re.length
                }
            }, {
                key: "registerGesture",
                value: function(re, ue) {
                    this.assignGestureId(re), this.registeredGestures[ue] = re
                }
            }, {
                key: "assignGestureId",
                value: function(re) {
                    re.setId(this.regionId + "-" + this.numGestures++)
                }
            }]), Y
        }();
    e.default = Ie
}, function(t, e, n) {
    function i(m) {
        return m && m.__esModule ? m : {
            default: m
        }
    }

    function o(m, q) {
        if (!(m instanceof q)) throw new TypeError("Cannot call a class as a function")
    }

    function r(m, q) {
        if (!m) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !q || typeof q != "object" && typeof q != "function" ? m : q
    }

    function V(m, q) {
        if (typeof q != "function" && q !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof q);
        m.prototype = Object.create(q && q.prototype, {
            constructor: {
                value: m,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), q && (Object.setPrototypeOf ? Object.setPrototypeOf(m, q) : m.__proto__ = q)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = n(11),
        c = i(A),
        d = function(m) {
            function q(v) {
                o(this, q);
                var D = r(this, (q.__proto__ || Object.getPrototypeOf(q)).call(this, v));
                return D.type = "expand", D
            }
            return V(q, m), q
        }(c.default);
    e.default = d
}, function(t, e, n) {
    function i(C) {
        return C && C.__esModule ? C : {
            default: C
        }
    }

    function o(C, h) {
        if (!(C instanceof h)) throw new TypeError("Cannot call a class as a function")
    }

    function r(C, h) {
        if (!C) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !h || typeof h != "object" && typeof h != "function" ? C : h
    }

    function V(C, h) {
        if (typeof h != "function" && h !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof h);
        C.prototype = Object.create(h && h.prototype, {
            constructor: {
                value: C,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), h && (Object.setPrototypeOf ? Object.setPrototypeOf(C, h) : C.__proto__ = h)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = function() {
            function C(h, w) {
                for (var T = 0; T < w.length; T++) {
                    var M = w[T];
                    M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(h, M.key, M)
                }
            }
            return function(h, w, T) {
                return w && C(h.prototype, w), T && C(h, T), h
            }
        }(),
        c = n(4),
        d = i(c),
        m = n(5),
        q = i(m),
        v = 2,
        D = 1,
        S = function(C) {
            function h(w) {
                o(this, h);
                var T = r(this, (h.__proto__ || Object.getPrototypeOf(h)).call(this));
                return T.type = "distance", T.threshold = w && w.threshold ? w.threshold : D, T
            }
            return V(h, C), A(h, [{
                key: "start",
                value: function(w, T, M) {
                    if (!this.isValid(w, T, M)) return null;
                    if (w.length === v) {
                        var O = w[0].getGestureProgress(this.type);
                        O.lastEmittedDistance = q.default.distanceBetweenTwoPoints(w[0].current.x, w[1].current.x, w[0].current.y, w[1].current.y)
                    }
                }
            }, {
                key: "move",
                value: function(w, T, M) {
                    if (T.numActiveInputs() === v) {
                        var O = q.default.distanceBetweenTwoPoints(w[0].current.x, w[1].current.x, w[0].current.y, w[1].current.y),
                            Q = q.default.distanceBetweenTwoPoints(w[0].previous.x, w[1].previous.x, w[0].previous.y, w[1].previous.y),
                            u = q.default.getMidpoint(w[0].current.x, w[1].current.x, w[0].current.y, w[1].current.y),
                            J = w[0].getGestureProgress(this.type);
                        if (this.constructor.name === "Expand") {
                            if (O < Q) J.lastEmittedDistance = O;
                            else if (O - J.lastEmittedDistance >= this.threshold) return J.lastEmittedDistance = O, {
                                distance: O,
                                center: u
                            }
                        } else if (O > Q) J.lastEmittedDistance = O;
                        else if (O < Q && J.lastEmittedDistance - O >= this.threshold) return J.lastEmittedDistance = O, {
                            distance: O,
                            center: u
                        };
                        return null
                    }
                }
            }]), h
        }(d.default);
    e.default = S
}, function(t, e, n) {
    function i(C) {
        return C && C.__esModule ? C : {
            default: C
        }
    }

    function o(C, h) {
        if (!(C instanceof h)) throw new TypeError("Cannot call a class as a function")
    }

    function r(C, h) {
        if (!C) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !h || typeof h != "object" && typeof h != "function" ? C : h
    }

    function V(C, h) {
        if (typeof h != "function" && h !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof h);
        C.prototype = Object.create(h && h.prototype, {
            constructor: {
                value: C,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), h && (Object.setPrototypeOf ? Object.setPrototypeOf(C, h) : C.__proto__ = h)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = function() {
            function C(h, w) {
                for (var T = 0; T < w.length; T++) {
                    var M = w[T];
                    M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(h, M.key, M)
                }
            }
            return function(h, w, T) {
                return w && C(h.prototype, w), T && C(h, T), h
            }
        }(),
        c = n(4),
        d = i(c),
        m = n(5),
        q = i(m),
        v = 1,
        D = 1,
        S = function(C) {
            function h(w) {
                o(this, h);
                var T = r(this, (h.__proto__ || Object.getPrototypeOf(h)).call(this));
                return T.type = "pan", T.numInputs = w && w.numInputs ? w.numInputs : v, T.threshold = w && w.threshold ? w.threshold : D, T
            }
            return V(h, C), A(h, [{
                key: "start",
                value: function(w) {
                    var T = this;
                    w.forEach(function(M) {
                        var O = M.getGestureProgress(T.getId());
                        O.active = !0, O.lastEmitted = {
                            x: M.current.x,
                            y: M.current.y
                        }
                    })
                }
            }, {
                key: "move",
                value: function(w, T, M) {
                    if (this.numInputs === w.length)
                        for (var O = {
                                data: []
                            }, Q = 0; Q < w.length; Q++) {
                            var u = w[Q].getGestureProgress(this.getId()),
                                J = !1,
                                se = Math.abs(w[Q].current.y - u.lastEmitted.y) > this.threshold,
                                te = Math.abs(w[Q].current.x - u.lastEmitted.x) > this.threshold;
                            if (J = se || te, !u.active || !J) return null;
                            O.data[Q] = {
                                distanceFromOrigin: q.default.distanceBetweenTwoPoints(w[Q].initial.x, w[Q].current.x, w[Q].initial.y, w[Q].current.y),
                                directionFromOrigin: q.default.getAngle(w[Q].initial.x, w[Q].initial.y, w[Q].current.x, w[Q].current.y),
                                currentDirection: q.default.getAngle(u.lastEmitted.x, u.lastEmitted.y, w[Q].current.x, w[Q].current.y)
                            }, u.lastEmitted.x = w[Q].current.x, u.lastEmitted.y = w[Q].current.y
                        }
                    return O
                }
            }, {
                key: "end",
                value: function(w) {
                    var T = this;
                    return w.forEach(function(M) {
                        var O = M.getGestureProgress(T.getId());
                        O.active = !1
                    }), null
                }
            }]), h
        }(d.default);
    e.default = S
}, function(t, e, n) {
    function i(q) {
        return q && q.__esModule ? q : {
            default: q
        }
    }

    function o(q, v) {
        if (!(q instanceof v)) throw new TypeError("Cannot call a class as a function")
    }

    function r(q, v) {
        if (!q) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !v || typeof v != "object" && typeof v != "function" ? q : v
    }

    function V(q, v) {
        if (typeof v != "function" && v !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof v);
        q.prototype = Object.create(v && v.prototype, {
            constructor: {
                value: q,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), v && (Object.setPrototypeOf ? Object.setPrototypeOf(q, v) : q.__proto__ = v)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = n(11),
        c = i(A),
        d = n(5),
        m = (i(d), function(q) {
            function v(D) {
                o(this, v);
                var S = r(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, D));
                return S.type = "pinch", S
            }
            return V(v, q), v
        }(c.default));
    e.default = m
}, function(t, e, n) {
    function i(S) {
        return S && S.__esModule ? S : {
            default: S
        }
    }

    function o(S, C) {
        if (!(S instanceof C)) throw new TypeError("Cannot call a class as a function")
    }

    function r(S, C) {
        if (!S) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !C || typeof C != "object" && typeof C != "function" ? S : C
    }

    function V(S, C) {
        if (typeof C != "function" && C !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof C);
        S.prototype = Object.create(C && C.prototype, {
            constructor: {
                value: S,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), C && (Object.setPrototypeOf ? Object.setPrototypeOf(S, C) : S.__proto__ = C)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = function() {
            function S(C, h) {
                for (var w = 0; w < h.length; w++) {
                    var T = h[w];
                    T.enumerable = T.enumerable || !1, T.configurable = !0, "value" in T && (T.writable = !0), Object.defineProperty(C, T.key, T)
                }
            }
            return function(C, h, w) {
                return h && S(C.prototype, h), w && S(C, w), C
            }
        }(),
        c = n(4),
        d = i(c),
        m = n(5),
        q = i(m),
        v = 2,
        D = function(S) {
            function C() {
                o(this, C);
                var h = r(this, (C.__proto__ || Object.getPrototypeOf(C)).call(this));
                return h.type = "rotate", h
            }
            return V(C, S), A(C, [{
                key: "move",
                value: function(h, w, T) {
                    if (w.numActiveInputs() <= v) {
                        var M = void 0,
                            O = void 0,
                            Q = void 0,
                            u = void 0;
                        if (w.numActiveInputs() === 1) {
                            var J = T.getBoundingClientRect();
                            M = {
                                x: J.left + J.width / 2,
                                y: J.top + J.height / 2
                            }, u = h[0], O = Q = 0
                        } else {
                            M = q.default.getMidpoint(h[0].initial.x, h[1].initial.x, h[0].initial.y, h[1].initial.y);
                            var se = q.default.getMidpoint(h[0].current.x, h[1].current.x, h[0].current.y, h[1].current.y);
                            O = M.x - se.x, Q = M.y - se.y, u = q.default.getRightMostInput(h)
                        }
                        var te = q.default.getAngle(M.x, M.y, u.current.x + O, u.current.y + Q),
                            ve = u.getGestureProgress(this.getId());
                        return ve.initialAngle ? (ve.change = q.default.getAngularDistance(ve.previousAngle, te), ve.distance = ve.distance + ve.change) : (ve.initialAngle = ve.previousAngle = te, ve.distance = ve.change = 0), ve.previousAngle = te, {
                            angle: te,
                            distanceFromOrigin: ve.distance,
                            distanceFromLast: ve.change
                        }
                    }
                    return null
                }
            }]), C
        }(d.default);
    e.default = D
}, function(t, e, n) {
    function i(T) {
        return T && T.__esModule ? T : {
            default: T
        }
    }

    function o(T, M) {
        if (!(T instanceof M)) throw new TypeError("Cannot call a class as a function")
    }

    function r(T, M) {
        if (!T) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !M || typeof M != "object" && typeof M != "function" ? T : M
    }

    function V(T, M) {
        if (typeof M != "function" && M !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof M);
        T.prototype = Object.create(M && M.prototype, {
            constructor: {
                value: T,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), M && (Object.setPrototypeOf ? Object.setPrototypeOf(T, M) : T.__proto__ = M)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = function() {
            function T(M, O) {
                for (var Q = 0; Q < O.length; Q++) {
                    var u = O[Q];
                    u.enumerable = u.enumerable || !1, u.configurable = !0, "value" in u && (u.writable = !0), Object.defineProperty(M, u.key, u)
                }
            }
            return function(M, O, Q) {
                return O && T(M.prototype, O), Q && T(M, Q), M
            }
        }(),
        c = n(4),
        d = i(c),
        m = n(5),
        q = i(m),
        v = 1,
        D = 100,
        S = .2,
        C = 100,
        h = 10,
        w = function(T) {
            function M(O) {
                o(this, M);
                var Q = r(this, (M.__proto__ || Object.getPrototypeOf(M)).call(this));
                return Q.type = "swipe", Q.numInputs = O && O.numInputs ? O.numInputs : v, Q.maxRestTime = O && O.maxRestTime ? O.maxRestTime : D, Q.escapeVelocity = O && O.escapeVelocity ? O.escapeVelocity : S, Q.timeDistortion = O && O.timeDistortion ? O.timeDistortion : C, Q.maxProgressStack = O && O.maxProgressStack ? O.maxProgressStack : h, Q
            }
            return V(M, T), A(M, [{
                key: "move",
                value: function(O, Q, u) {
                    if (this.numInputs === O.length)
                        for (var J = 0; J < O.length; J++) {
                            var se = O[J].getGestureProgress(this.getId());
                            se.moves || (se.moves = []), se.moves.push({
                                time: new Date().getTime(),
                                x: O[J].current.x,
                                y: O[J].current.y
                            }), se.length > this.maxProgressStack && se.moves.shift()
                        }
                    return null
                }
            }, {
                key: "end",
                value: function(O) {
                    if (this.numInputs === O.length) {
                        for (var Q = {
                                data: []
                            }, u = 0; u < O.length; u++) {
                            if (O[u].current.type !== "end") return;
                            var J = O[u].getGestureProgress(this.getId());
                            if (J.moves && J.moves.length > 2) {
                                var se = J.moves.pop();
                                if (new Date().getTime() - se.time > this.maxRestTime) return null;
                                for (var te = void 0, ve = J.moves.length - 1; ve !== -1;) {
                                    if (J.moves[ve].time !== se.time) {
                                        te = J.moves[ve];
                                        break
                                    }
                                    ve--
                                }
                                te || (te = J.moves.pop(), te.time += this.timeDistortion);
                                var be = q.default.getVelocity(te.x, te.y, te.time, se.x, se.y, se.time);
                                Q.data[u] = {
                                    velocity: be,
                                    distance: q.default.distanceBetweenTwoPoints(te.x, se.x, te.y, se.y),
                                    duration: se.time - te.time,
                                    currentDirection: q.default.getAngle(te.x, te.y, se.x, se.y)
                                }
                            }
                        }
                        for (var u = 0; u < Q.data.length; u++)
                            if (be < this.escapeVelocity) return null;
                        if (Q.data.length > 0) return Q
                    }
                    return null
                }
            }]), M
        }(d.default);
    e.default = w
}, function(t, e, n) {
    function i(T) {
        return T && T.__esModule ? T : {
            default: T
        }
    }

    function o(T, M) {
        if (!(T instanceof M)) throw new TypeError("Cannot call a class as a function")
    }

    function r(T, M) {
        if (!T) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !M || typeof M != "object" && typeof M != "function" ? T : M
    }

    function V(T, M) {
        if (typeof M != "function" && M !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof M);
        T.prototype = Object.create(M && M.prototype, {
            constructor: {
                value: T,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), M && (Object.setPrototypeOf ? Object.setPrototypeOf(T, M) : T.__proto__ = M)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var A = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(T) {
            return typeof T
        } : function(T) {
            return T && typeof Symbol == "function" && T.constructor === Symbol && T !== Symbol.prototype ? "symbol" : typeof T
        },
        c = function() {
            function T(M, O) {
                for (var Q = 0; Q < O.length; Q++) {
                    var u = O[Q];
                    u.enumerable = u.enumerable || !1, u.configurable = !0, "value" in u && (u.writable = !0), Object.defineProperty(M, u.key, u)
                }
            }
            return function(M, O, Q) {
                return O && T(M.prototype, O), Q && T(M, Q), M
            }
        }(),
        d = n(4),
        m = i(d),
        q = n(5),
        v = i(q),
        D = 0,
        S = 300,
        C = 1,
        h = 10,
        w = function(T) {
            function M(O) {
                o(this, M);
                var Q = r(this, (M.__proto__ || Object.getPrototypeOf(M)).call(this));
                return Q.type = "tap", Q.minDelay = O && O.minDelay ? O.minDelay : D, Q.maxDelay = O && O.maxDelay ? O.maxDelay : S, Q.numInputs = O && O.numInputs ? O.numInputs : C, Q.tolerance = O && O.tolerance ? O.tolerance : h, Q
            }
            return V(M, T), c(M, [{
                key: "start",
                value: function(O) {
                    var Q = this;
                    return O.length === this.numInputs && O.forEach(function(u) {
                        var J = u.getGestureProgress(Q.type);
                        J.start = new Date().getTime()
                    }), null
                }
            }, {
                key: "move",
                value: function(O, Q, u) {
                    for (var J = this, se = 0; se < O.length; se++)
                        if (O[se].getCurrentEventType() === "move") {
                            var te = O[se].current,
                                ve = O[se].previous;
                            if (!v.default.isWithin(te.x, te.y, ve.x, ve.y, this.tolerance)) {
                                var be = function() {
                                    var oe = J.type;
                                    return O.forEach(function(Ie) {
                                        Ie.resetProgress(oe)
                                    }), {
                                        v: null
                                    }
                                }();
                                if ((typeof be > "u" ? "undefined" : A(be)) === "object") return be.v
                            }
                        } return null
                }
            }, {
                key: "end",
                value: function(O) {
                    var Q = this;
                    if (O.length !== this.numInputs) return null;
                    for (var u = Number.MAX_VALUE, J = 0; J < O.length; J++) {
                        if (O[J].getCurrentEventType() !== "end") return null;
                        var se = O[J].getGestureProgress(this.type);
                        if (!se.start) return null;
                        se.start < u && (u = se.start)
                    }
                    var te = new Date().getTime() - u;
                    if (this.minDelay <= te && this.maxDelay >= te) return {
                        interval: te
                    };
                    var ve = function() {
                        var be = Q.type;
                        return O.forEach(function(oe) {
                            oe.resetProgress(be)
                        }), {
                            v: null
                        }
                    }();
                    return (typeof ve > "u" ? "undefined" : A(ve)) === "object" ? ve.v : void 0
                }
            }]), M
        }(m.default);
    e.default = w
}, function(t, e) {
    function n(o, r) {
        if (!(o instanceof r)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = function o(r, V, A, c, d) {
        n(this, o), this.element = r, this.gesture = V, this.handler = A, this.capture = typeof c < "u" && c, this.bindOnce = typeof d < "u" && d
    };
    e.default = i
}, function(t, e, n) {
    function i(d) {
        return d && d.__esModule ? d : {
            default: d
        }
    }

    function o(d, m) {
        if (!(d instanceof m)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = function() {
            function d(m, q) {
                for (var v = 0; v < q.length; v++) {
                    var D = q[v];
                    D.enumerable = D.enumerable || !1, D.configurable = !0, "value" in D && (D.writable = !0), Object.defineProperty(m, D.key, D)
                }
            }
            return function(m, q, v) {
                return q && d(m.prototype, q), v && d(m, v), m
            }
        }(),
        V = n(19),
        A = i(V),
        c = function() {
            function d(m, q) {
                o(this, d);
                var v = new A.default(m, q);
                this.initial = v, this.current = v, this.previous = v, this.identifier = typeof q < "u" ? q : 0, this.progress = {}
            }
            return r(d, [{
                key: "update",
                value: function(m, q) {
                    this.previous = this.current, this.current = new A.default(m, q)
                }
            }, {
                key: "getGestureProgress",
                value: function(m) {
                    return this.progress[m] || (this.progress[m] = {}), this.progress[m]
                }
            }, {
                key: "getCurrentEventType",
                value: function() {
                    return this.current.type
                }
            }, {
                key: "resetProgress",
                value: function(m) {
                    this.progress[m] = {}
                }
            }]), d
        }();
    e.default = c
}, function(t, e, n) {
    function i(d) {
        return d && d.__esModule ? d : {
            default: d
        }
    }

    function o(d, m) {
        if (!(d instanceof m)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(5),
        V = i(r),
        A = 0,
        c = function d(m, q) {
            o(this, d), this.originalEvent = m, this.type = V.default.normalizeEvent(m.type), this.x = A, this.y = A;
            var v = void 0;
            if (m.touches && m.changedTouches) {
                for (var D = 0; D < m.changedTouches.length; D++)
                    if (m.changedTouches[D].identifier === q) {
                        v = m.changedTouches[D];
                        break
                    }
            } else v = m;
            this.x = this.clientX = v.clientX, this.y = this.clientY = v.clientY, this.pageX = v.pageX, this.pageY = v.pageY, this.screenX = v.screenX, this.screenY = v.screenY
        };
    e.default = c
}]);
var yi = ZingTouch;
const CT = je.View.extend({
        tagName: "div",
        className: "item",
        template: ke.template(""),
        triggers: {
            "change:isSelected": "change:isSelected"
        },
        bindings: {
            ":el": {
                classes: {
                    selected: "isSelected",
                    dragging: "isDragging"
                },
                attributes: [{
                    name: "class",
                    observe: ["className", "id"],
                    onGet([t, e]) {
                        return `${t} item-${e}`
                    }
                }, {
                    name: "style",
                    observe: ["top", "left", "rotation"],
                    onGet: "getStyle"
                }]
            }
        },
        initialize() {
            this.model.set({
                isSelected: !1
            })
        },
        onRender() {
            this.stickit()
        },
        getStyle(t) {
            const [e, n, i] = t;
            return `transform: translate(${n}px, ${e}px) rotate(${i}deg);`
        }
    }),
    RT = ze.Model.extend({
        defaults: {
            isPanning: !1,
            isSelected: !1,
            rotation: 0,
            top: 0,
            left: 0,
            originTop: null,
            originLeft: null,
            diffTop: null,
            diffLeft: null
        }
    }),
    DT = ze.Collection.extend({
        model: RT,
        draggingItem: null,
        topItemAtPoint(t, e, n) {
            for (let i = this.models.length - 1; i >= 0; i--) {
                const o = this.models[i].get("top"),
                    r = this.models[i].get("left");
                if (!(t < r) && !(t > r + n) && !(e < o) && !(e > o + n)) return this.models[i]
            }
            return !1
        },
        startDragging(t) {
            this.draggingItem = t, t.set({
                isDragging: !0
            }), this.bringToFront(t)
        },
        stopDragging() {
            this.draggingItem && this.draggingItem.set({
                isDragging: !1,
                velocity: 0
            }), this.draggingItem = !1
        },
        bringToFront(t) {
            const e = this.indexOf(t);
            e !== this.length - 1 && this.models.splice(this.length - 1, 0, this.models.splice(e, 1)[0])
        }
    }),
    ST = je.CollectionView.extend({
        tagName: "div",
        className: "items",
        childView: CT,
        collection: new DT
    }),
    TT = `<div class="clamp">
    <div class="info"></div>
    <div id="items-region"></div>
    <div id="gesture-ui"></div>
    <button class="button found">I FOUND IT!<div class="selected-item item"></div></button>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    ET = Ht.extend({
        defaults: {
            selected: null
        }
    }),
    LT = je.View.extend({
        className: "mechanic find captain",
        template: ke.template(TT),
        model: new ET,
        itemCount: 15,
        itemWidth: 120,
        itemsComponent: null,
        gestureRegion: null,
        isPanning: !1,
        ui: {
            gesture: null
        },
        regions: {
            items: "#items-region"
        },
        events: {
            "click .found": "onFoundClick",
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "participant",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Ask <span class="player-name ${t.avatar}">${t.name}</span> to describe the item you need to find.` : ""
                }
            },
            ".found": {
                classes: {
                    disabled: {
                        observe: "selected",
                        onGet(t) {
                            return t == null
                        }
                    }
                }
            },
            ".selected-item": {
                attributes: [{
                    name: "class",
                    observe: ["category", "selected"],
                    onGet([t, e]) {
                        return e == null ? "" : `${t.toLowerCase()} item-${e}`
                    }
                }]
            }
        },
        initialize() {
            this.itemsComponent = new ST, this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck), this.listenTo(this.model, "change:stepIndex", this.resetData), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                selected: null
            })
        },
        onRender() {
            this.showChildView("items", this.itemsComponent), this.stickit()
        },
        onAttach() {
            const t = this.getItems();
            this.itemsComponent.collection.set(t), this.stickit(), this.itemWidth = this.$el.find(".item")[0].clientWidth, this.ui.gesture = this.$el.find("#gesture-ui")[0], this.gestureRegion = new yi.Region(this.ui.gesture), this.scatterItems();
            const e = new yi.Pan;
            e.end = this.onPanEnd.bind(this), this.gestureRegion.bind(this.ui.gesture, e, this.onPan.bind(this)), this.gestureRegion.bind(this.ui.gesture, "tap", this.onTap.bind(this)), this.scatterItems()
        },
        onBeforeDestroy() {
            this.gestureRegion.unbind(this.ui.gesture)
        },
        onMistakeCheck(t) {
            !t.get("isWaiting") || (this.model.setUpdate({
                isWaiting: !1
            }), this.triggerMethod("result", {
                type: "fail",
                message: "TRY<br/>AGAIN"
            }))
        },
        getItems() {
            const t = this.model.get("itemIndices"),
                e = this.model.get("category"),
                n = t.map(i => ({
                    id: i,
                    className: e.toLowerCase()
                }));
            return ke.shuffle(n)
        },
        onFoundClick() {
            const t = this.model.get("selected");
            t !== void 0 && (this.model.setUpdate({
                isWaiting: !0
            }), this.triggerMethod("client:message", {
                action: "choose",
                item: t
            }))
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        onPanStart(t) {
            this.isPanning = !0;
            const e = this.ui.gesture.getBoundingClientRect(),
                n = t.detail.events[0].pageX - e.left,
                i = t.detail.events[0].pageY - e.top,
                o = this.itemsComponent.collection.topItemAtPoint(n, i, this.itemWidth);
            if (!o) return;
            const r = o.get("top"),
                V = o.get("left");
            o.set({
                isPanning: !0,
                originTop: i,
                originLeft: n,
                diffTop: r - i,
                diffLeft: V - n
            }), this.itemsComponent.collection.startDragging(o), this.itemsComponent.render()
        },
        onPan(t) {
            this.isPanning || this.onPanStart(t);
            const e = this.itemsComponent.collection.draggingItem;
            if (!e) return;
            const n = this.ui.gesture.getBoundingClientRect(),
                i = e.get("originTop"),
                o = e.get("originLeft"),
                r = e.get("diffTop"),
                V = e.get("diffLeft"),
                A = e.previous("left"),
                c = t.detail.data[0],
                d = (c.directionFromOrigin + 90) * (Math.PI / 180);
            let m = i + r + Math.cos(d) * c.distanceFromOrigin,
                q = o + V + Math.sin(d) * c.distanceFromOrigin,
                v = e.get("rotation");
            m > n.bottom - this.itemWidth && (m = n.bottom - this.itemWidth), q > n.right - this.itemWidth && (q = n.right - this.itemWidth), m < 0 && (m = 0), q < 0 && (q = 0), (A > q && v > -30 || A < q && v < 30) && (v += (q - A) / 20), e.set({
                top: m,
                left: q,
                rotation: v
            })
        },
        onPanEnd() {
            const t = this.itemsComponent.collection.draggingItem;
            if (this.isPanning = !1, this.itemsComponent.collection.stopDragging(), !t) return;
            let e = 0;
            const n = setInterval(() => {
                if (e > 20) {
                    window.clearInterval(n);
                    return
                }
                let i = t.get("rotation");
                i > 0 && (i -= .5), i < 0 && (i += .5), t.set({
                    rotation: i
                }), e += 1
            }, 10)
        },
        onTap(t) {
            const e = this.ui.gesture.getBoundingClientRect(),
                n = t.detail.events[0].pageX - e.left,
                i = t.detail.events[0].pageY - e.top,
                o = this.itemsComponent.collection.findWhere({
                    isSelected: !0
                }),
                r = this.itemsComponent.collection.topItemAtPoint(n, i, this.itemWidth);
            o && (o.set({
                isSelected: !1
            }), this.model.set({
                selected: null
            })), r && (r.set({
                isSelected: !0
            }), this.model.set({
                selected: r.get("id")
            }))
        },
        scatterItems() {
            const t = this.ui.gesture.getBoundingClientRect();
            this.itemsComponent.collection.each((e, n) => {
                e.set({
                    index: n,
                    top: this.getWeigthedRandom(t.height - this.itemWidth, 3),
                    left: this.getWeigthedRandom(t.width - this.itemWidth, 3),
                    rotation: ke.random(0, 60) - 30
                })
            })
        },
        getWeigthedRandom(t, e) {
            let n = 0;
            for (let i = 0; i < e; i++) n += Math.random() * (t / e);
            return n
        }
    }),
    BT = `<div class="clamp">
    <div class="info"></div>
    <div class="item"></div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    MT = je.View.extend({
        className: "mechanic find participant",
        template: ke.template(BT),
        model: new Ht({
            defaults: {
                selected: null
            }
        }),
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "captain",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Describe this item to <span class="player-name ${t.avatar}">${t.name}</span>.` : ""
                }
            },
            ".item": {
                attributes: [{
                    name: "class",
                    observe: ["category", "correctItemIndex"],
                    onGet([t, e]) {
                        return e === null ? "" : `${t.toLowerCase()} item-${e}`
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    OT = `<div class="scrollable">
    <div class="clamp">
        <div class="info">You have the instructions. Tell your gatherers what you need:</div>
        <div class="requirements"></div>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    IT = je.View.extend({
        className: "mechanic gather captain",
        template: ke.template(OT),
        model: new Ht,
        demoKey: "gather-captain",
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".instructions": {
                observe: "name",
                onGet(t) {
                    return `Gather items for ${t}`
                }
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".requirements": {
                observe: ["requiredItems", "gatheredItemIds"],
                updateMethod: "html",
                onGet(t) {
                    const [e, n] = t;
                    if (!e) return "";
                    let i = "";
                    const o = [],
                        r = e.map(V => V.id);
                    return n.forEach(V => {
                        r.includes(V.id) || o.push(V.name)
                    }), e.forEach(V => {
                        let A = "item";
                        n.find(c => c.id === V.id) && (A += " selected"), i += `<div class="${A}">${V.name} <em>${V.location||""}</em></div>`
                    }), o.length && (i += `<div class="extra-title">${o.length} unneeded ${o.length===1?"item":"items"} must be put back!</div>`, i += `<div class="item extra">${o.join(", ")}</div>`), i
                }
            }
        },
        onRender() {
            this.stickit()
        },
        onAttach() {
            this.checkForDemo()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        checkForDemo() {
            if (!this.demoKey) return;
            !Jt.get(`datd:demos:${this.demoKey}`) && (this.model.setUpdate({
                showDemo: !0
            }), Jt.set(`datd:demos:${this.demoKey}`, !0))
        }
    }),
    PT = je.View.extend({
        tagName: "button",
        className: "button item",
        template: ke.template(""),
        events: {
            click: "onClick"
        },
        bindings: {
            ":el": {
                observe: "name",
                classes: {
                    back: "isBack",
                    selected: "selected"
                },
                attributes: [{
                    name: "style",
                    observe: ["bgColor", "textColor"],
                    onGet([t, e]) {
                        let n = "";
                        return t && (n += `background-color: #${t};`), e && (n += `color: #${e};`), n
                    }
                }]
            }
        },
        onRender() {
            this.stickit()
        },
        onClick() {
            this.triggerMethod("button:select", this.model)
        }
    }),
    Gq = je.CollectionView.extend({
        tagName: "div",
        className: "items",
        childView: PT
    }),
    UT = `<div class="scrollable">
    <div class="clamp">
        <div class="room"></div>
        <div class="wrapper">
            <div class="containers-region"></div>
            <div class="contents-region"></div>
        </div>
    </div>
</div>
<div class="location"></div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    FT = Ht.extend({
        selectedContainer() {
            const t = this.get("selected");
            return t ? this.get("containers").find(n => n.id === t) : null
        }
    }),
    jT = je.View.extend({
        className: "mechanic gather participant",
        template: ke.template(UT),
        model: new FT,
        demoKey: "gather-participant",
        containersView: null,
        contentsView: null,
        regions: {
            containers: ".containers-region",
            contents: ".contents-region"
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ":el": {
                classes: {
                    "at-root": "atRoot"
                }
            },
            ".instructions": {
                observe: "name",
                onGet(t) {
                    return `Gather items for ${t}`
                }
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".room": {
                observe: ["locationName", "captain"],
                updateMethod: "html",
                onGet([t, e]) {
                    return e ? `Ask <span class="player-name ${e.avatar}">${e.name}</span> what you need to gather from ${t}` : ""
                }
            },
            ".location": {
                observe: "selected",
                onGet() {
                    const t = this.model.selectedContainer();
                    return t ? t.name : ""
                }
            },
            ".leave": {
                classes: {
                    back: {
                        observe: "atRoot",
                        onGet: t => !t
                    }
                }
            }
        },
        initialize() {
            this.model.set({
                selected: null,
                atRoot: !0
            }), this.containersView = new Gq({
                collection: new ze.Collection
            }), this.contentsView = new Gq({
                collection: new ze.Collection
            }), this.listenTo(this.model, "change", this.update, this)
        },
        update() {
            const t = this.model.get("containers"),
                e = t.map(V => ({
                    id: V.id,
                    name: V.name,
                    bgColor: V.bgColor,
                    textColor: V.textColor
                }));
            this.containersView.collection.set(e);
            const n = this.model.get("selected");
            if (!n) return;
            const i = t.find(V => V.id === n);
            if (!i) return;
            const o = this.model.get("gatheredItemIds").map(V => V.id),
                r = i.contents.map(V => ({
                    id: V.id,
                    name: V.name,
                    bgColor: V.bgColor,
                    textColor: V.textColor,
                    selected: o.includes(V.id)
                }));
            this.contentsView.collection.set(r)
        },
        onRender() {
            this.showChildView("containers", this.containersView), this.showChildView("contents", this.contentsView), this.stickit()
        },
        onAttach() {
            this.update(), this.checkForDemo()
        },
        onLeaveClick() {
            if (this.model.get("atRoot")) {
                this.triggerMethod("client:message", {
                    action: "leaveTask"
                });
                return
            }
            this.$el.find(".scrollable").scrollTop(0), this.model.set({
                selected: !1,
                atRoot: !0
            }), this.contentsView.collection.reset()
        },
        onChildviewChildviewButtonSelect(t) {
            if (this.model.get("atRoot")) {
                this.model.set({
                    atRoot: !1,
                    selected: t.id
                });
                return
            }
            this.triggerMethod("client:message", {
                action: "select",
                itemId: t.id
            }), t.set({
                selected: !t.get("selected")
            })
        },
        checkForDemo() {
            if (!this.demoKey) return;
            !Jt.get(`datd:demos:${this.demoKey}`) && (this.model.setUpdate({
                showDemo: !0
            }), Jt.set(`datd:demos:${this.demoKey}`, !0))
        }
    });
/*!
 * CustomEase 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var $n, s2, o2 = function() {
        return $n || typeof window < "u" && ($n = window.gsap) && $n.registerPlugin && $n
    },
    Xq = function() {
        $n = o2(), $n ? ($n.registerEase("_CE", Pi.create), s2 = 1) : console.warn("Please gsap.registerPlugin(CustomEase)")
    },
    QT = 1e20,
    vl = function(e) {
        return ~~(e * 1e3 + (e < 0 ? -.5 : .5)) / 1e3
    },
    zT = /[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi,
    HT = /[cLlsSaAhHvVtTqQ]/g,
    NT = function(e) {
        var n = e.length,
            i = QT,
            o;
        for (o = 1; o < n; o += 6) + e[o] < i && (i = +e[o]);
        return i
    },
    GT = function(e, n, i) {
        !i && i !== 0 && (i = Math.max(+e[e.length - 1], +e[1]));
        var o = +e[0] * -1,
            r = -i,
            V = e.length,
            A = 1 / (+e[V - 2] + o),
            c = -n || (Math.abs(+e[V - 1] - +e[1]) < .01 * (+e[V - 2] - +e[0]) ? NT(e) + r : +e[V - 1] + r),
            d;
        for (c ? c = 1 / c : c = -A, d = 0; d < V; d += 2) e[d] = (+e[d] + o) * A, e[d + 1] = (+e[d + 1] + r) * c
    },
    XT = function t(e, n, i, o, r, V, A, c, d, m, q) {
        var v = (e + i) / 2,
            D = (n + o) / 2,
            S = (i + r) / 2,
            C = (o + V) / 2,
            h = (r + A) / 2,
            w = (V + c) / 2,
            T = (v + S) / 2,
            M = (D + C) / 2,
            O = (S + h) / 2,
            Q = (C + w) / 2,
            u = (T + O) / 2,
            J = (M + Q) / 2,
            se = A - e,
            te = c - n,
            ve = Math.abs((i - A) * te - (o - c) * se),
            be = Math.abs((r - A) * te - (V - c) * se),
            oe;
        return m || (m = [{
            x: e,
            y: n
        }, {
            x: A,
            y: c
        }], q = 1), m.splice(q || m.length - 1, 0, {
            x: u,
            y: J
        }), (ve + be) * (ve + be) > d * (se * se + te * te) && (oe = m.length, t(e, n, v, D, T, M, u, J, d, m, q), t(u, J, O, Q, h, w, A, c, d, m, q + 1 + (m.length - oe))), m
    },
    Pi = function() {
        function t(n, i, o) {
            s2 || Xq(), this.id = n, this.setData(i, o)
        }
        var e = t.prototype;
        return e.setData = function(i, o) {
            o = o || {}, i = i || "0,0,1,1";
            var r = i.match(zT),
                V = 1,
                A = [],
                c = [],
                d = o.precision || 1,
                m = d <= 1,
                q, v, D, S, C, h, w, T, M;
            if (this.data = i, (HT.test(i) || ~i.indexOf("M") && i.indexOf("C") < 0) && (r = Mi(i)[0]), q = r.length, q === 4) r.unshift(0, 0), r.push(1, 1), q = 8;
            else if ((q - 2) % 6) throw "Invalid CustomEase";
            for ((+r[0] != 0 || +r[q - 2] != 1) && GT(r, o.height, o.originY), this.segment = r, S = 2; S < q; S += 6) v = {
                x: +r[S - 2],
                y: +r[S - 1]
            }, D = {
                x: +r[S + 4],
                y: +r[S + 5]
            }, A.push(v, D), XT(v.x, v.y, +r[S], +r[S + 1], +r[S + 2], +r[S + 3], D.x, D.y, 1 / (d * 2e5), A, A.length - 1);
            for (q = A.length, S = 0; S < q; S++) w = A[S], T = A[S - 1] || w, (w.x > T.x || T.y !== w.y && T.x === w.x || w === T) && w.x <= 1 ? (T.cx = w.x - T.x, T.cy = w.y - T.y, T.n = w, T.nx = w.x, m && S > 1 && Math.abs(T.cy / T.cx - A[S - 2].cy / A[S - 2].cx) > 2 && (m = 0), T.cx < V && (T.cx ? V = T.cx : (T.cx = .001, S === q - 1 && (T.x -= .001, V = Math.min(V, .001), m = 0)))) : (A.splice(S--, 1), q--);
            if (q = 1 / V + 1 | 0, C = 1 / q, h = 0, w = A[0], m) {
                for (S = 0; S < q; S++) M = S * C, w.nx < M && (w = A[++h]), v = w.y + (M - w.x) / w.cx * w.cy, c[S] = {
                    x: M,
                    cx: C,
                    y: v,
                    cy: 0,
                    nx: 9
                }, S && (c[S - 1].cy = v - c[S - 1].y);
                c[q - 1].cy = A[A.length - 1].y - v
            } else {
                for (S = 0; S < q; S++) w.nx < S * C && (w = A[++h]), c[S] = w;
                h < A.length - 1 && (c[S - 1] = A[A.length - 2])
            }
            return this.ease = function(O) {
                var Q = c[O * q | 0] || c[q - 1];
                return Q.nx < O && (Q = Q.n), Q.y + (O - Q.x) / Q.cx * Q.cy
            }, this.ease.custom = this, this.id && $n.registerEase(this.id, this.ease), this
        }, e.getSVGData = function(i) {
            return t.getSVGData(this, i)
        }, t.create = function(i, o, r) {
            return new t(i, o, r).ease
        }, t.register = function(i) {
            $n = i, Xq()
        }, t.get = function(i) {
            return $n.parseEase(i)
        }, t.getSVGData = function(i, o) {
            o = o || {};
            var r = o.width || 100,
                V = o.height || 100,
                A = o.x || 0,
                c = (o.y || 0) + V,
                d = $n.utils.toArray(o.path)[0],
                m, q, v, D, S, C, h, w, T, M;
            if (o.invert && (V = -V, c = 0), typeof i == "string" && (i = $n.parseEase(i)), i.custom && (i = i.custom), i instanceof t) m = Ds(ea([i.segment], r, 0, 0, -V, A, c));
            else {
                for (m = [A, c], h = Math.max(5, (o.precision || 1) * 200), D = 1 / h, h += 2, w = 5 / h, T = vl(A + D * r), M = vl(c + i(D) * -V), q = (M - c) / (T - A), v = 2; v < h; v++) S = vl(A + v * D * r), C = vl(c + i(v * D) * -V), (Math.abs((C - M) / (S - T) - q) > w || v === h - 1) && (m.push(T, M), q = (C - M) / (S - T)), T = S, M = C;
                m = "M" + m.join(",")
            }
            return d && d.setAttribute("d", m), m
        }, t
    }();
o2() && $n.registerPlugin(Pi);
Pi.version = "3.7.0";
/*!
 * Physics2DPlugin 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var ro, ru, a2, Yq = Math.PI / 180,
    r2 = function() {
        return ro || typeof window < "u" && (ro = window.gsap) && ro.registerPlugin && ro
    },
    Kq = function(e) {
        return Math.round(e * 1e4) / 1e4
    },
    Wq = function(e) {
        ro = e || r2(), ru || (a2 = ro.utils.getUnit, ru = 1)
    },
    Jq = function(e, n, i, o, r) {
        var V = e._gsap,
            A = V.get(e, n);
        this.p = n, this.set = V.set(e, n), this.s = this.val = parseFloat(A), this.u = a2(A) || 0, this.vel = i || 0, this.v = this.vel / r, o || o === 0 ? (this.acc = o, this.a = this.acc / (r * r)) : this.acc = this.a = 0
    },
    V2 = {
        version: "3.7.0",
        name: "physics2D",
        register: Wq,
        init: function(e, n, i) {
            ru || Wq();
            var o = this,
                r = +n.angle || 0,
                V = +n.velocity || 0,
                A = +n.acceleration || 0,
                c = n.xProp || "x",
                d = n.yProp || "y",
                m = n.accelerationAngle || n.accelerationAngle === 0 ? +n.accelerationAngle : r;
            o.target = e, o.tween = i, o.step = 0, o.sps = 30, n.gravity && (A = +n.gravity, m = 90), r *= Yq, m *= Yq, o.fr = 1 - (+n.friction || 0), o._props.push(c, d), o.xp = new Jq(e, c, Math.cos(r) * V, Math.cos(m) * A, o.sps), o.yp = new Jq(e, d, Math.sin(r) * V, Math.sin(m) * A, o.sps), o.skipX = o.skipY = 0
        },
        render: function(e, n) {
            var i = n.xp,
                o = n.yp,
                r = n.tween,
                V = n.target,
                A = n.step,
                c = n.sps,
                d = n.fr,
                m = n.skipX,
                q = n.skipY,
                v = r._from ? r._dur - r._time : r._time,
                D, S, C, h, w, T;
            if (d === 1) C = v * v * .5, D = i.s + i.vel * v + i.acc * C, S = o.s + o.vel * v + o.acc * C;
            else {
                for (v *= c, h = T = (v | 0) - A, T < 0 && (i.v = i.vel / c, o.v = o.vel / c, i.val = i.s, o.val = o.s, n.step = 0, h = T = v | 0), w = v % 1 * d; T--;) i.v += i.a, o.v += o.a, i.v *= d, o.v *= d, i.val += i.v, o.val += o.v;
                D = i.val + i.v * w, S = o.val + o.v * w, n.step += h
            }
            m || i.set(V, i.p, Kq(D) + i.u), q || o.set(V, o.p, Kq(S) + o.u)
        },
        kill: function(e) {
            this.xp.p === e && (this.skipX = 1), this.yp.p === e && (this.skipY = 1)
        }
    };
r2() && ro.registerPlugin(V2);
/*!
 * CustomWiggle 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var Ti, Vu, jr, l2 = function() {
        return Ti || typeof window < "u" && (Ti = window.gsap) && Ti.registerPlugin && Ti
    },
    pa = {
        easeOut: "M0,1,C0.7,1,0.6,0,1,0",
        easeInOut: "M0,0,C0.1,0,0.24,1,0.444,1,0.644,1,0.6,0,1,0",
        anticipate: "M0,0,C0,0.222,0.024,0.386,0,0.4,0.18,0.455,0.65,0.646,0.7,0.67,0.9,0.76,1,0.846,1,1",
        uniform: "M0,0,C0,0.95,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0"
    },
    YT = function(e) {
        return e
    },
    A2 = function(e) {
        if (!Vu)
            if (Ti = l2(), jr = Ti && Ti.parseEase("_CE"), jr) {
                for (var n in pa) pa[n] = jr("", pa[n]);
                Vu = 1, Qr("wiggle").config = function(i) {
                    return typeof i == "object" ? Qr("", i) : Qr("wiggle(" + i + ")", {
                        wiggles: +i
                    })
                }
            } else e && console.warn("Please gsap.registerPlugin(CustomEase, CustomWiggle)")
    },
    Zq = function(e, n) {
        return typeof e != "function" && (e = Ti.parseEase(e) || jr("", e)), e.custom || !n ? e : function(i) {
            return 1 - e(i)
        }
    },
    Qr = function(e, n) {
        Vu || A2(1), n = n || {};
        var i = (n.wiggles || 10) | 0,
            o = 1 / i,
            r = o / 2,
            V = n.type === "anticipate",
            A = pa[n.type] || pa.easeOut,
            c = YT,
            d = 1e3,
            m, q, v, D, S, C, h, w, T; {
            if (V && (c = A, A = pa.easeOut), n.timingEase && (c = Zq(n.timingEase)), n.amplitudeEase && (A = Zq(n.amplitudeEase, !0)), C = c(r), h = V ? -A(r) : A(r), w = [0, 0, C / 4, 0, C / 2, h, C, h], n.type === "random") {
                for (w.length = 4, m = c(o), q = Math.random() * 2 - 1, T = 2; T < i; T++) r = m, h = q, m = c(o * T), q = Math.random() * 2 - 1, v = Math.atan2(q - w[w.length - 3], m - w[w.length - 4]), D = Math.cos(v) * o, S = Math.sin(v) * o, w.push(r - D, h - S, r, h, r + D, h + S);
                w.push(m, 0, 1, 0)
            } else {
                for (T = 1; T < i; T++) w.push(c(r + o / 2), h), r += o, h = (h > 0 ? -1 : 1) * A(T * o), C = c(r), w.push(c(r - o / 2), h, C, h);
                w.push(c(r + o / 4), h, c(r + o / 4), 0, 1, 0)
            }
            for (T = w.length; --T > -1;) w[T] = ~~(w[T] * d) / d;
            return w[2] = "C" + w[2], jr(e, "M" + w.join(","))
        }
    },
    Cn = function() {
        function t(e, n) {
            this.ease = Qr(e, n)
        }
        return t.create = function(n, i) {
            return Qr(n, i)
        }, t.register = function(n) {
            Ti = n, A2()
        }, t
    }();
l2() && Ti.registerPlugin(Cn);
Cn.version = "3.7.0";
s.registerPlugin(Cn);
const kn = class {
    static getSelector(e) {
        return e[0] === "." || e[0] === "#" ? e : `.e.${e}`
    }
    static elementsFromImages(...e) {
        return e.map(n => typeof n == "string" ? {
            class: n,
            type: "img",
            pos: [0, 0],
            key: n
        } : {
            class: n[1] || n[0],
            type: "img",
            pos: n[2] || [0, 0],
            key: n[0]
        })
    }
    static elementsFromSprite(e, n) {
        return n.map(i => typeof i == "string" ? {
            class: i,
            type: "sprite",
            pos: [0, 0, !0],
            image: i,
            sprite: e
        } : {
            class: i[1] || i[0],
            type: "sprite",
            pos: i[2] || [0, 0, !0],
            image: i[0],
            sprite: e
        })
    }
    static startHoldShake(e, n, i) {
        e = kn.getSelector(e), s.to(e, {
            scale: "-=0.05",
            duration: .25
        }), kn.startShake(e, n, i)
    }
    static stopHoldShake(e) {
        e = kn.getSelector(e), s.to(e, {
            scale: "+=0.05",
            duration: .25
        }), kn.stopShake(e)
    }
    static startShake(e, n, i, o) {
        e = kn.getSelector(e);
        const r = n || 2,
            V = i || 0,
            A = o || 1;
        s.timeline({
            ease: "linear",
            repeat: -1,
            yoyo: !0,
            transformOrigin: "50% 50%"
        }).timeScale(A).to(e, {
            x: `+=${r}`,
            y: `+=${r}`,
            rotate: `+=${V}`,
            duration: .1
        }).to(e, {
            x: `-=${r}`,
            y: `+=${r}`,
            rotate: `-=${V}`,
            duration: .1
        }).to(e, {
            x: `+=${r}`,
            y: `-=${r}`,
            rotate: `-=${V}`,
            duration: .1
        }).to(e, {
            x: `-=${r}`,
            y: `-=${r}`,
            rotate: `+=${V}`,
            duration: .1
        }).to(e, {
            x: `-=${r}`,
            y: `+=${r}`,
            rotate: `+=${V}`,
            duration: .1
        }).to(e, {
            x: `+=${r}`,
            y: `-=${r}`,
            rotate: `-=${V}`,
            duration: .1
        }).to(e, {
            x: `-=${r}`,
            y: `-=${r}`,
            rotate: `-=${V}`,
            duration: .1
        }).to(e, {
            x: `-=${r}`,
            y: `+=${r}`,
            rotate: `+=${V}`,
            duration: .1
        }).to(e, {
            x: `+=${r}`,
            y: `+=${r}`,
            rotate: `+=${V}`,
            duration: .1
        })
    }
    static stopShake(e) {
        e = kn.getSelector(e), s.killTweensOf(e, "x,y,rotation")
    }
    static addInfiniteWiggle(e) {
        if (typeof e == "string" && (e = [e]), !e) {
            Cn.create("xWiggle-s", {
                wiggles: 40,
                type: "random"
            }), Cn.create("yWiggle-s", {
                wiggles: 40,
                type: "random"
            }), s.timeline({
                repeat: -1
            }).to(".scene-container", {
                x: 10,
                duration: 30,
                ease: "xWiggle-s"
            }).to(".scene-container", {
                y: 10,
                duration: 30,
                ease: "yWiggle-s"
            }, 0);
            return
        }
        for (let n = 0; n < e.length; n++) {
            Cn.create(`xWiggle-${n}`, {
                wiggles: 40,
                type: "random"
            }), Cn.create(`yWiggle-${n}`, {
                wiggles: 40,
                type: "random"
            });
            const i = kn.getSelector(e[n]);
            s.timeline({
                repeat: -1
            }).to(i, {
                x: 10,
                duration: 30,
                ease: `xWiggle-${n}`
            }).to(i, {
                y: 10,
                duration: 30,
                ease: `yWiggle-${n}`
            }, 0)
        }
    }
    static scaleBounce(e, n = .9, i = .25) {
        return e = kn.getSelector(e), s.timeline().to(e, {
            scale: n,
            duration: i
        }).to(e, {
            scale: 1,
            duration: i
        })
    }
    static squashTransition(e, n, i = 1, o = 1) {
        const r = kn.getSelector(e),
            V = kn.getSelector(n),
            A = [r, V];
        return s.timeline().to(A, {
            scaleY: 1.2,
            duration: i * .5
        }).to(A, {
            scaleX: 1.2,
            scaleY: .8,
            duration: i * .25
        }).set(r, {
            hidden: !0
        }).set(V, {
            hidden: !1
        }).to(V, {
            scale: o,
            duration: i * .25
        })
    }
    static squashOnce(e, n = .15, i = "x") {
        return e = kn.getSelector(e), s.timeline().to(e, {
            scaleX: i === "x" ? 1 : 1.2,
            scaleY: i === "x" ? 1.2 : 1,
            duration: n * .33
        }).to(e, {
            scaleX: i === "x" ? 1.2 : .8,
            scaleY: i === "x" ? .8 : 1.2,
            duration: n * .33
        }).to(e, {
            scaleX: 1,
            scaleY: 1,
            duration: n * .33
        })
    }
    static fallOut(e, n) {
        e = kn.getSelector(e);
        const i = s.timeline().to(e, {
                y: "-=300",
                duration: n * .95,
                ease: "power2.out"
            }).to(e, {
                y: "+=1000",
                duration: n * .05,
                ease: "power3.in"
            }).set(e, {
                visibility: "hidden"
            }),
            o = s.timeline().to(e, {
                scaleY: .8,
                duration: n * .95,
                ease: "power2.out"
            }).to(e, {
                scaleY: 2,
                duration: n * .05,
                ease: "power3.in"
            }),
            r = s.timeline();
        return r.add(i), r.add(o, 0), r
    }
    static fadeAway(e, {
        y: n = -500,
        duration: i = .5,
        ease: o = "power2.in"
    } = {}) {
        return e = kn.getSelector(e), s.timeline().to(e, {
            y: n,
            duration: i,
            ease: o,
            opacity: 0
        })
    }
    static addParticleEmitter({
        container: e = "scene-box",
        className: n = "particle",
        image: i = !1,
        autoplay: o = !0,
        numberOfParticles: r = 50,
        restartOnProgress: V = !1,
        zIndex: A = 1,
        settings: c = {}
    }, d) {
        const m = {
            boundaries: {
                left: 500,
                right: 500,
                top: 500,
                bottom: 500
            },
            from: {
                opacity: 1,
                backgroundColor: i ? "" : "white",
                borderRadius: i ? "" : "50%"
            },
            to: {
                opacity: 0
            },
            angle: 0,
            randomAngle: !0,
            randomAngleRange: 0,
            frequency: .1,
            force: 1,
            gravity: 9.8,
            particleLimit: -1,
            minSize: 20,
            maxSize: 100,
            fullThrottle: !1
        };
        c = ke.extend({}, m, c), c.boundaries = ke.extend({}, m.boundaries, c.boundaries), c.from = ke.extend({}, m.from, c.from), c.to = ke.extend({}, m.to, c.to);
        const {
            frequency: q,
            particleLimit: v,
            fullThrottle: D
        } = c;
        let S = 1;
        const C = () => {
                const M = document.getElementsByClassName(e);
                if (!e || M === void 0 || M.length <= 0) return !1;
                const O = document.createElement("div");
                O.setAttribute("class", "particle-emitter"), M[0].appendChild(O);
                const Q = document.getElementsByClassName("particle-emitter");
                let u;
                i && (u = document.getElementsByClassName(i), u.length > 0 && (u[0].style.display = "none"));
                const J = document.getElementsByClassName(n);
                for (; J[0];) J[0].parentNode.removeChild(J[0]);
                for (let se = 1; se < r; se++) {
                    let te;
                    i && u.length > 0 ? (te = document.createElement("img"), te.setAttribute("src", u[0].src)) : te = document.createElement("div"), te.setAttribute("class", n), te.style.zIndex = A, te.style.position = "absolute", te.style.display = "none", Q[0].appendChild(te)
                }
                return !0
            },
            h = M => {
                let {
                    angle: O,
                    from: Q,
                    to: u
                } = c;
                const {
                    boundaries: J,
                    force: se,
                    gravity: te,
                    randomAngle: ve,
                    randomAngleRange: be,
                    minSize: oe,
                    maxSize: Ie
                } = c, Y = ke.random(oe, Ie), re = M[S];
                !O && ve && (be > 0 ? O = ke.random(-be, be) : O = ke.random(0, 360));
                const ue = (O + 90) * (Math.PI / 180),
                    fe = {
                        x: ke.random(J.left, J.right),
                        y: ke.random(J.top, J.bottom),
                        height: Y,
                        width: Y,
                        display: "block",
                        rotate: `${O}deg`
                    },
                    qe = {
                        overwrite: !0,
                        duration: (Math.random() * (1 - 2.5) + 2.5).toFixed(2),
                        physics2D: {
                            angle: ue * 180 / Math.PI,
                            velocity: (100 + Math.random() * 250) * se,
                            gravity: 1e3 * te
                        }
                    };
                return Q = ke.extend({}, fe, Q), u = ke.extend({}, qe, u), S += 1, S >= r && (S = 1), re && (s.set(re, Q), s.to(re, u)), re
            };
        C();
        const w = document.getElementsByClassName(n),
            T = s.timeline({
                repeat: v > 0 ? v - 1 : v,
                duration: q,
                paused: !o,
                overwrite: !0
            }).call(h, [w], null);
        return kn.emitters.push(T), V && !d && console.warn("restartOnProgress will not work without a reference to a scene"), V && d && d.listenTo(d.model, "change:progress", (M, O) => {
            D ? O >= 100 ? T.pause() : T.play() : ke.contains([25, 33, 50, 67, 75, 100], Math.round(O)) && ke.throttle(T.invalidate().restart(), 500)
        }), T
    }
};
let a = kn;
at(a, "emitters", []);
s.registerPlugin(Pi, V2);
const E = je.View.extend({
        className: "scene-container",
        debug: !1,
        template: ke.template('<div class="loading"></div>'),
        timeline: null,
        imageManifest: {},
        sprites: [],
        elements: [],
        isLoaded: !1,
        isLoading: !1,
        stepDuration: 0,
        lastStepDuration: null,
        usesTimeline: !0,
        shouldWiggle: !0,
        isFullScreen: !1,
        initialize() {
            this.initGSAPEffects(), this.lastStepDuration === null && (this.lastStepDuration = this.stepDuration), this.listenTo(this.model, "change:progress", this.onProgressChange), this.load()
        },
        onBeforeDestroy() {
            this.timeline && this.timeline.kill(), s.killTweensOf("*"), s.globalTimeline.timeScale(1), a.emitters.forEach(t => t.kill()), a.emitters = []
        },
        async load() {
            if (this.isLoaded || this.isLoading) return;
            this.isLoading = !0, typeof this.elements == "function" && (this.elements = this.elements()), this.imageManifest || (console.warn("imageManifest is not defined"), this.imageManifest = {});
            const t = this.getImageElements(),
                e = await Promise.all(t.map(i => {
                    if (!i.key) throw new Error(`No item with key of ${i.key} exists in imageManifest`);
                    return this.imageManifest[i.key]
                })),
                n = {};
            for (let i = 0; i < this.elements.length; i++) {
                const o = this.elements[i];
                if (o.type === "sprite") {
                    n[o.sprite] || (n[o.sprite] = this.getImagePath(e)), o.path = n[o.sprite];
                    continue
                }
                if (o.type === "img") {
                    o.path = this.getImagePath(e);
                    continue
                }
                if (o.type === "container") {
                    const r = o.children;
                    for (let V = 0; V < r.length; V++) {
                        if (r[V].type === "sprite") {
                            n[r[V].sprite] || (n[r[V].sprite] = this.getImagePath(e)), r[V].path = n[r[V].sprite];
                            continue
                        }
                        r[V].type === "img" && (r[V].path = this.getImagePath(e))
                    }
                }
            }
            this.isLoading = !1, this.isLoaded = !0, this.onLoad()
        },
        getImagePath(t) {
            return t.shift() || ""
        },
        getImageElements() {
            const t = [],
                e = [];
            for (let n = 0; n < this.elements.length; n++) {
                const i = this.elements[n];
                if (i.type === "sprite" && !e.includes(i.sprite)) {
                    if (!this.sprites) throw new Error("No sprites object defined");
                    if (!this.sprites[i.sprite]) throw new Error(`No sprite exists with key ${i.sprite}`);
                    i.key = i.sprite, t.push(this.sprites[i.sprite]), e.push(i.sprite);
                    continue
                }
                if (i.type === "img") {
                    t.push(i);
                    continue
                }
                if (i.type === "container") {
                    const o = i.children;
                    for (let r = 0; r < o.length; r++) {
                        if (o[r].type === "sprite" && !e.includes(o[r].sprite)) {
                            o[r].key = o[r].sprite, t.push(this.sprites[o[r].sprite]), e.push(o[r].sprite);
                            continue
                        }
                        o[r].type === "img" && t.push(o[r])
                    }
                }
            }
            return t
        },
        renderElements() {
            if (!this.isLoaded) throw new Error("Scene not loaded");
            let t = "";
            for (let e = 0; e < this.elements.length; e++) {
                const n = this.elements[e];
                if (n.pos || (n.pos = [0, 0]), n.type === "img") {
                    t += this.getImgHTML(n);
                    continue
                }
                if (n.type === "sprite") {
                    t += this.getSpriteHTML(n);
                    continue
                }
                if (n.type === "div") {
                    t += this.getDivHTML(n);
                    continue
                }
                if (n.type === "container") {
                    t += this.getContainerHTML(n);
                    continue
                }
                console.warn(`Unknown element type ${n.type}`)
            }
            this.debug && (t += '<div class="debug"></div>'), this.$el.html(t), this.shouldWiggle && a.addInfiniteWiggle()
        },
        getImgHTML(t) {
            return `<img class="e ${t.class}" style="top: ${t.pos[0]}px; left: ${t.pos[1]}px;" src="${t.path}" alt="element" />
`
        },
        getSpriteHTML(t) {
            const e = this.sprites[t.sprite];
            if (!e) throw new Error(`Sprite with name ${t.sprite} does not exist`);
            return e.grid ? this.getGridSpriteHTML(t, e) : this.getPackedSpriteHTML(t, e)
        },
        getGridSpriteHTML(t, e) {
            const n = e.images[t.image],
                i = `top: ${t.pos[0]}px`,
                o = `left: ${t.pos[1]}px`,
                r = `width: ${e.size[0]/e.grid[0]}px`,
                V = `height: ${e.size[1]/e.grid[1]}px`,
                A = `background-image: url(${t.path})`,
                c = e.grid[0] === 1 ? 0 : n[0] / (e.grid[0] - 1) * 100,
                d = e.grid[1] === 1 ? 0 : n[1] / (e.grid[1] - 1) * 100,
                m = `background-position: ${c}% ${d}%`;
            return `<div class="e e-sprite ${t.class}" style="${i}; ${o}; ${r}; ${V}; ${A}; ${m};"></div>`
        },
        getPackedSpriteHTML(t, e) {
            const n = e.images[t.image];
            if (!n) throw new Error(`Unknown Sprite Key: sprite ${e} has no image named ${t.image}`);
            const i = t.pos[2] && n[4] !== void 0 ? `top: ${n[4]}px` : `top: ${t.pos[0]}px`,
                o = t.pos[2] && n[5] !== void 0 ? `left: ${n[5]}px` : `left: ${t.pos[1]}px`,
                r = `width: ${n[2]}px`,
                V = `height: ${n[3]}px`,
                A = `background-image: url(${t.path})`,
                c = n[0],
                d = n[1],
                m = `background-position: -${c}px -${d}px`;
            return `<div class="e e-sprite ${t.class}" style="${i}; ${o}; ${r}; ${V}; ${A}; ${m};"></div>`
        },
        getDivHTML(t) {
            return `<div class="e ${t.class}" style="top: ${t.pos[0]}px; left: ${t.pos[1]}px;">${t.html||""}</div>
`
        },
        getContainerHTML(t) {
            const e = t.children;
            let n = `<div class="e e-container ${t.class}" style="top: ${t.pos[0]}px; left: ${t.pos[1]}px; width: 1000px; height: 1000px;">
`;
            for (let i = 0; i < e.length; i++) {
                const o = e[i];
                if (o.pos || (o.pos = [0, 0]), o.type === "img") {
                    n += this.getImgHTML(o);
                    continue
                }
                if (o.type === "sprite") {
                    n += this.getSpriteHTML(o);
                    continue
                }
                if (o.type === "div") {
                    n += this.getDivHTML(o);
                    continue
                }
                if (o.type === "container") {
                    console.warn("Nested containers are not supported");
                    continue
                }
                console.warn(`Unknown element type ${o.type}`)
            }
            return n += `</div>
`, n
        },
        initGSAPEffects() {
            s.registerEffect({
                name: "fillTime",
                effect: t => s.to(".scene-container", {
                    visibility: !0,
                    duration: t[0]
                }),
                extendTimeline: !0
            }), s.registerEffect({
                name: "swapHidden",
                effect: t => s.timeline().set(t[1], {
                    visibility: "visible"
                }).set(t[0], {
                    visibility: "hidden"
                }),
                extendTimeline: !0
            })
        },
        onLoad() {
            this.renderElements(), this.stickit(), this.usesTimeline && (this.initializeRootTimeline(), this.initializeTimeline(), this.debug && this.initializeDebug()), this.onLoadComplete()
        },
        onProgressChange(t, e) {
            if (!this.timeline) return;
            const n = e / 100;
            this.stepDuration ? s.to(this.timeline, {
                progress: n,
                duration: this.stepDuration
            }) : this.timeline.progress(n)
        },
        onLoadComplete() {},
        onStartProgress() {},
        onProgress() {},
        onStopProgress() {},
        onDiscreteProgress() {},
        onMistake() {},
        initializeRootTimeline() {
            this.timeline = s.timeline({
                paused: !0,
                ease: "none"
            }), this.timeline.name = "root"
        },
        initializeTimeline() {},
        initializeDebug() {
            this.logTimelineDetails(), this.timeline.eventCallback("onUpdate", this.onTimelineUpdate.bind(this)), this.onTimelineUpdate()
        },
        logTimelineDetails() {
            const t = this.timeline.getChildren(!1, !1, !0);
            console.group(this.timeline.name, this.timeline), console.log("startTime", this.timeline.startTime()), console.log("endTime", this.timeline.endTime()), console.log("totalDuration", this.timeline.totalDuration()), t.forEach(e => {
                console.group(e.name, e), console.log("startTime", e.startTime()), console.log("endTime", e.endTime()), console.log("totalDuration", e.totalDuration()), console.groupEnd()
            }), console.groupEnd()
        },
        onTimelineUpdate() {
            const t = this.timeline.getChildren(!1, !1, !0);
            let e = `
            <table>
                <thead>
                    <tr>
                        <th>name</th>
                        <th>start</th>
                        <th>end</th>
                        <th>duration</th>
                        <th>time</th>
                        <th>progress</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>${this.timeline.name}</td>
                        <td>${this.timeline.startTime().toFixed(2)}</td>
                        <td>${this.timeline.endTime().toFixed(2)}</td>
                        <td>${this.timeline.totalDuration()}</td>
                        <td>${this.timeline.time().toFixed(2)}</td>
                        <td>${this.timeline.progress().toFixed(2)}</td>
                    </tr>
        `;
            t.forEach(n => {
                e += `
                <tr>
                    <td>${n.name}</td>
                    <td>${n.startTime().toFixed(2)}</td>
                    <td>${n.endTime().toFixed(2)}</td>
                    <td>${n.totalDuration()}</td>
                    <td>${n.time().toFixed(2)}</td>
                    <td>${n.progress().toFixed(2)}</td>
                </tr>
            `
            }), e += "</tbody></table>", this.$el.find(".debug").html(e)
        },
        addParticleEmitter(t) {
            a.addParticleEmitter(t, this)
        }
    }),
    c2 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/0ad227e5.png", self.location).href,
            meal: new URL("main/pp7/everyday/assets/4631a99c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    bowlFront: [10, 308, 396, 276, 486, 302],
                    spoon: [416, 10, 152, 482, 249, 424],
                    bowlBack: [10, 10, 396, 288, 474, 302]
                }
            }
        }
    }),
    r0 = c2.extend({
        elements: a.elementsFromSprite("sprite", ["bowlBack", "spoon", "bowlFront"]),
        onLoadComplete() {
            s.fromTo(".e.spoon", {
                y: -300,
                transformOrigin: "bottom center"
            }, {
                y: 0,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.spoon", {
                x: 25,
                rotate: 12,
                ease: "power2.out"
            }).to(".e.spoon", {
                x: -25,
                rotate: -12,
                ease: "power2.inOut"
            }).to(".e.spoon", {
                x: 25,
                rotate: 12,
                ease: "power2.inOut"
            }).to(".e.spoon", {
                x: -25,
                rotate: -12,
                ease: "power2.inOut"
            }).to(".e.spoon", {
                x: 25,
                rotate: 12,
                ease: "power2.inOut"
            }).to(".e.spoon", {
                x: -25,
                rotate: -12,
                ease: "power2.in"
            })
        }
    }),
    V0 = c2.extend({
        elements: a.elementsFromImages("meal")
    }),
    KT = V0,
    WT = V0,
    l0 = E.extend({
        imageManifest: {
            cake1: new URL("main/pp7/everyday/assets/c697314d.png", self.location).href,
            cake2: new URL("main/pp7/everyday/assets/1ce64a09.png", self.location).href,
            cake3: new URL("main/pp7/everyday/assets/06c8ac05.png", self.location).href
        }
    }),
    JT = l0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("cake1", "cake2"),
        onLoadComplete() {
            s.set(".e.cake2", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cake2", {
                opacity: .5
            }).to(".e.cake2", {
                opacity: 1
            })
        }
    }),
    ZT = l0.extend({
        elements: a.elementsFromImages("cake2", "cake3"),
        onLoadComplete() {
            s.set(".e.cake3", {
                clipPath: "inset(100% 0 0 0)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cake3", {
                clipPath: "inset(0% 0 0 0)"
            })
        }
    }),
    _T = l0.extend({
        elements: a.elementsFromImages("cake3")
    }),
    d2 = E.extend({
        className: "channel-surf",
        imageManifest: {
            tv: new URL("main/pp7/everyday/assets/2ad26346.png", self.location).href,
            tvRemote: new URL("main/pp7/everyday/assets/b115e1da.png", self.location).href,
            tvStatic: new URL("main/pp7/everyday/assets/8a8cde63.png", self.location).href,
            tv0: new URL("main/pp7/everyday/assets/df830c26.png", self.location).href,
            tv1: new URL("main/pp7/everyday/assets/b862c36a.png", self.location).href,
            tv2: new URL("main/pp7/everyday/assets/53f3239b.png", self.location).href
        }
    }),
    _q = d2.extend({
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    waiting: "isWaiting"
                }
            }
        },
        elements: [{
            class: "tv-container",
            type: "container",
            children: [{
                class: "tv-static",
                type: "img",
                pos: [-70, 0],
                key: "tvStatic"
            }, {
                class: "tv2",
                type: "img",
                pos: [-70, 0],
                key: "tv2"
            }, {
                class: "tv1",
                type: "img",
                pos: [-70, 0],
                key: "tv1"
            }, {
                class: "tv0",
                type: "img",
                pos: [-70, 0],
                key: "tv0"
            }, {
                class: "tv",
                type: "img",
                pos: [-70, 0],
                key: "tv"
            }]
        }, {
            class: "tv-remote",
            type: "img",
            pos: [520, 380],
            key: "tvRemote"
        }],
        onLoadComplete() {
            this.hideChannels(), this.showChannel()
        },
        onDiscreteProgress() {
            this.hideChannels(), this.showChannel(), s.timeline().to(".e.tv-remote", {
                scale: .9,
                duration: .1
            }).to(".e.tv-remote", {
                scale: 1,
                duration: .1
            })
        },
        hideChannels() {
            s.set(".e.tv0", {
                autoAlpha: 0
            }), s.set(".e.tv1", {
                autoAlpha: 0
            }), s.set(".e.tv2", {
                autoAlpha: 0
            })
        },
        showChannel() {
            const t = X.exports.random(0, 2);
            s.set(`.e.tv${t}`, {
                delay: .1,
                autoAlpha: 1
            })
        }
    }),
    $T = d2.extend({
        elements: [{
            class: "tv-container",
            type: "container",
            children: [{
                class: "tv0",
                type: "img",
                pos: [0, 0],
                key: "tv0"
            }, {
                class: "tv",
                type: "img",
                pos: [0, 0],
                key: "tv"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.tv-container", {
                scale: 1.3,
                ease: "none"
            });
            t.name = "tv", this.timeline.add(t)
        }
    }),
    fA = E.extend({
        className: "change-batteries",
        imageManifest: {
            detector: new URL("main/pp7/everyday/assets/8f7017c9.png", self.location).href,
            battery: new URL("main/pp7/everyday/assets/84b7145b.png", self.location).href,
            remote: new URL("main/pp7/everyday/assets/b115e1da.png", self.location).href,
            tvBox: new URL("main/pp7/everyday/assets/2ad26346.png", self.location).href,
            tvScreen: new URL("main/pp7/everyday/assets/df830c26.png", self.location).href
        }
    }),
    eE = fA.extend({
        elements: [{
            class: "detector",
            type: "img",
            pos: [0, 0],
            key: "detector"
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.detector", {
                rotation: -180,
                ease: "none"
            });
            t.name = "detector", this.timeline.add(t)
        }
    }),
    tE = fA.extend({
        stepDuration: .5,
        elements: [{
            class: "battery0",
            type: "img",
            pos: [-50, -60],
            key: "battery"
        }, {
            class: "battery1",
            type: "img",
            pos: [50, 60],
            key: "battery"
        }],
        initializeTimeline() {
            s.set(".e.battery0", {
                scale: .95
            });
            const t = s.timeline().to(".e.battery0", {
                y: -200,
                rotation: 50,
                opacity: 0,
                ease: "none"
            }).to(".e.battery1", {
                y: -200,
                rotation: 50,
                opacity: 0,
                ease: "none"
            });
            t.name = "battery", this.timeline.add(t)
        }
    }),
    nE = fA.extend({
        stepDuration: .5,
        elements: [{
            class: "battery0",
            type: "img",
            pos: [-350, -180],
            key: "battery"
        }, {
            class: "battery1",
            type: "img",
            pos: [-320, 160],
            key: "battery"
        }, {
            class: "remote",
            type: "img",
            pos: [520, 380],
            key: "remote"
        }],
        initializeTimeline() {
            s.set(".e.battery0", {
                scale: .85,
                rotation: 40
            }), s.set(".e.battery1", {
                scale: .85,
                rotation: -20
            });
            const t = s.timeline().to(".e.battery0", {
                y: 200,
                scale: .6,
                rotation: 90,
                opacity: 0,
                ease: "none"
            }).to(".e.battery1", {
                y: 200,
                scale: .6,
                rotation: -90,
                opacity: 0,
                ease: "none"
            });
            t.name = "battery", this.timeline.add(t)
        }
    }),
    iE = fA.extend({
        stepDuration: 1,
        elements: [{
            class: "tv-blank",
            type: "div",
            pos: [330, 165],
            html: ""
        }, {
            class: "tv-screen",
            type: "img",
            pos: [-100, 0],
            key: "tvScreen"
        }, {
            class: "tv-box",
            type: "img",
            pos: [-100, 0],
            key: "tvBox"
        }, {
            class: "remote",
            type: "img",
            pos: [520, 380],
            key: "remote"
        }],
        initializeTimeline() {
            s.set(".e.tv-screen", {
                opacity: 0
            });
            const t = s.timeline().to(".e.tv-screen", {
                opacity: 1,
                ease: "none"
            }, .25).to(".e.tv-screen", {
                opacity: 1,
                ease: "none"
            }).to(".e.remote", {
                scale: .9,
                duration: .25,
                ease: "none"
            }, 0).to(".e.remote", {
                scale: 1,
                duration: .25,
                ease: "none"
            }, .25);
            t.name = "tv-screen", this.timeline.add(t)
        }
    }),
    $r = E.extend({
        imageManifest: {
            fish: new URL("main/pp7/everyday/assets/3a92ebd4.png", self.location).href,
            net: new URL("main/pp7/everyday/assets/000faa36.png", self.location).href,
            toiletBack: new URL("main/pp7/everyday/assets/bba2c775.png", self.location).href,
            toiletFront: new URL("main/pp7/everyday/assets/cd5e078a.png", self.location).href
        }
    }),
    sE = $r.extend({
        elements: [{
            type: "img",
            pos: [0, 50],
            key: "net",
            class: "net"
        }, {
            type: "img",
            pos: [50, -150],
            key: "fish",
            class: "fish"
        }],
        stepDuration: .75,
        initializeTimeline() {
            s.set(".e.fish", {
                scale: .4,
                rotate: -1
            }), this.timeline.to(".e.net", {
                rotate: 10,
                x: 0,
                y: -350,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.fish", {
                rotate: -80,
                yoyo: !0,
                repeat: 1
            }, "<"), this.timeline.to(".e.net", {
                rotate: 10,
                x: -100,
                y: -300,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.fish", {
                rotate: 80,
                yoyo: !0,
                repeat: 1
            }, "<"), this.timeline.to(".e.net", {
                rotate: 10,
                x: 100,
                y: -350,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.fish", {
                rotate: -80,
                yoyo: !0,
                repeat: 1
            }, "<"), this.timeline.to(".e.net", {
                rotate: 10,
                x: -50,
                y: -400,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.fish", {
                rotate: 80,
                yoyo: !0,
                repeat: 1
            }, "<"), this.timeline.to(".e.net", {
                rotate: 10,
                x: 20,
                y: -250,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.fish", {
                scale: .2,
                opacity: 0
            }, "<")
        }
    }),
    oE = $r.extend({
        elements: [{
            type: "img",
            pos: [0, 50],
            key: "net",
            class: "net"
        }],
        stepDuration: 5,
        initializeTimeline() {
            s.set(".e.net", {
                x: 0
            }), this.timeline.to(".e.net", {
                x: -1500,
                duration: 5,
                ease: "none"
            }), this.timeline.to(".e.net", {
                y: 40,
                yoyo: !0,
                repeat: 10
            }, "<")
        }
    }),
    aE = $r.extend({
        elements: [{
            type: "img",
            pos: [0, -150],
            key: "toiletBack"
        }, {
            type: "img",
            pos: [0, 0],
            key: "fish",
            class: "fish"
        }, {
            type: "img",
            pos: [0, -150],
            key: "toiletFront"
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.fromTo(".e.fish", {
                x: 800,
                scale: 1,
                rotate: 0
            }, {
                x: -100,
                scale: .2,
                rotate: 820,
                duration: 2
            }), this.timeline.fromTo(".e.fish", {
                y: -400
            }, {
                y: 100,
                ease: "power1.in",
                duration: 1.5
            }, "<")
        }
    }),
    rE = $r.extend({
        elements: [{
            type: "img",
            pos: [0, -150],
            key: "toiletBack"
        }, {
            type: "img",
            pos: [0, -150],
            key: "toiletFront"
        }]
    }),
    VE = $r.extend({
        elements: [{
            type: "img",
            pos: [0, 0],
            key: "fish",
            class: "fish"
        }],
        initializeTimeline() {
            s.set(".e.fish", {
                x: -150
            }), this.timeline.to(".e.fish", {
                motionPath: {
                    path: `M ${-150}, 0
                a ${150},${150} 0 1,0 ${150*2},0
                a ${150},${150} 0 1,0 -${150*2},0z`
                },
                repeat: 2,
                ease: "none",
                duration: 2.5
            }), this.timeline.to(".e.fish", {
                scale: .2,
                rotate: 540,
                duration: 5
            }, 0), this.timeline.to(".e.fish", {
                opacity: 0,
                duration: 1
            }, 4)
        }
    }),
    lE = E.extend({
        stepDuration: .5,
        elements() {
            const t = Object.keys(this.imageManifest).map((e, n) => ({
                class: `item-${n}`,
                type: "img",
                pos: [500, 500],
                key: e
            }));
            return [{
                class: "items-container",
                type: "container",
                children: t
            }]
        },
        onLoadComplete() {
            Object.keys(this.imageManifest).forEach((t, e) => {
                s.set(`.e.item-${e}`, {
                    x: `-${X.exports.random(20,80)}%`,
                    y: `-${X.exports.random(20,80)}%`,
                    rotate: X.exports.random(-75, 75)
                })
            })
        },
        onDiscreteProgress() {
            const t = this.model.get("tapsRequired"),
                e = this.model.get("tapsLeft"),
                n = t / e * 360 * (Math.PI / 180);
            s.to(`.e.item-${e-1}`, {
                opacity: 0,
                top: `+=${Math.cos(n)*500}px`,
                left: `+=${Math.sin(n)*500}px`,
                rotate: X.exports.random(-180, 180)
            })
        }
    }),
    AE = E.extend({
        stepDuration: .5,
        elements() {
            const t = Object.keys(this.imageManifest).map((e, n) => ({
                class: `item-${n}`,
                type: "img",
                pos: [0, 0],
                key: e
            }));
            return [{
                class: "items-container",
                type: "container",
                children: t
            }]
        },
        onDiscreteProgress(t, e, n) {
            const i = this.model.get("completedSwipes");
            s.to(`.e.item-${i-1}`, {
                opacity: 0,
                x: Math.cos(n.radians) * 500,
                y: Math.sin(n.radians) * 500
            })
        }
    }),
    eV = E.extend({
        elements() {
            return [{
                class: "image",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }]
        },
        initializeTimeline() {
            const t = this.model.get("direction");
            let e = this.model.get("rotationsInDeg");
            t === "COUNTER" && (e = -e);
            const n = s.timeline().to(".e.image", {
                rotation: e,
                ease: kt.easeNone
            });
            n.name = "image", this.timeline.add(n)
        }
    }),
    cE = lE.extend({
        imageManifest: {
            pants: new URL("main/pp7/everyday/assets/2817ef6c.png", self.location).href,
            hoodie: new URL("main/pp7/everyday/assets/03a072d3.png", self.location).href,
            hat: new URL("main/pp7/everyday/assets/6454d49b.png", self.location).href,
            socks: new URL("main/pp7/everyday/assets/71ba2b11.png", self.location).href,
            undies: new URL("main/pp7/everyday/assets/4b1b361d.png", self.location).href
        }
    }),
    dE = AE.extend({
        imageManifest: {
            apple: new URL("main/pp7/everyday/assets/e2473eb9.png", self.location).href,
            chips: new URL("main/pp7/everyday/assets/f86740a3.png", self.location).href,
            cone: new URL("main/pp7/everyday/assets/c3543da4.png", self.location).href,
            keys: new URL("main/pp7/everyday/assets/9bee6ceb.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/615669a9.png", self.location).href,
            tape: new URL("main/pp7/everyday/assets/f298ba7d.png", self.location).href
        }
    }),
    pE = E.extend({
        imageManifest: {
            vacumm: new URL("main/pp7/everyday/assets/0eff5cf8.png", self.location).href
        },
        elements: [{
            class: "vacumm",
            type: "img",
            pos: [0, 0],
            key: "vacumm"
        }],
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    repeat: t / 1e3
                }).to(".e.vacumm", {
                    x: -20
                }).to(".e.vacumm", {
                    x: 20
                });
            e.name = "vacumm", this.timeline.add(e)
        }
    }),
    hE = eV.extend({
        imageManifest: {
            cord: new URL("main/pp7/everyday/assets/fddfe859.png", self.location).href
        }
    }),
    p2 = E.extend({
        imageManifest: {
            ladder: new URL("main/pp7/everyday/assets/e3fb68fb.png", self.location).href
        },
        elements: [{
            class: "ladder",
            type: "img",
            pos: [0, 0],
            key: "ladder"
        }]
    }),
    uE = p2.extend({
        initializeTimeline() {
            s.set(".e.ladder", {
                rotation: -80
            });
            const t = s.timeline({
                ease: kt.easeNone
            }).to(".e.ladder", {
                x: 1,
                y: 1,
                rotation: 0
            });
            t.name = "ladder", this.timeline.add(t)
        }
    }),
    mE = p2.extend({
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: kt.easeNone,
                    repeat: t / 2e3
                }).to(".e.ladder", {
                    x: 1,
                    y: 1,
                    rotation: 0
                }).to(".e.ladder", {
                    x: -1,
                    y: -1,
                    rotation: -1
                }).to(".e.ladder", {
                    x: -1,
                    y: 0,
                    rotation: 1
                }).to(".e.ladder", {
                    x: 1,
                    y: 1,
                    rotation: 0
                }).to(".e.ladder", {
                    x: 1,
                    y: -1,
                    rotation: -1
                }).to(".e.ladder", {
                    x: -1,
                    y: 1,
                    rotation: 1
                }).to(".e.ladder", {
                    x: -1,
                    y: 1,
                    rotation: 0
                }).to(".e.ladder", {
                    x: 1,
                    y: 1,
                    rotation: -1
                }).to(".e.ladder", {
                    x: 1,
                    y: -1,
                    rotation: 1
                }).to(".e.ladder", {
                    x: 1,
                    y: 1,
                    rotation: 0
                }).to(".e.ladder", {
                    x: 1,
                    y: 1,
                    rotation: -1
                });
            e.name = "ladder", this.timeline.add(e)
        }
    }),
    lu = E.extend({
        leafCount: 30,
        leafBatchSize: 10,
        leafClearedCount: 0,
        imageManifest: {
            ladder: new URL("main/pp7/everyday/assets/e3fb68fb.png", self.location).href,
            leaf0: new URL("main/pp7/everyday/assets/8e65cd36.png", self.location).href,
            leaf1: new URL("main/pp7/everyday/assets/b8abb48e.png", self.location).href,
            leaf2: new URL("main/pp7/everyday/assets/b5eae05b.png", self.location).href,
            leaf3: new URL("main/pp7/everyday/assets/0c5e790a.png", self.location).href
        },
        elements() {
            const t = [{
                class: "ladder",
                type: "img",
                pos: [0, 0],
                key: "ladder"
            }];
            for (let e = 0; e < this.leafCount; e++) t.push({
                class: `leaf-${e}`,
                type: "img",
                pos: [0, 1100],
                key: `leaf${X.exports.random(0,3)}`
            });
            return t
        },
        onLoadComplete() {
            for (let t = 0; t < this.leafCount; t++) s.set(`.e.leaf-${t}`, {
                scale: X.exports.random(70, 130) / 100,
                rotation: X.exports.random(-180, 180)
            })
        },
        onDiscreteProgress() {
            for (let t = 0; t < this.leafBatchSize; t++) s.to(`.e.leaf-${this.leafClearedCount+t}`, {
                x: X.exports.random(-1100, -300),
                ease: TD.easeOut,
                duration: 1.5
            }), s.to(`.e.leaf-${this.leafClearedCount+t}`, {
                top: 1e3,
                rotation: X.exports.random(-180, 180),
                ease: $i.easeOut,
                duration: X.exports.random(3, 4)
            });
            this.leafClearedCount += this.leafBatchSize
        }
    });
/*!
 * matrix 3.7.0
 * https://greensock.com
 *
 * Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var ws, co, A0, ha, Cr, Bl, h2, xs = "transform",
    Au = xs + "Origin",
    u2, m2 = function(e) {
        var n = e.ownerDocument || e;
        for (!(xs in e.style) && ("msTransform" in e.style) && (xs = "msTransform", Au = xs + "Origin"); n.parentNode && (n = n.parentNode););
        if (co = window, h2 = new eA, n) {
            ws = n, A0 = n.documentElement, ha = n.body;
            var i = n.createElement("div"),
                o = n.createElement("div");
            ha.appendChild(i), i.appendChild(o), i.style.position = "static", i.style[xs] = "translate3d(0,0,1px)", u2 = o.offsetParent !== i, ha.removeChild(i)
        }
        return n
    },
    fE = function(e) {
        for (var n, i; e && e !== ha;) i = e._gsap, i && i.uncache && i.get(e, "x"), i && !i.scaleX && !i.scaleY && i.renderTransform && (i.scaleX = i.scaleY = 1e-4, i.renderTransform(1, i), n ? n.push(i) : n = [i]), e = e.parentNode;
        return n
    },
    f2 = [],
    q2 = [],
    qE = function() {
        return co.pageYOffset || ws.scrollTop || A0.scrollTop || ha.scrollTop || 0
    },
    gE = function() {
        return co.pageXOffset || ws.scrollLeft || A0.scrollLeft || ha.scrollLeft || 0
    },
    c0 = function(e) {
        return e.ownerSVGElement || ((e.tagName + "").toLowerCase() === "svg" ? e : null)
    },
    yE = function t(e) {
        if (co.getComputedStyle(e).position === "fixed") return !0;
        if (e = e.parentNode, e && e.nodeType === 1) return t(e)
    },
    kh = function t(e, n) {
        if (e.parentNode && (ws || m2(e))) {
            var i = c0(e),
                o = i ? i.getAttribute("xmlns") || "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml",
                r = i ? n ? "rect" : "g" : "div",
                V = n !== 2 ? 0 : 100,
                A = n === 3 ? 100 : 0,
                c = "position:absolute;display:block;pointer-events:none;margin:0;padding:0;",
                d = ws.createElementNS ? ws.createElementNS(o.replace(/^https/, "http"), r) : ws.createElement(r);
            return n && (i ? (Bl || (Bl = t(e)), d.setAttribute("width", .01), d.setAttribute("height", .01), d.setAttribute("transform", "translate(" + V + "," + A + ")"), Bl.appendChild(d)) : (Cr || (Cr = t(e), Cr.style.cssText = c), d.style.cssText = c + "width:0.1px;height:0.1px;top:" + A + "px;left:" + V + "px", Cr.appendChild(d))), d
        }
        throw "Need document and parent."
    },
    bE = function(e) {
        for (var n = new eA, i = 0; i < e.numberOfItems; i++) n.multiply(e.getItem(i).matrix);
        return n
    },
    vE = function(e, n) {
        var i = c0(e),
            o = e === i,
            r = i ? f2 : q2,
            V = e.parentNode,
            A, c, d, m, q, v;
        if (e === co) return e;
        if (r.length || r.push(kh(e, 1), kh(e, 2), kh(e, 3)), A = i ? Bl : Cr, i) d = o ? {
            x: 0,
            y: 0
        } : e.getBBox(), c = e.transform ? e.transform.baseVal : {}, c.numberOfItems ? (c = c.numberOfItems > 1 ? bE(c) : c.getItem(0).matrix, m = c.a * d.x + c.c * d.y, q = c.b * d.x + c.d * d.y) : (c = h2, m = d.x, q = d.y), n && e.tagName.toLowerCase() === "g" && (m = q = 0), (o ? i : V).appendChild(A), A.setAttribute("transform", "matrix(" + c.a + "," + c.b + "," + c.c + "," + c.d + "," + (c.e + m) + "," + (c.f + q) + ")");
        else {
            if (m = q = 0, u2)
                for (c = e.offsetParent, d = e; d && (d = d.parentNode) && d !== c && d.parentNode;)(co.getComputedStyle(d)[xs] + "").length > 4 && (m = d.offsetLeft, q = d.offsetTop, d = 0);
            if (v = co.getComputedStyle(e), v.position !== "absolute")
                for (c = e.offsetParent; V && V !== c;) m += V.scrollLeft || 0, q += V.scrollTop || 0, V = V.parentNode;
            d = A.style, d.top = e.offsetTop - q + "px", d.left = e.offsetLeft - m + "px", d[xs] = v[xs], d[Au] = v[Au], d.position = v.position === "fixed" ? "fixed" : "absolute", e.parentNode.appendChild(A)
        }
        return A
    },
    Ch = function(e, n, i, o, r, V, A) {
        return e.a = n, e.b = i, e.c = o, e.d = r, e.e = V, e.f = A, e
    },
    eA = function() {
        function t(n, i, o, r, V, A) {
            n === void 0 && (n = 1), i === void 0 && (i = 0), o === void 0 && (o = 0), r === void 0 && (r = 1), V === void 0 && (V = 0), A === void 0 && (A = 0), Ch(this, n, i, o, r, V, A)
        }
        var e = t.prototype;
        return e.inverse = function() {
            var i = this.a,
                o = this.b,
                r = this.c,
                V = this.d,
                A = this.e,
                c = this.f,
                d = i * V - o * r || 1e-10;
            return Ch(this, V / d, -o / d, -r / d, i / d, (r * c - V * A) / d, -(i * c - o * A) / d)
        }, e.multiply = function(i) {
            var o = this.a,
                r = this.b,
                V = this.c,
                A = this.d,
                c = this.e,
                d = this.f,
                m = i.a,
                q = i.c,
                v = i.b,
                D = i.d,
                S = i.e,
                C = i.f;
            return Ch(this, m * o + v * V, m * r + v * A, q * o + D * V, q * r + D * A, c + S * o + C * V, d + S * r + C * A)
        }, e.clone = function() {
            return new t(this.a, this.b, this.c, this.d, this.e, this.f)
        }, e.equals = function(i) {
            var o = this.a,
                r = this.b,
                V = this.c,
                A = this.d,
                c = this.e,
                d = this.f;
            return o === i.a && r === i.b && V === i.c && A === i.d && c === i.e && d === i.f
        }, e.apply = function(i, o) {
            o === void 0 && (o = {});
            var r = i.x,
                V = i.y,
                A = this.a,
                c = this.b,
                d = this.c,
                m = this.d,
                q = this.e,
                v = this.f;
            return o.x = r * A + V * d + q || 0, o.y = r * c + V * m + v || 0, o
        }, t
    }();

function ua(t, e, n, i) {
    if (!t || !t.parentNode || (ws || m2(t)).documentElement === t) return new eA;
    var o = fE(t),
        r = c0(t),
        V = r ? f2 : q2,
        A = vE(t, n),
        c = V[0].getBoundingClientRect(),
        d = V[1].getBoundingClientRect(),
        m = V[2].getBoundingClientRect(),
        q = A.parentNode,
        v = !i && yE(t),
        D = new eA((d.left - c.left) / 100, (d.top - c.top) / 100, (m.left - c.left) / 100, (m.top - c.top) / 100, c.left + (v ? 0 : gE()), c.top + (v ? 0 : qE()));
    if (q.removeChild(A), o)
        for (c = o.length; c--;) d = o[c], d.scaleX = d.scaleY = 0, d.renderTransform(1, d);
    return e ? D.inverse() : D
}
/*!
 * MotionPathPlugin 3.7.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */
var wE = "x,translateX,left,marginLeft,xPercent".split(","),
    xE = "y,translateY,top,marginTop,yPercent".split(","),
    kE = Math.PI / 180,
    Ei, g2, Wo, cu, CE = function() {
        return Ei || typeof window < "u" && (Ei = window.gsap) && Ei.registerPlugin && Ei
    },
    hr = function(e, n, i, o) {
        for (var r = n.length, V = o === 2 ? 0 : o, A = 0; A < r; A++) e[V] = parseFloat(n[A][i]), o === 2 && (e[V + 1] = 0), V += 2;
        return e
    },
    na = function(e, n, i) {
        return parseFloat(e._gsap.get(e, n, i || "px")) || 0
    },
    y2 = function(e) {
        var n = e[0],
            i = e[1],
            o;
        for (o = 2; o < e.length; o += 2) n = e[o] += n, i = e[o + 1] += i
    },
    $q = function(e, n, i, o, r, V, A, c, d) {
        if (A.type === "cubic") n = [n];
        else {
            A.fromCurrent !== !1 && n.unshift(na(i, o, c), r ? na(i, r, d) : 0), A.relative && y2(n);
            var m = r ? su : GS;
            n = [m(n, A.curviness)]
        }
        return n = V(b2(n, i, A)), tA(e, i, o, n, "x", c), r && tA(e, i, r, n, "y", d), ca(n, A.resolution || (A.curviness === 0 ? 20 : 12))
    },
    RE = function(e) {
        return e
    },
    DE = /[-+\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/g,
    eg = function(e, n, i) {
        var o = ua(e),
            r, V, A;
        return (e.tagName + "").toLowerCase() === "svg" ? (r = e.viewBox.baseVal, V = r.x, A = r.y, r.width || (r = {
            width: +e.getAttribute("width"),
            height: +e.getAttribute("height")
        })) : (r = n && e.getBBox && e.getBBox(), V = A = 0), n && n !== "auto" && (V += n.push ? n[0] * (r ? r.width : e.offsetWidth || 0) : n.x, A += n.push ? n[1] * (r ? r.height : e.offsetHeight || 0) : n.y), i.apply(V || A ? o.apply({
            x: V,
            y: A
        }) : {
            x: o.e,
            y: o.f
        })
    },
    du = function(e, n, i, o) {
        var r = ua(e.parentNode, !0, !0),
            V = r.clone().multiply(ua(n)),
            A = eg(e, i, r),
            c = eg(n, o, r),
            d = c.x,
            m = c.y,
            q;
        return V.e = V.f = 0, o === "auto" && n.getTotalLength && n.tagName.toLowerCase() === "path" && (q = n.getAttribute("d").match(DE) || [], q = V.apply({
            x: +q[0],
            y: +q[1]
        }), d += q.x, m += q.y), (q || n.getBBox && e.getBBox && n.ownerSVGElement === e.ownerSVGElement) && (q = V.apply(n.getBBox()), d -= q.x, m -= q.y), V.e = d - A.x, V.f = m - A.y, V
    },
    b2 = function(e, n, i) {
        var o = i.align,
            r = i.matrix,
            V = i.offsetX,
            A = i.offsetY,
            c = i.alignOrigin,
            d = e[0][0],
            m = e[0][1],
            q = na(n, "x"),
            v = na(n, "y"),
            D, S, C;
        return !e || !e.length ? Ur("M0,0L0,0") : (o && (o === "self" || (D = cu(o)[0] || n) === n ? ea(e, 1, 0, 0, 1, q - d, v - m) : (c && c[2] !== !1 ? Ei.set(n, {
            transformOrigin: c[0] * 100 + "% " + c[1] * 100 + "%"
        }) : c = [na(n, "xPercent") / -100, na(n, "yPercent") / -100], S = du(n, D, c, "auto"), C = S.apply({
            x: d,
            y: m
        }), ea(e, S.a, S.b, S.c, S.d, q + S.e - (C.x - S.e), v + S.f - (C.y - S.f)))), r ? ea(e, r.a, r.b, r.c, r.d, r.e, r.f) : (V || A) && ea(e, 1, 0, 0, 1, V || 0, A || 0), e)
    },
    tA = function(e, n, i, o, r, V) {
        var A = n._gsap,
            c = A.harness,
            d = c && c.aliases && c.aliases[i],
            m = d && d.indexOf(",") < 0 ? d : i,
            q = e._pt = new g2(e._pt, n, m, 0, 0, RE, 0, A.set(n, m, e));
        q.u = Wo(A.get(n, m, V)) || 0, q.path = o, q.pp = r, e._props.push(m)
    },
    SE = function(e, n) {
        return function(i) {
            return e || n !== 1 ? e2(i, e, n) : i
        }
    },
    fo = {
        version: "3.7.0",
        name: "motionPath",
        register: function(e, n, i) {
            Ei = e, Wo = Ei.utils.getUnit, cu = Ei.utils.toArray, g2 = i
        },
        init: function(e, n) {
            if (!Ei) return console.warn("Please gsap.registerPlugin(MotionPathPlugin)"), !1;
            (!(typeof n == "object" && !n.style) || !n.path) && (n = {
                path: n
            });
            var i = [],
                o = n,
                r = o.path,
                V = o.autoRotate,
                A = o.unitX,
                c = o.unitY,
                d = o.x,
                m = o.y,
                q = r[0],
                v = SE(n.start, "end" in n ? n.end : 1),
                D, S;
            if (this.rawPaths = i, this.target = e, (this.rotate = V || V === 0) && (this.rOffset = parseFloat(V) || 0, this.radians = !!n.useRadians, this.rProp = n.rotation || "rotation", this.rSet = e._gsap.set(e, this.rProp, this), this.ru = Wo(e._gsap.get(e, this.rProp)) || 0), Array.isArray(r) && !("closed" in r) && typeof q != "number") {
                for (S in q) !d && ~wE.indexOf(S) ? d = S : !m && ~xE.indexOf(S) && (m = S);
                d && m ? i.push($q(this, hr(hr([], r, d, 0), r, m, 1), e, d, m, v, n, A || Wo(r[0][d]), c || Wo(r[0][m]))) : d = m = 0;
                for (S in q) S !== d && S !== m && i.push($q(this, hr([], r, S, 2), e, S, 0, v, n, Wo(r[0][S])))
            } else D = v(b2(Ur(n.path), e, n)), ca(D, n.resolution), i.push(D), tA(this, e, n.x || "x", D, "x", n.unitX || "px"), tA(this, e, n.y || "y", D, "y", n.unitY || "px")
        },
        render: function(e, n) {
            var i = n.rawPaths,
                o = i.length,
                r = n._pt;
            for (e > 1 ? e = 1 : e < 0 && (e = 0); o--;) Eq(i[o], e, !o && n.rotate, i[o]);
            for (; r;) r.set(r.t, r.p, r.path[r.pp] + r.u, r.d, e), r = r._next;
            n.rotate && n.rSet(n.target, n.rProp, i[0].angle * (n.radians ? kE : 1) + n.rOffset + n.ru, n, e)
        },
        getLength: function(e) {
            return ca(Ur(e)).totalLength
        },
        sliceRawPath: e2,
        getRawPath: Ur,
        pointsToSegment: su,
        stringToRawPath: Mi,
        rawPathToString: Ds,
        transformRawPath: ea,
        getGlobalMatrix: ua,
        getPositionOnPath: Eq,
        cacheRawPathMeasurements: ca,
        convertToPath: function(e, n) {
            return cu(e).map(function(i) {
                return o0(i, n !== !1)
            })
        },
        convertCoordinates: function(e, n, i) {
            var o = ua(n, !0, !0).multiply(ua(e));
            return i ? o.apply(i) : o
        },
        getAlignMatrix: du,
        getRelativePosition: function(e, n, i, o) {
            var r = du(e, n, i, o);
            return {
                x: r.e,
                y: r.f
            }
        },
        arrayToRawPath: function(e, n) {
            n = n || {};
            var i = hr(hr([], e, n.x || "x", 0), e, n.y || "y", 1);
            return n.relative && y2(i), [n.type === "cubic" ? i : su(i, n.curviness)]
        }
    };
CE() && Ei.registerPlugin(fo);
s.registerPlugin(Pi, Cn, fo);
const Rh = E.extend({
        imageManifest: {
            handRag: new URL("main/pp7/everyday/assets/d7434658.png", self.location).href,
            dish: new URL("main/pp7/everyday/assets/d316c939.png", self.location).href
        },
        elements: [{
            class: "dish",
            type: "img",
            pos: [-75, -75],
            key: "dish"
        }, {
            class: "hand-rag",
            type: "img",
            pos: [150, 150],
            key: "handRag"
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.hand-rag", {
                motionPath: {
                    path: "M-150,-50a150,150 0 1,0 300,0a150,150 0 1,0 -300,0"
                },
                ease: kt.easeNone
            });
            t.name = "hand", this.timeline.add(t)
        }
    }),
    Dh = E.extend({
        stepDuration: .5,
        imageManifest: {
            dish: new URL("main/pp7/everyday/assets/d316c939.png", self.location).href
        },
        elements: [{
            class: "dish0",
            type: "img",
            pos: [125, 0],
            key: "dish"
        }, {
            class: "dish1",
            type: "img",
            pos: [125, 0],
            key: "dish"
        }, {
            class: "dish2",
            type: "img",
            pos: [125, 0],
            key: "dish"
        }],
        initializeTimeline() {
            s.set(".e.dish1", {
                opacity: 0
            }), s.set(".e.dish2", {
                opacity: 0
            });
            const t = s.timeline().to(".e.dish0", {
                x: -100,
                y: -325,
                scale: .65,
                duration: 1
            }).to(".e.dish1", {
                opacity: 1,
                delay: .75,
                duration: .25
            }, 0).to(".e.dish1", {
                y: -325,
                scale: .65,
                duration: 1
            }).to(".e.dish2", {
                opacity: 1,
                delay: .75,
                duration: .25
            }, 1).to(".e.dish2", {
                x: 100,
                y: -325,
                scale: .65,
                duration: 1
            });
            t.name = "dishes", this.timeline.add(t)
        }
    }),
    Ba = E.extend({
        imageManifest: {
            handSponge: new URL("main/pp7/everyday/assets/a9ecb5f8.png", self.location).href,
            dish: new URL("main/pp7/everyday/assets/d316c939.png", self.location).href,
            dirt0: new URL("main/pp7/everyday/assets/2d46b6e6.png", self.location).href,
            dirt1: new URL("main/pp7/everyday/assets/8e568830.png", self.location).href
        },
        elements: [{
            class: "dish-container",
            type: "container",
            children: [{
                class: "dish",
                type: "img",
                pos: [-75, -75],
                key: "dish"
            }, {
                class: "dirt-0",
                type: "img",
                pos: [-75, -75],
                key: "dirt0"
            }, {
                class: "dirt-1",
                type: "img",
                pos: [-75, -75],
                key: "dirt1"
            }]
        }, {
            class: "hand-sponge",
            type: "img",
            pos: [150, 150],
            key: "handSponge"
        }],
        initializeTimeline() {
            Cn.create("handWiggleX", {
                wiggles: 20,
                type: "random"
            }), Cn.create("handWiggleY", {
                wiggles: 20,
                type: "random"
            });
            const t = s.timeline().to(".e.hand-sponge", {
                x: 40,
                duration: 1,
                ease: "handWiggleX"
            }).to(".e.hand-sponge", {
                y: 40,
                duration: 1,
                ease: "handWiggleY"
            }, 0);
            t.name = "hand", this.timeline.add(t), this.initializeDishes()
        },
        initializeDishes() {}
    }),
    v2 = Ba.extend({
        initializeDishes() {
            const t = s.timeline().to([".e.dirt-0", ".e.dirt-1"], {
                opacity: 0,
                duration: 1
            });
            t.name = "dirt0", this.timeline.add(t, 0)
        }
    }),
    TE = Ba.extend({
        initializeDishes() {
            const t = s.timeline().to(".e.dirt-0", {
                opacity: 0,
                duration: 1
            });
            t.name = "dirt0", this.timeline.add(t, 0);
            const e = s.timeline().to(".e.dirt-1", {
                opacity: .8,
                duration: 1
            });
            e.name = "dirt1", this.timeline.add(e, 0)
        }
    }),
    EE = Ba.extend({
        initializeDishes() {
            s.set(".e.dirt-0", {
                opacity: 0
            }), s.set(".e.dirt-1", {
                opacity: .8
            });
            const t = s.timeline().to(".e.dirt-1", {
                opacity: 0,
                duration: 1
            });
            t.name = "dirt1", this.timeline.add(t, 0)
        }
    }),
    LE = Ba.extend({
        initializeDishes() {
            const t = s.timeline().to(".e.dirt-0", {
                opacity: 0,
                duration: 1
            });
            t.name = "dirt0", this.timeline.add(t, 0);
            const e = s.timeline().to(".e.dirt-1", {
                opacity: .9,
                duration: 1
            });
            e.name = "dirt1", this.timeline.add(e, 0)
        }
    }),
    BE = Ba.extend({
        initializeDishes() {
            s.set(".e.dirt-0", {
                opacity: 0
            }), s.set(".e.dirt-1", {
                opacity: .9
            });
            const t = s.timeline().to(".e.dirt-1", {
                opacity: .7,
                duration: 1
            });
            t.name = "dirt1", this.timeline.add(t, 0)
        }
    }),
    ME = Ba.extend({
        initializeDishes() {
            s.set(".e.dirt-0", {
                opacity: 0
            }), s.set(".e.dirt-1", {
                opacity: .7
            });
            const t = s.timeline().to(".e.dirt-1", {
                opacity: 0,
                duration: 1
            });
            t.name = "dirt1", this.timeline.add(t, 0)
        }
    }),
    qA = E.extend({
        imageManifest: {
            thermo0: new URL("main/pp7/everyday/assets/1abd20d5.png", self.location).href,
            thermo1: new URL("main/pp7/everyday/assets/5028b159.png", self.location).href
        },
        elements: [{
            class: "thermo-container",
            type: "container",
            children: [{
                class: "thermo-1",
                type: "img",
                pos: [152, 200],
                key: "thermo1"
            }, {
                class: "thermo-0",
                type: "img",
                pos: [-60, 0],
                key: "thermo0"
            }]
        }],
        onLoadComplete() {
            s.set(".e.thermo-container", {
                scale: .9
            })
        }
    }),
    OE = qA.extend({
        initializeTimeline() {
            s.set(".e.thermo-1", {
                rotation: -100
            });
            const t = s.timeline().to(".e.thermo-1", {
                rotation: -70,
                ease: kt.easeNone
            });
            t.name = "thermo", this.timeline.add(t)
        }
    }),
    IE = qA.extend({
        initializeTimeline() {
            s.set(".e.thermo-1", {
                rotation: -70
            });
            const t = s.timeline().to(".e.thermo-1", {
                rotation: 15,
                ease: kt.easeNone
            });
            t.name = "thermo", this.timeline.add(t)
        }
    }),
    PE = qA.extend({
        initializeTimeline() {
            s.set(".e.thermo-1", {
                rotation: 15
            });
            const t = s.timeline().to(".e.thermo-1", {
                rotation: -115,
                ease: kt.easeNone
            });
            t.name = "thermo", this.timeline.add(t)
        }
    }),
    UE = qA.extend({
        initializeTimeline() {
            s.set(".e.thermo-1", {
                rotation: -115
            });
            const t = s.timeline().to(".e.thermo-1", {
                rotation: 75,
                ease: kt.easeNone
            });
            t.name = "thermo", this.timeline.add(t)
        }
    }),
    d0 = E.extend({
        stepDuration: .5,
        imageManifest: {
            toiletBack: new URL("main/pp7/everyday/assets/bba2c775.png", self.location).href,
            plunger: new URL("main/pp7/everyday/assets/3c26d074.png", self.location).href,
            toiletFront: new URL("main/pp7/everyday/assets/cd5e078a.png", self.location).href
        },
        elements: [{
            class: "toilet-container",
            type: "container",
            children: [{
                class: "toilet-back",
                type: "img",
                pos: [30, -100],
                key: "toiletBack"
            }, {
                class: "plunger",
                type: "img",
                pos: [0, 0],
                key: "plunger"
            }, {
                class: "toilet-front",
                type: "img",
                pos: [30, -100],
                key: "toiletFront"
            }]
        }]
    }),
    FE = d0.extend({
        initializeTimeline() {
            s.set(".e.plunger", {
                x: 555,
                y: -100,
                rotation: 0
            });
            const t = s.timeline().to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 325,
                y: 80,
                rotation: -20
            });
            t.name = "plunger", this.timeline.add(t)
        }
    }),
    jE = d0.extend({
        initializeTimeline() {
            s.set(".e.plunger", {
                x: 325,
                y: 80,
                rotation: -20
            });
            const t = s.timeline().to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 335,
                y: 40,
                rotation: -20
            }).to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 335,
                y: 40,
                rotation: -20
            });
            t.name = "plunger", this.timeline.add(t)
        }
    }),
    QE = d0.extend({
        initializeTimeline() {
            s.set(".e.plunger", {
                x: 335,
                y: 40,
                rotation: -20
            });
            const t = s.timeline().to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 345,
                y: 0,
                rotation: -20
            }).to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 345,
                y: 0,
                rotation: -20
            }).to(".e.plunger", {
                x: 312,
                y: 172,
                rotation: -20
            }).to(".e.plunger", {
                x: 555,
                y: -100,
                rotation: 0
            });
            t.name = "plunger", this.timeline.add(t)
        }
    }),
    w2 = E.extend({
        imageManifest: {
            toy: new URL("main/pp7/everyday/assets/f9f3fccc.png", self.location).href,
            tie: new URL("main/pp7/everyday/assets/2e44f014.png", self.location).href,
            hat: new URL("main/pp7/everyday/assets/675950d4.png", self.location).href,
            cord: new URL("main/pp7/everyday/assets/73be2f29.png", self.location).href,
            board: new URL("main/pp7/everyday/assets/ba8626e3.png", self.location).href
        },
        elements: [{
            class: "find-container",
            type: "container",
            children: [{
                class: "toy",
                type: "img",
                pos: [0, 0],
                key: "toy"
            }, {
                class: "tie",
                type: "img",
                pos: [0, 0],
                key: "tie"
            }, {
                class: "hat",
                type: "img",
                pos: [0, 0],
                key: "hat"
            }, {
                class: "cord",
                type: "img",
                pos: [0, 0],
                key: "cord"
            }, {
                class: "board",
                type: "img",
                pos: [0, 0],
                key: "board"
            }]
        }]
    }),
    zE = w2.extend({
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.tie", {
                opacity: 0,
                x: 30
            }), s.set(".e.hat", {
                opacity: 0,
                x: -30
            }), s.set(".e.cord", {
                opacity: 0,
                y: 30
            }), s.set(".e.board", {
                opacity: 0,
                x: -30
            });
            const t = s.timeline().to(".e.toy", {
                opacity: 0,
                x: -30,
                duration: .5
            });
            t.name = "toy", this.timeline.add(t);
            const e = s.timeline().to(".e.tie", {
                opacity: 1,
                x: 0,
                duration: .5
            }).to(".e.tie", {
                opacity: 0,
                x: 30,
                duration: .5
            });
            e.name = "tie", this.timeline.add(e, .5);
            const n = s.timeline().to(".e.hat", {
                opacity: 1,
                x: 0,
                duration: .5
            }).to(".e.hat", {
                opacity: 0,
                y: -30,
                duration: .5
            });
            n.name = "hat", this.timeline.add(n, 1.5);
            const i = s.timeline().to(".e.cord", {
                opacity: 1,
                y: 0,
                duration: .5
            }).to(".e.cord", {
                opacity: 0,
                x: 30,
                duration: .5
            });
            i.name = "cord", this.timeline.add(i, 2.5);
            const o = s.timeline().to(".e.board", {
                opacity: 1,
                x: 0,
                duration: .5
            });
            o.name = "board", this.timeline.add(o, 3.5)
        }
    }),
    HE = w2.extend({
        onLoadComplete() {
            s.set(".e.toy", {
                visibility: "hidden"
            }), s.set(".e.tie", {
                visibility: "hidden"
            }), s.set(".e.hat", {
                visibility: "hidden"
            }), s.set(".e.cord", {
                visibility: "hidden"
            })
        }
    }),
    x2 = E.extend({
        imageManifest: {
            black: new URL("main/pp7/everyday/assets/f176e344.png", self.location).href,
            red: new URL("main/pp7/everyday/assets/5ce233a8.png", self.location).href
        },
        elements: [{
            class: "red-0",
            type: "img",
            pos: [500, 80],
            key: "red"
        }, {
            class: "red-1",
            type: "img",
            pos: [500, 80],
            key: "red"
        }, {
            class: "black-0",
            type: "img",
            pos: [500, 570],
            key: "black"
        }, {
            class: "black-1",
            type: "img",
            pos: [500, 570],
            key: "black"
        }]
    }),
    NE = x2.extend({
        stepDuration: 2,
        initializeTimeline() {
            s.set(".e.red-1", {
                opacity: 0
            }), s.set(".e.black-0", {
                opacity: 0
            }), s.set(".e.black-1", {
                opacity: 0
            });
            const t = s.timeline({
                ease: $i.easeInOut
            }).to(".e.red-0", {
                x: 500,
                scale: .8,
                duration: 1
            }).to(".e.red-0", {
                y: -200,
                rotation: -10,
                duration: .5
            }, 0).to(".e.red-0", {
                y: 0,
                rotation: 0,
                duration: .5
            }, .5).to(".e.red-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                x: -475,
                scale: 1.1,
                duration: 1
            }, 3).to(".e.black-0", {
                y: -200,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-0", {
                y: 50,
                rotation: 0,
                duration: .5
            }, 3.5).set(".e.red-0", {
                x: 0,
                y: 0,
                scale: 1
            }, 5).to(".e.red-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 5).to(".e.black-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 5);
            t.name = "jump1", this.timeline.add(t);
            const e = s.timeline({
                ease: $i.easeInOut
            }).to(".e.red-0", {
                x: 475,
                scale: 1.1,
                duration: 1
            }).to(".e.red-0", {
                y: -200,
                rotation: -10,
                duration: .5
            }, 0).to(".e.red-0", {
                y: 0,
                rotation: 0,
                duration: .5
            }, .5).set(".e.black-0", {
                x: 0,
                y: 0,
                scale: 1
            }, 2).to(".e.red-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                x: -500,
                scale: .8,
                duration: 1
            }, 3).to(".e.black-0", {
                y: -200,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-0", {
                y: 50,
                rotation: 0,
                duration: .5
            }, 3.5).set(".e.red-0", {
                x: 0,
                y: 0,
                scale: 1
            }, 5).to(".e.red-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 5).to(".e.black-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 5);
            e.name = "jump2", this.timeline.add(e);
            const n = s.timeline({
                ease: $i.easeInOut
            }).to(".e.red-0", {
                x: 300,
                scale: 1,
                duration: 1
            }).to(".e.red-0", {
                y: -175,
                rotation: -10,
                duration: .5
            }, 0).to(".e.red-0", {
                y: 0,
                rotation: 0,
                duration: .5
            }, .5).set(".e.black-0", {
                x: 60,
                y: -120
            }, 2).to(".e.black-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                x: -450,
                scale: 1.1,
                duration: 1
            }, 3).to(".e.black-0", {
                y: -200,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-0", {
                y: 120,
                rotation: 0,
                duration: .5
            }, 3.5).set(".e.red-1", {
                x: 0,
                y: 0
            }, 5).to(".e.red-1", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 5).to(".e.red-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 5).to(".e.black-0", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 5);
            n.name = "jump3", this.timeline.add(n);
            const i = s.timeline({
                ease: $i.easeInOut
            }).to(".e.red-1", {
                x: 500,
                scale: .8,
                duration: 1
            }).to(".e.red-1", {
                y: -200,
                rotation: -10,
                duration: .5
            }, 0).to(".e.red-1", {
                y: 0,
                rotation: 0,
                duration: .5
            }, .5).set(".e.black-0", {
                x: 0,
                y: 0,
                scale: 1
            }, 2).to(".e.red-1", {
                opacity: 0,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                x: -520,
                duration: 1
            }, 3).to(".e.black-0", {
                y: -200,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-0", {
                y: 0,
                rotation: 0,
                duration: .5
            }, 3.5).set(".e.black-1", {
                x: -510,
                y: -150
            }, 3).to(".e.black-1", {
                y: -75,
                opacity: 1,
                duration: 1
            }, 4).set(".e.red-1", {
                x: 30,
                y: -250,
                scale: .7
            }, 5).to(".e.red-1", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 5);
            i.name = "jump4", this.timeline.add(i);
            const o = s.timeline({
                ease: $i.easeInOut
            }).to(".e.red-1", {
                x: 246,
                scale: .9,
                duration: 1
            }).to(".e.red-1", {
                y: -250,
                rotation: -10,
                duration: .5
            }, 0).to(".e.red-1", {
                y: -118,
                rotation: 0,
                duration: .5
            }, .5).set(".e.red-0", {
                x: 410,
                y: 40,
                scale: 1,
                opacity: 0
            }, 2).to(".e.red-0", {
                opacity: 1,
                duration: .25,
                ease: kt.easeNone
            }, 2).to(".e.black-0", {
                x: 30,
                scale: .8,
                duration: 1
            }, 3).to(".e.black-0", {
                y: -220,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-0", {
                y: -170,
                rotation: 0,
                duration: .5
            }, 3.5).to(".e.black-1", {
                x: 28,
                scale: .8,
                duration: 1
            }, 3).to(".e.black-1", {
                y: -295,
                rotation: 10,
                duration: .5
            }, 3).to(".e.black-1", {
                y: -235,
                rotation: 0,
                duration: .5
            }, 3.5).to(".e.black-0", {
                x: -330,
                scale: 1.1,
                duration: 1
            }, 4.25).to(".e.black-0", {
                y: -250,
                rotation: -10,
                duration: .5
            }, 4.25).to(".e.black-0", {
                y: 110,
                rotation: 0,
                duration: .5
            }, 4.75).to(".e.black-1", {
                x: -326,
                scale: 1.1,
                duration: 1
            }, 4.25).to(".e.black-1", {
                y: -325,
                rotation: -10,
                duration: .5
            }, 4.25).to(".e.black-1", {
                y: 35,
                rotation: 0,
                duration: .5
            }, 4.75);
            o.name = "jump5", this.timeline.add(o)
        }
    }),
    GE = x2.extend({
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.red-0", {
                x: 410,
                y: 40
            }), s.set(".e.red-1", {
                x: 246,
                y: -118,
                scale: .9
            }), s.set(".e.black-0", {
                x: -330,
                y: 110,
                scale: 1.1
            }), s.set(".e.black-1", {
                x: -326,
                y: 35,
                scale: 1.1
            });
            const t = s.timeline({
                ease: $i.easeOut
            }).to(".e.red-0", {
                x: 570,
                y: -250,
                rotation: -20,
                opacity: 0
            }, 0).to(".e.red-1", {
                x: 146,
                y: -480,
                rotation: 60,
                opacity: 0
            }, 0).to(".e.black-0", {
                x: -420,
                y: -150,
                rotation: 30,
                opacity: 0
            }, 0).to(".e.black-1", {
                x: -95,
                y: -400,
                rotation: -50,
                opacity: 0
            }, 0);
            t.name = "flip", this.timeline.add(t)
        }
    }),
    gA = E.extend({
        imageManifest: {
            bedMade: new URL("main/pp7/everyday/assets/5c29c970.png", self.location).href,
            bedUmade: new URL("main/pp7/everyday/assets/126c4fc6.png", self.location).href,
            bedUmadeRight: new URL("main/pp7/everyday/assets/00e69c2f.png", self.location).href,
            bedUmadeLeft: new URL("main/pp7/everyday/assets/3e78d341.png", self.location).href
        }
    }),
    XE = gA.extend({
        elements: [{
            class: "bed-container",
            type: "container",
            children: [{
                class: "bedUmade",
                type: "img",
                pos: [0, -50],
                key: "bedUmade"
            }, {
                class: "bedUmadeRight",
                type: "img",
                pos: [0, -50],
                key: "bedUmadeRight"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.bedUmadeRight", {
                opacity: 0
            });
            const t = s.timeline().to(".e.bedUmadeRight", {
                opacity: 1,
                ease: "power1.out"
            }, 0).to(".bed-container", {
                repeat: 1,
                yoyo: !0,
                rotate: -5,
                ease: "linear",
                duration: .1
            }, 0);
            this.timeline.add(t)
        }
    }),
    YE = gA.extend({
        elements: [{
            class: "bed-container",
            type: "container",
            children: [{
                class: "bedUmadeRight",
                type: "img",
                pos: [0, -50],
                key: "bedUmadeRight"
            }, {
                class: "bedUmadeLeft",
                type: "img",
                pos: [0, -50],
                key: "bedUmadeLeft"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.bedUmadeLeft", {
                opacity: 0
            });
            const t = s.timeline().to(".e.bedUmadeLeft", {
                opacity: 1,
                ease: "power1.out"
            }, 0).to(".bed-container", {
                repeat: 1,
                yoyo: !0,
                rotate: 5,
                ease: "linear",
                duration: .1
            }, 0);
            this.timeline.add(t)
        }
    }),
    KE = gA.extend({
        elements: [{
            class: "bed-container",
            type: "container",
            children: [{
                class: "bedUmadeLeft",
                type: "img",
                pos: [0, -50],
                key: "bedUmadeLeft"
            }, {
                class: "bedUmade",
                type: "img",
                pos: [0, -50],
                key: "bedUmade"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.bedUmade", {
                opacity: 0
            });
            const t = s.timeline().to(".e.bedUmade", {
                opacity: 1,
                ease: "power1.out"
            }, 0).to(".bed-container", {
                repeat: 1,
                yoyo: !0,
                rotate: -5,
                ease: "linear",
                duration: .1
            }, 0);
            this.timeline.add(t)
        }
    }),
    WE = gA.extend({
        elements: [{
            class: "bed-container",
            type: "container",
            children: [{
                class: "bedUmade",
                type: "img",
                pos: [0, -50],
                key: "bedUmade"
            }, {
                class: "bedMade",
                type: "img",
                pos: [0, -50],
                key: "bedMade"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.bedMade", {
                opacity: 0
            });
            const t = s.timeline().to(".e.bedMade", {
                opacity: 1,
                ease: "power1.out"
            }, 0).to(".e.bedUmade", {
                opacity: 0,
                ease: "power1.out"
            }, 0).to(".bed-container", {
                repeat: 1,
                yoyo: !0,
                y: -100,
                ease: "power1.out",
                duration: .1
            }, 0);
            this.timeline.add(t)
        }
    }),
    yA = E.extend({
        imageManifest: {
            junkDrawer: new URL("main/pp7/everyday/assets/17b87d88.png", self.location).href,
            junkDrawerFull: new URL("main/pp7/everyday/assets/dc82b093.png", self.location).href,
            clip: new URL("main/pp7/everyday/assets/36f6f760.png", self.location).href,
            cord: new URL("main/pp7/everyday/assets/8ccade46.png", self.location).href,
            cordTangled: new URL("main/pp7/everyday/assets/16022309.png", self.location).href,
            dice: new URL("main/pp7/everyday/assets/bac24213.png", self.location).href,
            firework: new URL("main/pp7/everyday/assets/6487e07b.png", self.location).href,
            lighter: new URL("main/pp7/everyday/assets/be66f280.png", self.location).href,
            measuringTape: new URL("main/pp7/everyday/assets/3136d27f.png", self.location).href,
            outlet: new URL("main/pp7/everyday/assets/c06a7626.png", self.location).href,
            pencil: new URL("main/pp7/everyday/assets/c5fdf71e.png", self.location).href,
            playingCard: new URL("main/pp7/everyday/assets/e1e6bf6c.png", self.location).href,
            scissors: new URL("main/pp7/everyday/assets/f26e14a5.png", self.location).href,
            bolt: new URL("main/pp7/everyday/assets/31ead059.png", self.location).href
        }
    }),
    ri = 300,
    JE = yA.extend({
        elements: [{
            class: "electronics-container",
            type: "container",
            children: [{
                class: "junkDrawer",
                type: "img",
                pos: [0 - ri, 0],
                key: "junkDrawer"
            }, {
                class: "junkDrawerThing cordTangled",
                type: "img",
                pos: [-50 - ri, 0],
                key: "cordTangled"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [110 - ri, 104],
                key: "clip"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [116 - ri, 309],
                key: "dice"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-150 - ri, 330],
                key: "firework"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-100 - ri, 180],
                key: "lighter"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [73 - ri, -192],
                key: "measuringTape"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-300 - ri, 70],
                key: "pencil"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-210 - ri, -270],
                key: "playingCard"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-72 - ri, -30],
                key: "scissors"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            const t = s.timeline();
            s.set(".e.junkDrawer", {
                opacity: 0
            }), s.set(".e.junkDrawerThing", {
                opacity: 0
            }), s.set(".e.cordTangled", {
                scale: .7
            }), t.to(".e.junkDrawer", {
                y: `+=${ri+25}`,
                ease: "elastic.inOut",
                opacity: 1,
                duration: 1
            });
            for (let n = 0; n < 10; n++) t.to(`.e.junkDrawerThing:nth-child(${n+1})`, {
                y: `+=${ri}`,
                opacity: 1,
                ease: "back.out",
                delay: .2
            }, .2 + n / 50);
            const e = s.timeline();
            for (let n = 2; n < 5; n++) e.to(`.e.junkDrawerThing:nth-child(${n+1})`, {
                x: `-=${X.exports.random(600,800)}`,
                y: `+=${X.exports.random(-400,400)}`,
                opacity: 0,
                ease: "power2.out"
            }, .1 + n / 50);
            this.timeline.add(e)
        }
    }),
    ZE = yA.extend({
        elements: [{
            class: "electronics-container",
            type: "container",
            children: [{
                class: "junkDrawer",
                type: "img",
                pos: [25, 0],
                key: "junkDrawer"
            }, {
                class: "junkDrawerThing cordTangled",
                type: "img",
                pos: [-50, 0],
                key: "cordTangled"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-100, 180],
                key: "lighter"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [73, -192],
                key: "measuringTape"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-300, 70],
                key: "pencil"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-210, -270],
                key: "playingCard"
            }, {
                class: "junkDrawerThing",
                type: "img",
                pos: [-72, -30],
                key: "scissors"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.cordTangled", {
                scale: .7
            });
            const t = s.timeline();
            for (let e = 2; e < 7; e++) t.to(`.e.junkDrawerThing:nth-child(${e+1})`, {
                x: `+=${X.exports.random(600,800)}`,
                y: `+=${X.exports.random(-500,500)}`,
                opacity: 0,
                ease: "power2.out"
            }, .1 + e / 50);
            this.timeline.add(t)
        }
    }),
    _E = yA.extend({
        elements: [{
            class: "electronics-container",
            type: "container",
            children: [{
                class: "cordTangled",
                type: "img",
                pos: [-7, 7],
                key: "cordTangled"
            }, {
                class: "cord",
                type: "img",
                pos: [0, 0],
                key: "cord"
            }]
        }],
        initializeTimeline() {
            s.set(".e.cord", {
                opacity: 0
            });
            const t = s.timeline().to(".e.cordTangled", {
                rotate: 720,
                ease: "linear"
            }, 0).to(".e.cordTangled", {
                opacity: 0
            }, .8).to(".e.cord", {
                opacity: 1
            }, .6);
            this.timeline.add(t);
            const e = s.timeline().to(".e.cord", {
                opacity: 1,
                scale: 1.5,
                x: -700
            }, .4);
            this.timeline.add(e)
        }
    }),
    $E = yA.extend({
        elements: [{
            class: "electronics-container",
            type: "container",
            children: [{
                class: "outlet",
                type: "img",
                pos: [0, 0],
                key: "outlet"
            }, {
                class: "cord",
                type: "img",
                pos: [0, 0],
                key: "cord"
            }, {
                class: "bolt",
                type: "img",
                pos: [0, 0],
                key: "bolt"
            }]
        }],
        initializeTimeline() {
            s.set(".e.cord", {
                scale: 1.5,
                x: -700
            }), s.set(".e.outlet", {
                x: 400
            }), s.set(".e.bolt", {
                display: "none"
            });
            const t = () => {
                    a.addParticleEmitter({
                        container: "electronics-container",
                        numberOfParticles: 60,
                        image: "bolt",
                        settings: {
                            randomAngleRange: 360,
                            minSize: 20,
                            maxSize: 500,
                            force: -6,
                            gravity: 1,
                            boundaries: {
                                top: 250,
                                bottom: 500,
                                left: 250,
                                right: 500
                            }
                        }
                    }, this), s.timeline().to(".e.cord", {
                        opacity: 0,
                        scale: 2,
                        ease: "elastic.inOut"
                    }, 0).to(".e.outlet", {
                        opacity: 0,
                        scale: 2,
                        ease: "elastic.inOut"
                    }, 0)
                },
                e = s.timeline().to(".electronics-container", {
                    scale: 1.1,
                    onComplete: t,
                    duration: .5
                }, 0).to(".e.cord", {
                    x: -324,
                    y: -119,
                    scale: 1
                }, .1).to(".e.outlet", {
                    x: 100
                }, .1);
            this.timeline.add(e)
        }
    }),
    Ma = E.extend({
        elements() {
            return [{
                class: "image",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }]
        }
    }),
    k2 = E.extend({
        imageManifest: {
            weed: new URL("main/pp7/everyday/assets/f597141e.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "weed",
            class: "weed1",
            pos: [0, -200]
        }, {
            type: "img",
            key: "weed",
            class: "weed2",
            pos: [0, 200]
        }],
        stepDuration: .25,
        initializeTimeline() {
            s.set(".weed1,.weed2", {
                scale: .75
            }), this.timeline.to(".weed1", {
                y: -200,
                opacity: 0
            }), this.timeline.to(".weed2", {
                y: -200,
                opacity: 0
            })
        }
    }),
    eL = Ma.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/6f06a009.png", self.location).href
        }
    }),
    tL = k2.extend({}),
    nL = Ma.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/6f06a009.png", self.location).href
        }
    }),
    iL = E.extend({
        imageManifest: {
            weed: new URL("main/pp7/everyday/assets/b8202668.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "weed",
            class: "weed1",
            pos: [0, -200]
        }, {
            type: "img",
            key: "weed",
            class: "weed3",
            pos: [0, 200]
        }, {
            type: "img",
            key: "weed",
            class: "weed2",
            pos: [0, 0]
        }],
        stepDuration: .25,
        initializeTimeline() {
            s.set(".weed1,.weed2,.weed3", {
                scale: .75
            }), s.set(".weed2", {
                scale: .9,
                scaleX: -1
            }), this.timeline.to(".weed2", {
                y: -200,
                opacity: 0
            }), this.timeline.to(".weed1", {
                y: -200,
                opacity: 0
            }), this.timeline.to(".weed3", {
                y: -200,
                opacity: 0
            })
        }
    }),
    sL = E.extend({
        imageManifest: {
            plant: new URL("main/pp7/everyday/assets/59405c93.png", self.location).href,
            fly: new URL("main/pp7/everyday/assets/d1d4eb45.gif", self.location).href
        },
        elements: [{
            type: "div",
            class: "water",
            pos: [-500, -600],
            html: ""
        }, {
            type: "img",
            class: "plant",
            pos: [300, 0],
            key: "plant"
        }],
        particles: null,
        onLoadComplete() {
            this.particles = a.addParticleEmitter({
                container: "water",
                numberOfParticles: 30,
                autoplay: !1,
                restartOnProgress: !1,
                zIndex: -1,
                settings: {
                    frequency: .05,
                    from: {
                        backgroundColor: "#0085FF",
                        border: "3px solid black",
                        opacity: 1,
                        duration: .001
                    },
                    to: {
                        duration: .36,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 30,
                    maxSize: 45,
                    angle: -90,
                    force: 6,
                    randomAngle: !1
                }
            }, this)
        },
        onStartProgress() {
            !this.particles || this.particles.restart()
        },
        onMistake() {
            !this.particles || this.particles.pause()
        },
        onProgress(t) {
            !this.particles || t === 100 && this.particles.kill()
        }
    }),
    C2 = E.extend({
        imageManifest: {
            plant: new URL("main/pp7/everyday/assets/2e814987.png", self.location).href,
            fly: new URL("main/pp7/everyday/assets/d1d4eb45.gif", self.location).href
        },
        elements: [{
            type: "img",
            class: "plant",
            pos: [100, 0],
            key: "plant"
        }, {
            type: "img",
            class: "fly",
            pos: [0, 0],
            key: "fly"
        }, {
            type: "img",
            class: "fly2",
            pos: [0, 0],
            key: "fly"
        }, {
            type: "img",
            class: "fly3",
            pos: [0, 0],
            key: "fly"
        }],
        initializeTimeline() {
            s.fromTo(".e.fly", {
                x: -250
            }, {
                x: 250,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: 1
            }), s.fromTo(".e.fly", {
                y: -50
            }, {
                y: 50,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: .75
            }), s.fromTo(".e.fly2", {
                x: -250
            }, {
                x: 250,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: 1
            }).seek(.66), s.fromTo(".e.fly2", {
                y: -100
            }, {
                y: 100,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: .55
            }), s.fromTo(".e.fly3", {
                x: -350
            }, {
                x: 250,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: 1
            }).seek(.33), s.fromTo(".e.fly3", {
                y: 70
            }, {
                y: 170,
                yoyo: !0,
                repeat: -1,
                ease: "sine.inOut",
                duration: .6
            })
        }
    }),
    oL = C2.extend({
        imageManifest: {
            plant: new URL("main/pp7/everyday/assets/2e814987.png", self.location).href,
            fly: new URL("main/pp7/everyday/assets/d1d4eb45.gif", self.location).href,
            tear: new URL("main/pp7/everyday/assets/58094c27.png", self.location).href
        },
        elements: [{
            type: "img",
            class: "plant",
            pos: [100, 0],
            key: "plant"
        }, {
            type: "img",
            class: "fly",
            pos: [0, 0],
            key: "fly"
        }, {
            type: "img",
            class: "fly2",
            pos: [0, 0],
            key: "fly"
        }, {
            type: "img",
            class: "fly3",
            pos: [0, 0],
            key: "fly"
        }, {
            type: "img",
            key: "tear",
            class: "tear1",
            pos: [0, 0]
        }, {
            type: "img",
            key: "tear",
            class: "tear2",
            pos: [-50, -30]
        }, {
            type: "img",
            key: "tear",
            class: "tear3",
            pos: [20, 40]
        }],
        stepDuration: 1,
        onLoadComplete() {
            this.timeline.fromTo(".e.tear1, .e.tear2, .e.tear3", {
                y: -1200,
                opacity: 1
            }, {
                y: 400,
                opacity: 0,
                ease: "power2.in",
                stagger: .4,
                duration: 2
            })
        }
    }),
    R2 = E.extend({
        imageManifest: {
            herb1: new URL("main/pp7/everyday/assets/e8f36260.png", self.location).href,
            herb2: new URL("main/pp7/everyday/assets/267d3fdc.png", self.location).href,
            herb3: new URL("main/pp7/everyday/assets/07308746.png", self.location).href,
            herb4: new URL("main/pp7/everyday/assets/03da069d.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "herb",
            children: [{
                class: "herb1",
                type: "img",
                pos: [0, 0],
                key: "herb1"
            }, {
                class: "herb2",
                type: "img",
                pos: [0, 0],
                key: "herb2"
            }, {
                class: "herb3",
                type: "img",
                pos: [0, 0],
                key: "herb3"
            }, {
                class: "herb4",
                type: "img",
                pos: [0, 0],
                key: "herb4"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            this.timeline.to(".e.herb1", {
                rotate: 70,
                x: -200,
                y: -300
            }), this.timeline.to(".e.herb2", {
                rotate: -60,
                x: -220,
                y: -200
            }, "<"), this.timeline.to(".e.herb3", {
                rotate: 90,
                x: -240,
                y: 10
            }, "<"), this.timeline.to(".e.herb4", {
                rotate: -40,
                x: -100,
                y: 200
            }, "<")
        }
    }),
    aL = R2.extend({
        initializeTimeline() {
            this.timeline.to(".e.herb1", {
                rotate: 70,
                x: 300,
                y: 300
            }), this.timeline.to(".e.herb2", {
                rotate: -60,
                x: 320,
                y: 200
            }, "<"), this.timeline.to(".e.herb3", {
                rotate: 90,
                x: 340,
                y: -10
            }, "<"), this.timeline.to(".e.herb4", {
                rotate: -40,
                x: 200,
                y: -200
            }, "<")
        }
    }),
    rL = E.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/119e0b64.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "image",
            class: "image",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.fromTo(".e.image", {
                scale: 1.5,
                x: -350
            }, {
                scale: 1.5,
                x: 350,
                yoyo: !0,
                repeat: -1,
                ease: "power2.inOut",
                duration: 1.5
            })
        }
    }),
    VL = E.extend({
        stepDuration: .5,
        imageManifest: {
            bagel: new URL("main/pp7/everyday/assets/2443a336.png", self.location).href,
            bagelSliced: new URL("main/pp7/everyday/assets/80685dca.png", self.location).href
        },
        elements: a.elementsFromImages("bagel", "bagelSliced"),
        onLoadComplete() {
            s.set(".e.bagelSliced", {
                opacity: 0,
                scale: .95
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.bagelSliced", {
                opacity: 1,
                scale: 1
            }).to(".e.bagel", {
                opacity: 0,
                x: 50
            }, 0);
            t.name = "tl", this.timeline.add(t)
        }
    }),
    D2 = E.extend({
        imageManifest: {
            toasterBack: new URL("main/pp7/everyday/assets/553f13f6.png", self.location).href,
            toasterMid: new URL("main/pp7/everyday/assets/8b0d370c.png", self.location).href,
            toasterFront: new URL("main/pp7/everyday/assets/701b77ec.png", self.location).href,
            bagel: new URL("main/pp7/everyday/assets/98cc6613.png", self.location).href,
            buttons: new URL("main/pp7/everyday/assets/fe1cd679.png", self.location).href
        },
        elements: a.elementsFromImages(["toasterBack", "toaster-back"], ["bagel", "bagel-back", [130, 445]], ["toasterMid", "toaster-mid"], ["bagel", "bagel-front", [190, 300]], ["toasterFront", "toaster-front"], ["buttons", "buttons", [385, 595]])
    }),
    lL = D2.extend({
        stepDuration: .35,
        initializeTimeline() {
            const t = s.timeline().to(".e.bagel-back", {
                y: 110
            }).to(".e.bagel-front", {
                y: 110
            }, 0).to(".e.buttons", {
                x: 10,
                y: 140
            }, 0);
            t.name = "tl", this.timeline.add(t)
        }
    }),
    AL = D2.extend({
        hasPopped: !1,
        initializeTimeline() {
            s.set(".e.bagel-back", {
                y: 110
            }), s.set(".e.bagel-front", {
                y: 110
            }), s.set(".e.buttons", {
                x: 10,
                y: 140
            })
        },
        onProgress(t) {
            if (t < 92 || this.hasPopped) return;
            this.hasPopped = !0;
            const e = Pi.create("custom", "M0,0,C0.418,1.562,0.674,2.22,1,1");
            s.to(".e.bagel-back", {
                y: 0,
                duration: .4,
                ease: e
            }), s.to(".e.bagel-front", {
                y: 0,
                duration: .4,
                ease: e
            }), s.to(".e.buttons", {
                x: 0,
                y: 0,
                duration: .25
            })
        }
    }),
    cL = E.extend({
        imageManifest: {
            bagelSliced: new URL("main/pp7/everyday/assets/80685dca.png", self.location).href,
            bagelCheesed0: new URL("main/pp7/everyday/assets/35f13236.png", self.location).href,
            bagelCheesed1: new URL("main/pp7/everyday/assets/5b0a55dc.png", self.location).href
        },
        elements: a.elementsFromImages(["bagelSliced", "bagel-sliced"], ["bagelCheesed0", "bagel-cheesed-1"], ["bagelCheesed1", "bagel-cheesed-2"]),
        onLoadComplete() {
            s.set(".e.bagel-cheesed-1", {
                opacity: 0
            }), s.set(".e.bagel-cheesed-2", {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.bagel-cheesed-1", {
                opacity: 1
            }).to(".e.bagel-cheesed-2", {
                opacity: 1
            });
            t.name = "tl", this.timeline.add(t)
        }
    }),
    bA = E.extend({
        imageManifest: {
            trash: new URL("main/pp7/everyday/assets/226a928c.png", self.location).href,
            bag: new URL("main/pp7/everyday/assets/1540ad8d.png", self.location).href,
            can1: new URL("main/pp7/everyday/assets/bf6e0410.png", self.location).href,
            can2: new URL("main/pp7/everyday/assets/cb1f4c08.png", self.location).href,
            can3: new URL("main/pp7/everyday/assets/bf6e0410.png", self.location).href,
            bottle1: new URL("main/pp7/everyday/assets/1b721d1c.png", self.location).href,
            bottle2: new URL("main/pp7/everyday/assets/27a957a0.png", self.location).href,
            bottle3: new URL("main/pp7/everyday/assets/27a957a0.png", self.location).href,
            coin: new URL("main/pp7/everyday/assets/49769a96.png", self.location).href
        }
    }),
    dL = bA.extend({
        elements: a.elementsFromImages("can3", "trash", "can1", "can2", "bottle1", "bottle2", "bottle3"),
        initializeTimeline() {
            s.set(".e.can3", {
                scaleX: 1,
                y: -100,
                x: -90
            }), s.set(".e.bottle3", {
                x: -40,
                y: -170,
                scaleX: -1
            }), this.timeline.to(".e.bottle1", {
                y: -20,
                opacity: 0
            }), this.timeline.to(".e.bottle2", {
                y: -20,
                opacity: 0
            }), this.timeline.to(".e.bottle3", {
                y: -190,
                opacity: 0
            })
        }
    }),
    pL = bA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("can3", "trash", "can1", "can2"),
        initializeTimeline() {
            s.set(".e.can3", {
                scaleX: 1,
                y: -100,
                x: -90
            }), this.timeline.to(".e.can1", {
                y: -20,
                opacity: 0
            }), this.timeline.to(".e.can2", {
                y: -20,
                opacity: 0
            }), this.timeline.to(".e.can3", {
                y: -120,
                opacity: 0
            })
        }
    }),
    hL = bA.extend({
        elements: a.elementsFromImages("bag"),
        initializeTimeline() {
            this.timeline.to(".e.bag", {
                scaleX: .8,
                scaleY: 1.2
            }), this.timeline.to(".e.bag", {
                scaleX: 1.2,
                scaleY: .8
            }), this.timeline.to(".e.bag", {
                scaleX: .8,
                scaleY: 1.2
            }), this.timeline.to(".e.bag", {
                scaleX: 1.2,
                scaleY: .9
            }), this.timeline.to(".e.bag", {
                rotate: -20,
                x: 100
            }), this.timeline.to(".e.bag", {
                rotate: 30,
                x: -850,
                y: -300
            })
        }
    }),
    uL = bA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("coin", "coin"),
        initializeTimeline() {
            s.set(".coin:first-child", {
                x: -250
            }), s.set(".coin:last-child", {
                x: 250,
                y: 50
            }), this.timeline.to(".e.coin", {
                y: -20,
                scale: 1.5,
                rotateY: 90,
                opacity: 0,
                stagger: .5
            })
        }
    }),
    vA = E.extend({
        imageManifest: {
            cup: new URL("main/pp7/everyday/assets/db86cd1e.png", self.location).href,
            spider: new URL("main/pp7/everyday/assets/9d513292.png", self.location).href,
            floor: new URL("main/pp7/everyday/assets/a47a9481.png", self.location).href
        }
    }),
    mL = vA.extend({
        elements: [{
            class: "floor",
            type: "img",
            pos: [50, 0],
            key: "floor"
        }, {
            class: "spider",
            type: "img",
            key: "spider"
        }],
        initializeTimeline() {
            s.set(".floor", {
                scale: 1.8
            }), s.set(".spider", {
                scale: 1.8
            }), s.to(".e.floor", {
                x: 125,
                y: 25,
                scale: 2.5,
                rotate: -2,
                ease: "power2.in",
                duration: 5
            }), s.to(".e.spider", {
                x: 125,
                y: 25,
                scale: 2.5,
                rotate: -2,
                ease: "power2.in",
                duration: 5
            })
        }
    }),
    fL = vA.extend({
        stepDuration: .1,
        elements: [{
            class: "floor",
            type: "img",
            key: "floor"
        }, {
            class: "spider",
            type: "img",
            key: "spider"
        }, {
            class: "cup",
            type: "img",
            key: "cup"
        }],
        onLoadComplete() {
            s.set(".cup", {
                y: -250,
                x: 100,
                rotate: 25
            }), s.set(".floor", {
                y: 200
            }), s.set(".spider", {
                y: 150
            })
        },
        initializeTimeline() {
            const t = s.to(".e.cup", {
                    repeat: -1,
                    yoyo: !0,
                    x: 50,
                    y: -150,
                    rotate: 0,
                    ease: "linear",
                    duration: 3
                }),
                e = s.timeline().to(".e.cup", {
                    x: 0,
                    y: 100,
                    rotate: 0,
                    ease: "linear",
                    duration: .1,
                    onStart: () => {
                        t.pause()
                    }
                }, 0);
            this.timeline.add(e)
        }
    }),
    qL = vA.extend({
        elements: [{
            class: "spider-container",
            type: "container",
            children: [{
                class: "floor",
                type: "img",
                key: "floor"
            }, {
                class: "spider",
                type: "img",
                key: "spider"
            }, {
                class: "cup",
                type: "img",
                key: "cup"
            }]
        }],
        addInfiniteWiggle: !1,
        initializeTimeline() {
            this.addInfiniteWiggle = !1, s.set(".cup", {
                y: 100,
                x: 0,
                rotate: 0
            }), s.set(".floor", {
                y: 200
            }), s.set(".spider", {
                y: 150
            }), s.timeline().to(".spider", {
                y: 145,
                x: -5,
                rotate: 15,
                yoyo: !0,
                repeat: -1,
                duration: .1
            }).to(".cup", {
                rotate: -3,
                yoyo: !0,
                repeat: -1,
                duration: .15
            });
            const t = s.timeline().to(".spider-container", {
                scale: 1,
                y: -200,
                duration: 3
            }, 0).to(".spider-container", {
                x: -800,
                duration: 2,
                ease: "power2.out"
            }, 3).to(".spider-container", {
                opacity: 0,
                duration: 1
            }, 4);
            this.timeline.add(t)
        }
    }),
    gL = vA.extend({
        stepDuration: 1.5,
        elements: [{
            class: "spider-container",
            type: "container",
            children: [{
                class: "floor",
                type: "img",
                pos: [100, 0],
                key: "floor"
            }, {
                class: "spider",
                type: "img",
                pos: [50, 0],
                key: "spider"
            }, {
                class: "cup",
                type: "img",
                key: "cup"
            }]
        }],
        initializeTimeline() {
            s.set(".spider-container", {
                opacity: 0,
                y: 300,
                scale: 5
            }), s.timeline().to(".spider-container", {
                scale: 1.5,
                opacity: 1,
                x: 0,
                y: 0,
                ease: "power2.out"
            }), s.timeline().to(".spider", {
                yoyo: !0,
                repeat: -1,
                rotate: 8,
                duration: .25
            });
            const t = s.timeline().to(".cup", {
                rotate: 25,
                y: -400,
                x: 200,
                duration: .3
            }).to(".spider", {
                x: -1e3,
                ease: "back: in",
                duration: .8
            }, .4);
            this.timeline.add(t)
        }
    });
s.registerPlugin(Cn);
const wA = E.extend({
        imageManifest: {
            butterfly: new URL("main/pp7/everyday/assets/c3b4d687.png", self.location).href,
            hose: new URL("main/pp7/everyday/assets/7adc401f.png", self.location).href,
            water: new URL("main/pp7/everyday/assets/75a4504a.png", self.location).href,
            kiddiePool: new URL("main/pp7/everyday/assets/235508a1.png", self.location).href
        }
    }),
    yL = wA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["kiddiePool", null, [0, 750]]),
        initializeTimeline() {
            const t = s.timeline().to(".e.kiddiePool", {
                x: -250,
                ease: "power4.in"
            }).to(".e.kiddiePool", {
                x: -500,
                ease: "power4.in"
            }).to(".e.kiddiePool", {
                x: -750,
                ease: "power4.in"
            });
            t.name = "image", this.timeline.add(t)
        }
    }),
    bL = wA.extend({
        elements: a.elementsFromImages(["kiddiePool", null, [0, -100]], "water", "hose"),
        onLoadComplete() {
            s.set(".e.water", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.water", {
                opacity: 1
            })
        }
    }),
    vL = wA.extend({
        elements: a.elementsFromImages(["butterfly", null, [0, 700]]),
        onLoadComplete() {
            s.to(".e.butterfly", {
                x: -1400,
                duration: 3.5,
                yoyo: !0,
                repeat: -1
            }), Cn.create("yWiggle", {
                wiggles: 100,
                type: "random"
            }), s.to(".e.butterfly", {
                y: 100,
                duration: 30,
                ease: "yWiggle",
                repeat: -1
            }, 0)
        }
    }),
    wL = wA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["kiddiePool", null, [0, -100]], "water", "hose"),
        initializeTimeline() {
            this.timeline.to(".scene-container", {
                scale: .5,
                opacity: 0
            })
        }
    }),
    xA = E.extend({
        imageManifest: {
            house: new URL("main/pp7/everyday/assets/5dd8d8f1.png", self.location).href,
            look: new URL("main/pp7/everyday/assets/dac6eefd.png", self.location).href,
            nail: new URL("main/pp7/everyday/assets/5f5bf492.png", self.location).href,
            roof: new URL("main/pp7/everyday/assets/af0f5a39.png", self.location).href
        }
    }),
    xL = xA.extend({
        elements: a.elementsFromImages(["roof", "roof1"], ["roof", "roof2"]),
        onLoadComplete() {
            s.set(".e.roof1", {
                y: -200,
                rotate: -100
            }), s.set(".e.roof2", {
                y: 400,
                rotateY: 180
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.roof1", {
                y: -230,
                rotate: -105
            }).to(".e.roof1", {
                y: -100,
                rotate: 0
            }).to(".e.roof2", {
                y: 430,
                rotate: -5,
                rotateY: 180
            }).to(".e.roof2", {
                y: 160,
                rotate: 180,
                rotateY: 180
            })
        }
    }),
    kL = xA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("nail"),
        onDiscreteProgress() {
            a.scaleBounce("nail")
        }
    }),
    CL = xA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("house"),
        onDiscreteProgress(t) {
            s.set(".e.house", {
                scale: 1 - t * .005,
                x: -2.6 * t,
                y: t * -.6
            })
        }
    }),
    RL = xA.extend({
        elements: a.elementsFromImages(["look", "birdhouse"], ["look", "family"]),
        onLoadComplete() {
            s.set(".e.birdhouse", {
                clip: "rect(0px 400px 1000px 0px)"
            }), s.set(".e.family", {
                clip: "rect(0px 1000px 1000px 405px)"
            })
        },
        initializeTimeline() {
            a.startShake("family", 1, 1, .7)
        }
    }),
    DL = E.extend({
        imageManifest: {
            tupp1: new URL("main/pp7/everyday/assets/94f0aaae.png", self.location).href,
            tupp2: new URL("main/pp7/everyday/assets/4407bf89.png", self.location).href,
            tupp3: new URL("main/pp7/everyday/assets/95d7c03b.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "tupp1",
            class: "tupp1Start",
            pos: [360, -250]
        }, {
            type: "img",
            key: "tupp1",
            class: "tupp1",
            pos: [250, -250]
        }, {
            type: "img",
            key: "tupp1",
            class: "tupp1",
            pos: [140, -250]
        }, {
            type: "img",
            key: "tupp1",
            class: "tupp1",
            pos: [30, -250]
        }, {
            type: "img",
            key: "tupp2",
            class: "tupp2Start",
            pos: [310, 0]
        }, {
            type: "img",
            key: "tupp2",
            class: "tupp2",
            pos: [250, 0]
        }, {
            type: "img",
            key: "tupp2",
            class: "tupp2",
            pos: [190, 0]
        }, {
            type: "img",
            key: "tupp2",
            class: "tupp2",
            pos: [130, 0]
        }, {
            type: "img",
            key: "tupp3",
            class: "tupp3",
            pos: [210, 250]
        }, {
            type: "img",
            key: "tupp3",
            class: "tupp3",
            pos: [230, 250]
        }, {
            type: "img",
            key: "tupp3",
            class: "tupp3",
            pos: [250, 250]
        }, {
            type: "img",
            key: "tupp3",
            class: "tupp3Start",
            pos: [270, 250]
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.fromTo(".e.tupp1", {
                opacity: 0,
                y: "+=0"
            }, {
                opacity: 1,
                stagger: .1,
                y: "+=0"
            }), this.timeline.fromTo(".e.tupp2", {
                opacity: 0,
                y: "+=0"
            }, {
                opacity: 1,
                stagger: .1,
                y: "+=0"
            }), this.timeline.fromTo(".e.tupp3", {
                opacity: 0,
                y: "+=0"
            }, {
                reversed: !0,
                opacity: 1,
                stagger: .1,
                y: "+=0"
            })
        }
    }),
    SL = E.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/5ff1946a.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "image",
            pos: [0, 0],
            class: "image"
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.fromTo(".e.image", {
                x: 0
            }, {
                x: 650,
                rotate: -5
            })
        }
    }),
    S2 = E.extend({
        imageManifest: {
            cabinet: new URL("main/pp7/everyday/assets/e9094a50.png", self.location).href,
            doorLeft: new URL("main/pp7/everyday/assets/9fdb6219.png", self.location).href,
            doorRight: new URL("main/pp7/everyday/assets/59002737.png", self.location).href,
            tupp1: new URL("main/pp7/everyday/assets/94f0aaae.png", self.location).href,
            tupp2: new URL("main/pp7/everyday/assets/4407bf89.png", self.location).href,
            tupp3: new URL("main/pp7/everyday/assets/eab2b8e3.png", self.location).href,
            tupp4: new URL("main/pp7/everyday/assets/75210dca.png", self.location).href,
            tupp5: new URL("main/pp7/everyday/assets/d4926e25.png", self.location).href,
            tupp6: new URL("main/pp7/everyday/assets/95d7c03b.png", self.location).href,
            tupp7: new URL("main/pp7/everyday/assets/5e159a43.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "cabinet",
            pos: [0, 0],
            class: "cabinet"
        }, {
            type: "img",
            key: "doorLeft",
            pos: [0, -160],
            class: "doorLeft"
        }, {
            type: "img",
            key: "doorRight",
            pos: [0, 160],
            class: "doorRight"
        }, {
            type: "img",
            key: "tupp1",
            pos: [0, 0],
            class: "tupp1"
        }, {
            type: "img",
            key: "tupp2",
            pos: [0, 0],
            class: "tupp2"
        }, {
            type: "img",
            key: "tupp3",
            pos: [0, 0],
            class: "tupp3"
        }, {
            type: "div",
            class: "particles",
            html: "",
            pos: [0, 0]
        }],
        stepDuration: 1,
        initializeTimeline() {
            const t = this;
            let e = !0;
            this.timeline.fromTo(".e.doorRight", {
                rotateY: -30
            }, {
                rotateY: 0,
                yoyo: !0,
                repeat: 4,
                ease: "Power2.inOut"
            }), this.timeline.fromTo(".e.doorLeft", {
                rotateY: -30
            }, {
                rotateY: 0,
                yoyo: !0,
                repeat: 4,
                ease: "Power2.inOut",
                onComplete() {
                    e && (t.particles.restart(), t.particles2.restart(), t.particles3.restart(), e = !1)
                }
            }, "<"), this.timeline.fromTo(".e.doorRight", {
                rotateY: 0
            }, {
                rotateY: 180,
                ease: "Power2.inOut"
            }), this.timeline.fromTo(".e.doorLeft", {
                rotateY: 0
            }, {
                rotateY: 180,
                ease: "Power2.inOut",
                onComplete() {
                    t.particles.kill(), t.particles2.kill(), t.particles3.kill()
                }
            }, "<"), s.set(".e.particles", {
                top: "50%",
                left: "50%"
            }), this.particles = a.addParticleEmitter({
                container: "particles",
                numberOfParticles: 10,
                autoplay: !1,
                restartOnProgress: !1,
                zIndex: 1,
                image: "tupp1",
                settings: {
                    frequency: .15,
                    from: {
                        opacity: 1,
                        x: "-55%",
                        y: "-55%"
                    },
                    to: {
                        duration: 1,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 1e3,
                    maxSize: 1e3,
                    angle: 180,
                    force: .2,
                    gravity: .15,
                    randomAngle: !0,
                    boundaries: {
                        left: 0,
                        top: 0,
                        right: 1,
                        bottom: 1
                    }
                }
            }, this), this.particles2 = a.addParticleEmitter({
                container: "particles",
                numberOfParticles: 10,
                className: "fx2",
                autoplay: !1,
                restartOnProgress: !1,
                zIndex: 1,
                image: "tupp2",
                settings: {
                    frequency: .15,
                    from: {
                        opacity: 1,
                        x: "-45%",
                        y: "-55%"
                    },
                    to: {
                        duration: 1,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 1e3,
                    maxSize: 1e3,
                    angle: 180,
                    force: -.2,
                    gravity: .25,
                    randomAngle: !0,
                    boundaries: {
                        left: 0,
                        top: 0,
                        right: 1,
                        bottom: 1
                    }
                }
            }, this), this.particles3 = a.addParticleEmitter({
                container: "particles",
                numberOfParticles: 10,
                className: "fx3",
                autoplay: !1,
                restartOnProgress: !1,
                zIndex: 1,
                image: "tupp3",
                settings: {
                    frequency: .15,
                    from: {
                        opacity: 1,
                        x: "-50%",
                        y: "-60%"
                    },
                    to: {
                        duration: 1,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 1e3,
                    maxSize: 1e3,
                    angle: 180,
                    force: -.2,
                    gravity: .25,
                    randomAngle: !0,
                    boundaries: {
                        left: 0,
                        top: 0,
                        right: 1,
                        bottom: 1
                    }
                }
            }, this)
        }
    }),
    TL = E.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/5ff1946a.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "image",
            pos: [0, 0],
            class: "image"
        }],
        stepDuration: 2,
        initializeTimeline() {
            this.timeline.fromTo(".e.image", {
                rotate: -20,
                x: -100
            }, {
                x: 150,
                rotate: 15,
                ease: "power1.inOut"
            }), this.timeline.to(".e.image", {
                x: -50,
                rotate: -10,
                ease: "power1.inOut"
            }), this.timeline.to(".e.image", {
                x: 30,
                rotate: 5,
                ease: "power1.inOut"
            }), this.timeline.to(".e.image", {
                x: 0,
                rotate: 0,
                ease: "power1.inOut"
            })
        }
    }),
    EL = E.extend({
        imageManifest: {
            tupp1: new URL("main/pp7/everyday/assets/94f0aaae.png", self.location).href,
            tupp2: new URL("main/pp7/everyday/assets/4407bf89.png", self.location).href,
            tupp3: new URL("main/pp7/everyday/assets/eab2b8e3.png", self.location).href,
            tupp4: new URL("main/pp7/everyday/assets/75210dca.png", self.location).href,
            tupp5: new URL("main/pp7/everyday/assets/d4926e25.png", self.location).href,
            tupp6: new URL("main/pp7/everyday/assets/95d7c03b.png", self.location).href,
            tupp7: new URL("main/pp7/everyday/assets/5e159a43.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "tupp7",
            pos: [-200, 0],
            class: "tupp7"
        }, {
            type: "img",
            key: "tupp1",
            pos: [-100, -150],
            class: "tupp1"
        }, {
            type: "img",
            key: "tupp2",
            pos: [-70, 0],
            class: "tupp2"
        }, {
            type: "img",
            key: "tupp3",
            pos: [-80, 130],
            class: "tupp3"
        }, {
            type: "img",
            key: "tupp4",
            pos: [0, -120],
            class: "tupp4"
        }, {
            type: "img",
            key: "tupp5",
            pos: [20, 20],
            class: "tupp5"
        }, {
            type: "img",
            key: "tupp6",
            pos: [50, 150],
            class: "tupp6"
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.to(".e.tupp3", {
                x: 650,
                y: -400,
                rotate: 360
            }), this.timeline.to(".e.tupp1", {
                x: -650,
                y: -400,
                rotate: 360
            }), this.timeline.to(".e.tupp5", {
                x: 650,
                y: -400,
                rotate: 360
            }), this.timeline.to(".e.tupp7", {
                x: -650,
                y: -400,
                rotate: 360
            })
        }
    }),
    LL = S2.extend({}),
    kA = E.extend({
        imageManifest: {
            ant: new URL("main/pp7/everyday/assets/14d0569e.png", self.location).href,
            deadAnt: new URL("main/pp7/everyday/assets/18de6d5a.png", self.location).href,
            paperTowel: new URL("main/pp7/everyday/assets/aa1817ac.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/d8aa9774.png", self.location).href
        }
    }),
    BL = kA.extend({
        elements: a.elementsFromImages(["ant", "ant1"], ["ant", "ant2"], ["ant", "ant3"]),
        onLoadComplete() {
            s.set(".e.ant1", {
                x: -300
            }), s.set(".e.ant3", {
                x: 300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.ant1", {
                scaleY: .75,
                y: 50
            }).to(".e.ant1", {
                y: -1500,
                scaleY: 3,
                scaleX: .5,
                duration: .25
            }).to(".e.ant2", {
                scaleY: .75,
                y: 50
            }).to(".e.ant2", {
                y: -1500,
                scaleY: 3,
                scaleX: .5,
                duration: .25
            }).to(".e.ant3", {
                scaleY: .75,
                y: 50
            }).to(".e.ant3", {
                y: -1500,
                scaleY: 3,
                scaleX: .5,
                duration: .25
            })
        }
    }),
    ML = kA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["ant", "ant1"], ["ant", "ant2"], ["ant", "ant3"], ["ant", "ant4"], ["ant", "ant5"], ["deadAnt", "deadAnt1"], ["deadAnt", "deadAnt2"], ["deadAnt", "deadAnt3"], ["deadAnt", "deadAnt4"], ["deadAnt", "deadAnt5"]),
        onLoadComplete() {
            s.set(".e.ant1", {
                x: -200,
                y: -50
            }), s.set(".e.deadAnt1", {
                x: -200,
                y: -50,
                visibility: "hidden"
            }), s.set(".e.ant2", {
                x: 100,
                y: -300
            }), s.set(".e.deadAnt2", {
                x: 100,
                y: -300,
                visibility: "hidden"
            }), s.set(".e.ant3", {
                x: 150,
                rotateY: 180
            }), s.set(".e.deadAnt3", {
                x: 150,
                rotateY: 180,
                visibility: "hidden"
            }), s.set(".e.ant4", {
                x: -150,
                y: 300,
                rotateY: 180
            }), s.set(".e.deadAnt4", {
                x: -150,
                y: 300,
                rotateY: 180,
                visibility: "hidden"
            }), s.set(".e.ant5", {
                x: 200,
                y: 450
            }), s.set(".e.deadAnt5", {
                x: 200,
                y: 450,
                visibility: "hidden"
            }), a.startShake("ant1", 6, 0, 2), a.startShake("ant2", 6, 0, 2), a.startShake("ant3", 6, 0, 2), a.startShake("ant4", 6, 0, 2), a.startShake("ant5", 6, 0, 2)
        },
        onDiscreteProgress(t) {
            const e = Math.round(t / 100 * 5),
                n = `.e.ant${e}`,
                i = `.e.deadAnt${e}`;
            s.to(n, {
                scaleY: .25
            }), s.set(i, {
                visibility: "visible"
            }), s.set(n, {
                visibility: "hidden"
            })
        }
    }),
    OL = kA.extend({
        elements: a.elementsFromImages(["deadAnt", "deadAnt1"], ["deadAnt", "deadAnt2"], ["deadAnt", "deadAnt3"], ["deadAnt", "deadAnt4"], ["deadAnt", "deadAnt5"], "paperTowel"),
        onLoadComplete() {
            s.set(".e.deadAnt1", {
                x: -200,
                y: -50
            }), s.set(".e.deadAnt2", {
                x: 100,
                y: -300
            }), s.set(".e.deadAnt3", {
                x: 150,
                rotateY: 180
            }), s.set(".e.deadAnt4", {
                x: -150,
                y: 300,
                rotateY: 180
            }), s.set(".e.deadAnt5", {
                x: 200,
                y: 450
            }), s.set(".e.paperTowel", {
                scale: 2,
                x: 450,
                y: 1500,
                rotate: -30
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paperTowel", {
                y: 300,
                x: 0
            }).to(".e.deadAnt5", {
                y: 0,
                x: -250
            }, "<.25").to(".e.deadAnt4", {
                y: 0,
                x: -250,
                rotate: 45
            }, "<").to(".e.paperTowel", {
                y: 50,
                x: -300,
                rotate: 40
            }, "<").to(".e.paperTowel", {
                y: -200,
                x: 350,
                rotate: 245
            }).to(".e.paperTowel", {
                y: -130,
                x: -30
            }).to(".e.deadAnt3", {
                y: 0,
                x: -255,
                rotate: -4
            }, "<.25").to(".e.deadAnt2", {
                y: 0,
                x: -250
            }, "<").to(".e.deadAnt1", {
                y: 0,
                x: -243,
                rotate: 10
            }, "<").to(".e.paperTowel", {
                y: -200,
                x: -250
            })
        }
    }),
    IL = kA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("trash", "paperTowel"),
        onLoadComplete() {
            s.set(".e.paperTowel", {
                scale: .8,
                y: -400
            }), s.set(".e.trash", {
                y: 350
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paperTowel", {
                y: -460
            }).to(".e.paperTowel", {
                y: 70
            }).to(".e.paperTowel", {
                visibility: "hidden"
            }).to(".e.trash", {
                y: 420
            }).to(".e.trash", {
                y: 350
            })
        }
    }),
    CA = E.extend({
        imageManifest: {
            ant: new URL("main/pp7/everyday/assets/a3361a35.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/2ad26346.png", self.location).href,
            show1: new URL("main/pp7/everyday/assets/df830c26.png", self.location).href,
            show2: new URL("main/pp7/everyday/assets/b862c36a.png", self.location).href,
            show3: new URL("main/pp7/everyday/assets/53f3239b.png", self.location).href,
            static: new URL("main/pp7/everyday/assets/8a8cde63.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "tv-container",
            children: [{
                type: "img",
                pos: [71, 0],
                key: "ant",
                class: "ant"
            }, {
                type: "img",
                pos: [0, 0],
                key: "show1",
                class: "show1"
            }, {
                type: "img",
                pos: [0, 0],
                key: "show2",
                class: "show2"
            }, {
                type: "img",
                pos: [0, 0],
                key: "show3",
                class: "show3"
            }, {
                type: "img",
                pos: [0, 0],
                key: "static",
                class: "static"
            }, {
                type: "img",
                pos: [0, 0],
                key: "tv",
                class: "tv"
            }]
        }],
        onLoadComplete() {
            s.set(".e.tv", {
                clipPath: "inset(34% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.ant", {
                rotateY: -360
            }), this.timeline.fromTo(".e.static", {
                opacity: .5
            }, {
                opacity: 1,
                ease: "bounce.out"
            }, "<"), s.set(".e.static", {
                opacity: .5
            })
        }
    }),
    PL = CA.extend({
        initializeTimeline() {
            this.timeline.to(".e.ant", {
                rotateY: -180
            }), this.timeline.fromTo(".e.static", {
                opacity: 1
            }, {
                opacity: .6,
                ease: "bounce.out"
            }, "<")
        }
    }),
    UL = CA.extend({
        initializeTimeline() {
            this.timeline.to(".e.ant", {
                rotateY: 360
            }), this.timeline.fromTo(".e.static", {
                opacity: .6
            }, {
                opacity: 1,
                ease: "bounce.out"
            }, "<")
        }
    }),
    FL = CA.extend({
        stepDuration: .5,
        initializeTimeline() {
            this.timeline.fromTo(".e.static", {
                opacity: .9
            }, {
                opacity: .8,
                duration: .1
            }, "+=0.01", 0), this.timeline.to(".e.ant", {
                rotateY: "+=180"
            }, "<"), this.timeline.to(".e.tv-container", {
                scale: .9,
                yoyo: !0,
                repeat: 1,
                ease: "power2.out"
            }, "<"), this.timeline.set(".e.show3", {
                display: "none"
            }, .01), this.timeline.to(".e.static", {
                opacity: .6,
                duration: .1
            }, "+=0.01"), this.timeline.to(".e.ant", {
                rotateY: "+=180"
            }, "<"), this.timeline.to(".e.tv-container", {
                scale: .9,
                yoyo: !0,
                repeat: 1,
                ease: "power2.out"
            }, "<"), this.timeline.set(".e.show2", {
                display: "none"
            }, "+=0.01"), this.timeline.to(".e.static", {
                opacity: 0,
                duration: .1
            }), this.timeline.to(".e.ant", {
                rotateY: "+=180"
            }, "<"), this.timeline.to(".e.tv-container", {
                scale: .9,
                yoyo: !0,
                repeat: 1,
                ease: "power2.out"
            }, "<")
        }
    }),
    T2 = E.extend({
        className: "microwave-soup",
        bindings: {
            ".timer": "microwaveTimer"
        },
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/18ec6e0a.png", self.location).href,
            microwave: new URL("main/pp7/everyday/assets/ad44a16c.png", self.location).href,
            soup: new URL("main/pp7/everyday/assets/9752bffa.png", self.location).href
        },
        elements() {
            const t = a.elementsFromImages("microwave", ["soup", null, [490, 200]], "door");
            return t.push({
                class: "timer",
                type: "div",
                pos: [302, 639]
            }), [{
                class: "microwave-container",
                type: "container",
                children: t
            }]
        }
    }),
    E2 = T2.extend({
        stepDuration: .4,
        onDiscreteProgress() {
            a.squashOnce("microwave-container", .4, "yqw")
        },
        onLoadComplete() {
            this.model.set({
                microwaveTimer: "00:00"
            })
        }
    }),
    L2 = T2.extend({
        initializeTimeline() {
            const t = s.timeline({
                repeat: 1
            }).to(".e.soup", {
                x: -15,
                y: 5,
                ease: "circ.inOut"
            }).to(".e.soup", {
                x: -30,
                y: 0,
                ease: "circ.inOut"
            }).to(".e.soup", {
                x: -15,
                y: -5,
                ease: "circ.inOut"
            }).to(".e.soup", {
                x: 0,
                y: 0,
                ease: "circ.inOut"
            });
            this.timeline.add(t)
        },
        onProgress(t) {
            this.model.set({
                microwaveTimer: `00:0${5-Math.floor(t/20)}`
            })
        }
    }),
    jL = r0,
    QL = E2,
    zL = L2,
    HL = r0,
    RA = E.extend({
        imageManifest: {
            candelabra: new URL("main/pp7/everyday/assets/69cf3d69.png", self.location).href,
            table: new URL("main/pp7/everyday/assets/f8fcd64c.png", self.location).href,
            tablecloth: new URL("main/pp7/everyday/assets/01b57fe5.png", self.location).href,
            tablewrinkle: new URL("main/pp7/everyday/assets/743709b0.png", self.location).href
        }
    }),
    NL = RA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("table", "tablewrinkle"),
        onLoadComplete() {
            s.set(".e.tablewrinkle", {
                y: 2e3,
                scale: 5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.tablewrinkle", {
                y: -1e3
            }).to(".e.tablewrinkle", {
                scale: 1,
                y: 0
            })
        }
    }),
    GL = RA.extend({
        elements: a.elementsFromImages("tablewrinkle"),
        initializeTimeline() {
            this.timeline.to(".e.tablewrinkle", {
                scale: 5,
                y: 800
            }).to(".e.tablewrinkle", {
                scale: 1,
                x: 0,
                y: 0
            }).to(".e.tablewrinkle", {
                scale: 5,
                x: -1200,
                y: 1e3
            }).to(".e.tablewrinkle", {
                scale: 1,
                x: 0,
                y: 0
            })
        }
    }),
    XL = RA.extend({
        elements: a.elementsFromImages("tablewrinkle", "tablecloth"),
        onLoadComplete() {
            s.set(".e.tablecloth", {
                opacity: 0,
                scale: 10
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.tablewrinkle", {
                scale: 10
            }).to(".e.tablewrinkle", {
                opacity: 0
            }).to(".e.tablecloth", {
                opacity: 1
            }, "<-.25").to(".e.tablecloth", {
                scale: 1
            })
        }
    }),
    YL = RA.extend({
        stepDuration: .7,
        elements: a.elementsFromImages("tablecloth", "candelabra"),
        onLoadComplete() {
            s.set(".e.candelabra", {
                x: 800,
                y: 1500,
                rotate: 50
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.candelabra", {
                x: 50,
                y: -280,
                rotate: 0,
                scaleX: .8,
                scaleY: .7
            }).to(".e.tablecloth", {
                y: 50
            }, "<").to(".e.tablecloth", {
                y: 0
            }).to(".e.candelabra", {
                y: -300,
                scaleY: .8
            }, "<")
        }
    }),
    tV = E.extend({
        imageManifest: {
            Broom: new URL("main/pp7/everyday/assets/fa31d37d.png", self.location).href,
            Chimney: new URL("main/pp7/everyday/assets/009ac0cb.png", self.location).href,
            ChimneyTop: new URL("main/pp7/everyday/assets/4f2ccaa8.png", self.location).href,
            Dust: new URL("main/pp7/everyday/assets/024447f1.png", self.location).href,
            Present1: new URL("main/pp7/everyday/assets/a97d8db0.png", self.location).href,
            Present2: new URL("main/pp7/everyday/assets/4cedefd2.png", self.location).href,
            Present3: new URL("main/pp7/everyday/assets/a1c1bf71.png", self.location).href,
            Santa: new URL("main/pp7/everyday/assets/77cdffdf.png", self.location).href
        }
    }),
    KL = tV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Chimney",
                type: "img",
                pos: [-100, 0],
                key: "Chimney"
            }, {
                class: "Broom",
                type: "img",
                pos: [320, 0],
                key: "Broom"
            }, {
                class: "ChimneyTop",
                type: "img",
                pos: [-100, 0],
                key: "ChimneyTop"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Broom", {
                scaleY: -.8,
                scaleX: .8,
                rotate: -3
            });
            const t = s.timeline().to(".e.Broom", {
                repeat: 2,
                yoyo: !0,
                y: -200,
                scaleY: -1,
                scaleX: 1,
                rotate: 10,
                x: 10,
                ease: "back.out"
            }, 0);
            this.timeline.add(t)
        }
    }),
    WL = tV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Chimney",
                type: "img",
                pos: [-100, 0],
                key: "Chimney"
            }, {
                class: "Broom",
                type: "img",
                pos: [190, 0],
                key: "Broom"
            }, {
                class: "ChimneyTop",
                type: "img",
                pos: [-100, 0],
                key: "ChimneyTop"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Broom", {
                scaleY: -.8,
                scaleX: .8,
                rotate: 20
            });
            const t = s.timeline().to(".e.Broom", {
                repeat: 3,
                yoyo: !0,
                duration: .5,
                ease: "linear",
                y: -80,
                x: -30,
                rotate: -20
            }, 0).to(".chimney-container", {
                duration: 2,
                ease: "linear",
                scale: 5,
                opacity: 0,
                y: -1e3
            }, 1);
            this.timeline.add(t)
        }
    }),
    JL = tV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Dust",
                type: "img",
                pos: [0, 0],
                key: "Dust"
            }]
        }],
        stepDuration: 3,
        initializeTimeline() {
            a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 60,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Dust",
                settings: {
                    fullThrottle: !0,
                    randomAngleRange: 35,
                    minSize: 200,
                    maxSize: 1500,
                    force: 0,
                    gravity: -1,
                    boundaries: {
                        top: 250,
                        bottom: 500,
                        left: -100,
                        right: 300
                    }
                }
            }, this)
        }
    }),
    ZL = tV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Present1",
                type: "img",
                pos: [0, 0],
                key: "Present1"
            }, {
                class: "Present2",
                type: "img",
                pos: [0, 0],
                key: "Present2"
            }, {
                class: "Present3",
                type: "img",
                pos: [0, 0],
                key: "Present3"
            }, {
                class: "Present4",
                type: "img",
                pos: [0, 0],
                key: "Present1"
            }]
        }],
        stepDuration: 2,
        initializeTimeline() {
            s.set(".e.Present4", {
                scale: 2,
                rotate: -10
            });
            const t = s.timeline().to(".e.Present4", {
                duration: 1,
                ease: "linear",
                scale: 0,
                opacity: 0
            }, 0);
            this.timeline.add(t), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 8,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Present1",
                className: "Particle1",
                settings: {
                    particleLimit: 5,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 10,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Present2",
                className: "Particle2",
                settings: {
                    particleLimit: 6,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 3,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Present3",
                className: "Particle3",
                settings: {
                    particleLimit: 2,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this)
        }
    }),
    _L = tV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Santa",
                type: "img",
                pos: [0, 0],
                key: "Santa"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Santa", {
                scale: 1.6,
                rotate: -10,
                opacity: 0,
                y: -2e3
            }), s.timeline().to(".e.Santa", {
                duration: .7,
                scale: 2.2,
                ease: "bounce.out",
                y: 0,
                opacity: 1,
                rotate: 10
            });
            const t = s.timeline().to(".chimney-container", {
                duration: .5,
                ease: "back.inOut",
                scale: 0,
                opacity: 0
            }, 0);
            this.timeline.add(t)
        }
    }),
    nV = E.extend({
        imageManifest: {
            Broom: new URL("main/pp7/everyday/assets/fa31d37d.png", self.location).href,
            BroomRight: new URL("main/pp7/everyday/assets/235ed41b.png", self.location).href,
            Chimney: new URL("main/pp7/everyday/assets/009ac0cb.png", self.location).href,
            ChimneyTop: new URL("main/pp7/everyday/assets/4f2ccaa8.png", self.location).href,
            Dust: new URL("main/pp7/everyday/assets/024447f1.png", self.location).href,
            Arrow: new URL("main/pp7/everyday/assets/5f559894.png", self.location).href,
            Baseball: new URL("main/pp7/everyday/assets/618e9d91.png", self.location).href,
            Ball: new URL("main/pp7/everyday/assets/6c3c7157.png", self.location).href,
            Birdie: new URL("main/pp7/everyday/assets/0763a381.png", self.location).href,
            Frisbee: new URL("main/pp7/everyday/assets/a451c4dc.png", self.location).href
        }
    }),
    $L = nV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Chimney",
                type: "img",
                pos: [-100, 0],
                key: "Chimney"
            }, {
                class: "Broom",
                type: "img",
                pos: [320, 0],
                key: "Broom"
            }, {
                class: "ChimneyTop",
                type: "img",
                pos: [-100, 0],
                key: "ChimneyTop"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Chimney", {
                scale: 1
            }), s.set(".e.ChimneyTop", {
                scale: 1
            }), s.set(".e.Broom", {
                scaleY: -.8,
                scaleX: .8,
                rotate: -10
            });
            const t = s.timeline().to(".e.Broom", {
                repeat: 2,
                yoyo: !0,
                y: -200,
                scaleY: -1,
                scaleX: 1,
                rotate: 10,
                x: 10,
                ease: "back.out"
            }, 0);
            this.timeline.add(t)
        }
    }),
    eB = nV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Chimney",
                type: "img",
                pos: [-100, 0],
                key: "Chimney"
            }, {
                class: "Broom",
                type: "img",
                pos: [190, 0],
                key: "Broom"
            }, {
                class: "ChimneyTop",
                type: "img",
                pos: [-100, 0],
                key: "ChimneyTop"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Broom", {
                scaleY: -.8,
                scaleX: .8,
                rotate: 20
            });
            const t = s.timeline().to(".e.Broom", {
                repeat: 2,
                yoyo: !0,
                duration: .5,
                ease: "linear",
                y: -80,
                x: -30,
                rotate: -20
            }, 0).to(".chimney-container", {
                duration: 2,
                ease: "linear",
                scale: 5,
                opacity: 0,
                y: -1e3
            }, 1);
            this.timeline.add(t)
        }
    }),
    tB = nV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Dust",
                type: "img",
                pos: [0, 0],
                key: "Dust"
            }]
        }],
        stepDuration: 3,
        initializeTimeline() {
            a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 60,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Dust",
                settings: {
                    fullThrottle: !0,
                    randomAngleRange: 35,
                    minSize: 200,
                    maxSize: 1500,
                    force: 0,
                    gravity: -1,
                    boundaries: {
                        top: 250,
                        bottom: 500,
                        left: -100,
                        right: 300
                    }
                }
            }, this)
        }
    }),
    nB = nV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "BroomRight",
                type: "img",
                pos: [0, 0],
                key: "BroomRight"
            }, {
                class: "Arrow",
                type: "img",
                pos: [0, 0],
                key: "Arrow"
            }, {
                class: "Ball",
                type: "img",
                pos: [0, 0],
                key: "Ball"
            }, {
                class: "Baseball",
                type: "img",
                pos: [0, 0],
                key: "Baseball"
            }, {
                class: "Birdie",
                type: "img",
                pos: [0, 0],
                key: "Birdie"
            }, {
                class: "Frisbee",
                type: "img",
                pos: [0, 0],
                key: "Frisbee"
            }]
        }],
        stepDuration: 2,
        initializeTimeline() {
            s.set(".e.BroomRight", {
                scale: 1.4
            });
            const t = s.timeline().to(".e.BroomRight", {
                duration: 1,
                ease: "linear",
                scale: 0,
                opacity: 0
            }, 0);
            this.timeline.add(t), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 8,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Ball",
                className: "Particle1",
                settings: {
                    particleLimit: 5,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 10,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Arrow",
                className: "Particle2",
                settings: {
                    particleLimit: 6,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 3,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Birdie",
                className: "Particle3",
                settings: {
                    particleLimit: 2,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 6,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Frisbee",
                className: "Particle4",
                settings: {
                    particleLimit: 5,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this), a.addParticleEmitter({
                container: "chimney-container",
                numberOfParticles: 10,
                autoplay: !1,
                restartOnProgress: !0,
                image: "Baseball",
                className: "Particle5",
                settings: {
                    particleLimit: 6,
                    randomAngleRange: 35,
                    minSize: 500,
                    maxSize: 1500,
                    to: {
                        duration: 2,
                        opacity: 1
                    },
                    force: -3,
                    gravity: 3,
                    boundaries: {
                        top: -500,
                        bottom: -200,
                        left: -300,
                        right: 300
                    }
                }
            }, this)
        }
    }),
    iB = nV.extend({
        elements: [{
            class: "chimney-container",
            type: "container",
            children: [{
                class: "Arrow",
                type: "img",
                pos: [-60, -40],
                key: "Arrow"
            }, {
                class: "Ball",
                type: "img",
                pos: [0, 40],
                key: "Ball"
            }, {
                class: "Baseball",
                type: "img",
                pos: [40, -150],
                key: "Baseball"
            }, {
                class: "Birdie",
                type: "img",
                pos: [0, 170],
                key: "Birdie"
            }, {
                class: "Frisbee",
                type: "img",
                pos: [80, 75],
                key: "Frisbee"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".chimney-container", {
                scale: 1.8,
                opacity: 1
            });
            const t = s.timeline().to(".chimney-container", {
                duration: .5,
                ease: "back.inOut",
                scale: 0,
                opacity: 0
            }, 0);
            this.timeline.add(t)
        }
    }),
    p0 = E.extend({
        imageManifest: {
            playerFace: new URL("main/pp7/everyday/assets/7329d5a4.png", self.location).href,
            shrug: new URL("main/pp7/everyday/assets/b9d2a0fb.png", self.location).href,
            unsure: new URL("main/pp7/everyday/assets/00ce6992.png", self.location).href,
            wave: new URL("main/pp7/everyday/assets/32f819ac.png", self.location).href,
            backAway: new URL("main/pp7/everyday/assets/04d9cf5d.png", self.location).href,
            window: new URL("main/pp7/everyday/assets/ca3b0b36.png", self.location).href
        }
    }),
    sB = p0.extend({
        elements: [{
            class: "neighbor-container",
            type: "container",
            children: [{
                class: "playerFace",
                type: "img",
                pos: [-50, -50],
                key: "playerFace"
            }, {
                class: "unsure",
                type: "img",
                pos: [350, 200],
                key: "unsure"
            }, {
                class: "weirdedOut",
                type: "img",
                pos: [350, 200],
                key: "unsure"
            }]
        }],
        initializeTimeline() {
            s.set(".e.playerFace", {
                scale: 1.3,
                rotate: -10
            }), s.set(".e.unsure", {
                scale: .75,
                rotate: 10
            }), s.set(".e.weirdedOut", {
                scale: .75,
                opacity: 0,
                rotate: 10
            });
            const t = () => {
                    s.timeline().to(".e.playerFace", {
                        repeat: -1,
                        yoyo: !0,
                        duration: .1,
                        ease: "linear",
                        x: `+=${X.exports.random(-30,30)}`,
                        y: `+=${X.exports.random(-30,30)}`
                    }, 1)
                },
                e = s.timeline().to(".e.playerFace", {
                    scale: 2.2,
                    duration: 5,
                    onStart: t
                }, 0).to(".e.unsure", {
                    opacity: 0
                }, 2.5).to(".e.weirdedOut", {
                    opacity: 1
                }, 2.5);
            this.timeline.add(e)
        }
    }),
    oB = p0.extend({
        elements: [{
            class: "neighbor-container",
            type: "container",
            children: [{
                class: "wave",
                type: "img",
                pos: [-180, -120],
                key: "wave"
            }, {
                class: "weirdedOut",
                type: "img",
                pos: [350, 200],
                key: "unsure"
            }, {
                class: "shrug",
                type: "img",
                pos: [436, 160],
                key: "shrug"
            }]
        }],
        wave: null,
        initializeTimeline() {
            s.set(".e.weirdedOut", {
                scale: .75,
                opacity: 1,
                rotate: 10
            }), s.set(".e.shrug", {
                opacity: 0,
                rotate: 10
            }), s.set(".e.wave", {
                rotate: -25,
                scale: .8
            }), this.wave = s.timeline().to(".e.wave", {
                repeat: -1,
                yoyo: !0,
                ease: "linear",
                rotate: 25
            }, 0), this.timeline.add(this.wave)
        },
        onProgressChange(t, e) {
            const n = e / 40;
            this.wave.timeScale(n), this.timeline.play(), e >= 50 ? s.timeline().to(".e.weirdedOut", {
                opacity: 0
            }, 2.5).to(".e.shrug", {
                opacity: 1
            }, 2.5) : s.timeline().to(".e.weirdedOut", {
                opacity: 1
            }, 2.5).to(".e.shrug", {
                opacity: 0
            }, 2.5), e >= 100 && s.to(".e.wave", {
                opacity: 0,
                scale: .4,
                ease: "back.in",
                duration: 1
            })
        }
    }),
    aB = p0.extend({
        elements: [{
            class: "neighbor-container",
            type: "container",
            children: [{
                class: "window",
                type: "img",
                pos: [-200, 100],
                key: "window"
            }, {
                class: "backAway",
                type: "img",
                pos: [-50, 0],
                key: "backAway"
            }, {
                class: "shrug",
                type: "img",
                pos: [436, 160],
                key: "shrug"
            }]
        }],
        initializeTimeline() {
            s.set(".e.shrug", {
                rotate: 10
            });
            const t = s.timeline().to(".e.backAway", {
                x: -800,
                ease: "power2.in"
            }, 0).to(".e.window", {
                x: 800,
                ease: "power2.in"
            }, 0).to(".e.shrug", {
                x: -200,
                y: 0,
                scale: 5,
                rotate: -10,
                ease: "power4.in"
            }, 0);
            this.timeline.add(t)
        }
    }),
    DA = E.extend({
        imageManifest: {
            cup: new URL("main/pp7/everyday/assets/664da326.png", self.location).href,
            dish: new URL("main/pp7/everyday/assets/29e6f7fc.png", self.location).href,
            fork: new URL("main/pp7/everyday/assets/d3f1961e.png", self.location).href,
            glass: new URL("main/pp7/everyday/assets/f11294f4.png", self.location).href,
            gunk: new URL("main/pp7/everyday/assets/31e6ecb5.png", self.location).href,
            knife: new URL("main/pp7/everyday/assets/c4ced4e6.png", self.location).href,
            spoon: new URL("main/pp7/everyday/assets/bff9f57f.png", self.location).href
        }
    }),
    rB = DA.extend({
        stepDuration: .45,
        elements: a.elementsFromImages(["glass", "glass5"], ["glass", "glass1"], ["glass", "glass2"], ["glass", "glass3"], ["glass", "glass4"]),
        onLoadComplete() {
            s.set([".e.glass2", ".e.glass3", ".e.glass4", ".e.glass5"], {
                y: 1500
            })
        },
        onDiscreteProgress(t) {
            let e = Math.round(t / 100 * 5);
            e < 1 && (e = 1), e > 5 && (e = 5);
            const i = [{
                x: 200,
                y: 400,
                scale: 1.2,
                duration: .5
            }, {
                x: -200,
                y: 400,
                scale: 1.2,
                duration: .5
            }, {
                x: 150,
                y: -50,
                scale: 1,
                duration: .5
            }, {
                x: -150,
                y: -50,
                scale: 1,
                duration: .5
            }, {
                x: 0,
                y: -300,
                scale: .8,
                duration: .4
            }][e - 1];
            s.to(`.e.glass${e}`, i)
        }
    }),
    VB = DA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("fork", "knife", "spoon"),
        onLoadComplete() {
            s.set([".e.fork", ".e.knife", ".e.spoon"], {
                y: 1500
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fork", {
                x: -300,
                y: 0
            }).to(".e.spoon", {
                x: 375,
                y: 0
            }).to(".e.knife", {
                x: 300,
                y: 0
            })
        }
    }),
    lB = DA.extend({
        elements: a.elementsFromImages("fork", "knife", "spoon", "gunk"),
        onLoadComplete() {
            s.set(".e.fork", {
                x: -300
            }), s.set(".e.spoon", {
                x: 375
            }), s.set(".e.knife", {
                x: 300
            }), s.set(".e.gunk", {
                y: 1500,
                rotate: 60,
                scaleY: 1.1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.gunk", {
                scaleY: .9,
                y: -50
            }), this.timeline.to(".e.gunk", {
                scaleY: 1,
                y: 0
            }), this.timeline.to(".e.gunk", {
                rotate: 0
            })
        }
    }),
    AB = DA.extend({
        elements: a.elementsFromImages("fork", "knife", "spoon", "gunk", "dish"),
        onLoadComplete() {
            s.set(".e.fork", {
                x: -300
            }), s.set(".e.spoon", {
                x: 375
            }), s.set(".e.knife", {
                x: 300
            }), s.set(".e.dish", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dish", {
                opacity: 1
            }).to(".e.gunk", {
                opacity: 0
            }, "<")
        },
        onStartProgress() {
            a.startShake("gunk", 4, 4), a.startShake("dish", 4, 4)
        },
        onStopProgress() {
            a.stopShake("gunk"), a.stopShake("dish")
        }
    }),
    SA = E.extend({
        imageManifest: {
            fridgeClosed: new URL("main/pp7/everyday/assets/2e9ec69b.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/32ce94ab.png", self.location).href,
            yogurt: new URL("main/pp7/everyday/assets/7693da1d.png", self.location).href
        }
    }),
    cB = SA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("fridgeClosed"),
        onDiscreteProgress() {
            a.squashOnce("fridgeClosed")
        }
    }),
    dB = SA.extend({
        elements: a.elementsFromImages("yogurt"),
        onStartProgress() {
            a.startShake("yogurt", 5, 3, 8)
        },
        onStopProgress() {
            a.stopShake("yogurt")
        }
    }),
    pB = SA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("yogurt"),
        onDiscreteProgress() {
            a.scaleBounce("yogurt", 1.5)
        }
    }),
    hB = SA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("trash", "yogurt"),
        onLoadComplete() {
            s.set(".e.yogurt", {
                scale: .3,
                y: -400
            }), s.set(".e.trash", {
                scale: .8,
                y: 350
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.yogurt", {
                y: -460
            }).to(".e.yogurt", {
                y: 70
            }).to(".e.yogurt", {
                visibility: "hidden"
            }).to(".e.trash", {
                y: 420
            }).to(".e.trash", {
                y: 350
            })
        }
    });
s.registerPlugin(fo);
const TA = E.extend({
        imageManifest: {
            mop: new URL("main/pp7/everyday/assets/0769ab0b.png", self.location).href
        }
    }),
    uB = TA.extend({
        elements: a.elementsFromImages("mop"),
        initializeTimeline() {
            this.timeline.to(".e.mop", {
                rotate: -60
            })
        }
    }),
    mB = TA.extend({
        elements: a.elementsFromImages("mop"),
        initializeTimeline() {
            this.timeline.fromTo(".e.mop", {
                rotate: -60
            }, {
                rotate: 60
            })
        }
    }),
    fB = TA.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("mop"),
        onLoadComplete() {
            s.set(".e.mop", {
                rotate: 60
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 1,
                yoyo: !0
            }).to(".e.mop", {
                motionPath: {
                    path: "M253.56,123.56c0-30.93-29.67-122-96-122c-30.93,0-86,19.87-86,74c0,30.93,25.07,48,56,48s56-17.07,56-48 c0-55.82-55.07-74-86-74c-62.31,0-96,91.07-96,122",
                    offsetX: -245,
                    offsetY: -100,
                    runBackwards: !0
                },
                ease: "none"
            });
            this.timeline.add(t)
        }
    }),
    qB = TA.extend({
        elements: a.elementsFromImages("mop"),
        onStartProgress() {
            a.startHoldShake("mop")
        },
        onStopProgress() {
            a.stopHoldShake("mop")
        }
    }),
    qo = E.extend({
        imageManifest: {
            boxclosed: new URL("main/pp7/everyday/assets/8ac45c70.png", self.location).href,
            boxopen: new URL("main/pp7/everyday/assets/97a0f7e2.png", self.location).href,
            drink1: new URL("main/pp7/everyday/assets/4a72e604.png", self.location).href,
            drink2: new URL("main/pp7/everyday/assets/57be00c5.png", self.location).href,
            drink3: new URL("main/pp7/everyday/assets/363a8930.png", self.location).href,
            ham: new URL("main/pp7/everyday/assets/16d05f9b.png", self.location).href,
            pizza: new URL("main/pp7/everyday/assets/e5f103d7.png", self.location).href
        }
    }),
    gB = qo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("boxclosed"),
        onLoadComplete() {
            s.set(".e.boxclosed", {
                x: -100,
                y: 750,
                scale: 2
            })
        },
        onDiscreteProgress() {
            s.to(".e.boxclosed", {
                y: 0,
                scale: 1,
                ease: "back.inOut"
            })
        }
    }),
    yB = qo.extend({
        elements: a.elementsFromImages("boxclosed", "drink3", "drink2", "drink1"),
        onLoadComplete() {
            s.set(".e.boxclosed", {
                x: -100
            }), s.set(".e.drink1", {
                x: 200,
                y: 750,
                scale: 2
            }), s.set(".e.drink2", {
                y: 700,
                scale: 2
            }), s.set(".e.drink3", {
                x: 400,
                y: 700,
                scale: 2
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.drink1", {
                y: -500,
                scale: 1
            }).to(".e.drink1", {
                x: 250,
                y: -200
            }).to(".e.drink2", {
                y: -500,
                scale: 1
            }, "<").to(".e.drink2", {
                x: 150,
                y: -250
            }).to(".e.drink3", {
                x: 500,
                y: -500,
                scale: 1
            }, "<").to(".e.drink3", {
                x: 350,
                y: -250
            })
        }
    }),
    bB = qo.extend({
        elements: a.elementsFromImages("drink3", "drink2", "drink1", "boxclosed", "ham"),
        onLoadComplete() {
            s.set(".e.boxclosed", {
                x: -100
            }), s.set(".e.drink1", {
                x: 250,
                y: -200
            }), s.set(".e.drink2", {
                x: 150,
                y: -250
            }), s.set(".e.drink3", {
                x: 350,
                y: -250
            }), s.set(".e.ham", {
                y: 750,
                scale: 2
            })
        }
    }),
    vB = qo.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("drink3", "drink2", "drink1", "boxclosed"),
        onLoadComplete() {
            s.set(".e.boxclosed", {
                x: -100
            }), s.set(".e.drink1", {
                x: 250,
                y: -200
            }), s.set(".e.drink2", {
                x: 150,
                y: -250
            }), s.set(".e.drink3", {
                x: 350,
                y: -250
            })
        },
        onDiscreteProgress() {
            s.to(".e.boxclosed", {
                x: -100,
                y: 750,
                scale: 2,
                ease: "back.inOut"
            })
        }
    }),
    wB = qo.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("drink3", "drink2", "drink1", "ham"),
        onLoadComplete() {
            s.set(".e.drink1", {
                x: 250,
                y: -200
            }), s.set(".e.drink2", {
                x: 150,
                y: -250
            }), s.set(".e.drink3", {
                x: 350,
                y: -250
            }), s.set(".e.ham", {
                y: 750,
                scale: 2
            })
        },
        onDiscreteProgress() {
            s.to(".e.ham", {
                x: -150,
                y: -100,
                scale: 1,
                ease: "back.inOut"
            })
        }
    }),
    xB = qo.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("boxclosed", "boxopen"),
        onLoadComplete() {
            s.set(".e.boxclosed", {
                y: 100
            }), s.set(".e.boxopen", {
                x: -35,
                y: -75,
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("boxclosed", "boxopen", .5)
        }
    }),
    kB = qo.extend({
        elements: a.elementsFromImages("pizza"),
        initializeTimeline() {
            this.timeline.to(".e.pizza", {
                y: 750,
                scale: 2
            }).set(".e.pizza", {
                clipPath: "inset(0 0 30% 0)"
            }).to(".e.pizza", {
                y: 0,
                scale: 1
            }, "<").to(".e.pizza", {
                y: 850,
                scale: 2
            }).set(".e.pizza", {
                clipPath: "inset(0 0 50% 0)"
            }).to(".e.pizza", {
                y: 0,
                scale: 1
            }, "<").to(".e.pizza", {
                y: 900,
                scale: 2
            }).set(".e.pizza", {
                clipPath: "inset(0 0 60% 0)"
            }).to(".e.pizza", {
                y: 0,
                scale: 1
            }, "<").to(".e.pizza", {
                y: 1100,
                scale: 2
            }).set(".e.pizza", {
                clipPath: "inset(0 0 70% 0)"
            }).to(".e.pizza", {
                y: 0,
                scale: 1
            }, "<").to(".e.pizza", {
                y: 1250,
                scale: 2
            }).set(".e.pizza", {
                clipPath: "inset(0 0 100% 0)"
            })
        }
    }),
    iV = E.extend({
        imageManifest: {
            cup1: new URL("main/pp7/everyday/assets/de3e320f.png", self.location).href,
            cup2: new URL("main/pp7/everyday/assets/2df346ea.png", self.location).href,
            cup3: new URL("main/pp7/everyday/assets/18e4a4ff.png", self.location).href,
            cup4: new URL("main/pp7/everyday/assets/21d746ba.png", self.location).href
        },
        stepDuration: .5
    }),
    CB = iV.extend({
        elements: a.elementsFromImages("cup4", "cup2", "cup1", "cup3"),
        initializeTimeline() {
            s.set(".e.cup1", {
                scale: .5,
                x: -270,
                y: -50
            }), s.set(".e.cup2", {
                scale: .5,
                x: 220,
                y: 170
            }), s.set(".e.cup3", {
                scale: .5,
                x: -170,
                y: 150
            }), s.set(".e.cup4", {
                scale: .5,
                x: 150,
                y: -20
            })
        },
        onLoadComplete() {
            this.timeline.to(".e.cup1", {
                rotate: 180,
                x: 800,
                y: -200
            })
        }
    }),
    RB = iV.extend({
        elements: a.elementsFromImages("cup4", "cup2", "cup3"),
        initializeTimeline() {
            s.set(".e.cup2", {
                scale: .5,
                x: 220,
                y: 170
            }), s.set(".e.cup3", {
                scale: .5,
                x: -170,
                y: 150
            }), s.set(".e.cup4", {
                scale: .5,
                x: 150,
                y: -20
            })
        },
        onLoadComplete() {
            this.timeline.to(".e.cup2", {
                rotate: -180,
                x: -800,
                y: -200
            })
        }
    }),
    DB = iV.extend({
        elements: a.elementsFromImages("cup4", "cup3"),
        initializeTimeline() {
            s.set(".e.cup3", {
                scale: .5,
                x: -170,
                y: 150
            }), s.set(".e.cup4", {
                scale: .5,
                x: 150,
                y: -20
            })
        },
        onLoadComplete() {
            this.timeline.to(".e.cup3", {
                rotate: 180,
                x: 800,
                y: -200
            })
        }
    }),
    SB = iV.extend({
        elements: a.elementsFromImages("cup4"),
        initializeTimeline() {
            s.set(".e.cup4", {
                scale: .5,
                x: 150,
                y: -20
            })
        },
        onLoadComplete() {
            this.timeline.to(".e.cup4", {
                scale: .85,
                x: 0,
                y: 0
            }), this.timeline.to(".e.cup4", {
                rotate: 13
            }), this.timeline.to(".e.cup4", {
                rotate: -12
            }), this.timeline.to(".e.cup4", {
                rotate: 15
            })
        }
    }),
    TB = iV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("cup4"),
        onLoadComplete() {
            s.set(".e.cup4", {
                scale: .85,
                rotate: 15
            }), s.to(".e.cup4", {
                rotate: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.cup4", {
                x: 600,
                y: -1500,
                rotate: 250
            })
        }
    }),
    Oa = E.extend({
        imageManifest: {
            bookbeginning: new URL("main/pp7/everyday/assets/06594109.png", self.location).href,
            birdbook: new URL("main/pp7/everyday/assets/b44e741e.png", self.location).href,
            redwing: new URL("main/pp7/everyday/assets/84f95a4b.png", self.location).href,
            shrewp: new URL("main/pp7/everyday/assets/85ebbd7c.png", self.location).href,
            shrewpbranch: new URL("main/pp7/everyday/assets/b27be752.png", self.location).href,
            shrewpscribble: new URL("main/pp7/everyday/assets/19500726.png", self.location).href,
            warbler: new URL("main/pp7/everyday/assets/e8e56c42.png", self.location).href
        }
    }),
    EB = Oa.extend({
        elements: a.elementsFromImages("shrewpbranch")
    }),
    LB = Oa.extend({
        stepDuration: 1.25,
        elements: a.elementsFromImages("birdbook", "bookbeginning"),
        onLoadComplete() {
            s.set(".e.bookbeginning", {
                x: -275,
                y: -25,
                scale: 1.5,
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("birdbook", "bookbeginning", .5, 1.5)).to(".e.bookbeginning", {
                x: -500,
                scale: 3,
                opacity: 0,
                delay: .25
            })
        }
    }),
    BB = Oa.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("warbler"),
        onLoadComplete() {
            s.fromTo(".e.warbler", {
                x: 1e3
            }, {
                x: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.warbler", {
                x: -1e3
            })
        }
    }),
    MB = Oa.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("redwing"),
        onLoadComplete() {
            s.fromTo(".e.redwing", {
                x: 1e3
            }, {
                x: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.redwing", {
                x: -1e3
            })
        }
    }),
    OB = Oa.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("shrewp", "birdbook"),
        onLoadComplete() {
            s.set(".e.birdbook", {
                scale: 3,
                opacity: 0
            }), s.fromTo(".e.shrewp", {
                x: 1e3
            }, {
                x: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.shrewp", {
                opacity: 0
            }).to(".e.birdbook", {
                scale: 1,
                opacity: 1
            }, "<0.25")
        }
    }),
    IB = Oa.extend({
        elements: a.elementsFromImages("shrewpscribble"),
        onLoadComplete() {
            s.set(".e.shrewpscribble", {
                clipPath: "inset(100% 0 0 0)",
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.shrewpscribble", {
                clipPath: "inset(0% 0 0 0)",
                opacity: 1
            })
        }
    }),
    Hn = E.extend({
        stepDuration: .35,
        elements() {
            return [{
                class: "image-container",
                type: "container",
                children: [{
                    class: "move",
                    type: "img",
                    pos: [0, 0],
                    key: Object.keys(this.imageManifest)[0]
                }, {
                    class: "image",
                    type: "img",
                    pos: [0, 0],
                    key: Object.keys(this.imageManifest)[0]
                }]
            }]
        },
        onLoadComplete() {
            s.set(".e.move", {
                opacity: 0
            })
        },
        onDiscreteProgress(t, e, n) {
            const i = n.radians;
            s.set(".e.move", {
                opacity: 1
            }), s.to(".e.move", {
                opacity: 0,
                x: Math.cos(i) * 150,
                y: Math.sin(i) * 150,
                duration: this.stepDuration,
                onComplete() {
                    s.set(this.targets()[0], {
                        x: 0,
                        y: 0
                    })
                }
            })
        }
    }),
    B2 = E.extend({
        imageManifest: {
            sink: new URL("main/pp7/everyday/assets/91ed90ae.png", self.location).href,
            tray: new URL("main/pp7/everyday/assets/0ced8386.png", self.location).href,
            handle: new URL("main/pp7/everyday/assets/cb8ce0c9.png", self.location).href
        }
    }),
    PB = B2.extend({
        hasParticles: !1,
        elements: [{
            class: "water",
            type: "div",
            html: ""
        }, {
            class: "handle",
            type: "img",
            pos: [135, 315],
            key: "handle"
        }, {
            class: "sink",
            type: "img",
            key: "sink"
        }],
        onLoadComplete() {
            s.set(".e.handle", {
                transformOrigin: "center bottom"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handle", {
                rotate: -30
            })
        },
        onProgress(t) {
            this.hasParticles || t < 90 || (this.hasParticles = !0, a.addParticleEmitter({
                container: "water",
                numberOfParticles: 100,
                settings: {
                    frequency: .05,
                    from: {
                        backgroundColor: "#165C7A",
                        borderRadius: "5",
                        borderRight: "4px solid black",
                        borderTop: "4px solid black",
                        width: 10,
                        height: 30
                    },
                    boundaries: {
                        left: 425,
                        right: 450,
                        top: 345,
                        bottom: 346
                    },
                    minSize: 10,
                    maxSize: 15,
                    randomAngleRange: 3,
                    force: 3,
                    gravity: 1
                }
            }))
        }
    }),
    UB = B2.extend({
        className: "make-ice",
        stepDuration: .35,
        elements() {
            const t = a.elementsFromImages("tray");
            for (let e = 0; e < 8; e++) t.push({
                class: `cube cube-${e*2}`,
                type: "div",
                pos: [353, 113 + e * 100],
                html: ""
            }), t.push({
                class: `cube cube-${e*2+1}`,
                type: "div",
                pos: [518, 113 + e * 100],
                html: ""
            });
            return t
        },
        onDiscreteProgress() {
            const t = (8 - this.model.get("tapsLeft")) * 2;
            s.to(`.e.cube-${t}`, {
                opacity: .8,
                scale: 1,
                duration: .5
            }), s.to(`.e.cube-${t+1}`, {
                opacity: .8,
                scale: 1,
                duration: .5,
                delay: .2
            })
        }
    }),
    FB = Hn.extend({
        imageManifest: {
            fridge: new URL("main/pp7/everyday/assets/9e6bd54f.png", self.location).href
        }
    }),
    sV = E.extend({
        imageManifest: {
            chair: new URL("main/pp7/everyday/assets/6b72efb5.png", self.location).href,
            chaircushions: new URL("main/pp7/everyday/assets/e06db18e.png", self.location).href,
            pipe: new URL("main/pp7/everyday/assets/88fe7d46.png", self.location).href,
            pipespigot: new URL("main/pp7/everyday/assets/cade1f71.png", self.location).href,
            spigot: new URL("main/pp7/everyday/assets/a1cf41e0.png", self.location).href
        }
    }),
    jB = sV.extend({
        elements: a.elementsFromImages("pipe", "spigot"),
        initializeTimeline() {
            this.timeline.to(".e.spigot", {
                rotate: -720
            })
        }
    }),
    QB = sV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("chair", "chaircushions"),
        onDiscreteProgress() {
            s.to(".e.chaircushions", {
                y: 500,
                x: 1500,
                rotate: 360
            })
        }
    }),
    zB = sV.extend({
        elements: a.elementsFromImages("chair"),
        onStartProgress() {
            a.startShake("chair", 6, 4, 2)
        },
        onStopProgress() {
            a.stopShake("chair")
        }
    }),
    HB = sV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("chair", "chaircushions"),
        onLoadComplete() {
            s.set(".e.chaircushions", {
                x: 1500,
                y: 500,
                rotate: 360
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.chaircushions", {
                x: 0,
                y: -10,
                rotate: 0
            }).to(".e.chaircushions", {
                filter: "brightness(50%)",
                duration: 1
            })
        }
    }),
    NB = sV.extend({
        elements: a.elementsFromImages("pipe", "spigot"),
        initializeTimeline() {
            this.timeline.to(".e.spigot", {
                rotate: 720
            })
        }
    }),
    go = E.extend({
        imageManifest: {
            curtainclean: new URL("main/pp7/everyday/assets/0399e7a6.png", self.location).href,
            curtainmold: new URL("main/pp7/everyday/assets/291a2ae1.png", self.location).href,
            spatula: new URL("main/pp7/everyday/assets/fcf69098.png", self.location).href
        }
    }),
    GB = go.extend({
        elements: a.elementsFromImages("curtainclean"),
        initializeTimeline() {
            this.timeline.to(".e.curtainclean", {
                rotate: 20
            }).to(".e.curtainclean", {
                rotate: -20,
                scale: .9
            }).to(".e.curtainclean", {
                rotate: 20,
                scale: 1.1
            }).to(".e.curtainclean", {
                rotate: 0,
                scale: 1
            })
        }
    }),
    XB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curtainclean", "curtainmold"),
        onLoadComplete() {
            s.set(".e.curtainmold", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.curtainclean", {
                rotateY: 180,
                opacity: 0
            }).to(".e.curtainmold", {
                rotateY: 180,
                opacity: 1
            }, "<")
        }
    }),
    YB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curtainmold", "spatula"),
        onLoadComplete() {
            s.set(".e.curtainmold", {
                rotateY: 180
            }), s.set(".e.spatula", {
                y: 500,
                rotate: 40
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.spatula", {
                scale: .5,
                y: 200,
                x: -150
            }).to(".e.curtainmold", {
                y: -50,
                scaleY: .9
            }, "<").to(".e.curtainmold", {
                y: 0,
                scaleY: 1
            }).to(".e.spatula", {
                scale: 1,
                rotate: 210,
                x: -300,
                y: -300
            })
        }
    }),
    KB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curtainmold", "spatula"),
        onLoadComplete() {
            s.set(".e.curtainmold", {
                rotateY: 180
            }), s.set(".e.spatula", {
                x: -300,
                y: -300,
                rotate: 210
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.spatula", {
                scale: .5,
                y: 130,
                x: -150
            }).to(".e.curtainmold", {
                x: 30,
                y: 50,
                scaleY: .9
            }, "<").to(".e.curtainmold", {
                x: 0,
                y: 0,
                scaleY: 1
            }).to(".e.spatula", {
                scale: 1,
                rotate: 40,
                x: 0,
                y: 500
            })
        }
    }),
    WB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curtainmold", "spatula"),
        onLoadComplete() {
            s.set(".e.curtainmold", {
                rotateY: 180
            }), s.set(".e.spatula", {
                y: 500,
                rotate: 40
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.spatula", {
                scale: .5,
                y: 200,
                x: -150
            }).to(".e.curtainmold", {
                y: -50,
                scaleY: .9
            }, "<").to(".e.curtainmold", {
                y: 0,
                scaleY: 1
            }).to(".e.spatula", {
                scale: 1,
                rotate: 210,
                x: -300,
                y: -300
            })
        }
    }),
    JB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curtainmold", "spatula"),
        onLoadComplete() {
            s.set(".e.curtainmold", {
                rotateY: 180
            }), s.set(".e.spatula", {
                x: -300,
                y: -300,
                rotate: 210
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.spatula", {
                scale: .5,
                y: 130,
                x: -150
            }).to(".e.curtainmold", {
                x: 30,
                y: 50,
                scaleY: .9
            }, "<").to(".e.curtainmold", {
                x: 0,
                y: 0,
                scaleY: 1
            }).to(".e.spatula", {
                scale: 1,
                rotate: 40,
                x: 0,
                y: 500
            })
        }
    }),
    ZB = go.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("spatula"),
        onLoadComplete() {
            s.set(".e.spatula", {
                y: 1500,
                scaleY: 1.1,
                rotate: 40
            }), s.to(".e.spatula", {
                y: 0,
                scaleY: 1
            })
        },
        onDiscreteProgress() {
            s.to(".e.spatula", {
                y: -500,
                x: 1500,
                rotate: 200
            })
        }
    }),
    EA = E.extend({
        imageManifest: {
            fold0: new URL("main/pp7/everyday/assets/997f2d78.png", self.location).href,
            fold1: new URL("main/pp7/everyday/assets/fa7b99ec.png", self.location).href,
            fold2: new URL("main/pp7/everyday/assets/caba9d6a.png", self.location).href,
            fold3: new URL("main/pp7/everyday/assets/209ca0d8.png", self.location).href,
            fold4: new URL("main/pp7/everyday/assets/5edf8c12.png", self.location).href,
            nap: new URL("main/pp7/everyday/assets/74528ad2.png", self.location).href,
            zzz: new URL("main/pp7/everyday/assets/3b02520d.png", self.location).href,
            pile: new URL("main/pp7/everyday/assets/f7d59e48.png", self.location).href,
            socks0: new URL("main/pp7/everyday/assets/ae2828d2.png", self.location).href,
            socks1: new URL("main/pp7/everyday/assets/a97a3569.png", self.location).href,
            socks2: new URL("main/pp7/everyday/assets/364b4e31.png", self.location).href,
            socks3: new URL("main/pp7/everyday/assets/65c176f4.png", self.location).href
        }
    }),
    _B = EA.extend({
        elements: a.elementsFromImages("socks0", "socks1", "socks2", "socks3"),
        onLoadComplete() {
            s.set(".e.socks0", {
                x: 50,
                y: 50,
                transformOrigin: "450px 450px"
            }), s.set(".e.socks1", {
                x: 550,
                y: 550,
                transformOrigin: "-50px -50px"
            }), s.set(".e.socks2", {
                x: 100,
                y: 450,
                transformOrigin: "400px 50px"
            }), s.set(".e.socks3", {
                x: 550,
                y: 150,
                transformOrigin: "-50px 350px"
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.socks0", {
                    rotate: 43,
                    duration: .12,
                    ease: "none"
                }).to(".e.socks0", {
                    y: 700,
                    duration: .02,
                    ease: "none"
                }),
                e = s.timeline().to(".e.socks2", {
                    rotate: 115,
                    duration: .32,
                    ease: "none"
                }).to(".e.socks2", {
                    y: 980,
                    duration: .02,
                    ease: "none"
                }),
                n = s.timeline().to(".e.socks1", {
                    rotate: 219,
                    duration: .61,
                    ease: "none"
                }).to(".e.socks1", {
                    y: 1180,
                    duration: .02,
                    ease: "none"
                }),
                i = s.timeline().to(".e.socks3", {
                    rotate: 291,
                    duration: .81,
                    ease: "none"
                }).to(".e.socks3", {
                    y: 715,
                    duration: .02,
                    ease: "none"
                }).to(".e.socks3", {
                    opacity: 1,
                    duration: 1
                }, 0);
            this.timeline.add(t), this.timeline.add(e, 0), this.timeline.add(n, 0), this.timeline.add(i, 0)
        }
    }),
    $B = EA.extend({
        hasStarted: !1,
        elements() {
            const t = a.elementsFromImages("socks0", "socks1", "socks2", "socks3");
            return t.push({
                class: "pile-container",
                type: "container",
                children: a.elementsFromImages("pile")
            }), t
        },
        onLoadComplete() {
            s.set(".e.pile-container", {
                width: 1e3,
                height: 1e3,
                opacity: 0,
                y: -400,
                transformOrigin: "center bottom"
            }), s.set(".e.socks0", {
                x: 50,
                y: 700,
                rotate: 43,
                transformOrigin: "450px 450px"
            }), s.set(".e.socks1", {
                x: 550,
                y: 1180,
                rotate: 219,
                transformOrigin: "-50px -50px"
            }), s.set(".e.socks2", {
                x: 100,
                y: 980,
                rotate: 115,
                transformOrigin: "400px 50px"
            }), s.set(".e.socks3", {
                x: 550,
                y: 715,
                rotate: 291,
                transformOrigin: "-50px 350px"
            })
        },
        onStartProgress() {
            if (this.hasStarted) {
                a.startHoldShake("pile");
                return
            }
            s.timeline().to(".e.pile-container", {
                opacity: 1,
                duration: .05
            }).to(".e.pile-container", {
                y: 220,
                duration: .15
            }, "<").to(".e.pile-container", {
                scaleY: .5,
                duration: .05
            }).to(".e.pile-container", {
                scaleY: 1,
                duration: .08
            }).call(a.startHoldShake, ["pile"]), this.hasStarted = !0
        },
        onStopProgress() {
            a.stopHoldShake("pile")
        }
    }),
    eM = EA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("fold4", "fold3", "fold2", "fold1", "fold0"),
        onLoadComplete() {
            s.set(".e.fold4", {
                y: -100,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fold0", {
                opacity: 0
            }).to(".e.fold1", {
                opacity: 0
            }).to(".e.fold2", {
                opacity: 0
            }).to(".e.fold4", {
                y: 0,
                opacity: 1
            }).to(".e.fold3", {
                opacity: 0
            }, "<")
        }
    }),
    tM = EA.extend({
        elements: a.elementsFromImages("nap", ["zzz", null, [175, 350]]),
        onLoadComplete() {
            s.timeline({
                repeat: -1,
                yoyo: !0,
                ease: "none"
            }).to(".e.zzz", {
                opacity: .25,
                duration: .4
            }).to(".e.zzz", {
                opacity: 1,
                duration: .4
            })
        }
    }),
    LA = E.extend({
        imageManifest: {
            box: new URL("main/pp7/everyday/assets/2ea34ac5.png", self.location).href,
            dish: new URL("main/pp7/everyday/assets/9f8c9e1f.png", self.location).href,
            tub: new URL("main/pp7/everyday/assets/d8ce6149.png", self.location).href
        }
    }),
    nM = LA.extend({
        stepDuration: .65,
        elements: a.elementsFromImages("box"),
        onLoadComplete() {
            s.set(".e.box", {
                y: -400,
                scale: .4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.box", {
                y: -340,
                scale: .9
            }).fillTime(.5).to(".e.box", {
                y: -0,
                scale: 1,
                ease: "back.out(2)"
            })
        }
    }),
    iM = LA.extend({
        elements: a.elementsFromImages("tub", "box"),
        onLoadComplete() {
            s.set(".e.box", {
                x: 0,
                y: 0
            }), s.set(".e.tub", {
                scaleX: 1.1,
                x: -1500
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.box", {
                x: 1500,
                y: -500,
                rotate: 360,
                scaleX: 1.2
            }).to(".e.tub", {
                x: 20,
                scaleX: .9
            }).to(".e.tub", {
                x: 0,
                scaleX: 1
            }).to(".e.tub", {
                scale: 1.1
            }).to(".e.tub", {
                scale: 1
            })
        }
    }),
    sM = LA.extend({
        elements: a.elementsFromImages(["tub", "back"], ["dish", "dish1"], ["dish", "dish2"], ["dish", "dish3"], ["tub", "front"]),
        onLoadComplete() {
            s.set([".e.dish1", ".e.dish2", ".e.dish3"], {
                y: -1500,
                scale: .5,
                filter: "brightness(60%)"
            }), s.set(".e.front", {
                clip: "rect(430px 1000px 1000px 0px)"
            }), s.to([".e.front", ".e.back"], {
                y: 300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dish1", {
                y: 350,
                scale: .3
            }).to(".e.dish1", {
                filter: "brightness(100%)",
                scale: .5,
                y: -100,
                x: 100
            }).to(".e.dish2", {
                y: 350,
                scale: .3
            }).to(".e.dish2", {
                filter: "brightness(100%)",
                scale: .5,
                y: -150,
                x: 140
            }).to(".e.dish3", {
                y: 350,
                scale: .3
            }).to(".e.dish3", {
                filter: "brightness(100%)",
                scale: .5,
                y: -200,
                x: 180
            })
        }
    }),
    oM = LA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["dish", "dish1"], ["dish", "dish2"], ["dish", "dish3"]),
        onLoadComplete() {
            s.set(".e.dish1", {
                x: 100,
                y: -100,
                scale: .5
            }), s.set(".e.dish2", {
                x: 140,
                y: -150,
                scale: .5
            }), s.set(".e.dish3", {
                x: 180,
                y: -200,
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dish3", {
                x: -300,
                y: 300,
                scale: .6
            }).to(".e.dish2", {
                x: 0,
                y: 0,
                scale: .6
            }).to(".e.dish1", {
                x: 300,
                y: -300,
                scale: .6
            })
        }
    }),
    BA = E.extend({
        imageManifest: {
            nail: new URL("main/pp7/everyday/assets/5205a230.png", self.location).href,
            picture: new URL("main/pp7/everyday/assets/f041b75e.png", self.location).href
        }
    }),
    aM = BA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["nail", null, [-200, 0]], "picture"),
        onLoadComplete() {
            s.set(".e.picture", {
                y: 200,
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = Pi.create("custom", "M0,0 C0.126,0.382 0.282,0.852 0.44,1 0.632,1.18 0.818,1.001 1,1 ");
            this.timeline.to(".e.picture", {
                opacity: 1,
                duration: .25
            }).to(".e.picture", {
                y: 0,
                ease: t
            }, "<").to(".e.picture", {
                rotate: -5,
                ease: t
            }, "<")
        }
    }),
    rM = BA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("picture"),
        onLoadComplete() {
            s.set(".e.picture", {
                rotate: -5
            })
        },
        initializeTimeline() {
            const t = Pi.create("custom", "M0,0 C0.126,0.382 0.282,0.852 0.44,1 0.632,1.18 0.818,1.001 1,1 ");
            this.timeline.to(".e.picture", {
                rotate: 5,
                ease: t
            })
        }
    }),
    VM = BA.extend({
        stepDuration: .6,
        elements: a.elementsFromImages(["nail", null, [-200, 0]], "picture"),
        onLoadComplete() {
            s.set(".e.picture", {
                rotate: 5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.picture", {
                rotate: 0,
                duration: .35
            }).to(".e.picture", {
                y: 300,
                duration: .15,
                delay: .2
            }).to(".e.picture", {
                opacity: 0,
                duration: .15
            }, "-=0.15")
        }
    }),
    lM = BA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["nail", null, [-200, 0]], "picture"),
        onLoadComplete() {
            s.set(".e.picture", {
                y: 200,
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = Pi.create("custom", "M0,0 C0.126,0.382 0.282,0.852 0.44,1 0.632,1.18 0.818,1.001 1,1 ");
            this.timeline.to(".e.picture", {
                opacity: 1,
                duration: .25
            }).to(".e.picture", {
                y: 0,
                ease: t
            }, "<").to(".e.picture", {
                ease: t
            }, "<")
        }
    }),
    oV = E.extend({
        imageManifest: {
            book: new URL("main/pp7/everyday/assets/e6d4f1c6.png", self.location).href,
            bookbeginning: new URL("main/pp7/everyday/assets/06594109.png", self.location).href,
            bookend: new URL("main/pp7/everyday/assets/f2b5a83d.png", self.location).href,
            bookshelf: new URL("main/pp7/everyday/assets/ec2389d4.png", self.location).href,
            pile: new URL("main/pp7/everyday/assets/b1fa07b8.png", self.location).href
        }
    }),
    AM = oV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("book", "bookend"),
        onLoadComplete() {
            s.set(".e.book", {
                x: -180,
                y: 20,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.book", {
                opacity: 1
            }).to(".e.bookend", {
                opacity: 0,
                duration: .5
            }, "<").to(".e.book", {
                scale: 1.5,
                x: 15,
                y: 15
            }).to(".e.book", {
                scale: 1.4,
                x: 0,
                y: 0
            })
        }
    }),
    cM = oV.extend({
        elements: a.elementsFromImages("bookshelf", "pile"),
        onLoadComplete() {
            s.set(".e.pile", {
                scaleY: 1.2,
                y: 1500
            }), s.set(".e.bookshelf", {
                scale: .3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pile", {
                y: 230,
                scaleY: .8
            }).to(".e.pile", {
                y: 200,
                scaleY: 1
            }).to(".e.pile", {
                x: 30,
                rotate: -5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: 5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: -5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: 5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: -5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: 5,
                duration: .5
            }).to(".e.pile", {
                x: 30,
                rotate: -5,
                duration: .5
            }).to(".e.bookshelf", {
                scale: 1.2,
                duration: 5
            }, "1")
        }
    }),
    dM = oV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bookshelf", "pile"),
        onLoadComplete() {
            s.set(".e.bookshelf", {
                scale: 1.2
            }), s.set(".e.pile", {
                x: 30,
                y: 200,
                rotate: -5
            })
        },
        onDiscreteProgress(t) {
            const e = s.timeline();
            e.to(".e.pile", {
                scale: .6,
                x: "random(-200, 200)",
                y: "random(-300, 300)"
            }).to(".e.bookshelf", {
                scale: 1.1,
                y: 30
            }, "<").to(".e.bookshelf", {
                scale: 1.2,
                y: 0
            }), t === 100 ? e.to(".e.pile", {
                scale: .1,
                opacity: 0
            }) : e.to(".e.pile", {
                scale: 1
            })
        }
    }),
    pM = oV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("book", "bookbeginning"),
        onLoadComplete() {
            s.set(".e.book", {
                x: -180,
                y: 20
            }), s.set(".e.bookbeginning", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bookbeginning", {
                opacity: 1
            }).to(".e.book", {
                opacity: 0,
                duration: .5
            }, "<").to(".e.bookbeginning", {
                scale: 1.1,
                x: 15,
                y: 15
            }).to(".e.bookbeginning", {
                scale: 1,
                x: 0,
                y: 0
            })
        }
    }),
    hM = oV.extend({
        elements: a.elementsFromImages("bookbeginning"),
        onLoadComplete() {
            a.startShake("bookbeginning", 5, 2, .25)
        },
        initializeTimeline() {
            this.timeline.to(".e.bookbeginning", {
                scale: 2
            }, "2").to(".e.bookbeginning", {
                rotate: 360,
                scale: 4,
                opacity: 0
            }, "4")
        }
    }),
    Os = E.extend({
        elements() {
            return [{
                class: "image-container",
                type: "container",
                children: [{
                    class: "image",
                    type: "img",
                    pos: [0, 0],
                    key: Object.keys(this.imageManifest)[0]
                }]
            }]
        },
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: kt.easeNone,
                    repeat: t / 2e3
                }).to(".e.image", {
                    x: 3,
                    y: 3
                }).to(".e.image", {
                    x: -3,
                    y: -3
                }).to(".e.image", {
                    x: -3,
                    y: 3
                }).to(".e.image", {
                    x: 3,
                    y: 3
                }).to(".e.image", {
                    x: 3,
                    y: -3
                }).to(".e.image", {
                    x: -3,
                    y: 3
                }).to(".e.image", {
                    x: -3,
                    y: 3
                }).to(".e.image", {
                    x: 3,
                    y: 3
                }).to(".e.image", {
                    x: 3,
                    y: -3
                }).to(".e.image", {
                    x: 3,
                    y: 3
                }).to(".e.image", {
                    x: 3,
                    y: 3
                });
            e.name = "image", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.image", {
                scale: .95,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.image", {
                scale: 1,
                duration: .25
            })
        }
    }),
    h0 = E.extend({
        current: 0,
        elements() {
            return [{
                class: "image0",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }, {
                class: "image1",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[1]
            }]
        },
        onLoadComplete() {
            s.set(".e.image1", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            const t = `.e.image${this.current}`;
            this.current = this.current === 0 ? 1 : 0;
            const e = `.e.image${this.current}`;
            s.to(t, {
                opacity: 0,
                duration: this.stepDuration
            }), s.to(e, {
                opacity: 1,
                duration: this.stepDuration
            })
        }
    }),
    MA = E.extend({
        imageManifest: {
            dustpan: new URL("main/pp7/everyday/assets/808d8d8c.png", self.location).href,
            paintCan: new URL("main/pp7/everyday/assets/9f611a5b.png", self.location).href,
            paintFull: new URL("main/pp7/everyday/assets/ecc06af5.png", self.location).href,
            paintSpill: new URL("main/pp7/everyday/assets/256c19dd.png", self.location).href,
            sawdust: new URL("main/pp7/everyday/assets/c59b9d58.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/ad9970c4.png", self.location).href
        }
    }),
    uM = MA.extend({
        stepDuration: 1,
        elements: [{
            class: "can-container",
            type: "container",
            children: a.elementsFromImages("paintCan", "paintFull")
        }],
        onLoadComplete() {
            s.set(".e.paintCan", {
                opacity: 0
            }), s.set(".e.can-container", {
                rotate: 90
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                ease: "linear"
            }).to(".e.paintCan", {
                opacity: 1
            }, 0).to(".e.paintFull", {
                opacity: 0
            }, 0).to(".e.can-container", {
                rotate: 0
            }, 0);
            this.timeline.add(t)
        }
    }),
    mM = Os.extend({
        imageManifest: {
            fist: new URL("main/pp7/everyday/assets/78890186.png", self.location).href
        }
    }),
    fM = h0.extend({
        stepDuration: .75,
        imageManifest: {
            paintSpill: new URL("main/pp7/everyday/assets/256c19dd.png", self.location).href,
            sawdust: new URL("main/pp7/everyday/assets/c59b9d58.png", self.location).href
        }
    }),
    qM = MA.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("dustpan", "sawdust"),
        onLoadComplete() {
            s.set(".e.dustpan", {
                x: -300,
                y: -250,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dustpan", {
                x: 0,
                y: 0,
                scale: 1
            }).to(".e.sawdust", {
                scale: .8,
                rotate: -25
            }, "<")
        }
    }),
    gM = MA.extend({
        elements: a.elementsFromImages("trash", "dustpan", "sawdust"),
        onLoadComplete() {
            s.set(".e.sawdust", {
                scale: .8,
                rotate: -25
            }), s.set(".e.trash", {
                y: 220,
                scaleX: -.9,
                scaleY: .9,
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.trash", {
                scaleX: -1,
                scaleY: 1,
                opacity: 1
            }).to(".e.dustpan", {
                y: -230,
                scale: .6
            }, 0).to(".e.sawdust", {
                x: -10,
                y: -225,
                scale: .4
            }, 0).to(".e.dustpan", {
                rotate: 25
            }, 1).to(".e.sawdust", {
                rotate: -5
            }, 1).to(".e.sawdust", {
                y: 100,
                opacity: 0,
                duration: .5
            }, 1.5);
            this.timeline.add(t)
        }
    }),
    yM = MA.extend({
        stepDuration: 1,
        elements: [{
            class: "can-container",
            type: "container",
            children: a.elementsFromImages("paintCan", "paintFull")
        }],
        onLoadComplete() {
            s.set(".e.paintCan", {
                opacity: 0
            }), s.set(".e.can-container", {
                scaleY: -1,
                rotate: 90
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                ease: "linear"
            }).to(".e.paintCan", {
                opacity: 1
            }, 0).to(".e.paintFull", {
                opacity: 0
            }, 0).to(".e.can-container", {
                rotate: 180
            }, 0);
            this.timeline.add(t)
        }
    }),
    aV = E.extend({
        imageManifest: {
            drawer: new URL("main/pp7/everyday/assets/15bf3a98.png", self.location).href,
            fold1: new URL("main/pp7/everyday/assets/9a220144.png", self.location).href,
            fold2: new URL("main/pp7/everyday/assets/41782b1e.png", self.location).href,
            fold3: new URL("main/pp7/everyday/assets/41112335.png", self.location).href,
            fold4: new URL("main/pp7/everyday/assets/81d10e9c.png", self.location).href,
            shirt: new URL("main/pp7/everyday/assets/1e7e4ad1.png", self.location).href
        }
    }),
    bM = aV.extend({
        elements: [{
            class: "laundry-container",
            type: "container",
            children: [{
                class: "shirt",
                type: "img",
                pos: [0, 0],
                key: "shirt"
            }]
        }],
        initializeTimeline() {
            s.set(".e.shirt", {
                rotate: -180
            });
            const t = s.timeline().to(".e.shirt", {
                rotate: 0
            });
            this.timeline.add(t)
        }
    }),
    vM = aV.extend({
        stepDuration: .25,
        elements: [{
            class: "laundry-container",
            type: "container",
            children: [{
                class: "shirt",
                type: "img",
                pos: [0, 0],
                key: "shirt"
            }, {
                class: "fold1",
                type: "img",
                pos: [0, -105],
                key: "fold1"
            }]
        }],
        initializeTimeline() {
            s.set(".e.fold1", {
                opacity: 0
            });
            const t = s.timeline().to(".e.shirt", {
                opacity: 0
            }, 0).to(".e.fold1", {
                opacity: 1
            }, 0);
            this.timeline.add(t)
        }
    }),
    wM = aV.extend({
        stepDuration: .25,
        elements: [{
            class: "laundry-container",
            type: "container",
            children: [{
                class: "fold1",
                type: "img",
                pos: [0, -105],
                key: "fold1"
            }, {
                class: "fold3",
                type: "img",
                pos: [0, 0],
                key: "fold3"
            }]
        }],
        initializeTimeline() {
            s.set(".e.fold3", {
                opacity: 0
            });
            const t = s.timeline().to(".e.fold1", {
                opacity: 0
            }, 0).to(".e.fold3", {
                opacity: 1
            }, 0);
            this.timeline.add(t)
        }
    }),
    xM = aV.extend({
        stepDuration: .25,
        elements: [{
            class: "laundry-container",
            type: "container",
            children: [{
                class: "fold3",
                type: "img",
                pos: [0, 0],
                key: "fold3"
            }, {
                class: "fold4",
                type: "img",
                pos: [0, 0],
                key: "fold4"
            }]
        }],
        initializeTimeline() {
            s.set(".e.fold4", {
                opacity: 0
            });
            const t = s.timeline().to(".e.fold3", {
                opacity: 0
            }, 0).to(".e.fold4", {
                opacity: 1
            }, 0);
            this.timeline.add(t)
        }
    }),
    kM = aV.extend({
        stepDuration: 2,
        elements: [{
            class: "laundry-container",
            type: "container",
            children: [{
                class: "drawer",
                type: "img",
                pos: [0, 0],
                key: "drawer"
            }, {
                class: "fold4",
                type: "img",
                pos: [0, 0],
                key: "fold4"
            }]
        }],
        initializeTimeline() {
            s.set(".e.drawer", {
                opacity: .5,
                scale: .8,
                y: 50
            });
            const t = s.timeline().to(".e.drawer", {
                opacity: 1,
                scale: 1,
                y: 0,
                ease: "power2.inOut",
                duration: 1.2
            }, 0).to(".e.fold4", {
                x: -2,
                y: -147,
                scale: .6,
                ease: "power2.inOut",
                duration: 1.2
            }, 0);
            this.timeline.add(t)
        }
    }),
    yo = E.extend({
        stepDuration: .15,
        elements() {
            return [{
                class: "image",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }]
        },
        onDiscreteProgress() {
            s.timeline().to(".e.image", {
                scale: .9,
                duration: .15
            }).to(".e.image", {
                scale: 1,
                duration: .15
            })
        }
    }),
    CM = yo.extend({
        imageManifest: {
            basket: new URL("main/pp7/everyday/assets/cb18fa10.png", self.location).href
        }
    }),
    RM = Hn.extend({
        imageManifest: {
            blanket: new URL("main/pp7/everyday/assets/a910374e.png", self.location).href
        }
    }),
    DM = E.extend({
        stepDuration: .25,
        imageManifest: {
            army: new URL("main/pp7/everyday/assets/d8c9ddec.png", self.location).href,
            foot: new URL("main/pp7/everyday/assets/a7478e04.png", self.location).href
        },
        elements: a.elementsFromImages("foot", "army"),
        onDiscreteProgress() {
            s.timeline().to(".e.foot", {
                y: 100,
                duration: .25
            }).to(".e.foot", {
                y: 0,
                duration: .25
            })
        }
    }),
    SM = Ma.extend({
        imageManifest: {
            picnic: new URL("main/pp7/everyday/assets/ec04d45a.png", self.location).href
        }
    }),
    Ia = E.extend({
        imageManifest: {
            mah: new URL("main/pp7/everyday/assets/742725c1.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "mah",
                images: {
                    crawl: [10, 10, 784, 326, 337, 108],
                    add6: [1588, 10, 367, 199, 385, 319],
                    add5: [1588, 426, 291, 202, 392, 355],
                    add4: [794, 596, 242, 209, 392, 381],
                    add3: [1588, 219, 318, 197, 387, 343],
                    add2: [1294, 596, 206, 202, 392, 398],
                    add1: [1889, 426, 144, 230, 376, 428],
                    add0: [1046, 596, 238, 203, 398, 381],
                    west: [804, 10, 382, 576, 212, 309],
                    south: [10, 346, 382, 576, 212, 309],
                    north: [402, 346, 382, 576, 212, 309],
                    east: [1196, 10, 382, 576, 212, 309]
                }
            }
        }
    }),
    M2 = Ia.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["east", "north", "west", "south"]),
        onLoadComplete() {
            s.set(".e.east, .e.north, .e.south, .e.west", {
                scale: .3,
                opacity: 0
            }), s.to(".e.west", {
                scale: .8,
                opacity: 1,
                duration: .35,
                ease: "back.out(2)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.west", {
                x: -200,
                y: -250
            }, 0).to(".e.north", {
                scale: .8,
                opacity: 1,
                ease: "back.out(2)"
            }, 0).to(".e.north", {
                x: 200,
                y: -250
            }, 1).to(".e.south", {
                scale: .8,
                opacity: 1,
                ease: "back.out(2)"
            }, 1).to(".e.south", {
                x: -200,
                y: 250
            }, 2).to(".e.east", {
                scale: .8,
                opacity: 1,
                ease: "back.out(2)"
            }, 2).to(".e.east", {
                x: 200,
                y: 250
            }, 3)
        }
    }),
    O2 = Ia.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["east", "east2"],
            ["north", "north2"],
            ["west", "west2"],
            ["south", "south2"], "east", "north", "west", "south"
        ]),
        onLoadComplete() {
            s.set(".e.east", {
                x: 200,
                y: 250,
                scale: .8
            }), s.set(".e.north", {
                x: 200,
                y: -250,
                scale: .8
            }), s.set(".e.south", {
                x: -200,
                y: 250,
                scale: .8
            }), s.set(".e.west", {
                x: -200,
                y: -250,
                scale: .8
            }), s.set(".e.north2", {
                x: 700,
                y: 250,
                scale: .8,
                opacity: 0
            }), s.set(".e.south2", {
                x: 700,
                y: -250,
                scale: .8,
                opacity: 0
            }), s.set(".e.west2", {
                x: -700,
                y: 250,
                scale: .8,
                opacity: 0
            }), s.set(".e.east2", {
                x: -700,
                y: -250,
                scale: .8,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.north2", {
                x: 400,
                opacity: 1
            }, 0).to(".e.south2", {
                x: 400,
                opacity: 1
            }, 0).to(".e.west2", {
                x: -400,
                opacity: 1
            }, 0).to(".e.east2", {
                x: -400,
                opacity: 1
            }, 0)
        }
    }),
    TM = Ia.extend({
        elements: a.elementsFromSprite("sprite", ["add0", "add1", "add2", "add3", "add4", "add5", "add6"]),
        onLoadComplete() {
            s.set(".e.add0, .e.add1, .e.add2, .e.add3, .e.add4, .e.add5, .e.add6", {
                visibility: "hidden"
            }), s.timeline({
                repeat: -1
            }).set(".e.add0", {
                visibility: "visible"
            }, 0).set(".e.add0", {
                visibility: "hidden"
            }, .2).set(".e.add1", {
                visibility: "visible"
            }, .2).set(".e.add1", {
                visibility: "hidden"
            }, .4).set(".e.add2", {
                visibility: "visible"
            }, .4).set(".e.add2", {
                visibility: "hidden"
            }, .6).set(".e.add3", {
                visibility: "visible"
            }, .6).set(".e.add3", {
                visibility: "hidden"
            }, .8).set(".e.add4", {
                visibility: "visible"
            }, .8).set(".e.add4", {
                visibility: "hidden"
            }, 1).set(".e.add5", {
                visibility: "visible"
            }, 1).set(".e.add5", {
                visibility: "hidden"
            }, 1.2).set(".e.add6", {
                visibility: "visible"
            }, 1.2).set(".e.add6", {
                visibility: "hidden"
            }, 1.4)
        }
    }),
    EM = M2,
    LM = O2,
    BM = Ia.extend({
        elements: a.elementsFromSprite("sprite", ["east", "north", "west", "south", ["east", "east2"],
            ["north", "north2"],
            ["west", "west2"],
            ["south", "south2"]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.south2", {
                x: -300,
                y: -300,
                rotate: 250,
                opacity: 0,
                duration: 1
            }, .5).to(".e.west2", {
                x: -300,
                y: 300,
                rotate: -320,
                opacity: 0,
                duration: 1
            }, 1).to(".e.north2", {
                x: 300,
                y: 300,
                rotate: 275,
                opacity: 0,
                duration: 1
            }, 1.5).to(".e.east2", {
                x: 300,
                y: -300,
                rotate: -300,
                opacity: 0,
                duration: 1
            }, 2).to(".e.south", {
                x: 300,
                y: 300,
                rotate: 290,
                opacity: 0,
                duration: 1
            }, 2.5).to(".e.west", {
                x: -300,
                y: -300,
                rotate: -340,
                opacity: 0,
                duration: 1
            }, 3).to(".e.north", {
                x: -300,
                y: 300,
                rotate: 310,
                opacity: 0,
                duration: 1
            }, 3.5).to(".e.east", {
                x: 300,
                y: -300,
                rotate: -350,
                opacity: 0,
                duration: 1
            }, 4)
        }
    }),
    MM = Ia.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", ["east", "north", "west", "south", ["east", "east2"],
            ["north", "north2"],
            ["west", "west2"],
            ["south", "south2"]
        ]),
        onLoadComplete() {
            s.set(".e.east", {
                x: 200,
                y: 250,
                scale: .8
            }), s.set(".e.north", {
                x: 200,
                y: -250,
                scale: .8
            }), s.set(".e.south", {
                x: -200,
                y: 250,
                scale: .8
            }), s.set(".e.west", {
                x: -200,
                y: -250,
                scale: .8
            }), s.set(".e.north2", {
                x: 600,
                y: 250,
                scale: .8
            }), s.set(".e.south2", {
                x: 600,
                y: -250,
                scale: .8
            }), s.set(".e.west2", {
                x: -600,
                y: 250,
                scale: .8
            }), s.set(".e.east2", {
                x: -600,
                y: -250,
                scale: .8
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.east", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, 0).to(".e.north2", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .1).to(".e.south2", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .2).to(".e.west2", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .3).to(".e.north", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .4).to(".e.south", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .5).to(".e.west", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .6).to(".e.east2", {
                y: 1e3,
                duration: 1,
                ease: "power1.out"
            }, .7)
        }
    }),
    OM = Ia.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["crawl"]),
        onLoadComplete() {
            s.set(".e.crawl", {
                x: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crawl", {
                x: 300,
                ease: "none"
            })
        }
    }),
    OA = E.extend({
        imageManifest: {
            shogi1: new URL("main/pp7/everyday/assets/0db65246.png", self.location).href,
            shogi2: new URL("main/pp7/everyday/assets/7bac5067.png", self.location).href,
            shogi3: new URL("main/pp7/everyday/assets/96771ba9.png", self.location).href,
            shogi4: new URL("main/pp7/everyday/assets/37df4829.png", self.location).href
        }
    }),
    IM = OA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("shogi1"),
        onDiscreteProgress() {
            a.squashOnce("shogi1", .25)
        }
    }),
    PM = OA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("shogi2"),
        onDiscreteProgress() {
            a.squashOnce("shogi2", .25)
        }
    }),
    UM = OA.extend({
        elements: a.elementsFromImages("shogi4")
    }),
    FM = OA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("shogi3"),
        onDiscreteProgress() {
            a.squashOnce("shogi3", .25)
        }
    }),
    I2 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/e68d3d93.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    frost: [10, 536, 285, 311, 401, 121],
                    open: [362, 10, 233, 283, 464, 204],
                    closed: [305, 536, 246, 299, 457, 425],
                    fridgeOpen: [10, 10, 342, 516, 241, 425]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["fridgeOpen", "closed", "open", "frost"])
        }]
    }),
    u0 = I2.extend({
        stepDuration: .4,
        onLoadComplete() {
            s.set(".e.frost", {
                hidden: !0
            }), s.set(".e.closed", {
                transformOrigin: "left center"
            }), s.set(".e.open", {
                scaleX: 0,
                transformOrigin: "right center"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.closed", {
                scaleX: 0,
                duration: .2,
                ease: "power2.in"
            }).to(".e.open", {
                scaleX: 1,
                duration: .2,
                ease: "power2.out"
            })
        }
    }),
    P2 = I2.extend({
        onLoadComplete() {
            s.set(".e.frost", {
                opacity: 0
            }), s.set(".e.closed", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            }).to(".e.frost", {
                opacity: .5
            }).to(".e.frost", {
                opacity: 1
            })
        }
    }),
    jM = P2.extend({
        onLoadComplete() {
            s.set(".e.closed", {
                hidden: !0
            }), a.startShake("c", 4, 0, 2)
        }
    }),
    m0 = E.extend({
        imageManifest: {
            milk: new URL("main/pp7/everyday/assets/fbc143e1.png", self.location).href
        }
    }),
    QM = u0,
    U2 = m0.extend({
        stepDuration: .45,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("milk")
        }],
        onLoadComplete() {
            s.set(".e.milk", {
                y: 100,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                y: 0,
                scale: 1,
                ease: "back.out(2)"
            })
        }
    }),
    F2 = m0.extend({
        elements: a.elementsFromImages("milk"),
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                scaleY: 1.2,
                ease: "power3.inOut"
            }).to(".e.milk", {
                scaleY: 1,
                duration: .05,
                ease: "power2.out"
            })
        },
        onStartProgress() {
            a.startHoldShake("milk")
        },
        onStopProgress() {
            a.stopHoldShake("milk")
        }
    }),
    zM = m0.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("milk"),
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                y: 100,
                scale: .7,
                ease: "back.out(2)"
            })
        }
    }),
    HM = u0,
    NM = U2.extend({
        imageManifest: {
            milk: new URL("main/pp7/everyday/assets/a70742dc.png", self.location).href
        }
    }),
    GM = F2.extend({
        imageManifest: {
            milk: new URL("main/pp7/everyday/assets/a70742dc.png", self.location).href
        }
    }),
    XM = E.extend({
        imageManifest: {
            milk: new URL("main/pp7/everyday/assets/a70742dc.png", self.location).href
        },
        stepDuration: .45,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("milk")
        }],
        onLoadComplete() {
            a.startShake("milk", 5, 5, 1)
        },
        onStartProgress() {
            a.startHoldShake("milk")
        },
        onStopProgress() {
            a.stopHoldShake("milk")
        }
    }),
    rV = E.extend({
        imageManifest: {
            jar: new URL("main/pp7/everyday/assets/5b3b35e4.png", self.location).href,
            lid: new URL("main/pp7/everyday/assets/a4575835.png", self.location).href,
            ant: new URL("main/pp7/everyday/assets/37de536b.png", self.location).href,
            ladybug: new URL("main/pp7/everyday/assets/3568df06.png", self.location).href,
            raisin: new URL("main/pp7/everyday/assets/d03a5917.png", self.location).href
        }
    }),
    YM = rV.extend({
        stepDuration: .75,
        elements: [{
            class: "jar-container",
            type: "container",
            children: [{
                class: "jar",
                type: "img",
                pos: [0, 0],
                key: "jar"
            }, {
                class: "lid",
                type: "img",
                pos: [100, 0],
                key: "lid"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.lid", {
                x: 30,
                y: -80,
                rotation: 7
            });
            t.name = "lid", this.timeline.add(t)
        }
    }),
    KM = rV.extend({
        stepDuration: .5,
        elements: [{
            class: "ant",
            type: "img",
            pos: [0, 0],
            key: "ant"
        }, {
            class: "jar",
            type: "img",
            pos: [100, 760],
            key: "jar"
        }],
        initializeTimeline() {
            s.set(".e.jar", {
                rotation: 280
            });
            const t = s.timeline().to(".e.jar", {
                x: -810,
                y: -100,
                rotation: 260
            });
            t.name = "jar", this.timeline.add(t)
        }
    }),
    WM = rV.extend({
        stepDuration: .5,
        elements: [{
            class: "ladybug",
            type: "img",
            pos: [0, 0],
            key: "ladybug"
        }, {
            class: "jar",
            type: "img",
            pos: [100, -760],
            key: "jar"
        }],
        initializeTimeline() {
            s.set(".e.jar", {
                rotation: -280
            });
            const t = s.timeline().to(".e.jar", {
                x: 850,
                y: -70,
                rotation: -260
            });
            t.name = "jar", this.timeline.add(t)
        }
    }),
    JM = rV.extend({
        elements: [{
            class: "raisin",
            type: "img",
            pos: [0, 0],
            key: "raisin"
        }]
    }),
    ZM = rV.extend({
        stepDuration: .75,
        elements: [{
            class: "jar-container",
            type: "container",
            children: [{
                class: "ladybug",
                type: "img",
                pos: [180, 50],
                key: "ladybug"
            }, {
                class: "ant",
                type: "img",
                pos: [20, -60],
                key: "ant"
            }, {
                class: "jar",
                type: "img",
                pos: [0, 0],
                key: "jar"
            }, {
                class: "lid",
                type: "img",
                pos: [-100, 50],
                key: "lid"
            }]
        }],
        initializeTimeline() {
            s.set(".e.lid", {
                rotation: 30
            }), s.set(".e.ladybug", {
                rotation: X.exports.random(-90, 90)
            }), s.set(".e.ant", {
                rotation: X.exports.random(-90, 90)
            });
            const t = s.timeline().to(".e.lid", {
                x: -50,
                y: 200,
                rotation: 0
            });
            t.name = "lid", this.timeline.add(t)
        }
    }),
    _M = E.extend({
        imageManifest: {
            toy: new URL("main/pp7/everyday/assets/8a443c72.png", self.location).href
        },
        elements: [{
            type: "img",
            class: "toy",
            key: "toy",
            pos: [0, 0]
        }],
        stepDuration: .5,
        initializeTimeline() {
            this.timeline.to(".e.toy", {
                y: -1500,
                rotate: 180
            })
        }
    }),
    $M = E.extend({
        imageManifest: {
            toy: new URL("main/pp7/everyday/assets/3ff47f30.png", self.location).href
        },
        elements: [{
            type: "img",
            class: "toy",
            key: "toy",
            pos: [0, 0]
        }],
        stepDuration: .75,
        initializeTimeline() {
            this.timeline.to(".e.toy", {
                x: 1500,
                rotate: 180
            })
        }
    }),
    eO = E.extend({
        imageManifest: {
            m1: new URL("main/pp7/everyday/assets/7ddf9d57.png", self.location).href,
            m2: new URL("main/pp7/everyday/assets/ef1c18c4.png", self.location).href,
            m3: new URL("main/pp7/everyday/assets/b3fbf623.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "marbles",
            children: [{
                type: "img",
                class: "m1",
                key: "m3",
                pos: [-300, -400]
            }, {
                type: "img",
                class: "m2",
                key: "m1",
                pos: [100, 0]
            }, {
                type: "img",
                class: "m3",
                key: "m3",
                pos: [60, 400]
            }, {
                type: "img",
                class: "m4",
                key: "m1",
                pos: [80, -590]
            }, {
                type: "img",
                class: "m5",
                key: "m2",
                pos: [-380, 0]
            }, {
                type: "img",
                class: "m6",
                key: "m2",
                pos: [420, 100]
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.marbles", {
                scale: .5
            }), this.timeline.to(".e.m1", {
                x: -600,
                y: -800,
                rotate: 180
            }), this.timeline.to(".e.m2", {
                x: -500,
                y: 200,
                rotate: 180
            }, "<"), this.timeline.to(".e.m3", {
                x: 200,
                y: -600,
                rotate: 180
            }, "<"), this.timeline.to(".e.m4", {
                x: 200,
                y: -600,
                rotate: 180
            }, "<"), this.timeline.to(".e.m5", {
                x: -550,
                y: -500,
                rotate: 180
            }, "<"), this.timeline.to(".e.m6", {
                x: 700,
                y: 300,
                rotate: 180
            }, "<")
        }
    }),
    tO = E.extend({
        imageManifest: {
            m1: new URL("main/pp7/everyday/assets/7ddf9d57.png", self.location).href,
            m2: new URL("main/pp7/everyday/assets/ef1c18c4.png", self.location).href,
            m3: new URL("main/pp7/everyday/assets/b3fbf623.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "marbles",
            children: [{
                type: "img",
                class: "m1",
                key: "m3",
                pos: [-300, -400]
            }, {
                type: "img",
                class: "m2",
                key: "m1",
                pos: [100, 0]
            }, {
                type: "img",
                class: "m3",
                key: "m3",
                pos: [60, 400]
            }, {
                type: "img",
                class: "m4",
                key: "m1",
                pos: [80, -590]
            }, {
                type: "img",
                class: "m5",
                key: "m2",
                pos: [-380, 0]
            }, {
                type: "img",
                class: "m6",
                key: "m2",
                pos: [420, 100]
            }, {
                type: "img",
                class: "m7",
                key: "m3",
                pos: [-1300, -1400]
            }, {
                type: "img",
                class: "m8",
                key: "m1",
                pos: [1300, 100]
            }, {
                type: "img",
                class: "m9",
                key: "m1",
                pos: [180, -1390]
            }, {
                type: "img",
                class: "m10",
                key: "m2",
                pos: [-1380, 10]
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.marbles", {
                scale: .5
            }), s.set(".e.m1", {
                x: -600,
                y: -800,
                rotate: 180
            }), s.set(".e.m2", {
                x: -500,
                y: 200,
                rotate: 180
            }), s.set(".e.m3", {
                x: 200,
                y: -600,
                rotate: 180
            }), s.set(".e.m4", {
                x: 200,
                y: -600,
                rotate: 180
            }), s.set(".e.m5", {
                x: -550,
                y: -500,
                rotate: 180
            }), s.set(".e.m6", {
                x: 700,
                y: 300,
                rotate: 180
            }), s.to(".e.marbles", {
                scale: .25
            }), this.timeline.to(".e.m1", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m2", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m3", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m4", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m5", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m6", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m7", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m8", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m9", {
                scale: 2,
                opacity: 0
            }), this.timeline.to(".e.m10", {
                scale: 2,
                opacity: 0
            })
        }
    }),
    IA = E.extend({
        imageManifest: {
            merits: new URL("main/pp7/everyday/assets/70bdc89a.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "merits",
                images: {
                    person: [692, 1125, 770, 824, 88, 115],
                    litter0: [428, 10, 416, 378, 311, 292],
                    litter1: [10, 10, 408, 314, 343, 296],
                    litter2: [854, 10, 280, 410, 295, 360],
                    rope: [1178, 521, 722, 594, 203, 139],
                    knot: [10, 1104, 672, 670, 165, 164],
                    badge0: [10, 398, 574, 573, 214, 213],
                    badge1: [594, 521, 574, 573, 214, 213],
                    badge2: [1144, 10, 564, 501, 250, 218]
                }
            }
        }
    }),
    nO = IA.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["person"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                x: -200
            }), a.startShake("person", 0, 1, 2)
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: 200,
                ease: "none"
            })
        }
    }),
    iO = IA.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["litter0", "litter1"]),
        onLoadComplete() {
            s.set(".e.litter1", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("litter0", "litter1", 1)).add(a.squashOnce("litter1", 1))
        }
    }),
    sO = IA.extend({
        stepDuration: .35,
        lastStepDuration: .6,
        elements: a.elementsFromSprite("sprite", ["rope", "knot"]),
        onLoadComplete() {
            s.set(".e.knot", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashOnce("rope", 1)).add(a.squashOnce("rope", 1)).add(a.squashTransition("rope", "knot", 1))
        }
    }),
    oO = IA.extend({
        elements: a.elementsFromSprite("sprite", ["badge0", "badge2", "badge1"]),
        initializeTimeline() {
            this.timeline.to(".e.badge0", {
                x: -300,
                y: -200,
                rotate: -5
            }, 0).to(".e.badge1", {
                x: 300,
                y: -200,
                rotate: 5
            }, 0).to(".e.badge2", {
                y: 200,
                rotate: -5
            }, 0).fillTime(3)
        }
    }),
    aO = E.extend({
        imageManifest: {
            ant: new URL("main/pp7/everyday/assets/ffd105f1.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "ant",
            class: "ant1",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant2",
            pos: [-250, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant3",
            pos: [250, 0]
        }],
        initializeTimeline() {
            s.set(".e.ant2", {
                scale: .5
            }), s.set(".e.ant1", {
                scale: .75
            }), s.to(".e.ant1,.e.ant2,.e.ant3", {
                rotate: 2,
                ease: "none",
                duration: .2,
                yoyo: !0,
                repeat: -1
            }), s.fromTo(".e.ant1", {
                x: 650
            }, {
                x: -650,
                y: 100,
                duration: 5,
                ease: "none",
                repeat: -1
            }).seek(1.5), s.fromTo(".e.ant2", {
                x: 650
            }, {
                x: -650,
                y: "+=100",
                duration: 7,
                ease: "none",
                repeat: -1
            }).seek(.66), s.fromTo(".e.ant3", {
                x: 650
            }, {
                x: -650,
                y: "+=100",
                duration: 4,
                ease: "none",
                repeat: -1
            }).seek(0), this.timeline.to(".e.ant1", {
                scaleY: .25,
                onComplete() {
                    s.killTweensOf(".e.ant1"), s.to(".e.ant1", {
                        opacity: 0
                    })
                }
            }), this.timeline.to(".e.ant2", {
                scaleY: .25,
                onComplete() {
                    s.killTweensOf(".e.ant2"), s.to(".e.ant2", {
                        opacity: 0
                    })
                }
            }), this.timeline.to(".e.ant3", {
                scaleY: .25,
                onComplete() {
                    s.killTweensOf(".e.ant3"), s.to(".e.ant3", {
                        opacity: 0
                    })
                }
            })
        }
    }),
    rO = E.extend({
        imageManifest: {
            pie: new URL("main/pp7/everyday/assets/e9196661.png", self.location).href,
            ant: new URL("main/pp7/everyday/assets/ffd105f1.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "ant",
            class: "ant ant1",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant2",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant3",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant4",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant5",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant6",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant7",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant8",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant9",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ant",
            class: "ant ant10",
            pos: [0, 0]
        }, {
            type: "img",
            key: "pie",
            class: "pie1",
            pos: [250, 0]
        }],
        stepDuration: .1,
        initializeTimeline() {
            s.set(".e.pie1", {
                scale: .8
            }), s.to(".e.ant", {
                rotate: 2,
                ease: "none",
                duration: .1,
                stagger: .05,
                yoyo: !0,
                repeat: -1
            });
            for (let t = 1; t <= 10; t++) {
                const e = `.e.ant${t}`;
                this.timeline.to(e, {
                    scaleY: .25,
                    onComplete() {
                        s.killTweensOf(e), s.to(e, {
                            opacity: 0
                        })
                    }
                });
                let n = 600,
                    i = 1;
                t % 2 === 0 && (n = -600, i = -1), s.fromTo(e, {
                    scaleX: i,
                    x: n,
                    y: -window.innerHeight
                }, {
                    x: 0,
                    y: 200,
                    delay: .3 * t,
                    duration: 1,
                    ease: "none",
                    repeat: -1
                })
            }
        }
    }),
    f0 = E.extend({
        imageManifest: {
            bakingSoda: new URL("main/pp7/everyday/assets/21097eaf.png", self.location).href,
            bowlGoo: new URL("main/pp7/everyday/assets/9d745257.png", self.location).href,
            bowl: new URL("main/pp7/everyday/assets/b033f09f.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/912c7020.png", self.location).href,
            handGoo: new URL("main/pp7/everyday/assets/dec0d82a.png", self.location).href,
            saline: new URL("main/pp7/everyday/assets/e3e87f38.png", self.location).href
        }
    }),
    VO = f0.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "bakingSoda",
                type: "img",
                pos: [0, 0],
                key: "bakingSoda"
            }, {
                class: "glue",
                type: "img",
                pos: [0, 0],
                key: "glue"
            }, {
                class: "saline",
                type: "img",
                pos: [0, 0],
                key: "saline"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.glue", {
                x: 0,
                y: 0,
                rotate: 10
            }), s.set(".e.bakingSoda", {
                rotate: -14,
                opacity: 0
            }), s.set(".e.saline", {
                x: 0,
                y: 0,
                rotate: 0,
                opacity: 0
            });
            const t = s.timeline().to(".e.glue", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: 120,
                y: 40
            }, 0).to(".e.bakingSoda", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: -100,
                y: 40
            }, 1).to(".e.saline", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: 15,
                y: -50
            }, 2);
            this.timeline.add(t)
        }
    }),
    lO = f0.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "bowlGoo",
                type: "img",
                pos: [0, 0],
                key: "bowlGoo"
            }, {
                class: "bowl",
                type: "img",
                pos: [0, 0],
                key: "bowl"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.bowl", {
                opacity: 0,
                rotateY: 1440,
                ease: "linear"
            }, 0).to(".e.bowlGoo", {
                rotateY: 1440,
                ease: "linear"
            }, 0);
            this.timeline.add(t)
        }
    }),
    AO = f0.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "handGoo",
                type: "img",
                pos: [0, 0],
                key: "handGoo"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.handGoo", {
                scaleY: 1,
                rotate: -10
            });
            const t = s.timeline().to(".e.handGoo", {
                scaleY: .6,
                ease: "back.inOut",
                rotate: 20,
                duration: 1
            }, 0).to(".e.handGoo", {
                scaleY: 1.2,
                ease: "back.inOut",
                rotate: -10,
                duration: .5
            }, .5).to(".e.handGoo", {
                scaleY: .3,
                ease: "back.inOut",
                rotate: 20,
                duration: .5
            }, 1).to(".e.handGoo", {
                scaleY: 1,
                ease: "back.inOut",
                rotate: -10,
                duration: .5
            }, 1.5).to(".e.handGoo", {
                scaleY: 1.6,
                ease: "back.inOut",
                rotate: 40,
                duration: 1
            }, 2.5).to(".e.handGoo", {
                scaleY: .3,
                ease: "back.inOut",
                rotate: -20,
                duration: .5
            }, 3.5).to(".e.handGoo", {
                scaleY: 1,
                ease: "back.inOut",
                rotate: -10,
                duration: .5
            }, 4).to(".e.handGoo", {
                scaleY: .6,
                ease: "back.inOut",
                rotate: 20,
                duration: .5
            }, 4.5).to(".e.handGoo", {
                scaleY: 1.4,
                ease: "back.inOut",
                rotate: -20,
                duration: .5
            }, 4.8).to(".e.handGoo", {
                scaleY: 1,
                ease: "back.inOut",
                rotate: -10,
                duration: .5
            }, 5).to(".e.handGoo", {
                scaleY: .4,
                ease: "back.inOut",
                rotate: 30,
                duration: .5
            }, 5.5).to(".e.handGoo", {
                scaleY: 1.6,
                ease: "back.inOut",
                rotate: 35,
                duration: .5
            }, 6).to(".e.handGoo", {
                scaleY: .7,
                ease: "back.inOut",
                rotate: 15,
                duration: .5
            }, 6.5).to(".e.handGoo", {
                scaleY: 1,
                ease: "back.inOut",
                rotate: -10,
                duration: .5
            }, 7);
            this.timeline.add(t)
        }
    }),
    PA = E.extend({
        imageManifest: {
            bakingSoda: new URL("main/pp7/everyday/assets/21097eaf.png", self.location).href,
            bowlGoo: new URL("main/pp7/everyday/assets/9d745257.png", self.location).href,
            bowl: new URL("main/pp7/everyday/assets/b033f09f.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/912c7020.png", self.location).href,
            handGoo: new URL("main/pp7/everyday/assets/dec0d82a.png", self.location).href,
            saline: new URL("main/pp7/everyday/assets/e3e87f38.png", self.location).href,
            rug: new URL("main/pp7/everyday/assets/18c4d9b5.png", self.location).href,
            rugGoo: new URL("main/pp7/everyday/assets/133c086f.png", self.location).href,
            ottoman: new URL("main/pp7/everyday/assets/21520fcc.png", self.location).href
        }
    }),
    cO = PA.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "bakingSoda",
                type: "img",
                pos: [0, 0],
                key: "bakingSoda"
            }, {
                class: "glue",
                type: "img",
                pos: [0, 0],
                key: "glue"
            }, {
                class: "saline",
                type: "img",
                pos: [0, 0],
                key: "saline"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.glue", {
                x: 0,
                y: 0,
                rotate: 10
            }), s.set(".e.bakingSoda", {
                rotate: -14,
                opacity: 0
            }), s.set(".e.saline", {
                x: 0,
                y: 0,
                rotate: 0,
                opacity: 0
            });
            const t = s.timeline().to(".e.glue", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: 120,
                y: 40
            }, 0).to(".e.bakingSoda", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: -100,
                y: 40
            }, 1).to(".e.saline", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1,
                x: 15,
                y: -50
            }, 2);
            this.timeline.add(t)
        }
    }),
    dO = PA.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "bowlGoo",
                type: "img",
                pos: [0, 0],
                key: "bowlGoo"
            }, {
                class: "bowl",
                type: "img",
                pos: [0, 0],
                key: "bowl"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.bowl", {
                opacity: 0,
                rotateY: 1440,
                ease: "linear"
            }, 0).to(".e.bowlGoo", {
                rotateY: 1440,
                ease: "linear"
            }, 0);
            this.timeline.add(t)
        }
    }),
    pO = PA.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "rug",
                type: "img",
                pos: [0, 0],
                key: "rug"
            }, {
                class: "rugGoo",
                type: "img",
                pos: [0, 0],
                key: "rugGoo"
            }]
        }],
        stepDuration: .4,
        initializeTimeline() {
            s.set(".e.rugGoo", {
                x: 0,
                y: -400,
                rotate: 0,
                opacity: 0
            });
            const t = s.timeline().to(".e.rugGoo", {
                x: 0,
                y: 0,
                rotate: 360,
                duration: .1,
                opacity: 1,
                ease: "power3.in"
            }, 0);
            this.timeline.add(t)
        }
    }),
    hO = PA.extend({
        elements: [{
            class: "slime-container",
            type: "container",
            children: [{
                class: "rug",
                type: "img",
                pos: [0, 0],
                key: "rug"
            }, {
                class: "rugGoo",
                type: "img",
                pos: [0, 0],
                key: "rugGoo"
            }, {
                class: "ottoman",
                type: "img",
                pos: [0, 0],
                key: "ottoman"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.ottoman", {
                scale: 1.5,
                x: -500,
                y: -100
            });
            const t = s.timeline().to(".e.ottoman", {
                x: -250,
                duration: 1,
                ease: "back.inOut"
            }, 0).to(".e.ottoman", {
                x: 0,
                duration: .5,
                ease: "back.in"
            }, 1.2);
            this.timeline.add(t)
        }
    }),
    q0 = E.extend({
        imageManifest: {
            valve: new URL("main/pp7/everyday/assets/1a3d1188.png", self.location).href,
            knob: new URL("main/pp7/everyday/assets/31680a38.png", self.location).href,
            knob2: new URL("main/pp7/everyday/assets/71cd813b.png", self.location).href,
            sprinkler: new URL("main/pp7/everyday/assets/31fbd9c5.png", self.location).href
        }
    }),
    tg = q0.extend({
        elements: [{
            class: "valve-container",
            type: "container",
            children: [{
                class: "valve",
                type: "img",
                pos: [0, 0],
                key: "valve"
            }, {
                class: "knob",
                type: "img",
                pos: [10, 10],
                key: "knob"
            }, {
                class: "knob2",
                type: "img",
                pos: [10, 10],
                key: "knob2"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            const t = s.timeline().to(".e.knob2", {
                opacity: 0,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 1).to(".e.knob2", {
                opacity: 1,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 2).to(".e.knob2", {
                opacity: 0,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 3).to(".e.knob2", {
                opacity: 1,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 4).to(".e.knob2", {
                opacity: 0,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 5).to(".e.knob2", {
                opacity: 1,
                duration: 1,
                y: 0,
                ease: "power2.inOut"
            }, 6);
            this.timeline.add(t), a.addParticleEmitter({
                className: "drip",
                numberOfParticles: 10,
                container: "valve-container",
                zIndex: -1,
                settings: {
                    frequency: 1.5,
                    from: {
                        backgroundColor: "#0099FF",
                        borderRadius: "50%",
                        border: "8px solid black"
                    },
                    to: {
                        backgroundColor: "#FFFFFF",
                        borderColor: "#0099FF",
                        height: 100,
                        opacity: 1
                    },
                    boundaries: {
                        left: 430,
                        right: 460,
                        top: 550,
                        bottom: 440
                    },
                    randomAngle: !1,
                    minSize: 25,
                    maxSize: 35,
                    gravity: 6
                }
            }, this)
        }
    }),
    uO = q0.extend({
        elements: [{
            class: "sprinkler-container",
            type: "container",
            children: [{
                class: "sprinkler",
                type: "img",
                pos: [0, 0],
                key: "sprinkler"
            }]
        }],
        stepDuration: .6,
        initializeTimeline() {
            const t = s.timeline().to(".sprinkler", {
                repeat: 1,
                yoyo: !0,
                scale: 1.2,
                rotate: 5,
                ease: "power3.Out",
                duration: .2
            }, 0);
            this.timeline.add(t), a.addParticleEmitter({
                container: "sprinkler-container",
                settings: {
                    from: {
                        backgroundColor: "#0099FF",
                        borderRadius: "45px",
                        borderRight: "8px solid black",
                        borderTop: "8px solid black"
                    },
                    to: {
                        backgroundColor: "#FFFFFF",
                        borderColor: "#0099FF",
                        height: 300
                    },
                    boundaries: {
                        left: 425,
                        right: 575
                    },
                    randomAngleRange: 20,
                    minSize: 20,
                    maxSize: 30,
                    force: -4,
                    gravity: 1
                }
            }, this)
        }
    }),
    mO = q0.extend({
        elements: [{
            class: "sprinkler-container",
            type: "container",
            children: [{
                class: "sprinkler",
                type: "img",
                pos: [0, 0],
                key: "sprinkler"
            }]
        }],
        stepDuration: .6,
        initializeTimeline() {
            const t = s.timeline().to(".sprinkler", {
                repeat: 1,
                yoyo: !0,
                scale: 1.2,
                rotate: -5,
                ease: "power3.Out",
                duration: .2
            }, 0).to(".sprinkler", {
                repeat: 1,
                yoyo: !0,
                scale: 1.2,
                rotate: 5,
                ease: "power3.Out",
                duration: .2
            }, 1).to(".sprinkler", {
                repeat: 1,
                yoyo: !0,
                scale: 1.2,
                rotate: -5,
                ease: "power3.Out",
                duration: .2
            }, 2).to(".sprinkler", {
                repeat: 1,
                yoyo: !0,
                scale: 1.2,
                rotate: 5,
                ease: "power3.Out",
                duration: .2
            }, 3);
            this.timeline.add(t), a.addParticleEmitter({
                container: "sprinkler-container",
                settings: {
                    from: {
                        backgroundColor: "#0099FF",
                        borderRadius: "45px",
                        borderRight: "8px solid black",
                        borderTop: "8px solid black"
                    },
                    to: {
                        backgroundColor: "#FFFFFF",
                        borderColor: "#0099FF",
                        height: 300
                    },
                    boundaries: {
                        left: 425,
                        right: 575
                    },
                    randomAngleRange: 35,
                    minSize: 30,
                    maxSize: 70,
                    force: -10,
                    gravity: 1
                }
            }, this)
        }
    }),
    g0 = E.extend({
        imageManifest: {
            ball: new URL("main/pp7/everyday/assets/e794cf16.png", self.location).href,
            bear: new URL("main/pp7/everyday/assets/e5398fc8.png", self.location).href,
            blocks: new URL("main/pp7/everyday/assets/855733bf.png", self.location).href,
            car: new URL("main/pp7/everyday/assets/3e757175.png", self.location).href,
            robot: new URL("main/pp7/everyday/assets/de110d38.png", self.location).href,
            toyBox: new URL("main/pp7/everyday/assets/c2910ec7.png", self.location).href,
            yoYo: new URL("main/pp7/everyday/assets/69ee268a.png", self.location).href
        }
    }),
    fO = g0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("bear", "car", "robot"),
        onLoadComplete() {
            s.set(".e.car", {
                x: -250,
                y: 100,
                scale: .5,
                rotation: 205
            }), s.set(".e.bear", {
                scale: .5
            }), s.set(".e.robot", {
                x: 250,
                y: 100,
                scale: .5,
                rotation: 255
            })
        },
        initializeTimeline() {
            this.timeline.add(a.fadeAway("car")).add(a.fadeAway("robot")).add(a.fadeAway("bear"))
        }
    }),
    qO = g0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("ball", "blocks", "yoYo"),
        onLoadComplete() {
            s.set(".e.blocks", {
                x: -250,
                y: 100,
                scale: .5,
                rotation: 15
            }), s.set(".e.ball", {
                scale: .5
            }), s.set(".e.yoYo", {
                x: 250,
                y: 100,
                scale: .5,
                rotation: 255
            })
        },
        initializeTimeline() {
            this.timeline.add(a.fadeAway("blocks")).add(a.fadeAway("yoYo")).add(a.fadeAway("ball"))
        }
    }),
    gO = g0.extend({
        elements: a.elementsFromImages("toyBox"),
        onStartProgress() {
            a.startHoldShake("toyBox", 1, 5)
        },
        onStopProgress() {
            a.stopHoldShake("toyBox")
        }
    }),
    j2 = E.extend({
        imageManifest: {
            bigbubbles: new URL("main/pp7/everyday/assets/84117c4f.png", self.location).href,
            emptytub: new URL("main/pp7/everyday/assets/06d004e9.png", self.location).href,
            smallbubbles: new URL("main/pp7/everyday/assets/74c82785.png", self.location).href
        },
        particleEmitter: null
    }),
    yO = j2.extend({
        stepDuration: 1,
        elements: [{
            class: "emptytub",
            type: "img",
            pos: [0, 0],
            key: "emptytub"
        }, {
            class: "smallbubbles",
            type: "img",
            pos: [0, 0],
            key: "smallbubbles"
        }],
        initializeTimeline() {
            s.set(".e.smallbubbles", {
                opacity: 0,
                zIndex: 1
            });
            const t = s.timeline().to(".e.emptytub", {
                scale: 1.5,
                ease: "back.out"
            }, 0).to(".e.smallbubbles", {
                opacity: 1,
                yoyo: !0,
                repeat: 1,
                duration: .3
            }, 0).to(".e.smallbubbles", {
                scale: 1.5,
                ease: "back.out"
            }, 0);
            this.timeline.add(t), a.addParticleEmitter({
                container: "scene-container",
                autoplay: !0,
                zIndex: -1,
                settings: {
                    frequency: .3,
                    from: {
                        backgroundColor: "#FFFFFF",
                        border: "4px solid #66ccff",
                        opacity: 1
                    },
                    to: {
                        duration: 1,
                        delay: .1,
                        opacity: 0
                    },
                    minSize: 20,
                    maxSize: 60,
                    boundaries: {
                        top: 520,
                        bottom: 520,
                        left: 300,
                        right: 500
                    },
                    force: 0,
                    gravity: -1,
                    randomAngleRange: 45
                }
            }, this)
        }
    }),
    bO = j2.extend({
        stepDuration: 1,
        elements: [{
            class: "smallbubbles",
            type: "img",
            pos: [0, 0],
            key: "smallbubbles"
        }, {
            class: "bigbubbles",
            type: "img",
            pos: [-63, -6],
            key: "bigbubbles"
        }, {
            class: "emptytub",
            type: "img",
            pos: [0, 0],
            key: "emptytub"
        }],
        initializeTimeline() {
            s.set(".e.emptytub", {
                scale: 1.5
            }), s.set(".e.smallbubbles", {
                scale: 1.5,
                opacity: 0
            }), s.set(".e.bigbubbles", {
                scale: 1.5,
                opacity: 0
            }), a.addParticleEmitter({
                container: "scene-container",
                autoplay: !0,
                zIndex: -1,
                settings: {
                    frequency: .3,
                    from: {
                        backgroundColor: "#FFFFFF",
                        border: "4px solid #66ccff",
                        opacity: 1
                    },
                    to: {
                        duration: 1,
                        delay: .1,
                        opacity: 0
                    },
                    minSize: 40,
                    maxSize: 120,
                    boundaries: {
                        top: 520,
                        bottom: 520,
                        left: 300,
                        right: 500
                    },
                    force: 0,
                    gravity: -1,
                    randomAngleRange: 45
                }
            }, this), this.particleEmitter = a.addParticleEmitter({
                container: "scene-container",
                className: "water-particles",
                autoplay: !1,
                restartOnProgress: !0,
                settings: {
                    particleLimit: 10,
                    frequency: .01,
                    from: {
                        backgroundColor: "#66ccff",
                        borderRadius: "45px",
                        borderRight: "8px solid black",
                        borderTop: "8px solid black"
                    },
                    to: {
                        backgroundColor: "#66ccff",
                        borderColor: "#0099FF",
                        height: 200,
                        opacity: 0
                    },
                    boundaries: {
                        left: 425,
                        right: 575
                    },
                    randomAngleRange: 40,
                    minSize: 20,
                    maxSize: 30,
                    force: -6,
                    gravity: 1
                }
            }, this)
        },
        onDiscreteProgress(t) {
            t > 50 && t < 100 ? s.timeline().to(".e.bigbubbles", {
                opacity: 1,
                yoyo: !0,
                repeat: 1,
                duration: .25
            }) : s.timeline().to(".e.smallbubbles", {
                opacity: 1,
                yoyo: !0,
                repeat: 1,
                duration: .25
            })
        }
    }),
    vO = Hn.extend({
        imageManifest: {
            towel: new URL("main/pp7/everyday/assets/bf813621.png", self.location).href
        },
        stepDuration: .5,
        onDiscreteProgress(t) {
            t === 25 || t === 75 ? s.timeline().to(".e.image-container", {
                rotate: -15
            }) : s.timeline().to(".e.image-container", {
                rotate: 15
            })
        }
    }),
    UA = E.extend({
        imageManifest: {
            aim: new URL("main/pp7/everyday/assets/37bcb892.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/7c7de9f3.png", self.location).href,
            marble: new URL("main/pp7/everyday/assets/01b547f0.png", self.location).href,
            vase1: new URL("main/pp7/everyday/assets/25a229e2.png", self.location).href,
            vase2: new URL("main/pp7/everyday/assets/f732a105.png", self.location).href,
            vase3: new URL("main/pp7/everyday/assets/46ea12bc.png", self.location).href,
            vase4: new URL("main/pp7/everyday/assets/5fe6db00.png", self.location).href,
            vase5: new URL("main/pp7/everyday/assets/eca50cde.png", self.location).href,
            vase6: new URL("main/pp7/everyday/assets/f01d6cd8.png", self.location).href,
            vase7: new URL("main/pp7/everyday/assets/9fab8f20.png", self.location).href
        }
    }),
    wO = UA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("marble"),
        initializeTimeline() {
            this.timeline.to(".e.marble", {
                y: -200,
                opacity: 0
            })
        }
    }),
    xO = UA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("aim"),
        onLoadComplete() {
            this.timeline.to(".e.aim", {
                rotate: 27,
                scaleX: 1.35,
                x: -50
            })
        }
    }),
    kO = UA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("aim", "fire"),
        onLoadComplete() {
            this.timeline.fromTo(".e.aim", {
                rotate: 27,
                scaleX: 1.35,
                x: -50
            }, {
                opacity: 0
            }), this.timeline.fromTo(".e.fire", {
                opacity: 0,
                x: 100
            }, {
                opacity: 1,
                rotate: 27
            }, "<")
        }
    }),
    CO = UA.extend({
        stepDuration: .25,
        elements: [{
            class: "move-container",
            type: "container",
            children: a.elementsFromImages("marble", "vase1", "vase2", "vase3", "vase4", "vase5", "vase6", "vase7", "fire")
        }],
        initializeTimeline() {
            s.fromTo(".e.marble", {
                x: -500,
                scale: .5
            }, {
                x: 600,
                scale: .5,
                ease: "none"
            }), s.to(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                x: "random(-500, 500, 5)",
                ease: "none",
                delay: .2,
                stagger: .05
            }), s.to(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                y: 600,
                rotate: 90,
                ease: "back.in(2.7)",
                delay: .2,
                stagger: .05
            }), this.timeline.fromTo(".e.fire", {
                x: -600
            }, {
                x: 0,
                rotate: 90
            }), this.timeline.fromTo(".e.fire", {
                y: 0
            }, {
                y: 600,
                ease: "back.in(1.2)",
                duration: .25
            }, "<"), this.timeline.to(".move-container", {
                x: "+=100",
                y: "+=50",
                scale: "-=0.2"
            }), this.timeline.to(".move-container", {
                x: "+=100",
                y: "+=50",
                scale: "-=0.2",
                opacity: .5
            }), this.timeline.to(".move-container", {
                x: "+=100",
                y: "+=50",
                scale: "-=0.3",
                opacity: 0
            })
        }
    }),
    y0 = E.extend({
        imageManifest: {
            aim: new URL("main/pp7/everyday/assets/37bcb892.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/7c7de9f3.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/912c7020.png", self.location).href,
            vase1: new URL("main/pp7/everyday/assets/25a229e2.png", self.location).href,
            vase2: new URL("main/pp7/everyday/assets/f732a105.png", self.location).href,
            vase3: new URL("main/pp7/everyday/assets/46ea12bc.png", self.location).href,
            vase4: new URL("main/pp7/everyday/assets/5fe6db00.png", self.location).href,
            vase5: new URL("main/pp7/everyday/assets/eca50cde.png", self.location).href,
            vase6: new URL("main/pp7/everyday/assets/f01d6cd8.png", self.location).href,
            vase7: new URL("main/pp7/everyday/assets/9fab8f20.png", self.location).href
        }
    }),
    RO = y0.extend({
        elements: a.elementsFromImages("vase1", "vase2", "vase3", "vase4", "vase5", "vase6", "vase7"),
        initializeTimeline() {
            s.set(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                x: "random(-300, 300, 5)",
                y: "random(-300, 300, 5)"
            }), this.timeline.to(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                y: "-=100",
                rotateY: 90,
                opacity: 0,
                stagger: .2,
                scale: 2
            })
        }
    }),
    DO = y0.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("glue"),
        initializeTimeline() {
            const t = a.addParticleEmitter({
                numberOfParticles: 5,
                autoplay: !1,
                zIndex: 1,
                settings: {
                    particleLimit: 2,
                    frequency: .15,
                    from: {
                        backgroundColor: "#ffffff",
                        border: "2px solid black",
                        opacity: 1,
                        y: 625,
                        x: 490
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 15,
                    maxSize: 35,
                    angle: 0,
                    force: 1,
                    gravity: 1,
                    randomAngle: !1
                }
            }, this);
            this.timeline.fromTo(".e.glue", {
                rotate: 180
            }, {
                scaleX: .8,
                scaleY: 1.2,
                onComplete() {
                    t.restart()
                }
            })
        }
    }),
    SO = y0.extend({
        stepDuration: 1,
        elements: [{
            class: "move-container",
            type: "container",
            children: a.elementsFromImages("vase1", "vase2", "vase3", "vase4", "vase5", "vase6", "vase7")
        }],
        onProgress(t) {
            t > 98 && (a.stopHoldShake("move-container", 2, 1), s.to(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                x: "random(-500, 500, 5)",
                ease: "none",
                delay: .2,
                stagger: .05
            }), s.to(".vase1,.vase2,.vase3,.vase4,.vase5,.vase6,.vase7", {
                y: 600,
                rotate: 90,
                ease: "back.in(2.7)",
                delay: .2,
                stagger: .05
            }))
        },
        onStartProgress() {
            a.startHoldShake("move-container", 2, 1)
        }
    }),
    FA = E.extend({
        imageManifest: {
            devil: new URL("main/pp7/everyday/assets/cb54fd65.png", self.location).href,
            nervous: new URL("main/pp7/everyday/assets/32aab448.png", self.location).href,
            noJumper: new URL("main/pp7/everyday/assets/eedf7535.png", self.location).href,
            tangled: new URL("main/pp7/everyday/assets/a2813f14.png", self.location).href,
            theyDidIt: new URL("main/pp7/everyday/assets/1c8bff86.png", self.location).href,
            rope0: new URL("main/pp7/everyday/assets/8b245534.png", self.location).href,
            rope1: new URL("main/pp7/everyday/assets/8aea8849.png", self.location).href,
            rope2: new URL("main/pp7/everyday/assets/95262a4d.png", self.location).href,
            rope3: new URL("main/pp7/everyday/assets/fa7fe47b.png", self.location).href
        }
    }),
    TO = FA.extend({
        stepDuration: .5,
        elements: [{
            class: "noJumper",
            type: "img",
            pos: [65, 0],
            key: "noJumper"
        }, {
            class: "devil",
            type: "img",
            pos: [0, 0],
            key: "devil"
        }],
        initializeTimeline() {
            s.set(".e.devil", {
                opacity: 0
            });
            const t = s.timeline().to(".e.devil", {
                opacity: 1,
                ease: "power2.out",
                duration: .5
            }, 0).to(".e.devil", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .5
            }, 0);
            this.timeline.add(t)
        }
    }),
    EO = FA.extend({
        stepDuration: .5,
        elements: [{
            class: "devil",
            type: "img",
            pos: [0, 0],
            key: "devil"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .5,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .2
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .5
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.devil", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .3
            })
        }
    }),
    LO = FA.extend({
        stepDuration: .5,
        elements: [{
            class: "nervous",
            type: "img",
            pos: [0, 0],
            key: "nervous"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .1
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.nervous", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .15
            })
        }
    }),
    BO = FA.extend({
        stepDuration: 1,
        elements: [{
            class: "theyDidIt",
            type: "img",
            pos: [65, 0],
            key: "theyDidIt"
        }, {
            class: "nervous",
            type: "img",
            pos: [0, 0],
            key: "nervous"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        jumping1: null,
        jumping2: null,
        onLoadComplete() {
            s.set(".e.theyDidIt", {
                opacity: 0
            }), this.jumping1 = s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .1
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25
            }), this.jumping2 = s.timeline().to(".e.nervous", {
                repeat: -1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .15
            })
        },
        onDiscreteProgress() {
            this.jumping1.kill(), this.jumping2.kill(), s.to(".e.nervous", {
                opacity: 0,
                duration: .3
            }), s.to(".e.rope1", {
                opacity: 0,
                duration: .3
            }), s.to(".e.rope2", {
                opacity: 0,
                duration: .3
            }), s.to(".e.rope3", {
                opacity: 0,
                duration: .3
            }), s.to(".e.theyDidIt", {
                opacity: 1,
                duration: .3
            })
        }
    }),
    VV = E.extend({
        imageManifest: {
            cereal: new URL("main/pp7/everyday/assets/135a9214.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "cereal",
                images: {
                    prizeWhistle: [10, 1473, 430, 358, 321, 285],
                    prizeSpoon: [1772, 994, 122, 442, 279, 439],
                    prizeScissors: [1772, 1446, 266, 430, 285, 367],
                    prizeLilGuy: [10, 1020, 358, 443, 279, 321],
                    prizeFinger: [1868, 10, 121, 396, 302, 439],
                    prizeEyeball: [378, 1020, 212, 427, 287, 394],
                    pieces: [10, 10, 1e3, 1e3, 0, 0],
                    piece14: [1868, 593, 164, 164, 418, 418],
                    piece13: [1868, 767, 164, 164, 418, 418],
                    piece12: [600, 1194, 154, 154, 423, 423],
                    piece11: [753, 1358, 119, 145, 428, 441],
                    piece10: [1904, 941, 124, 146, 427, 438],
                    piece09: [450, 1457, 164, 164, 418, 418],
                    piece08: [624, 1358, 119, 146, 427, 441],
                    piece07: [1904, 1097, 124, 146, 427, 438],
                    piece06: [450, 1631, 154, 154, 423, 423],
                    piece05: [614, 1631, 138, 138, 431, 431],
                    piece04: [764, 1194, 118, 145, 428, 441],
                    piece03: [1904, 1253, 124, 146, 427, 438],
                    piece02: [1868, 416, 166, 167, 417, 417],
                    piece01: [600, 1020, 164, 164, 418, 418],
                    hand: [1020, 994, 742, 786, 102, 124],
                    cerealBox: [1020, 10, 838, 974, 13, 81]
                }
            }
        }
    }),
    ng = ["prizeEyeball", "prizeFinger", "prizeLilGuy", "prizeScissors", "prizeSpoon", "prizeWhistle"],
    Q2 = ng[Math.floor(Math.random() * ng.length)],
    z2 = VV.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", ["hand", "cerealBox"]),
        onLoadComplete() {
            s.set(".e.hand", {
                scale: .6,
                y: -1500
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.hand", {
                y: -400,
                duration: .3
            }).to(".e.cerealBox", {
                y: 50,
                duration: .15
            }, .2).to(".e.cerealBox", {
                y: 0,
                duration: .15
            })
        }
    }),
    H2 = VV.extend({
        elements: a.elementsFromSprite("sprite", ["hand", "cerealBox"]),
        onLoadComplete() {
            s.set(".e.hand", {
                scale: .6,
                y: -400
            })
        },
        onStartProgress() {
            a.startShake("cerealBox", 10, 3), a.startShake("hand", 15, 3)
        },
        onStopProgress() {
            a.stopShake("cerealBox"), a.stopShake("hand")
        }
    }),
    N2 = VV.extend({
        elements: a.elementsFromSprite("sprite", ["piece01", "piece02", "piece03", "piece04", "piece05", "piece06", "piece07", "piece08", "piece09", "piece10", "piece11", "piece12", "piece13", "piece14", "cerealBox"]),
        onLoadComplete() {
            s.set(".e.cerealBox", {
                rotate: 180,
                y: -750
            }), s.set([".e.piece01", ".e.piece02", ".e.piece03", ".e.piece04", ".e.piece05", ".e.piece06", ".e.piece07", ".e.piece08", ".e.piece09", ".e.piece10", ".e.piece11", ".e.piece12", ".e.piece13", ".e.piece14"], {
                y: -800
            })
        },
        onStartProgress() {
            a.startShake("cerealBox", 0, 5, 1)
        },
        initializeTimeline() {
            this.timeline.to(".e.piece01", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece02", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece03", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece04", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece05", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece06", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece07", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece08", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece09", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece10", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece11", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece12", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece13", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            }).to(".e.piece14", {
                x: "random(-300, 300)",
                y: "random(-150, 450)"
            })
        },
        onStopProgress() {
            a.stopShake("cerealBox")
        }
    }),
    MO = VV.extend({
        stepDuration: 1.1,
        elements: a.elementsFromSprite("sprite", [
            [Q2, "prize"], "cerealBox"
        ]),
        onLoadComplete() {
            s.set(".e.cerealBox", {
                rotate: 180,
                y: -750
            }), s.set(".e.prize", {
                y: 300,
                opacity: 0
            }), s.to(".e.cerealBox", {
                rotate: 0,
                scale: .7,
                y: 250,
                duration: .3
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.cerealBox", {
                y: 300,
                scaleY: .75,
                duration: .5
            }).to(".e.cerealBox", {
                y: 250,
                scaleY: .7,
                duration: .5
            }).to(".e.prize", {
                opacity: 1,
                scaleY: 1.2,
                y: -365,
                duration: .5
            }, "<").to(".e.prize", {
                scaleY: 1,
                y: -350,
                duration: .5
            })
        }
    }),
    OO = z2,
    IO = H2,
    PO = N2,
    UO = VV.extend({
        elements: a.elementsFromSprite("sprite", [
            [Q2, "prize"], "cerealBox"
        ]),
        onLoadComplete() {
            s.set(".e.cerealBox", {
                rotate: 180,
                y: -750
            }), s.set(".e.prize", {
                y: 300,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cerealBox", {
                rotate: 0,
                scale: .7,
                y: 250
            }).to(".e.cerealBox", {
                y: 300,
                scaleY: .75
            }).to(".e.cerealBox", {
                y: 250,
                scaleY: .7
            }).to(".e.prize", {
                opacity: 1,
                scaleY: 1.2,
                y: -365
            }, "<").to(".e.prize", {
                scaleY: 1,
                y: -350
            }).to(".e.prize", {
                rotate: -45
            }, "+=.5").to(".e.prize", {
                y: -1500,
                x: 1500,
                rotate: 720
            })
        }
    }),
    jA = E.extend({
        imageManifest: {
            bite: new URL("main/pp7/everyday/assets/b590c764.png", self.location).href,
            jelly: new URL("main/pp7/everyday/assets/03600f18.png", self.location).href,
            pbj: new URL("main/pp7/everyday/assets/c7d52bf9.png", self.location).href,
            peanutbutter: new URL("main/pp7/everyday/assets/3824b5b1.png", self.location).href,
            bread: new URL("main/pp7/everyday/assets/6ab549f4.png", self.location).href
        }
    }),
    FO = jA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("peanutbutter", "bread"),
        initializeTimeline() {},
        onDiscreteProgress() {
            a.squashTransition("bread", "peanutbutter", .25)
        }
    }),
    jO = jA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("jelly", "bread"),
        onDiscreteProgress() {
            a.squashTransition("bread", "jelly", .25)
        }
    }),
    QO = jA.extend({
        elements: a.elementsFromImages("pbj"),
        onStartProgress() {
            a.startShake("pbj", 1, 2, 1)
        },
        onStopProgress() {
            a.stopShake("pbj")
        }
    }),
    zO = jA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("bite", "pbj"),
        onDiscreteProgress() {
            a.squashTransition("pbj", "bite", .25)
        }
    }),
    b0 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/c1847f03.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    page: [0, 0, 772, 976],
                    outline: [772, 688, 500, 694],
                    scribble: [772, 0, 500, 688],
                    crayons: [1, 976, 687, 622]
                }
            }
        }
    }),
    HO = b0.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["page", null, [12, 114]],
            ["outline", null, [103, 190]]
        ]),
        onDiscreteProgress() {
            a.squashOnce("page", .35, "y"), a.squashOnce("outline", .35, "y")
        }
    }),
    NO = b0.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["crayons", null, [189, 156]]
        ]),
        onDiscreteProgress() {
            a.squashOnce("crayons", .35)
        }
    }),
    GO = b0.extend({
        elements: a.elementsFromSprite("sprite", [
            ["page", null, [12, 114]],
            ["scribble", null, [106, 193]],
            ["outline", null, [103, 190]]
        ]),
        onLoadComplete() {
            s.set(".e.scribble", {
                clipPath: "inset(0 0 100% 0)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.scribble", {
                clipPath: "inset(0 0 0% 0)"
            })
        }
    }),
    lV = E.extend({
        imageManifest: {
            books: new URL("main/pp7/everyday/assets/34e52b72.png", self.location).href,
            fireworks: new URL("main/pp7/everyday/assets/73046e8a.png", self.location).href,
            packempty: new URL("main/pp7/everyday/assets/dc43848f.png", self.location).href,
            packfull: new URL("main/pp7/everyday/assets/55c7340e.png", self.location).href,
            snack1: new URL("main/pp7/everyday/assets/9b057eec.png", self.location).href,
            snack2: new URL("main/pp7/everyday/assets/e47cdbdf.png", self.location).href
        }
    }),
    XO = lV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("packempty", "packfull"),
        initializeTimeline() {
            this.timeline.add(a.squashTransition("packfull", "packempty", .25)), this.timeline.to(".e.packempty", {
                x: -250,
                scale: .5,
                duration: .25
            })
        }
    }),
    YO = lV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("packempty", "books"),
        initializeTimeline() {
            s.set(".e.packempty", {
                x: -250,
                scale: .5
            }), s.fromTo(".e.books", {
                x: 600,
                opacity: 0
            }, {
                opacity: 1,
                x: 250,
                duration: .25
            }), this.timeline.to(".e.books", {
                scale: .1,
                x: -250,
                opacity: 0,
                ease: "back.in(3)"
            })
        }
    }),
    KO = lV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("packempty", "snack1", "snack2"),
        initializeTimeline() {
            s.set(".e.packempty", {
                x: -250,
                duration: .25,
                scale: .5
            }), s.fromTo(".e.snack1", {
                x: 1200,
                opacity: 0
            }, {
                opacity: 1,
                x: 450,
                y: 150,
                duration: .25
            }), this.timeline.to(".e.snack1", {
                scale: .1,
                x: 50,
                y: 150,
                opacity: 0,
                ease: "back.in(3)"
            }), this.timeline.fromTo(".e.snack2", {
                opacity: 0,
                x: 1200,
                y: 150
            }, {
                opacity: 1,
                x: 450,
                duration: .25,
                delay: .25
            }, "<"), this.timeline.to(".e.snack2", {
                scale: .1,
                x: 50,
                y: 150,
                opacity: 0,
                ease: "back.in(3)"
            })
        }
    }),
    WO = lV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("packempty", "fireworks"),
        initializeTimeline() {
            s.set(".e.packempty", {
                x: -250,
                duration: .25,
                scale: .5
            }), s.fromTo(".e.fireworks", {
                x: 500,
                opacity: 0
            }, {
                opacity: 1,
                x: 150,
                duration: .25
            }), this.timeline.to(".e.fireworks", {
                scale: .1,
                x: -250,
                opacity: 0,
                ease: "back.in(3)"
            })
        }
    }),
    JO = lV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("packfull", "packempty"),
        initializeTimeline() {
            s.set(".e.packfull", {
                hidden: !0
            }), this.timeline.add(a.squashTransition("packempty", "packfull", .25))
        }
    }),
    AV = E.extend({
        imageManifest: {
            knot: new URL("main/pp7/everyday/assets/b65a8e9e.png", self.location).href,
            cape: new URL("main/pp7/everyday/assets/6ba26c4b.png", self.location).href,
            juice: new URL("main/pp7/everyday/assets/744503b9.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/016980aa.png", self.location).href,
            runLeft: new URL("main/pp7/everyday/assets/1eb9e2ba.png", self.location).href,
            runRight: new URL("main/pp7/everyday/assets/6202aba2.png", self.location).href
        }
    }),
    ZO = AV.extend({
        elements: a.elementsFromImages("cape", ["knot", null, [200, 250]]),
        onLoadComplete() {
            s.set(".e.knot", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.knot", {
                opacity: 1,
                rotate: 360
            })
        }
    }),
    _O = AV.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("runRight"),
        onLoadComplete() {
            s.set(".e.runRight", {
                x: -200
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.runRight", {
                x: 1e3
            })
        }
    }),
    $O = AV.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("runLeft"),
        onLoadComplete() {
            s.set(".e.runLeft", {
                x: 200
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.runLeft", {
                x: -1e3
            })
        }
    }),
    eI = AV.extend({
        elements: a.elementsFromImages("juice")
    }),
    tI = AV.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("run"),
        onLoadComplete() {
            s.set(".e.run", {
                x: -200
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.run", {
                x: 1e3
            })
        }
    }),
    v0 = E.extend({
        imageManifest: {
            cat: new URL("main/pp7/everyday/assets/1913668d.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/d657a0eb.png", self.location).href,
            broken: new URL("main/pp7/everyday/assets/9d9ac783.png", self.location).href,
            macaroni: new URL("main/pp7/everyday/assets/e454d112.png", self.location).href
        }
    }),
    nI = v0.extend({
        elements: a.elementsFromImages("macaroni", "broken"),
        onLoadComplete() {
            s.set(".e.broken", {
                opacity: 1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.broken", {
                opacity: 0
            })
        }
    }),
    iI = v0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("glue"),
        initializeTimeline() {
            this.timeline.to(".e.glue", {
                rotate: 180,
                duration: 1
            }).to(".e.glue", {
                scaleX: .6,
                scaleY: 1.2,
                duration: .5,
                ease: "back.in(2)"
            }).to(".e.glue", {
                scale: 1,
                duration: .5
            }).to(".e.glue", {
                scaleX: .6,
                scaleY: 1.2,
                duration: .5,
                ease: "back.in(2)"
            }).to(".e.glue", {
                scale: 1,
                duration: .5
            }).to(".e.glue", {
                scaleX: .6,
                scaleY: 1.2,
                duration: .5,
                ease: "back.in(2)"
            }).to(".e.glue", {
                scale: 1,
                duration: .5
            })
        }
    }),
    sI = v0.extend({
        elements: a.elementsFromImages(["cat", "cat0"], ["cat", "cat1"]),
        onLoadComplete() {
            s.set(".e.cat0", {
                x: -25,
                filter: "blur(4px)",
                autoRound: !1
            }), s.set(".e.cat1", {
                x: 25,
                filter: "blur(4px)",
                autoRound: !1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cat0", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.cat1", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }, "<").to(".e.cat0", {
                x: -25,
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.cat1", {
                x: 25,
                filter: "blur(4px)",
                autoRound: !1
            }, "<").to(".e.cat0", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.cat1", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }, "<").to(".e.cat0", {
                x: -10,
                filter: "blur(2px)",
                autoRound: !1
            }).to(".e.cat1", {
                x: 10,
                filter: "blur(2px)",
                autoRound: !1
            }, "<").to(".e.cat0", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.cat1", {
                x: 0,
                filter: "blur(0px)",
                autoRound: !1
            }, "<")
        }
    }),
    w0 = E.extend({
        imageManifest: {
            lefttied: new URL("main/pp7/everyday/assets/df5a5a5c.png", self.location).href,
            leftuntied: new URL("main/pp7/everyday/assets/7e1bd230.png", self.location).href,
            righttied: new URL("main/pp7/everyday/assets/3affd212.png", self.location).href,
            rightuntied: new URL("main/pp7/everyday/assets/ea311eb2.png", self.location).href
        }
    }),
    oI = w0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("leftuntied", "rightuntied"),
        initializeTimeline() {
            this.timeline.fromTo(".e.leftuntied", {
                x: 250,
                rotate: -20,
                scale: .5
            }, {
                rotate: 0,
                ease: "back(3)"
            }), this.timeline.fromTo(".e.rightuntied", {
                x: -250,
                rotate: 20,
                scale: .5
            }, {
                rotate: 0,
                ease: "back(3)"
            })
        }
    }),
    aI = w0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("leftuntied", "rightuntied", "righttied"),
        initializeTimeline() {
            s.set(".e.leftuntied,.e.rightuntied,.e.lefttied,.e.righttied", {
                scale: .5,
                x: -250
            }), s.set(".e.leftuntied", {
                x: 250
            }), s.set(".e.righttied", {
                hidden: !0
            }), s.to(".e.rightuntied, .e.righttied", {
                scale: 1,
                x: 0
            }), s.to(".e.leftuntied", {
                scale: 1,
                x: 1e3
            }), this.timeline.to(".rightuntied", {
                rotate: 4,
                yoyo: !0,
                repeat: 6
            })
        },
        onProgress(t) {
            t >= 99 && a.squashTransition("rightuntied", "righttied", .25)
        }
    }),
    rI = w0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("leftuntied", "lefttied", "righttied"),
        initializeTimeline() {
            s.set(".e.lefttied", {
                hidden: !0
            }), s.set(".e.righttied", {
                scale: 1,
                x: 0
            }), s.set(".e.leftuntied", {
                x: 1e3
            }), s.to(".e.leftuntied", {
                x: 0
            }), s.to(".e.righttied", {
                x: -1e3
            }), this.timeline.to(".leftuntied", {
                rotate: 4,
                yoyo: !0,
                repeat: 6
            })
        },
        onProgress(t) {
            t >= 99 && a.squashTransition("leftuntied", "lefttied", .25)
        }
    }),
    VI = E.extend({
        imageManifest: {
            swing0: new URL("main/pp7/everyday/assets/70fe6c0d.png", self.location).href,
            swing1: new URL("main/pp7/everyday/assets/59eb57b2.png", self.location).href,
            swing2: new URL("main/pp7/everyday/assets/3ba35bb3.png", self.location).href,
            swing3: new URL("main/pp7/everyday/assets/70b380b0.png", self.location).href,
            swing4: new URL("main/pp7/everyday/assets/1bb7293c.png", self.location).href,
            swing5: new URL("main/pp7/everyday/assets/57ab8bce.png", self.location).href
        }
    }),
    lI = yo.extend({
        imageManifest: {
            swingset: new URL("main/pp7/everyday/assets/1996996c.png", self.location).href
        }
    }),
    AI = h0.extend({
        stepDuration: .25,
        imageManifest: {
            swing1: new URL("main/pp7/everyday/assets/59eb57b2.png", self.location).href,
            swing0: new URL("main/pp7/everyday/assets/70fe6c0d.png", self.location).href
        }
    }),
    cI = h0.extend({
        stepDuration: .25,
        imageManifest: {
            swing3: new URL("main/pp7/everyday/assets/70b380b0.png", self.location).href,
            swing2: new URL("main/pp7/everyday/assets/3ba35bb3.png", self.location).href
        }
    }),
    dI = VI.extend({
        elements: [{
            class: "swing-container",
            type: "container",
            children: a.elementsFromImages("swing2", "swing3", "swing4", "swing5")
        }],
        onLoadComplete() {
            s.set(".e.swing2", {
                opacity: 0
            }), s.set(".e.swing4", {
                opacity: 0
            }), s.set(".e.swing5", {
                x: -300,
                y: 100,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.swing3", {
                opacity: 0
            }).to(".e.swing2", {
                opacity: 1
            }, "<").to(".e.swing2", {
                opacity: 0
            }).to(".e.swing4", {
                opacity: 1,
                duration: .25
            }).to(".e.swing5", {
                x: 0,
                y: 0,
                opacity: 1,
                duration: .25
            }, "<")
        },
        onStartProgress() {
            a.startHoldShake("swing-container")
        },
        onStopProgress() {
            a.stopHoldShake("swing-container")
        }
    }),
    cV = E.extend({
        imageManifest: {
            awards: new URL("main/pp7/everyday/assets/bc266dff.png", self.location).href,
            cartwheelleft: new URL("main/pp7/everyday/assets/9ec559d0.png", self.location).href,
            cartwheelright: new URL("main/pp7/everyday/assets/471a56a7.png", self.location).href,
            clearpath: new URL("main/pp7/everyday/assets/40122e9f.png", self.location).href,
            prep: new URL("main/pp7/everyday/assets/c57c24f2.png", self.location).href
        }
    }),
    pI = cV.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("clearpath"),
        onLoadComplete() {
            s.set(".e.clearpath", {
                x: -700,
                scale: 1.25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.clearpath", {
                x: 400,
                ease: "power3.out"
            })
        }
    }),
    hI = cV.extend({
        elements: a.elementsFromImages("prep"),
        onLoadComplete() {
            s.set(".e.prep", {
                x: 400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.prep", {
                x: -200
            })
        }
    }),
    uI = cV.extend({
        elements: a.elementsFromImages("cartwheelright"),
        onLoadComplete() {
            s.set(".e.cartwheelright", {
                x: -100,
                rotation: 180
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cartwheelright", {
                x: 100,
                rotation: 540
            })
        }
    }),
    mI = cV.extend({
        elements: a.elementsFromImages("cartwheelleft"),
        onLoadComplete() {
            s.set(".e.cartwheelleft", {
                x: 100,
                rotation: 180
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cartwheelleft", {
                x: 0,
                rotation: -180
            })
        }
    }),
    fI = cV.extend({
        elements: a.elementsFromImages("awards")
    }),
    QA = E.extend({
        imageManifest: {
            lantern: new URL("main/pp7/everyday/assets/85f2264b.png", self.location).href,
            lit: new URL("main/pp7/everyday/assets/56cd2067.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/089bd45c.png", self.location).href,
            scissors: new URL("main/pp7/everyday/assets/6cba75fb.png", self.location).href
        }
    }),
    qI = QA.extend({
        elements: a.elementsFromImages(["paper", "paper1"], ["paper", "paper2"], ["paper", "paper3"], ["paper", "paper4"]),
        onLoadComplete() {
            s.set(".e.paper2", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: 20,
                x: -20,
                y: 80
            }), s.set(".e.paper3", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: -80,
                x: 60,
                y: 100
            }), s.set(".e.paper4", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: -100,
                x: 0,
                y: -80
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper2", {
                rotate: 30,
                x: -30,
                y: 90
            }).to(".e.paper2", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper3", {
                rotate: -90,
                x: 70,
                y: 110
            }).to(".e.paper3", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper4", {
                rotate: -110,
                x: 10,
                y: -90
            }).to(".e.paper4", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper1", {
                rotate: 10,
                x: -15,
                y: 0,
                clipPath: "polygon((6% 17%, 71% 4%, 84% 84%, 21% 95%)"
            }).to([".e.paper2", ".e.paper3", ".e.paper4"], {
                opacity: 0
            }).to(".e.paper1", {
                scale: .8,
                y: 350,
                x: 0
            })
        }
    }),
    gI = QA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["scissors", "scissorBack"], "paper", ["scissors", "scissorFront"]),
        onLoadComplete() {
            s.set(".e.paper", {
                scale: .8,
                y: 350,
                rotate: 10
            }), s.set(".e.scissorFront", {
                scale: .7,
                x: -120,
                y: -350,
                clip: "rect(0px, 501px, 1000px, 0px)"
            }), s.set(".e.scissorBack", {
                scale: .7,
                x: -120,
                y: -350,
                clip: "rect(0px, 1000px, 1000px, 499px)"
            })
        },
        onDiscreteProgress(t) {
            const e = [-30, 30, 90, 120],
                n = Math.round(t / 100 * 4) - 1,
                i = e[n],
                o = s.timeline();
            o.timeScale(2).to([".e.scissorFront", ".e.scissorBack"], {
                y: -400,
                scaleY: .75
            }).to([".e.scissorFront", ".e.scissorBack"], {
                y: 80,
                scaleY: .71
            }).to([".e.paper"], {
                y: 400
            }).to([".e.paper"], {
                y: 350
            }), o.to([".e.scissorFront", ".e.scissorBack"], {
                y: -400,
                x: i
            }), t === 100 && o.to([".e.scissorFront", ".e.scissorBack"], {
                y: -1200,
                x: 1200,
                rotate: 500
            })
        }
    }),
    yI = QA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("lit", "lantern"),
        initializeTimeline() {
            this.timeline.to(".e.lantern", {
                opacity: 0
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 0%, rgba(0,212,255,0) 75%)"
            })
        }
    }),
    bI = QA.extend({
        elements: a.elementsFromImages("lit"),
        onLoadComplete() {
            s.set(".e.lit", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 0%, rgba(0,212,255,0) 75%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.lit", {
                background: "radial-gradient(circle, rgba(85,255,58,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(58,105,255,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(153,58,255,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(255,58,231,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(255,58,65,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(255,146,58,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(85,255,58,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                background: "radial-gradient(circle, rgba(58,105,255,1) 0%, rgba(0,212,255,0) 75%)"
            }).to(".e.lit", {
                scale: 1.4,
                duration: 10
            }, "-=5")
        }
    }),
    zA = E.extend({
        imageManifest: {
            boot: new URL("main/pp7/everyday/assets/5756cbb9.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/063169eb.png", self.location).href,
            lantern: new URL("main/pp7/everyday/assets/85f2264b.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/089bd45c.png", self.location).href,
            scissors: new URL("main/pp7/everyday/assets/6cba75fb.png", self.location).href,
            stomp: new URL("main/pp7/everyday/assets/98151f87.png", self.location).href
        }
    }),
    vI = zA.extend({
        elements: a.elementsFromImages(["paper", "paper1"], ["paper", "paper2"], ["paper", "paper3"], ["paper", "paper4"]),
        onLoadComplete() {
            s.set(".e.paper2", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: 20,
                x: -20,
                y: 80
            }), s.set(".e.paper3", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: -80,
                x: 60,
                y: 100
            }), s.set(".e.paper4", {
                height: 1e3,
                width: 1e3,
                clipPath: "polygon(6% 17%, 71% 4%, 84% 84%, 21% 95%)",
                rotate: -100,
                x: 0,
                y: -80
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper2", {
                rotate: 30,
                x: -30,
                y: 90
            }).to(".e.paper2", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper3", {
                rotate: -90,
                x: 70,
                y: 110
            }).to(".e.paper3", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper4", {
                rotate: -110,
                x: 10,
                y: -90
            }).to(".e.paper4", {
                rotate: 10,
                x: 0,
                y: 0
            }).to(".e.paper1", {
                rotate: 10,
                x: -15,
                y: 0,
                clipPath: "polygon((6% 17%, 71% 4%, 84% 84%, 21% 95%)"
            }).to([".e.paper2", ".e.paper3", ".e.paper4"], {
                opacity: 0
            }).to(".e.paper1", {
                scale: .8,
                y: 350,
                x: 0
            })
        }
    }),
    wI = zA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["scissors", "scissorBack"], "paper", ["scissors", "scissorFront"]),
        onLoadComplete() {
            s.set(".e.paper", {
                scale: .8,
                y: 350,
                rotate: 10
            }), s.set(".e.scissorFront", {
                scale: .7,
                x: -120,
                y: -350,
                clip: "rect(0px, 501px, 1000px, 0px)"
            }), s.set(".e.scissorBack", {
                scale: .7,
                x: -120,
                y: -350,
                clip: "rect(0px, 1000px, 1000px, 499px)"
            })
        },
        onDiscreteProgress(t) {
            const e = [-30, 30, 90, 120],
                n = Math.round(t / 100 * 4) - 1,
                i = e[n],
                o = s.timeline();
            o.timeScale(2).to([".e.scissorFront", ".e.scissorBack"], {
                y: -400,
                scaleY: .75
            }).to([".e.scissorFront", ".e.scissorBack"], {
                y: 80,
                scaleY: .71
            }).to([".e.paper"], {
                y: 400
            }).to([".e.paper"], {
                y: 350
            }), o.to([".e.scissorFront", ".e.scissorBack"], {
                y: -400,
                x: i
            }), t === 100 && o.to([".e.scissorFront", ".e.scissorBack"], {
                y: -1200,
                x: 1200,
                rotate: 500
            })
        }
    }),
    xI = zA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("fire", "lantern"),
        onLoadComplete() {
            s.set(".e.fire", {
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.lantern", {
                scale: 1.3,
                duration: 1
            }).to(".e.lantern", {
                scale: 1
            }).to(".e.lantern", {
                opacity: 0
            }).to(".e.fire", {
                scale: 1.3
            }).to(".e.fire", {
                scale: 1.1
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 35%, rgba(0,212,255,0) 75%)"
            }), a.startShake("fire", 5, 3)
        }
    }),
    kI = zA.extend({
        elements: a.elementsFromImages("fire", "boot"),
        onLoadComplete() {
            s.set(".e.boot", {
                opacity: 0,
                y: -500
            }), s.set(".e.fire", {
                scale: 1.1,
                background: "radial-gradient(circle, rgba(255,252,58,1) 35%, rgba(0,212,255,0) 75%)"
            }), a.startShake("fire", 5, 3)
        },
        initializeTimeline() {
            this.timeline.to(".e.boot", {
                opacity: 1
            }).to(".e.boot", {
                y: -600,
                scaleY: 1.2
            }).to(".e.boot", {
                scaleY: 1,
                y: 0
            }).to(".e.boot", {
                scaleY: 1.1,
                y: -300
            }).to(".e.boot", {
                scaleY: 1,
                y: 0
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 25%, rgba(0,212,255,0) 75%)",
                scale: .9
            }).to(".e.boot", {
                y: -35,
                rotateY: 180
            }).to(".e.boot", {
                rotateY: -0
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 20%, rgba(0,212,255,0) 75%)",
                scale: .8
            }).to(".e.boot", {
                y: -600,
                scaleY: 1.2
            }).to(".e.boot", {
                y: -45,
                scaleY: 1
            }).to(".e.boot", {
                y: -350,
                scaleY: 1.1
            }).to(".e.boot", {
                y: -45,
                scaleY: 1
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 15%, rgba(0,212,255,0) 75%)",
                scale: .7
            }).to(".e.boot", {
                y: -600,
                scaleY: 1.2
            }).to(".e.boot", {
                y: -100,
                scaleY: 1
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 10%, rgba(0,212,255,0) 75%)",
                scale: .4
            }).to(".e.boot", {
                y: -120,
                rotateY: 180
            }).to(".e.boot", {
                rotateY: 0
            }).to(".e.fire", {
                background: "radial-gradient(circle, rgba(255,252,58,1) 0%, rgba(0,212,255,0) 75%)",
                opacity: 0
            })
        }
    }),
    dV = E.extend({
        imageManifest: {
            juice: new URL("main/pp7/everyday/assets/c0a12352.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "juice",
                images: {
                    strawOnly: [1340, 10, 241, 460, 311, 455],
                    puncture: [10, 10, 77, 20, 545, 389],
                    strawPuncture: [97, 10, 126, 142, 725, 404],
                    juiceBox: [10, 371, 636, 516, 482, 180],
                    shake: [466, 10, 476, 351, 378, 241],
                    appleJuice: [233, 10, 223, 295, 411, 542],
                    juiceFlavors: [952, 10, 378, 352, 294, 234],
                    drink: [656, 480, 788, 566, 212, 114]
                }
            }
        }
    }),
    CI = dV.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["juiceFlavors", "appleJuice"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.appleJuice", {
                x: -150,
                y: 25,
                duration: .5
            }).to(".e.appleJuice", {
                x: 0,
                y: 0,
                duration: .5
            }).fillTime(1).to(".e.appleJuice", {
                x: 30,
                y: -500,
                rotate: 10
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    RI = dV.extend({
        elements: a.elementsFromSprite("sprite", ["shake"]),
        onLoadComplete() {
            s.set(".e.shake", {
                transformOrigin: "bottom left"
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 10,
                ease: "none"
            }).to(".e.shake", {
                rotate: 10
            }).to(".e.shake", {
                rotate: 0
            }).to(".e.shake", {
                rotate: -10
            }).to(".e.shake", {
                rotate: 0
            });
            this.timeline.add(t)
        }
    }),
    DI = dV.extend({
        stepDuration: 1,
        elements: a.elementsFromSprite("sprite", ["juiceBox", ["puncture", "puncture0"],
            ["puncture", "puncture1", [605, 409]],
            ["puncture", "puncture2", [635, 640]], "strawOnly"
        ]),
        onLoadComplete() {
            s.set(".e.strawOnly", {
                x: -40,
                y: -280
            }), s.set(".e.puncture0, .e.puncture1, .e.puncture2", {
                hidden: !0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.strawOnly", {
                y: -137,
                duration: 1,
                ease: "power2.in"
            }).set(".e.puncture1", {
                hidden: !1
            }).to(".e.strawOnly", {
                x: -60,
                y: -310,
                duration: 1,
                ease: "power2.in"
            }).to(".e.strawOnly", {
                y: -197,
                duration: 1,
                ease: "power2.in"
            }).set(".e.puncture0", {
                hidden: !1
            }).to(".e.strawOnly", {
                x: 190,
                y: -240,
                duration: 1,
                ease: "power2.in"
            }).to(".e.strawOnly", {
                y: -110,
                duration: .7,
                ease: "power2.in"
            }).set(".e.puncture2", {
                hidden: !1
            }).to(".e.strawOnly", {
                y: -240,
                duration: .5,
                ease: "power2.in"
            });
            this.timeline.add(t)
        }
    }),
    SI = dV.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["strawOnly", "juiceBox", ["puncture", "puncture0"],
            ["puncture", "puncture1", [605, 409]],
            ["puncture", "puncture2", [635, 640]], "strawPuncture"
        ]),
        onLoadComplete() {
            s.set(".e.strawOnly", {
                x: 190,
                y: -240
            }), s.set(".e.strawPuncture", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.strawOnly", {
                rotate: 16,
                duration: .2
            }, 0).to(".e.strawOnly", {
                x: 11,
                y: 120,
                duration: 1
            }, 0).set(".e.strawPuncture", {
                hidden: !1
            }, .83)
        }
    }),
    TI = dV.extend({
        elements: a.elementsFromSprite("sprite", ["drink"]),
        onStartProgress() {
            a.startHoldShake("drink")
        },
        onStopProgress() {
            a.stopHoldShake("drink")
        }
    }),
    pV = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/fd4a2667.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    handle: [10, 626, 614, 368, 289, 18],
                    wampus: [1457, 10, 502, 499, 345, 481],
                    ride: [725, 10, 722, 574, 226, 184],
                    relax: [725, 594, 847, 468, 380, 60],
                    hitch: [10, 10, 705, 606, 192, 198]
                }
            }
        }
    }),
    EI = pV.extend({
        elements: a.elementsFromSprite("sprite", ["wampus", "handle"]),
        onLoadComplete() {
            s.set(".e.handle", {
                rotate: -70,
                transformOrigin: "bottom left"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handle", {
                rotate: 30
            })
        }
    }),
    LI = pV.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["ride"]),
        onLoadComplete() {
            s.set(".e.ride", {
                x: 200
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.ride", {
                x: 0,
                ease: "back.in(3)"
            })
        }
    }),
    BI = pV.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["ride"]),
        initializeTimeline() {
            this.timeline.to(".e.ride", {
                x: -200,
                ease: "back.in(3)"
            })
        }
    }),
    MI = pV.extend({
        elements: a.elementsFromSprite("sprite", ["hitch"]),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("hitch")).add(a.squashOnce("hitch"))
        }
    }),
    OI = pV.extend({
        elements: a.elementsFromSprite("sprite", ["relax"])
    }),
    hV = E.extend({
        imageManifest: {
            closet: new URL("main/pp7/everyday/assets/f04688f7.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/a091c42d.png", self.location).href,
            heels: new URL("main/pp7/everyday/assets/245e960b.png", self.location).href,
            jackets: new URL("main/pp7/everyday/assets/a0d4fa1a.png", self.location).href,
            outfit: new URL("main/pp7/everyday/assets/4a0fba18.png", self.location).href,
            toss: new URL("main/pp7/everyday/assets/8865874d.png", self.location).href
        }
    }),
    II = hV.extend({
        stepDuration: 1.25,
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "closet",
                type: "img",
                key: "closet"
            }, {
                class: "door",
                type: "img",
                key: "door"
            }]
        }],
        onDiscreteProgress() {
            s.timeline().to(".e.door", {
                x: -250,
                ease: "back.out",
                duration: .5
            }).to(".closet-container", {
                scale: 3,
                opacity: 0,
                ease: "powerq.inOut",
                duration: .5,
                x: -200
            }, .55)
        }
    }),
    PI = hV.extend({
        stepDuration: 1.5,
        elements: a.elementsFromImages("jackets"),
        initializeTimeline() {
            s.timeline().set(".e.jackets", {
                x: 750,
                opacity: 0,
                scale: .8
            }).to(".e.jackets", {
                x: 250,
                opacity: 1,
                scale: 1
            }), this.timeline.to(".e.jackets", {
                x: -250
            }).to(".e.jackets", {
                rotation: 5,
                yoyo: !0,
                duration: .125
            }).to(".e.jackets", {
                rotation: -5,
                yoyo: !0,
                duration: .125
            }).to(".e.jackets", {
                rotation: 0,
                yoyo: !0,
                duration: .125
            })
        }
    }),
    UI = hV.extend({
        stepDuration: 1,
        elements: a.elementsFromImages(["heels", "heels1"], ["heels", "heels2"]),
        onLoadComplete() {
            s.set([".e.heels1", ".e.heels2"], {
                y: -500,
                clipPath: "inset(100% 0 0 0)"
            }), s.set(".e.heels1", {
                x: -250,
                scale: .75
            }), s.set(".e.heels2", {
                x: 250,
                scaleX: -.75,
                scaleY: .75
            })
        },
        onDiscreteProgress(t) {
            t <= 50 ? s.timeline().to(".e.heels1", {
                y: 0,
                clipPath: "inset(0% 0 0 0)",
                ease: "power4.out"
            }).to(".e.heels1", {
                filter: "blur(25px)",
                y: "+=50",
                duration: .1
            }, ">-0.25").to(".e.heels1", {
                filter: "blur(0px)",
                y: "-=50",
                duration: .1
            }) : s.timeline().to(".e.heels2", {
                y: 0,
                clipPath: "inset(0% 0 0 0)",
                ease: "power4.out"
            }).to(".e.heels2", {
                filter: "blur(25px)",
                y: "+=50",
                duration: .1
            }, ">-0.25").to(".e.heels2", {
                filter: "blur(0px)",
                y: "-=50",
                duration: .1
            })
        }
    }),
    FI = hV.extend({
        elements: a.elementsFromImages("outfit"),
        onStartProgress() {
            a.startHoldShake("outfit")
        },
        onStopProgress() {
            a.stopHoldShake("outfit")
        }
    }),
    jI = hV.extend({
        stepDuration: .25,
        lastStepDuration: 1.5,
        elements: a.elementsFromImages("outfit", "toss"),
        onLoadComplete() {
            s.set(".e.toss", {
                hidden: !0
            })
        },
        onDiscreteProgress(t) {
            t <= 25 ? s.timeline().to(".e.outfit", {
                x: -50,
                scaleX: .9,
                duration: .125
            }).to(".e.outfit", {
                x: 0,
                scaleX: 1,
                duration: .125
            }) : t <= 50 ? s.timeline().to(".e.outfit", {
                x: 50,
                scaleX: .9,
                duration: .125
            }).to(".e.outfit", {
                x: 0,
                scaleX: 1,
                duration: .125
            }) : t <= 75 ? s.timeline().to(".e.outfit", {
                y: 50,
                scaleY: .9,
                duration: .125
            }).to(".e.outfit", {
                y: 0,
                scaleY: 1,
                duration: .125
            }) : t <= 100 && a.squashTransition("outfit", "toss", .5)
        }
    }),
    HA = E.extend({
        imageManifest: {
            fish: new URL("main/pp7/everyday/assets/73b042c5.png", self.location).href,
            flakes: new URL("main/pp7/everyday/assets/6a235fca.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "fish",
                images: {
                    food: [614, 646, 482, 480, 46, 455],
                    bowlWater: [10, 646, 594, 497, 415, 213],
                    towel: [10, 1153, 285, 463, 502, 351],
                    hand: [725, 10, 444, 471, 266, 288],
                    flakesExtra: [305, 1315, 238, 73, 493, 386],
                    net: [614, 1136, 424, 476, 188, 412],
                    fish: [305, 1153, 210, 152, 646, 394],
                    bowlFull: [10, 10, 705, 626, 341, 158]
                }
            }
        }
    }),
    x0 = HA.extend({
        stepDuration: .25,
        elements: [...a.elementsFromSprite("sprite", ["bowlFull", "fish", "food"]), {
            class: "flake-container",
            type: "container",
            children: a.elementsFromImages("flakes")
        }, ...a.elementsFromSprite("sprite", ["bowlWater", "hand"])],
        onLoadComplete() {
            s.set(".e.hand", {
                y: -550,
                x: 370,
                rotate: 40
            }), s.set(".e.food", {
                y: -100,
                x: 70
            }), s.set(".e.flakes", {
                visibility: "hidden"
            }), a.startShake("fish", 0, 3, .5)
        },
        onDiscreteProgress(t) {
            s.timeline().to(".e.hand", {
                y: -600,
                x: 350
            }).to(".e.food", {
                y: -150,
                x: 90
            }, "<").to(".e.hand", {
                y: -500,
                x: 350
            }).to(".e.food", {
                y: -50,
                x: 90
            }, "<").to(".e.hand", {
                y: -600,
                x: 350
            }).to(".e.food", {
                y: -150,
                x: 90
            }, "<"), t < 50 && a.addParticleEmitter({
                conatiner: "flakes-container",
                image: "flakes",
                numberOfParticles: 5,
                settings: {
                    boundaries: {
                        left: 310,
                        right: 400,
                        top: 30,
                        bottom: 150
                    },
                    minSize: 300,
                    maxSize: 500
                }
            })
        }
    }),
    QI = HA.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["bowlFull", "fish", "hand", "bowlWater"]),
        onLoadComplete() {
            s.set(".e.hand", {
                visibility: "hidden",
                y: -400
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.hand", {
                visibility: "visible"
            }).to(".e.hand", {
                y: 50
            }, 0).to(".e.hand", {
                y: 20
            }, 1).to(".e.hand", {
                x: -20,
                y: 50
            }, 2)
        }
    }),
    zI = HA.extend({
        elements: a.elementsFromSprite("sprite", ["towel", "hand"]),
        onLoadComplete() {
            s.set(".e.hand", {
                y: -100
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.hand", {
                y: 0
            }).to(".e.towel", {
                y: -50
            }, 1).to(".e.hand", {
                y: -50
            }, 1).to(".e.towel", {
                y: 0
            }, 2).to(".e.hand", {
                y: 0
            }, 2).to(".e.towel", {
                y: -50
            }, 3).to(".e.hand", {
                y: -50
            }, 3).to(".e.towel", {
                y: 0
            }, 4).to(".e.hand", {
                y: 0
            }, 4)
        }
    }),
    HI = x0,
    NI = x0.extend({
        elements: [...a.elementsFromSprite("sprite", ["bowlFull", "fish", "food", "flakesExtra"]), {
            class: "flake-container",
            type: "container",
            children: a.elementsFromImages("flakes")
        }, ...a.elementsFromSprite("sprite", ["bowlWater", "hand"])],
        initializeTimeline() {
            s.set(".e.flakesExtra", {
                visibility: "hidden",
                x: 50,
                y: -150
            }), this.timeline.fillTime(3).set(".e.flakesExtra", {
                visibility: "visible"
            }).to(".e.flakesExtra", {
                x: 0,
                y: 0
            })
        }
    }),
    GI = HA.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["bowlFull", "fish", "flakesExtra", "net", "bowlWater"]),
        onLoadComplete() {
            s.set(".e.net", {
                y: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.net", {
                y: 0
            }).set(".e.flakesExtra", {
                hidden: !0
            }).to(".e.net", {
                y: -150
            })
        }
    }),
    NA = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/bd6ee09c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    paper0: [0, 0, 484, 516],
                    paper1: [1, 516, 596, 636],
                    painting: [484, 0, 378, 357],
                    devil: [0, 1152, 432, 651],
                    cloud0: [484, 357, 113, 96],
                    cloud1: [862, 0, 395, 320],
                    fridge: [597, 357, 602, 896],
                    gothic: [432, 1253, 292, 379],
                    muse0: [862, 1253, 177, 154],
                    muse1: [1039, 1253, 160, 154],
                    muse2: [862, 1407, 177, 153],
                    muse3: [1039, 1407, 160, 153]
                }
            }
        }
    }),
    XI = NA.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", [
            ["paper0", "paper0", [317, 333]],
            ["paper0", "paper1", [267, 283]],
            ["paper0", "paper2", [217, 233]],
            ["paper0", "paper3", [167, 183]]
        ]),
        onLoadComplete() {
            s.set(".e.paper1", {
                x: 300,
                y: 50,
                rotate: -80,
                opacity: 0
            }), s.set(".e.paper2", {
                x: 300,
                y: 50,
                rotate: 140,
                opacity: 0
            }), s.set(".e.paper3", {
                x: 300,
                y: 50,
                rotate: -30,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper1", {
                x: 0,
                y: 0,
                rotate: 0,
                opacity: 1
            }).to(".e.paper2", {
                x: 0,
                y: 0,
                rotate: 0,
                opacity: 1
            }).to(".e.paper3", {
                x: 0,
                y: 0,
                rotate: 0,
                opacity: 1
            })
        }
    }),
    YI = NA.extend({
        elements: a.elementsFromSprite("sprite", [
            ["devil", null, [300, 425]],
            ["cloud0", null, [395, 440]],
            ["cloud1", null, [95, 130]],
            ["muse0", null, [176, 247]],
            ["muse1", null, [176, 255]],
            ["muse2", null, [176, 247]],
            ["muse3", null, [176, 255]]
        ]),
        onLoadComplete() {
            s.set(".e.muse0, .e.muse1, .e.muse2, .e.muse3", {
                opacity: 0
            }), s.fromTo(".e.cloud0", {
                x: 50,
                y: 50,
                opacity: 0
            }, {
                x: 0,
                y: 0,
                opacity: 1,
                duration: .35
            }), s.fromTo(".e.cloud1", {
                x: 75,
                y: 75,
                opacity: 0
            }, {
                x: 0,
                y: 0,
                opacity: 1,
                delay: .15,
                duration: .35
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.muse0", {
                opacity: 1
            }).to(".e.muse0", {
                opacity: 0
            }).to(".e.muse1", {
                opacity: 1
            }, "-=0.25").to(".e.muse1", {
                opacity: 0
            }).to(".e.muse2", {
                opacity: 1
            }, "-=0.25").to(".e.muse2", {
                opacity: 0
            }).to(".e.muse3", {
                opacity: 1
            }, "-=0.25").to(".e.muse3", {
                opacity: 0
            }).to(".e.muse0", {
                opacity: 1
            }, "-=0.25").to(".e.muse0", {
                opacity: 0
            }).to(".e.muse1", {
                opacity: 1
            }, "-=0.25").to(".e.muse1", {
                opacity: 0
            }).to(".e.muse2", {
                opacity: 1
            }, "-=0.25")
        }
    }),
    KI = NA.extend({
        elements: a.elementsFromSprite("sprite", [
            ["paper1", null, [182, 202]],
            ["painting", null, [321.5, 311]]
        ]),
        onLoadComplete() {
            s.set(".e.painting", {
                clipPath: "inset(0% 100% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.painting", {
                clipPath: "inset(0% 0% 0% 0%)"
            })
        }
    }),
    WI = NA.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", [
            ["fridge", null, [52, 199]],
            ["gothic", null, [480, 240]]
        ]),
        onLoadComplete() {
            s.set(".e.gothic", {
                x: 360,
                y: -80,
                scale: 1.5,
                rotate: 10
            }), s.set(".e.fridge", {
                scale: .6
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fridge", {
                scale: 1
            }).to(".e.gothic", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0
            }, 0)
        }
    });
s.registerPlugin(Cn);
const uV = E.extend({
        imageManifest: {
            climaxA: new URL("main/pp7/everyday/assets/dd294f94.png", self.location).href,
            climaxB: new URL("main/pp7/everyday/assets/2b60df80.png", self.location).href,
            directorTalkback: new URL("main/pp7/everyday/assets/326f09f6.png", self.location).href,
            firstActA: new URL("main/pp7/everyday/assets/8855332c.png", self.location).href,
            firstActB: new URL("main/pp7/everyday/assets/25305545.png", self.location).href,
            readLines: new URL("main/pp7/everyday/assets/38f0009d.png", self.location).href,
            readLinesSpeech: new URL("main/pp7/everyday/assets/bfac6ac7.png", self.location).href,
            stage: new URL("main/pp7/everyday/assets/5b4e87d1.png", self.location).href
        }
    }),
    JI = uV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["stage", null, [0, 750]]),
        initializeTimeline() {
            const t = s.timeline().to(".e.stage", {
                x: -250,
                ease: "power4.in"
            }).to(".e.stage", {
                x: -500,
                ease: "power4.in"
            }).to(".e.stage", {
                x: -750,
                ease: "power4.in"
            });
            this.timeline.add(t)
        }
    }),
    ZI = uV.extend({
        elements: a.elementsFromImages("readLines", "readLinesSpeech"),
        onLoadComplete() {
            s.set(".e.readLinesSpeech", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 3
            }).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 4).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 5).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 8).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 10).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 12).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 13);
            this.timeline.add(t)
        }
    }),
    _I = uV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("firstActA", "firstActB"),
        onLoadComplete() {
            s.set(".e.firstActB", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            t === 50 ? (s.set(".e.firstActA", {
                visibility: "hidden"
            }), s.set(".e.firstActB", {
                visibility: "visible"
            })) : (s.set(".e.firstActA", {
                visibility: "visible"
            }), s.set(".e.firstActB", {
                visibility: "hidden"
            }))
        }
    }),
    $I = uV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("climaxA", "climaxB"),
        onLoadComplete() {
            s.set(".e.climaxB", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            t === 40 || t === 80 ? (s.set(".e.climaxA", {
                visibility: "visible"
            }), s.set(".e.climaxB", {
                visibility: "hidden"
            })) : (s.set(".e.climaxA", {
                visibility: "hidden"
            }), s.set(".e.climaxB", {
                visibility: "visible"
            }))
        }
    }),
    eP = uV.extend({
        elements: a.elementsFromImages("directorTalkback", "readLinesSpeech"),
        onLoadComplete() {
            s.set(".e.readLinesSpeech", {
                scaleX: -1,
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 2
            }).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 4).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 5).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 8).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 10).set(".e.readLinesSpeech", {
                visibility: "visible"
            }, 12).set(".e.readLinesSpeech", {
                visibility: "hidden"
            }, 13);
            this.timeline.add(t)
        }
    }),
    G2 = E.extend({
        imageManifest: {
            Child0: new URL("main/pp7/everyday/assets/45b3ec32.png", self.location).href,
            Child0v2: new URL("main/pp7/everyday/assets/a344637e.png", self.location).href,
            Child0v3: new URL("main/pp7/everyday/assets/ee6aa9f0.png", self.location).href,
            Child1: new URL("main/pp7/everyday/assets/efeaf4cd.png", self.location).href,
            Child1v2: new URL("main/pp7/everyday/assets/57535bdf.png", self.location).href,
            Child1v3: new URL("main/pp7/everyday/assets/35daf245.png", self.location).href,
            Child2: new URL("main/pp7/everyday/assets/16612d7d.png", self.location).href,
            Child2v2: new URL("main/pp7/everyday/assets/dc01d413.png", self.location).href,
            Child2v3: new URL("main/pp7/everyday/assets/24e94e4d.png", self.location).href,
            pile: new URL("main/pp7/everyday/assets/cd4ac439.png", self.location).href
        }
    }),
    tP = G2.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pile"),
        initializeTimeline() {
            this.timeline.add(a.fallOut(".e.pile", .5))
        }
    }),
    nP = G2.extend({
        elements() {
            const t = this.model.get("playerInfo");
            return [{
                class: "devil",
                type: "img",
                key: t.avatar
            }]
        }
    }),
    GA = E.extend({
        imageManifest: {
            collage: new URL("main/pp7/everyday/assets/01f234d6.png", self.location).href,
            magazines: new URL("main/pp7/everyday/assets/3ac987b8.png", self.location).href,
            pile: new URL("main/pp7/everyday/assets/b1c1dc46.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/1976b38f.png", self.location).href
        }
    }),
    iP = GA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["magazines", "magazine1"], ["magazines", "magazine2"], ["magazines", "magazine3"], ["magazines", "magazine4"]),
        onLoadComplete() {
            s.set(".e.magazine1", {
                clip: "rect(0px 503px 503px 0px)"
            }), s.set(".e.magazine2", {
                clip: "rect(0px 1000px 503px 500px)"
            }), s.set(".e.magazine3", {
                clip: "rect(500px 1000px 1000px 500px)"
            }), s.set(".e.magazine4", {
                clip: "rect(500px 503px 1000px 0px)"
            })
        },
        onDiscreteProgress(t) {
            const e = Math.round(t / 100 * 3);
            s.to(`.e.magazine${e+1}`, {
                x: "random(-300, 300)",
                y: "random(-300, 300)",
                rotate: "random(-30, 30)"
            })
        }
    }),
    sP = GA.extend({
        elements: a.elementsFromImages("pile", "collage"),
        onLoadComplete() {
            s.set(".e.collage", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pile", {
                rotate: 90
            }).to(".e.pile", {
                rotate: -200,
                x: 90,
                y: -300
            }).to(".e.pile", {
                rotate: 50,
                x: -50,
                y: 200
            }).to(".e.pile", {
                opacity: 0,
                x: 0,
                y: 0
            }).to(".e.collage", {
                opacity: 1
            }, "<")
        }
    }),
    oP = GA.extend({
        elements: a.elementsFromImages("paper", "collage"),
        onLoadComplete() {
            s.set(".e.paper", {
                y: -1500,
                scaleY: 1.2
            }), s.to(".e.collage", {
                scale: .5,
                y: 400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper", {
                y: 0,
                scaleY: 1
            }).to(".e.collage", {
                y: 430,
                scaleY: .4
            }).to(".e.collage", {
                y: -10,
                scale: .9,
                rotate: 15
            }).to(".e.collage", {
                rotate: -15
            }).to(".e.collage", {
                rotate: 0
            })
        }
    }),
    aP = GA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("paper", "collage"),
        onLoadComplete() {
            s.set(".e.paper", {
                y: 1500,
                scaleY: 1.1
            }), s.set(".e.collage", {
                y: 1510
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.paper", {
                y: -30,
                scaleY: .9,
                duration: .25
            }).to(".e.collage", {
                y: -40,
                scaleY: .8,
                duration: .25
            }, "<").to(".e.paper", {
                y: 0,
                scaleY: 1,
                duration: .25
            }).to(".e.collage", {
                y: -10,
                scale: .9,
                duration: .25
            }, "<")
        }
    }),
    X2 = E.extend({
        imageManifest: {
            freezer: new URL("main/pp7/everyday/assets/d68a389a.png", self.location).href,
            puddle: new URL("main/pp7/everyday/assets/6381dedc.png", self.location).href
        }
    }),
    rP = X2.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("freezer"),
        onDiscreteProgress() {
            a.scaleBounce("freezer")
        }
    }),
    VP = X2.extend({
        elements: a.elementsFromImages("freezer", "puddle"),
        onLoadComplete() {
            s.set(".e.puddle", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.puddle", {
                opacity: 1,
                duration: 5
            }).to(".e.freezer", {
                opacity: 0,
                duration: 1
            }, 3)
        }
    }),
    Y2 = E.extend({
        imageManifest: {
            mirrorClean: new URL("main/pp7/everyday/assets/1044c9a9.png", self.location).href,
            mirrorSuds: new URL("main/pp7/everyday/assets/87d48537.png", self.location).href,
            mirrorDirty: new URL("main/pp7/everyday/assets/0242a321.png", self.location).href,
            mirror: new URL("main/pp7/everyday/assets/e9dfb668.png", self.location).href,
            Adult0: new URL("main/pp7/everyday/assets/84ebb6ff.png", self.location).href,
            Adult1: new URL("main/pp7/everyday/assets/8ddffc67.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/4af42f65.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/63befef5.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/45b1aa96.png", self.location).href
        }
    }),
    lP = Y2.extend({
        elements: [{
            class: "mirror-container",
            type: "container",
            children: [{
                class: "mirror-suds",
                type: "img",
                pos: [40, 140],
                key: "mirrorSuds"
            }, {
                class: "mirror-dirty",
                type: "img",
                pos: [40, 140],
                key: "mirrorDirty"
            }, {
                class: "mirror",
                type: "img",
                pos: [40, 140],
                key: "mirror"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.mirror-dirty", {
                opacity: 0
            });
            t.name = "dirty", this.timeline.add(t)
        }
    }),
    AP = Y2.extend({
        stepDuration: 1,
        elements() {
            const e = this.model.get("playerInfo").avatar.replace(/(v2)|(v3)\b/, "");
            return [{
                class: "mirror-container",
                type: "container",
                children: [{
                    class: "mirror-clean",
                    type: "img",
                    pos: [40, 140],
                    key: "mirrorClean"
                }, {
                    class: "mirror-suds",
                    type: "img",
                    pos: [40, 140],
                    key: "mirrorSuds"
                }, {
                    class: "player",
                    type: "img",
                    pos: [210, 0],
                    key: e
                }, {
                    class: "mirror",
                    type: "img",
                    pos: [40, 140],
                    key: "mirror"
                }]
            }]
        },
        initializeTimeline() {
            s.set(".e.player", {
                opacity: 0
            });
            const t = s.timeline().to(".e.mirror-suds", {
                opacity: 0
            });
            t.name = "suds", this.timeline.add(t);
            const e = s.timeline().to(".e.player", {
                opacity: 1
            });
            e.name = "suds", this.timeline.add(e, 0)
        }
    }),
    K2 = E.extend({
        stepDuration: .5,
        imageManifest: {
            bottle: new URL("main/pp7/everyday/assets/82a2664b.png", self.location).href,
            bottleTrigger: new URL("main/pp7/everyday/assets/7a70ad5d.png", self.location).href
        },
        elements: [{
            class: "bottle-container",
            type: "container",
            children: [{
                class: "bottle-trigger",
                type: "img",
                pos: [240, 470],
                key: "bottleTrigger"
            }, {
                class: "bottle",
                type: "img",
                pos: [190, 200],
                key: "bottle"
            }]
        }],
        onDiscreteProgress() {
            s.timeline().to(".e.bottle-trigger", {
                rotation: 25,
                transformOrigin: "center top",
                duration: this.stepDuration / 2
            }).to(".e.bottle-trigger", {
                rotation: 0,
                transformOrigin: "center top",
                duration: this.stepDuration / 2
            })
        }
    }),
    XA = E.extend({
        imageManifest: {
            Can: new URL("main/pp7/everyday/assets/08c09f9a.png", self.location).href,
            Lid: new URL("main/pp7/everyday/assets/db3369b7.png", self.location).href,
            Scoop: new URL("main/pp7/everyday/assets/51f834e8.png", self.location).href,
            CoffeeMaker: new URL("main/pp7/everyday/assets/02ec66ee.png", self.location).href,
            CoffeeMakerSmoking: new URL("main/pp7/everyday/assets/662aa081.png", self.location).href,
            Button: new URL("main/pp7/everyday/assets/d94951d8.png", self.location).href,
            ButtonPressed: new URL("main/pp7/everyday/assets/a91aeb2e.png", self.location).href
        }
    }),
    cP = XA.extend({
        elements: [{
            class: "coffee-container",
            type: "container",
            children: [{
                class: "Can",
                type: "img",
                pos: [40, 60],
                key: "Can"
            }, {
                class: "Lid",
                type: "img",
                pos: [-170, -31],
                key: "Lid"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".Lid", {
                rotate: 60
            });
            const t = s.timeline().to(".Lid", {
                rotate: -520,
                ease: "power1.out",
                duration: .4,
                y: -500,
                x: -1e3
            }, 0);
            this.timeline.add(t)
        }
    }),
    dP = XA.extend({
        elements: [{
            class: "coffee-container",
            type: "container",
            children: [{
                class: "Scoop",
                type: "img",
                pos: [0, 0],
                key: "Scoop"
            }]
        }],
        stepDuration: 1,
        particleEmitter: null,
        initializeTimeline() {
            this.particleEmitter = a.addParticleEmitter({
                container: "coffee-container",
                numberOfParticles: 200,
                autoplay: !1,
                zIndex: 2,
                settings: {
                    fullThrottle: !0,
                    particleLimit: 50,
                    frequency: .005,
                    from: {
                        backgroundColor: "#602304",
                        opacity: 0
                    },
                    to: {
                        duration: 1,
                        delay: .1,
                        opacity: 1
                    },
                    minSize: 6,
                    maxSize: 20,
                    boundaries: {
                        top: 380,
                        bottom: 380,
                        left: 500,
                        right: 500
                    },
                    force: -4,
                    gravity: 3,
                    angle: 45
                }
            }, this)
        },
        onProgressChange() {
            s.to(".Scoop", {
                repeat: 1,
                yoyo: !0,
                rotate: 90,
                duration: .35,
                ease: "power2.out"
            }), this.particleEmitter.restart()
        }
    }),
    pP = XA.extend({
        elements: [{
            class: "coffee-container",
            type: "container",
            children: [{
                class: "CoffeeMaker",
                type: "img",
                pos: [0, 0],
                key: "CoffeeMaker"
            }]
        }],
        initializeTimeline() {
            s.set(".e.CoffeeMaker", {
                scale: 1.4
            });
            const t = () => {
                    s.timeline().to(".e.CoffeeMaker", {
                        repeat: -1,
                        yoyo: !0,
                        duration: .2,
                        ease: "linear",
                        x: "+=20",
                        y: "+=20"
                    }, 1)
                },
                e = s.timeline().to(".e.CoffeeMaker", {
                    duration: 5,
                    onStart: t,
                    scale: 1
                }, 0);
            this.timeline.add(e)
        }
    }),
    hP = XA.extend({
        elements: [{
            class: "coffee-container",
            type: "container",
            children: [{
                class: "CoffeeMakerSmoking",
                type: "img",
                pos: [-150, -20],
                key: "CoffeeMakerSmoking"
            }, {
                class: "CoffeeMaker",
                type: "img",
                pos: [0, 0],
                key: "CoffeeMaker"
            }, {
                class: "ButtonPressed",
                type: "img",
                pos: [191, -20],
                key: "ButtonPressed"
            }, {
                class: "Button",
                type: "img",
                pos: [184, -20],
                key: "Button"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            const t = s.timeline().to(".e.CoffeeMakerSmoking", {
                    repeat: -1,
                    yoyo: !0,
                    opacity: 0,
                    duration: .3
                }),
                e = s.timeline().to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear"
                }, 0).to(".e.Button", {
                    opacity: 1,
                    duration: .5,
                    ease: "linear"
                }, 1).to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear"
                }, 2).to(".e.Button", {
                    opacity: 1,
                    duration: .5,
                    ease: "linear"
                }, 3).to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear"
                }, 4).to(".e.Button", {
                    opacity: 1,
                    duration: .5,
                    ease: "linear"
                }, 5).to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear"
                }, 6).to(".e.Button", {
                    opacity: 1,
                    duration: .5,
                    ease: "linear"
                }, 7).to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear"
                }, 8).to(".e.Button", {
                    opacity: 1,
                    duration: .5,
                    ease: "linear"
                }, 9).to(".e.Button", {
                    opacity: 0,
                    duration: .5,
                    ease: "linear",
                    onComplete: () => {
                        t.pause(), s.to(".e.CoffeeMakerSmoking", {
                            opacity: 0
                        })
                    }
                }, 10);
            this.timeline.add(e)
        }
    }),
    uP = E.extend({
        imageManifest: {
            candle: new URL("main/pp7/everyday/assets/f29de789.png", self.location).href,
            candleLit: new URL("main/pp7/everyday/assets/99bcf91e.png", self.location).href,
            candleFront: new URL("main/pp7/everyday/assets/da012a66.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "jar",
            children: [{
                type: "img",
                pos: [0, 0],
                key: "candle",
                class: "candle"
            }, {
                type: "img",
                pos: [0, 0],
                key: "candleLit",
                class: "candleLit"
            }, {
                type: "img",
                pos: [0, 0],
                key: "candleFront",
                class: "candleFront"
            }]
        }],
        stepDuration: 2,
        initializeTimeline() {
            s.set(".e.candleLit", {
                opacity: 0
            }), this.timeline.to(".e.jar", {
                rotate: 15
            }), this.timeline.to(".e.candleLit", {
                opacity: 1,
                onComplete() {
                    s.to(".e.candleLit", {
                        opacity: .5,
                        ease: "bounce.out",
                        yoyo: !0,
                        repeat: -1
                    })
                }
            }), this.timeline.to(".e.jar", {
                rotate: 0
            })
        }
    }),
    mP = eV.extend({
        imageManifest: {
            cheese: new URL("main/pp7/everyday/assets/afe4e98c.png", self.location).href,
            fish: new URL("main/pp7/everyday/assets/f72e1bc1.png", self.location).href,
            sock: new URL("main/pp7/everyday/assets/64a118e8.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "slider",
            children: [{
                type: "img",
                pos: [0, 0],
                key: "cheese",
                class: "candle"
            }, {
                type: "img",
                pos: [0, 0],
                key: "fish",
                class: "fish"
            }, {
                type: "img",
                pos: [0, 0],
                key: "sock",
                class: "sock"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".fish", {
                x: "-150%"
            }), s.set(".sock", {
                x: "150%"
            }), this.timeline.to(".slider", {
                x: "-150%",
                ease: "power2.inOut"
            }).to(".slider", {
                x: "150%",
                ease: "power2.inOut"
            })
        }
    }),
    fP = Hn.extend({
        imageManifest: {
            closed: new URL("main/pp7/everyday/assets/cc6eddf6.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/b1e0de7b.png", self.location).href
        },
        elements: [{
            type: "img",
            pos: [0, 0],
            key: "closed",
            class: "closed"
        }, {
            type: "img",
            pos: [0, 0],
            key: "open",
            class: "open"
        }],
        initializeTimeline() {
            s.set(".e.open", {
                opacity: 0
            }), this.timeline.to(".e.open", {
                opacity: 1
            })
        }
    }),
    qP = yo.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/66ffa2ee.png", self.location).href
        },
        stepDuration: .5,
        initializeTimeline() {
            this.timeline.to(".image", {
                rotate: 5,
                scale: .9,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 0,
                scale: 1,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: -5,
                scale: .9,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 0,
                scale: 1,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 15,
                scale: .8,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 0,
                scale: 1,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: -10,
                scale: .9,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 0,
                scale: 1,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 12,
                scale: .8,
                duration: .5
            }), this.timeline.to(".image", {
                rotate: 0,
                scale: 1,
                duration: .5
            })
        }
    }),
    gP = E.extend({
        imageManifest: {
            toast: new URL("main/pp7/everyday/assets/54962633.png", self.location).href,
            toastDone: new URL("main/pp7/everyday/assets/9cb87404.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "toast",
            class: "toast",
            pos: [0, 0]
        }, {
            type: "img",
            key: "toastDone",
            class: "toastDone",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".toastDone", {
                opacity: 0
            }), this.timeline.to(".toastDone", {
                opacity: .5
            }), this.timeline.to(".toastDone", {
                opacity: 1
            })
        }
    }),
    yP = E.extend({
        imageManifest: {
            closed: new URL("main/pp7/everyday/assets/41a42821.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/e7f06d8e.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "closed",
            class: "closed",
            pos: [0, 0]
        }, {
            type: "img",
            key: "open",
            class: "open",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.open", {
                opacity: 0
            }), this.timeline.to(".e.open", {
                opacity: 1
            }), this.timeline.to(".e.closed", {
                opacity: 0
            })
        }
    }),
    bP = E.extend({
        imageManifest: {
            open: new URL("main/pp7/everyday/assets/e7f06d8e.png", self.location).href,
            ac: new URL("main/pp7/everyday/assets/9d37cd20.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "open",
            class: "open",
            pos: [0, 0]
        }, {
            type: "img",
            key: "ac",
            class: "ac",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.ac", {
                scale: .35,
                y: 100
            }), this.timeline.to(".e.ac", {
                scale: .5,
                y: 105,
                duration: .75
            }), this.timeline.to(".e.ac", {
                scale: .5,
                y: 120,
                duration: .25
            })
        }
    }),
    vP = yo.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/9d37cd20.png", self.location).href
        }
    }),
    wP = Hn.extend({
        imageManifest: {
            closed: new URL("main/pp7/everyday/assets/195f7556.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/2da36842.png", self.location).href
        },
        elements: [{
            type: "img",
            key: "closed",
            class: "closed",
            pos: [0, 0]
        }, {
            type: "img",
            key: "open",
            class: "open",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.closed", {
                opacity: 0
            }), this.timeline.to(".e.open", {
                opacity: 0
            }), this.timeline.to(".e.closed", {
                opacity: 1
            })
        }
    }),
    xP = Os.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/d2037e60.png", self.location).href
        }
    }),
    YA = E.extend({
        imageManifest: {
            brush: new URL("main/pp7/everyday/assets/bb7ea821.png", self.location).href,
            bubbles: new URL("main/pp7/everyday/assets/082447e0.png", self.location).href,
            fall: new URL("main/pp7/everyday/assets/25cdda56.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/e5b6da28.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/ee12e7c5.png", self.location).href
        }
    }),
    kP = YA.extend({
        elements: a.elementsFromImages("paper", "glue", "brush"),
        onLoadComplete() {
            s.set(".e.glue", {
                y: 400,
                scale: .8
            }), s.set(".e.brush", {
                y: -300,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.brush", {
                y: -350,
                rotate: -35
            }).to(".e.brush", {
                y: 85
            }).to(".e.glue", {
                y: 420
            }, "<").to(".e.glue", {
                y: 400
            }).to(".e.brush", {
                y: -300,
                scale: .4
            }).to(".e.brush", {
                x: -90,
                y: -150
            }).to(".e.brush", {
                x: 90,
                y: -200
            }).to(".e.brush", {
                x: -90,
                y: 50
            }).to(".e.brush", {
                x: 40,
                y: -50
            })
        }
    }),
    CP = YA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bubbles"),
        onLoadComplete() {
            s.set(".e.bubbles", {
                y: 1500,
                x: 100,
                rotateX: 180
            })
        },
        onDiscreteProgress(t) {
            switch (t) {
                case 25:
                    s.to(".e.bubbles", {
                        y: -150,
                        rotateX: 0
                    });
                    break;
                case 50:
                    s.to(".e.bubbles", {
                        y: 0
                    });
                    break;
                case 75:
                    s.to(".e.bubbles", {
                        x: -100
                    });
                    break;
                case 100:
                    s.to(".e.bubbles", {
                        x: 0
                    });
                    break
            }
        }
    }),
    RP = YA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("paper", "bubbles"),
        onDiscreteProgress(t) {
            a.squashOnce("bubbles"), a.squashOnce("paper");
            let e = 1e3;
            switch (t) {
                case 20:
                case 40:
                    e = 600;
                    break;
                case 60:
                    e = 350;
                    break;
                case 80:
                    e = 250;
                    break;
                case 100:
                    e = 0;
                    break
            }
            s.set(".e.bubbles", {
                clip: `rect(0px 1000px ${e}px 0px)`
            }), t === 100 && s.to(".e.paper", {
                visibility: "visible"
            })
        }
    }),
    DP = YA.extend({
        elements: a.elementsFromImages("paper", "fall"),
        onLoadComplete() {
            s.set(".e.fall", {
                visibility: "hidden",
                y: 1300,
                scale: .1
            }), s.set(".e.paper", {
                scale: .8,
                y: -150
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper", {
                rotate: 5,
                y: -120
            }).to(".e.paper", {
                rotate: -5,
                y: -90
            }).to(".e.paper", {
                rotate: -7,
                y: -40
            }).to(".e.paper", {
                rotate: -9,
                y: 50
            }).to(".e.paper", {
                y: 1300,
                scaleY: .3,
                duration: .25
            }, "+=.25").to(".e.fall", {
                visibility: "visible",
                scale: .8
            }).to(".e.paper", {
                visibility: "hidden",
                y: 0
            }, "<-=.25").to(".e.fall", {
                scale: 1.2,
                y: 0
            })
        }
    }),
    SP = E.extend({
        imageManifest: {
            curtain: new URL("main/pp7/everyday/assets/6652e996.png", self.location).href,
            headdown: new URL("main/pp7/everyday/assets/858c242f.png", self.location).href,
            shower: new URL("main/pp7/everyday/assets/1d8b742d.png", self.location).href,
            showering: new URL("main/pp7/everyday/assets/856c85e3.png", self.location).href,
            showerTop: new URL("main/pp7/everyday/assets/f7ef7809.png", self.location).href
        }
    }),
    TP = SP.extend({
        elements: [{
            class: "shower",
            type: "img",
            pos: [0, 0],
            key: "shower"
        }, {
            class: "curtain",
            type: "img",
            pos: [0, 0],
            key: "curtain"
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.set(".e.curtain", {
                x: -135,
                y: 46,
                scaleX: .45
            });
            const t = s.timeline().to(".e.curtain", {
                x: -22,
                y: 46,
                scaleX: 1,
                duration: 2
            });
            this.timeline.add(t)
        }
    }),
    EP = Hn.extend({
        imageManifest: {
            showering: new URL("main/pp7/everyday/assets/856c85e3.png", self.location).href,
            showerTop: new URL("main/pp7/everyday/assets/f7ef7809.png", self.location).href
        },
        elements: [{
            class: "move",
            type: "img",
            pos: [0, 0],
            key: "showering"
        }, {
            class: "showering",
            type: "img",
            pos: [0, 0],
            key: "showering"
        }, {
            class: "showerTop",
            type: "img",
            pos: [0, 0],
            key: "showerTop"
        }],
        initializeTimeline() {
            s.set(".e.showerTop", {
                zIndex: 2
            }), a.addParticleEmitter({
                container: "scene-container",
                zIndex: 1,
                settings: {
                    frequency: .03,
                    from: {
                        backgroundColor: "#A21616",
                        width: 10,
                        height: 22,
                        borderRadius: 10
                    },
                    to: {
                        opacity: 0,
                        duration: .6
                    },
                    boundaries: {
                        top: 380,
                        bottom: 390,
                        left: 520,
                        right: 560
                    },
                    gravity: 3,
                    force: 1.5,
                    angle: 320
                }
            }, this)
        }
    }),
    LP = Ma.extend({
        imageManifest: {
            headdown: new URL("main/pp7/everyday/assets/858c242f.png", self.location).href,
            showerTop: new URL("main/pp7/everyday/assets/f7ef7809.png", self.location).href
        },
        elements: [{
            class: "move",
            type: "img",
            pos: [0, 0],
            key: "headdown"
        }, {
            class: "headdown",
            type: "img",
            pos: [0, 0],
            key: "headdown"
        }, {
            class: "showerTop",
            type: "img",
            pos: [0, 0],
            key: "showerTop"
        }],
        initializeTimeline() {
            s.set(".e.showerTop", {
                zIndex: 2
            }), a.addParticleEmitter({
                container: "scene-container",
                zIndex: 1,
                settings: {
                    frequency: .03,
                    from: {
                        backgroundColor: "#A21616",
                        width: 10,
                        height: 22,
                        borderRadius: 10
                    },
                    to: {
                        opacity: 0,
                        duration: .6
                    },
                    boundaries: {
                        top: 380,
                        bottom: 390,
                        left: 520,
                        right: 560
                    },
                    gravity: 3,
                    force: 1.5,
                    angle: 320
                }
            }, this)
        }
    }),
    BP = E.extend({
        elements() {
            return [{
                class: "image",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }]
        }
    }),
    MP = Os.extend({
        imageManifest: {
            tie: new URL("main/pp7/everyday/assets/1da1d312.png", self.location).href
        }
    }),
    OP = eV.extend({
        imageManifest: {
            tie: new URL("main/pp7/everyday/assets/c5eea730.png", self.location).href
        }
    }),
    IP = BP.extend({
        imageManifest: {
            tie: new URL("main/pp7/everyday/assets/65013ff2.png", self.location).href
        }
    }),
    KA = E.extend({
        imageManifest: {
            chain: new URL("main/pp7/everyday/assets/0a8023f9.png", self.location).href,
            gunk: new URL("main/pp7/everyday/assets/7f6065c5.png", self.location).href,
            clicker: new URL("main/pp7/everyday/assets/c4828384.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/f7e89b72.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/7430fcf8.png", self.location).href
        }
    }),
    PP = KA.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("clicker"),
        initializeTimeline() {
            this.timeline.to(".e.clicker", {
                scale: .8,
                rotate: 5
            }), this.timeline.to(".e.clicker", {
                scale: 1,
                rotate: 0
            }), this.timeline.to(".e.clicker", {
                scale: .7,
                rotate: 10
            }), this.timeline.to(".e.clicker", {
                scale: 1,
                rotate: 0
            }), this.timeline.to(".e.clicker", {
                scale: .6,
                rotate: 15
            }), this.timeline.to(".e.clicker", {
                scale: 1,
                rotate: 0
            })
        }
    }),
    UP = KA.extend({
        elements: a.elementsFromImages("gunk", "chain"),
        initializeTimeline() {
            this.timeline.to(".e.gunk", {
                opacity: 0
            })
        }
    }),
    FP = KA.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("open", "door"),
        initializeTimeline() {
            s.set(".e.door", {
                y: -50
            }), this.timeline.to(".e.door", {
                rotateX: 90
            })
        }
    }),
    jP = KA.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("open", "door"),
        initializeTimeline() {
            s.set(".e.door", {
                y: -50
            }), this.timeline.from(".e.door", {
                rotateX: 90
            })
        }
    }),
    k0 = E.extend({
        imageManifest: {
            bulbDead: new URL("main/pp7/everyday/assets/fd47a37d.png", self.location).href,
            bulbNew: new URL("main/pp7/everyday/assets/d7f6bb0f.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/74f68fd8.png", self.location).href,
            noBulb: new URL("main/pp7/everyday/assets/e36d7861.png", self.location).href
        }
    }),
    QP = k0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("ladder"),
        onLoadComplete() {
            s.set(".e.ladder", {
                scale: 3,
                y: -800,
                rotate: 15,
                maskImage: "linear-gradient(0deg, rgba(0,0,0,1) 1%, rgba(0,0,0,0))"
            })
        },
        onDiscreteProgress(t) {
            const e = -800 + t * 17;
            s.to(".e.ladder", {
                y: e,
                maskImage: `linear-gradient(0deg, rgba(0,0,0,1) ${t}%, rgba(0,0,0,0))`
            })
        }
    }),
    zP = k0.extend({
        elements: a.elementsFromImages(["noBulb", "back"], "bulbDead", ["noBulb", "front"]),
        onLoadComplete() {
            s.set(".e.bulbDead", {
                y: 80
            }), s.set(".e.back", {
                y: -200
            }), s.set(".e.front", {
                y: -200,
                clip: "rect(0px 1000px 615px 0px)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bulbDead", {
                rotateY: 180,
                y: 150
            }).to(".e.bulbDead", {
                rotateY: 360,
                y: 275
            }).to(".e.bulbDead", {
                rotateY: 540,
                y: 400
            }).to(".e.bulbDead", {
                scaleY: .9,
                y: 380
            }).to(".e.bulbDead", {
                scaleY: 1.1,
                y: 1500
            })
        }
    }),
    HP = k0.extend({
        elements: a.elementsFromImages(["noBulb", "back"], "bulbDead", "bulbNew", ["noBulb", "front"]),
        onLoadComplete() {
            s.set(".e.back", {
                y: -200
            }), s.set(".e.front", {
                y: -200,
                clip: "rect(0px 1000px 615px 0px)"
            }), s.set(".e.bulbDead", {
                y: 1500,
                scaleY: 1.1
            }), s.set(".e.bulbNew", {
                y: 25,
                scale: 1.1,
                visibility: "hidden",
                rotateY: 180
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bulbDead", {
                scaleY: .9,
                y: 380
            }).to(".e.bulbDead", {
                scaleY: 1,
                y: 400
            }).to(".e.bulbDead", {
                rotateY: -180,
                y: 275
            }).to(".e.bulbDead", {
                rotateY: -360,
                y: 150
            }).to(".e.bulbDead", {
                rotateY: -540,
                y: 40
            }).to(".e.bulbNew", {
                visibility: "visible"
            })
        }
    }),
    WA = E.extend({
        imageManifest: {
            bulbDead: new URL("main/pp7/everyday/assets/fd47a37d.png", self.location).href,
            bulbNew: new URL("main/pp7/everyday/assets/d7f6bb0f.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/74f68fd8.png", self.location).href,
            noBulb: new URL("main/pp7/everyday/assets/e36d7861.png", self.location).href
        }
    }),
    NP = WA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("ladder"),
        onLoadComplete() {
            s.set(".e.ladder", {
                scale: 3,
                y: -800,
                rotate: 15,
                maskImage: "linear-gradient(0deg, rgba(0,0,0,1) 1%, rgba(0,0,0,0))"
            })
        },
        onDiscreteProgress(t) {
            const e = -800 + t * 17;
            s.to(".e.ladder", {
                y: e,
                maskImage: `linear-gradient(0deg, rgba(0,0,0,1) ${t}%, rgba(0,0,0,0))`
            })
        }
    }),
    GP = WA.extend({
        elements: a.elementsFromImages(["noBulb", "back"], "bulbDead", ["noBulb", "front"]),
        onLoadComplete() {
            s.set(".e.bulbDead", {
                y: 80,
                filter: "brightness(10%"
            }), s.set(".e.back", {
                y: -200
            }), s.set(".e.front", {
                y: -200,
                clip: "rect(0px 1000px 615px 0px)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bulbDead", {
                rotateY: 180,
                y: 150
            }).to(".e.bulbDead", {
                rotateY: 360,
                y: 275
            }).to(".e.bulbDead", {
                rotateY: 540,
                y: 400
            })
        }
    }),
    XP = WA.extend({
        elements: a.elementsFromImages(["noBulb", "back"], "bulbDead", ["noBulb", "front"]),
        onLoadComplete() {
            s.set(".e.bulbDead", {
                y: 400,
                rotateY: 540,
                filter: "brightness(10%)"
            }), s.set(".e.back", {
                y: -200
            }), s.set(".e.front", {
                y: -200,
                clip: "rect(0px 1000px 615px 0px)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bulbDead", {
                filter: "brightness(100%)"
            })
        },
        onStartProgress() {
            a.startShake("bulbDead", 5, 5)
        },
        onStopProgress() {
            a.stopShake("bulbDead")
        }
    }),
    YP = WA.extend({
        elements: a.elementsFromImages(["noBulb", "back"], "bulbDead", "bulbNew", ["noBulb", "front"]),
        onLoadComplete() {
            s.set(".e.back", {
                y: -200
            }), s.set(".e.front", {
                y: -200,
                clip: "rect(0px 1000px 615px 0px)"
            }), s.set(".e.bulbDead", {
                y: 400,
                scaleY: 1,
                rotateY: -180
            }), s.set(".e.bulbNew", {
                y: 25,
                scale: 1.1,
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bulbDead", {
                rotateY: -360,
                y: 275
            }).to(".e.bulbDead", {
                rotateY: -540,
                y: 150
            }).to(".e.bulbDead", {
                rotateY: -720,
                y: 40
            }).to(".e.bulbNew", {
                visibility: "visible"
            })
        }
    }),
    mV = E.extend({
        imageManifest: {
            crustbottom: new URL("main/pp7/everyday/assets/062573f5.png", self.location).href,
            crustleft: new URL("main/pp7/everyday/assets/c9e6b6eb.png", self.location).href,
            crustright: new URL("main/pp7/everyday/assets/ff240461.png", self.location).href,
            crustup: new URL("main/pp7/everyday/assets/2b46fb76.png", self.location).href,
            crustless: new URL("main/pp7/everyday/assets/40eb9f21.png", self.location).href,
            sandwich: new URL("main/pp7/everyday/assets/8e7bb7ff.png", self.location).href
        }
    }),
    KP = mV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("sandwich", "crustright"),
        onLoadComplete() {
            s.set(".e.crustright", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crustright", {
                x: 100,
                opacity: 1,
                ease: "power2.out"
            }).to(".e.sandwich", {
                opacity: .25
            }, "<")
        }
    }),
    WP = mV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("sandwich", "crustright", "crustup"),
        onLoadComplete() {
            s.set(".e.crustup", {
                opacity: 0
            }), s.set(".e.crustright", {
                x: 100
            }), s.set(".e.sandwich", {
                opacity: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crustup", {
                y: -100,
                opacity: 1,
                ease: "power2.out"
            })
        }
    }),
    JP = mV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("sandwich", "crustright", "crustup", "crustbottom"),
        onLoadComplete() {
            s.set(".e.crustbottom", {
                opacity: 0
            }), s.set(".e.crustup", {
                y: -100
            }), s.set(".e.crustright", {
                x: 100
            }), s.set(".e.sandwich", {
                opacity: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crustbottom", {
                y: 100,
                opacity: 1,
                ease: "power2.out"
            })
        }
    }),
    ZP = mV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("sandwich", "crustright", "crustup", "crustleft", "crustless", "crustbottom"),
        onLoadComplete() {
            s.set(".e.crustless", {
                opacity: 0
            }), s.set(".e.crustleft", {
                opacity: 0
            }), s.set(".e.crustbottom", {
                y: 100
            }), s.set(".e.crustup", {
                y: -100
            }), s.set(".e.crustright", {
                x: 100
            }), s.set(".e.sandwich", {
                opacity: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crustleft", {
                x: -100,
                opacity: 1,
                ease: "power2.out"
            }).to(".e.sandwich", {
                opacity: 0
            }, "<").to(".e.crustless", {
                opacity: 1
            }, "<")
        }
    }),
    _P = mV.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("crustright", "crustup", "crustleft", "crustless", "crustbottom"),
        onLoadComplete() {
            s.set(".e.crustleft", {
                x: -100
            }), s.set(".e.crustbottom", {
                y: 100
            }), s.set(".e.crustup", {
                y: -100
            }), s.set(".e.crustright", {
                x: 100
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crustbottom", {
                scale: 1.1,
                opacity: 0
            }).to(".e.crustright", {
                scale: 1.1,
                opacity: 0
            }).to(".e.crustup", {
                scale: 1.1,
                opacity: 0
            }).to(".e.crustleft", {
                scale: 1.1,
                opacity: 0
            })
        }
    }),
    fV = E.extend({
        imageManifest: {
            cap: new URL("main/pp7/everyday/assets/0e69ceec.png", self.location).href,
            soapCapped: new URL("main/pp7/everyday/assets/be30d6e8.png", self.location).href,
            soapFill: new URL("main/pp7/everyday/assets/7fb3536b.png", self.location).href,
            soapMessy: new URL("main/pp7/everyday/assets/53e627d3.png", self.location).href,
            soapNoCap: new URL("main/pp7/everyday/assets/9736f150.png", self.location).href,
            soapSquirt: new URL("main/pp7/everyday/assets/1f5c01c6.png", self.location).href,
            soapUncapped: new URL("main/pp7/everyday/assets/2fc98587.png", self.location).href
        }
    }),
    $P = fV.extend({
        elements: a.elementsFromImages("cap", "soapNoCap"),
        onLoadComplete() {
            s.set(".e.cap", {
                x: 95,
                y: 20
            }), s.set(".e.soapNoCap", {
                y: 170
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                rotateY: 180,
                x: -95
            }).to(".e.cap", {
                rotateY: 0,
                x: 95
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -50
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: -100
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -200
            }).to(".e.soapNoCap", {
                y: 300
            }).to(".e.cap", {
                scaleY: 1.2,
                y: -1500
            })
        }
    }),
    eU = fV.extend({
        elements: a.elementsFromImages("soapNoCap", "soapFill"),
        onLoadComplete() {
            s.set(".e.soapNoCap", {
                y: 300
            }), s.set(".e.soapFill", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.soapNoCap", {
                scale: .6,
                x: 85,
                y: 280
            }).to(".e.soapFill", {
                opacity: 1
            }).to(".e.soapNoCap", {
                visibility: "hidden"
            }).to(".soapFill", {
                scale: 1.1
            }).to(".soapFill", {
                scale: 1
            }).to(".soapFill", {
                scale: 1.1
            }).to(".soapFill", {
                scale: 1
            }).to(".soapFill", {
                scale: 1.1
            }).to(".soapFill", {
                scale: 1
            })
        }
    }),
    tU = fV.extend({
        elements: a.elementsFromImages("soapMessy", "soapNoCap"),
        onLoadComplete() {
            s.set(".e.soapMessy", {
                clip: "rect(330px 1000px 1000px 0px"
            }), s.set(".e.soapNoCap", {
                y: 105,
                x: -85,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.soapMessy", {
                opacity: 0
            }).to(".e.soapNoCap", {
                opacity: 1
            }, "<")
        },
        onStartProgress() {
            a.startShake("soapMessy", 5, 5), a.startShake("soapNoCap", 5, 5)
        },
        onStopProgress() {
            a.stopShake("soapMessy"), a.stopShake("soapNoCap")
        }
    }),
    nU = fV.extend({
        elements: a.elementsFromImages("cap", "soapNoCap"),
        onLoadComplete() {
            s.set(".e.cap", {
                y: -1500,
                x: 95,
                scaleY: 1.1
            }), s.set(".e.soapNoCap", {
                x: -85,
                y: 105
            }), s.to(".e.soapNoCap", {
                x: 0,
                y: 170
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                y: -300,
                scaleY: 1
            }).to(".e.cap", {
                y: -40
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -25
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: 0
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: 15
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: 25
            })
        }
    }),
    iU = fV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("soapCapped", "soapSquirt"),
        onLoadComplete() {
            s.set(".e.soapCapped", {
                x: 15,
                y: 20
            }), s.set(".e.soapSquirt", {
                x: 100,
                y: 25,
                opacity: 0
            }), s.to(".e.soapCapped", {
                x: 0,
                y: 0
            })
        },
        onDiscreteProgress() {
            a.squashOnce("soapCapped"), a.squashOnce("soapSquirt"), s.timeline().to(".e.soapCapped", {
                opacity: 0
            }).to(".e.soapSquirt", {
                opacity: 1
            }, "<")
        }
    }),
    C0 = E.extend({
        imageManifest: {
            cap: new URL("main/pp7/everyday/assets/0e69ceec.png", self.location).href,
            soapCapped: new URL("main/pp7/everyday/assets/be30d6e8.png", self.location).href,
            soapMessy: new URL("main/pp7/everyday/assets/53e627d3.png", self.location).href,
            soapNoCap: new URL("main/pp7/everyday/assets/9736f150.png", self.location).href,
            soapSquirt: new URL("main/pp7/everyday/assets/1f5c01c6.png", self.location).href,
            soapUncapped: new URL("main/pp7/everyday/assets/2fc98587.png", self.location).href,
            soapWater: new URL("main/pp7/everyday/assets/a6aa6572.png", self.location).href
        }
    }),
    sU = C0.extend({
        elements: a.elementsFromImages("cap", "soapNoCap"),
        onLoadComplete() {
            s.set(".e.cap", {
                x: 95,
                y: 20
            }), s.set(".e.soapNoCap", {
                y: 170
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                rotateY: 180,
                x: -95
            }).to(".e.cap", {
                rotateY: 0,
                x: 95
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -50
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: -100
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -200
            }).to(".e.soapNoCap", {
                y: 300
            }).to(".e.cap", {
                scaleY: 1.2,
                y: -1500
            })
        }
    }),
    oU = C0.extend({
        elements: a.elementsFromImages("soapWater"),
        onLoadComplete() {
            s.set(".e.soapWater", {
                clip: "rect(0px 640px 1000px 0px)",
                x: 175
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.soapWater", {
                scale: 1.1
            }).to(".e.soapWater", {
                scale: 1
            }).to(".e.soapWater", {
                scale: 1.1
            }).to(".e.soapWater", {
                scale: 1
            }).to(".e.soapWater", {
                scale: 1.1
            }).to(".e.soapWater", {
                scale: 1
            }).to(".e.soapWater", {
                scale: 1.1
            }).to(".e.soapWater", {
                scale: 1
            })
        },
        onStartProgress() {
            a.startShake("soapWater", 10, 5, .25)
        },
        onStopProgress() {
            a.stopShake("soapWater")
        }
    }),
    aU = C0.extend({
        elements: a.elementsFromImages("cap", "soapNoCap"),
        onLoadComplete() {
            s.set(".e.cap", {
                y: -1500,
                x: 95,
                scaleY: 1.1
            }), s.set(".e.soapNoCap", {
                x: -85,
                y: 105
            }), s.to(".e.soapNoCap", {
                x: 0,
                y: 170
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                y: -300,
                scaleY: 1
            }).to(".e.cap", {
                y: -40
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: -25
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: 0
            }).to(".e.cap", {
                rotateY: 180,
                x: -95,
                y: 15
            }).to(".e.cap", {
                rotateY: 0,
                x: 95,
                y: 25
            })
        }
    }),
    R0 = E.extend({
        imageManifest: {
            apple: new URL("main/pp7/everyday/assets/c023ab41.png", self.location).href,
            banana: new URL("main/pp7/everyday/assets/bf7aa8e1.png", self.location).href,
            blender: new URL("main/pp7/everyday/assets/450b540f.png", self.location).href,
            broccoli: new URL("main/pp7/everyday/assets/1ca3569a.png", self.location).href,
            carrot: new URL("main/pp7/everyday/assets/e115157c.png", self.location).href,
            celery: new URL("main/pp7/everyday/assets/8cf32d25.png", self.location).href,
            orange: new URL("main/pp7/everyday/assets/3b5a8b5d.png", self.location).href
        }
    }),
    rU = R0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("banana", "apple", "orange", "blender"),
        onLoadComplete() {
            s.set(".e.blender", {
                scale: .8,
                y: 400
            }), s.set(".e.banana", {
                scale: .6,
                y: -350
            }), s.set(".e.apple", {
                scale: .3,
                y: -350,
                visibility: "hidden"
            }), s.set(".e.orange", {
                scale: .5,
                y: -350,
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            const e = ["banana", "apple", "orange"],
                n = Math.round(t / 100 * 3) - 1,
                i = s.timeline();
            i.timeScale(5).to(`.e.${e[n]}`, {
                y: -375
            }).to(`.e.${e[n]}`, {
                y: 240,
                scale: .3
            }).to(".e.blender", {
                y: 450
            }).to(`.e.${e[n]}`, {
                visibility: "hidden"
            }).to(".e.blender", {
                y: 400
            }), e[n + 1] && i.to(`.e.${e[n+1]}`, {
                visibility: "visible"
            })
        }
    }),
    VU = R0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("carrot", "celery", "broccoli", "blender"),
        onLoadComplete() {
            s.set(".e.blender", {
                scale: .8,
                y: 400
            }), s.set(".e.carrot", {
                scale: .6,
                y: -350
            }), s.set(".e.celery", {
                scale: .5,
                y: -350,
                visibility: "hidden"
            }), s.set(".e.broccoli", {
                scale: .4,
                y: -350,
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            const e = ["carrot", "celery", "broccoli"],
                n = Math.round(t / 100 * 3) - 1,
                i = s.timeline();
            i.timeScale(5).to(`.e.${e[n]}`, {
                y: -375
            }).to(`.e.${e[n]}`, {
                y: 240,
                scale: .3
            }).to(".e.blender", {
                y: 450
            }).to(`.e.${e[n]}`, {
                visibility: "hidden"
            }).to(".e.blender", {
                y: 400
            }), e[n + 1] && i.to(`.e.${e[n+1]}`, {
                visibility: "visible"
            })
        }
    }),
    lU = R0.extend({
        elements: a.elementsFromImages("blender"),
        onStartProgress() {
            a.startShake("blender", 3, 4, 3)
        },
        onStopProgress() {
            a.stopShake("blender")
        }
    }),
    JA = E.extend({
        imageManifest: {
            apple: new URL("main/pp7/everyday/assets/c023ab41.png", self.location).href,
            banana: new URL("main/pp7/everyday/assets/bf7aa8e1.png", self.location).href,
            blender: new URL("main/pp7/everyday/assets/450b540f.png", self.location).href,
            chocolateChips: new URL("main/pp7/everyday/assets/2ad51ae9.png", self.location).href,
            orange: new URL("main/pp7/everyday/assets/3b5a8b5d.png", self.location).href,
            peanutButter: new URL("main/pp7/everyday/assets/a176458b.png", self.location).href
        }
    }),
    AU = JA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("banana", "apple", "orange", "blender"),
        onLoadComplete() {
            s.set(".e.blender", {
                scale: .8,
                y: 400
            }), s.set(".e.orange", {
                scale: .5,
                y: -350
            }), s.set(".e.apple", {
                scale: .3,
                y: -350,
                visibility: "hidden"
            }), s.set(".e.banana", {
                scale: .6,
                y: -350,
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            const e = ["orange", "apple", "banana"],
                n = Math.round(t / 100 * 3) - 1,
                i = s.timeline();
            i.timeScale(5).to(`.e.${e[n]}`, {
                y: -375
            }).to(`.e.${e[n]}`, {
                y: 240,
                scale: .3
            }).to(".e.blender", {
                y: 450
            }).to(`.e.${e[n]}`, {
                visibility: "hidden"
            }).to(".e.blender", {
                y: 400
            }), e[n + 1] && i.to(`.e.${e[n+1]}`, {
                visibility: "visible"
            })
        }
    }),
    cU = JA.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("peanutButter", "blender"),
        onLoadComplete() {
            s.set(".e.blender", {
                scale: .8,
                y: 400
            }), s.set(".e.peanutButter", {
                y: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.peanutButter", {
                y: -350,
                scale: 1.2
            }).to(".e.peanutButter", {
                y: 240,
                rotate: 100,
                scale: .4
            }).to(".e.blender", {
                y: 450
            }).to(".e.blender", {
                y: 400
            })
        }
    }),
    dU = JA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["chocolateChips", "chips0"], ["chocolateChips", "chips1"], ["chocolateChips", "chips2"], "blender"),
        onLoadComplete() {
            s.set(".e.blender", {
                scale: .8,
                y: 400
            }), s.set(".e.chips0", {
                scale: .5,
                y: -350
            }), s.set(".e.chips1", {
                scale: .5,
                x: 100,
                y: -300,
                rotate: 190
            }), s.set(".e.chips2", {
                scale: .5,
                x: -100,
                y: -300,
                rotate: 55
            })
        },
        onDiscreteProgress(t) {
            const e = ["chips0", "chips1", "chips2"],
                n = Math.round(t / 100 * 3) - 1;
            s.timeline().timeScale(5).to(`.e.${e[n]}`, {
                y: -375
            }).to(`.e.${e[n]}`, {
                y: 240,
                scale: .3
            }).to(".e.blender", {
                y: 450
            }).to(`.e.${e[n]}`, {
                visibility: "hidden"
            }).to(".e.blender", {
                y: 400
            })
        }
    }),
    pU = JA.extend({
        elements: a.elementsFromImages("blender"),
        onStartProgress() {
            a.startShake("blender", 3, 4, 3)
        },
        onStopProgress() {
            a.stopShake("blender")
        }
    }),
    ZA = E.extend({
        imageManifest: {
            fixed: new URL("main/pp7/everyday/assets/e7c90ed8.png", self.location).href,
            fridge: new URL("main/pp7/everyday/assets/33525f1a.png", self.location).href,
            leak: new URL("main/pp7/everyday/assets/21d0e182.png", self.location).href,
            mop: new URL("main/pp7/everyday/assets/857d1ba7.png", self.location).href,
            puddle: new URL("main/pp7/everyday/assets/6ce30af0.png", self.location).href,
            towel: new URL("main/pp7/everyday/assets/06b732bb.png", self.location).href
        }
    }),
    hU = ZA.extend({
        elements: a.elementsFromImages("puddle", "fridge", "mop"),
        onLoadComplete() {
            s.set(".e.puddle", {
                y: 450
            }), s.set(".e.mop", {
                y: 1500
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mop", {
                y: -30,
                scaleY: 1.1
            }).to(".e.mop", {
                y: 0,
                scaleY: 1
            }).to(".e.mop", {
                x: -90
            }).to(".e.mop", {
                x: 90,
                y: 30
            }).to(".e.mop", {
                x: -90
            }).to(".e.mop", {
                x: 90,
                y: 8
            }).to(".e.mop", {
                x: -90,
                y: 20
            }).to(".e.mop", {
                x: 90
            }).to(".e.mop", {
                x: -90,
                y: 30
            }).to(".e.mop", {
                x: 90,
                y: 5
            }).to(".e.mop", {
                y: -20,
                scaleY: 1.1
            }).to(".e.mop", {
                y: 1300
            }).to(".e.puddle", {
                opacity: 0,
                duration: 4
            }, "1")
        }
    }),
    uU = ZA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("leak", "fridge"),
        onLoadComplete() {
            s.set(".e.leak", {
                scale: .5,
                y: -200,
                x: 50
            })
        },
        onDiscreteProgress() {
            s.to(".e.fridge", {
                y: 1500,
                x: -1500,
                scale: 1.1
            }), s.to(".e.leak", {
                scale: 1,
                y: 0,
                x: 0
            })
        }
    }),
    mU = ZA.extend({
        elements: a.elementsFromImages("leak", "fixed"),
        onLoadComplete() {
            s.set(".e.fixed", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.leak", {
                rotate: 720,
                opacity: 0
            }).to(".e.fixed", {
                rotate: 720,
                opacity: 1
            }, "<").to(".e.fixed", {
                scale: 1.1
            }).to(".e.fixed", {
                scale: 1
            })
        }
    }),
    fU = ZA.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["towel", "towel1"], ["towel", "towel2"], "fridge"),
        onLoadComplete() {
            s.set(".e.towel1", {
                y: 600,
                scale: .5,
                rotate: 14
            }), s.set(".e.towel2", {
                y: 600,
                scale: .5
            })
        },
        onDiscreteProgress() {
            s.timeline().timeScale(2).to([".e.towel1", ".e.towel2"], {
                y: 0,
                scale: .25
            }).to(".e.fridge", {
                y: -45,
                rotate: 3
            }, "<").to(".e.fridge", {
                y: 0,
                rotate: 0
            })
        }
    }),
    qV = E.extend({
        imageManifest: {
            bowlback: new URL("main/pp7/everyday/assets/9e77181f.png", self.location).href,
            bowlfront: new URL("main/pp7/everyday/assets/d9d788c6.png", self.location).href,
            dial: new URL("main/pp7/everyday/assets/fa145754.png", self.location).href,
            oven: new URL("main/pp7/everyday/assets/31f25e3b.png", self.location).href,
            pan: new URL("main/pp7/everyday/assets/9246fd84.png", self.location).href,
            pour: new URL("main/pp7/everyday/assets/cb277a1c.png", self.location).href,
            spoon: new URL("main/pp7/everyday/assets/9d3f33b6.png", self.location).href,
            timer: new URL("main/pp7/everyday/assets/e33a61fe.png", self.location).href
        }
    }),
    qU = qV.extend({
        elements: a.elementsFromImages("bowlback", "spoon", "bowlfront"),
        onLoadComplete() {
            s.set(".e.bowlback", {
                y: 2
            }), s.set(".e.spoon", {
                x: 150,
                y: -750,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.spoon", {
                x: -150
            }).to(".e.spoon", {
                x: 150
            }).to(".e.spoon", {
                x: -150
            }).to(".e.spoon", {
                x: 150
            })
        },
        onStartProgress() {
            s.to(".e.spoon", {
                y: -200,
                opacity: 1,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.spoon", {
                y: -750,
                opacity: 0,
                duration: .25
            })
        }
    }),
    gU = qV.extend({
        elements: a.elementsFromImages("pour"),
        onStartProgress() {
            a.startHoldShake("pour")
        },
        onStopProgress() {
            a.stopHoldShake("pour")
        }
    }),
    yU = qV.extend({
        stepDuration: .5,
        elements: [...a.elementsFromImages("pan"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [-40, 0]
        }],
        onLoadComplete() {
            s.set(".e.pan", {
                x: -5,
                y: 85
            })
        },
        initializeTimeline() {
            a.addParticleEmitter({
                numberOfParticles: 4,
                container: "particles",
                autoplay: !1,
                zIndex: 1,
                restartOnProgress: !0,
                settings: {
                    from: {
                        backgroundColor: "#ffcd69",
                        border: "2px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    particleLimit: 4,
                    minSize: 35,
                    maxSize: 55,
                    randomAngle: !0,
                    randomAngleRange: -90,
                    force: 5,
                    gravity: 9.8
                }
            }, this)
        }
    }),
    bU = qV.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("pan", "oven"),
        onLoadComplete() {
            s.set(".e.pan", {
                x: -5,
                y: 85
            }), s.set(".e.oven", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.oven", {
                opacity: 1,
                duration: .5
            })
        }
    }),
    vU = qV.extend({
        lastStepDuration: .75,
        elements: a.elementsFromImages("timer", "dial"),
        onProgress(t) {
            s.to(".e.dial", {
                rotation: -2.7 * t
            })
        }
    }),
    gV = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/1d3deaa0.png", self.location).href,
            notoil: new URL("main/pp7/everyday/assets/156f6cfc.png", self.location).href,
            note: new URL("main/pp7/everyday/assets/86c54637.png", self.location).href,
            nutbg: new URL("main/pp7/everyday/assets/ab949456.png", self.location).href,
            nutspin: new URL("main/pp7/everyday/assets/a0fd2b18.png", self.location).href,
            pan: new URL("main/pp7/everyday/assets/60e53ebf.png", self.location).href,
            pouring: new URL("main/pp7/everyday/assets/4ae70ca1.png", self.location).href
        }
    }),
    wU = gV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pan", "car"),
        onLoadComplete() {
            s.set(".e.pan", {
                y: 750
            })
        },
        onDiscreteProgress() {
            s.to(".e.pan", {
                y: 0,
                duration: .25
            })
        }
    }),
    xU = gV.extend({
        lastStepDuration: .5,
        elements: a.elementsFromImages("nutbg", "nutspin"),
        onProgress(t) {
            s.to(".e.nutspin", {
                rotation: -t * 2
            }), t >= 100 && s.to(".e.nutspin", {
                opacity: 0,
                duration: .25
            })
        }
    }),
    kU = gV.extend({
        elements: [...a.elementsFromImages("pouring"), {
            type: "div",
            class: "particles",
            pos: [125, -20]
        }],
        initializeTimeline() {
            a.addParticleEmitter({
                numberOfParticles: 45,
                container: "particles",
                autoplay: !0,
                zIndex: 1,
                settings: {
                    frequency: .2,
                    from: {
                        backgroundColor: "#33ccff",
                        border: "4px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .5,
                        opacity: 0
                    },
                    minSize: 25,
                    maxSize: 50,
                    randomAngleRange: 90,
                    force: 1,
                    gravity: -.5
                }
            }, this)
        }
    }),
    CU = gV.extend({
        elements: [...a.elementsFromImages("notoil", "pouring"), {
            type: "div",
            class: "particles",
            pos: [125, -20]
        }],
        onLoadComplete() {
            s.set(".e.notoil", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.emitter = a.addParticleEmitter({
                numberOfParticles: 45,
                container: "particles",
                autoplay: !0,
                zIndex: 1,
                settings: {
                    frequency: .2,
                    from: {
                        backgroundColor: "#33ccff",
                        border: "4px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .5,
                        opacity: 0
                    },
                    minSize: 25,
                    maxSize: 50,
                    randomAngleRange: 90,
                    force: 1,
                    gravity: -.5
                }
            }, this), this.timeline.to(".e.pouring", {
                x: 10,
                y: 5,
                scale: 1.175
            }).to(".e.notoil", {
                opacity: 1
            }).to(".e.pouring", {
                opacity: 0
            }, "<")
        },
        onStartProgress() {
            this.emitter.pause()
        },
        onStopProgress() {
            this.emitter.play()
        }
    }),
    RU = gV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("note"),
        onDiscreteProgress() {
            a.scaleBounce("note")
        }
    }),
    _A = E.extend({
        imageManifest: {
            folded: new URL("main/pp7/everyday/assets/3fff772f.png", self.location).href,
            fold1: new URL("main/pp7/everyday/assets/db6c9d63.png", self.location).href,
            fold2: new URL("main/pp7/everyday/assets/47421361.png", self.location).href,
            fold3: new URL("main/pp7/everyday/assets/ea34e6bc.png", self.location).href,
            fold4: new URL("main/pp7/everyday/assets/194e7979.png", self.location).href,
            fold5: new URL("main/pp7/everyday/assets/4464c311.png", self.location).href,
            fold6: new URL("main/pp7/everyday/assets/38380588.png", self.location).href,
            fold7: new URL("main/pp7/everyday/assets/1762d6fb.png", self.location).href,
            flat: new URL("main/pp7/everyday/assets/05e30074.png", self.location).href,
            rolled: new URL("main/pp7/everyday/assets/99530203.png", self.location).href
        }
    }),
    DU = _A.extend({
        elements: a.elementsFromImages(["folded", null, [100, 0]]),
        onStartProgress() {
            a.startHoldShake("folded")
        },
        onStopProgress() {
            a.stopHoldShake("folded")
        }
    }),
    SU = _A.extend({
        stepDuration: .45,
        elements: a.elementsFromImages(["folded", null, [100, 0]], ["flat", null, [100, 0]]),
        onLoadComplete() {
            s.set(".e.toothpaste-container", {
                y: 100
            }), s.set(".e.flat", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flat", {
                opacity: 1,
                ease: "none"
            }).to(".e.folded", {
                opacity: 0,
                ease: "none"
            }, "<")
        }
    }),
    TU = _A.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["flat", null, [100, 0]], ["fold1", null, [100, 0]], ["fold2", null, [100, 0]], ["fold3", null, [100, 0]], ["fold4", null, [100, 0]], ["fold5", null, [100, 0]], ["fold6", null, [100, 0]], ["fold7", null, [100, 0]], ["rolled", null, [100, 0]]),
        onLoadComplete() {
            s.set(".e.toothpaste-container", {
                y: 100
            }), s.set([".e.fold1", ".e.fold2", ".e.fold3", ".e.fold4", ".e.fold5", ".e.fold6", ".e.fold7", ".e.rolled"], {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.fold7", {
                opacity: 1
            }).to(".e.flat", {
                opacity: 0
            }).to(".e.fold6", {
                opacity: 1
            }).to(".e.fold7", {
                opacity: 0
            }).to(".e.fold5", {
                opacity: 1
            }).to(".e.fold6", {
                opacity: 0
            }).to(".e.fold4", {
                opacity: 1
            }).to(".e.fold5", {
                opacity: 0
            }).to(".e.fold3", {
                opacity: 1
            }).to(".e.fold4", {
                opacity: 0
            }).to(".e.fold2", {
                opacity: 1
            }).to(".e.fold3", {
                opacity: 0
            }).to(".e.fold1", {
                opacity: 1
            }).to(".e.fold2", {
                opacity: 0
            }).to(".e.rolled", {
                opacity: 1
            }).to(".e.fold1", {
                opacity: 0
            });
            this.timeline.add(t)
        }
    }),
    EU = _A.extend({
        elements: a.elementsFromImages(["rolled", null, [100, 0]]),
        onStartProgress() {
            a.startHoldShake("rolled")
        },
        onStopProgress() {
            a.stopHoldShake("rolled")
        }
    }),
    yV = E.extend({
        imageManifest: {
            power: new URL("main/pp7/everyday/assets/02bc5524.png", self.location).href,
            project: new URL("main/pp7/everyday/assets/59b0d3d0.png", self.location).href,
            sweep: new URL("main/pp7/everyday/assets/348458eb.png", self.location).href,
            vacin: new URL("main/pp7/everyday/assets/c09a5c44.png", self.location).href,
            vacout: new URL("main/pp7/everyday/assets/d465acd8.png", self.location).href
        }
    }),
    LU = yV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("project"),
        onDiscreteProgress() {
            a.scaleBounce("project")
        }
    }),
    BU = yV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["sweep", "devil"], ["sweep", "dust"]),
        onLoadComplete() {
            s.set(".e.devil", {
                clip: "rect(0px 600px 1000px 0px)"
            }), s.set(".e.dust", {
                clip: "rect(0px 1000px 1000px 600px)"
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".e.devil", {
                x: 45
            }).to(".e.dust", {
                x: t * 5
            }, "<").to(".e.devil", {
                x: 0
            })
        }
    }),
    MU = yV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("vacout", "power"),
        onLoadComplete() {
            s.set(".e.vacout", {
                scale: .1
            }), s.set(".e.power", {
                y: -200
            })
        },
        onDiscreteProgress() {
            s.set(".e.power", {
                visibility: "hidden"
            }), s.to(".e.vacout", {
                scale: 1
            }), a.startShake("vacout", 10, 10, 2)
        }
    }),
    OU = yV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("vacout", "vacin"),
        onLoadComplete() {
            a.startShake("vacout", 10, 10, 2), s.set(".e.vacin", {
                scale: .1,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.vacout", {
                scale: .1,
                opacity: 0
            }).to(".e.vacin", {
                scale: 1,
                opacity: 1
            }), a.startShake("vacin", 2, 2, 1.5)
        }
    }),
    IU = yV.extend({
        elements: a.elementsFromImages(["sweep", "dust1"], ["sweep", "dust2"], ["sweep", "dust3"], ["sweep", "dust4"], ["sweep", "dust5"]),
        onLoadComplete() {
            s.set(".e.dust1", {
                clip: "rect(0px 1000px 1000px 600px)",
                x: -543,
                y: 200
            }), s.set(".e.dust2", {
                clip: "rect(0px 1000px 1000px 600px)",
                x: -357,
                y: -124
            }), s.set(".e.dust3", {
                clip: "rect(0px 1000px 1000px 600px)",
                x: 105,
                y: -523
            }), s.set(".e.dust4", {
                clip: "rect(0px 1000px 1000px 600px)",
                x: -468,
                y: -600
            }), s.set(".e.dust5", {
                clip: "rect(0px 1000px 1000px 600px)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dust1", {
                scaleX: .5,
                scaleY: 3,
                y: -3e3
            }).to(".e.dust2", {
                scaleX: .5,
                scaleY: 3,
                y: -3e3
            }).to(".e.dust3", {
                scaleX: .5,
                scaleY: 3,
                y: -3e3
            }).to(".e.dust4", {
                scaleX: .5,
                scaleY: 3,
                y: -3e3
            }).to(".e.dust5", {
                scaleX: .5,
                scaleY: 3,
                y: -3e3
            })
        }
    }),
    bV = E.extend({
        imageManifest: {
            window: new URL("main/pp7/everyday/assets/fabd9bc9.png", self.location).href,
            screen: new URL("main/pp7/everyday/assets/e312b0d5.png", self.location).href,
            torn: new URL("main/pp7/everyday/assets/69257dd8.png", self.location).href
        }
    }),
    PU = bV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("window", ["torn", null, [499, 294]]),
        initializeTimeline() {
            this.timeline.to(".e.torn", {
                x: -300,
                opacity: 0
            })
        }
    }),
    UU = bV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("window", ["screen", null, [499, 294]]),
        onLoadComplete() {
            s.set(".e.screen", {
                x: -300,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.screen", {
                x: 0,
                opacity: 1
            })
        }
    }),
    FU = bV.extend({
        elements: a.elementsFromImages("window", ["screen", null, [499, 294]]),
        initializeTimeline() {
            this.timeline.to(".e.window", {
                x: 100,
                scale: .7
            }).to(".e.screen", {
                scale: 1.2,
                rotate: 180
            }, "<")
        }
    }),
    jU = bV.extend({
        elements: a.elementsFromImages("window", ["screen", null, [499, 294]]),
        onLoadComplete() {
            s.set(".e.window", {
                x: 100,
                scale: .7
            }), s.set(".e.screen", {
                scale: 1.2,
                rotate: 180
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.screen", {
                rotate: 0
            })
        }
    }),
    QU = bV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("window", ["screen", null, [499, 294]]),
        onLoadComplete() {
            s.set(".e.window", {
                x: 100,
                scale: .7
            }), s.set(".e.screen", {
                scale: 1.2,
                rotate: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.window", {
                x: 0,
                scale: 1
            }).to(".e.screen", {
                scale: 1
            }, "<")
        }
    }),
    D0 = E.extend({
        imageManifest: {
            legs: new URL("main/pp7/everyday/assets/50a55f32.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "legs",
                images: {
                    lotion: [879, 630, 136, 146, 392, 455],
                    legOff: [10, 10, 930, 610, 182, 28],
                    legOn: [10, 630, 859, 551, 181, 27]
                }
            }
        }
    }),
    zU = D0.extend({
        stepDuration: .3,
        elements: a.elementsFromSprite("sprite", ["legOn", "lotion"]),
        onLoadComplete() {
            s.set(".e.lotion", {
                y: -200,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.lotion", {
                opacity: 1,
                duration: .25
            }).to(".e.lotion", {
                y: 0,
                ease: "none"
            }, "<").to(".e.lotion", {
                scaleY: .8,
                duration: .15,
                ease: "none",
                transformOrigin: "center bottom"
            }).to(".e.lotion", {
                scaleY: 1,
                duration: .15,
                ease: "none"
            })
        }
    }),
    HU = D0.extend({
        elements: a.elementsFromSprite("sprite", ["legOn", "lotion"]),
        initializeTimeline() {
            this.timeline.to(".e.lotion", {
                opacity: 0
            })
        }
    }),
    NU = D0.extend({
        elements: a.elementsFromSprite("sprite", ["legOff", "legOn"]),
        onLoadComplete() {
            s.set(".e.legOn", {
                opacity: 1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.legOn", {
                opacity: 0
            })
        }
    }),
    Pa = E.extend({
        imageManifest: {
            closed: new URL("main/pp7/everyday/assets/f3b890a6.png", self.location).href,
            family: new URL("main/pp7/everyday/assets/efe6e072.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/aa3e8fa6.png", self.location).href,
            pic1: new URL("main/pp7/everyday/assets/5ee5c64a.png", self.location).href,
            pic2: new URL("main/pp7/everyday/assets/11c8774c.png", self.location).href,
            pic3: new URL("main/pp7/everyday/assets/4cab981a.png", self.location).href,
            scarf: new URL("main/pp7/everyday/assets/67348872.png", self.location).href,
            tear: new URL("main/pp7/everyday/assets/58094c27.png", self.location).href
        }
    }),
    GU = Pa.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("closed", "open"),
        onLoadComplete() {
            s.set(".e.open", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("closed", "open", .5)).to(".e.open", {
                scale: 3,
                opacity: 0,
                delay: .25
            })
        }
    }),
    XU = Pa.extend({
        elements: a.elementsFromImages("pic1", "pic2", "pic3"),
        onLoadComplete() {
            s.set(".e.pic1", {
                x: -275,
                y: -50,
                rotation: 2
            }), s.set(".e.pic2", {
                y: 100,
                rotation: -5
            }), s.set(".e.pic3", {
                x: 275,
                y: -50,
                rotation: -3
            }), s.fromTo([".e.pic1", ".e.pic2", ".e.pic3"], {
                scale: .5,
                opacity: 0
            }, {
                opacity: 1
            })
        }
    }),
    YU = Pa.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pic1", "pic2", "pic3"),
        onLoadComplete() {
            s.set(".e.pic1", {
                x: -275,
                y: -50,
                rotation: 2
            }), s.set(".e.pic2", {
                y: 100,
                rotation: -5
            }), s.set(".e.pic3", {
                x: 275,
                y: -50,
                rotation: -3
            }), s.set([".e.pic1", ".e.pic2", ".e.pic3"], {
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to([".e.pic1", ".e.pic2", ".e.pic3"], {
                opacity: 0
            })
        }
    }),
    KU = Pa.extend({
        elements: a.elementsFromImages(["scarf", "scarf1"], "family", ["scarf", "scarf2"]),
        onLoadComplete() {
            s.set(".e.scarf1", {
                x: -200,
                y: -300,
                rotation: 5,
                scale: .4
            }), s.set(".e.family", {
                y: 100,
                scale: .75
            }), s.set(".e.scarf2", {
                x: 200,
                y: -300,
                rotation: -5,
                scaleX: -.4,
                scaleY: .4
            }), s.fromTo([".e.scarf1", ".e.family", ".e.scarf2"], {
                opacity: 0
            }, {
                opacity: 1
            })
        }
    }),
    WU = Pa.extend({
        stepDuration: 1.25,
        elements: a.elementsFromImages(["scarf", "scarf1"], "family", ["scarf", "scarf2"], "open", "closed"),
        onLoadComplete() {
            s.set(".e.closed", {
                hidden: !0
            }), s.set(".e.open", {
                scale: 3,
                opacity: 0
            }), s.set(".e.scarf1", {
                x: -200,
                y: -300,
                rotation: 5,
                scale: .4
            }), s.set(".e.family", {
                y: 100,
                scale: .75
            }), s.set(".e.scarf2", {
                x: 200,
                y: -300,
                rotation: -5,
                scaleX: -.4,
                scaleY: .4
            })
        },
        initializeTimeline() {
            this.timeline.to([".e.scarf1", ".e.family", ".e.scarf2"], {
                opacity: 0
            }).to(".e.open", {
                scale: 1,
                opacity: 1
            }).add(a.squashTransition("open", "closed", .5))
        }
    }),
    JU = Pa.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("tear"),
        initializeTimeline() {
            this.timeline.to(".e.tear", {
                x: -500,
                y: 100,
                rotation: 90,
                opacity: 0
            })
        }
    }),
    W2 = E.extend({
        imageManifest: {
            bolts: new URL("main/pp7/everyday/assets/a16b74d3.png", self.location).href,
            carJack: new URL("main/pp7/everyday/assets/a8f1b6f8.png", self.location).href,
            noTire: new URL("main/pp7/everyday/assets/b7d92f75.png", self.location).href,
            tire: new URL("main/pp7/everyday/assets/60f5fb1e.png", self.location).href
        }
    }),
    J2 = W2.extend({
        elements: a.elementsFromImages("noTire", "tire", "bolts", "bolts", "bolts", "bolts"),
        initializeTimeline() {
            const t = document.querySelectorAll(".e.bolts");
            s.set(".e.tire", {
                y: 20
            }), s.set(t, {
                scale: .5
            }), s.set(t[3], {
                x: 10,
                y: 70
            }), s.set(t[2], {
                x: 50,
                y: 70
            }), s.set(t[1], {
                x: 30,
                y: 50
            }), s.set(t[0], {
                x: 30,
                y: 90
            }), this.timeline.to(t, {
                x: 250,
                opacity: 0,
                stagger: .25
            })
        }
    }),
    ZU = W2.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("noTire", "tire"),
        initializeTimeline() {
            s.set(".e.tire", {
                y: 20
            }), this.timeline.to(".e.tire", {
                x: 250,
                opacity: 0
            }), this.timeline.to(".e.tire", {
                x: 0,
                opacity: 1
            })
        }
    }),
    _U = J2.extend({
        elements: a.elementsFromImages("noTire", "tire", "bolts", "bolts", "bolts", "bolts"),
        initializeTimeline() {
            const t = document.querySelectorAll(".e.bolts");
            s.set(".e.tire", {
                y: 20
            }), s.set(t, {
                scale: .5
            }), s.set(t[3], {
                x: 10,
                y: 70
            }), s.set(t[2], {
                x: 50,
                y: 70
            }), s.set(t[1], {
                x: 30,
                y: 50
            }), s.set(t[0], {
                x: 30,
                y: 90
            }), this.timeline.from(t, {
                x: 250,
                opacity: 0,
                stagger: .25
            })
        }
    }),
    S0 = E.extend({
        imageManifest: {
            loveLetter: new URL("main/pp7/everyday/assets/a1040668.png", self.location).href,
            junkMail1: new URL("main/pp7/everyday/assets/198b29d3.png", self.location).href,
            junkMail2: new URL("main/pp7/everyday/assets/07800c75.png", self.location).href,
            bill: new URL("main/pp7/everyday/assets/97278a97.png", self.location).href,
            lateNotice: new URL("main/pp7/everyday/assets/bdc99ef1.png", self.location).href
        }
    }),
    $U = S0.extend({
        elements: [{
            class: "mail-container",
            type: "container",
            children: [{
                class: "bill",
                type: "img",
                pos: [0, 0],
                key: "bill"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.timeline().to(".bill", {
                repeat: -1,
                yoyo: !0,
                scale: 1.04,
                duration: .4
            }), s.timeline().fromTo(".mail-container", {
                rotate: -3
            }, {
                repeat: -1,
                yoyo: !0,
                rotate: 4,
                duration: 1.5,
                ease: "power3.out"
            });
            const t = s.timeline().to(".bill", {
                y: -3e3,
                duration: .2,
                ease: "power1.out"
            }, 0);
            this.timeline.add(t)
        }
    }),
    eF = S0.extend({
        elements: [{
            class: "mail-container",
            type: "container",
            children: [{
                class: "junkMail2",
                type: "img",
                pos: [0, 0],
                key: "junkMail2"
            }, {
                class: "junkMail1",
                type: "img",
                pos: [0, 0],
                key: "junkMail1"
            }]
        }],
        stepDuration: .5,
        initializeTimeline() {
            s.to(".mail-container", {
                scale: .8,
                duration: 0
            }), s.to(".junkMail1", {
                yoyo: !0,
                rotate: -15,
                y: 350,
                x: -50,
                duration: .4
            }), s.to(".junkMail2", {
                yoyo: !0,
                rotate: 15,
                y: -250,
                x: 50,
                duration: .4
            });
            const t = s.timeline().to(".junkMail1", {
                x: 3e3,
                y: -2e3,
                duration: 2,
                ease: "power1.inOut"
            }, 0).to(".junkMail2", {
                x: -3e3,
                y: 2e3,
                duration: 2,
                ease: "power1.inOut"
            }, 0);
            this.timeline.add(t)
        }
    }),
    tF = S0.extend({
        elements: [{
            class: "mail-container",
            type: "container",
            children: [{
                class: "loveLetter",
                type: "img",
                pos: [0, 0],
                key: "loveLetter"
            }]
        }],
        stepDuration: 3,
        initializeTimeline() {
            s.timeline().to(".loveLetter", {
                repeat: -1,
                yoyo: !0,
                scale: 1.04,
                duration: 1.4
            }), s.timeline().fromTo(".mail-container", {
                rotate: -3
            }, {
                repeat: -1,
                yoyo: !0,
                rotate: 4,
                duration: 2.5,
                ease: "power3:inOut"
            })
        }
    }),
    $A = E.extend({
        imageManifest: {
            importantDocument: new URL("main/pp7/everyday/assets/362d7732.png", self.location).href,
            sig: new URL("main/pp7/everyday/assets/907b42db.png", self.location).href,
            stack0: new URL("main/pp7/everyday/assets/11542624.png", self.location).href,
            stack1: new URL("main/pp7/everyday/assets/b080a01e.png", self.location).href,
            stack2: new URL("main/pp7/everyday/assets/cc7fb9c9.png", self.location).href,
            stack3: new URL("main/pp7/everyday/assets/021c501d.png", self.location).href,
            stack4: new URL("main/pp7/everyday/assets/6e916418.png", self.location).href,
            dep0: new URL("main/pp7/everyday/assets/9f870fdc.png", self.location).href,
            dep1: new URL("main/pp7/everyday/assets/1dcb1a77.png", self.location).href,
            dep2: new URL("main/pp7/everyday/assets/2d869159.png", self.location).href,
            dep3: new URL("main/pp7/everyday/assets/1fef37c5.png", self.location).href
        }
    }),
    nF = $A.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("stack0", ["stack1", null, [0, 800]], ["stack2", null, [0, 800]], ["stack3", null, [0, 800]], ["stack4", null, [0, 800]]),
        onLoadComplete() {
            s.set([".e.stack1", ".e.stack2", ".e.stack3", ".e.stack4"], {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.stack0", {
                opacity: 0
            }).to(".e.stack1", {
                x: -800,
                opacity: 1,
                ease: "power3.out"
            }, "<").to(".e.stack2", {
                x: -800,
                opacity: 1,
                ease: "power3.out"
            }).to(".e.stack3", {
                x: -800,
                opacity: 1,
                ease: "power3.out"
            }).to(".e.stack4", {
                x: -800,
                opacity: 1,
                ease: "power3.out"
            });
            this.timeline.add(t)
        }
    }),
    iF = $A.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("dep0", "dep1", "dep2", "dep3"),
        onLoadComplete() {
            s.set([".e.dep1", ".e.dep2", ".e.dep3"], {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.dep1", {
                opacity: 1
            }).to(".e.dep2", {
                opacity: 1
            }).to(".e.dep3", {
                opacity: 1
            });
            this.timeline.add(t)
        }
    }),
    sF = $A.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("stack1", "stack2", "stack3", "stack4"),
        initializeTimeline() {
            const t = s.timeline().to(".e.stack1", {
                opacity: 0,
                ease: "power3.out"
            }).to(".e.stack2", {
                opacity: 0,
                ease: "power3.out"
            }, "<").to(".e.stack3", {
                y: 300,
                ease: "power3.out"
            }, "<").to(".e.stack4", {
                y: 300,
                ease: "power3.out"
            }, "<");
            this.timeline.add(t)
        }
    }),
    oF = $A.extend({
        elements: [{
            class: "doc-container",
            type: "container",
            children: a.elementsFromImages("importantDocument", "sig")
        }],
        onLoadComplete() {
            s.set(".e.sig", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sig", {
                opacity: 1
            })
        },
        onStartProgress() {
            a.startHoldShake("doc-container", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("doc-container", 2, 1)
        }
    }),
    ec = E.extend({
        imageManifest: {
            nest1: new URL("main/pp7/everyday/assets/2e842b07.png", self.location).href,
            nest2: new URL("main/pp7/everyday/assets/d6cba2c5.png", self.location).href,
            nest3: new URL("main/pp7/everyday/assets/26d613a7.png", self.location).href,
            Bird: new URL("main/pp7/everyday/assets/ff20b8dd.png", self.location).href,
            Cowering: new URL("main/pp7/everyday/assets/aa639ba1.png", self.location).href,
            Lease: new URL("main/pp7/everyday/assets/98c5bb08.png", self.location).href
        }
    }),
    aF = ec.extend({
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "nest1",
                type: "img",
                pos: [0, 0],
                key: "nest1"
            }, {
                class: "nest2",
                type: "img",
                pos: [80, -200],
                key: "nest2"
            }, {
                class: "nest3",
                type: "img",
                pos: [110, 200],
                key: "nest3"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.nest1", {
                opacity: 1,
                scale: 1.5
            }), s.set(".e.nest2", {
                opacity: 0,
                scale: 1.5,
                rotate: -10
            }), s.set(".e.nest3", {
                opacity: 0,
                scale: 1.5,
                rotate: 10
            });
            const t = s.timeline().to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 0).to(".e.nest1", {
                opacity: 1,
                scale: 1,
                y: -50,
                ease: "elastic.inOut"
            }, 0).to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 1).to(".e.nest2", {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, 1).to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 2).to(".e.nest3", {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, 2);
            this.timeline.add(t)
        }
    }),
    rF = ec.extend({
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "Bird",
                type: "img",
                pos: [0, 0],
                key: "Bird"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.Bird", {
                scale: .6
            });
            const t = s.timeline().to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 0).to(".e.Bird", {
                opacity: .9,
                scale: 1,
                rotate: 10,
                ease: "elastic.inOut"
            }, 0).to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 1).to(".e.Bird", {
                opacity: 1,
                scale: 1.4,
                x: -50,
                rotate: -25,
                ease: "elastic.inOut"
            }, 1).to(".attic-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 2).to(".e.Bird", {
                opacity: 0,
                scale: 1.8,
                x: 50,
                rotate: 25,
                ease: "elastic.inOut"
            }, 2);
            this.timeline.add(t)
        }
    }),
    VF = ec.extend({
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "Cowering",
                type: "img",
                pos: [0, 0],
                key: "Cowering"
            }]
        }],
        initializeTimeline() {
            s.timeline().to(".e.Cowering", {
                repeat: -1,
                yoyo: !0,
                duration: .1,
                ease: "linear",
                x: `+=${X.exports.random(-30,30)}`,
                y: `+=${X.exports.random(-30,30)}`
            })
        }
    }),
    lF = ec.extend({
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "Lease",
                type: "img",
                pos: [0, 0],
                key: "Lease"
            }]
        }],
        stepDuration: 2,
        initializeTimeline() {
            s.set(".e.Lease", {
                scale: 1.3,
                rotate: -10,
                y: 500,
                x: 120
            });
            const t = s.timeline().to(".e.Lease", {
                scale: 1,
                y: 0,
                x: 0,
                rotate: 10,
                ease: "back.inOut",
                duration: 2
            }, 0);
            this.timeline.add(t)
        }
    }),
    T0 = E.extend({
        imageManifest: {
            counterClean: new URL("main/pp7/everyday/assets/8186be87.png", self.location).href,
            counterCleaner: new URL("main/pp7/everyday/assets/e8bc6900.png", self.location).href,
            counterOkay: new URL("main/pp7/everyday/assets/81177543.png", self.location).href,
            counterDirty: new URL("main/pp7/everyday/assets/19345600.png", self.location).href
        }
    }),
    AF = T0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("counterOkay", "counterDirty"),
        initializeTimeline() {
            this.timeline.to(".e.counterDirty", {
                x: 25,
                y: -75
            }).to(".e.counterDirty", {
                x: -50,
                y: 150,
                opacity: 0
            })
        }
    }),
    cF = K2,
    dF = T0.extend({
        elements: a.elementsFromImages("counterOkay", "counterCleaner"),
        onLoadComplete() {
            s.set(".e.counterCleaner", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.counterCleaner", {
                opacity: 1
            }).to(".e.counterOkay", {
                opacity: 0,
                duration: .2
            }, .8)
        }
    }),
    pF = T0.extend({
        elements: a.elementsFromImages("counterCleaner", "counterClean"),
        onLoadComplete() {
            s.set(".e.counterClean", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.counterClean", {
                opacity: 1
            }).to(".e.counterCleaner", {
                opacity: 0,
                duration: .2
            }, .8)
        }
    }),
    E0 = E.extend({
        imageManifest: {
            jelly: new URL("main/pp7/everyday/assets/83edece7.png", self.location).href,
            lamp: new URL("main/pp7/everyday/assets/e3058dc9.png", self.location).href,
            picture: new URL("main/pp7/everyday/assets/12a422d4.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/248d19dc.png", self.location).href,
            vase: new URL("main/pp7/everyday/assets/93778227.png", self.location).href
        }
    }),
    hF = E0.extend({
        elements: a.elementsFromImages("tv", ["jelly", "jelly1"], ["jelly", "jelly2"]),
        onLoadComplete() {
            s.set(".e.tv", {
                scale: .9
            }), s.set(".e.jelly1", {
                x: -250,
                y: 80,
                scale: .8
            }), s.set(".e.jelly2", {
                x: 400,
                y: -275,
                scale: 1.1,
                rotate: 150
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.jelly2", {
                opacity: 0
            }).to(".e.jelly1", {
                opacity: 0
            }).to(".tv", {
                scale: 1,
                duration: .25
            }).to(".tv", {
                scale: .9,
                duration: .25
            })
        },
        onStartProgress() {
            a.startShake("jelly1"), a.startShake("jelly2")
        },
        onStopProgress() {
            a.stopShake("jelly1"), a.stopShake("jelly2")
        }
    }),
    uF = E0.extend({
        elements: a.elementsFromImages("lamp", ["jelly", "jelly1"], ["jelly", "jelly2"]),
        onLoadComplete() {
            s.set(".e.lamp", {
                scale: .9
            }), s.set(".e.jelly1", {
                x: -190,
                y: -100,
                rotate: -30
            }), s.set(".e.jelly2", {
                x: 200,
                y: -250,
                rotate: 150,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.jelly2", {
                opacity: 0
            }).to(".e.jelly1", {
                opacity: 0
            }).to(".lamp", {
                scale: 1,
                duration: .25
            }).to(".lamp", {
                scale: .9,
                duration: .25
            })
        },
        onStartProgress() {
            a.startShake("jelly1"), a.startShake("jelly2")
        },
        onStopProgress() {
            a.stopShake("jelly1"), a.stopShake("jelly2")
        }
    }),
    mF = E0.extend({
        elements: a.elementsFromImages("picture", ["jelly", "jelly3"], "vase", ["jelly", "jelly1"], ["jelly", "jelly2"]),
        onLoadComplete() {
            s.set(".e.picture", {
                scale: .9
            }), s.set(".e.vase", {
                scale: .5,
                y: 250,
                x: 150
            }), s.set(".e.jelly1", {
                x: -150,
                y: 50
            }), s.set(".e.jelly2", {
                x: 300,
                y: -200,
                scale: .6,
                rotate: 150
            }), s.set(".e.jelly3", {
                scale: .5,
                x: 150,
                y: 230
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.jelly2", {
                opacity: 0
            }).to(".e.jelly1", {
                opacity: 0
            }).to(".picture", {
                scale: 1,
                duration: .25
            }).to(".picture", {
                scale: .9,
                duration: .25
            }).to(".vase", {
                rotate: 5
            }).to(".vase", {
                rotate: -5
            }).to(".vase", {
                rotate: 0
            }).to(".jelly3", {
                y: -40,
                scaleY: .7
            }).to(".jelly3", {
                y: -10,
                scaleY: .5
            }).to(".jelly3", {
                opacity: 0
            }, "+=.25").to(".vae", {
                scale: .6
            }).to(".vae", {
                scale: .5
            })
        },
        onStartProgress() {
            a.startShake("jelly1"), a.startShake("jelly2")
        },
        onStopProgress() {
            a.stopShake("jelly1"), a.stopShake("jelly2")
        }
    }),
    fF = E.extend({
        imageManifest: {
            armchair: new URL("main/pp7/everyday/assets/b9fe63d2.png", self.location).href
        }
    }),
    Ua = fF.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("armchair"),
        initializeTimeline() {
            this.timeline.to(".e.armchair", {
                x: -100
            })
        }
    }),
    qF = Ua.extend({
        stepDuration: .25,
        initializeTimeline() {
            s.set(".e.armchair", {
                x: -100
            }), this.timeline.to(".e.armchair", {
                x: -200
            })
        }
    }),
    gF = Ua.extend({
        stepDuration: .25,
        initializeTimeline() {
            s.set(".e.armchair", {
                x: -200
            }), this.timeline.to(".e.armchair", {
                x: -300
            })
        }
    }),
    yF = Ua.extend({
        stepDuration: .25,
        initializeTimeline() {
            s.set(".e.armchair", {
                x: -300
            }), this.timeline.to(".e.armchair", {
                x: -400
            })
        }
    }),
    bF = Ua.extend({
        initializeTimeline() {
            s.set(".e.armchair", {
                x: -400
            })
        },
        onStartProgress() {
            a.startHoldShake("armchair", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("armchair", 2, 1)
        }
    }),
    vF = Ua.extend({
        initializeTimeline() {
            s.set(".e.armchair", {
                x: -400
            }), this.timeline.to(".e.armchair", {
                x: 0
            })
        }
    }),
    wF = E.extend({
        imageManifest: {
            grill: new URL("main/pp7/everyday/assets/fac3af30.png", self.location).href,
            meat1: new URL("main/pp7/everyday/assets/dfda7645.png", self.location).href,
            meat2: new URL("main/pp7/everyday/assets/0be550fc.png", self.location).href,
            meat3: new URL("main/pp7/everyday/assets/0ff525f5.png", self.location).href,
            meat4: new URL("main/pp7/everyday/assets/832de11e.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "grill-container",
            children: [{
                type: "img",
                pos: [0, 0],
                key: "grill",
                class: "grill"
            }, {
                type: "img",
                pos: [0, 0],
                key: "meat1",
                class: "meat1"
            }, {
                type: "img",
                pos: [0, 0],
                key: "meat2",
                class: "meat2"
            }, {
                type: "img",
                pos: [0, 0],
                key: "meat3",
                class: "meat3"
            }, {
                type: "img",
                pos: [0, 0],
                key: "meat4",
                class: "meat4"
            }, {
                type: "img",
                pos: [0, 0],
                key: "meat2",
                class: "meat5"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.fromTo(".e.meat1", {
                x: -100,
                y: -90,
                opacity: 0,
                rotate: 40,
                scale: 1
            }, {
                opacity: 1,
                x: 50,
                y: -130,
                rotate: 0,
                scale: .3
            }, 0), this.timeline.fromTo(".e.meat2", {
                x: 100,
                y: -90,
                opacity: 0,
                rotate: -5,
                scale: 1
            }, {
                opacity: 1,
                x: -50,
                y: -130,
                rotate: 0,
                scale: .3
            }, "+=0.01"), this.timeline.fromTo(".e.meat3", {
                x: -50,
                y: -90,
                opacity: 0,
                rotate: 60,
                scale: 1
            }, {
                opacity: 1,
                x: 75,
                y: -110,
                rotate: 0,
                scale: .3
            }, "+=0.01"), this.timeline.fromTo(".e.meat4", {
                x: 50,
                y: -90,
                opacity: 0,
                rotate: -15,
                scale: 1
            }, {
                opacity: 1,
                x: -75,
                y: -110,
                rotate: 0,
                scale: .3,
                rotateZ: -15
            }, "+=0.01"), this.timeline.fromTo(".e.meat5", {
                x: 60,
                y: -90,
                opacity: 0,
                rotate: -15,
                scale: 1
            }, {
                opacity: 1,
                x: 0,
                y: -95,
                rotate: 0,
                scale: .3
            }, "+=0.01"), s.set(".e.meat1, .e.meat2, .e.meat3, .e.meat4, .e.meat5", {
                opacity: 0
            })
        }
    }),
    xF = E.extend({
        imageManifest: {
            meat: new URL("main/pp7/everyday/assets/832de11e.png", self.location).href
        },
        elements: [{
            type: "img",
            pos: [0, 0],
            key: "meat",
            class: "meat"
        }],
        stepDuration: 1,
        initializeTimeline() {
            this.timeline.to(".e.meat", {
                rotateX: 360
            })
        }
    }),
    ig = E.extend({
        imageManifest: {
            knob: new URL("main/pp7/everyday/assets/b9d8f184.png", self.location).href,
            offOnText: new URL("main/pp7/everyday/assets/31afe889.png", self.location).href
        },
        elements: [{
            type: "img",
            pos: [0, 0],
            key: "knob",
            class: "knob"
        }, {
            type: "img",
            pos: [0, 0],
            key: "offOnText",
            class: "offOnText"
        }],
        initializeTimeline() {
            this.timeline.from(".e.knob", {
                rotation: -90
            })
        }
    }),
    pu = yo.extend({
        imageManifest: {
            grill: new URL("main/pp7/everyday/assets/fac3af30.png", self.location).href,
            spark: new URL("main/pp7/everyday/assets/333dfa9f.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "grill-container",
            children: [{
                type: "img",
                pos: [0, 0],
                key: "grill",
                class: "grill"
            }, {
                type: "img",
                pos: [0, 0],
                key: "spark",
                class: "spark"
            }]
        }],
        initializeTimeline() {
            const t = document.querySelector(".e.spark");
            this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 40
            }, {
                opacity: 0,
                x: 50,
                y: -200
            }, 0), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: -15
            }, {
                opacity: 0,
                x: -150,
                y: -200
            }, "+=0.01"), s.set(t, {
                opacity: 0
            })
        }
    }),
    kF = pu.extend({
        elements: [{
            type: "container",
            class: "grill-container",
            children: [{
                type: "img",
                pos: [0, 0],
                key: "grill",
                class: "grill"
            }, {
                type: "img",
                pos: [0, 0],
                key: "spark",
                class: "spark1"
            }, {
                type: "img",
                pos: [0, 0],
                key: "spark",
                class: "spark2"
            }, {
                type: "img",
                pos: [0, 0],
                key: "spark",
                class: "spark3"
            }]
        }],
        initializeTimeline() {
            const t = document.querySelector(".e.spark1"),
                e = document.querySelector(".e.spark2"),
                n = document.querySelector(".e.spark3");
            this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 40
            }, {
                opacity: 0,
                x: 50,
                y: -200
            }, 0), this.timeline.fromTo(e, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: -15
            }, {
                opacity: 0,
                x: -150,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(e, {
                x: -10,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 10,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(e, {
                x: -15,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 25,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: -15
            }, {
                opacity: 0,
                x: -150,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(e, {
                x: -20,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 12,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 40
            }, {
                opacity: 0,
                x: 50,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(e, {
                x: -25,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 10,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), this.timeline.fromTo(t, {
                x: 0,
                y: -90,
                opacity: 1,
                rotate: 40
            }, {
                opacity: 0,
                x: 50,
                y: -200
            }, "+=0.01"), this.timeline.fromTo(e, {
                x: -10,
                y: -90,
                opacity: 1,
                rotate: -5
            }, {
                opacity: 0,
                x: -50,
                y: -200
            }, "<"), this.timeline.fromTo(n, {
                x: 12,
                y: -90,
                opacity: 1,
                rotate: 60
            }, {
                opacity: 0,
                x: 150,
                y: -200
            }, "<"), s.set(t, {
                opacity: 0
            }), s.set(e, {
                opacity: 0
            }), s.set(n, {
                opacity: 0
            })
        }
    }),
    Z2 = E.extend({
        imageManifest: {
            grill: new URL("main/pp7/everyday/assets/fac3af30.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/6a3d000a.png", self.location).href,
            extinguisher: new URL("main/pp7/everyday/assets/7302b4f1.png", self.location).href,
            smoke: new URL("main/pp7/everyday/assets/bdaa73dc.png", self.location).href
        },
        elements: [{
            type: "img",
            pos: [0, 0],
            key: "grill",
            class: "grill"
        }, {
            type: "container",
            class: "fire-container",
            pos: [100, 330],
            children: [{
                class: "fire",
                type: "img",
                pos: [0, 0],
                key: "fire"
            }]
        }, {
            type: "container",
            class: "ext-container",
            children: [{
                type: "img",
                pos: [-52, -505],
                key: "smoke",
                class: "smoke"
            }, {
                type: "img",
                pos: [0, 0],
                key: "extinguisher",
                class: "extinguisher"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.smoke", {
                display: "none"
            }), s.set(".e.fire-container", {
                height: 350,
                width: 350,
                scale: .8,
                overflow: "hidden"
            }), s.to(".e.fire", {
                x: -2999.5,
                duration: .5,
                ease: "steps(7)",
                repeat: -1
            });
            const t = s.timeline();
            t.fromTo(".e.ext-container", {
                x: "25%",
                y: "100%",
                rotate: -10,
                scale: 1.5,
                opacity: 0
            }, {
                x: "25%",
                y: "60%",
                opacity: 1,
                ease: "power1.inOut"
            }), t.fromTo(".e.ext-container", {
                x: "25%",
                y: "60%",
                rotate: -10,
                scale: 1.5
            }, {
                x: "25%",
                y: "55%",
                yoyo: !0,
                repeat: -1,
                ease: "power1.inOut"
            }), this.timeline.to(".e.ext-container", {
                x: "45%",
                y: "-10%",
                scale: .6,
                onComplete() {
                    s.killTweensOf("*")
                }
            })
        }
    }),
    CF = Z2.extend({
        initializeTimeline() {
            const t = document.querySelector(".e.fire-container"),
                e = document.querySelector(".e.fire"),
                n = document.querySelector(".e.smoke"),
                i = this.timeline;
            let o = 0;
            s.set(t, {
                height: 350,
                width: 350,
                scale: .8,
                overflow: "hidden"
            }), s.to(e, {
                x: -2999.5,
                duration: .5,
                ease: "steps(7)",
                repeat: -1
            }), this.timeline.set(".e.smoke", {
                opacity: 1
            }), this.timeline.to(".e.ext-container", {
                rotate: -20,
                yoyo: !0,
                repeat: 20,
                duration: .05,
                ease: "sine.inOut",
                onUpdate() {
                    i.progress() - o < 0 ? s.set(n, {
                        opacity: 0
                    }) : s.set(n, {
                        opacity: 1
                    }), o = i.progress()
                }
            }), this.timeline.to(".e.smoke", {
                opacity: 0,
                duration: .01
            }), this.timeline.to(e, {
                opacity: 0,
                duration: .5
            }, .5), s.set(n, {
                opacity: 0,
                scale: 1.5
            }), s.set(".e.ext-container", {
                x: "45%",
                y: "-10%",
                scale: .6,
                rotate: -10
            })
        }
    }),
    tc = E.extend({
        imageManifest: {
            capped: new URL("main/pp7/everyday/assets/bba04f77.png", self.location).href,
            timer: new URL("main/pp7/everyday/assets/5a6e824a.png", self.location).href,
            top: new URL("main/pp7/everyday/assets/19e59721.png", self.location).href,
            uncapped: new URL("main/pp7/everyday/assets/24ba3529.png", self.location).href,
            family: new URL("main/pp7/everyday/assets/ef245a24.png", self.location).href
        }
    }),
    RF = tc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("capped", "uncapped"),
        onLoadComplete() {
            s.set(".e.uncapped", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.uncapped", {
                opacity: 1
            })
        }
    }),
    DF = tc.extend({
        elements: a.elementsFromImages("uncapped"),
        initializeTimeline() {
            this.timeline.to(".e.uncapped", {
                rotate: 10
            }).to(".e.uncapped", {
                rotate: -10
            }).to(".e.uncapped", {
                rotate: 10
            }).to(".e.uncapped", {
                rotate: -10
            }).to(".e.uncapped", {
                rotate: 0
            })
        },
        onStartProgress() {
            s.to(".e.uncapped", {
                scale: .9
            })
        },
        onStopProgress() {
            s.to(".e.uncapped", {
                scale: 1
            })
        }
    }),
    SF = tc.extend({
        elements: a.elementsFromImages("top", ["timer", !1, [500, 70]]),
        initializeTimeline() {
            this.timeline.to(".e.timer", {
                rotate: 90
            })
        }
    }),
    _2 = tc.extend({
        elements: [{
            class: "family",
            type: "img",
            key: "family"
        }, {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3],
            html: ""
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            });
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }, 5).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 0,
                duration: 1
            }), this.timeline.add(t, 0)
        }
    }),
    $2 = E.extend({
        imageManifest: {
            liquor1: new URL("main/pp7/everyday/assets/c8e66dbd.png", self.location).href,
            liquor2: new URL("main/pp7/everyday/assets/faa67fa1.png", self.location).href,
            liquor3: new URL("main/pp7/everyday/assets/34a7d734.png", self.location).href,
            liquorshelf: new URL("main/pp7/everyday/assets/3353ab82.png", self.location).href
        }
    }),
    TF = $2.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("liquor1", "liquor2", "liquor3"),
        onLoadComplete() {
            s.set(".e.liquor1", {
                x: -250,
                scale: .525,
                rotation: 55
            }), s.set(".e.liquor2", {
                scale: .46
            }), s.set(".e.liquor3", {
                x: 250,
                y: 100,
                scale: .45,
                rotation: 255
            })
        },
        initializeTimeline() {
            this.timeline.add(a.fadeAway("liquor1")).add(a.fadeAway("liquor3")).add(a.fadeAway("liquor2"))
        }
    }),
    EF = $2.extend({
        stepDuration: .7,
        elements: a.elementsFromImages("liquor1", "liquor2", "liquor3", "liquorshelf"),
        onLoadComplete() {
            s.set(".e.liquorshelf", {
                opacity: 0
            }), s.set(".e.liquor1", {
                x: 25,
                y: 725,
                scale: .525
            }), s.set(".e.liquor2", {
                x: 190,
                y: 800,
                scale: .46
            }), s.set(".e.liquor3", {
                x: -200,
                y: 800,
                scale: .45
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.liquor1", {
                y: -35
            }).to(".e.liquor2", {
                y: 50
            }, "<0.25").to(".e.liquor3", {
                y: 50
            }, "<0.25").to(".e.liquorshelf", {
                opacity: 1
            }).to(".e.liquor1", {
                opacity: 0
            }, "<0.5").to(".e.liquor2", {
                opacity: 0
            }, "<").to(".e.liquor3", {
                opacity: 0
            }, "<")
        }
    }),
    nc = E.extend({
        imageManifest: {
            milkmaid: new URL("main/pp7/everyday/assets/8949304e.png", self.location).href
        },
        elements: a.elementsFromImages("milkmaid")
    }),
    LF = nc.extend({
        stepDuration: .25,
        initializeTimeline() {
            this.timeline.to(".e.milkmaid", {
                x: -50
            })
        }
    }),
    BF = nc.extend({
        stepDuration: .25,
        onLoadComplete() {
            s.set(".e.milkmaid", {
                x: -50
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.milkmaid", {
                x: 50
            })
        }
    }),
    MF = nc.extend({
        onLoadComplete() {
            s.set(".e.milkmaid", {
                x: 50
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.milkmaid", {
                scaleX: .8
            })
        }
    }),
    OF = nc.extend({
        onLoadComplete() {
            s.set(".e.milkmaid", {
                x: 50,
                scaleX: .8
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.milkmaid", {
                scaleX: 1
            })
        }
    }),
    vV = E.extend({
        imageManifest: {
            calculator: new URL("main/pp7/everyday/assets/877e7c69.png", self.location).href,
            letter1: new URL("main/pp7/everyday/assets/0e1d0533.png", self.location).href,
            letter2: new URL("main/pp7/everyday/assets/30714dac.png", self.location).href,
            mailbox: new URL("main/pp7/everyday/assets/ca04d4ab.png", self.location).href,
            money: new URL("main/pp7/everyday/assets/4cce58e4.png", self.location).href,
            signed: new URL("main/pp7/everyday/assets/155cd084.png", self.location).href,
            unsigned: new URL("main/pp7/everyday/assets/f0886b2e.png", self.location).href,
            yell: new URL("main/pp7/everyday/assets/7096bd9a.png", self.location).href
        }
    }),
    IF = vV.extend({
        stepDuration: 2,
        elements: [...a.elementsFromImages("mailbox", "letter1"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [-350, 50]
        }],
        initializeTimeline() {
            a.addParticleEmitter({
                container: "particles",
                image: "letter1",
                autoplay: !1,
                numberOfParticles: 10,
                restartOnProgress: !0,
                zIndex: 1,
                settings: {
                    randomAngleRange: -45,
                    minSize: 300,
                    maxSize: 500,
                    force: 3,
                    gravity: 3.6
                }
            }, this)
        }
    }),
    PF = vV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["letter1", "letter1-1", [-90, -50]], ["letter2", "letter2-1", [0, 100]], ["letter1", "letter1-2", [85, -40]], ["letter2", "letter2-2", [150, 70]]),
        onLoadComplete() {
            for (let t = 1; t <= 2; t++) s.set(`.e.letter1-${t}`, {
                rotation: X.exports.random(0, 25)
            }), s.set(`.e.letter2-${t}`, {
                rotation: X.exports.random(-25, 0)
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.letter2-2", {
                x: -275,
                y: 250,
                rotation: 0
            }).to(".e.letter1-2", {
                x: 275,
                y: 300,
                rotation: 0
            }).to(".e.letter2-1", {
                x: -305,
                y: 250,
                rotation: 0
            }).to(".e.letter1-1", {
                x: 285,
                y: 300,
                rotation: 0
            })
        }
    }),
    UF = vV.extend({
        stepDuration: .5,
        elements: [...a.elementsFromImages("calculator", "money"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [-300, -50]
        }],
        onLoadComplete() {
            a.addParticleEmitter({
                container: "particles",
                image: "money",
                autoplay: !1,
                numberOfParticles: 12,
                restartOnProgress: !0,
                zIndex: 1,
                settings: {
                    angle: 0,
                    randomAngle: !1,
                    particleLimit: 3,
                    minSize: 100,
                    maxSize: 200,
                    gravity: -4.9
                }
            }, this)
        },
        onDiscreteProgress() {
            a.scaleBounce("calculator")
        }
    }),
    FF = vV.extend({
        elements: a.elementsFromImages("yell"),
        onStartProgress() {
            a.startHoldShake("yell")
        },
        onStopProgress() {
            a.stopHoldShake("yell")
        }
    }),
    jF = vV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("unsigned", "signed"),
        onLoadComplete() {
            s.set(".e.signed", {
                clipPath: "inset(0 60% 0 0)"
            })
        },
        onProgress(t) {
            s.set(".e.signed", {
                clipPath: `inset(0 ${60-t*.4}% 0 0)`
            })
        }
    }),
    wV = E.extend({
        imageManifest: {
            cottonballFront: new URL("main/pp7/everyday/assets/10824fc9.png", self.location).href,
            cottonballs: new URL("main/pp7/everyday/assets/ad1c68ad.png", self.location).href,
            cottonballBack: new URL("main/pp7/everyday/assets/eeb2e444.png", self.location).href,
            desk: new URL("main/pp7/everyday/assets/e419e375.png", self.location).href,
            dust: new URL("main/pp7/everyday/assets/9208a070.png", self.location).href,
            fight: new URL("main/pp7/everyday/assets/215a75e0.png", self.location).href,
            fuss: new URL("main/pp7/everyday/assets/54f35938.png", self.location).href,
            ignore: new URL("main/pp7/everyday/assets/b2c27bc7.png", self.location).href,
            kids: new URL("main/pp7/everyday/assets/3e9d9920.png", self.location).href,
            laptopScreen: new URL("main/pp7/everyday/assets/bd663fc6.png", self.location).href,
            laptopTop: new URL("main/pp7/everyday/assets/5c8dd6b5.png", self.location).href,
            yell: new URL("main/pp7/everyday/assets/4c8d43ad.png", self.location).href
        }
    }),
    QF = wV.extend({
        stepDuration: 1,
        elements: [{
            class: "desk",
            type: "img",
            key: "desk"
        }, {
            class: "laptop",
            type: "container",
            children: a.elementsFromImages("laptopScreen", "laptopTop")
        }],
        onLoadComplete() {
            s.set(".e.laptop", {
                left: 340,
                top: 494,
                width: 297,
                height: 239,
                rotateX: 67,
                skewX: -2.5,
                scaleY: .7,
                transformPerspective: 515,
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.laptop", {
                rotateX: 170,
                skewX: 0,
                scaleY: 1,
                transformPerspective: 1e3
            }).set(".e.laptopTop", {
                visibility: "hidden"
            }, .07)
        }
    }),
    zF = wV.extend({
        elements: a.elementsFromImages("fight", ["dust", null, [50, 600]]),
        onLoadComplete() {
            a.addInfiniteWiggle("dust"), s.timeline({
                yoyo: !0,
                repeat: -1
            }).to(".e.dust", {
                opacity: .5,
                duration: .25
            }).to(".e.dust", {
                opacity: 1,
                duration: .25
            })
        },
        onStartProgress() {
            a.startHoldShake("fight")
        },
        onStopProgress() {
            a.stopHoldShake("fight")
        }
    }),
    HF = wV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["kids", null, [150, -500]], ["cottonballBack", null, [299, 343]], "cottonballs", ["cottonballFront", null, [289, 578]]),
        onLoadComplete() {
            s.set([".e.cottonballBack", ".e.cottonballFront"], {
                opacity: 0
            }), s.timeline({
                repeat: -1
            }).set(".e.kids", {
                scaleX: 1
            }).to(".e.kids", {
                x: 1600,
                duration: 1.75,
                ease: "power1.in"
            }).set(".e.kids", {
                scaleX: -1
            }).to(".e.kids", {
                x: 0,
                duration: 1.75,
                ease: "power1.in"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cottonballBack", {
                opacity: 1
            }).to(".e.cottonballFront", {
                opacity: 1
            })
        }
    }),
    NF = wV.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("yell", ["fuss", null, [110, 450]]),
        onLoadComplete() {
            s.set(".e.fuss", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.fuss", {
                opacity: 1,
                duration: .1
            }).to(".e.fuss", {
                opacity: 0,
                duration: .1
            }).to(".e.fuss", {
                opacity: 1,
                duration: .1
            }).to(".e.fuss", {
                opacity: 0,
                duration: .1
            })
        }
    }),
    GF = wV.extend({
        elements: a.elementsFromImages(["kids", null, [150, -500]], "ignore"),
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).set(".e.kids", {
                scaleX: 1
            }).to(".e.kids", {
                x: 1600,
                duration: 1.75,
                ease: "power1.in"
            }).set(".e.kids", {
                scaleX: -1
            }).to(".e.kids", {
                x: 0,
                duration: 1.75,
                ease: "power1.in"
            })
        }
    }),
    ic = E.extend({
        imageManifest: {
            insulationBag: new URL("main/pp7/everyday/assets/979b6456.png", self.location).href,
            insulationNew: new URL("main/pp7/everyday/assets/a8798b14.png", self.location).href,
            insulationOld: new URL("main/pp7/everyday/assets/4133b56d.png", self.location).href,
            stapler: new URL("main/pp7/everyday/assets/27f30123.png", self.location).href
        }
    }),
    XF = ic.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("insulationBag", "insulationNew"),
        onLoadComplete() {
            s.set(".e.insulationNew", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("insulationBag", "insulationNew"))
        }
    }),
    YF = ic.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("insulationOld"),
        initializeTimeline() {
            this.timeline.to(".e.insulationOld", {
                y: 50,
                opacity: 0
            }).add(a.squashOnce("insulationOld", 1), 0)
        }
    }),
    KF = ic.extend({
        elements: a.elementsFromImages("insulationNew"),
        onStartProgress() {
            a.startHoldShake("insulationNew")
        },
        onStopProgress() {
            a.stopHoldShake("insulationNew")
        }
    }),
    WF = ic.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("insulationNew", "stapler"),
        onLoadComplete() {
            s.set(".e.stapler", {
                x: 200,
                y: -200
            })
        },
        onDiscreteProgress() {
            a.squashOnce("stapler", .35)
        }
    }),
    sc = E.extend({
        imageManifest: {
            pipe1: new URL("main/pp7/everyday/assets/245c58cb.png", self.location).href,
            pipe2: new URL("main/pp7/everyday/assets/25a34ceb.png", self.location).href,
            wrench: new URL("main/pp7/everyday/assets/0206d509.png", self.location).href
        }
    });
let ss;
const JF = sc.extend({
        elements: a.elementsFromImages("pipe1", "pipe2"),
        onLoadComplete() {
            ss = 0, s.set(".e.pipe2", {
                hidden: !0
            })
        },
        onProgress(t) {
            const e = Math.floor(t);
            e > ss && (e % 50 === 0 ? (s.set(".e.pipe1", {
                hidden: !1
            }), s.set(".e.pipe2", {
                hidden: !0
            })) : e % 25 === 0 && (s.set(".e.pipe1", {
                hidden: !0
            }), s.set(".e.pipe2", {
                hidden: !1
            })), ss = t)
        }
    }),
    ZF = sc.extend({
        elements: a.elementsFromImages("pipe1", "pipe2"),
        onLoadComplete() {
            ss = 0, s.set(".e.pipe2", {
                hidden: !0
            })
        },
        onProgress(t) {
            const e = Math.floor(t);
            e > ss && (e % 20 === 0 ? (s.set(".e.pipe1", {
                hidden: !1
            }), s.set(".e.pipe2", {
                hidden: !0
            })) : e % 10 === 0 && (s.set(".e.pipe1", {
                hidden: !0
            }), s.set(".e.pipe2", {
                hidden: !1
            })), ss = t)
        }
    }),
    _F = sc.extend({
        elements: a.elementsFromImages("pipe1", "pipe2"),
        onLoadComplete() {
            ss = 0, s.set(".e.pipe2", {
                hidden: !0
            })
        },
        onProgress(t) {
            const e = Math.floor(t);
            e > ss && (e % 10 === 0 ? (s.set(".e.pipe1", {
                hidden: !1
            }), s.set(".e.pipe2", {
                hidden: !0
            })) : e % 5 === 0 && (s.set(".e.pipe1", {
                hidden: !0
            }), s.set(".e.pipe2", {
                hidden: !1
            })), ss = t)
        }
    }),
    $F = sc.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("pipe1", ["wrench", null, [0, -1500]]),
        initializeTimeline() {
            this.timeline.to(".e.wrench", {
                x: 1e3,
                duration: .25
            }).to(".e.wrench", {
                x: 1700,
                scaleX: .5,
                rotation: -15,
                duration: .25
            }).to(".e.wrench", {
                x: 1400,
                scaleX: 1,
                rotation: -75,
                duration: .25
            }).to(".e.wrench", {
                x: 1e3,
                y: 1500,
                rotation: -180,
                duration: .25
            })
        }
    });
s.registerPlugin(Pi, Cn);
const L0 = E.extend({
        className: "dont-pop-zit",
        imageManifest: {
            finger: new URL("main/pp7/everyday/assets/21ceb240.png", self.location).href,
            popped: new URL("main/pp7/everyday/assets/9e4393c0.png", self.location).href,
            zitBase: new URL("main/pp7/everyday/assets/fc4360b9.png", self.location).href,
            zitPuss: new URL("main/pp7/everyday/assets/d167c483.png", self.location).href
        },
        elements: [{
            class: "popped",
            type: "img",
            pos: [400, 100],
            key: "popped"
        }, {
            class: "pain",
            type: "div",
            pos: [100, 50],
            html: ""
        }, {
            class: "zit-base",
            type: "img",
            pos: [400, 100],
            key: "zitBase"
        }, {
            class: "zit-puss",
            type: "img",
            pos: [402, 311],
            key: "zitPuss"
        }, {
            class: "finger",
            type: "img",
            pos: [180, -480],
            key: "finger"
        }]
    }),
    ej = L0.extend({
        stepDuration: .6,
        initializeTimeline() {
            s.set(".e.popped", {
                visibility: "hidden"
            }), s.set(".e.pain", {
                visibility: "hidden"
            });
            const t = s.timeline().to(".e.finger", {
                x: 80,
                y: 140
            }).to(".e.finger", {
                x: 0,
                y: 0
            }).to(".e.finger", {
                x: 80,
                y: 140
            }).to(".e.finger", {
                x: 0,
                y: 0
            }).to(".e.finger", {
                x: 80,
                y: 140
            }).to(".e.finger", {
                x: 0,
                y: 0
            });
            t.name = "finger", this.timeline.add(t);
            const e = s.timeline().to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            });
            e.name = "puss", this.timeline.add(e, 0)
        }
    }),
    tj = L0.extend({
        initializeTimeline() {
            s.set(".e.popped", {
                visibility: "hidden"
            }), s.set(".e.pain", {
                opacity: 0
            }), s.set(".e.finger", {
                x: 100,
                y: -20,
                rotation: 15
            });
            const t = s.timeline().to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            }).to(".e.finger", {
                x: 0,
                y: 150
            }).to(".e.finger", {
                x: 100,
                y: -20
            });
            t.name = "finger", this.timeline.add(t);
            const e = s.timeline().to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: .9,
                transformOrigin: "center bottom"
            }).to(".e.zit-puss", {
                scaleY: 1,
                transformOrigin: "center bottom"
            });
            e.name = "puss", this.timeline.add(e, 0);
            const n = s.timeline().to(".e.pain", {
                opacity: 1,
                duration: 9
            });
            n.name = "pain", this.timeline.add(n, 0)
        }
    }),
    nj = L0.extend({
        onLoadComplete() {
            s.set(".e.zit-base", {
                visibility: "hidden"
            }), s.set(".e.zit-puss", {
                visibility: "hidden"
            }), s.set(".e.pain", {
                visibility: "hidden"
            }), s.set(".e.finger", {
                x: 100,
                y: -20
            })
        },
        onStartProgress() {
            s.to(".e.finger", {
                x: 370,
                y: 140,
                duration: .5
            })
        },
        onStopProgress() {
            s.to(".e.finger", {
                x: 100,
                y: -20,
                duration: .5
            })
        }
    }),
    oc = E.extend({
        imageManifest: {
            watermelon: new URL("main/pp7/everyday/assets/3ae3b224.png", self.location).href,
            kiss1: new URL("main/pp7/everyday/assets/63b3da28.png", self.location).href,
            kiss2: new URL("main/pp7/everyday/assets/54eba436.png", self.location).href,
            kiss3: new URL("main/pp7/everyday/assets/cfd495ae.png", self.location).href,
            frenchKiss1: new URL("main/pp7/everyday/assets/cfd495ae.png", self.location).href,
            frenchKiss2: new URL("main/pp7/everyday/assets/1cdc2ae7.png", self.location).href,
            frenchKiss3: new URL("main/pp7/everyday/assets/30a2522b.png", self.location).href,
            frenchKiss4: new URL("main/pp7/everyday/assets/54eba436.png", self.location).href,
            frenchKiss5: new URL("main/pp7/everyday/assets/2bd47087.png", self.location).href,
            frenchKiss6: new URL("main/pp7/everyday/assets/e8bcdf10.png", self.location).href,
            frenchKiss7: new URL("main/pp7/everyday/assets/d4d2ad9f.png", self.location).href,
            frenchKiss8: new URL("main/pp7/everyday/assets/63b3da28.png", self.location).href,
            frenchKiss9: new URL("main/pp7/everyday/assets/1e64e293.png", self.location).href,
            frenchKiss10: new URL("main/pp7/everyday/assets/d40ff2e3.png", self.location).href,
            frenchKiss11: new URL("main/pp7/everyday/assets/b9e33f8d.png", self.location).href,
            heart: new URL("main/pp7/everyday/assets/61b0b14b.png", self.location).href
        }
    }),
    ij = oc.extend({
        elements: [{
            class: "kissing-container",
            type: "container",
            children: [{
                class: "watermelon",
                type: "img",
                pos: [0, 0],
                key: "watermelon"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            const t = s.timeline().to(".watermelon", {
                scale: .4,
                duration: 0
            }, 0).to(".watermelon", {
                scale: 1,
                duration: 1.5,
                ease: "back.out(2)"
            }, 0).to(".watermelon", {
                duration: 2,
                ease: "linear"
            }, 0);
            this.timeline.add(t)
        }
    }),
    sj = oc.extend({
        elements: [{
            class: "kissing-container",
            type: "container",
            children: [{
                class: "watermelon",
                type: "img",
                pos: [0, 0],
                key: "watermelon"
            }, {
                class: "heart",
                type: "img",
                pos: [0, 0],
                key: "heart"
            }]
        }],
        stepDuration: 2,
        initializeTimeline() {
            a.addParticleEmitter({
                container: "kissing-container",
                numberOfParticles: 60,
                autoplay: !1,
                restartOnProgress: !0,
                image: "heart",
                settings: {
                    fullThrottle: !0,
                    randomAngleRange: 25,
                    minSize: 100,
                    maxSize: 500,
                    force: 2,
                    gravity: -1,
                    boundaries: {
                        top: 250,
                        bottom: 500,
                        left: 100,
                        right: 600
                    }
                }
            }, this)
        }
    }),
    oj = oc.extend({
        elements: [{
            class: "kissing-container",
            type: "container",
            children: [{
                class: "watermelon",
                type: "img",
                pos: [0, 0],
                key: "watermelon"
            }, {
                class: "kiss1",
                type: "img",
                pos: [0, 0],
                key: "kiss1"
            }, {
                class: "kiss2",
                type: "img",
                pos: [0, 0],
                key: "kiss2"
            }, {
                class: "kiss3",
                type: "img",
                pos: [-10, -20],
                key: "kiss3"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.set(".e.kiss1", {
                opacity: 0,
                scale: 1.2
            }), s.set(".e.kiss2", {
                opacity: 0,
                scale: 1.2
            }), s.set(".e.kiss3", {
                opacity: 0,
                scale: 1.2
            });
            const t = s.timeline().to(".kissing-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 0).to(".e.kiss1", {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, 0).to(".kissing-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 1).to(".e.kiss2", {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, 1).to(".kissing-container", {
                repeat: 1,
                yoyo: !0,
                scale: .9,
                ease: "linear",
                duration: .2
            }, 2).to(".e.kiss3", {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, 2);
            this.timeline.add(t)
        }
    }),
    aj = oc.extend({
        elements: [{
            class: "kissing-container",
            type: "container",
            children: [{
                class: "watermelon",
                type: "img",
                pos: [0, 0],
                key: "watermelon"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss1"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss2"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss3"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss4"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss5"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss6"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss7"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss8"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss9"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss10"
            }, {
                class: "frenchKiss",
                type: "img",
                pos: [-60, 0],
                key: "frenchKiss11"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            const t = s.timeline();
            s.set(".e.frenchKiss", {
                opacity: 0,
                scale: 1.2
            });
            for (let e = 0; e < 12; e++) t.to(`.e.frenchKiss:nth-child(${e+1})`, {
                opacity: 1,
                scale: 1,
                ease: "elastic.inOut"
            }, e / 4);
            this.timeline.add(t)
        }
    }),
    rj = E.extend({
        imageManifest: {
            bobby: new URL("main/pp7/everyday/assets/8a8a52ac.png", self.location).href
        }
    }),
    Vj = rj.extend({
        elements: a.elementsFromImages("bobby"),
        onLoadComplete() {
            s.set(".e.bobby", {
                scale: .7
            }), a.addInfiniteWiggle("bobby")
        },
        initializeTimeline() {
            this.timeline.to(".e.bobby", {
                scale: 1.2,
                ease: "power1.in"
            })
        }
    }),
    ac = E.extend({
        imageManifest: {
            towel: new URL("main/pp7/everyday/assets/006376ed.png", self.location).href,
            weight: new URL("main/pp7/everyday/assets/4ad50287.png", self.location).href
        }
    }),
    lj = ac.extend({
        stepDuration: 1,
        elements: a.elementsFromImages(["weight", null, [250, 0]]),
        initializeTimeline() {
            this.timeline.to(".e.weight", {
                y: -400,
                duration: 1,
                ease: "Power2.inOut"
            }).to(".e.weight", {
                y: -100,
                duration: 2
            })
        }
    }),
    Aj = ac.extend({
        stepDuration: 1,
        elements: a.elementsFromImages(["weight", null, [150, 0]]),
        initializeTimeline() {
            this.timeline.to(".e.weight", {
                y: -300,
                duration: 1,
                ease: "Power2.inOut"
            }).to(".e.weight", {
                y: 0,
                duration: 2
            })
        }
    }),
    cj = ac.extend({
        stepDuration: 2.5,
        elements: a.elementsFromImages(["weight", null, [150, 0]]),
        initializeTimeline() {
            const t = s.timeline({
                yoyo: !0,
                repeat: 8,
                ease: "none"
            }).to(".e.weight", {
                x: -15,
                duration: .25
            }).to(".e.weight", {
                x: 15,
                duration: .2
            });
            this.timeline.to(".e.weight", {
                y: -300,
                duration: 4,
                ease: "Power2.inOut"
            }).to(".e.weight", {
                y: 0,
                duration: .01
            }), this.timeline.add(t, 0)
        }
    }),
    dj = ac.extend({
        elements: a.elementsFromImages("towel")
    }),
    eb = E.extend({
        imageManifest: {
            shades: new URL("main/pp7/everyday/assets/432e337f.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/1c36beae.png", self.location).href,
            Teen0v2: new URL("main/pp7/everyday/assets/1ad94dc8.png", self.location).href,
            Teen0v3: new URL("main/pp7/everyday/assets/bc32a654.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/0ef05230.png", self.location).href,
            Teen1v2: new URL("main/pp7/everyday/assets/0d8aa219.png", self.location).href,
            Teen1v3: new URL("main/pp7/everyday/assets/f186cf2e.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/5e38098a.png", self.location).href,
            Teen2v2: new URL("main/pp7/everyday/assets/4226227a.png", self.location).href,
            Teen2v3: new URL("main/pp7/everyday/assets/0647cc80.png", self.location).href
        }
    }),
    pj = eb.extend({
        elements() {
            const t = this.model.get("playerInfo");
            return [{
                class: "player",
                type: "img",
                pos: [0, 0],
                key: t.avatar
            }, {
                class: "shades",
                type: "img",
                pos: [-400, 0],
                key: "shades"
            }]
        },
        onLoadComplete() {
            s.set(".e.shades", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.shades", {
                opacity: 1,
                duration: .25
            }).to(".e.shades", {
                y: 400,
                ease: "none"
            }, "<").add(() => {
                this.model.setUpdate({
                    infoText: "TAP AND HOLD"
                })
            }).add(() => {
                this.model.setUpdate({
                    infoText: "DEAL WITH IT"
                })
            }).to(".e.shades", {
                y: 400
            })
        }
    }),
    hj = eb.extend({
        elements() {
            const t = this.model.get("playerInfo");
            return [{
                class: "player-container",
                type: "container",
                children: [{
                    class: "player",
                    type: "img",
                    pos: [0, 0],
                    key: t.avatar
                }, {
                    class: "shades",
                    type: "img",
                    pos: [0, 0],
                    key: "shades"
                }]
            }]
        },
        onStartProgress() {
            s.to(".e.player-container", {
                scale: .9,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.player-container", {
                scale: 1,
                duration: .25
            })
        }
    }),
    B0 = E.extend({
        imageManifest: {
            armPit: new URL("main/pp7/everyday/assets/804c1ff4.png", self.location).href,
            deodorant: new URL("main/pp7/everyday/assets/2ace5373.png", self.location).href,
            nose: new URL("main/pp7/everyday/assets/4f5f5c0b.png", self.location).href
        }
    }),
    uj = B0.extend({
        stepDuration: .5,
        elements: [{
            class: "armPit",
            type: "img",
            pos: [0, 0],
            key: "armPit"
        }],
        initializeTimeline() {
            this.timeline.add(a.squashOnce("armPit", .5))
        }
    }),
    mj = B0.extend({
        elements: [{
            class: "armPit",
            type: "img",
            pos: [0, 0],
            key: "armPit"
        }, {
            class: "deodorant",
            type: "img",
            pos: [0, 0],
            key: "deodorant"
        }],
        initializeTimeline() {
            s.set(".e.deodorant", {
                scale: .7,
                y: 100
            });
            const t = s.timeline().to(".e.deodorant", {
                scale: .4,
                x: -80,
                y: 300
            }, 0).to(".e.deodorant", {
                rotate: 25
            }, .5).to(".e.deodorant", {
                rotate: -25
            }, 1).to(".e.deodorant", {
                rotate: 25
            }, 1.5).to(".e.deodorant", {
                rotate: -25
            }, 2).to(".e.deodorant", {
                rotate: 25
            }, 2.5).to(".e.deodorant", {
                rotate: -25
            }, 3);
            this.timeline.add(t)
        }
    }),
    fj = B0.extend({
        elements: [{
            class: "nose",
            type: "img",
            pos: [0, 0],
            key: "nose"
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.nose", {
                scaleX: 1.1,
                scaleY: .9,
                ease: "power3.inOut"
            }, 0).to(".e.nose", {
                scaleX: .9,
                scaleY: 1.1,
                ease: "back.inOut"
            }, .5).to(".e.nose", {
                scale: 1,
                ease: "back.inOut"
            }, 1);
            this.timeline.add(t)
        }
    }),
    xV = E.extend({
        imageManifest: {
            bang: new URL("main/pp7/everyday/assets/df19ce24.png", self.location).href,
            fixed: new URL("main/pp7/everyday/assets/c543c49d.png", self.location).href,
            rewire: new URL("main/pp7/everyday/assets/7ac9b4c0.png", self.location).href,
            torch: new URL("main/pp7/everyday/assets/f2b1094f.png", self.location).href,
            wires: new URL("main/pp7/everyday/assets/776e636e.png", self.location).href
        }
    }),
    qj = xV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bang"),
        onDiscreteProgress() {
            s.set(".e.bang", {
                rotate: 30,
                scale: .6
            }), s.to(".e.bang", {
                rotate: 0,
                scale: 1
            })
        }
    }),
    gj = xV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bang", "wires", "rewire"),
        onLoadComplete() {
            s.set(".e.rewire", {
                opacity: 0,
                x: -50,
                y: -50
            }), s.set(".e.wires", {
                y: 125,
                x: 60,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.bang", {
                rotate: 300,
                opacity: 0
            }).to(".e.wires", {
                rotate: 360,
                opacity: 1
            }, "<").to(".e.rewire", {
                opacity: 1
            })
        }
    }),
    yj = xV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("wires", "rewire"),
        onLoadComplete() {
            s.set(".e.rewire", {
                x: -50,
                y: -50
            }), s.set(".e.wires", {
                x: 60,
                y: 125
            })
        },
        onDiscreteProgress(t) {
            a.scaleBounce("wires"), a.scaleBounce("rewire");
            const e = 1 - t / 100;
            s.to(".e.rewire", {
                opacity: e
            })
        }
    }),
    bj = xV.extend({
        elements: a.elementsFromImages("wires", "torch", "fixed"),
        onLoadComplete() {
            s.set(".e.wires", {
                x: 60,
                y: 125
            }), s.set(".e.torch", {
                y: 1500,
                x: 300
            }), s.set(".e.fixed", {
                opacity: 0,
                scale: .7,
                y: 60
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.wires", {
                scale: .7
            }).to(".e.torch", {
                y: 30,
                scaleY: 1.1
            }).to(".e.torch", {
                y: 90,
                scaleY: 1
            }).to(".e.torch", {
                x: 200
            }).to(".e.torch", {
                x: -200,
                rotateY: 180
            }).to(".e.torch", {
                y: 1500
            }).to(".e.fixed", {
                opacity: 1,
                rotate: 360
            }).to(".e.wires", {
                opacity: 0,
                rotate: 300
            }, "<")
        },
        onStartProgress() {
            a.startShake("wires", 5, 0)
        },
        onStopProgress() {
            a.stopShake("wires")
        }
    }),
    vj = xV.extend({
        elements: a.elementsFromImages("fixed"),
        onLoadComplete() {
            s.set(".e.fixed", {
                scale: .7,
                y: 60
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fixed", {
                scale: 1
            }).to(".e.fixed", {
                y: 0,
                x: 200,
                rotate: 30
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0,
                scale: 1.1
            }).to(".e.fixed", {
                y: 0,
                x: -200,
                rotate: -30,
                scale: 1
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0
            }).to(".e.fixed", {
                y: 60,
                x: 0
            }).to(".e.fixed", {
                y: 0,
                x: 200,
                rotate: 30
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0,
                scale: 1.1
            }).to(".e.fixed", {
                y: 0,
                x: -200,
                rotate: -30,
                scale: 1
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0
            }).to(".e.fixed", {
                y: 60,
                x: 0
            }).to(".e.fixed", {
                y: 0,
                x: 200,
                rotate: 30
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0,
                scale: 1.1
            }).to(".e.fixed", {
                y: 0,
                x: -200,
                rotate: -30,
                scale: 1
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                rotate: 0
            }).to(".e.fixed", {
                y: 60,
                x: 0,
                scale: 1.1
            })
        }
    }),
    rc = E.extend({
        imageManifest: {
            barfbubbles: new URL("main/pp7/everyday/assets/326cefd7.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/5bb56456.png", self.location).href,
            mouth: new URL("main/pp7/everyday/assets/944d294b.png", self.location).href,
            toilet: new URL("main/pp7/everyday/assets/98250877.png", self.location).href
        }
    }),
    wj = rc.extend({
        elements: [...a.elementsFromImages("barfbubbles"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [500, -275]
        }],
        initializeTimeline() {
            a.addParticleEmitter({
                container: "particles",
                image: "barfbubbles",
                autoplay: !0,
                numberOfParticles: 10,
                settings: {
                    angle: -180,
                    frequency: .25,
                    minSize: 500,
                    maxSize: 750,
                    force: 1,
                    gravity: -4
                }
            }, this)
        }
    }),
    xj = rc.extend({
        elements: a.elementsFromImages("mouth"),
        onStartProgress() {
            a.startHoldShake("mouth")
        },
        onStopProgress() {
            a.stopHoldShake("mouth")
        }
    }),
    kj = rc.extend({
        stepDuration: .1,
        elements: a.elementsFromImages("door"),
        onLoadComplete() {
            s.set(".e.door", {
                scale: .1
            })
        },
        initializeTimeline() {
            this.timeline.add(s.to(".e.door", {
                scale: .25,
                rotation: -5
            })).add(s.to(".e.door", {
                scale: .75,
                rotation: 5
            })).add(s.to(".e.door", {
                scale: 1.75,
                rotation: -5
            })).add(s.to(".e.door", {
                scale: 3.5,
                rotation: 0
            }))
        }
    }),
    Cj = rc.extend({
        stepDuration: 1.5,
        elements: [...a.elementsFromImages("toilet", "barfbubbles"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [-150, 50]
        }],
        initializeTimeline() {
            a.addParticleEmitter({
                container: "particles",
                image: "barfbubbles",
                autoplay: !1,
                numberOfParticles: 10,
                restartOnProgress: !0,
                settings: {
                    angle: -180,
                    minSize: 125,
                    maxSize: 250,
                    gravity: -.25
                }
            }, this)
        }
    }),
    Vc = E.extend({
        imageManifest: {
            tapebroken: new URL("main/pp7/everyday/assets/3540cee7.png", self.location).href,
            tapefixed: new URL("main/pp7/everyday/assets/a087031e.png", self.location).href,
            vcr: new URL("main/pp7/everyday/assets/d736a616.png", self.location).href
        }
    }),
    Rj = Vc.extend({
        stepDuration: 0,
        lastStepDuration: .25,
        elements: a.elementsFromImages("vcr"),
        onDiscreteProgress() {
            s.timeline().to(".e.vcr", {
                y: 100,
                scaleX: 1.15,
                scaleY: .85,
                duration: .1
            }).to(".e.vcr", {
                y: 0,
                scale: 1,
                duration: .1
            })
        }
    }),
    Dj = Vc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("vcr"),
        onDiscreteProgress() {
            s.to(".e.vcr", {
                y: -100,
                rotation: -60,
                duration: .5
            })
        }
    }),
    Sj = Vc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("vcr", "tapebroken"),
        onLoadComplete() {
            s.set(".e.vcr", {
                y: -100,
                rotation: -60
            }), s.set(".e.tapebroken", {
                y: 100,
                rotation: -90,
                scale: .7,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.vcr", {
                scaleX: .9,
                duration: .15
            }).to(".e.vcr", {
                scale: 1,
                duration: .15
            }).to(".e.tapebroken", {
                y: 750,
                opacity: 1,
                duration: .7
            }, "<")
        }
    }),
    Tj = Vc.extend({
        lastStepDuration: .25,
        elements: a.elementsFromImages("tapefixed", "tapebroken"),
        initializeTimeline() {
            this.timeline.to(".e.tapebroken", {
                opacity: 0
            })
        }
    }),
    tb = E.extend({
        imageManifest: {
            trash01: new URL("main/pp7/everyday/assets/c0c19a7e.png", self.location).href,
            trash02: new URL("main/pp7/everyday/assets/c345cff9.png", self.location).href,
            trash03: new URL("main/pp7/everyday/assets/fd03f28f.png", self.location).href
        }
    }),
    Ej = tb.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("trash01", "trash02", "trash03"),
        onLoadComplete() {
            s.set([".e.trash02", ".e.trash03"], {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("trash01", "trash02", .35)), this.timeline.add(a.squashTransition("trash02", "trash03", .35))
        }
    }),
    Lj = tb.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("trash03"),
        initializeTimeline() {
            this.timeline.add(a.fallOut("trash03", .5))
        }
    }),
    M0 = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/18dbd558.png", self.location).href,
            hose: new URL("main/pp7/everyday/assets/166794fe.png", self.location).href,
            sponge: new URL("main/pp7/everyday/assets/d16577b2.png", self.location).href,
            towel: new URL("main/pp7/everyday/assets/dfc3e16e.png", self.location).href
        }
    }),
    Bj = M0.extend({
        elements: [...a.elementsFromImages("car", "hose"), {
            type: "div",
            class: "particles",
            html: "",
            pos: [-325, -425]
        }],
        onLoadComplete() {
            s.set(".e.hose", {
                x: -325,
                y: -500,
                clipPath: "inset(65% 0 0 0)"
            }), this.emitter = a.addParticleEmitter({
                numberOfParticles: 15,
                container: "particles",
                autoplay: !1,
                zIndex: 1,
                settings: {
                    frequency: .025,
                    from: {
                        backgroundColor: "#8cdfe8",
                        border: "2px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 35,
                    maxSize: 55,
                    angle: 270,
                    force: 8,
                    gravity: 9.8
                }
            }, this)
        },
        onStartProgress() {
            this.emitter.play()
        },
        onStopProgress() {
            this.emitter.pause()
        }
    }),
    Mj = M0.extend({
        elements: a.elementsFromImages("car", "sponge"),
        onLoadComplete() {
            s.set(".e.sponge", {
                y: 50,
                scale: .75
            })
        },
        initializeTimeline() {
            Cn.create("spongeWiggleX", {
                wiggles: 25,
                type: "random"
            }), Cn.create("spongeWiggleY", {
                wiggles: 25,
                type: "random"
            });
            const t = s.timeline().to(".e.sponge", {
                x: 400,
                duration: 1,
                ease: "spongeWiggleX"
            }).to(".e.sponge", {
                y: 150,
                duration: 1,
                ease: "spongeWiggleY"
            }, 0);
            t.name = "sponge", this.timeline.add(t)
        }
    }),
    Oj = M0.extend({
        stepDuration: .5,
        lastStepDuration: 1,
        elements: a.elementsFromImages("car", "towel"),
        onLoadComplete() {
            s.set(".e.towel", {
                x: 300,
                scale: .75,
                rotation: 180,
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.towel", {
                duration: .25,
                opacity: 1
            }).to(".e.towel", {
                x: -300,
                ease: "power4.in"
            }, "<").to(".e.towel", {
                x: 300,
                ease: "power4.in"
            }).to(".e.towel", {
                x: -300,
                ease: "power4.in"
            }).to(".e.towel", {
                x: 300,
                ease: "power4.in",
                opacity: 0
            });
            t.name = "towel", this.timeline.add(t)
        }
    }),
    lc = E.extend({
        imageManifest: {
            table: new URL("main/pp7/everyday/assets/60e83b7d.png", self.location).href,
            textbook: new URL("main/pp7/everyday/assets/865fb758.png", self.location).href,
            textbook1Left: new URL("main/pp7/everyday/assets/2acf89c9.png", self.location).href,
            textbook1Right: new URL("main/pp7/everyday/assets/2c111d0e.png", self.location).href,
            textbook2Left: new URL("main/pp7/everyday/assets/4262002e.png", self.location).href,
            textbook2Right: new URL("main/pp7/everyday/assets/c6e5cbe4.png", self.location).href,
            textbook3Left: new URL("main/pp7/everyday/assets/4d876cb0.png", self.location).href,
            textbook3Right: new URL("main/pp7/everyday/assets/0ccd2eb5.png", self.location).href
        }
    }),
    Ij = lc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("textbook1Left", "textbook1Right", "textbook2Left", "textbook2Right"),
        initializeTimeline() {
            s.set(".e.textbook2Left, .e.textbook2Right", {
                opacity: 0
            }), this.timeline.to(".e.textbook1Left", {
                rotateY: 85
            }), this.timeline.to(".e.textbook1Right", {
                rotateY: -85
            }), this.timeline.set(".e.textbook1Left", {
                opacity: 0
            }), this.timeline.set(".e.textbook1Right", {
                opacity: 0
            }), this.timeline.set(".e.textbook2Left", {
                opacity: 1,
                rotateY: 85
            }), this.timeline.set(".e.textbook2Right", {
                opacity: 1,
                rotateY: -85
            }), this.timeline.to(".e.textbook2Left", {
                rotateY: 0
            }), this.timeline.to(".e.textbook2Right", {
                rotateY: 0
            })
        }
    }),
    Pj = lc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("textbook2Left", "textbook2Right", "textbook3Left", "textbook3Right"),
        initializeTimeline() {
            s.set(".e.textbook3Left, .e.textbook3Right", {
                opacity: 0
            }), this.timeline.to(".e.textbook2Left", {
                rotateY: 85
            }), this.timeline.to(".e.textbook2Right", {
                rotateY: -85
            }), this.timeline.set(".e.textbook2Left", {
                opacity: 0
            }), this.timeline.set(".e.textbook2Right", {
                opacity: 0
            }), this.timeline.set(".e.textbook3Left", {
                opacity: 1,
                rotateY: 85
            }), this.timeline.set(".e.textbook3Right", {
                opacity: 1,
                rotateY: -85
            }), this.timeline.to(".e.textbook3Left", {
                rotateY: 0
            }), this.timeline.to(".e.textbook3Right", {
                rotateY: 0
            })
        }
    }),
    Uj = lc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("textbook2Left", "textbook2Right", "textbook3Left", "textbook3Right"),
        initializeTimeline() {
            s.set(".e.textbook2Left, .e.textbook2Right", {
                opacity: 0
            }), this.timeline.to(".e.textbook3Right", {
                rotateY: 85
            }), this.timeline.to(".e.textbook3Left", {
                rotateY: -85
            }), this.timeline.set(".e.textbook3Right", {
                opacity: 0
            }), this.timeline.set(".e.textbook3Left", {
                opacity: 0
            }), this.timeline.set(".e.textbook2Right", {
                opacity: 1,
                rotateY: 85
            }), this.timeline.set(".e.textbook2Left", {
                opacity: 1,
                rotateY: -85
            }), this.timeline.to(".e.textbook2Right", {
                rotateY: 0
            }), this.timeline.to(".e.textbook2Left", {
                rotateY: 0
            })
        }
    }),
    Fj = lc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("table", "textbook"),
        initializeTimeline() {
            s.set(".e.table", {
                rotate: -158
            }), s.set(".e.textbook", {
                rotate: 23,
                scale: .45,
                y: -60
            }), this.timeline.to(".e.table", {
                rotate: 0,
                ease: "bounce.out"
            }), this.timeline.to(".e.textbook", {
                y: -700,
                x: 700,
                ease: "power2.out"
            }, "<")
        }
    }),
    O0 = E.extend({
        imageManifest: {
            leaf01: new URL("main/pp7/everyday/assets/eb3dad53.png", self.location).href,
            leaf02: new URL("main/pp7/everyday/assets/e489cbd3.png", self.location).href,
            leaf03: new URL("main/pp7/everyday/assets/30adfcd2.png", self.location).href,
            leafBag: new URL("main/pp7/everyday/assets/d775be26.png", self.location).href,
            leafExplosion: new URL("main/pp7/everyday/assets/05fc9883.png", self.location).href
        }
    }),
    jj = O0.extend({
        stepDuration: 1.3,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf03"
        }],
        onDiscreteProgress() {
            for (let t = 1; t < 7; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                x: X.exports.random(-200, 500),
                rotate: X.exports.random(100, 500),
                y: X.exports.random(-100, -500),
                opacity: 0,
                ease: "power3.out",
                duration: 1
            })
        }
    }),
    Qj = O0.extend({
        stepDuration: 1,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [-X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }],
        onDiscreteProgress() {
            for (let t = 1; t < 10; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                x: X.exports.random(-200, 500),
                rotate: X.exports.random(100, 500),
                y: X.exports.random(-100, -500),
                opacity: 0,
                ease: "power3.out",
                duration: 1
            })
        }
    }),
    zj = O0.extend({
        stepDuration: 1.5,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf03"
        }, {
            class: "leafBag",
            type: "img",
            key: "leafBag"
        }],
        initializeTimeline() {
            s.timeline().set(".e.leafBag", {
                scale: 1.5,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            for (let t = 1; t < 13; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                rotate: X.exports.random(100, 500),
                scale: .5,
                opacity: 0,
                ease: "power3.out",
                duration: 1.5
            });
            s.timeline().to(".e.leafBag", {
                scale: 1,
                opacity: 1,
                ease: "power2.in"
            }, 0)
        }
    }),
    Ac = E.extend({
        imageManifest: {
            leaf01: new URL("main/pp7/everyday/assets/eb3dad53.png", self.location).href,
            leaf02: new URL("main/pp7/everyday/assets/e489cbd3.png", self.location).href,
            leaf03: new URL("main/pp7/everyday/assets/30adfcd2.png", self.location).href,
            leafBag: new URL("main/pp7/everyday/assets/d775be26.png", self.location).href,
            leafExplosion: new URL("main/pp7/everyday/assets/05fc9883.png", self.location).href
        }
    }),
    Hj = Ac.extend({
        stepDuration: 1,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-500, 500), X.exports.random(-500, 500)],
            key: "leaf03"
        }],
        onDiscreteProgress() {
            for (let t = 1; t < 7; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                x: X.exports.random(-200, 500),
                rotate: X.exports.random(100, 500),
                y: X.exports.random(-100, -500),
                opacity: 0,
                ease: "power3.out",
                duration: 1
            })
        }
    }),
    Nj = Ac.extend({
        stepDuration: 1,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [-X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-300, 300), X.exports.random(-300, 300)],
            key: "leaf03"
        }],
        onDiscreteProgress() {
            for (let t = 1; t < 10; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                x: X.exports.random(-200, 500),
                rotate: X.exports.random(100, 500),
                y: X.exports.random(-100, -500),
                opacity: 0,
                ease: "power3.out",
                duration: 1
            })
        }
    }),
    Gj = Ac.extend({
        stepDuration: 1,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf03"
        }, {
            class: "leafBag",
            type: "img",
            key: "leafBag"
        }],
        initializeTimeline() {
            s.timeline().set(".e.leafBag", {
                scale: 1.5,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            for (let t = 1; t < 13; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                rotate: X.exports.random(100, 500),
                scale: .6,
                ease: "power3.out",
                duration: 1.5
            })
        }
    }),
    Xj = Ac.extend({
        stepDuration: 1,
        elements: [{
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-150, 150), X.exports.random(-150, 150)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-100, 100), X.exports.random(-100, 100)],
            key: "leaf03"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf01"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf02"
        }, {
            class: "leaf",
            type: "img",
            pos: [X.exports.random(-50, 50), X.exports.random(-50, 50)],
            key: "leaf03"
        }, {
            class: "leafExplosion",
            type: "img",
            key: "leafExplosion"
        }],
        initializeTimeline() {
            s.timeline().set(".e.leafExplosion", {
                scale: .5,
                opacity: 0
            }), s.timeline().set(".e.leaf", {
                scale: .6
            })
        },
        onDiscreteProgress() {
            for (let t = 1; t < 13; t++) s.timeline().to(`.e.leaf:nth-child(${t})`, {
                rotate: X.exports.random(100, 500),
                scale: 1.5,
                opacity: 0,
                ease: "power3.out",
                duration: .5
            });
            s.timeline().to(".e.leafExplosion", {
                scale: 1.5,
                opacity: 1,
                ease: "elastic.out",
                duration: 1
            }, 0)
        }
    }),
    Yj = E.extend({
        imageManifest: {
            teeth: new URL("main/pp7/everyday/assets/9517d7df.png", self.location).href,
            toothbrush: new URL("main/pp7/everyday/assets/00169299.png", self.location).href
        }
    }),
    nb = Yj.extend({
        elements: a.elementsFromImages("teeth").concat([{
            type: "div",
            class: "particles",
            html: "",
            pos: [-20, -200]
        }, {
            type: "img",
            class: "toothbrush",
            key: "toothbrush",
            pos: [0, 0]
        }]),
        initializeTimeline() {
            this.particles = a.addParticleEmitter({
                numberOfParticles: 15,
                container: "particles",
                autoplay: !1,
                zIndex: 1,
                settings: {
                    particleLimit: 2,
                    frequency: .05,
                    from: {
                        backgroundColor: "#ffd8d8",
                        border: "2px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 35,
                    maxSize: 55,
                    angle: 180,
                    force: 4,
                    gravity: .5,
                    randomAngle: !0
                }
            }, this);
            const t = this.particles;
            this.timeline.fromTo(".e.toothbrush", {
                x: 400
            }, {
                x: 0,
                repeat: 5,
                yoyo: !0,
                ease: "sine.inOut",
                onRepeat() {
                    t.restart()
                }
            }), this.timeline.fromTo(".e.particles", {
                x: 400
            }, {
                x: 0,
                repeat: 5,
                yoyo: !0,
                ease: "sine.inOut"
            }, "<")
        }
    }),
    Kj = nb.extend({
        stepDuration: .25,
        initializeTimeline() {
            const t = a.addParticleEmitter({
                numberOfParticles: 15,
                container: "particles",
                autoplay: !1,
                zIndex: 1,
                settings: {
                    particleLimit: 2,
                    frequency: .05,
                    from: {
                        backgroundColor: "#ff9090",
                        border: "2px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 35,
                    maxSize: 55,
                    angle: 180,
                    force: 4,
                    gravity: .5,
                    randomAngle: !0
                }
            }, this);
            this.timeline.fromTo(".e.toothbrush", {
                x: 400
            }, {
                x: 0,
                repeat: 5,
                yoyo: !0,
                ease: "sine.inOut",
                onRepeat() {
                    t.restart()
                },
                onStart() {
                    t.restart()
                },
                onReverseComplete() {
                    t.restart()
                }
            }), this.timeline.fromTo(".e.particles", {
                x: 400
            }, {
                x: 0,
                repeat: 5,
                yoyo: !0,
                ease: "sine.inOut"
            }, "<")
        }
    }),
    kV = E.extend({
        imageManifest: {
            mower: new URL("main/pp7/everyday/assets/25fdd245.png", self.location).href,
            lawn: new URL("main/pp7/everyday/assets/c7661d8d.png", self.location).href
        }
    }),
    Wj = kV.extend({
        elements: [{
            class: "mower-container",
            type: "container",
            children: [{
                class: "mower",
                type: "img",
                pos: [0, 0],
                key: "mower"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            s.timeline().to(".mower", {
                repeat: -1,
                yoyo: !0,
                scale: 1.02,
                duration: .1
            }), a.addParticleEmitter({
                container: "mower-container",
                numberOfParticles: 40,
                zIndex: -1,
                autoplay: !1,
                restartOnProgress: !0,
                settings: {
                    frequency: .05,
                    from: {
                        backgroundColor: "#26BD5E",
                        borderRadius: "0",
                        borderRight: "8px solid black",
                        borderTop: "8px solid black",
                        height: 50
                    },
                    boundaries: {
                        left: 425,
                        right: 575,
                        top: 750,
                        bottom: 750
                    },
                    minSize: 5,
                    maxSize: 20,
                    randomAngleRange: 270,
                    force: -3,
                    gravity: 1
                }
            }, this)
        }
    }),
    Jj = kV.extend({
        elements: [{
            class: "lawn-container",
            type: "container",
            children: [{
                class: "lawn",
                type: "img",
                pos: [0, 0],
                key: "lawn"
            }]
        }]
    }),
    Zj = kV.extend({
        elements: [{
            class: "mower-container",
            type: "container",
            children: [{
                class: "mower",
                type: "img",
                pos: [0, 0],
                key: "mower"
            }]
        }],
        stepDuration: .2,
        initializeTimeline() {
            s.timeline().to(".mower", {
                repeat: -1,
                yoyo: !0,
                scale: 1.03,
                duration: .1
            });
            const t = s.timeline().to(".e.mower-container", {
                scaleX: -1
            }, 0);
            this.timeline.add(t), a.addParticleEmitter({
                container: "mower-container",
                numberOfParticles: 40,
                zIndex: -1,
                settings: {
                    frequency: .05,
                    from: {
                        backgroundColor: "#26BD5E",
                        borderRadius: "0",
                        borderRight: "8px solid black",
                        borderTop: "8px solid black",
                        height: 50
                    },
                    boundaries: {
                        left: 425,
                        right: 575,
                        top: 750,
                        bottom: 750
                    },
                    minSize: 5,
                    maxSize: 20,
                    randomAngleRange: 270,
                    force: -3,
                    gravity: 1
                }
            }, this)
        }
    }),
    _j = kV.extend({
        elements: [{
            class: "lawn-container",
            type: "container",
            children: [{
                class: "lawn",
                type: "img",
                pos: [0, 0],
                key: "lawn"
            }]
        }],
        initializeTimeline() {
            s.timeline().set(".e.lawn-container", {
                scaleX: -1
            }, 0)
        }
    }),
    $j = kV.extend({
        elements: [{
            class: "mower-container",
            type: "container",
            children: [{
                class: "mower",
                type: "img",
                pos: [0, 0],
                key: "mower"
            }]
        }],
        stepDuration: 1,
        initializeTimeline() {
            const t = s.timeline().to(".mower", {
                    repeat: -1,
                    yoyo: !0,
                    scale: 1.03,
                    duration: .1
                }),
                e = s.timeline().to(".mower", {
                    scale: .8,
                    duration: 1,
                    ease: "elastic",
                    onComplete: () => t.pause()
                }, 0);
            this.timeline.add(e)
        }
    }),
    eQ = Hn.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/49736ef6.png", self.location).href
        }
    }),
    tQ = E.extend({
        imageManifest: {
            paper1: new URL("main/pp7/everyday/assets/aa199b6c.png", self.location).href,
            paper2: new URL("main/pp7/everyday/assets/6e5689ef.png", self.location).href
        },
        elements: a.elementsFromImages("paper1", "paper2"),
        initializeTimeline() {
            this.timeline.to(".e.paper1", {
                opacity: 0
            })
        }
    }),
    nQ = Hn.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/6e5689ef.png", self.location).href
        }
    }),
    iQ = Hn.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/12aaab80.png", self.location).href
        }
    }),
    sQ = Os.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/771af53b.png", self.location).href
        }
    }),
    Fa = E.extend({
        imageManifest: {
            crane: new URL("main/pp7/everyday/assets/17204211.png", self.location).href,
            great: new URL("main/pp7/everyday/assets/c7a08676.png", self.location).href,
            leg1: new URL("main/pp7/everyday/assets/d83dc5d6.png", self.location).href,
            leg2: new URL("main/pp7/everyday/assets/1796d236.png", self.location).href,
            pants: new URL("main/pp7/everyday/assets/8556c701.png", self.location).href,
            pull: new URL("main/pp7/everyday/assets/37e3cd74.png", self.location).href
        }
    }),
    oQ = Fa.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pants"),
        onLoadComplete() {
            s.set(".e.pants", {
                x: -700,
                rotation: 90
            })
        },
        onDiscreteProgress() {
            s.to(".e.pants", {
                x: 0,
                duration: .25
            })
        }
    }),
    aQ = Fa.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("leg1"),
        onDiscreteProgress() {
            s.timeline().to(".e.leg1", {
                y: -50,
                duration: .15
            }).to(".e.leg1", {
                rotation: -75,
                duration: .25
            }, "<").to(".e.leg1", {
                y: 75,
                duration: .15
            }, "<0.1").to(".e.leg1", {
                y: 50,
                duration: .15
            })
        }
    }),
    rQ = Fa.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("leg2"),
        onDiscreteProgress() {
            s.timeline().to(".e.leg2", {
                y: -50,
                duration: .15
            }).to(".e.leg2", {
                rotation: -75,
                duration: .25
            }, "<").to(".e.leg2", {
                y: 75,
                duration: .15
            }, "<0.1").to(".e.leg2", {
                y: 50,
                duration: .15
            })
        }
    }),
    VQ = Fa.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("pull"),
        onDiscreteProgress() {
            s.timeline().to(".e.pull", {
                y: -25,
                duration: .1
            }).to(".e.pull", {
                y: 25,
                duration: .1
            })
        }
    }),
    lQ = Fa.extend({
        elements: a.elementsFromImages("crane")
    }),
    AQ = Fa.extend({
        elements: a.elementsFromImages("great"),
        onStartProgress() {
            a.startHoldShake("great")
        },
        onStopProgress() {
            a.stopHoldShake("great")
        }
    }),
    I0 = E.extend({
        imageManifest: {
            jar: new URL("main/pp7/everyday/assets/288131ff.png", self.location).href,
            lid: new URL("main/pp7/everyday/assets/61fabb0d.png", self.location).href,
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    cQ = I0.extend({
        stepDuration: .75,
        elements: [{
            class: "jar-container",
            type: "container",
            children: [{
                class: "jar",
                type: "img",
                pos: [0, 0],
                key: "jar"
            }, {
                class: "lid",
                type: "img",
                pos: [100, 0],
                key: "lid"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.lid", {
                x: 30,
                y: -80,
                rotation: 7
            });
            t.name = "lid", this.timeline.add(t)
        }
    }),
    dQ = I0.extend({
        stepDuration: .75,
        elements: [{
            class: "cookie-container",
            type: "container",
            children: [{
                class: "cookie-0",
                type: "img",
                pos: [0, 0],
                key: "cookie"
            }, {
                class: "cookie-1",
                type: "img",
                pos: [0, 0],
                key: "cookie"
            }, {
                class: "cookie-2",
                type: "img",
                pos: [0, 0],
                key: "cookie"
            }]
        }],
        initializeTimeline() {
            s.set(".e.cookie-0", {
                y: 800,
                opacity: 0
            }), s.set(".e.cookie-1", {
                y: 800,
                rotation: 250,
                opacity: 0
            }), s.set(".e.cookie-2", {
                y: 800,
                rotation: 90,
                opacity: 0
            });
            const t = s.timeline().to(".e.cookie-0", {
                x: -200,
                y: 0,
                opacity: 1
            }).to(".e.cookie-1", {
                x: 0,
                y: 0,
                opacity: 1
            }).to(".e.cookie-2", {
                x: 200,
                y: 0,
                opacity: 1
            });
            t.name = "cookies", this.timeline.add(t)
        }
    }),
    pQ = I0.extend({
        stepDuration: .75,
        elements: [{
            class: "jar-container",
            type: "container",
            children: [{
                class: "jar",
                type: "img",
                pos: [0, 0],
                key: "jar"
            }, {
                class: "lid",
                type: "img",
                pos: [-100, 50],
                key: "lid"
            }]
        }],
        initializeTimeline() {
            s.set(".e.lid", {
                rotation: 30
            }), s.set(".e.ladybug", {
                rotation: X.exports.random(-90, 90)
            }), s.set(".e.ant", {
                rotation: X.exports.random(-90, 90)
            });
            const t = s.timeline().to(".e.lid", {
                x: -50,
                y: 200,
                rotation: 0
            });
            t.name = "lid", this.timeline.add(t)
        }
    }),
    cc = E.extend({
        imageManifest: {
            wall: new URL("main/pp7/everyday/assets/a1fa242b.png", self.location).href,
            draw: new URL("main/pp7/everyday/assets/a71946e5.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/d54ff653.png", self.location).href,
            smear1: new URL("main/pp7/everyday/assets/169313ef.png", self.location).href,
            smear2: new URL("main/pp7/everyday/assets/97cdc0e2.png", self.location).href
        }
    }),
    hQ = cc.extend({
        elements: a.elementsFromImages("wall", "draw"),
        initializeTimeline() {
            this.timeline.fromTo(".e.draw", {
                clipPath: "inset(0px 0px 650px 0px)"
            }, {
                clipPath: "inset(0px 0px 200px 0px)"
            })
        }
    }),
    uQ = cc.extend({
        elements: a.elementsFromImages("smear1", "draw"),
        initializeTimeline() {
            this.timeline.to(".e.draw", {
                opacity: 0
            })
        }
    }),
    mQ = cc.extend({
        elements: a.elementsFromImages("smear2", "smear1"),
        initializeTimeline() {
            this.timeline.to(".e.smear1", {
                opacity: 0
            })
        }
    }),
    fQ = cc.extend({
        stepDuration: .2,
        elements: a.elementsFromImages("run"),
        onLoadComplete() {
            s.set(".e.run", {
                x: -400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.run", {
                x: 400,
                scale: .5
            })
        }
    }),
    dc = E.extend({
        imageManifest: {
            creekSun: new URL("main/pp7/everyday/assets/96b3ec14.png", self.location).href,
            rope1: new URL("main/pp7/everyday/assets/583f8269.png", self.location).href,
            rope2: new URL("main/pp7/everyday/assets/22c630c3.png", self.location).href,
            rope3: new URL("main/pp7/everyday/assets/22865f21.png", self.location).href
        }
    }),
    qQ = dc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("rope1"),
        onDiscreteProgress() {
            a.squashOnce("rope1", .2)
        }
    }),
    gQ = dc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("rope1", "rope3"),
        onLoadComplete() {
            s.set(".e.rope3", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("rope1", "rope3", .25)
        }
    }),
    yQ = dc.extend({
        hasStarted: !1,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("rope3", "rope2")
        }],
        onLoadComplete() {
            s.set(".e.rope3", {
                visibility: "hidden"
            }), s.set(".e.rope2", {
                visibility: "visible"
            }), s.timeline({
                repeat: -1
            }).to(".e.rope2", {
                visibility: "hidden",
                duration: 1.5
            }).to(".e.rope3", {
                visibility: "visible",
                duration: 1.5
            }, "<").to(".e.rope3", {
                visibility: "hidden",
                duration: 1.5
            }).to(".e.rope2", {
                visibility: "visible",
                duration: 1.5
            }, "<")
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    bQ = dc.extend({
        elements: a.elementsFromImages("creekSun")
    }),
    P0 = E.extend({
        imageManifest: {
            noGoosebumps: new URL("main/pp7/everyday/assets/a119dbc6.png", self.location).href,
            goosebumps: new URL("main/pp7/everyday/assets/4eeb2f70.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/03ecc613.png", self.location).href,
            guy: new URL("main/pp7/everyday/assets/e8848154.png", self.location).href,
            pillow: new URL("main/pp7/everyday/assets/2386bdc2.png", self.location).href
        }
    }),
    vQ = P0.extend({
        stepDuration: .25,
        lastStepDuration: .5,
        elements: [{
            class: "gray",
            type: "div",
            pos: [380, 115],
            html: ""
        }, {
            class: "red",
            type: "div",
            pos: [380, 115],
            html: ""
        }, {
            class: "guy",
            type: "img",
            pos: [408, 160],
            key: "guy"
        }, {
            class: "tv",
            type: "img",
            key: "tv"
        }],
        onLoadComplete() {
            s.set(".e.guy", {
                scaleY: .5,
                opacity: 0,
                transformOrigin: "bottom center"
            }), s.set(".e.gray", {
                width: 520,
                height: 472,
                backgroundColor: "#111"
            }), s.set(".e.red", {
                width: 520,
                height: 472,
                scale: .05,
                borderRadius: 250,
                opacity: 0,
                backgroundColor: "#522630"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.red", {
                opacity: 1
            }).to(".e.red", {
                scale: 1,
                borderRadius: 0
            }).to(".e.guy", {
                scaleY: 1,
                opacity: 1
            })
        }
    }),
    wQ = P0.extend({
        elements: a.elementsFromImages("pillow"),
        initializeTimeline() {
            this.timeline.to(".e.pillow", {
                scaleX: .85,
                ease: "bounce.in"
            }).to(".e.pillow", {
                scaleX: .7,
                ease: "bounce.in"
            })
        },
        onStartProgress() {
            a.startHoldShake("pillow")
        },
        onStopProgress() {
            a.stopHoldShake("pillow")
        }
    }),
    xQ = P0.extend({
        elements: a.elementsFromImages("noGoosebumps", "goosebumps"),
        initializeTimeline() {
            this.timeline.to(".e.goosebumps", {
                opacity: 0
            })
        }
    }),
    U0 = E.extend({
        imageManifest: {
            question: new URL("main/pp7/everyday/assets/62daae8c.png", self.location).href,
            steps: new URL("main/pp7/everyday/assets/04e61b77.png", self.location).href,
            tug: new URL("main/pp7/everyday/assets/25ab96e2.png", self.location).href
        }
    }),
    kQ = U0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("tug"),
        onLoadComplete() {
            s.set(".e.tug", {
                transformOrigin: "top center"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.tug", {
                scaleY: 1.1,
                duration: .2,
                ease: "back.in(1.5)"
            }).to(".e.tug", {
                scaleY: 1,
                duration: .15
            })
        }
    }),
    CQ = U0.extend({
        elements: a.elementsFromImages("question")
    }),
    RQ = U0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("steps"),
        onLoadComplete() {
            s.set(".e.steps", {
                clipPath: "inset(70% 0% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.steps", {
                clipPath: "inset(50% 0% 0% 0%)"
            }).to(".e.steps", {
                clipPath: "inset(28% 0% 0% 0%)"
            }).to(".e.steps", {
                clipPath: "inset(17% 0% 0% 0%)"
            }).to(".e.steps", {
                clipPath: "inset(5% 0% 0% 0%)"
            })
        }
    }),
    CV = E.extend({
        imageManifest: {
            cat: new URL("main/pp7/everyday/assets/d6a2598f.png", self.location).href,
            catSink: new URL("main/pp7/everyday/assets/d1025b9b.png", self.location).href,
            sink: new URL("main/pp7/everyday/assets/65774f86.png", self.location).href
        }
    }),
    DQ = CV.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("catSink", ["cat", null, [0, -180]]),
        initializeTimeline() {
            this.timeline.to(".e.cat, .e.catSink", {
                x: 180
            }).to(".e.catSink", {
                opacity: 0
            }, 0)
        }
    }),
    SQ = CV.extend({
        elements: a.elementsFromImages("cat"),
        onStartProgress() {
            a.startHoldShake("cat")
        },
        onStopProgress() {
            a.stopHoldShake("cat")
        }
    }),
    TQ = CV.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("cat"),
        onDiscreteProgress() {
            a.squashOnce("cat", .35)
        }
    }),
    EQ = CV.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("cat"),
        initializeTimeline() {
            this.timeline.to(".e.cat", {
                scaleY: 1.3,
                duration: 1,
                ease: "elastic.out(1.2, 0.5)"
            }).to(".e.cat", {
                scaleY: 1,
                duration: .1
            })
        }
    }),
    LQ = CV.extend({
        elements: a.elementsFromImages("sink"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("sink")), this.timeline.add(a.squashOnce("sink")), this.timeline.add(a.squashOnce("sink"))
        }
    }),
    BQ = E.extend({
        imageManifest: {
            pants: new URL("main/pp7/everyday/assets/af298a9e.png", self.location).href
        }
    }),
    MQ = BQ.extend({
        className: "poop",
        elements: [{
            class: "c",
            type: "container",
            children: [{
                class: "text-0",
                type: "div",
                pos: [400, 1200],
                html: "LOOK AWAY"
            }, {
                class: "text-1",
                type: "div",
                pos: [300, 2200],
                html: "NO ONE WANTS<br/>TO SEE THIS"
            }, {
                class: "pants",
                type: "img",
                key: "pants"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: -1e3
            }).to(".e.c", {
                x: -2e3
            }, 2).fillTime(2.5)
        },
        onStartProgress() {
            a.startHoldShake("text-0"), a.startHoldShake("text-1")
        },
        onStopProgress() {
            a.stopHoldShake("pants"), a.stopHoldShake("pants")
        }
    }),
    F0 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/c4ba3c29.png", self.location).href,
            bee: new URL("main/pp7/everyday/assets/a7b20da0.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    bird: [0, 0, 443, 585, 380, 30],
                    heart: [0, 585, 160, 154, 290, 350]
                }
            }
        }
    }),
    OQ = F0.extend({
        elements: a.elementsFromSprite("sprite", ["bird"]),
        onStartProgress() {
            a.startHoldShake("bird")
        },
        onStopProgress() {
            a.stopHoldShake("bird")
        }
    }),
    IQ = F0.extend({
        elements: [...a.elementsFromSprite("sprite", ["bird"]), ...a.elementsFromImages("bee")],
        onLoadComplete() {
            s.set(".e.bee", {
                x: 700,
                y: -50,
                opacity: 0,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bee", {
                x: 466,
                y: 150
            }).to(".e.bee", {
                scale: 1,
                duration: .5
            }, 0).to(".e.bee", {
                opacity: 1,
                duration: .25
            }, 0).fillTime(.25)
        }
    }),
    ib = F0.extend({
        stepDuration: .4,
        elements: [...a.elementsFromSprite("sprite", ["bird", "heart"]), ...a.elementsFromImages("bee")],
        onLoadComplete() {
            s.set(".e.bee", {
                x: 466,
                y: 150,
                transformOrigin: "left center"
            }), s.set(".e.bird", {
                transformOrigin: "right center"
            }), s.set(".e.heart", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().set(".e.heart", {
                x: 0,
                y: 0,
                opacity: 0
            }).to(".e.heart", {
                x: -10,
                y: -20,
                opacity: 1,
                duration: .1,
                ease: "none"
            }, .1).to(".e.heart", {
                x: -40,
                y: -80,
                opacity: 0,
                duration: .3,
                ease: "none"
            }), s.timeline().to(".e.bee", {
                x: 441,
                y: 175,
                scaleX: .9,
                duration: .1,
                ease: "none"
            }).fillTime(.3).to(".e.bee", {
                x: 466,
                y: 150,
                scaleX: 1,
                duration: .2,
                ease: "none"
            }), s.timeline().to(".e.bird", {
                x: 25,
                y: 15,
                scaleX: .9,
                duration: .1,
                ease: "none"
            }).fillTime(.3).to(".e.bird", {
                x: 0,
                y: 0,
                scaleX: 1,
                duration: .2,
                ease: "none"
            })
        }
    }),
    PQ = ib,
    pc = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/00f227f5.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    tree: [1020, 10, 462, 1120, -520, 200],
                    owl: [10, 754, 91, 125, 217, 373],
                    hole: [99, 755, 94, 129, 216, 369],
                    bg: [10, 10, 1e3, 740, -140, -120]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            pos: [200, 100],
            children: a.elementsFromSprite("sprite", ["bg", "hole", "owl", "tree"])
        }, {
            class: "vignette",
            type: "div",
            pos: [200, 100]
        }],
        setupContainer() {
            s.set(".e.c", {
                width: 800,
                height: 600,
                overflow: "hidden"
            }), s.set(".e.vignette", {
                width: 800,
                height: 600
            })
        }
    }),
    UQ = pc.extend({
        stepDuration: .45,
        onLoadComplete() {
            this.setupContainer(), s.fromTo(".e.owl", {
                y: 150
            }, {
                y: 0,
                duration: .3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bg", {
                y: 45,
                ease: "back.out(2)"
            }).to(".e.tree, .e.owl, .e.hole", {
                y: 175,
                ease: "back.out(2)"
            }, 0)
        }
    }),
    FQ = pc.extend({
        stepDuration: .45,
        onLoadComplete() {
            this.setupContainer(), s.set(".e.bg", {
                y: 45
            }), s.set(".e.tree, .e.owl, .e.hole", {
                y: 175
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bg", {
                y: 90,
                ease: "back.inOut(2)"
            }).to(".e.tree, .e.owl, .e.hole", {
                y: 350,
                ease: "back.inOut(2)"
            }, 0)
        }
    }),
    jQ = pc.extend({
        stepDuration: .45,
        onLoadComplete() {
            this.setupContainer(), s.set(".e.bg", {
                y: 90
            }), s.set(".e.tree, .e.owl, .e.hole", {
                y: 350
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bg", {
                y: 140,
                ease: "back.in(2)"
            }).to(".e.tree, .e.owl, .e.hole", {
                y: 510,
                ease: "back.in(2)"
            }, 0)
        }
    }),
    QQ = pc.extend({
        onLoadComplete() {
            this.setupContainer(), s.set(".e.bg", {
                y: 140
            }), s.set(".e.tree, .e.owl, .e.hole", {
                y: 510
            }), a.startShake("c", 8, 0, 5)
        }
    }),
    hc = E.extend({
        imageManifest: {
            volcano: new URL("main/pp7/everyday/assets/74025c9d.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "volcano",
                images: {
                    skull: [1218, 10, 245, 412, 294, 377],
                    volcano: [10, 10, 594, 856, 22, 203],
                    chair: [614, 10, 594, 696, 182, 203],
                    lava: [614, 716, 664, 373, 624, 168]
                }
            }
        }
    }),
    zQ = hc.extend({
        elements: a.elementsFromSprite("sprite", ["chair", "volcano"]),
        onLoadComplete() {
            s.set(".e.volcano", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.volcano", {
                opacity: 1,
                duration: 1
            }).to(".e.chair", {
                opacity: 0,
                duration: .2
            }, .8)
        }
    }),
    HQ = hc.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", [
            ["lava", "lava0"],
            ["lava", "lava1"], "chair"
        ]),
        onLoadComplete() {
            s.fromTo(".e.lava0", {
                x: -300,
                scale: .4
            }, {
                scale: 1,
                duration: .5
            }), s.fromTo(".e.lava1", {
                x: 300,
                scale: .4
            }, {
                scale: 1,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashOnce("chair"), .4)
        }
    }),
    sb = hc.extend({
        stepDuration: .4,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["lava", "lava0"],
                ["lava", "lava1"],
                ["chair", "chair0"],
                ["chair", "chair1"]
            ])
        }],
        onLoadComplete() {
            s.set(".e.lava0", {
                x: -300
            }), s.set(".e.lava1", {
                x: 300
            }), s.set(".e.chair1", {
                x: 700,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: -700,
                ease: "back.out(2)"
            }).to(".e.chair1", {
                opacity: 1,
                duration: .5
            }, 0)
        }
    }),
    NQ = sb.extend({
        onLoadComplete() {
            s.set(".e.lava0", {
                x: -300
            }), s.set(".e.lava1", {
                x: 300
            }), s.set(".e.chair1", {
                x: 700
            }), s.set(".e.c", {
                x: -700
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: 0,
                ease: "back.out(2)"
            })
        }
    }),
    GQ = hc.extend({
        stepDuration: .5,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["lava", "lava0"],
                ["lava", "lava1"],
                ["chair", "chair0"],
                ["chair", "chair1"], "skull"
            ])
        }],
        onLoadComplete() {
            s.set(".e.lava0", {
                x: -300
            }), s.set(".e.lava1", {
                x: 300
            }), s.set(".e.chair1", {
                x: 700
            }), s.set(".e.skull", {
                y: 150,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.chair0, .e.chair1", {
                y: -100,
                scale: .6,
                opacity: 0,
                duration: .5
            }, 0).to(".e.skull", {
                y: 0,
                opacity: 1,
                duration: 1
            }, 0)
        }
    }),
    uc = E.extend({
        imageManifest: {
            diary: new URL("main/pp7/everyday/assets/a85cdd3a.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "diary",
                images: {
                    item4: [1763, 243, 218, 217, 361, 429],
                    item3: [1763, 470, 172, 184, 393, 401],
                    item2: [1763, 10, 226, 223, 381, 397],
                    item1: [1528, 981, 380, 309, 356, 311],
                    item0: [1528, 664, 419, 307, 393, 255],
                    run: [872, 601, 646, 758, 108, 216],
                    diary: [10, 721, 552, 722, 132, 218],
                    pile: [10, 10, 852, 701, 227, 38],
                    open: [872, 10, 881, 581, 199, 54]
                }
            }
        }
    }),
    XQ = uc.extend({
        elements: a.elementsFromSprite("sprite", ["pile", "item0", "item1", "item2", "item3", "item4"]),
        onLoadComplete() {
            s.set(".e.pile", {
                transformOrigin: "bottom center"
            }), s.set(".e.item0, .e.item1, .e.item2, .e.item3, .e.item4", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }).to(".e.pile", {
                scaleX: 1.1,
                scaleY: .9
            }).call(() => {
                s.timeline().set(".e.item0", {
                    hidden: !1,
                    rotate: -150
                }).to(".e.item0", {
                    x: -500,
                    y: -500,
                    rotate: -350
                }).set(".e.item0", {
                    hidden: !0
                })
            }).to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }).call(() => {
                s.timeline().set(".e.item1", {
                    hidden: !1,
                    rotate: 0
                }).to(".e.item1", {
                    x: 500,
                    y: -500,
                    rotate: 200
                }).set(".e.item1", {
                    hidden: !0
                })
            }).to(".e.pile", {
                scaleX: 1.1,
                scaleY: .9
            }).to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }).call(() => {
                s.timeline().set(".e.item2", {
                    hidden: !1,
                    rotate: -100
                }).to(".e.item2", {
                    x: -500,
                    y: -500,
                    rotate: 100
                }).set(".e.item2", {
                    hidden: !0
                })
            }).to(".e.pile", {
                scaleX: 1.1,
                scaleY: .9
            }).to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }).call(() => {
                s.timeline().set(".e.item3", {
                    hidden: !1,
                    rotate: 150
                }).to(".e.item3", {
                    x: 500,
                    y: -500,
                    rotate: 350
                }).set(".e.item3", {
                    hidden: !0
                })
            }).to(".e.pile", {
                scaleX: 1.1,
                scaleY: .9
            }).to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }).to(".e.pile", {
                scaleX: 1.1,
                scaleY: .9
            }).call(() => {
                s.timeline().set(".e.item4", {
                    hidden: !1,
                    rotate: 0
                }).to(".e.item4", {
                    x: -500,
                    y: -500,
                    rotate: -200
                }).set(".e.item4", {
                    hidden: !0
                })
            }).to(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            })
        }
    }),
    YQ = uc.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["pile", "diary", "open"]),
        onLoadComplete() {
            s.fromTo(".e.pile", {
                scaleX: .9,
                scaleY: 1.1
            }, {
                scaleX: .6,
                scaleY: .6,
                opacity: 0,
                duration: .5
            }), s.fromTo(".e.diary", {
                scale: .6,
                rotate: 120
            }, {
                scale: 1,
                rotate: 0,
                duration: .5
            }), s.set(".e.open", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("diary", "open", .35))
        }
    }),
    KQ = uc.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["open"]),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("open", .35))
        }
    }),
    WQ = uc.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["open"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.open", {
                scale: .9,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .85,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .8,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .75,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .7,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .65,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .6,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .55,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .4,
                ease: "back.in(3)"
            }).to(".e.open", {
                scale: .2,
                ease: "back.in(3)"
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c", .35)
        }
    }),
    j0 = E.extend({
        imageManifest: {
            couch: new URL("main/pp7/everyday/assets/79ab81bb.png", self.location).href,
            fort: new URL("main/pp7/everyday/assets/7d1b0a42.png", self.location).href,
            pillows: new URL("main/pp7/everyday/assets/413719b0.png", self.location).href,
            eyes: new URL("main/pp7/everyday/assets/b3775f50.png", self.location).href
        }
    }),
    JQ = j0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("couch", "pillows"),
        onLoadComplete() {
            s.set(".e.pillows", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("couch", "pillows"))
        }
    }),
    ZQ = j0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("pillows", "fort"),
        onLoadComplete() {
            s.set(".e.fort", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("pillows", "fort"))
        }
    }),
    _Q = j0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("fort", ["eyes", null, [380, 440]])
        }],
        onLoadComplete() {
            const t = {
                    clipPath: "inset(50% 0% 80% 0%)",
                    duration: .2
                },
                e = {
                    clipPath: "inset(0% 0% 0% 0%)",
                    duration: .2
                };
            s.set(".e.eyes", t), s.timeline({
                repeat: -1
            }).to(".e.eyes", e).fillTime(.75).to(".e.eyes", t).to(".e.eyes", e).to(".e.eyes", t).to(".e.eyes", e).fillTime(2).to(".e.eyes", t).to(".e.eyes", e).fillTime(1.75).to(".e.eyes", t).to(".e.eyes", e)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Q0 = E.extend({
        imageManifest: {
            tantrum1: new URL("main/pp7/everyday/assets/446b8cf9.png", self.location).href,
            tantrum2: new URL("main/pp7/everyday/assets/6531424d.png", self.location).href
        }
    }),
    $Q = Q0.extend({
        elements: a.elementsFromImages("tantrum1"),
        onLoadComplete() {
            a.startShake("tantrum1", 2, 3, .25)
        },
        onProgress(t) {
            t === 33 ? (a.stopShake("tantrum1"), a.startShake("tantrum1", 5, 5, .6)) : t === 66 && (a.stopShake("tantrum1"), a.startShake("tantrum1", 6, 7, 1.5))
        }
    }),
    ez = Q0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("tantrum1", "tantrum2"),
        onLoadComplete() {
            s.set(".e.tantrum2", {
                visibility: "hidden"
            }), a.startShake("tantrum1", 6, 7, 1.5)
        },
        onDiscreteProgress() {
            s.set(".e.tantrum2", {
                visibility: "visible"
            }), s.set(".e.tantrum1", {
                visibility: "hidden"
            }), a.scaleBounce("tantrum2", 1.2, 1)
        }
    }),
    tz = Q0.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("tantrum2"),
        onLoadComplete() {
            a.startShake("tantrum2", 4, 5, 2)
        },
        onDiscreteProgress() {
            a.scaleBounce("tantrum2", 1.5, .25)
        }
    }),
    Si = () => ke.random(360),
    mc = E.extend({
        imageManifest: {
            brick: new URL("main/pp7/everyday/assets/fb9ede4f.png", self.location).href,
            dump: new URL("main/pp7/everyday/assets/edf0a02b.png", self.location).href,
            soldier: new URL("main/pp7/everyday/assets/63cdf84d.png", self.location).href,
            step: new URL("main/pp7/everyday/assets/419bb846.png", self.location).href
        }
    }),
    nz = mc.extend({
        stepDuration: 1.25,
        elements: a.elementsFromImages(["soldier", "soldier1"], ["soldier", "soldier2"], ["soldier", "soldier3"], ["soldier", "soldier4"], ["soldier", "soldier5"]),
        onLoadComplete() {
            s.set([".e.soldier1", ".e.soldier2", ".e.soldier3", ".e.soldier4", ".e.soldier5"], {
                scale: .8
            }), s.set(".e.soldier1", {
                x: -250,
                y: 1250,
                rotation: Si()
            }), s.set(".e.soldier2", {
                x: -100,
                y: 1e3,
                rotation: Si()
            }), s.set(".e.soldier3", {
                y: 750,
                rotation: Si()
            }), s.set(".e.soldier4", {
                x: 100,
                y: 1e3,
                rotation: Si()
            }), s.set(".e.soldier5", {
                x: 250,
                y: 1250,
                rotation: Si()
            })
        },
        onDiscreteProgress() {
            s.to([".e.soldier1", ".e.soldier2", ".e.soldier3", ".e.soldier4", ".e.soldier5"], {
                y: 0
            })
        }
    }),
    iz = mc.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("dump"),
        onDiscreteProgress() {
            a.scaleBounce("dump")
        }
    }),
    sz = mc.extend({
        stepDuration: 1.25,
        elements: a.elementsFromImages(["brick", "brick1"], ["brick", "brick2"], ["brick", "brick3"], ["brick", "brick4"], ["brick", "brick5"]),
        onLoadComplete() {
            s.set([".e.brick1", ".e.brick2", ".e.brick3", ".e.brick4", ".e.brick5"], {
                scale: .8
            }), s.set(".e.brick1", {
                x: -250,
                y: 1250,
                rotation: Si()
            }), s.set(".e.brick2", {
                x: -100,
                y: 1e3,
                rotation: Si()
            }), s.set(".e.brick3", {
                y: 750,
                rotation: Si()
            }), s.set(".e.brick4", {
                x: 100,
                y: 1e3,
                rotation: Si()
            }), s.set(".e.brick5", {
                x: 250,
                y: 1250,
                rotation: Si()
            })
        },
        onDiscreteProgress() {
            s.to([".e.brick1", ".e.brick2", ".e.brick3", ".e.brick4", ".e.brick5"], {
                y: 0
            })
        }
    }),
    oz = mc.extend({
        lastStepDuration: .25,
        elements: a.elementsFromImages("step"),
        onDiscreteProgress() {
            a.scaleBounce("step", .9, .1)
        }
    }),
    z0 = E.extend({
        imageManifest: {
            football: new URL("main/pp7/everyday/assets/5c13aa5b.png", self.location).href,
            lamp: new URL("main/pp7/everyday/assets/2e20317e.png", self.location).href
        }
    }),
    az = z0.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("football"),
        initializeTimeline() {
            this.timeline.to(".e.football", {
                x: -250
            })
        }
    }),
    rz = z0.extend({
        elements: a.elementsFromImages("football"),
        onLoadComplete() {
            s.set(".e.football", {
                x: -250
            })
        },
        onStartProgress() {
            a.startShake("football", 10, 0, 2)
        },
        onStopProgress() {
            a.stopShake("football")
        }
    }),
    Vz = z0.extend({
        stepDuration: 2.5,
        elements: a.elementsFromImages("lamp", "football"),
        onLoadComplete() {
            s.set(".e.lamp", {
                x: 1500
            }), s.set(".e.football", {
                x: -250
            }), a.startShake("football", 10, 0, 2)
        },
        onDiscreteProgress() {
            a.stopShake("football"), s.timeline().to(".e.football", {
                motionPath: [{
                    x: -250,
                    y: 0,
                    rotation: -25
                }, {
                    x: 250,
                    y: -500,
                    rotation: 0
                }, {
                    x: 1e3,
                    y: 0,
                    rotation: 115
                }, {
                    x: 1500,
                    y: 0,
                    rotation: 180
                }],
                duration: 1
            }).to(".e.lamp", {
                x: -100
            }, "<0.6").to(".e.football", {
                x: 400
            }, "<")
        }
    }),
    H0 = E.extend({
        imageManifest: {
            curse: new URL("main/pp7/everyday/assets/c28afc92.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/2ad26346.png", self.location).href,
            show1: new URL("main/pp7/everyday/assets/df830c26.png", self.location).href,
            static: new URL("main/pp7/everyday/assets/8a8cde63.png", self.location).href
        }
    }),
    lz = H0.extend({
        elements: a.elementsFromImages("show1", "tv")
    }),
    Az = H0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("show1", "tv", "curse")
        }],
        onStartProgress() {
            a.startHoldShake("c", 2, 5)
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    cz = H0.extend({
        elements: a.elementsFromImages("static", "tv")
    }),
    fc = E.extend({
        imageManifest: {
            candy: new URL("main/pp7/everyday/assets/8a78bc4c.png", self.location).href,
            climb: new URL("main/pp7/everyday/assets/be461d82.png", self.location).href,
            push: new URL("main/pp7/everyday/assets/75df3367.png", self.location).href,
            steal: new URL("main/pp7/everyday/assets/6880e10a.png", self.location).href
        }
    }),
    dz = fc.extend({
        elements: a.elementsFromImages("push"),
        onStartProgress() {
            a.startHoldShake("push")
        },
        onStopProgress() {
            a.stopHoldShake("push")
        }
    }),
    pz = fc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("climb"),
        onDiscreteProgress() {
            a.squashOnce("climb", .35)
        }
    }),
    hz = fc.extend({
        elements: a.elementsFromImages("steal"),
        onLoadComplete() {
            a.startShake("steal", 2, 2, 1)
        }
    }),
    uz = fc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("candy"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("candy", .25))
        }
    }),
    qc = E.extend({
        imageManifest: {
            matches: new URL("main/pp7/everyday/assets/886a8001.png", self.location).href,
            smoke: new URL("main/pp7/everyday/assets/024447f1.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "matches",
                images: {
                    trash: [468, 10, 440, 495, 440, 280],
                    matchFlame: [468, 515, 106, 252, 172, 434],
                    match: [918, 10, 73, 482, 328, 451],
                    leftFlame: [584, 515, 110, 240, 221, 158],
                    rightFlame: [704, 515, 93, 214, 371, 749],
                    flame: [10, 10, 448, 870, 65, 289]
                }
            }
        }
    }),
    mz = qc.extend({
        stepDuration: .75,
        elements: a.elementsFromSprite("sprite", ["match"]),
        onLoadComplete() {
            s.set(".e.match", {
                rotate: 30
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.match", {
                x: -200,
                y: 200,
                rotate: 80
            }).to(".e.match", {
                x: 0,
                y: 0,
                rotate: 0
            })
        }
    }),
    fz = qc.extend({
        elements: [{
            class: "small",
            type: "container",
            children: a.elementsFromSprite("sprite", ["match", "matchFlame"])
        }, {
            class: "large",
            type: "container",
            children: a.elementsFromSprite("sprite", ["flame", "leftFlame", "rightFlame"])
        }],
        onLoadComplete() {
            s.set(".e.matchFlame", {
                opacity: 0,
                scale: .5,
                transformOrigin: "bottom center"
            }), s.set(".e.large", {
                opacity: 0
            }), s.set(".e.leftFlame, .e.rightFlame", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.matchFlame", {
                opacity: 1,
                scale: 1,
                duration: 1
            }, 0).to(".e.small", {
                scale: 1.3,
                opacity: 0,
                duration: 1
            }, 2).to(".e.large", {
                opacity: 1,
                duration: 1
            }, 2).to(".e.leftFlame", {
                x: -30,
                y: -60,
                opacity: 1,
                duration: .4,
                ease: "none"
            }, 2.8).to(".e.leftFlame", {
                x: -60,
                y: -120,
                opacity: 0,
                duration: .4,
                ease: "none"
            }, 3.2).set(".e.leftFlame", {
                x: 0,
                y: 0,
                opacity: 0
            }, 3.6).to(".e.leftFlame", {
                x: -30,
                y: -60,
                opacity: 1,
                duration: .4,
                ease: "none"
            }, 3.7).to(".e.leftFlame", {
                x: -60,
                y: -120,
                opacity: 0,
                duration: .4,
                ease: "none"
            }, 4.1).to(".e.rightFlame", {
                x: 30,
                y: -60,
                opacity: 1,
                duration: .4,
                ease: "none"
            }, 3.2).to(".e.rightFlame", {
                x: 60,
                y: -120,
                opacity: 0,
                duration: .4,
                ease: "none"
            }, 3.6).set(".e.rightFlame", {
                x: 0,
                y: 0,
                opacity: 0
            }, 4).to(".e.rightFlame", {
                x: 30,
                y: -60,
                opacity: 1,
                duration: .4,
                ease: "none"
            }, 4.1).to(".e.rightFlame", {
                x: 60,
                y: -120,
                opacity: 0,
                duration: .4,
                ease: "none"
            }, 4.6)
        }
    }),
    qz = qc.extend({
        stepDuration: .5,
        elements: [...a.elementsFromSprite("sprite", ["trash"]), {
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["match", "matchFlame"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.c", {
                y: -300,
                scale: .7,
                rotate: -200
            }).to(".e.c", {
                y: -100,
                scale: .4,
                rotate: -400
            }).to(".e.c", {
                y: 0,
                scale: .2,
                opacity: 0,
                rotate: -600
            })
        }
    }),
    gz = qc.extend({
        elements: [...a.elementsFromSprite("sprite", ["trash"]), ...a.elementsFromImages("smoke")],
        onLoadComplete() {
            s.set(".e.smoke", {
                opacity: 0,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).to(".e.smoke", {
                y: -100,
                opacity: .9,
                rotate: 50,
                scale: 1,
                ease: "none"
            }).to(".e.smoke", {
                y: -200,
                opacity: .7,
                rotate: 100,
                ease: "none"
            }).to(".e.smoke", {
                y: -300,
                opacity: .5,
                rotate: 150,
                ease: "none"
            })
        }
    }),
    yz = Hn.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/1b6401c0.png", self.location).href
        }
    }),
    bz = eV.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/4cd65221.png", self.location).href
        }
    }),
    vz = Os.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/c1da3a35.png", self.location).href
        }
    }),
    wz = Os.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/b5d70a90.png", self.location).href
        }
    }),
    xz = yo.extend({
        imageManifest: {
            image: new URL("main/pp7/everyday/assets/0b87173d.png", self.location).href
        }
    }),
    gc = E.extend({
        imageManifest: {
            aboutToBarf: new URL("main/pp7/everyday/assets/e7473d18.png", self.location).href,
            barf: new URL("main/pp7/everyday/assets/2b277533.png", self.location).href,
            spin: new URL("main/pp7/everyday/assets/65fd2914.png", self.location).href
        }
    }),
    kz = gc.extend({
        elements: a.elementsFromImages("spin"),
        initializeTimeline() {
            this.timeline.to(".e.spin", {
                scaleX: -1
            }).to(".e.spin", {
                scaleX: 1
            }).to(".e.spin", {
                scaleX: -1
            }).to(".e.spin", {
                scaleX: 1
            }).to(".e.spin", {
                scaleX: -1
            }).to(".e.spin", {
                scaleX: 1
            })
        }
    }),
    Cz = gc.extend({
        elements: a.elementsFromImages("aboutToBarf"),
        initializeTimeline() {
            const t = s.timeline().to(".e.aboutToBarf", {
                    skewX: -10,
                    duration: .2
                }).to(".e.aboutToBarf", {
                    skewX: 0,
                    duration: .2
                }).to(".e.aboutToBarf", {
                    skewX: 0,
                    duration: .2
                }).to(".e.aboutToBarf", {
                    skewX: 10,
                    duration: .2
                }).to(".e.aboutToBarf", {
                    skewX: 0,
                    duration: .2
                }),
                e = s.timeline().to(".e.aboutToBarf", {
                    skewY: 0,
                    duration: .25
                }).to(".e.aboutToBarf", {
                    skewY: 0,
                    duration: .25
                }).to(".e.aboutToBarf", {
                    skewY: 10,
                    duration: .25
                }).to(".e.aboutToBarf", {
                    skewY: -10,
                    duration: .25
                }),
                n = s.timeline().to(".e.aboutToBarf", {
                    rotate: 5,
                    duration: .5
                }).to(".e.aboutToBarf", {
                    rotate: -5,
                    duration: .5
                });
            this.timeline.add(t), this.timeline.add(e, 0), this.timeline.add(n, 0)
        }
    }),
    Rz = gc.extend({
        elements: a.elementsFromImages("aboutToBarf"),
        onStartProgress() {
            a.startHoldShake("aboutToBarf", 5)
        },
        onStopProgress() {
            a.stopHoldShake("aboutToBarf")
        }
    }),
    Dz = gc.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("aboutToBarf", "barf"),
        onLoadComplete() {
            s.set(".e.barf", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("aboutToBarf", "barf", .35)
        }
    }),
    yc = E.extend({
        imageManifest: {
            bowl: new URL("main/pp7/everyday/assets/2730f29c.png", self.location).href,
            choke: new URL("main/pp7/everyday/assets/5f4c7b7e.png", self.location).href,
            drawer: new URL("main/pp7/everyday/assets/69b7cfe7.png", self.location).href,
            marble: new URL("main/pp7/everyday/assets/ec47f996.png", self.location).href,
            swallow: new URL("main/pp7/everyday/assets/7f4a332e.png", self.location).href
        }
    }),
    Sz = yc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("drawer", "marble"),
        onLoadComplete() {
            s.set(".e.marble", {
                scale: .35,
                x: 127,
                y: 50
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.marble", {
                x: -100,
                scale: .6,
                opacity: 0
            })
        }
    }),
    Tz = yc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("swallow", "marble"),
        onLoadComplete() {
            s.set(".e.marble", {
                scale: .25,
                x: 38,
                y: -12
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.marble", {
                x: -30,
                opacity: 0
            })
        }
    }),
    Ez = yc.extend({
        elements: a.elementsFromImages("choke"),
        initializeTimeline() {
            const t = s.timeline().to(".e.choke", {
                    scaleY: .8
                }).to(".e.choke", {
                    scaleY: 1.2
                }).to(".e.choke", {
                    scaleY: 1
                }),
                e = s.timeline({
                    repeat: 5
                }).to(".e.choke", {
                    x: -4,
                    y: 2,
                    duration: .1
                }).to(".e.choke", {
                    x: 4,
                    y: 0,
                    duration: .1
                }).to(".e.choke", {
                    x: 0,
                    y: -2,
                    duration: .1
                }).to(".e.choke", {
                    x: 2,
                    y: 2,
                    duration: .1
                }).to(".e.choke", {
                    x: 3,
                    y: -4,
                    duration: .1
                }).to(".e.choke", {
                    x: 2,
                    y: 0,
                    duration: .1
                });
            this.timeline.add(t), this.timeline.add(e, 4)
        }
    }),
    Lz = yc.extend({
        stepDuration: .5,
        elements: a.elementsFromImages(["bowl", null, [0, -100]]),
        initializeTimeline() {
            this.timeline.to(".e.bowl", {
                x: 100,
                ease: "back.in(3)"
            })
        }
    }),
    RV = E.extend({
        imageManifest: {
            pet: new URL("main/pp7/everyday/assets/bf8a977c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "pet",
                images: {
                    bar: [10, 917, 650, 707, 256, 175],
                    bite0: [670, 950, 456, 249, 36, 270],
                    bite1: [670, 1209, 455, 224, 36, 270],
                    bite2: [1135, 1303, 454, 224, 36, 271],
                    bite3: [1527, 950, 454, 153, 107, 271],
                    bite4: [1527, 1113, 454, 153, 107, 271],
                    bite5: [670, 1443, 454, 139, 121, 271],
                    hi: [1136, 950, 381, 343, 173, 336],
                    bed: [936, 10, 792, 930, 35, 104],
                    raccoon: [10, 10, 916, 897, 52, 42]
                }
            }
        }
    }),
    Bz = RV.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["bite0", "bite1", "bite2", "bite3", "bite4", "bite5", "bar"])
        }],
        onLoadComplete() {
            s.set(".e.bite1, .e.bite2, .e.bite3, .e.bite4, .e.bite5", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.swapHidden([".e.bite0", ".e.bite1"], .5).swapHidden([".e.bite1", ".e.bite2"], 1.5).swapHidden([".e.bite2", ".e.bite3"], 2.5).swapHidden([".e.bite3", ".e.bite4"], 3.5).swapHidden([".e.bite4", ".e.bite5"], 4.5).fillTime(.5)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Mz = RV.extend({
        elements: a.elementsFromSprite("sprite", ["raccoon"]),
        onLoadComplete() {
            s.set(".e.raccoon", {
                y: 50,
                scale: .8,
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.raccoon", {
                skewX: 10,
                duration: 1
            }).to(".e.raccoon", {
                skewX: 0,
                duration: .1
            }).to(".e.raccoon", {
                skewX: 10,
                duration: 1
            }).to(".e.raccoon", {
                skewX: 0,
                duration: .1
            }).to(".e.raccoon", {
                skewX: 10,
                duration: 1
            }).to(".e.raccoon", {
                skewX: 0,
                duration: .1
            }).to(".e.raccoon", {
                skewX: 10,
                duration: 1
            }).to(".e.raccoon", {
                skewX: 0,
                duration: .1
            })
        }
    }),
    Oz = RV.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["raccoon"]),
        onLoadComplete() {
            s.set(".e.raccoon", {
                y: 50,
                scale: .8,
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.raccoon", {
                y: 0,
                scale: 1,
                ease: "back.out(3)"
            })
        }
    }),
    Iz = RV.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["raccoon"]),
        initializeTimeline() {
            this.timeline.to(".e.raccoon", {
                x: 500,
                ease: "back.in(3)"
            })
        }
    }),
    Pz = RV.extend({
        stepDuration: .45,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["bed", "hi"])
        }],
        onLoadComplete() {
            s.set(".e.hi", {
                y: -150,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.hi", {
                opacity: 1
            }, 0).to(".e.hi", {
                y: 0,
                duration: 1,
                ease: "back.out(2)"
            }, 0).add(a.squashOnce("c", 1), .3)
        }
    }),
    N0 = E.extend({
        imageManifest: {
            dirtPile: new URL("main/pp7/everyday/assets/ab3114d9.png", self.location).href,
            sprite: new URL("main/pp7/everyday/assets/264b74d9.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    pit: [0, 0, 901, 886],
                    magnet0: [901, 0, 488, 416],
                    magnet1: [901, 416, 488, 652],
                    magnet2: [0, 886, 404, 315],
                    magnet3: [404, 886, 497, 435]
                }
            }
        }
    }),
    Uz = N0.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", [
            ["magnet3", null, [482, 2]],
            ["magnet2", null, [32, 508]],
            ["magnet1", null, [334, 496]],
            ["magnet0", null, [52, 96]]
        ]),
        onLoadComplete() {
            s.set(".e.magnet0, .e.magnet1, .e.magnet2, .e.magnet3", {
                scale: .8
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.magnet0", {
                x: 160,
                y: 240,
                scale: 1.1
            }).to(".e.magnet1", {
                x: -240,
                y: -160,
                scale: 1.1
            }).to(".e.magnet2", {
                x: -210,
                y: 310,
                scale: 1.1
            }).to(".e.magnet3", {
                x: 249,
                y: -200,
                scale: 1.1
            })
        }
    }),
    Fz = N0.extend({
        stepDuration: .25,
        elements: [...a.elementsFromSprite("sprite", [
            ["pit", null, [57, 49]]
        ]), {
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["magnet3", null, [482, 2]],
                ["magnet2", null, [32, 508]],
                ["magnet1", null, [334, 496]],
                ["magnet0", null, [52, 96]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.magnet0", {
                x: 160,
                y: 240,
                scale: 1.1
            }), s.set(".e.magnet1", {
                x: -240,
                y: -160,
                scale: 1.1
            }), s.set(".e.magnet2", {
                x: -210,
                y: 310,
                scale: 1.1
            }), s.set(".e.magnet3", {
                x: 249,
                y: -200,
                scale: 1.1
            }), s.fromTo(".e.pit", {
                x: 300,
                opacity: 0
            }, {
                x: 0,
                opacity: 1,
                duration: .5
            }), s.to(".e.c", {
                x: -250
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.magnet3", {
                x: 559,
                y: -130,
                rotate: -220,
                scale: .4
            }).to(".e.magnet2", {
                x: -40,
                y: 210,
                rotate: 110,
                scale: .4
            }).to(".e.magnet1", {
                x: -30,
                y: -140,
                rotate: 40,
                scale: .4
            }).to(".e.magnet0", {
                x: 523,
                y: 140,
                rotate: -230,
                scale: .4
            })
        }
    }),
    jz = N0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("dirtPile")
        }],
        onLoadComplete() {
            s.set(".e.c", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scaleY: .5,
                duration: 1,
                ease: "power3.in"
            }), this.timeline.add(a.squashOnce("dirtPile", .2), 0), this.timeline.add(a.squashOnce("dirtPile", .2), .2), this.timeline.add(a.squashOnce("dirtPile", .2), .4), this.timeline.add(a.squashOnce("dirtPile", .2), .6), this.timeline.add(a.squashOnce("dirtPile", .2), .8)
        }
    });
s.registerPlugin(fo);
const bc = E.extend({
        imageManifest: {
            social: new URL("main/pp7/everyday/assets/0c1f9935.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "social",
                images: {
                    cursor: [944, 832, 175, 255, 445, 607],
                    post: [679, 532, 498, 201, 300, 218],
                    return: [787, 832, 93, 143, 386, 838],
                    space: [679, 743, 326, 79, 571, 292],
                    dKey: [1050, 1097, 90, 86, 448, 271],
                    eKey: [679, 832, 98, 84, 391, 256],
                    vKey: [944, 1097, 96, 106, 491, 296],
                    iKey: [1129, 743, 90, 85, 389, 609],
                    lKey: [1187, 532, 77, 93, 440, 686],
                    keyboard: [10, 1020, 924, 378, 311, 38],
                    computer: [679, 10, 734, 512, 244, 133],
                    content: [10, 10, 659, 1e3, 0, 176]
                }
            }
        }
    }),
    Qz = bc.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["content", "computer"]),
        onLoadComplete() {
            s.set(".e.content", {
                y: 363,
                clipPath: "inset(0% 0% 65%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.content", {
                y: 154,
                clipPath: "inset(20% 0% 44%)"
            }).to(".e.content", {
                y: -55,
                clipPath: "inset(40% 0% 23%)"
            }).to(".e.content", {
                y: -264,
                clipPath: "inset(60% 0% 0%)"
            })
        }
    }),
    zz = bc.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", ["keyboard", "space", "return", "dKey", "eKey", "vKey", "iKey", "lKey"]),
        onLoadComplete() {
            s.set(".e.space, .e.return, .e.dKey, .e.eKey, .e.vKey, .e.iKey, .e.lKey", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.vKey", {
                hidden: !1
            }, 0).set(".e.vKey", {
                hidden: !0
            }, 1).set(".e.iKey", {
                hidden: !1
            }, 1).set(".e.iKey", {
                hidden: !0
            }, 2).set(".e.lKey", {
                hidden: !1
            }, 2).set(".e.lKey", {
                hidden: !0
            }, 3).set(".e.eKey", {
                hidden: !1
            }, 3).set(".e.eKey", {
                hidden: !0
            }, 4).set(".e.space", {
                hidden: !1
            }, 5).set(".e.space", {
                hidden: !0
            }, 6).set(".e.dKey", {
                hidden: !1
            }, 6).set(".e.dKey", {
                hidden: !0
            }, 7).set(".e.eKey", {
                hidden: !1
            }, 7).set(".e.eKey", {
                hidden: !0
            }, 8).set(".e.vKey", {
                hidden: !1
            }, 8).set(".e.vKey", {
                hidden: !0
            }, 9).set(".e.iKey", {
                hidden: !1
            }, 10).set(".e.iKey", {
                hidden: !0
            }, 11).set(".e.lKey", {
                hidden: !1
            }, 11).set(".e.lKey", {
                hidden: !0
            }, 12).set(".e.return", {
                hidden: !1
            }, 12).set(".e.return", {
                hidden: !0
            }, 13).set(".e.vKey", {
                hidden: !1
            }, 13).set(".e.vKey", {
                hidden: !0
            }, 14).set(".e.iKey", {
                hidden: !1
            }, 15).set(".e.iKey", {
                hidden: !0
            }, 16).set(".e.lKey", {
                hidden: !1
            }, 16).set(".e.lKey", {
                hidden: !0
            }, 17).set(".e.eKey", {
                hidden: !1
            }, 17).set(".e.eKey", {
                hidden: !0
            }, 18).set(".e.space", {
                hidden: !1
            }, 18).set(".e.space", {
                hidden: !0
            }, 19).set(".e.dKey", {
                hidden: !1
            }, 20).set(".e.dKey", {
                hidden: !0
            }, 21).set(".e.eKey", {
                hidden: !1
            }, 21).set(".e.eKey", {
                hidden: !0
            }, 22).set(".e.vKey", {
                hidden: !1
            }, 22).set(".e.vKey", {
                hidden: !0
            }, 23).set(".e.iKey", {
                hidden: !1
            }, 23).set(".e.iKey", {
                hidden: !0
            }, 24)
        }
    }),
    Hz = bc.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["post", "cursor"])
        }],
        initializeTimeline() {
            const t = "M127.8,68.5c-15-19-55-48-84-48s-20,17-13,17s42-19,26-32s-53,1-56,21c-2.9,19.2,15,40,50,27c22.8-8.5,40.2-31.2,30-38c-12-8-37,5-27,27c3.7,8.1,19.4,13.4,28,26c19,28,20.8,66.6-5,109c-50,82,131,125,152,56s-29-60-37-47";
            this.timeline.to(".e.cursor", {
                motionPath: {
                    path: t,
                    offsetX: -110,
                    offsetY: -60
                },
                ease: "none"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Nz = bc.extend({
        stepDuration: .3,
        elements: a.elementsFromSprite("sprite", ["post", "cursor"]),
        onLoadComplete() {
            s.fromTo(".e.cursor", {
                x: 81.8,
                y: 126.5
            }, {
                x: -100,
                y: -25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.post", {
                scale: .8,
                duration: .2
            }).fillTime(1).to(".e.post", {
                scale: 1,
                duration: .4
            })
        }
    }),
    bo = E.extend({
        imageManifest: {
            eyesclosed: new URL("main/pp7/everyday/assets/e0fa1755.png", self.location).href,
            eyesopen: new URL("main/pp7/everyday/assets/b1457ec7.png", self.location).href,
            moose: new URL("main/pp7/everyday/assets/fae165fc.png", self.location).href
        }
    }),
    Gz = bo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("eyesopen", "eyesclosed"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("eyesopen", "eyesclosed", .25)
        }
    }),
    Xz = bo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("eyesclosed"),
        initializeTimeline() {
            this.timeline.to(".e.eyesclosed", {
                scale: .9
            })
        }
    }),
    Yz = bo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("eyesclosed"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                scale: .9
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.eyesclosed", {
                scale: .8
            })
        }
    }),
    Kz = bo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("eyesclosed"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                scale: .8
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.eyesclosed", {
                scale: .7
            })
        }
    }),
    Wz = bo.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("eyesclosed"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.eyesclosed", {
                scale: .5
            })
        }
    }),
    Jz = bo.extend({
        elements: a.elementsFromImages("eyesclosed", "moose"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                scale: .5
            }), s.set(".e.moose", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.eyesclosed", {
                opacity: 0
            }).to(".e.moose", {
                opacity: 1
            }, "<")
        }
    }),
    Zz = bo.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("eyesclosed", "eyesopen"),
        onLoadComplete() {
            s.set(".e.eyesclosed", {
                scale: .5
            }), s.set(".e.eyesopen", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            s.to(".e.eyesclosed", {
                scale: 1,
                duration: .5
            }), a.squashTransition("eyesclosed", "eyesopen", .25), a.startShake("eyesopen", 5, 3, 2)
        }
    }),
    DV = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/a700f5af.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/e7d005c0.png", self.location).href,
            toilet: new URL("main/pp7/everyday/assets/ad7dd2ce.png", self.location).href
        }
    }),
    _z = DV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("toilet"),
        onLoadComplete() {
            s.set(".e.toilet", {
                scale: .6
            })
        },
        onDiscreteProgress() {
            s.to(".e.toilet", {
                scale: 1.3
            })
        }
    }),
    $z = DV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("phone"),
        onLoadComplete() {
            s.set(".e.phone", {
                opacity: 0,
                scale: .5
            })
        },
        onDiscreteProgress() {
            s.to(".e.phone", {
                opacity: 1,
                scale: 1
            })
        }
    }),
    eH = DV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("phone"),
        onDiscreteProgress() {
            a.squashOnce("phone")
        }
    }),
    tH = DV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("phone"),
        onDiscreteProgress(t) {
            a.stopShake("phone"), a.startShake("phone", t / 10, t / 10, 1)
        }
    }),
    nH = DV.extend({
        elements: a.elementsFromImages("door", "phone"),
        onLoadComplete() {
            s.to(".e.phone", {
                y: 700
            })
        },
        onProgress(t) {
            switch (t) {
                case 2:
                case 20:
                case 35:
                case 55:
                case 66:
                case 70:
                case 80:
                case 87:
                case 90:
                case 93:
                case 95:
                case 97:
                case 100:
                    a.squashOnce("door");
                    break
            }
        }
    }),
    iH = E.extend({
        imageManifest: {
            window: new URL("main/pp7/everyday/assets/50e84120.png", self.location).href,
            Adult0: new URL("main/pp7/everyday/assets/84ebb6ff.png", self.location).href,
            Adult1: new URL("main/pp7/everyday/assets/8ddffc67.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/4af42f65.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/63befef5.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/45b1aa96.png", self.location).href
        },
        elements() {
            const e = this.model.get("playerInfo").avatar.replace(/(v2)|(v3)\b/, "");
            return [{
                class: "window-container",
                type: "container",
                children: [{
                    class: "player",
                    type: "img",
                    pos: [0, 0],
                    key: e
                }, {
                    class: "window",
                    type: "img",
                    pos: [0, 0],
                    key: "window"
                }]
            }]
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.window-container", {
                scale: 1.05,
                ease: "none"
            });
            t.name = "tv", this.timeline.add(t)
        }
    }),
    SV = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/6feca827.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    door: [0, 0, 590, 967],
                    handle: [590, 350, 220, 80],
                    sign: [590, 0, 220, 350]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["door", null, [17, 215]],
                ["sign", null, [290, 585]],
                ["handle", null, [474, 628]]
            ])
        }]
    }),
    sH = SV.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                zIndex: 1,
                transformOrigin: "91px 62px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                x: 30,
                rotate: 90
            })
        }
    }),
    oH = SV.extend({
        stepDuration: .25,
        onLoadComplete() {
            s.timeline().set(".e.sign", {
                x: 30,
                rotate: 90,
                transformOrigin: "91px 62px"
            }).to(".e.sign", {
                x: -12,
                y: 153,
                duration: .15
            }).to(".e.sign", {
                rotate: 0,
                duration: 2,
                ease: "elastic.out(2, 0.2)"
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c")
        }
    }),
    aH = SV.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                x: -12,
                y: 153,
                transformOrigin: "91px 62px"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    rH = SV.extend({
        stepDuration: .25,
        onLoadComplete() {
            s.set(".e.sign", {
                x: -12,
                y: 153,
                transformOrigin: "91px 62px"
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c")
        }
    }),
    VH = SV.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                x: -12,
                y: 153,
                transformOrigin: "91px 62px"
            }), s.set(".e.handle", {
                transformOrigin: "59px 42px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handle", {
                rotate: 90
            })
        }
    }),
    vc = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/6feca827.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    door: [0, 0, 590, 967],
                    handle: [590, 350, 220, 80],
                    sign: [590, 0, 220, 350]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["door", null, [17, 215]],
                ["sign", null, [290, 585]],
                ["handle", null, [474, 628]]
            ])
        }]
    }),
    lH = vc.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                zIndex: 1,
                transformOrigin: "91px 62px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                x: 30,
                rotate: 90
            })
        }
    }),
    AH = vc.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                x: 30,
                rotate: 90,
                transformOrigin: "91px 62px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                x: -12,
                y: 153,
                duration: .01
            }).to(".e.sign", {
                rotate: 0,
                ease: "elastic.out(2, 0.2)"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    cH = vc.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                x: -12,
                y: 153,
                transformOrigin: "91px 62px"
            }), s.set(".e.handle", {
                transformOrigin: "91px 62px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scale: 1.1
            }).to(".e.c", {
                scale: .9
            }).to(".e.c", {
                scale: 1.1
            }).to(".e.c", {
                scale: .9
            })
        },
        onStartProgress() {
            a.startShake("c")
        },
        onStopProgress() {
            a.stopShake("c")
        }
    }),
    dH = vc.extend({
        onLoadComplete() {
            s.set(".e.sign", {
                x: -12,
                y: 153,
                transformOrigin: "91px 62px"
            }), s.set(".e.handle", {
                transformOrigin: "59px 42px"
            }), s.fromTo(".e.c", {
                scale: .9
            }, {
                scale: 1,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handle", {
                rotate: 90
            })
        }
    }),
    G0 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/798bc27d.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    bottle: [0, 0, 270, 540],
                    bottleTop: [95, 540, 183, 91],
                    cork: [0, 540, 94, 108],
                    glass: [270, 0, 300, 431],
                    wine: [286, 431, 284, 182]
                }
            }
        }
    }),
    pH = G0.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", [
            ["bottle", null, [285, 357]],
            ["cork", null, [255, 447]],
            ["bottleTop", null, [298, 405]]
        ]),
        onLoadComplete() {
            s.set(".e.cork", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cork", {
                scaleY: .3,
                duration: .4
            }).to(".e.cork", {
                scaleY: 1.1,
                duration: .2
            }).to(".e.cork", {
                x: 20,
                y: -800
            }, "<")
        }
    }),
    hH = G0.extend({
        elements: a.elementsFromSprite("sprite", [
            ["glass", null, [285, 350]],
            ["wine", null, [345, 368]]
        ]),
        onLoadComplete() {
            s.set(".e.wine", {
                clipPath: "inset(182px 0 0 0)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.wine", {
                clipPath: "inset(20px 0 0 0)"
            })
        }
    }),
    uH = G0.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", [
            ["bottle", null, [285, 357]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.bottle", {
                x: 250,
                y: -450,
                scale: .3,
                rotate: 230,
                duration: 1,
                ease: "back.in(2)"
            }).to(".e.bottle", {
                opacity: 0,
                duration: .15
            }, .85)
        }
    }),
    wc = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/86981903.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    radio: [0, 0, 842, 831],
                    dial: [842, 0, 154, 313]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["radio", null, [84.5, 79]],
                ["dial", null, [525, 253]]
            ])
        }]
    }),
    mH = wc.extend({
        onLoadComplete() {
            s.set(".e.dial", {
                rotate: -20
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dial", {
                rotate: 60
            })
        }
    }),
    fH = wc.extend({
        onLoadComplete() {
            s.set(".e.dial", {
                rotate: 60
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dial", {
                rotate: 10
            })
        }
    }),
    qH = wc.extend({
        onLoadComplete() {
            s.set(".e.dial", {
                rotate: 10
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dial", {
                rotate: 35
            })
        }
    }),
    gH = wc.extend({
        onLoadComplete() {
            s.set(".e.dial", {
                rotate: 35
            }), s.set(".e.c", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: 6
            }).to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: 6
            }).to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.c", {
                scaleY: .7
            }).to(".e.c", {
                scaleY: 1.1,
                skewX: 6
            })
        }
    }),
    X0 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/56a7427f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    closet: [0, 0, 932, 756],
                    door: [0, 756, 496, 756],
                    hiding: [0, 1510, 131, 209]
                }
            }
        }
    }),
    yH = X0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["door", null, [122, 468]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                x: 150,
                scale: .6
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.c", {
                    x: 100,
                    scale: .7,
                    duration: 1,
                    ease: "none"
                }).to(".e.c", {
                    x: 50,
                    scale: .85,
                    duration: 1,
                    ease: "none"
                }).to(".e.c", {
                    x: 0,
                    scale: 1,
                    duration: 1,
                    ease: "none"
                }).to(".e.door", {
                    x: -400,
                    duration: 1,
                    ease: "bounce.out"
                }),
                e = s.timeline({
                    repeat: 9
                }).to(".e.c", {
                    y: -15,
                    duration: .15,
                    ease: "power2.inOut"
                }).to(".e.c", {
                    y: 0,
                    duration: .15,
                    ease: "power2.inOut"
                });
            this.timeline.add(t, 0), this.timeline.add(e, 0)
        }
    }),
    bH = X0.extend({
        stepDuration: .75,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["door", null, [122, 468]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.door", {
                x: -400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: 0,
                duration: 1,
                ease: "bounce.out"
            })
        }
    }),
    vH = X0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["hiding", null, [427, 754]],
                ["door", null, [122, 468]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.door", {
                opacity: .25,
                duration: 1
            }).fillTime(2)
        }
    }),
    xc = E.extend({
        imageManifest: {
            inlaws: new URL("main/pp7/everyday/assets/0b4d2622.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "inlaws",
                images: {
                    ringRing: [604, 692, 72, 109, 264, 764],
                    ignore: [604, 878, 606, 679, 161, 164],
                    games: [740, 10, 584, 858, 71, 208],
                    fire: [921, 1567, 220, 292, 278, 393],
                    fighting: [400, 1567, 511, 248, 316, 243],
                    dishes: [10, 1560, 380, 340, 248, 316],
                    cloudBubble: [10, 10, 720, 672, 164, 140],
                    calling: [10, 692, 584, 858, 71, 208],
                    missed: [1220, 878, 584, 858, 71, 208]
                }
            }
        }
    }),
    wH = xc.extend({
        stepDuration: .3,
        elements: a.elementsFromSprite("sprite", ["calling"]),
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).call(a.startShake, ["calling", 5, 0, 5], 0).call(a.stopShake, ["calling"], .2).fillTime(.8)
        },
        onDiscreteProgress() {
            a.squashOnce("calling", .3)
        }
    }),
    xH = xc.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["ignore", "ringRing"])
        }],
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).set(".e.ringRing", {
                hidden: !1
            }, 0).set(".e.ringRing", {
                hidden: !0
            }, .1).set(".e.ringRing", {
                hidden: !1
            }, .2).set(".e.ringRing", {
                hidden: !0
            }, .3).fillTime(.8)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    kH = xc.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["cloudBubble", "dishes", "fighting", "fire"])
        }],
        onLoadComplete() {
            s.set(".e.dishes, .e.fighting, .e.fire", {
                y: -30,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dishes", {
                y: 0,
                opacity: 1
            }, 0).to(".e.dishes", {
                y: 30,
                opacity: 0
            }, 1).to(".e.fighting", {
                y: 0,
                opacity: 1
            }, 1).to(".e.fighting", {
                y: 30,
                opacity: 0
            }, 2).to(".e.fire", {
                y: 0,
                opacity: 1
            }, 2)
        }
    }),
    CH = xc.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["missed", "games"]),
        onLoadComplete() {
            s.set(".e.games", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("missed", "games", 1)).add(a.squashOnce("games", 1)).add(a.squashOnce("games", 1)).add(a.squashOnce("games", 1)).add(a.squashOnce("games", 1))
        }
    }),
    Y0 = E.extend({
        imageManifest: {
            phone: new URL("main/pp7/everyday/assets/fb8f0883.png", self.location).href,
            phoneSet: new URL("main/pp7/everyday/assets/7a9378d2.png", self.location).href
        }
    }),
    RH = Y0.extend({
        elements: a.elementsFromImages("phone")
    }),
    DH = Y0.extend({
        elements: a.elementsFromImages("phone")
    }),
    SH = Y0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("phone", "phoneSet")
        }],
        onLoadComplete() {
            s.set(".e.phoneSet", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(4).add(a.squashTransition("phone", "phoneSet"))
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    kc = E.extend({
        imageManifest: {
            box: new URL("main/pp7/everyday/assets/7a97c949.png", self.location).href,
            cabinet: new URL("main/pp7/everyday/assets/32655c18.png", self.location).href,
            cup: new URL("main/pp7/everyday/assets/07ce123c.png", self.location).href,
            cuptea: new URL("main/pp7/everyday/assets/74da7f27.png", self.location).href,
            lid: new URL("main/pp7/everyday/assets/8cded2d4.png", self.location).href,
            plate: new URL("main/pp7/everyday/assets/f2d172a3.png", self.location).href,
            pot: new URL("main/pp7/everyday/assets/1c243c37.png", self.location).href,
            spoon: new URL("main/pp7/everyday/assets/00d51be0.png", self.location).href,
            timer: new URL("main/pp7/everyday/assets/8f01ccb1.png", self.location).href,
            timerdial: new URL("main/pp7/everyday/assets/93ca4e52.png", self.location).href
        }
    }),
    TH = kc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("cabinet", "box"),
        onLoadComplete() {
            s.set(".e.box", {
                scale: .5,
                x: -50,
                y: -60
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.box", {
                scale: .6
            }).to(".e.box", {
                scale: .5
            }).to(".e.box", {
                scale: 1.1,
                x: 0,
                y: 300
            })
        }
    }),
    EH = kc.extend({
        elements: a.elementsFromImages("lid", "pot"),
        onLoadComplete() {
            s.set(".e.lid", {
                x: -6,
                y: -235
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.lid", {
                y: -241
            }).to(".e.lid", {
                rotate: -3
            }).to(".e.lid", {
                rotate: 3,
                y: -250
            }).to(".e.lid", {
                rotate: -4,
                y: -255
            }).to(".e.lid", {
                rotate: 4,
                y: -258
            }).to(".e.lid", {
                rotate: -3
            }).to(".e.lid", {
                rotate: 3
            })
        }
    }),
    LH = kc.extend({
        elements: a.elementsFromImages("cup", "cuptea", "pot", "spoon"),
        onLoadComplete() {
            s.set(".e.pot", {
                y: -1500,
                x: 500,
                rotate: -50
            }), s.set(".e.cuptea", {
                opacity: 0
            }), s.set(".e.spoon", {
                rotate: 160,
                x: 160,
                y: 170
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pot", {
                x: 300,
                y: -350
            }).to(".e.cuptea", {
                opacity: 1
            }).to(".e.cup", {
                opacity: 0
            }).to(".e.pot", {
                y: -1500,
                x: 800,
                rotate: 200
            }, "<").to(".e.cuptea", {
                scale: 1.1
            }).to(".e.cuptea", {
                scale: 1
            })
        }
    }),
    BH = kc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("spoon", "cuptea"),
        onLoadComplete() {
            s.set(".e.spoon", {
                rotate: 160,
                x: 160,
                y: 170
            })
        },
        onDiscreteProgress() {
            s.to(".e.cuptea", {
                scale: 1.2,
                y: 350
            })
        }
    }),
    Cc = E.extend({
        imageManifest: {
            book1: new URL("main/pp7/everyday/assets/6e019287.png", self.location).href,
            book2: new URL("main/pp7/everyday/assets/0c409c13.png", self.location).href,
            bookCover: new URL("main/pp7/everyday/assets/17feae75.png", self.location).href,
            read: new URL("main/pp7/everyday/assets/0d5e3b34.png", self.location).href,
            window: new URL("main/pp7/everyday/assets/3d9e8774.png", self.location).href
        }
    }),
    MH = Cc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("bookCover", "book2"),
        onLoadComplete() {
            s.set(".e.book2", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("bookCover", "book2", .35)
        }
    }),
    OH = Cc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("book2", "book1"),
        onLoadComplete() {
            s.set(".e.book1", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("book2", "book1", .35)
        }
    }),
    IH = Cc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("read"),
        onDiscreteProgress() {
            a.squashOnce("read", .35)
        }
    }),
    PH = Cc.extend({
        elements: a.elementsFromImages("window"),
        onStartProgress() {
            a.startHoldShake("window")
        },
        onStopProgress() {
            a.stopHoldShake("window")
        }
    }),
    Rc = E.extend({
        imageManifest: {
            crisis: new URL("main/pp7/everyday/assets/2b62a4e4.png", self.location).href,
            jacket: new URL("main/pp7/everyday/assets/7d96286e.png", self.location).href
        }
    }),
    UH = Rc.extend({
        elements: a.elementsFromImages("crisis"),
        initializeTimeline() {
            this.timeline.to(".e.crisis", {
                rotate: 10,
                y: 100
            }).to(".e.crisis", {
                rotate: -10,
                y: 200,
                scale: 1.5
            }).to(".e.crisis", {
                rotate: 10,
                y: 400,
                scale: 2
            }).to(".e.crisis", {
                rotate: -10,
                y: 600,
                scale: 2.5
            })
        }
    }),
    FH = Rc.extend({
        elements: a.elementsFromImages("crisis"),
        onLoadComplete() {
            s.set(".e.crisis", {
                rotate: -10,
                y: 600,
                scale: 2.5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crisis", {
                scale: 1,
                y: 0,
                rotate: 0
            }).to(".e.crisis", {
                scale: 2,
                y: 0
            })
        },
        onProgress(t) {
            t === 50 && a.startShake("crisis", 2, 5, 2)
        }
    }),
    jH = Rc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("crisis"),
        onDiscreteProgress() {
            s.timeline().to(".e.crisis", {
                rotate: "random(-360, 360, 45)",
                scale: 1.5
            }).to(".e.crisis", {
                scale: 1
            })
        }
    }),
    QH = Rc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("jacket"),
        onDiscreteProgress() {
            s.to(".e.jacket", {
                scale: 5,
                rotate: 720
            })
        }
    }),
    Dc = E.extend({
        imageManifest: {
            novel: new URL("main/pp7/everyday/assets/6846ceb6.png", self.location).href,
            inside: new URL("main/pp7/everyday/assets/fe9307fc.png", self.location).href
        }
    }),
    zH = Dc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("novel", "inside"),
        onLoadComplete() {
            s.set(".e.inside", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("novel", "inside", .35)
        }
    }),
    HH = Dc.extend({
        elements: a.elementsFromImages("inside")
    }),
    NH = Dc.extend({
        elements: a.elementsFromImages("inside"),
        onStartProgress() {
            a.startHoldShake("inside")
        },
        onStopProgress() {
            a.stopHoldShake("inside")
        }
    }),
    GH = Dc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("inside", "novel"),
        onLoadComplete() {
            s.set(".e.novel", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("inside", "novel", .35)
        }
    }),
    Sc = E.extend({
        imageManifest: {
            telenovela: new URL("main/pp7/everyday/assets/e3c54a51.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "telenovela",
                images: {
                    tv: [10, 10, 876, 825, 73, 66],
                    commercial: [1472, 10, 536, 458, 386, 133],
                    text20: [768, 956, 163, 58, 737, 316],
                    text10: [445, 845, 416, 71, 724, 185],
                    text03: [10, 922, 393, 66, 733, 201],
                    text02: [413, 926, 345, 64, 734, 225],
                    text01: [10, 998, 295, 62, 735, 250],
                    text00: [10, 845, 425, 67, 732, 185],
                    gloria0: [1472, 478, 517, 426, 411, 142],
                    gloria1: [896, 520, 517, 426, 411, 142],
                    rafael: [1423, 914, 517, 394, 431, 142],
                    off: [896, 10, 566, 500, 379, 110]
                }
            }
        }
    }),
    XH = Sc.extend({
        elements: a.elementsFromSprite("sprite", ["off", "gloria0", "tv"]),
        onLoadComplete() {
            s.set(".e.gloria0", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(3).to(".e.gloria0", {
                opacity: 1
            })
        }
    }),
    YH = Sc.extend({
        stepDuration: .35,
        lastStepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["gloria0", "gloria1", "text00", "text01", "text02", "text03", "tv"]),
        onLoadComplete() {
            s.set(".e.gloria1", {
                visibility: "hidden"
            }), s.set(".e.text00, .e.text01, .e.text02, .e.text03", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(4).set(".e.text00", {
                hidden: !1
            }, .5).set(".e.text00", {
                hidden: !0
            }, 1.5).set(".e.text01", {
                hidden: !1
            }, 1.5).set(".e.text01", {
                hidden: !0
            }, 2.5).set(".e.text02", {
                hidden: !1
            }, 2.5).set(".e.gloria0", {
                visibility: "hidden"
            }, 2.5).set(".e.gloria1", {
                visibility: "visible"
            }, 2.5).set(".e.text02", {
                hidden: !0
            }, 3.5).set(".e.text03", {
                hidden: !1
            }, 3.5)
        }
    }),
    KH = Sc.extend({
        elements: a.elementsFromSprite("sprite", ["gloria1", "text10", "tv"]),
        initializeTimeline() {
            this.timeline.to(".e.gloria1", {
                y: 26.5,
                scale: 1.35,
                clipPath: "inset(10% 17% 22% 16%)",
                ease: "none"
            }).to(".e.gloria1", {
                y: 53,
                scale: 1.7,
                clipPath: "inset(15% 25% 31% 22%)",
                ease: "none"
            }).to(".e.gloria1", {
                y: 79.5,
                scale: 2.05,
                clipPath: "inset(18% 28% 35% 27%)",
                ease: "none"
            }).to(".e.gloria1", {
                y: 106,
                scale: 2.4,
                clipPath: "inset(20% 30% 40% 31%)",
                ease: "none"
            })
        }
    }),
    WH = Sc.extend({
        stepDuration: .35,
        lastStepDuration: .75,
        elements: a.elementsFromSprite("sprite", ["rafael", "text20", "text10", "off", "commercial", "tv"]),
        onLoadComplete() {
            s.set(".e.text20, .e.text10, .e.off, .e.commercial", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(4).set(".e.text20", {
                hidden: !1
            }, .5).set(".e.text20", {
                hidden: !0
            }, 1.5).set(".e.text10", {
                hidden: !1
            }, 1.5).set(".e.text10", {
                hidden: !0
            }, 2.5).set(".e.off", {
                hidden: !1
            }, 2.5).set(".e.commercial", {
                hidden: !1
            }, 3.5)
        }
    }),
    K0 = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/3e9d1890.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    chair: [641, 0, 463, 649],
                    grate: [0, 0, 641, 558],
                    hole: [0, 558, 641, 547],
                    candy: [641, 649, 393, 312]
                }
            }
        }
    }),
    JH = K0.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["chair", null, [365, 268]],
            ["grate", null, [221, 179]]
        ]),
        onLoadComplete() {
            s.set(".e.chair", {
                x: -300,
                y: 100,
                opacity: 0
            }), s.set(".e.grate", {
                x: 150,
                y: -400,
                scale: .4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.chair", {
                x: 0,
                y: 0,
                opacity: 1
            })
        }
    }),
    ZH = K0.extend({
        elements: a.elementsFromSprite("sprite", [
            ["chair", null, [365, 268]],
            ["hole", null, [221, 179]],
            ["grate", null, [221, 179]]
        ]),
        onLoadComplete() {
            s.set(".e.grate, .e.hole", {
                x: 150,
                y: -400,
                scale: .4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.grate", {
                x: 50,
                y: -350
            })
        }
    }),
    _H = K0.extend({
        elements: a.elementsFromSprite("sprite", [
            ["chair", null, [365, 268]],
            ["hole", null, [221, 179]],
            ["candy", null, [344, 303]],
            ["grate", null, [221, 179]]
        ]),
        onLoadComplete() {
            s.to(".e.chair", {
                opacity: 0,
                duration: .4
            }), s.fromTo(".e.candy", {
                x: -100,
                y: 150,
                opacity: 1
            }, {
                y: 0,
                opacity: 1,
                duration: .4
            }), s.fromTo(".e.grate", {
                x: 50,
                y: -350,
                scale: .4
            }, {
                y: 400,
                rotate: -110,
                scale: 1,
                opacity: 0,
                duration: .4
            }), s.fromTo(".e.hole", {
                x: 150,
                y: -400,
                scale: .4
            }, {
                x: 0,
                y: -100,
                scale: 1,
                duration: .4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.candy", {
                x: 100,
                y: -100,
                duration: 1
            }).fillTime(.5).set(".e.grate", {
                x: -100,
                y: -50,
                rotate: 0,
                scale: 1
            }).to(".e.grate", {
                x: 0,
                y: -100,
                duration: 1
            }).to(".e.grate", {
                opacity: 1,
                duration: .5
            }, "<")
        }
    }),
    TV = E.extend({
        imageManifest: {
            bear: new URL("main/pp7/everyday/assets/2e098c2c.png", self.location).href,
            brick: new URL("main/pp7/everyday/assets/675bbaf1.png", self.location).href,
            comic: new URL("main/pp7/everyday/assets/61c07b2a.png", self.location).href,
            distracted: new URL("main/pp7/everyday/assets/4312d019.png", self.location).href,
            shrug: new URL("main/pp7/everyday/assets/5d0ba501.png", self.location).href
        }
    }),
    $H = TV.extend({
        elements: a.elementsFromImages("distracted"),
        initializeTimeline() {
            this.timeline.to(".e.distracted", {
                scale: .5
            })
        },
        onStartProgress() {
            a.startShake("distracted", 10, 10, .5)
        },
        onStopProgress() {
            a.stopShake("distracted")
        }
    }),
    eN = TV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bear"),
        onDiscreteProgress() {
            s.to(".e.bear", {
                y: 1500,
                scale: 1.1,
                rotate: 200
            })
        }
    }),
    tN = TV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["brick", "brick1"], ["brick", "brick2"], ["brick", "brick3"]),
        onLoadComplete() {
            s.set([".e.brick1", ".e.brick2", ".e.brick3"], {
                scale: .3,
                y: -1500
            }), s.to(".e.brick3", {
                y: 0
            }), s.to(".e.brick2", {
                x: -150,
                y: 25,
                rotate: -20
            }), s.to(".e.brick1", {
                x: 100,
                y: 25,
                rotate: 30
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.brick1", {
                y: 1500,
                rotate: 200
            }).to(".e.brick2", {
                y: 1500,
                rotate: 200
            }, "<").to(".e.brick3", {
                y: 1500,
                rotate: 200
            }, "<")
        }
    }),
    nN = TV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("comic"),
        onDiscreteProgress() {
            s.to(".e.comic", {
                y: 1500,
                rotate: 200
            })
        }
    }),
    iN = TV.extend({
        elements: a.elementsFromImages("shrug"),
        initializeTimeline() {
            this.timeline.to(".e.shrug", {
                y: -100,
                scaleY: 1.1
            }).to(".e.shrug", {
                y: 0,
                scaleY: 1
            }).to(".e.shrug", {
                y: -100,
                scaleY: 1.1
            }).to(".e.shrug", {
                y: 0,
                scaleY: 1
            })
        }
    }),
    W0 = E.extend({
        imageManifest: {
            hands: new URL("main/pp7/everyday/assets/25a5378e.png", self.location).href,
            mail: new URL("main/pp7/everyday/assets/44196e94.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/7553653e.png", self.location).href
        }
    }),
    sN = W0.extend({
        elements: a.elementsFromImages("mail"),
        onStartProgress() {
            a.startHoldShake("mail")
        },
        onStopProgress() {
            a.stopHoldShake("mail")
        }
    }),
    oN = W0.extend({
        stepDuration: 1.5,
        elements: a.elementsFromImages("mail", "hands"),
        onLoadComplete() {
            s.set(".e.hands", {
                y: 500
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.hands", {
                y: 0,
                duration: .5
            }).to(".e.hands", {
                y: 1e3,
                duration: .5
            }).to(".e.mail", {
                y: 1e3,
                duration: .5
            }, "<")
        }
    }),
    aN = W0.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("trash", "mail", "hands"),
        onLoadComplete() {
            s.set([".e.mail", ".e.hands"], {
                y: -300
            }), s.set(".e.trash", {
                y: 200
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.hands", {
                y: 500,
                opacity: 0,
                duration: .25
            }).to(".e.mail", {
                y: 0,
                scale: 0,
                opacity: 0
            }, "<")
        }
    }),
    EV = E.extend({
        imageManifest: {
            laptop: new URL("main/pp7/everyday/assets/616d8cd4.png", self.location).href,
            pic1: new URL("main/pp7/everyday/assets/5ee5c64a.png", self.location).href,
            pic2: new URL("main/pp7/everyday/assets/11c8774c.png", self.location).href,
            pic3: new URL("main/pp7/everyday/assets/4cab981a.png", self.location).href,
            post: new URL("main/pp7/everyday/assets/094b690c.png", self.location).href
        }
    }),
    rN = EV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("laptop"),
        onDiscreteProgress() {
            a.scaleBounce("laptop")
        }
    }),
    VN = EV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pic1"),
        onLoadComplete() {
            s.fromTo(".e.pic1", {
                y: 1e3
            }, {
                y: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.pic1", {
                y: -1e3,
                opacity: 0
            })
        }
    }),
    lN = EV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pic2"),
        onLoadComplete() {
            s.fromTo(".e.pic2", {
                y: 1e3
            }, {
                y: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.pic2", {
                y: -1e3,
                opacity: 0
            })
        }
    }),
    AN = EV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pic3"),
        onLoadComplete() {
            s.fromTo(".e.pic3", {
                y: 1e3
            }, {
                y: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.pic3", {
                y: -1e3,
                opacity: 0
            })
        }
    }),
    cN = EV.extend({
        elements: a.elementsFromImages("post"),
        onDiscreteProgress() {
            a.scaleBounce("post", .9, .1)
        }
    }),
    Tc = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/53125c5a.png", self.location).href,
            house: new URL("main/pp7/everyday/assets/ca374d27.png", self.location).href,
            tree: new URL("main/pp7/everyday/assets/94e7a243.png", self.location).href,
            yard: new URL("main/pp7/everyday/assets/f45f6651.png", self.location).href
        }
    }),
    dN = Tc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("door"),
        onDiscreteProgress() {
            a.squashOnce("door", .35)
        }
    }),
    pN = Tc.extend({
        elements: a.elementsFromImages("yard")
    }),
    hN = Tc.extend({
        elements: a.elementsFromImages("house"),
        initializeTimeline() {
            this.timeline.to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: 6
            }).to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: 6
            }).to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: -6
            }).to(".e.house", {
                scaleY: .7
            }).to(".e.house", {
                scaleY: 1.1,
                skewX: 6
            })
        }
    }),
    uN = Tc.extend({
        elements: a.elementsFromImages("tree")
    }),
    Ec = E.extend({
        imageManifest: {
            bag: new URL("main/pp7/everyday/assets/c7a67948.png", self.location).href,
            chips: new URL("main/pp7/everyday/assets/cd30988b.png", self.location).href,
            dump: new URL("main/pp7/everyday/assets/d5e715e7.png", self.location).href
        }
    }),
    mN = Ec.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("bag"),
        onLoadComplete() {
            s.set(".e.bag", {
                y: 1e3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bag", {
                y: 0
            })
        }
    }),
    fN = Ec.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("bag", "dump"),
        onLoadComplete() {
            s.set(".e.dump", {
                rotation: -155,
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("bag", "dump", .35)
        }
    }),
    qN = Ec.extend({
        elements: a.elementsFromImages("dump"),
        onLoadComplete() {
            s.set(".e.dump", {
                rotation: -155
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dump", {
                x: -200,
                y: -200,
                rotation: 0
            })
        }
    }),
    gN = Ec.extend({
        elements: [...a.elementsFromImages("dump", "chips"), {
            type: "div",
            class: "particles",
            pos: [-25, -275]
        }],
        onLoadComplete() {
            s.set(".e.dump", {
                x: -200,
                y: -200
            })
        },
        initializeTimeline() {
            this.emitter = a.addParticleEmitter({
                container: "particles",
                image: "chips",
                autoplay: !1,
                settings: {
                    frequency: .1,
                    minSize: 450,
                    maxSize: 600,
                    randomAngleRange: 15,
                    force: 4,
                    gravity: 9.8
                }
            }, this)
        },
        onStartProgress() {
            this.emitter.play()
        },
        onStopProgress() {
            this.emitter.pause()
        }
    }),
    Lc = E.extend({
        imageManifest: {
            bathBubbles: new URL("main/pp7/everyday/assets/1d7089b7.png", self.location).href,
            bathEmpty: new URL("main/pp7/everyday/assets/6a823c97.png", self.location).href,
            bathroomDoor: new URL("main/pp7/everyday/assets/434d9624.png", self.location).href,
            devilInBath: new URL("main/pp7/everyday/assets/57aa926c.png", self.location).href
        }
    }),
    yN = Lc.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("bathroomDoor"),
        onLoadComplete() {
            s.set(".e.bathroomDoor", {
                scale: 2
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.bathroomDoor", {
                scale: 1.8,
                duration: .25
            }).to(".e.bathroomDoor", {
                scale: 2,
                duration: .25
            })
        }
    }),
    bN = Lc.extend({
        elements: [...a.elementsFromImages("bathEmpty"), {
            type: "div",
            class: "particles",
            pos: [-300, 70]
        }],
        onLoadComplete() {
            s.set(".e.bathEmpty", {
                scale: 2
            })
        },
        initializeTimeline() {
            this.emitter = a.addParticleEmitter({
                numberOfParticles: 15,
                container: "particles",
                autoplay: !1,
                zIndex: -1,
                settings: {
                    frequency: .025,
                    from: {
                        backgroundColor: "#8cdfe8",
                        border: "4px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 35,
                    maxSize: 55,
                    angle: 90,
                    force: 2,
                    gravity: 9.8
                }
            }, this)
        },
        onStartProgress() {
            this.emitter.play()
        },
        onStopProgress() {
            this.emitter.pause()
        }
    }),
    vN = Lc.extend({
        lastStepDuration: .5,
        elements: [...a.elementsFromImages("bathEmpty", "bathBubbles"), {
            type: "div",
            class: "particles",
            pos: [-300, 70]
        }],
        onLoadComplete() {
            s.set([".e.bathEmpty", ".e.bathBubbles"], {
                scale: 2
            }), s.set(".e.bathBubbles", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.emitter = a.addParticleEmitter({
                numberOfParticles: 15,
                container: "particles",
                autoplay: !0,
                zIndex: -1,
                settings: {
                    frequency: .025,
                    from: {
                        backgroundColor: "#8cdfe8",
                        border: "4px solid black",
                        opacity: 1
                    },
                    to: {
                        duration: .4,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 35,
                    maxSize: 55,
                    angle: 90,
                    force: 2,
                    gravity: 9.8
                }
            }, this)
        },
        onDiscreteProgress(t) {
            s.to(".e.bathBubbles", {
                opacity: 1 * (t / 100)
            })
        }
    }),
    wN = Lc.extend({
        elements: a.elementsFromImages("devilInBath"),
        onLoadComplete() {
            s.set(".e.devilInBath", {
                scale: 2
            })
        }
    }),
    xN = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/4cfc0667.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    table: [0, 0, 915, 746],
                    book: [915, 453, 305, 241],
                    keys: [915, 311, 130, 142],
                    pencil: [1045, 311, 90, 142],
                    cup: [1135, 0, 220, 311],
                    cupSpilled: [915, 0, 220, 311]
                }
            }
        }
    }),
    kN = xN.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["table", null, [277, 42]],
                ["book", null, [439, 277]],
                ["keys", null, [419, 115]],
                ["pencil", null, [459, 255]],
                ["cup", null, [354, 710]],
                ["cupSpilled", null, [364, 720]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.cupSpilled", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(4).addLabel("flip", 4.3).to(".e.table", {
                x: -20,
                y: -240,
                rotate: 120,
                ease: "back.in(1)"
            }).to(".e.book", {
                x: -20,
                y: -300,
                rotate: 20,
                ease: "power1.out"
            }, "flip").to(".e.keys", {
                x: -120,
                y: -300,
                rotate: -60,
                ease: "power1.out"
            }, "flip").to(".e.pencil", {
                x: -40,
                y: -440,
                rotate: -320,
                ease: "power1.out"
            }, "flip").to(".e.cup", {
                x: -40,
                y: -280,
                rotate: 70,
                ease: "power1.out"
            }, "flip").to(".e.cupSpilled", {
                x: -40,
                y: -280,
                rotate: 70,
                ease: "power1.out"
            }, "flip").set(".e.cup", {
                visibility: "hidden"
            }, 4.4).set(".e.cupSpilled", {
                visibility: "visible"
            }, 4.4)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    J0 = E.extend({
        className: "hide-magazine",
        titles: ["SIN<br/>CITY", "RED HOT<br/>HORNS", "DEVILISH", "PITCHED<br/>FORKS", "CLOVEN<br/>HOOVES", "FANGED<br/>FANTASIES", "PENTAGRAM<br/>FORUM", "GOATEE<br/>FANCY"],
        imageManifest: {
            magazine: new URL("main/pp7/everyday/assets/b3ffaf51.png", self.location).href,
            pillow: new URL("main/pp7/everyday/assets/41a235d5.png", self.location).href
        },
        elements: [{
            class: "pillow",
            type: "img",
            pos: [0, 0],
            key: "pillow"
        }, {
            class: "magazine-container",
            type: "container",
            children: [{
                class: "magazine",
                type: "img",
                pos: [0, 0],
                key: "magazine"
            }, {
                class: "cover",
                type: "div",
                pos: [200, 295],
                html: ""
            }]
        }],
        bindings: {
            ".cover": {
                observe: "magazineTitle",
                updateMethod: "html"
            }
        },
        onLoadComplete() {
            this.model.get("magazineTitle") || this.model.set({
                magazineTitle: X.exports.sample(this.titles)
            })
        }
    }),
    CN = J0.extend({
        stepDuration: .75,
        initializeTimeline() {
            s.set(".e.magazine-container", {
                visibility: "hidden"
            });
            const t = s.timeline().to(".e.pillow", {
                y: -300
            });
            t.name = "pillow", this.timeline.add(t)
        }
    }),
    RN = J0.extend({
        stepDuration: .75,
        initializeTimeline() {
            s.set(".e.magazine-container", {
                y: 30,
                opacity: 0
            }), s.to(".e.magazine-container", {
                opacity: 1,
                rotation: -10,
                duration: .25
            }), s.set(".e.pillow", {
                y: -300
            });
            const t = s.timeline().to(".e.magazine-container", {
                scale: .6,
                y: 230,
                rotation: -85
            });
            t.name = "magazine", this.timeline.add(t)
        }
    }),
    DN = J0.extend({
        stepDuration: .75,
        initializeTimeline() {
            s.set(".e.magazine-container", {
                scale: .6,
                y: 230,
                rotation: -85
            }), s.set(".e.pillow", {
                y: -300,
                zIndex: 1
            });
            const t = s.timeline().to(".e.pillow", {
                y: 190
            });
            t.name = "pillow", this.timeline.add(t)
        }
    }),
    Bc = E.extend({
        imageManifest: {
            sneak: new URL("main/pp7/everyday/assets/a6ea2de0.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sneak",
                images: {
                    head: [578, 476, 134, 118, 556, 433],
                    hands: [296, 476, 272, 54, 643, 364],
                    opening: [10, 10, 405, 369, 379, 191],
                    running: [296, 540, 93, 89, 0, 0],
                    closed: [10, 389, 276, 181, 500, 360],
                    open: [425, 10, 322, 456, 272, 339]
                }
            }
        }
    }),
    SN = Bc.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", ["open", "closed"]),
        onLoadComplete() {
            s.set(".e.closed", {
                clipPath: "inset(0% 0% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.closed", {
                y: -150,
                clipPath: "inset(82% 0% 0% 0%)"
            })
        }
    }),
    TN = Bc.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["open", "opening"])
        }],
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    EN = Bc.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["open", "head", "hands"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.head", {
                y: 80,
                clipPath: "inset(0% 0% 61% 0%)",
                duration: 1
            }).to(".e.head", {
                y: 115,
                clipPath: "inset(0% 0% 100% 0%)",
                duration: .02
            }).to(".e.hands", {
                y: 30,
                clipPath: "inset(0% 0% 100% 0%)",
                duration: .02
            }, 1).fillTime(.2)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    LN = Bc.extend({
        stepDuration: .5,
        elements: [...a.elementsFromSprite("sprite", ["open"]), {
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["running"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                top: 528,
                left: 393,
                width: 212,
                height: 144,
                overflow: "hidden"
            }), s.set(".e.running", {
                x: -110,
                y: 45,
                scale: 1.4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.running", {
                x: 230,
                scale: 1.4
            }).set(".e.running", {
                scaleX: -1.4
            }).to(".e.running", {
                x: -110,
                scaleX: -1.1,
                scaleY: 1.1
            }).set(".e.running", {
                scale: 1.1
            }).to(".e.running", {
                x: 230,
                scale: .8
            }).set(".e.running", {
                scaleX: -.8
            }).to(".e.running", {
                x: -110,
                scaleX: -.5,
                scaleY: .5
            }).set(".e.running", {
                scale: .5
            }).to(".e.running", {
                x: 230,
                scale: .3
            })
        }
    }),
    Mc = E.extend({
        imageManifest: {
            coaster: new URL("main/pp7/everyday/assets/6d3577f5.png", self.location).href,
            coasterRefuse: new URL("main/pp7/everyday/assets/5aaf1ef2.png", self.location).href,
            drinkRing: new URL("main/pp7/everyday/assets/f348e737.png", self.location).href,
            drinks: new URL("main/pp7/everyday/assets/10705a80.png", self.location).href
        }
    }),
    BN = Mc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("drinks"),
        onDiscreteProgress() {
            a.squashOnce("drinks", .25)
        }
    }),
    MN = Mc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("coaster"),
        onDiscreteProgress() {
            a.squashOnce("coaster", .25)
        }
    }),
    ON = Mc.extend({
        elements: a.elementsFromImages("coasterRefuse")
    }),
    IN = Mc.extend({
        elements: a.elementsFromImages("drinkRing")
    }),
    Z0 = E.extend({
        imageManifest: {
            grandpa1: new URL("main/pp7/everyday/assets/4f620622.png", self.location).href,
            grandpa2: new URL("main/pp7/everyday/assets/859a81f3.png", self.location).href,
            grandpa3: new URL("main/pp7/everyday/assets/f999c4ee.png", self.location).href
        }
    }),
    PN = Z0.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("grandpa1"),
        onDiscreteProgress() {
            a.squashOnce("grandpa1", .4)
        }
    }),
    UN = Z0.extend({
        elements: a.elementsFromImages("grandpa2"),
        onStartProgress() {
            a.startHoldShake("grandpa2")
        },
        onStopProgress() {
            a.stopHoldShake("grandpa2")
        }
    }),
    FN = Z0.extend({
        elements: a.elementsFromImages("grandpa3"),
        onLoadComplete() {
            a.startHoldShake("grandpa3")
        }
    }),
    Oc = E.extend({
        imageManifest: {
            hide: new URL("main/pp7/everyday/assets/f5877169.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/279971fb.png", self.location).href
        }
    }),
    jN = Oc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("tv"),
        onDiscreteProgress() {
            a.squashOnce("tv", .35)
        }
    }),
    QN = Oc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("tv", ["hide", "handL"], ["hide", "handR"]),
        onLoadComplete() {
            s.set(".e.handL", {
                x: -800,
                y: 500,
                scaleX: -1
            }), s.set(".e.handR", {
                x: 800,
                y: 500
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handL", {
                x: -100,
                y: 0
            }, 0).to(".e.handR", {
                x: 100,
                y: 0
            }, 0)
        }
    }),
    zN = Oc.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("tv", ["hide", "handL"], ["hide", "handR"]),
        onLoadComplete() {
            s.set(".e.handL", {
                x: -100,
                scaleX: -1
            }), s.set(".e.handR", {
                x: 100
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handL", {
                x: -300,
                y: 700
            }, 0).to(".e.handR", {
                x: 300,
                y: 700
            }, 0)
        }
    }),
    HN = Oc.extend({
        elements: a.elementsFromImages("tv", ["hide", "handL"], ["hide", "handR"]),
        onLoadComplete() {
            s.set(".e.handL", {
                x: -300,
                y: 700,
                scaleX: -1
            }), s.set(".e.handR", {
                x: 300,
                y: 700
            }), a.startShake("tv", 8, 0, 2)
        },
        initializeTimeline() {
            this.timeline.to(".e.tv", {
                scale: 1.3,
                duration: 10
            }).to(".e.handL, .e.handR", {
                opacity: 0,
                duration: 1
            }, 0)
        }
    }),
    _0 = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/ab1d4f5d.png", self.location).href,
            iron: new URL("main/pp7/everyday/assets/5abfff58.png", self.location).href
        },
        sprites: {
            iron: {
                key: "iron",
                images: {
                    front: [0, 0, 197, 937],
                    back: [197, 0, 131, 937]
                }
            }
        }
    }),
    NN = _0.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("door"),
        onDiscreteProgress() {
            a.squashOnce("door", .45)
        }
    }),
    ob = _0.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("iron", ["back", "front"])
        }],
        onLoadComplete() {
            s.set(".e.front", {
                x: 300,
                y: 50,
                rotate: 25
            }), s.set(".e.back", {
                x: 193,
                y: 40,
                rotate: 45,
                transformOrigin: "55px 856px"
            })
        },
        onStartProgress() {
            a.startHoldShake("c"), s.to(".e.back", {
                rotate: 25,
                duration: .2
            })
        },
        onStopProgress() {
            a.stopHoldShake("c"), s.to(".e.back", {
                rotate: 45,
                duration: .2
            })
        }
    }),
    GN = _0.extend({
        elements: a.elementsFromImages("door"),
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).to(".e.door", {
                x: -12,
                y: 12,
                duration: .03
            }).to(".e.door", {
                x: 8,
                y: -8,
                duration: .03
            }).to(".e.door", {
                x: -6,
                y: -6,
                duration: .03
            }).to(".e.door", {
                x: 4,
                y: 4,
                duration: .03
            }).fillTime(.1).to(".e.door", {
                x: 12,
                y: -12,
                duration: .03
            }).to(".e.door", {
                x: -8,
                y: 8,
                duration: .03
            }).to(".e.door", {
                x: 6,
                y: 6,
                duration: .03
            }).to(".e.door", {
                x: -4,
                y: -4,
                duration: .03
            }).fillTime(.5)
        }
    }),
    XN = ob,
    LV = E.extend({
        imageManifest: {
            downloadMore: new URL("main/pp7/everyday/assets/7a37c5c0.png", self.location).href,
            ignoreMessage: new URL("main/pp7/everyday/assets/cd4e88c3.png", self.location).href,
            phoneMusic: new URL("main/pp7/everyday/assets/a4abf907.png", self.location).href,
            phoneStream: new URL("main/pp7/everyday/assets/16c636cd.png", self.location).href,
            phoneVideo: new URL("main/pp7/everyday/assets/f6b05cc0.png", self.location).href
        }
    }),
    YN = LV.extend({
        elements: a.elementsFromImages("phoneVideo"),
        onStartProgress() {
            a.startHoldShake("phoneVideo")
        },
        onStopProgress() {
            a.stopHoldShake("phoneVideo")
        }
    }),
    KN = LV.extend({
        elements: a.elementsFromImages("phoneMusic"),
        onStartProgress() {
            a.startHoldShake("phoneMusic")
        },
        onStopProgress() {
            a.stopHoldShake("phoneMusic")
        }
    }),
    WN = LV.extend({
        elements: a.elementsFromImages("phoneStream"),
        onStartProgress() {
            a.startHoldShake("phoneStream")
        },
        onStopProgress() {
            a.stopHoldShake("phoneStream")
        }
    }),
    JN = LV.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("ignoreMessage"),
        onDiscreteProgress() {
            a.squashOnce("ignoreMessage")
        }
    }),
    ZN = LV.extend({
        elements: a.elementsFromImages("downloadMore"),
        onStartProgress() {
            a.startHoldShake("downloadMore")
        },
        onStopProgress() {
            a.stopHoldShake("downloadMore")
        }
    }),
    $0 = E.extend({
        imageManifest: {
            shooParent: new URL("main/pp7/everyday/assets/13855dde.png", self.location).href,
            trentTalk: new URL("main/pp7/everyday/assets/7c55ad04.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/83336fdc.png", self.location).href
        }
    }),
    _N = $0.extend({
        elements: a.elementsFromImages("trentTalk"),
        onStartProgress() {
            a.startHoldShake("trentTalk")
        },
        onStopProgress() {
            a.stopHoldShake("trentTalk")
        }
    }),
    $N = $0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("shooParent"),
        onDiscreteProgress() {
            a.squashOnce("shooParent", .35, "y")
        }
    }),
    eG = $0.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("phone"),
        onDiscreteProgress() {
            a.squashOnce("phone", .35)
        }
    }),
    em = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/945a43ad.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    phone: [0, 0, 604, 878],
                    camera: [604, 0, 508, 748],
                    timer: [1112, 0, 508, 748],
                    frame: [1620, 0, 508, 748],
                    devil: [2128, 0, 433, 748]
                }
            }
        }
    }),
    tG = em.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", [
            ["phone", null, [61, 198]]
        ]),
        onLoadComplete() {
            s.set(".e.phone", {
                x: -150,
                y: 150,
                scale: .7,
                rotate: -30
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.phone", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0,
                ease: "back.out(2)"
            })
        }
    }),
    nG = em.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["phone", null, [61, 198]],
                ["camera", null, [96, 252]],
                ["timer", null, [96, 252]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.camera, .e.timer", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.camera", {
                opacity: 1
            }).to(".e.timer", {
                opacity: 1
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c", .35)
        }
    }),
    iG = em.extend({
        elements: [...a.elementsFromSprite("sprite", [
            ["phone", null, [61, 198]],
            ["devil", null, [96, 283.5]]
        ]), {
            class: "flash",
            type: "div",
            pos: [250, 310]
        }, ...a.elementsFromSprite("sprite", [
            ["frame", null, [96, 252]]
        ])],
        onLoadComplete() {
            s.set(".e.flash", {
                width: 370,
                height: 380,
                skewX: 8,
                skewY: -13,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil", {
                x: 10,
                y: 17,
                duration: 1,
                ease: "sine.inOut"
            }).to(".e.devil", {
                x: 0,
                y: 6,
                duration: 1,
                ease: "sine.inOut"
            }, 1).to(".e.devil", {
                x: 5,
                y: 17,
                duration: 1,
                ease: "sine.inOut"
            }, 2).to(".e.devil", {
                x: 0,
                y: 0,
                duration: 1,
                ease: "sine.inOut"
            }, 3).to(".e.devil", {
                x: 5,
                y: 0,
                duration: 1,
                ease: "sine.inOut"
            }, 4).to(".e.devil", {
                x: 5,
                y: 6,
                duration: 1,
                ease: "sine.inOut"
            }, 5).to(".e.flash", {
                opacity: 1,
                duration: .1
            }, 6).to(".e.flash", {
                opacity: 0,
                duration: .4
            }, 6.15).fillTime(1)
        }
    }),
    BV = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/832bfa97.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    card0: [794, 424, 774, 498, 251, 113],
                    card1: [10, 374, 774, 497, 252, 113],
                    card2: [10, 881, 774, 498, 251, 113],
                    sleeve2: [1266, 10, 376, 404, 384, 479],
                    sleeve1: [345, 10, 353, 352, 436, 479],
                    sleeve0: [10, 10, 325, 288, 500, 479],
                    open: [794, 932, 742, 598, 201, 129],
                    closed: [708, 10, 548, 354, 323, 226]
                }
            }
        },
        elements: [{
            class: "open-c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["open", null, [201, 129]],
                ["card2", null, [251, 113]],
                ["sleeve2", null, [384, 479]],
                ["card1", null, [252, 113]],
                ["sleeve1", null, [436, 479]],
                ["card0", null, [251, 113]],
                ["sleeve0", null, [500, 479]]
            ])
        }, ...a.elementsFromSprite("sprite", [
            ["closed", null, [323, 226]]
        ])]
    }),
    sG = BV.extend({
        stepDuration: .35,
        onLoadComplete() {
            s.set(".e.open-c", {
                hidden: !0
            }), s.set(".e.card0", {
                x: 147,
                y: 115,
                scale: .35,
                rotate: 30
            }), s.set(".e.card1", {
                x: 159,
                y: 75,
                scale: .35,
                rotate: 28
            }), s.set(".e.card2", {
                x: 190,
                y: 30,
                scale: .35,
                rotate: 26
            })
        },
        onDiscreteProgress() {
            a.squashTransition("closed", "open-c", .35)
        }
    }),
    oG = BV.extend({
        onLoadComplete() {
            s.set(".e.closed", {
                hidden: !0
            }), s.set(".e.card0", {
                x: 147,
                y: 115,
                scale: .35,
                rotate: 30
            }), s.set(".e.card1", {
                x: 159,
                y: 75,
                scale: .35,
                rotate: 28
            }), s.set(".e.card2", {
                x: 190,
                y: 30,
                scale: .35,
                rotate: 26
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.card0", {
                x: 157,
                y: 15,
                rotate: 10
            }).to(".e.card0", {
                x: 147,
                y: 115,
                rotate: 30
            }).to(".e.card1", {
                x: 169,
                y: -25,
                rotate: 10
            }).to(".e.card1", {
                x: 159,
                y: 75,
                rotate: 28
            }).to(".e.card2", {
                x: 200,
                y: -70,
                rotate: 10
            }).to(".e.card2", {
                x: 190,
                y: 30,
                rotate: 26
            })
        }
    }),
    aG = BV.extend({
        onLoadComplete() {
            s.set(".e.closed", {
                hidden: !0
            }), s.set(".e.card0", {
                x: 147,
                y: 115,
                scale: .35,
                rotate: 30
            }), s.set(".e.card1", {
                x: 159,
                y: 75,
                scale: .35,
                rotate: 28
            }), s.set(".e.card2", {
                x: 190,
                y: 30,
                scale: .35,
                rotate: 26
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("open-c", "closed", .5)).fillTime(1).add(a.squashTransition("closed", "open-c", .5)).fillTime(1).add(a.squashTransition("open-c", "closed", .5)).fillTime(1).add(a.squashTransition("closed", "open-c", .5)).fillTime(1).add(a.squashTransition("open-c", "closed", .5))
        }
    }),
    rG = BV.extend({
        onLoadComplete() {
            s.set(".e.open-c", {
                hidden: !0
            }), s.set(".e.card0", {
                x: 147,
                y: 115,
                scale: .35,
                rotate: 30
            }), s.set(".e.card1", {
                x: 159,
                y: 75,
                scale: .35,
                rotate: 28
            }), s.set(".e.card2", {
                x: 190,
                y: 30,
                scale: .35,
                rotate: 26
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(3).add(a.squashTransition("closed", "open-c", .5)).fillTime(.25)
        },
        onStartProgress() {
            a.startHoldShake("closed")
        },
        onStopProgress() {
            a.stopHoldShake("closed")
        }
    }),
    VG = BV.extend({
        stepDuration: .65,
        onLoadComplete() {
            s.set(".e.closed", {
                hidden: !0
            }), s.set(".e.card0", {
                x: 147,
                y: 115,
                scale: .35,
                rotate: 30
            }), s.set(".e.card1", {
                x: 159,
                y: 75,
                scale: .35,
                rotate: 28
            }), s.set(".e.card2", {
                x: 190,
                y: 30,
                scale: .35,
                rotate: 26
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.card0", {
                x: 203,
                y: 0,
                ease: "power2.in"
            }).set(".e.card0", {
                zIndex: 1
            }).to(".e.card0", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0,
                ease: "power2.out"
            }).fillTime(.15)
        }
    }),
    tm = E.extend({
        imageManifest: {
            slam: new URL("main/pp7/everyday/assets/4b64206e.png", self.location).href,
            yell: new URL("main/pp7/everyday/assets/2d743ea6.png", self.location).href
        }
    }),
    lG = tm.extend({
        elements: a.elementsFromImages("yell"),
        initializeTimeline() {
            const t = s.timeline({
                repeat: 7,
                yoyo: !0
            }).to(".e.yell", {
                scale: .9
            });
            this.timeline.add(t)
        }
    }),
    AG = tm.extend({
        elements: a.elementsFromImages("yell"),
        initializeTimeline() {
            const t = s.timeline({
                repeat: 7,
                yoyo: !0
            }).to(".e.yell", {
                scale: 1.2
            });
            this.timeline.add(t)
        }
    }),
    cG = tm.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("slam"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("slam"))
        }
    }),
    dG = Os.extend({
        imageManifest: {
            scowl: new URL("main/pp7/everyday/assets/a3b867c5.png", self.location).href
        }
    }),
    pG = Ma.extend({
        imageManifest: {
            frown: new URL("main/pp7/everyday/assets/f688e02c.png", self.location).href
        }
    }),
    hG = Hn.extend({
        imageManifest: {
            glare: new URL("main/pp7/everyday/assets/599a5c45.png", self.location).href
        }
    }),
    Ic = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/6f4ae93c.png", self.location).href,
            mailbox: new URL("main/pp7/everyday/assets/07fdbadb.png", self.location).href,
            pedal: new URL("main/pp7/everyday/assets/8a988057.png", self.location).href
        }
    }),
    uG = Ic.extend({
        elements: a.elementsFromImages("car"),
        onStartProgress() {
            s.to(".e.car", {
                y: "-=20",
                yoyo: !0,
                repeat: -1,
                duration: .1
            }), s.to(".e.car", {
                y: "+=20",
                yoyo: !0,
                repeat: -1,
                duration: .1
            })
        },
        onStopProgress() {
            s.killTweensOf(".e.car")
        }
    }),
    mG = Ic.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pedal"),
        initializeTimeline() {
            this.timeline.to(".e.pedal", {
                rotation: -10,
                scaleY: .9
            })
        }
    }),
    fG = Ic.extend({
        elements: a.elementsFromImages("mailbox"),
        onLoadComplete() {
            s.set(".e.mailbox", {
                scale: .75
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mailbox", {
                scale: 2,
                motionPath: [{
                    x: 0,
                    y: 0
                }, {
                    x: 250,
                    y: 125
                }, {
                    x: 500,
                    y: 500
                }, {
                    x: 1e3,
                    y: 500
                }]
            })
        }
    }),
    qG = Ic.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("car"),
        onLoadComplete() {
            s.to(".e.car", {
                y: "-=20",
                yoyo: !0,
                repeat: -1,
                duration: .1
            }), s.to(".e.car", {
                y: "+=20",
                yoyo: !0,
                repeat: -1,
                duration: .1
            })
        },
        onDiscreteProgress() {
            s.killTweensOf(".e.car")
        }
    }),
    nm = E.extend({
        imageManifest: {
            toy: new URL("main/pp7/everyday/assets/0e0ce597.png", self.location).href
        }
    }),
    gG = nm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("toy"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("toy", .25))
        }
    }),
    yG = nm.extend({
        elements: a.elementsFromImages("toy"),
        onStartProgress() {
            a.startHoldShake("toy")
        },
        onStopProgress() {
            a.stopHoldShake("toy")
        }
    }),
    bG = nm.extend({
        elements: a.elementsFromImages("toy")
    }),
    Pc = E.extend({
        imageManifest: {
            shrine0: new URL("main/pp7/everyday/assets/9fcd393c.png", self.location).href,
            shrine1: new URL("main/pp7/everyday/assets/036bb85d.png", self.location).href
        },
        sprites: {
            sprite0: {
                key: "shrine0",
                images: {
                    star2: [10, 935, 705, 890, 71, 136],
                    star1: [725, 935, 705, 890, 71, 136],
                    star0: [826, 10, 705, 890, 71, 136],
                    shrine2: [1644, 1073, 194, 245, 22, 30],
                    shrine4: [1440, 1204, 194, 240, 314, 30],
                    shrine1: [1780, 619, 195, 218, 577, 45],
                    shrine5: [1440, 945, 194, 249, 57, 724],
                    shrine3: [1541, 619, 229, 316, 322, 724],
                    shrine0: [1780, 847, 195, 216, 643, 724],
                    shrine: [1541, 10, 427, 599, 77, 266],
                    magazine: [10, 10, 806, 915, 30, 83]
                }
            },
            sprite1: {
                key: "shrine1",
                images: {
                    dream: [10, 10, 880, 587, 207, 65],
                    devil: [900, 390, 802, 572, 121, 132],
                    cry: [900, 10, 875, 370, 526, 54]
                }
            }
        }
    }),
    vG = Pc.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite0", ["magazine", "star0", "star1", "star2"]),
        onLoadComplete() {
            s.set(".e.star0, .e.star1, .e.star2", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("magazine", "star2")).add(a.squashTransition("star2", "star1")).add(a.squashTransition("star1", "star0"))
        }
    }),
    wG = Pc.extend({
        elements: a.elementsFromSprite("sprite0", ["shrine", "star0", "shrine0", "shrine1", "shrine2", "shrine3", "shrine4", "shrine5"]),
        onLoadComplete() {
            s.set(".e.shrine0", {
                x: -350,
                y: -310,
                rotate: 8,
                scale: .7,
                hidden: !0
            }), s.set(".e.shrine1", {
                x: 330,
                y: -240,
                rotate: -8,
                scale: .7,
                hidden: !0
            }), s.set(".e.shrine2", {
                x: 350,
                y: 290,
                rotate: 8,
                scale: .7,
                hidden: !0
            }), s.set(".e.shrine3", {
                x: -350,
                y: -50,
                rotate: -8,
                scale: .7,
                hidden: !0
            }), s.set(".e.shrine4", {
                x: 350,
                y: 0,
                rotate: 8,
                scale: .7,
                hidden: !0
            }), s.set(".e.shrine5", {
                x: -340,
                y: 260,
                rotate: -8,
                scale: .7,
                hidden: !0
            }), s.to(".e.star0", {
                y: -100,
                scale: .7,
                opacity: 0,
                duration: .4
            })
        },
        initializeTimeline() {
            for (let t = 0; t <= 5; t++) {
                const e = `.e.shrine${t}`,
                    n = s.timeline().set(e, {
                        hidden: !1
                    }, 0).to(e, {
                        scale: 2,
                        ease: "back.out(2)"
                    }, 0).to(e, {
                        x: 0,
                        y: 0,
                        rotate: 0,
                        scale: 1
                    }, 1.2);
                this.timeline.add(n)
            }
        }
    }),
    xG = Pc.extend({
        elements: a.elementsFromSprite("sprite1", ["dream"])
    }),
    kG = Pc.extend({
        elements: a.elementsFromSprite("sprite1", ["cry", "devil"]),
        onLoadComplete() {
            s.set(".e.cry", {
                x: 200,
                y: -100,
                scale: .3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cry", {
                x: 0,
                y: 0,
                scale: 1
            })
        }
    }),
    im = E.extend({
        imageManifest: {
            disguised: new URL("main/pp7/everyday/assets/4edb1a75.png", self.location).href,
            manga: new URL("main/pp7/everyday/assets/2f7dd3a3.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/50d3dde2.png", self.location).href,
            textbook: new URL("main/pp7/everyday/assets/855e3524.png", self.location).href
        }
    }),
    CG = im.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("textbook", "open"),
        onLoadComplete() {
            s.set(".e.open", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("textbook", "open", .5)
        }
    }),
    RG = im.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("open", "manga"),
        onLoadComplete() {
            s.set(".e.manga", {
                y: 300,
                scale: 3,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.to(".e.manga", {
                y: 0,
                x: 200,
                scale: .65,
                opacity: 1,
                duration: .5
            })
        }
    }),
    DG = im.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("open", "manga", "disguised"),
        onLoadComplete() {
            s.set(".e.manga", {
                x: 200,
                scale: .65
            }), s.set(".e.disguised", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("open", "disguised", .5), s.timeline().to(".e.manga", {
                scaleY: .9,
                duration: .25
            }).to(".e.manga", {
                scaleX: .9,
                scaleY: .5,
                duration: .125
            }).set(".e.manga", {
                hidden: !0
            })
        }
    }),
    ab = E.extend({
        imageManifest: {
            trash: new URL("main/pp7/everyday/assets/ad9970c4.png", self.location).href,
            broom: new URL("main/pp7/everyday/assets/fa31d37d.png", self.location).href,
            distraction: new URL("main/pp7/everyday/assets/01b8ca53.png", self.location).href,
            controller: new URL("main/pp7/everyday/assets/a905e91c.png", self.location).href,
            yoke: new URL("main/pp7/everyday/assets/c8c4c9e8.png", self.location).href,
            up: new URL("main/pp7/everyday/assets/8353a7f9.png", self.location).href,
            down: new URL("main/pp7/everyday/assets/f38ea6ef.png", self.location).href
        }
    }),
    SG = ab.extend({
        elements: [{
            class: "items",
            type: "container",
            children: a.elementsFromImages("trash", "broom", "distraction")
        }],
        onLoadComplete() {
            s.set(".e.trash", {
                scale: .9,
                x: -120
            }), s.set(".e.broom", {
                x: 280
            }), s.set(".e.distraction", {
                x: 640,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.items", {
                x: 120,
                ease: "power1.in"
            }).to(".e.items", {
                x: -280,
                delay: .15,
                ease: "power1.in"
            }).to(".e.items", {
                x: -640,
                delay: .15,
                ease: "power1.in"
            }).to(".e.distraction", {
                opacity: 1
            }, "<")
        }
    }),
    TG = ab.extend({
        stepDuration: .3,
        elements: a.elementsFromImages("controller", ["yoke", null, [50, 406]], ["up", null, [506, 205]], ["down", null, [506, 205]]),
        onLoadComplete() {
            s.set(".e.down", {
                visibility: "hidden"
            }), s.set(".e.yoke", {
                transformOrigin: "center 105%"
            })
        },
        onDiscreteProgress() {
            const t = Math.random();
            t < .33 ? s.to(".e.yoke", {
                rotate: 30,
                duration: .12,
                yoyo: !0,
                repeat: 1
            }) : t < .66 ? s.to(".e.yoke", {
                rotate: -30,
                duration: .12,
                yoyo: !0,
                repeat: 1
            }) : (s.to(".e.up", {
                visibility: "hidden",
                duration: .1,
                yoyo: !0,
                repeat: 1
            }), s.to(".e.down", {
                visibility: "visible",
                duration: .1,
                yoyo: !0,
                repeat: 1
            }))
        }
    }),
    rb = E.extend({
        imageManifest: {
            straw: new URL("main/pp7/everyday/assets/ece4a1ea.png", self.location).href,
            ball: new URL("main/pp7/everyday/assets/ff552b13.png", self.location).href,
            spit: new URL("main/pp7/everyday/assets/dce47636.png", self.location).href
        }
    }),
    EG = rb.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("straw", ["spit", null, [510, 850]], ["ball", null, [335, 833]])
        }],
        onLoadComplete() {
            s.set(".e.spit", {
                transformOrigin: "top center",
                scaleY: .6
            }), s.to(".e.spit", {
                scaleY: 1.1,
                duration: 2.5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                rotate: -10
            }).to(".e.c", {
                rotate: 0
            }).to(".e.c", {
                rotate: 10
            }).to(".e.c", {
                rotate: 0
            })
        }
    }),
    LG = rb.extend({
        stepDuration: .7,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("straw", ["spit", null, [510, 850]], ["ball", null, [335, 833]])
        }],
        onLoadComplete() {
            s.set(".e.spit", {
                transformOrigin: "top center",
                scaleY: 1.1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.straw, .e.spit", {
                x: -1e3,
                duration: .4
            }).to(".e.ball", {
                x: -400,
                rotate: -300,
                duration: 1
            })
        }
    }),
    Uc = E.extend({
        imageManifest: {
            sign: new URL("main/pp7/everyday/assets/6a1c7979.png", self.location).href
        },
        sprites: {
            sign: {
                key: "sign",
                images: {
                    tape: [10, 10, 113, 171, 82, 443],
                    sign: [401, 10, 590, 770, 148, 219],
                    young: [133, 10, 258, 467, 397, 543],
                    adult: [1001, 10, 281, 800, 64, 219]
                }
            }
        }
    }),
    BG = Uc.extend({
        elements: a.elementsFromSprite("sign", [
            ["adult", null, [64, 219]]
        ]),
        onLoadComplete() {
            s.set(".e.adult", {
                x: 150
            })
        }
    }),
    MG = Uc.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sign", [
            ["young", null, [397, 543]],
            ["adult", null, [64, 219]]
        ]),
        onLoadComplete() {
            s.set(".e.young", {
                x: 150,
                y: 50,
                scale: .7,
                opacity: 0
            }), s.set(".e.adult", {
                x: 150
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.adult", {
                x: 0
            }).to(".e.young", {
                x: 0,
                y: 0,
                scale: 1,
                opacity: 1
            }, 0)
        }
    }),
    OG = Uc.extend({
        elements: a.elementsFromSprite("sign", [
            ["sign", null, [148, 219]]
        ]),
        onLoadComplete() {
            s.set(".e.sign", {
                x: 50,
                y: 50,
                rotate: -120
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                x: 0,
                y: 0,
                rotate: 0
            })
        }
    }),
    IG = Uc.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sign", [
            ["sign", null, [148, 219]],
            ["tape", null, [82, 443]]
        ]),
        onLoadComplete() {
            s.set(".e.tape", {
                clipPath: "inset(100% 0% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.tape", {
                clipPath: "inset(0% 0% 0% 0%)"
            })
        }
    }),
    sm = E.extend({
        imageManifest: {
            milk: new URL("main/pp7/everyday/assets/fbc143e1.png", self.location).href
        },
        elements: a.elementsFromImages("milk")
    }),
    PG = sm.extend({
        stepDuration: .45,
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                y: -100,
                rotate: -120,
                scale: 1.2
            })
        }
    }),
    UG = sm.extend({
        stepDuration: .5,
        onLoadComplete() {
            s.set(".e.milk", {
                y: -100,
                rotate: -120,
                scale: 1.2
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                y: 0,
                rotate: 0,
                scale: 1,
                ease: "back.in(2)"
            })
        }
    }),
    FG = sm.extend({
        initializeTimeline() {
            this.timeline.to(".e.milk", {
                x: 150,
                scale: .9
            }).to(".e.milk", {
                x: 275,
                scale: .8
            }).to(".e.milk", {
                x: 375,
                scale: .7
            }).to(".e.milk", {
                x: 450,
                scale: .6
            }).to(".e.milk", {
                x: 500,
                scale: .5
            })
        }
    }),
    om = E.extend({
        imageManifest: {
            reportcard1: new URL("main/pp7/everyday/assets/c4d9c827.png", self.location).href,
            reportcard2: new URL("main/pp7/everyday/assets/ad7463a7.png", self.location).href,
            reportcard3: new URL("main/pp7/everyday/assets/8d999ec1.png", self.location).href
        }
    }),
    jG = om.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("reportcard1", "reportcard2"),
        onLoadComplete() {
            s.set(".e.reportcard2", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            a.squashOnce("reportcard1"), a.squashOnce("reportcard2"), s.timeline().to(".e.reportcard1", {
                opacity: 0
            }).to(".e.reportcard2", {
                opacity: 1
            }, "<")
        }
    }),
    QG = om.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("reportcard2", "reportcard3"),
        onLoadComplete() {
            s.set(".e.reportcard3", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            a.squashOnce("reportcard2"), a.squashOnce("reportcard3"), s.timeline().to(".e.reportcard2", {
                opacity: 0
            }).to(".e.reportcard3", {
                opacity: 1
            }, "<")
        }
    }),
    zG = om.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("reportcard3"),
        onDiscreteProgress() {
            s.to(".e.reportcard3", {
                x: -1500,
                scaleX: 1.2
            })
        }
    }),
    am = E.extend({
        imageManifest: {
            eyeroll: new URL("main/pp7/everyday/assets/44bd290d.png", self.location).href,
            pupils: new URL("main/pp7/everyday/assets/51c69512.png", self.location).href,
            frown: new URL("main/pp7/everyday/assets/de513637.png", self.location).href,
            snarl: new URL("main/pp7/everyday/assets/cd1e351d.png", self.location).href
        }
    }),
    HG = am.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("frown"),
        onDiscreteProgress() {
            a.scaleBounce("frown")
        }
    }),
    NG = am.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("snarl", "frown"),
        onLoadComplete() {
            s.set(".e.snarl", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("frown", "snarl", .5)
        }
    }),
    GG = am.extend({
        elements: a.elementsFromImages("eyeroll", "pupils"),
        onLoadComplete() {
            s.set(".e.pupils", {
                x: -30,
                y: 10
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pupils", {
                x: 0,
                y: 0,
                ease: "none"
            }).to(".e.pupils", {
                x: 47,
                y: 6,
                ease: "none"
            })
        }
    }),
    Fc = E.extend({
        imageManifest: {
            phone: new URL("main/pp7/everyday/assets/fb8f0883.png", self.location).href,
            hangUp: new URL("main/pp7/everyday/assets/7a9378d2.png", self.location).href,
            routerBroken: new URL("main/pp7/everyday/assets/98ab57ab.png", self.location).href,
            routerFixed: new URL("main/pp7/everyday/assets/dbf52ac8.png", self.location).href
        }
    }),
    XG = Fc.extend({
        elements: a.elementsFromImages("phone")
    }),
    YG = Fc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("routerBroken"),
        onDiscreteProgress() {
            a.squashOnce("routerBroken", .35, "y")
        }
    }),
    KG = Fc.extend({
        stepDuration: .35,
        lastStepDuration: .5,
        elements: a.elementsFromImages("routerBroken", "routerFixed"),
        onLoadComplete() {
            s.set(".e.routerFixed", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("routerBroken", "routerFixed", .35)
        }
    }),
    WG = Fc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("hangUp"),
        onDiscreteProgress() {
            a.squashOnce("hangUp", .35, "y")
        }
    }),
    jc = E.extend({
        imageManifest: {
            carHoodDown: new URL("main/pp7/everyday/assets/0e592bb0.png", self.location).href,
            carHoodUp: new URL("main/pp7/everyday/assets/e36e4a9f.png", self.location).href,
            hammer: new URL("main/pp7/everyday/assets/747ebbca.png", self.location).href
        }
    }),
    JG = jc.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("carHoodDown", "carHoodUp"),
        onLoadComplete() {
            s.set(".e.carHoodUp", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("carHoodDown", "carHoodUp", .35)
        }
    }),
    ZG = jc.extend({
        elements: a.elementsFromImages("carHoodUp"),
        onStartProgress() {
            a.startHoldShake("carHoodUp")
        },
        onStopProgress() {
            a.stopHoldShake("carHoodUp")
        }
    }),
    _G = jc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("hammer"),
        onDiscreteProgress() {
            a.squashOnce("hammer")
        }
    }),
    $G = jc.extend({
        elements: a.elementsFromImages("carHoodUp")
    }),
    Vb = E.extend({
        imageManifest: {
            ant: new URL("main/pp7/everyday/assets/a660cc50.png", self.location).href,
            magnifyingGlass: new URL("main/pp7/everyday/assets/913f903a.png", self.location).href
        }
    }),
    eX = Vb.extend({
        elements: a.elementsFromImages(["ant", "ant1"], ["ant", "ant2"], ["ant", "ant3"], "magnifyingGlass"),
        onLoadComplete() {
            s.set(".e.ant1", {
                x: -300,
                scale: .5,
                rotate: 5
            }), s.set(".e.ant2", {
                scale: .5
            }), s.set(".e.ant3", {
                x: 300,
                scale: .5,
                rotate: -5
            }), s.set(".e.magnifyingGlass", {
                scale: .25,
                y: 600,
                x: 400
            }), a.startShake("e.ant1", 2, 0, 1), a.startShake("e.ant2", 2, 0, 1), a.startShake("e.ant3", 2, 0, 1)
        },
        initializeTimeline() {
            this.timeline.to(".e.magnifyingGlass", {
                scale: 1.5,
                x: 0,
                y: 300,
                duration: 4
            }).to(".e.ant2", {
                scale: 1
            }, "<1.8")
        }
    }),
    tX = Vb.extend({
        elements: a.elementsFromImages(["ant", "ant1"], ["ant", "ant2"], ["ant", "ant3"], ["ant", "ant4"], ["ant", "ant5"], "magnifyingGlass"),
        onLoadComplete() {
            s.set(".e.ant1", {
                x: -300,
                scale: .5,
                rotate: 5
            }), s.set(".e.ant2", {
                scale: 1
            }), s.set(".e.ant3", {
                x: 300,
                scale: .5,
                rotate: -5
            }), s.set(".e.ant4", {
                x: 600,
                scale: .5
            }), s.set(".e.ant5", {
                x: 900,
                scale: .5
            }), s.set(".e.magnifyingGlass", {
                scale: 1.5,
                y: 300,
                x: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.ant1", {
                x: -600
            }).to(".e.ant2", {
                x: -300
            }, "<").to(".e.ant2", {
                scale: .5,
                duration: .2
            }, "<").to(".e.ant3", {
                x: 0
            }, "<<").to(".e.ant3", {
                scale: 1,
                duration: .2
            }, "<").to(".e.ant4", {
                x: 300
            }, "<").to(".e.ant5", {
                x: 600
            }, "<")
        }
    }),
    lb = E.extend({
        imageManifest: {
            call: new URL("main/pp7/everyday/assets/15d6fdfe.png", self.location).href,
            phone3: new URL("main/pp7/everyday/assets/1ad94f57.png", self.location).href
        }
    }),
    nX = lb.extend({
        elements: a.elementsFromImages("call")
    }),
    iX = lb.extend({
        elements: a.elementsFromImages("phone3")
    }),
    rm = E.extend({
        imageManifest: {
            cake: new URL("main/pp7/everyday/assets/22fd3f25.png", self.location).href,
            noinscription: new URL("main/pp7/everyday/assets/c74012a3.png", self.location).href
        }
    }),
    sX = rm.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("cake"),
        onLoadComplete() {
            s.set(".e.cake", {
                x: -750
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cake", {
                x: 0,
                ease: "back.out(1.4)"
            }).add(a.scaleBounce("cake", .95, .1), "-=0.3")
        }
    }),
    oX = rm.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("cake", "noinscription"),
        onLoadComplete() {
            s.set(".e.noinscription", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("cake", "noinscription", .25)
        }
    }),
    aX = rm.extend({
        elements: a.elementsFromImages("noinscription"),
        initializeTimeline() {
            this.timeline.to(".e.noinscription", {
                scale: 2
            })
        },
        onProgress(t) {
            t === 80 ? a.startShake("noinscription", 10, 0, 8) : t === 60 ? a.startShake("noinscription", 7, 0, 5) : t === 40 ? a.startShake("noinscription", 4, 0, 3) : t === 20 && a.startShake("noinscription")
        }
    }),
    Qc = E.extend({
        imageManifest: {
            hourglass: new URL("main/pp7/everyday/assets/141a4bfb.png", self.location).href,
            money: new URL("main/pp7/everyday/assets/4cce58e4.png", self.location).href,
            shatter: new URL("main/pp7/everyday/assets/2599b831.png", self.location).href
        }
    }),
    rX = Qc.extend({
        elements: a.elementsFromImages("hourglass")
    }),
    VX = Qc.extend({
        elements: a.elementsFromImages("hourglass"),
        onProgress(t, e) {
            e === 0 && s.timeline().to(".e.hourglass", {
                y: -50,
                duration: .15
            }).to(".e.hourglass", {
                rotation: "+=360",
                duration: .25
            }, ">").to(".e.hourglass", {
                y: 0,
                duration: .15
            }, ">")
        }
    }),
    lX = Qc.extend({
        elements: a.elementsFromImages("hourglass", "shatter"),
        onLoadComplete() {
            s.set(".e.shatter", {
                hidden: !0
            })
        },
        onProgress(t, e) {
            e === 0 && a.squashTransition("hourglass", "shatter")
        }
    }),
    AX = Qc.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("money"),
        onDiscreteProgress() {
            a.scaleBounce("money", 2)
        }
    }),
    Ab = E.extend({
        imageManifest: {
            calendar: new URL("main/pp7/everyday/assets/5570a60f.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/83336fdc.png", self.location).href
        }
    }),
    cX = Ab.extend({
        stepDuration: 1.5,
        elements: a.elementsFromImages("calendar"),
        onDiscreteProgress() {
            s.to(".e.calendar", {
                x: -300,
                y: -300,
                scale: 2
            })
        }
    }),
    dX = Ab.extend({
        elements: a.elementsFromImages("phone")
    }),
    Vm = E.extend({
        imageManifest: {
            bush: new URL("main/pp7/everyday/assets/d9889c6f.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/3043e6cf.png", self.location).href,
            opossum: new URL("main/pp7/everyday/assets/c71e2579.png", self.location).href
        }
    }),
    pX = Vm.extend({
        elements: a.elementsFromImages("bush"),
        onProgress(t) {
            t === 80 ? a.startShake("bush", 10, 0, 8) : t === 60 ? a.startShake("bush", 7, 0, 5) : t === 40 ? a.startShake("bush", 4, 0, 3) : t === 20 && a.startShake("bush")
        },
        onStopProgress() {
            a.stopShake("bush")
        }
    }),
    hX = Vm.extend({
        stepDuration: 1.25,
        elements: a.elementsFromImages("opossum"),
        onLoadComplete() {
            a.startShake("opossum", 10, 0, 8)
        },
        onDiscreteProgress() {
            a.stopShake("opossum"), s.to(".e.opossum", {
                scale: .25,
                duration: .5
            })
        }
    }),
    uX = Vm.extend({
        stepDuration: 2,
        elements: a.elementsFromImages("opossum", "door"),
        onLoadComplete() {
            s.set(".e.door", {
                opacity: 0
            }), s.set(".e.opossum", {
                scale: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.opossum", {
                x: -500,
                opacity: 0,
                duration: .25
            }).to(".e.door", {
                opacity: 1,
                duration: .5
            }, "<")
        }
    }),
    cb = E.extend({
        imageManifest: {
            magazines: new URL("main/pp7/everyday/assets/050ab16f.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/26c3da8b.png", self.location).href
        }
    }),
    mX = cb.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("magazines"),
        onDiscreteProgress() {
            s.timeline().add(a.fallOut("magazines", .5))
        }
    }),
    fX = cb.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("magazines", "trash"),
        onLoadComplete() {
            s.set(".e.magazines", {
                y: -1e3,
                scale: .5
            })
        },
        onDiscreteProgress() {
            s.to(".e.magazines", {
                y: -250,
                rotation: 35,
                ease: "power4.out"
            })
        }
    }),
    db = E.extend({
        imageManifest: {
            call: new URL("main/pp7/everyday/assets/88683f85.png", self.location).href,
            choose: new URL("main/pp7/everyday/assets/3699e1a4.png", self.location).href
        }
    }),
    qX = db.extend({
        elements: a.elementsFromImages("choose"),
        onStartProgress() {
            a.startHoldShake("choose")
        },
        onStopProgress() {
            a.stopHoldShake("choose")
        }
    }),
    gX = db.extend({
        elements: a.elementsFromImages("call"),
        onStartProgress() {
            a.startHoldShake("call")
        },
        onStopProgress() {
            a.stopHoldShake("call")
        }
    }),
    lm = E.extend({
        imageManifest: {
            pout: new URL("main/pp7/everyday/assets/4716c2cd.png", self.location).href,
            stomp: new URL("main/pp7/everyday/assets/c7359694.png", self.location).href,
            yell: new URL("main/pp7/everyday/assets/4a5c65be.png", self.location).href
        }
    }),
    yX = lm.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("stomp"),
        onDiscreteProgress() {
            a.squashOnce("stomp", .35)
        }
    }),
    bX = lm.extend({
        elements: a.elementsFromImages("yell"),
        onStartProgress() {
            a.startHoldShake("yell")
        },
        onStopProgress() {
            a.stopHoldShake("yell")
        }
    }),
    vX = lm.extend({
        elements: a.elementsFromImages("pout")
    }),
    Am = E.extend({
        imageManifest: {
            bed: new URL("main/pp7/everyday/assets/eedc2e86.png", self.location).href,
            candy: new URL("main/pp7/everyday/assets/87f4a44a.png", self.location).href,
            closet: new URL("main/pp7/everyday/assets/527df02a.png", self.location).href
        }
    }),
    wX = Am.extend({
        stepDuration: .3,
        elements: a.elementsFromImages("bed"),
        initializeTimeline() {
            this.timeline.to(".e.bed", {
                y: -200
            })
        }
    }),
    xX = Am.extend({
        stepDuration: .3,
        elements: a.elementsFromImages("closet"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("closet", .3))
        }
    }),
    kX = Am.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("candy"),
        onDiscreteProgress() {
            a.squashOnce("candy", .25)
        }
    }),
    zc = E.extend({
        imageManifest: {
            book: new URL("main/pp7/everyday/assets/3b063c2e.png", self.location).href,
            drum: new URL("main/pp7/everyday/assets/68f311db.png", self.location).href,
            drumkit: new URL("main/pp7/everyday/assets/ab1cc311.png", self.location).href,
            highhat: new URL("main/pp7/everyday/assets/14ea5ad2.png", self.location).href,
            snare: new URL("main/pp7/everyday/assets/62985177.png", self.location).href,
            stick: new URL("main/pp7/everyday/assets/3a6b4454.png", self.location).href
        }
    }),
    CX = zc.extend({
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "book",
                type: "img",
                key: "book"
            }]
        }]
    }),
    RX = zc.extend({
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "drum",
                type: "img",
                key: "drum"
            }, {
                class: "highhat",
                type: "img",
                key: "highhat"
            }, {
                class: "snare",
                type: "img",
                key: "snare"
            }]
        }, {
            class: "drumkit",
            type: "img",
            key: "drumkit"
        }],
        lastStepDuration: .5,
        initializeTimeline() {
            s.set(".e.drumkit", {
                hidden: !0
            });
            const t = s.timeline().fromTo(".e.drum", {
                rotate: 90,
                x: 100,
                scale: .75,
                y: 100
            }, {
                rotate: 0,
                x: 150,
                y: 50,
                scale: .8,
                ease: "power3.out",
                duration: .75
            }, 0).fromTo(".e.highhat", {
                x: -100,
                y: 100,
                scale: .9
            }, {
                x: -100,
                y: 0,
                scale: .6,
                ease: "power3.out",
                duration: .75
            }, .5).fromTo(".e.snare", {
                rotate: -90,
                x: 0,
                y: 50,
                scale: 1
            }, {
                rotate: 0,
                x: 0,
                y: 100,
                scale: .7,
                ease: "power3.out",
                duration: .75,
                onComplete: () => {
                    a.squashTransition("band-container", "drumkit", .25)
                }
            }, 1);
            this.timeline.add(t)
        }
    }),
    DX = zc.extend({
        stepDuration: 1.25,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "drumkit",
                type: "img",
                key: "drumkit"
            }, {
                class: "stickLeft",
                type: "img",
                key: "stick"
            }, {
                class: "stickRight",
                type: "img",
                key: "stick"
            }]
        }],
        initializeTimeline() {
            s.timeline().fromTo(".e.stickLeft", {
                x: -200,
                y: 500,
                opacity: 0,
                scale: .7
            }, {
                y: 150,
                opacity: 1,
                ease: "back.out"
            }, 0).fromTo(".e.stickRight", {
                x: 200,
                y: 500,
                opacity: 0,
                scale: .7
            }, {
                y: 150,
                opacity: 1,
                ease: "back.out"
            }, 0)
        },
        onDiscreteProgress(t) {
            t === 50 ? s.timeline().to(".e.stickLeft", {
                rotate: -1080,
                duration: 1
            }) : s.timeline().to(".e.stickRight", {
                rotate: 1080,
                duration: 1
            })
        }
    }),
    SX = zc.extend({
        stepDuration: .25,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "drumkit",
                type: "img",
                key: "drumkit"
            }, {
                class: "stickLeft",
                type: "img",
                key: "stick"
            }, {
                class: "stickRight",
                type: "img",
                key: "stick"
            }]
        }],
        initializeTimeline() {
            s.timeline().set(".e.stickLeft", {
                x: -200,
                y: 150,
                scale: .7
            }).set(".e.stickRight", {
                x: 200,
                y: 150,
                scale: .7
            })
        },
        onDiscreteProgress() {
            a.squashOnce("drumkit", X.exports.random(10, 25) / 100), s.timeline().to(".e.stickLeft", {
                rotate: X.exports.random(-35, -5),
                scale: .8,
                yoyo: !0,
                duration: X.exports.random(10, 25) / 100,
                repeat: 1
            }), s.timeline().to(".e.stickRight", {
                rotate: X.exports.random(5, 35),
                scale: .8,
                yoyo: !0,
                duration: X.exports.random(10, 25) / 100,
                repeat: 1
            })
        }
    }),
    Hc = E.extend({
        imageManifest: {
            bass: new URL("main/pp7/everyday/assets/c75cbcfc.png", self.location).href,
            hat: new URL("main/pp7/everyday/assets/f2238f24.png", self.location).href,
            sunglasses: new URL("main/pp7/everyday/assets/33627465.png", self.location).href
        }
    }),
    TX = Hc.extend({
        stepDuration: 1,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "hat",
                type: "img",
                key: "hat"
            }]
        }],
        initializeTimeline() {
            s.set(".e.hat", {
                scale: .4,
                rotate: -15,
                y: -200
            }), this.timeline.to(".e.hat", {
                scale: .7,
                rotate: 385,
                y: -50,
                ease: "back.inOut"
            }, 0)
        }
    }),
    EX = Hc.extend({
        stepDuration: 2,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "hat",
                type: "img",
                key: "hat"
            }, {
                class: "sunglasses",
                type: "img",
                key: "sunglasses"
            }]
        }],
        initializeTimeline() {
            s.set(".e.hat", {
                scale: .7,
                rotate: 385,
                y: -50
            }), s.fromTo(".e.sunglasses", {
                scale: .4,
                rotate: -25,
                y: 500,
                opacity: 0
            }, {
                opacity: 1,
                duration: .25
            }), this.timeline.to(".e.sunglasses", {
                scale: .6,
                rotate: -360,
                y: 375,
                ease: "back.inOut"
            }, 0).to(".e.hat", {
                rotate: 360,
                y: -75
            }, 0)
        }
    }),
    LX = Hc.extend({
        stepDuration: .5,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "hat",
                type: "img",
                key: "hat"
            }, {
                class: "sunglasses",
                type: "img",
                key: "sunglasses"
            }, {
                class: "bass",
                type: "img",
                key: "bass"
            }]
        }],
        initializeTimeline() {
            s.set(".e.hat", {
                scale: .7,
                rotate: 360,
                y: -75
            }), s.set(".e.sunglasses", {
                scale: .6,
                rotate: -360,
                y: 375
            }), s.timeline().to(".e.hat", {
                scale: .4,
                y: -225
            }, 0).to(".e.sunglasses", {
                scale: .3,
                y: 0
            }, 0).fromTo(".e.bass", {
                scale: 1.5,
                y: 0,
                opacity: 0
            }, {
                scale: 1,
                y: 350,
                x: 125,
                rotate: 65,
                opacity: 1
            }, 0)
        },
        onDiscreteProgress() {
            a.squashOnce("bass", .3), a.squashOnce("band-container", .4)
        }
    }),
    BX = Hc.extend({
        stepDuration: .5,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "hat",
                type: "img",
                key: "hat"
            }, {
                class: "sunglasses",
                type: "img",
                key: "sunglasses"
            }, {
                class: "bass",
                type: "img",
                key: "bass"
            }]
        }],
        initializeTimeline() {
            s.set(".e.hat", {
                scale: .4,
                y: -225
            }), s.set(".e.sunglasses", {
                scale: .3,
                y: 0
            }), s.set(".e.bass", {
                scale: 1,
                y: 350,
                x: 125,
                rotate: 65
            })
        },
        onDiscreteProgress() {
            a.squashOnce("bass", .2), a.squashOnce("band-container", .3)
        }
    }),
    MX = E.extend({
        imageManifest: {
            cowbell: new URL("main/pp7/everyday/assets/94f0796b.png", self.location).href,
            cowbellbroke: new URL("main/pp7/everyday/assets/b1363ce3.png", self.location).href,
            mic1: new URL("main/pp7/everyday/assets/2399ff58.png", self.location).href,
            mic2: new URL("main/pp7/everyday/assets/85e54103.png", self.location).href,
            mic3: new URL("main/pp7/everyday/assets/08fc83a3.png", self.location).href,
            mic4: new URL("main/pp7/everyday/assets/5b2d1a30.png", self.location).href,
            stand: new URL("main/pp7/everyday/assets/2841650a.png", self.location).href,
            standbroke: new URL("main/pp7/everyday/assets/8d8cf4d5.png", self.location).href
        }
    }),
    OX = MX.extend({
        stepDuration: .25,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "music",
                type: "img",
                key: "mic1"
            }, {
                class: "music",
                type: "img",
                key: "mic2"
            }, {
                class: "music",
                type: "img",
                key: "mic3"
            }, {
                class: "music",
                type: "img",
                key: "mic4"
            }, {
                class: "music",
                type: "img",
                key: "cowbell"
            }, {
                class: "music",
                type: "img",
                key: "cowbellbroke"
            }, {
                class: "music",
                type: "img",
                key: "stand"
            }, {
                class: "music",
                type: "img",
                key: "standbroke"
            }]
        }],
        initializeTimeline() {
            s.set(".e.music", {
                hidden: !0
            }), s.set(".e.music:nth-child(1)", {
                hidden: !1
            })
        },
        lastStepDuration: 1,
        onDiscreteProgress(t) {
            switch (Math.floor(t)) {
                case 5:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(2)", {
                        hidden: !1
                    });
                    break;
                case 10:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(3)", {
                        hidden: !1
                    });
                    break;
                case 15:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(4)", {
                        hidden: !1
                    });
                    break;
                case 20:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(1)", {
                        hidden: !1
                    });
                    break;
                case 25:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(2)", {
                        hidden: !1
                    });
                    break;
                case 30:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(3)", {
                        hidden: !1
                    });
                    break;
                case 35:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(4)", {
                        hidden: !1
                    });
                    break;
                case 40:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(5)", {
                        hidden: !1
                    });
                    break;
                case 45:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(6)", {
                        hidden: !1
                    });
                    break;
                case 50:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(5)", {
                        hidden: !1
                    });
                    break;
                case 55:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(6)", {
                        hidden: !1
                    });
                    break;
                case 60:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(1)", {
                        hidden: !1
                    });
                    break;
                case 65:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(2)", {
                        hidden: !1
                    });
                    break;
                case 70:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(3)", {
                        hidden: !1
                    });
                    break;
                case 75:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(4)", {
                        hidden: !1
                    });
                    break;
                case 80:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(5)", {
                        hidden: !1
                    });
                    break;
                case 85:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(6)", {
                        hidden: !1
                    });
                    break;
                case 90:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(7)", {
                        hidden: !1
                    });
                    break;
                case 95:
                    s.set(".e.music", {
                        hidden: !0
                    }), s.set(".e.music:nth-child(8)", {
                        hidden: !1
                    });
                    break;
                case 100:
                    s.to(".e.music:nth-child(8)", {
                        rotate: -720,
                        y: -500,
                        opacity: 0,
                        duration: .75,
                        ease: "back.in"
                    });
                    break
            }
            a.squashOnce("music", .3)
        }
    }),
    Nc = E.extend({
        imageManifest: {
            balance: new URL("main/pp7/everyday/assets/3d4053ca.png", self.location).href,
            boogy: new URL("main/pp7/everyday/assets/471c86df.png", self.location).href,
            camera: new URL("main/pp7/everyday/assets/4ce3881c.png", self.location).href,
            hooray: new URL("main/pp7/everyday/assets/f96b11c3.png", self.location).href,
            left: new URL("main/pp7/everyday/assets/8212f642.png", self.location).href,
            right: new URL("main/pp7/everyday/assets/3a617872.png", self.location).href,
            squat: new URL("main/pp7/everyday/assets/77007080.png", self.location).href,
            starburst: new URL("main/pp7/everyday/assets/544b9211.png", self.location).href,
            twirl: new URL("main/pp7/everyday/assets/9dc76cc6.png", self.location).href
        }
    }),
    IX = Nc.extend({
        stepDuration: .25,
        elements: [{
            class: "pose-container",
            type: "container",
            children: [{
                class: "twirl",
                type: "img",
                key: "twirl"
            }, {
                class: "squat",
                type: "img",
                key: "squat"
            }, {
                class: "boogy",
                type: "img",
                key: "boogy"
            }, {
                class: "balance",
                type: "img",
                key: "balance"
            }]
        }, {
            class: "pose",
            type: "img",
            key: "boogy"
        }, {
            class: "starburst",
            type: "img",
            key: "starburst"
        }],
        lastStepDuration: 1,
        dance: null,
        initializeTimeline() {
            s.set(".e.squat", {
                opacity: 0
            }), s.set(".e.boogy", {
                opacity: 0
            }), s.set(".e.balance", {
                opacity: 0
            }), s.set(".e.starburst", {
                opacity: 0
            }), s.set(".e.pose", {
                hidden: !0,
                x: -130,
                y: -100
            }), this.dance = s.timeline({
                repeat: -1
            }).fromTo(".e.twirl", {
                opacity: 0
            }, {
                opacity: 1,
                duration: .25
            }, 0).to(".e.twirl", {
                opacity: 0,
                duration: .15
            }, .25).to(".e.squat", {
                opacity: 1,
                duration: .15
            }, .2).to(".e.squat", {
                opacity: 0,
                duration: .15
            }, .5).to(".e.boogy", {
                opacity: 1,
                duration: .15
            }, .45).to(".e.boogy", {
                opacity: 0,
                duration: .15
            }, .75).to(".e.balance", {
                opacity: 1,
                duration: .15
            }, .7).to(".e.balance", {
                opacity: 0,
                duration: .15
            }, 1), this.dance.timeScale(.7)
        },
        onDiscreteProgress() {
            this.dance.pause(), a.squashTransition("pose-container", "pose", .25), s.timeline().to(".e.starburst", {
                scale: 3,
                opacity: .75,
                duration: .25,
                yoyo: !0,
                repeat: 1
            })
        }
    }),
    PX = Nc.extend({
        stepDuration: 2,
        elements: [{
            class: "pose-container",
            type: "container",
            children: [{
                class: "pose",
                type: "img",
                key: "boogy"
            }]
        }],
        initializeTimeline() {
            s.set(".e.pose", {
                x: -130,
                y: -100
            }), a.startShake("pose-container", 3, .1, 2)
        },
        onDiscreteProgress() {
            s.timeline().to(".e.pose", {
                scale: 1.6,
                x: -200,
                ease: "back.inOut",
                duration: 1.5
            }).to(".e.pose", {
                filter: "blur(10px)",
                duration: .25
            }, .8).to(".e.pose", {
                filter: "blur(0px)",
                duration: .25
            }, 1.25)
        }
    }),
    UX = Nc.extend({
        stepDuration: 2,
        elements: [{
            class: "pose-container",
            type: "container",
            children: [{
                class: "pose",
                type: "img",
                key: "boogy"
            }]
        }],
        initializeTimeline() {
            s.set(".e.pose", {
                x: -200,
                y: -100,
                scale: 1.6
            }), a.startShake("pose-container", 3, .1, 2)
        },
        onDiscreteProgress() {
            s.timeline().to(".e.pose", {
                scale: 4,
                x: -580,
                y: 150,
                ease: "back.inOut",
                duration: 1.5
            }).to(".e.pose", {
                filter: "blur(10px)",
                duration: .25
            }, .8).to(".e.pose", {
                filter: "blur(0px)",
                duration: .25
            }, 1.25)
        }
    }),
    FX = Nc.extend({
        elements: [{
            class: "pose-container",
            type: "container",
            children: [{
                class: "pose",
                type: "img",
                key: "boogy"
            }]
        }, {
            class: "starburst",
            type: "img",
            key: "starburst"
        }],
        lastStepDuration: 1.5,
        initializeTimeline() {
            s.set(".e.pose", {
                x: -580,
                y: 150,
                scale: 4
            }), s.set(".e.starburst", {
                opacity: 0
            }), a.startShake("pose-container", 4, .2, 3), this.timeline.fromTo(".e.starburst", {
                x: 0,
                y: 0
            }, {
                scale: 3,
                opacity: .75,
                duration: .1,
                yoyo: !0,
                repeat: 1
            }, 0).fromTo(".e.starburst", {
                x: 500,
                y: -200,
                rotate: -45
            }, {
                scale: 2,
                opacity: .75,
                duration: .1,
                yoyo: !0,
                repeat: 1
            }, .5).fromTo(".e.starburst", {
                x: -500,
                y: 500
            }, {
                scale: 3,
                opacity: .75,
                duration: .1,
                yoyo: !0,
                repeat: 1
            }, 1).fromTo(".e.starburst", {
                x: 0,
                y: 0,
                rotate: 180
            }, {
                scale: 4,
                opacity: .75,
                duration: .1,
                yoyo: !0,
                repeat: 1
            }, 1.5).fromTo(".pose-container", {
                background: "transparent",
                border: "10px solid transparent"
            }, {
                background: "red",
                border: "45px solid white",
                overflow: "hidden",
                duration: .2,
                scale: .7,
                onStart: () => {
                    s.set(".e.pose", {
                        x: -278,
                        y: -130,
                        scale: 2.2
                    }), a.stopShake("pose-container"), s.set(".pose-container", {
                        left: "-138px"
                    })
                }
            }, 1.5).set(".scene-container", {
                rotate: -15
            }, 1.5)
        }
    }),
    Gc = E.extend({
        imageManifest: {
            paper: new URL("main/pp7/everyday/assets/2db97ce2.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/8e96b6a9.png", self.location).href,
            signature: new URL("main/pp7/everyday/assets/8a668873.png", self.location).href,
            wave: new URL("main/pp7/everyday/assets/32f819ac.png", self.location).href
        }
    }),
    jX = Gc.extend({
        stepDuration: 1,
        elements: [{
            class: "autograph-container",
            type: "container",
            children: [{
                class: "wave",
                type: "img",
                key: "wave"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.wave", {
                rotate: -25,
                ease: "back.out",
                duration: .75
            }, 0).to(".e.wave", {
                rotate: 25,
                x: 100,
                ease: "back.out",
                duration: .75
            }, 1)
        }
    }),
    pb = Gc.extend({
        elements: [{
            class: "paper1",
            type: "img",
            key: "paper"
        }, {
            class: "paper2",
            type: "img",
            key: "paper"
        }, {
            class: "autograph-container",
            type: "container",
            children: [{
                class: "signature",
                type: "img",
                key: "signature"
            }]
        }],
        signAutograph: null,
        initializeTimeline() {
            s.set(".autograph-container", {
                background: "white",
                border: "20px solid black",
                scale: .7,
                overflow: "hidden",
                width: "800px",
                height: "1200px",
                rotate: -8,
                x: 100,
                y: -50
            }), s.set(".e.signature", {
                opacity: 0
            }), this.signAutograph = X.exports.throttle(() => {
                this.signing = s.timeline().fromTo(".e.signature:nth-child(1)", {
                    rotate: X.exports.random(-45, 45),
                    x: X.exports.random(-250, 150),
                    scale: .6,
                    y: X.exports.random(-250, 600),
                    opacity: 0
                }, {
                    opacity: 1,
                    duration: .25
                }), s.set(".e.autograph-container", {
                    rotate: X.exports.random(-12, 12)
                }), s.set(".e.paper2", {
                    scaleX: X.exports.random(-1, 1)
                }), s.set(".e.paper1", {
                    scaleX: X.exports.random(-1, 1)
                })
            }, 200)
        },
        onProgress() {
            this.signAutograph()
        }
    }),
    QX = Gc.extend({
        elements: [{
            class: "paper1",
            type: "img",
            key: "paper"
        }, {
            class: "paper2",
            type: "img",
            key: "paper"
        }, {
            class: "autograph-container",
            type: "container",
            children: [{
                class: "signature",
                type: "img",
                key: "signature"
            }]
        }],
        signAutograph: null,
        initializeTimeline() {
            s.set(".autograph-container", {
                background: "white",
                border: "20px solid black",
                scale: .7,
                overflow: "hidden",
                width: "800px",
                height: "1200px",
                rotate: -8,
                x: 100,
                y: -50
            }), s.set(".e.signature", {
                opacity: 0
            }), this.signAutograph = X.exports.throttle(() => {
                this.signing = s.timeline().fromTo(".e.signature:nth-child(1)", {
                    rotate: X.exports.random(-45, 45),
                    x: X.exports.random(-250, 150),
                    scale: .6,
                    y: X.exports.random(-250, 600),
                    opacity: 0
                }, {
                    opacity: 1,
                    duration: .25
                }), s.set(".e.autograph-container", {
                    rotate: X.exports.random(-12, 12)
                }), s.set(".e.paper2", {
                    scaleX: X.exports.random(-1, 1)
                }), s.set(".e.paper1", {
                    scaleX: X.exports.random(-1, 1)
                })
            }, 100)
        },
        onProgress() {
            this.signAutograph()
        }
    }),
    zX = Gc.extend({
        stepDuration: .5,
        elements: [{
            class: "autograph-container",
            type: "container",
            children: [{
                class: "run",
                type: "img",
                key: "run"
            }]
        }],
        onDiscreteProgress() {
            a.squashOnce("autograph-container", .5), s.set(".e.run", {
                rotate: X.exports.random(-35, 35)
            })
        }
    }),
    HX = E.extend({
        imageManifest: {
            music1: new URL("main/pp7/everyday/assets/f6d9e3d8.png", self.location).href,
            music2: new URL("main/pp7/everyday/assets/3f9920cb.png", self.location).href,
            music3: new URL("main/pp7/everyday/assets/9077b113.png", self.location).href,
            music4: new URL("main/pp7/everyday/assets/13ae349e.png", self.location).href
        }
    }),
    NX = HX.extend({
        stepDuration: .1,
        lastStepDuration: .5,
        elements: [{
            class: "show-container",
            type: "container",
            children: [{
                class: "music",
                type: "img",
                key: "music1"
            }, {
                class: "music",
                type: "img",
                key: "music2"
            }, {
                class: "music",
                type: "img",
                key: "music3"
            }, {
                class: "music",
                type: "img",
                key: "music4"
            }]
        }],
        initializeTimeline() {
            a.squashOnce("show-container", .5)
        },
        playNote(t) {
            const e = t || X.exports.random(1, 4);
            s.timeline().fromTo(`.e.music:nth-child(${e})`, {
                opacity: 0
            }, {
                opacity: 1
            }), a.squashOnce(`music:nth-child(${e})`, .25)
        },
        onDiscreteProgress(t) {
            t === 20 ? (this.playNote(1), this.playNote(3)) : t === 40 ? (this.playNote(2), this.playNote(4)) : t >= 60 && t <= 75 ? (this.playNote(), this.playNote(), this.playNote()) : t >= 85 ? (this.playNote(1), this.playNote(2), this.playNote(3), this.playNote(4)) : this.playNote()
        }
    }),
    MV = E.extend({
        imageManifest: {
            marinate: new URL("main/pp7/everyday/assets/c0f6546c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "marinate",
                images: {
                    salt: [1380, 748, 385, 427, 403, 214],
                    shaker: [1197, 10, 529, 530, 22, 440],
                    liquidOut: [739, 10, 448, 775, 113, 276],
                    marinate3: [911, 1185, 682, 168, 334, 199],
                    marinate2: [739, 795, 631, 117, 359, 224],
                    marinate1: [1197, 550, 806, 188, 304, 116],
                    marinate0: [10, 965, 891, 393, 304, 55],
                    liquidIn: [10, 10, 719, 945, 55, 179]
                }
            }
        }
    }),
    GX = MV.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["liquidOut", "liquidIn"])
        }],
        onLoadComplete() {
            s.set(".e.liquidIn", {
                hidden: !0
            })
        },
        onStartProgress() {
            a.startHoldShake("c"), a.squashTransition("liquidOut", "liquidIn", .3)
        },
        onStopProgress() {
            a.stopHoldShake("c"), a.squashTransition("liquidIn", "liquidOut", .3)
        }
    }),
    XX = MV.extend({
        stepDuration: .35,
        emitter: null,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["shaker", "salt"])
        }],
        onLoadComplete() {
            s.set(".e.salt", {
                opacity: 0
            }), s.set(".e.c", {
                scaleX: -1
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.shaker", {
                x: 20,
                y: -20,
                duration: .2
            }, 0).to(".e.shaker", {
                x: -50,
                y: 70,
                duration: .05
            }, .2).to(".e.shaker", {
                x: 0,
                y: 0,
                duration: .05
            }, .25).to(".e.salt", {
                x: -50,
                y: 150,
                duration: .25
            }, .2).to(".e.salt", {
                opacity: 1,
                duration: .05
            }, .2).to(".e.salt", {
                opacity: 0,
                duration: .05
            }, .4).set(".e.salt", {
                x: 0,
                y: 0
            })
        }
    }),
    YX = MV.extend({
        elements: a.elementsFromSprite("sprite", ["marinate0", "marinate1"]),
        onLoadComplete() {
            s.set(".e.marinate1", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.marinate1", {
                opacity: 1
            })
        }
    }),
    KX = MV.extend({
        elements: a.elementsFromSprite("sprite", ["marinate0", "marinate1", "marinate2"]),
        onLoadComplete() {
            s.set(".e.marinate2", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.marinate2", {
                opacity: 1
            })
        }
    }),
    WX = MV.extend({
        elements: a.elementsFromSprite("sprite", ["marinate0", "marinate1", "marinate2", "marinate3"]),
        onLoadComplete() {
            s.set(".e.marinate3", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.marinate3", {
                opacity: 1
            })
        }
    }),
    cm = E.extend({
        imageManifest: {
            fire: new URL("main/pp7/everyday/assets/4462046e.png", self.location).href,
            fluid: new URL("main/pp7/everyday/assets/fc5b873e.png", self.location).href,
            matches: new URL("main/pp7/everyday/assets/ca32b223.png", self.location).href
        }
    }),
    dm = cm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("fluid"),
        onDiscreteProgress() {
            a.squashOnce("fluid", .25, "y")
        }
    }),
    JX = dm,
    ZX = dm,
    _X = cm.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("matches"),
        onDiscreteProgress() {
            a.squashOnce("matches", .5)
        }
    }),
    $X = cm.extend({
        elements: a.elementsFromImages("fire"),
        onStartProgress() {
            a.startHoldShake("fire")
        },
        onStopProgress() {
            a.stopHoldShake("fire")
        }
    }),
    Xc = E.extend({
        imageManifest: {
            burn: new URL("main/pp7/everyday/assets/d8cbbdcc.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "burn",
                images: {
                    tongs: [10, 10, 817, 696, 207, 76],
                    thumb: [10, 1130, 524, 675, 147, 239],
                    math: [837, 10, 490, 287, 152, 217],
                    gym: [1304, 307, 429, 275, 356, 298],
                    science: [837, 307, 457, 312, 541, 286],
                    afc: [1260, 629, 457, 496, 357, 286],
                    reportCard: [724, 716, 526, 701, 152, 217],
                    fireSmoke: [1260, 1135, 290, 365, 116, 360],
                    fire: [10, 716, 704, 404, 448, 160]
                }
            }
        }
    }),
    eY = Xc.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["reportCard", "afc", "science", "gym", "math"]),
        onLoadComplete() {
            s.set(".e.afc, .e.science, .e.gym, .e.math", {
                hidden: !0
            })
        },
        initializeTimeline() {
            const t = s.timeline().set(".e.afc, .e.math", {
                    hidden: !1
                }).set(".e.reportCard", {
                    hidden: !0
                }, .2).to(".e.math", {
                    x: 300,
                    y: -100,
                    rotate: 35,
                    duration: 1
                }, 1).to(".e.math", {
                    opacity: 0
                }, 1.8),
                e = s.timeline().set(".e.science, .e.gym", {
                    hidden: !1
                }).set(".e.afc, .e.math", {
                    hidden: !0
                }, .2).to(".e.gym", {
                    x: 300,
                    y: -100,
                    rotate: 35,
                    duration: 1
                }, 1).to(".e.gym", {
                    opacity: 0
                }, 1.8);
            this.timeline.add(t).add(e)
        }
    }),
    tY = Xc.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", ["fire", "fireSmoke"]),
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).to(".e.fireSmoke", {
                y: -150,
                opacity: 0,
                duration: 2
            })
        },
        onDiscreteProgress() {
            a.squashOnce("fire", .4)
        }
    }),
    nY = Xc.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", ["thumb"]),
        onDiscreteProgress() {
            a.squashOnce("thumb", .4)
        }
    }),
    iY = Xc.extend({
        elements: [...a.elementsFromSprite("sprite", ["fire", "fireSmoke", "tongs"])],
        onLoadComplete() {
            s.timeline({
                repeat: -1
            }).to(".e.fireSmoke", {
                y: -150,
                opacity: 0,
                duration: 2
            }), s.set(".e.tongs", {
                x: -120,
                y: 350,
                rotate: -13,
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fireSmoke", {
                hidden: !0
            }, 0).to(".e.fire", {
                scale: .5
            }, 0).to(".e.tongs", {
                x: 0,
                y: 0,
                rotate: 0,
                scale: 1
            }, 0).fillTime(.5)
        }
    }),
    OV = E.extend({
        imageManifest: {
            grill: new URL("main/pp7/everyday/assets/e8947514.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "grill",
                images: {
                    thumb: [839, 580, 618, 714, 143, 192],
                    apron: [1467, 580, 467, 876, 62, 274],
                    sunglasses: [10, 253, 819, 426, 287, 91],
                    cookedPatty: [10, 10, 614, 233, 395, 190],
                    rawPatty: [634, 10, 614, 233, 395, 190],
                    juice: [10, 689, 686, 728, 116, 192],
                    hat: [1258, 10, 679, 560, 182, 164]
                }
            }
        }
    }),
    sY = OV.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["apron", "sunglasses", "hat"]),
        onLoadComplete() {
            s.set(".e.hat, .e.sunglasses", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.apron", {
                y: 220,
                scale: .8,
                duration: 1,
                ease: "back.in(2)"
            }, 0).to(".e.hat", {
                opacity: 1,
                duration: .2
            }, .8).to(".e.hat", {
                y: -300,
                scale: .4,
                opacity: 1,
                duration: 1,
                ease: "back.in(2)"
            }, 1).to(".e.sunglasses", {
                opacity: 1,
                duration: .2
            }, 1.8).to(".e.sunglasses", {
                y: -200,
                scale: .3,
                rotate: 12,
                duration: 1,
                ease: "back.in(2)"
            }, 2)
        }
    }),
    oY = OV.extend({
        stepDuration: .5,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["rawPatty", "cookedPatty"])
        }],
        onLoadComplete() {
            s.fromTo(".e.cookedPatty", {
                opacity: 0
            }, {
                opacity: 1,
                duration: 1.2
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                rotate: 90,
                ease: "back.in(2)"
            }).set(".e.c", {
                rotate: -90
            }).set(".e.cookedPatty", {
                opacity: 0
            }).to(".e.c", {
                rotate: 0,
                ease: "back.out(2)"
            })
        }
    }),
    aY = OV.extend({
        stepDuration: .5,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["rawPatty", "cookedPatty"])
        }],
        onLoadComplete() {
            s.fromTo(".e.cookedPatty", {
                opacity: 0
            }, {
                opacity: 1,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                rotate: 90,
                ease: "back.in(2)"
            }).set(".e.c", {
                rotate: -90
            }).to(".e.c", {
                rotate: 0,
                ease: "back.out(2)"
            })
        }
    }),
    rY = OV.extend({
        elements: a.elementsFromSprite("sprite", ["juice"]),
        onStartProgress() {
            a.startHoldShake("juice")
        },
        onStopProgress() {
            a.stopHoldShake("juice")
        }
    }),
    VY = OV.extend({
        elements: a.elementsFromSprite("sprite", ["thumb"]),
        initializeTimeline() {
            this.timeline.add(s.timeline({
                repeat: 1
            }).to(".e.thumb", {
                rotate: 10,
                ease: "none"
            }).to(".e.thumb", {
                rotate: 0,
                ease: "none"
            }).to(".e.thumb", {
                rotate: -10,
                ease: "none"
            }).to(".e.thumb", {
                rotate: 0,
                ease: "none"
            }))
        }
    }),
    lY = E.extend({
        imageManifest: {
            button1: new URL("main/pp7/everyday/assets/4737d1a7.png", self.location).href,
            button2: new URL("main/pp7/everyday/assets/abbeb8bd.png", self.location).href,
            button3: new URL("main/pp7/everyday/assets/bb669cf5.png", self.location).href,
            buttonbase: new URL("main/pp7/everyday/assets/9ece03cc.png", self.location).href,
            channels: new URL("main/pp7/everyday/assets/b34c9e4f.png", self.location).href,
            dial: new URL("main/pp7/everyday/assets/a101f6ea.png", self.location).href,
            laptop: new URL("main/pp7/everyday/assets/f6f87391.png", self.location).href,
            notes: new URL("main/pp7/everyday/assets/f5e702b2.png", self.location).href,
            radio: new URL("main/pp7/everyday/assets/0106359d.png", self.location).href
        }
    }),
    hb = lY.extend({
        elements: a.elementsFromImages("radio", "channels", "dial").concat([{
            type: "container",
            children: a.elementsFromImages("button1", "button2", "button3", "buttonbase"),
            class: "buttons",
            pos: [-250, -90]
        }]),
        initializeTimeline() {
            s.set(".e.dial", {
                y: 60,
                x: -210
            }), this.timeline.to(".e.dial", {
                rotate: 90
            })
        }
    }),
    ub = hb.extend({
        initializeTimeline() {
            s.set(".e.dial", {
                y: 60,
                x: -210,
                rotate: 90
            }), this.timeline.to(".e.dial", {
                rotate: -90
            })
        }
    }),
    mb = ub.extend({
        initializeTimeline() {
            s.set(".e.dial", {
                y: 60,
                x: -210,
                rotate: -90
            })
        },
        onDiscreteProgress() {
            s.to(".e.button3", {
                y: 20,
                duration: .1
            }), s.to(".e.button3", {
                y: 0,
                delay: .3
            })
        }
    }),
    AY = mb.extend({
        elements: a.elementsFromImages("laptop", "notes", "notes", "notes"),
        initializeTimeline() {
            this.timeline.fromTo(".e.notes", {
                display: "none",
                scale: .1,
                y: 0,
                opacity: 1
            }, {
                display: "block",
                scale: 1,
                y: 100,
                opacity: 0,
                rotate: "random(-20, 20)",
                stagger: .33,
                duration: .5
            })
        },
        onStartProgress() {
            a.startHoldShake("laptop", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("laptop", 2, 1)
        }
    }),
    cY = E.extend({
        imageManifest: {
            big: new URL("main/pp7/everyday/assets/fbde6692.png", self.location).href,
            medium: new URL("main/pp7/everyday/assets/653e79c8.png", self.location).href,
            small: new URL("main/pp7/everyday/assets/e2de411c.png", self.location).href
        }
    }),
    dY = cY.extend({
        elements: a.elementsFromImages("small", "medium", "big"),
        initializeTimeline() {
            s.set(".e.medium", {
                y: 20
            }), s.set(".e.big", {
                y: 50
            }), this.timeline.from(".e.small,.e.medium,.e.big", {
                opacity: 0,
                stagger: 1
            }), this.particles = this.addParticleEmitter({
                numberOfParticles: 50,
                autoplay: !0,
                restartOnProgress: !1,
                zIndex: -1,
                settings: {
                    frequency: .025,
                    from: {
                        backgroundColor: "#f1d0aa",
                        border: "1px solid black"
                    },
                    to: {
                        ease: "power2.in",
                        duration: .3
                    },
                    boundaries: {
                        left: 480,
                        right: 520,
                        top: 0,
                        bottom: 0
                    },
                    minSize: 13,
                    maxSize: 25,
                    angle: 0,
                    force: 3,
                    randomAngle: !1
                }
            })
        }
    }),
    Yc = E.extend({
        imageManifest: {
            ball: new URL("main/pp7/everyday/assets/4a729936.png", self.location).href,
            balls: new URL("main/pp7/everyday/assets/2e3a5621.png", self.location).href,
            ballsflat: new URL("main/pp7/everyday/assets/8f7d54ae.png", self.location).href,
            flat: new URL("main/pp7/everyday/assets/db369f80.png", self.location).href,
            kid: new URL("main/pp7/everyday/assets/09d108c1.png", self.location).href
        }
    }),
    pY = Yc.extend({
        stepDuration: .5,
        elements: [{
            type: "img",
            key: "flat",
            class: "flat1",
            pos: [-300, -100]
        }, {
            type: "img",
            key: "flat",
            class: "flat2",
            pos: [0, 0]
        }, {
            type: "img",
            key: "flat",
            class: "flat3",
            pos: [200, -40]
        }],
        initializeTimeline() {
            s.set(".e.flat1,.e.flat2,.e.flat3", {
                x: 800,
                y: 100,
                scale: .5
            }), s.to(".e.flat1", {
                x: 0,
                duration: .5
            }), this.timeline.to(".e.flat1", {
                scale: .4,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.flat1", {
                x: -800
            }), this.timeline.to(".e.flat2", {
                x: 0
            }, "<"), this.timeline.to(".e.flat2", {
                scale: .4,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.flat2", {
                x: -800
            }), this.timeline.to(".e.flat3", {
                x: 0
            }, "<"), this.timeline.to(".e.flat3", {
                scale: .4,
                yoyo: !0,
                repeat: 1
            }), this.timeline.to(".e.flat3", {
                x: -800
            })
        }
    }),
    fb = Yc.extend({
        elements: a.elementsFromImages("ball"),
        initializeTimeline() {
            this.timeline.fromTo(".e.ball", {
                scaleX: .5,
                scaleY: .1
            }, {
                scaleX: 1,
                scaleY: 1
            })
        }
    }),
    hY = fb.extend({
        elements: a.elementsFromImages("ball", "ball"),
        initializeTimeline() {
            s.set(".e.ball:first-child", {
                x: -250
            }), s.set(".e.ball:last-child", {
                x: 250,
                y: 100
            }), this.timeline.fromTo(".e.ball", {
                scaleX: .5,
                scaleY: .1
            }, {
                scaleX: 1,
                scaleY: 1,
                stagger: .5
            })
        }
    }),
    uY = Yc.extend({
        elements: a.elementsFromImages("ball", "balls", "ball"),
        initializeTimeline() {
            s.set(".e.balls", {
                y: 350
            }), s.set(".e.ball:first-child", {
                x: -250,
                y: 180
            }), s.set(".e.ball:last-child", {
                x: 250,
                y: 180,
                zIndex: -1
            }), this.timeline.fromTo(".e.ball", {
                scaleX: .25,
                scaleY: .1
            }, {
                scaleX: .4,
                scaleY: .4,
                stagger: .5
            })
        }
    }),
    mY = Yc.extend({
        elements: a.elementsFromImages("kid")
    }),
    pm = E.extend({
        imageManifest: {
            blender: new URL("main/pp7/everyday/assets/d411b934.png", self.location).href,
            drink1: new URL("main/pp7/everyday/assets/f8519588.png", self.location).href,
            drink2: new URL("main/pp7/everyday/assets/c53e093d.png", self.location).href,
            drink3: new URL("main/pp7/everyday/assets/039659fe.png", self.location).href,
            fruit1: new URL("main/pp7/everyday/assets/6b29e0e9.png", self.location).href,
            fruit2: new URL("main/pp7/everyday/assets/615b1ae5.png", self.location).href,
            fruit3: new URL("main/pp7/everyday/assets/a067bf73.png", self.location).href,
            liquid: new URL("main/pp7/everyday/assets/c4a7c55c.png", self.location).href
        }
    }),
    fY = pm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("blender", "fruit1", "fruit2", "fruit3"),
        initializeTimeline() {
            this.timeline.fromTo(".e.fruit1", {
                y: -50,
                opacity: 0
            }, {
                y: 0,
                opacity: 1
            }), this.timeline.fromTo(".e.fruit2", {
                y: -50,
                opacity: 0
            }, {
                y: 0,
                opacity: 1
            }), this.timeline.fromTo(".e.fruit3", {
                y: -50,
                opacity: 0
            }, {
                y: 0,
                opacity: 1
            })
        }
    }),
    qY = pm.extend({
        elements: [{
            type: "container",
            class: "smoothie",
            children: a.elementsFromImages("blender", "fruit1", "fruit2", "fruit3", "liquid"),
            pos: [0, 0]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.liquid", {
                opacity: 0
            }, {
                opacity: 1
            })
        },
        onStartProgress() {
            a.startHoldShake("smoothie", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("smoothie", 2, 1)
        }
    }),
    gY = pm.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("drink2", "drink1", "drink2", "drink3", "drink3"),
        initializeTimeline() {
            s.set(".e.drink2:first-child", {
                x: 80,
                scaleY: .8,
                scaleX: -.8
            }), s.set(".e.drink3:last-child", {
                x: 30,
                scaleX: -1.1,
                scaleY: 1.1
            }), this.timeline.fromTo(".e.drink1", {
                opacity: 1
            }, {
                opacity: 0,
                x: 100,
                duration: .5
            }), this.timeline.fromTo(".e.drink2", {
                opacity: 1
            }, {
                opacity: 0,
                x: -100,
                stagger: .5
            }), this.timeline.fromTo(".e.drink3", {
                opacity: 1
            }, {
                opacity: 0,
                x: 100,
                stagger: .5
            })
        }
    }),
    Kc = E.extend({
        imageManifest: {
            hose: new URL("main/pp7/everyday/assets/9bef5a15.png", self.location).href,
            hosedrip: new URL("main/pp7/everyday/assets/b6e12f81.png", self.location).href,
            hosepuddle: new URL("main/pp7/everyday/assets/e9897aee.png", self.location).href,
            spigot: new URL("main/pp7/everyday/assets/c35c7289.png", self.location).href,
            spigot2: new URL("main/pp7/everyday/assets/b0cbd889.png", self.location).href,
            swim: new URL("main/pp7/everyday/assets/10dd8bf5.png", self.location).href
        }
    }),
    yY = Kc.extend({
        elements: a.elementsFromImages("spigot", "spigot2"),
        initializeTimeline() {
            this.timeline.fromTo(".e.spigot", {
                opacity: 1
            }, {
                opacity: 0,
                yoyo: !0,
                repeat: 3
            }), this.timeline.fromTo(".e.spigot2", {
                opacity: 0
            }, {
                opacity: 1,
                yoyo: !0,
                repeat: 3
            }, "<")
        }
    }),
    bY = Kc.extend({
        elements: a.elementsFromImages("hose", "hosedrip"),
        initializeTimeline() {
            this.timeline.from(".e.hosedrip", {
                opacity: 0
            }), this.timeline.to(".e.hose", {
                opacity: 0
            }, "<")
        }
    }),
    vY = Kc.extend({
        elements: a.elementsFromImages("hosedrip", "hosepuddle"),
        initializeTimeline() {
            this.timeline.from(".e.hosepuddle", {
                opacity: 0
            }), this.timeline.to(".e.hosedrip", {
                opacity: 0
            }, "<")
        }
    }),
    wY = Kc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("swim"),
        initializeTimeline() {
            this.timeline.fromTo(".e.swim", {
                scale: 2.2,
                x: -300
            }, {
                x: 200
            }).to(".e.swim", {
                scale: 1.5,
                x: -100
            }).to(".e.swim", {
                scale: 1,
                x: 0
            })
        }
    }),
    Wc = E.extend({
        imageManifest: {
            board: new URL("main/pp7/everyday/assets/edceb0e2.png", self.location).href,
            dive: new URL("main/pp7/everyday/assets/b5802e2b.png", self.location).href,
            lifeguard: new URL("main/pp7/everyday/assets/74519f97.png", self.location).href,
            pose: new URL("main/pp7/everyday/assets/19424711.png", self.location).href,
            zzz: new URL("main/pp7/everyday/assets/45b595f0.png", self.location).href
        }
    }),
    xY = Wc.extend({
        elements: [{
            type: "container",
            class: "cam",
            children: a.elementsFromImages("board", "dive", "pose"),
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.board", {
                x: 0
            }), s.set(".e.dive", {
                opacity: 0,
                x: -550,
                y: -225
            }), s.set(".e.pose", {
                y: 110,
                scale: .8
            }), this.timeline.to(".e.pose", {
                x: -650
            }), this.timeline.to(".e.pose", {
                y: -200,
                ease: "bounce.in"
            }, "<"), this.timeline.to(".e.cam", {
                x: 500
            }, "<"), this.timeline.to(".e.pose", {
                rotate: -90
            }), this.timeline.to(".e.cam", {
                x: 700
            }, "<"), this.timeline.to(".e.dive", {
                opacity: 1,
                duration: .1
            }), this.timeline.to(".e.pose", {
                opacity: 0,
                duration: .1
            }, "<"), this.timeline.to(".e.dive", {
                y: 800,
                x: -750,
                ease: "none",
                opacity: 0
            }), this.timeline.to(".e.cam", {
                x: 900
            }, "<")
        }
    }),
    kY = Wc.extend({
        elements: a.elementsFromImages("lifeguard"),
        onStartProgress() {
            a.startHoldShake("lifeguard", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("lifeguard", 2, 1)
        }
    }),
    CY = Wc.extend({
        elements: a.elementsFromImages("lifeguard", "zzz"),
        initializeTimeline() {
            s.to(".e.zzz", {
                opacity: 0,
                x: 50,
                y: -50,
                repeat: -1,
                duration: 1
            })
        }
    }),
    RY = Wc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("lifeguard"),
        onDiscreteProgress() {
            s.to(".e.lifeguard", {
                x: "-=100",
                scale: "-=0.25",
                opacity: "-=0.33"
            })
        }
    }),
    Jc = E.extend({
        imageManifest: {
            award: new URL("main/pp7/everyday/assets/ea4b7504.png", self.location).href,
            bar: new URL("main/pp7/everyday/assets/050e93a3.png", self.location).href,
            bend1: new URL("main/pp7/everyday/assets/c3f850e3.png", self.location).href,
            bend2: new URL("main/pp7/everyday/assets/9c5e5d91.png", self.location).href,
            bend3: new URL("main/pp7/everyday/assets/bcff5a37.png", self.location).href
        }
    }),
    DY = Jc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bend1", "bend2", "bar"),
        initializeTimeline() {
            s.set(".e.bend1,.e.bend2", {
                scaleX: -1
            }), this.timeline.to(".e.bend1", {
                opacity: 0
            }), this.timeline.fromTo(".e.bend2", {
                opacity: 0
            }, {
                opacity: 1
            })
        }
    }),
    SY = Jc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bend2", "bend3", "bar"),
        initializeTimeline() {
            s.set(".e.bend2,.e.bend3", {
                scaleX: -1
            }), this.timeline.to(".e.bend2", {
                opacity: 0
            }), this.timeline.fromTo(".e.bend3", {
                opacity: 0
            }, {
                opacity: 1
            })
        }
    }),
    TY = Jc.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bend3", "bar"),
        onLoadComplete() {
            s.set(".e.bend3", {
                scaleX: -1
            })
        },
        onDiscreteProgress() {
            s.to(".e.bend3", {
                x: "+=100"
            }), s.to(".e.bend3", {
                y: -50,
                yoyo: !0,
                repeat: 1,
                ease: "none",
                duration: .25
            })
        }
    }),
    EY = Jc.extend({
        elements: a.elementsFromImages("award", "bar"),
        onLoadComplete() {
            s.set(".e.award", {
                scaleX: -1
            }), s.fromTo(".e.bar", {
                y: 0
            }, {
                y: 500,
                ease: "bounce.out",
                duration: 2
            })
        }
    }),
    Zc = E.extend({
        imageManifest: {
            rat: new URL("main/pp7/everyday/assets/5983fc79.png", self.location).href,
            shells1: new URL("main/pp7/everyday/assets/d2445224.png", self.location).href,
            shells2: new URL("main/pp7/everyday/assets/3e5a3bb2.png", self.location).href,
            shell: new URL("main/pp7/everyday/assets/8a384a43.png", self.location).href,
            shell2: new URL("main/pp7/everyday/assets/4d75659f.png", self.location).href,
            shell3: new URL("main/pp7/everyday/assets/63910126.png", self.location).href,
            shell4: new URL("main/pp7/everyday/assets/fbb9ae2e.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/720b72a9.png", self.location).href
        }
    }),
    LY = Zc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("shells1", "shell"),
        initializeTimeline() {
            this.timeline.to(".e.shell", {
                scale: 2,
                opacity: 0,
                rotateY: 90,
                ease: "back.inOut(3)"
            })
        }
    }),
    BY = Zc.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("shell2", "shell3", "shell4"),
        onLoadComplete() {
            this.timeline.to(".e.shell2", {
                scale: 2,
                opacity: 0,
                rotateY: 90,
                ease: "back.inOut(3)"
            }), this.timeline.to(".e.shell3", {
                scale: 2,
                opacity: 0,
                rotateY: 90,
                ease: "back.inOut(3)"
            }), this.timeline.to(".e.shell4", {
                scale: 2,
                opacity: 0,
                rotateY: 90,
                ease: "back.inOut(3)"
            })
        }
    }),
    MY = Zc.extend({
        elements: a.elementsFromImages("trash"),
        initializeTimeline() {
            this.timeline.to(".e.trash", {
                x: 200,
                scale: 4,
                ease: "none"
            })
        }
    }),
    OY = Zc.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("trash", "rat"),
        initializeTimeline() {
            s.set(".e.trash", {
                x: 200,
                scale: 4
            }), s.to(".e.trash", {
                scale: .1,
                opacity: 0,
                ease: "back.in(3)"
            }), s.fromTo(".e.rat", {
                opacity: 0
            }, {
                opacity: 1
            }), this.timeline.to(".e.rat", {
                rotate: 14,
                yoyo: !0,
                repeat: 1,
                duration: .25
            }), this.timeline.to(".e.rat", {
                rotate: 24,
                yoyo: !0,
                repeat: 1,
                duration: .25
            }), this.timeline.to(".e.rat", {
                rotate: -180,
                x: -600,
                y: -200,
                scale: .5,
                opacity: 0
            })
        }
    }),
    IY = E.extend({
        imageManifest: {
            sun: new URL("main/pp7/everyday/assets/bc35113d.png", self.location).href,
            tan: new URL("main/pp7/everyday/assets/c89c7995.png", self.location).href
        }
    }),
    PY = IY.extend({
        elements: a.elementsFromImages("tan", "sun"),
        initializeTimeline() {
            s.fromTo(".e.sun", {
                x: 1400,
                y: 1e3,
                scale: 3
            }, {
                scale: 4,
                x: 200,
                y: 500,
                ease: "power2.out",
                duration: 4
            }), s.fromTo(".e.tan", {
                x: 50,
                y: 50
            }, {
                x: -50,
                y: 0,
                scale: 1.3,
                ease: "power2.out",
                duration: 4
            })
        }
    }),
    _c = E.extend({
        imageManifest: {
            drinks: new URL("main/pp7/everyday/assets/1431686d.png", self.location).href,
            drink1: new URL("main/pp7/everyday/assets/f8519588.png", self.location).href,
            drink2: new URL("main/pp7/everyday/assets/c53e093d.png", self.location).href,
            drink3: new URL("main/pp7/everyday/assets/039659fe.png", self.location).href,
            frown: new URL("main/pp7/everyday/assets/2da8c666.png", self.location).href,
            party1: new URL("main/pp7/everyday/assets/46b2892e.png", self.location).href,
            party2: new URL("main/pp7/everyday/assets/eb2e1471.png", self.location).href,
            party3: new URL("main/pp7/everyday/assets/1e8312d1.png", self.location).href,
            tear1: new URL("main/pp7/everyday/assets/6598897e.png", self.location).href,
            tear2: new URL("main/pp7/everyday/assets/63f9188a.png", self.location).href,
            tear3: new URL("main/pp7/everyday/assets/67238ed3.png", self.location).href,
            van: new URL("main/pp7/everyday/assets/c9014e44.png", self.location).href
        }
    }),
    UY = _c.extend({
        elements: a.elementsFromImages("van"),
        initializeTimeline() {
            this.timeline.fromTo(".e.van", {
                x: 900
            }, {
                x: 0,
                duration: 1.9
            }), this.timeline.to(".e.van", {
                rotate: -3
            }, "<"), this.timeline.to(".e.van", {
                rotate: 0
            }, 1.9)
        }
    }),
    FY = _c.extend({
        elements: a.elementsFromImages("frown", "tear1", "tear2", "tear3"),
        initializeTimeline() {
            this.timeline.fromTo(".e.tear1,.e.tear2,.e.tear3", {
                y: 0,
                opacity: 1,
                display: "none"
            }, {
                display: "block",
                y: 100,
                opacity: 0,
                stagger: .33,
                ease: "power2.in"
            })
        }
    }),
    jY = _c.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("drink1", "drink2", "drink3"),
        initializeTimeline() {
            this.timeline.to(".e.drink1", {
                x: -900,
                ease: "back.in(2)"
            }), this.timeline.to(".e.drink2", {
                x: 1600,
                ease: "back.in(2)"
            }), this.timeline.to(".e.drink3", {
                x: -1200,
                ease: "back.in(2)"
            })
        }
    }),
    QY = _c.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("party1", "party2", "party3"),
        initializeTimeline() {
            s.set(".e.party1", {
                x: 0,
                y: 400
            }), s.set(".e.party2", {
                x: 350,
                y: 400
            }), s.set(".e.party3", {
                x: 660,
                y: 330
            }), s.fromTo(".e.party1", {
                rotate: 3
            }, {
                rotate: -3,
                yoyo: !0,
                repeat: -1,
                duration: .5,
                ease: "power2.inOut"
            }), s.fromTo(".e.party3", {
                y: 310
            }, {
                y: 330,
                yoyo: !0,
                repeat: -1,
                duration: .25,
                ease: "power2.inOut"
            }), s.fromTo(".e.party2", {
                rotate: 5
            }, {
                rotate: -5,
                yoyo: !0,
                repeat: -1,
                duration: .5,
                ease: "steps(1)"
            }), s.fromTo(".e.party2", {
                scale: .8
            }, {
                scale: 1.2,
                yoyo: !0,
                repeat: -1,
                duration: 1,
                ease: "steps(3)"
            }), this.timeline.to(".e.party1", {
                rotateY: "+=180"
            }), this.timeline.to(".e.party2", {
                rotateX: "+=360"
            }), this.timeline.to(".e.party3", {
                rotateY: "+=180"
            }), this.timeline.to(".e.party2", {
                rotateX: "-=360"
            }), this.timeline.to(".e.party1", {
                rotateY: "+=180"
            })
        }
    }),
    $c = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/9a611fa3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    arch: [0, 0, 870, 700],
                    deflated0: [0, 700, 400, 210],
                    deflated1: [0, 910, 400, 210],
                    deflated2: [400, 700, 210, 420],
                    bow: [610, 700, 260, 290],
                    small: [870, 551, 368, 551],
                    medium: [1238, 0, 368, 551],
                    big: [870, 3, 368, 548],
                    big2: [1238, 551, 368, 551]
                }
            }
        }
    }),
    zY = $c.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", [
            ["deflated0", null, [305, 100]],
            ["deflated2", null, [400, 595]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.deflated0", {
                scale: .5,
                duration: 1,
                ease: "back.in(3)"
            }).to(".e.deflated0", {
                opacity: 0,
                duration: .1
            }, .9).to(".e.deflated2", {
                scale: .5,
                duration: 1,
                ease: "back.in(3)"
            }, 1).to(".e.deflated2", {
                opacity: 0,
                duration: .1
            }, 1.9)
        }
    }),
    HY = $c.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["big", null, [256, 316]],
                ["medium", null, [254.5, 316]],
                ["small", null, [254.5, 316]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.big, .e.medium, .e.small", {
                transformOrigin: "bottom center"
            }), s.set(".e.big, .e.medium", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.small", {
                scaleY: 1.3,
                scaleX: 1.2,
                ease: "power3.out"
            }).to(".e.small", {
                scaleY: 1.2,
                scaleX: 1.2,
                ease: "power3.in"
            }).set(".e.small", {
                visibility: "hidden"
            }).set(".e.medium", {
                visibility: "visible"
            }).to(".e.medium", {
                scaleY: 1.3,
                scaleX: 1.2,
                ease: "power3.out"
            }).to(".e.medium", {
                scaleY: 1.2,
                scaleX: 1.2,
                ease: "power3.out"
            }).set(".e.medium", {
                visibility: "hidden"
            }).set(".e.big", {
                visibility: "visible"
            }).to(".e.big", {
                scaleY: 1.3,
                scaleX: 1.2,
                ease: "power3.out"
            }).to(".e.big", {
                scaleY: 1.2,
                scaleX: 1.2,
                ease: "power3.out"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    NY = $c.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["big2", null, [226, 566]],
            ["big", null, [226, 66]],
            ["bow", null, [616, 336]]
        ]),
        onLoadComplete() {
            s.set(".e.big", {
                transformOrigin: "bottom center"
            }), s.set(".e.big2", {
                transformOrigin: "bottom center"
            }), s.set(".e.bow", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.big2", {
                x: -310,
                y: 0,
                rotate: 45,
                ease: "back.out(2)"
            }).to(".e.big", {
                x: 273,
                rotate: -58,
                ease: "back.out(2)"
            }).to(".e.bow", {
                opacity: 1
            })
        }
    }),
    GY = $c.extend({
        elements: a.elementsFromSprite("sprite", [
            ["arch", null, [150, 65]]
        ])
    }),
    qb = E.extend({
        imageManifest: {
            bottle: new URL("main/pp7/everyday/assets/6c89b16d.png", self.location).href,
            snack: new URL("main/pp7/everyday/assets/199ac8f9.png", self.location).href,
            tissue: new URL("main/pp7/everyday/assets/c308f710.png", self.location).href,
            wallet: new URL("main/pp7/everyday/assets/326f287b.png", self.location).href,
            yardstick: new URL("main/pp7/everyday/assets/f3984065.png", self.location).href
        }
    }),
    XY = qb.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("wallet", "tissue"),
        onLoadComplete() {
            s.set(".e.tissue", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("wallet", "tissue"))
        }
    }),
    YY = qb.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("tissue", "bottle", "snack", "yardstick"),
        onLoadComplete() {
            s.set(".e.bottle, .e.snack, .e.yardstick", {
                opacity: 0
            }), s.to(".e.tissue", {
                x: -200,
                y: -220,
                scale: .5,
                rotate: 10,
                duration: .5,
                ease: "back.in(2)"
            }), s.to(".e.bottle", {
                opacity: 1,
                duration: .2
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bottle", {
                x: 200,
                y: -220,
                scale: .5,
                rotate: -20,
                duration: 1,
                ease: "back.in(2)"
            }).to(".e.snack", {
                opacity: 1,
                duration: .2
            }, .8).to(".e.snack", {
                x: -200,
                y: 220,
                scale: .5,
                rotate: -27,
                duration: 1,
                ease: "back.in(2)"
            }, 1).to(".e.yardstick", {
                opacity: 1,
                duration: .2
            }, 1.8).to(".e.yardstick", {
                x: 200,
                y: 220,
                scale: .5,
                rotate: 130,
                duration: 1,
                ease: "back.in(2)"
            }, 2)
        }
    }),
    ed = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/ebf83d32.png", self.location).href,
            clean: new URL("main/pp7/everyday/assets/f9d2ef5f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    cream0: [610, 1, 200, 764],
                    cream1: [0, 0, 610, 195],
                    cream2: [0, 195, 610, 250],
                    cream3: [0, 445, 610, 260],
                    cream4: [0, 705, 610, 268],
                    razor: [810, 0, 290, 705],
                    blob0: [610, 765, 430, 208],
                    blob1: [1040, 833, 348, 140],
                    blob2: [1043, 664, 348, 161]
                }
            }
        }
    }),
    KY = ed.extend({
        stepDuration: .25,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["blob2", null, [302, 348]],
                ["blob1", null, [427, 315]],
                ["blob0", null, [530, 270]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.blob1, .e.blob2", {
                y: 50,
                scaleY: .5,
                opacity: 0,
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.blob1", {
                y: 0,
                scaleY: 1,
                opacity: 1,
                duration: 1
            }).to(".e.blob2", {
                y: 0,
                scaleY: 1,
                opacity: 1,
                duration: 1
            }).to(".e.c", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c")
        }
    }),
    WY = ed.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", [
            ["cream4", null, [637, 140]],
            ["cream3", null, [450, 140]],
            ["cream2", null, [268, 140]],
            ["cream1", null, [140, 140]],
            ["cream0", null, [140, 677]],
            ["razor", null, [110, 640]]
        ]),
        onLoadComplete() {
            s.set(".e.razor", {
                scale: 1.1,
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.razor", {
                scale: 1,
                duration: .1
            }).to(".e.cream0", {
                clipPath: "inset(100% 0 0 0)",
                duration: 1
            }, 0).to(".e.razor", {
                y: 700,
                duration: 1
            }, 0)
        }
    }),
    JY = ed.extend({
        stepDuration: .5,
        elements: [...a.elementsFromImages(["clean", null, [225, 180]]), ...a.elementsFromSprite("sprite", [
            ["cream4", null, [637, 140]],
            ["cream3", null, [450, 140]],
            ["cream2", null, [268, 140]],
            ["cream1", null, [140, 140]],
            ["razor", null, [110, 640]]
        ])],
        onLoadComplete() {
            s.timeline().set(".e.razor", {
                y: 700,
                transformOrigin: "top center"
            }).to(".e.razor", {
                scale: 1.1,
                duration: .05
            }).to(".e.razor", {
                x: 40,
                y: 140,
                rotate: 90,
                duration: .2
            }, 0)
        },
        initializeTimeline() {
            this.timeline.to(".e.razor", {
                scale: 1,
                duration: .1
            }, 0).to(".e.cream1", {
                clipPath: "inset(0 100% 0 0)",
                duration: .7
            }, 0).to(".e.razor", {
                x: -550,
                duration: .7
            }, 0).to(".e.razor", {
                scale: 1.1,
                duration: .1
            }, .7).to(".e.razor", {
                x: -700,
                y: 280,
                rotate: -90,
                duration: .2
            }, .8).to(".e.razor", {
                scale: 1,
                duration: .1
            }, 1).to(".e.cream2", {
                clipPath: "inset(0 0 0 100%)",
                duration: .7
            }, 1).to(".e.razor", {
                x: -80,
                duration: .7
            }, 1).to(".e.razor", {
                scale: 1.1,
                duration: .1
            }, 1.7).to(".e.razor", {
                x: 40,
                y: 420,
                rotate: 90,
                duration: .2
            }, 1.8).to(".e.razor", {
                scale: 1,
                duration: .1
            }, 2).to(".e.cream3", {
                clipPath: "inset(0 100% 0 0)",
                duration: .7
            }, 2).to(".e.razor", {
                x: -550,
                duration: .7
            }, 2).to(".e.razor", {
                scale: 1.1,
                duration: .1
            }, 2.7).to(".e.razor", {
                x: -700,
                y: 660,
                rotate: -90,
                duration: .2
            }, 2.8).to(".e.razor", {
                scale: 1,
                duration: .1
            }, 3).to(".e.cream4", {
                clipPath: "inset(0 0 0 100%)",
                duration: .7
            }, 3).to(".e.razor", {
                x: -80,
                duration: .7
            }, 3).to(".e.razor", {
                scale: 1.1,
                duration: .1
            }, 3.7).to(".e.razor", {
                x: -280,
                y: 20,
                rotate: 0,
                opacity: 0,
                duration: .2
            }, 3.8)
        }
    }),
    ZY = ed.extend({
        stepDuration: .35,
        elements: a.elementsFromImages(["clean", null, [225, 180]]),
        initializeTimeline() {
            this.timeline.to(".e.clean", {
                opacity: 0
            })
        }
    }),
    td = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/56a7427f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    closet: [0, 0, 932, 756],
                    door: [0, 756, 496, 756],
                    hanging: [496, 756, 239, 431],
                    coat: [735, 949, 751, 990],
                    devil0: [1468, 0, 496, 949],
                    devil1: [932, 0, 536, 949],
                    devil2: [1964, 0, 725, 949],
                    devil3: [1486, 949, 634, 990],
                    devil4: [2120, 949, 634, 990]
                }
            }
        }
    }),
    _Y = td.extend({
        stepDuration: .65,
        elements: a.elementsFromSprite("sprite", [
            ["closet", null, [122, 34]],
            ["hanging", null, [196, 810]],
            ["door", null, [122, 468]],
            ["coat", null, [5, 124.5]]
        ]),
        onLoadComplete() {
            s.set(".e.hanging", {
                clipPath: "inset(0 115px 0 0)"
            }), s.set(".e.coat", {
                x: 256,
                y: -31,
                scaleX: .3,
                scaleY: .4,
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: -400,
                duration: 1,
                ease: "bounce.out"
            }).to(".e.hanging", {
                x: -173,
                clipPath: "inset(0 -58px 0 0)",
                duration: 1,
                ease: "power3.out"
            }, 1).set(".e.hanging", {
                visibility: "hidden"
            }, 2.01).set(".e.coat", {
                visibility: "visible"
            }, 2.01).to(".e.coat", {
                x: 0,
                y: 0,
                scale: 1,
                duration: 1,
                ease: "back.out(2)"
            }, 2)
        }
    }),
    $Y = td.extend({
        stepDuration: .25,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["devil0", null, [25.5, 252]],
                ["devil1", null, [25.5, 232]],
                ["devil2", null, [25.5, 137.5]],
                ["devil3", null, [5, 243]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.devil1, .e.devil2, .e.devil3", {
                hidden: !0
            })
        },
        initializeTimeline() {
            const t = a.squashTransition("devil0", "devil1"),
                e = a.squashTransition("devil1", "devil2"),
                n = a.squashTransition("devil2", "devil3");
            this.timeline.add(t), this.timeline.add(e), this.timeline.add(n)
        }
    }),
    eK = td.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["devil4", null, [5, 183]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.devil4", {
                transformOrigin: "center bottom"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil4", {
                x: -20,
                rotate: -5,
                ease: "elastic.out(1.2, 0.5)"
            }).to(".e.devil4", {
                x: 20,
                rotate: 5,
                ease: "elastic.out(1.2, 0.5)"
            }).to(".e.devil4", {
                x: 0,
                rotate: 0,
                ease: "power4.inOut"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    tK = td.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", [
            ["devil3", null, [5, 183]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.devil3", {
                x: 200,
                ease: "back.out(2)"
            }).to(".e.devil3", {
                x: 400,
                ease: "back.out(2)"
            })
        }
    }),
    nd = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/80099a95.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    window: [0, 0, 952, 783],
                    content: [952, 0, 757, 1070],
                    flower2: [0, 783, 952, 654],
                    flower1: [0, 1437, 952, 654],
                    flower0: [0, 2091, 952, 654],
                    flower: [952, 1070, 498, 943],
                    arm: [952, 2013, 968, 368]
                }
            }
        }
    }),
    nK = nd.extend({
        stepDuration: .5,
        elements: [...a.elementsFromSprite("sprite", [
            ["window", null, [108.5, 24]]
        ]), {
            class: "window-mask",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["content", null, [30, 62]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.window-mask", {
                top: 197,
                left: 59,
                width: 877,
                height: 661,
                overflow: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.content", {
                y: -485,
                ease: "power2.out"
            })
        }
    }),
    iK = nd.extend({
        elements: a.elementsFromSprite("sprite", [
            ["flower", null, [28.5, 251]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.flower", {
                rotate: 90
            })
        }
    }),
    sK = nd.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", [
            ["flower2", null, [173, 24]],
            ["flower1", null, [173, 24]],
            ["flower0", null, [173, 24]]
        ]),
        onLoadComplete() {
            s.set(".e.flower1, .e.flower2", {
                hidden: !0
            })
        },
        initializeTimeline() {
            const t = a.squashTransition("flower0", "flower1"),
                e = a.squashTransition("flower1", "flower2");
            this.timeline.add(t), this.timeline.add(e)
        }
    }),
    oK = nd.extend({
        elements: a.elementsFromSprite("sprite", [
            ["arm", null, [316, 16]],
            ["flower2", null, [173, 24]]
        ]),
        onLoadComplete() {
            s.fromTo(".e.arm", {
                opacity: 0,
                y: 75
            }, {
                opacity: 1,
                y: 0,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flower2", {
                rotate: 15,
                duration: .7,
                ease: "power2.out"
            }, 0).to(".e.flower2", {
                rotate: 0,
                duration: .3,
                ease: "power2.in"
            }, .7).to(".e.flower2", {
                x: 48,
                y: -195,
                scale: .5,
                duration: 1,
                ease: "back.in(2)"
            }, 0)
        }
    }),
    id = E.extend({
        imageManifest: {
            bored: new URL("main/pp7/everyday/assets/4769e5fc.png", self.location).href,
            goofy: new URL("main/pp7/everyday/assets/32f36bd9.png", self.location).href,
            skeletons: new URL("main/pp7/everyday/assets/624edc8e.png", self.location).href,
            smile: new URL("main/pp7/everyday/assets/de9808d8.png", self.location).href
        }
    }),
    aK = id.extend({
        stepDuration: .25,
        elements: [...a.elementsFromImages("smile"), {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3]
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15")
        }
    }),
    rK = id.extend({
        stepDuration: .25,
        elements: [...a.elementsFromImages("goofy"), {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3]
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15")
        }
    }),
    VK = id.extend({
        stepDuration: .25,
        elements: [...a.elementsFromImages("smile", "bored"), {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3]
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            }), s.set(".e.bored", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).set(".e.smile", {
                visibility: "hidden"
            }).set(".e.bored", {
                visibility: "visible"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15")
        }
    }),
    lK = id.extend({
        stepDuration: .25,
        elements: [...a.elementsFromImages("bored", "skeletons"), {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3]
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            }), s.set(".e.skeletons", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).set(".e.bored", {
                visibility: "hidden"
            }).set(".e.skeletons", {
                visibility: "visible"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15")
        }
    }),
    sd = E.extend({
        imageManifest: {
            closeDance: new URL("main/pp7/everyday/assets/69faa8b7.png", self.location).href,
            farDance: new URL("main/pp7/everyday/assets/866fe81c.png", self.location).href,
            mediumDance: new URL("main/pp7/everyday/assets/25027e06.png", self.location).href
        }
    }),
    AK = sd.extend({
        elements: a.elementsFromImages("closeDance"),
        onStartProgress() {
            a.startHoldShake("closeDance")
        },
        onStopProgress() {
            a.stopHoldShake("closeDance")
        }
    }),
    cK = sd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("closeDance", "mediumDance"),
        onLoadComplete() {
            s.set(".e.mediumDance", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("closeDance", "mediumDance"))
        }
    }),
    dK = sd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("mediumDance", "farDance"),
        onLoadComplete() {
            s.set(".e.farDance", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("mediumDance", "farDance"))
        }
    }),
    pK = sd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("farDance"),
        initializeTimeline() {
            this.timeline.to(".e.farDance", {
                scale: 1.05
            }).to(".e.farDance", {
                scale: .95
            }).to(".e.farDance", {
                scale: 1.05
            }).to(".e.farDance", {
                scale: .95
            })
        }
    }),
    od = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/481d24b1.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    bomb: [0, 0, 590, 717],
                    pin: [827, 985, 338, 215],
                    lines: [0, 717, 590, 268],
                    toss: [0, 985, 827, 720],
                    run: [590, 0, 712, 918]
                }
            }
        }
    }),
    hK = od.extend({
        stepDuration: .7,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["pin", null, [130, 500]],
                ["bomb", null, [141, 205]]
            ])
        }],
        initializeTimeline() {
            const t = s.timeline({
                repeat: 3,
                ease: "power2.inOut"
            }).to(".e.c", {
                x: 50,
                y: -50,
                rotate: 8
            }).to(".e.c", {
                x: 0,
                y: 0,
                rotate: 0
            }).to(".e.c", {
                x: 50,
                y: 50,
                rotate: -8
            }).to(".e.c", {
                x: 0,
                y: 0,
                rotate: 0
            });
            this.timeline.add(t)
        }
    }),
    uK = od.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["pin", null, [130, 500]],
                ["bomb", null, [141, 205]]
            ])
        }],
        initializeTimeline() {
            this.timeline.fillTime(1).to(".e.pin", {
                x: -10,
                duration: .2,
                ease: "power1.out"
            }).to(".e.pin", {
                x: 150,
                duration: .5,
                ease: "back.out(3)"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.startHoldShake("c")
        }
    }),
    mK = od.extend({
        stepDuration: .65,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["lines", null, [360, 375]],
                ["toss", null, [140, 86]],
                ["bomb", null, [141, 205]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.lines", {
                opacity: 0
            }), s.set(".e.toss", {
                x: 561,
                y: -17,
                scale: 2,
                rotate: 39,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.toss", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0,
                duration: 1
            }, 0).to(".e.bomb", {
                x: -212,
                y: 81,
                scale: .5,
                rotate: -39,
                duration: 1
            }, 0).to(".e.lines", {
                opacity: 1,
                duration: .5
            }, .5).set(".e.toss", {
                opacity: 1
            }, .01).set(".e.bomb", {
                opacity: 0
            }, .01)
        }
    }),
    fK = od.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", [
            ["run", null, [41, 300]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.run", {
                x: -250
            }).to(".e.run", {
                x: -500
            }).to(".e.run", {
                x: -750
            })
        }
    }),
    ad = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/88339e61.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    argueLeft: [0, 0, 492, 632],
                    argueRight: [492, 0, 422, 632],
                    fight: [914, 0, 650, 649],
                    fightFoot: [1564, 0, 236, 234],
                    fightHand: [1564, 234, 129, 212],
                    fightTail: [1564, 446, 149, 152],
                    fightBang: [1432, 1179, 193, 185],
                    fistMan: [867, 649, 565, 737],
                    fistFist: [1432, 649, 406, 530],
                    holdBack: [0, 632, 867, 848]
                }
            }
        }
    }),
    qK = ad.extend({
        elements: a.elementsFromSprite("sprite", [
            ["argueLeft", null, [184, 34]],
            ["argueRight", null, [184, 529]]
        ]),
        onLoadComplete() {
            s.set(".e.argueLeft", {
                transformOrigin: "left center"
            }), s.set(".e.argueRight", {
                transformOrigin: "right center"
            }), s.timeline({
                repeat: -1
            }).to(".e.argueLeft", {
                scaleX: 1.05,
                duration: .1
            }).to(".e.argueLeft", {
                scaleX: 1,
                duration: .15
            }).to(".e.argueLeft", {
                scaleX: 1.05,
                duration: .1
            }).to(".e.argueLeft", {
                scaleX: 1,
                duration: .2
            }).to(".e.argueLeft", {
                scaleX: 1.05,
                duration: .13
            }).to(".e.argueLeft", {
                scaleX: 1,
                duration: .1
            }).to(".e.argueLeft", {
                scaleX: 1.05,
                duration: .1
            }).to(".e.argueLeft", {
                scaleX: 1,
                duration: .1
            }), s.timeline({
                repeat: -1
            }).to(".e.argueRight", {
                scaleX: 1.05,
                duration: .13
            }).to(".e.argueRight", {
                scaleX: 1,
                duration: .1
            }).to(".e.argueRight", {
                scaleX: 1.05,
                duration: .1
            }).to(".e.argueRight", {
                scaleX: 1,
                duration: .15
            }).to(".e.argueRight", {
                scaleX: 1.05,
                duration: .1
            }).to(".e.argueRight", {
                scaleX: 1,
                duration: .2
            }).to(".e.argueRight", {
                scaleX: 1.05,
                duration: .13
            }).to(".e.argueRight", {
                scaleX: 1,
                duration: .1
            })
        }
    }),
    gK = ad.extend({
        elements: a.elementsFromSprite("sprite", [
            ["fistFist", null, [336, 66]],
            ["fistMan", null, [131, 400]]
        ]),
        initializeTimeline() {
            const t = s.timeline({
                repeat: 10
            }).to(".e.fistFist", {
                x: 30
            }).to(".e.fistFist", {
                x: 0
            }).to(".e.fistFist", {
                x: -30
            }).to(".e.fistFist", {
                x: 0
            });
            this.timeline.add(t)
        }
    }),
    yK = ad.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["fight", null, [175, 175]],
                ["fightFoot", null, [383, 382]],
                ["fightHand", null, [394, 435]],
                ["fightTail", null, [424, 425]],
                ["fightBang", "bang0", [87, 656]],
                ["fightBang", "bang1", [577, 42]],
                ["fightBang", "bang2", [687, 683]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.fightFoot, .e.fightHand, .e.fightTail, .e.bang0, .e.bang1, .e.bang2", {
                opacity: 0
            }), s.set(".e.bang1", {
                rotate: 198
            }), s.set(".e.bang2", {
                rotate: 88
            }), s.timeline({
                repeat: -1
            }).set(".e.c", {
                x: -20,
                y: 10,
                rotate: -20,
                scale: 1.1
            }, 0).set(".e.c", {
                x: 0,
                y: 20,
                rotate: 20,
                scale: .9
            }, .25).set(".e.c", {
                x: -10,
                y: -10,
                rotate: 0,
                scale: 1
            }, .5).set(".e.c", {
                x: 0,
                y: 20,
                rotate: -20,
                scale: 1.1
            }, .75).set(".e.c", {
                x: 20,
                y: -20,
                rotate: 0,
                scale: .9
            }, 1).set(".e.c", {
                x: 0,
                y: 0,
                rotate: -20,
                scale: 1.1
            }, 1.25).set(".e.c", {
                x: -10,
                y: 10,
                rotate: 20,
                scale: 1
            }, 1.5)
        },
        onDiscreteProgress(t) {
            if (s.to(".e.bang0, .e.bang1, .e.bang2", {
                    opacity: 1,
                    duration: .25,
                    yoyo: !0,
                    repeat: 1
                }), s.fromTo(".e.fightFoot, .e.fightHand, .e.fightTail", {
                    opacity: 0
                }, {
                    opacity: 1,
                    duration: .15
                }), t < 40) {
                s.set(".e.fightFoot", {
                    x: 287,
                    y: -73,
                    rotate: 0
                }), s.set(".e.fightHand", {
                    x: -39,
                    y: -219,
                    rotate: 0
                }), s.set(".e.fightTail", {
                    x: -194,
                    y: 231,
                    rotate: 0
                });
                return
            }
            if (t < 70) {
                s.set(".e.fightFoot", {
                    x: -120,
                    y: -240,
                    rotate: 295
                }), s.set(".e.fightHand", {
                    x: -201,
                    y: 240,
                    rotate: 233
                }), s.set(".e.fightTail", {
                    x: 246,
                    y: -79,
                    rotate: 185
                });
                return
            }
            s.set(".e.fightFoot", {
                x: -180,
                y: 273,
                rotate: 150
            }), s.set(".e.fightHand", {
                x: 290,
                y: -30,
                rotate: 85
            }), s.set(".e.fightTail", {
                x: -179,
                y: -189,
                rotate: 104
            })
        }
    }),
    bK = ad.extend({
        elements: a.elementsFromSprite("sprite", [
            ["holdBack", null, [76, 366]]
        ]),
        onLoadComplete() {
            s.to(".e.holdBack", {
                scaleX: 1.1,
                duration: .65,
                repeat: -1,
                yoyo: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.holdBack", {
                x: -500
            })
        }
    }),
    rd = E.extend({
        imageManifest: {
            kissLeft: new URL("main/pp7/everyday/assets/00adfde6.png", self.location).href,
            kissRight: new URL("main/pp7/everyday/assets/22e09fc9.png", self.location).href,
            braces: new URL("main/pp7/everyday/assets/7b4c6d1b.png", self.location).href,
            lips: new URL("main/pp7/everyday/assets/2237ac56.png", self.location).href,
            lick: new URL("main/pp7/everyday/assets/1e3e81d0.png", self.location).href,
            smile: new URL("main/pp7/everyday/assets/32eeae7a.png", self.location).href
        }
    }),
    vK = rd.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("lips", "lick", "smile"),
        onLoadComplete() {
            s.set(".e.lips, .e.lick", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("smile", "lick")), this.timeline.add(a.squashTransition("lick", "lips"))
        }
    }),
    wK = rd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("kissLeft", "kissRight")
        }],
        initializeTimeline() {
            this.timeline.to(".e.kissLeft", {
                x: 20,
                y: -100
            }).to(".e.kissLeft", {
                x: 0,
                y: 0
            }).to(".e.kissLeft", {
                x: 10,
                y: -40
            }).to(".e.kissLeft", {
                x: -10,
                y: 80
            }).to(".e.kissLeft", {
                x: 0,
                y: -20
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    xK = rd.extend({
        stepDuration: .4,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("kissLeft", "kissRight")
        }],
        onDiscreteProgress() {
            s.timeline({
                repeat: 1,
                yoyo: !0
            }).to(".e.kissLeft", {
                x: 35,
                duration: .25
            }, 0).to(".e.kissRight", {
                x: -35,
                duration: .25
            }, 0).to(".e.c", {
                scaleX: .8,
                duration: .25
            }, 0)
        }
    }),
    kK = rd.extend({
        elements: a.elementsFromImages("braces"),
        initializeTimeline() {
            const t = s.timeline({
                repeat: 6,
                yoyo: !0
            }).to(".e.braces", {
                scaleX: 1.15,
                ease: "power3.inOut"
            });
            this.timeline.add(t)
        }
    }),
    IV = E.extend({
        imageManifest: {
            birds1: new URL("main/pp7/everyday/assets/be3394cd.png", self.location).href,
            birds2: new URL("main/pp7/everyday/assets/01ee23e9.png", self.location).href,
            birds3: new URL("main/pp7/everyday/assets/451df49f.png", self.location).href,
            bookclean: new URL("main/pp7/everyday/assets/d33255f3.png", self.location).href,
            bookdirty: new URL("main/pp7/everyday/assets/a63568b2.png", self.location).href,
            bookswipe: new URL("main/pp7/everyday/assets/4f731ac8.png", self.location).href,
            pile: new URL("main/pp7/everyday/assets/c55d2f52.png", self.location).href
        }
    }),
    CK = IV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pile", "bookdirty"),
        initializeTimeline() {
            this.timeline.from(".e.bookdirty", {
                scale: .65,
                x: 50,
                y: 250
            })
        }
    }),
    RK = IV.extend({
        elements: a.elementsFromImages("bookclean", "bookdirty", "bookswipe"),
        initializeTimeline() {
            this.timeline.from(".e.bookswipe", {
                opacity: 0
            }), this.timeline.to(".e.bookdirty", {
                opacity: 0
            }, "<"), this.timeline.from(".e.bookclean", {
                opacity: 0
            }), this.timeline.to(".e.bookswipe", {
                opacity: 0,
                ease: "power2.out"
            }, "<")
        }
    }),
    DK = IV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("birds1", "birds2", "birds3"),
        initializeTimeline() {
            this.timeline.to(".e.birds3", {
                opacity: 0
            }), this.timeline.to(".e.birds2", {
                opacity: 0
            }), this.timeline.to(".e.birds1", {
                scale: 1.5
            })
        }
    }),
    SK = IV.extend({
        elements: a.elementsFromImages("birds1"),
        initializeTimeline() {
            this.timeline.fromTo(".e.birds1", {
                scale: 1.5
            }, {
                scale: 1.9,
                rotate: 360,
                ease: "none"
            })
        }
    }),
    TK = IV.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("birds1"),
        initializeTimeline() {
            this.timeline.fromTo(".e.birds1", {
                scale: 1.9
            }, {
                x: 1550
            })
        }
    }),
    EK = !1,
    gb = E.extend({
        imageManifest: {
            boss: new URL("main/pp7/everyday/assets/2a6ccec5.png", self.location).href,
            closed: new URL("main/pp7/everyday/assets/c2b2daed.png", self.location).href,
            teeth: new URL("main/pp7/everyday/assets/19d58646.png", self.location).href
        }
    }),
    LK = gb.extend({
        elements: a.elementsFromImages("teeth"),
        onStartProgress() {
            a.startHoldShake("teeth", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("teeth", 2, 1)
        }
    }),
    BK = gb.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("boss", "closed"),
        initializeTimeline() {
            this.timeline.from(".e.boss", {
                opacity: 0
            }), this.timeline.to(".e.closed", {
                opacity: 0
            }, "<"), this.timeline.to(".e.boss", {
                scale: 1.5,
                x: 100
            })
        }
    }),
    Vd = E.extend({
        imageManifest: {
            pose: new URL("main/pp7/everyday/assets/ec72e634.png", self.location).href,
            steps: new URL("main/pp7/everyday/assets/255bf2f6.png", self.location).href,
            tap: new URL("main/pp7/everyday/assets/40526d1e.png", self.location).href,
            steps1: new URL("main/pp7/everyday/assets/c58ad1f6.png", self.location).href,
            steps2: new URL("main/pp7/everyday/assets/78498aa3.png", self.location).href,
            foot: new URL("main/pp7/everyday/assets/8c1bb3b6.png", self.location).href
        }
    }),
    MK = Vd.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("foot", "tap"),
        initializeTimeline() {
            s.set(".e.foot", {
                x: 380,
                y: 535
            }), this.timeline.from(".e.foot", {
                rotate: -20,
                yoyo: !0,
                repeat: 5
            })
        }
    }),
    OK = Vd.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("steps1"),
        initializeTimeline() {
            this.timeline.to(".e.steps1", {
                x: -600
            })
        }
    }),
    IK = Vd.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("steps2"),
        initializeTimeline() {
            this.timeline.to(".e.steps2", {
                x: 600
            })
        }
    }),
    PK = Vd.extend({
        elements: a.elementsFromImages("pose"),
        onStartProgress() {
            a.startHoldShake("pose", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("pose", 2, 1)
        }
    }),
    UK = E.extend({
        imageManifest: {
            cousin: new URL("main/pp7/everyday/assets/48957c3c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "cousin",
                images: {
                    doorClosed: [10, 1339, 338, 466, 98, 414],
                    doorOpen: [10, 863, 373, 466, 101, 57],
                    cousin: [358, 1339, 324, 419, 325, 432],
                    entrance: [10, 10, 718, 843, 49, 227]
                }
            }
        }
    }),
    FK = UK.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["entrance", "doorOpen", "doorClosed", "cousin"]),
        onLoadComplete() {
            s.set(".e.doorOpen", {
                visibility: "hidden",
                scaleX: 0,
                transformOrigin: "right center"
            }), s.set(".e.doorClosed", {
                transformOrigin: "left center"
            }), s.set(".e.cousin", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.doorClosed", {
                scaleX: 0
            }, 0).set(".e.doorClosed", {
                visibility: "hidden"
            }, 1).set(".e.doorOpen", {
                visibility: "visible"
            }, 1).to(".e.doorOpen", {
                scaleX: 1
            }, 1).to(".e.cousin", {
                scaleY: .9
            }, 1).to(".e.cousin", {
                scaleY: 1.1
            }, 2)
        }
    }),
    jK = E.extend({
        imageManifest: {
            family: new URL("main/pp7/everyday/assets/06a242b1.png", self.location).href
        }
    }),
    QK = jK.extend({
        elements: [{
            class: "family",
            type: "img",
            key: "family"
        }, {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3],
            html: ""
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family", {
                filter: "blur(0px)",
                autoRound: !1
            });
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }, 5).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 0,
                duration: 1
            }), this.timeline.add(t, 0)
        }
    }),
    hm = E.extend({
        imageManifest: {
            ladder: new URL("main/pp7/everyday/assets/e3fb68fb.png", self.location).href,
            roofHang: new URL("main/pp7/everyday/assets/5a7eb570.png", self.location).href
        }
    }),
    zK = hm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("ladder"),
        onDiscreteProgress() {
            a.squashOnce("ladder", .25)
        }
    }),
    HK = lu.extend({
        initializeTimeline() {
            this.timeline.call(() => {
                this.onDiscreteProgress()
            }, null, 1).call(() => {
                this.onDiscreteProgress()
            }, null, 2).call(() => {
                this.onDiscreteProgress()
            }, null, 3).fillTime(1)
        }
    }),
    NK = hm.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("ladder", "roofHang"),
        onLoadComplete() {
            s.set(".e.roofHang", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("ladder", "roofHang", .35)
        }
    }),
    GK = hm.extend({
        elements: a.elementsFromImages("roofHang"),
        onStartProgress() {
            a.startHoldShake("roofHang")
        },
        onStopProgress() {
            a.stopHoldShake("roofHang")
        }
    }),
    ld = E.extend({
        imageManifest: {
            sink: new URL("main/pp7/everyday/assets/240b88d8.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sink",
                images: {
                    cat: [10, 10, 873, 924, 38, 31],
                    glass4: [893, 10, 794, 791, 207, 103],
                    glass3: [958, 882, 668, 452, 526, 166],
                    glass2: [893, 811, 668, 61, 511, 166],
                    glass1: [10, 1560, 668, 61, 453, 166],
                    glass0: [958, 1344, 794, 216, 102, 103],
                    water: [1636, 811, 94, 296, 357, 398],
                    handle: [1636, 1117, 137, 178, 165, 315],
                    sink: [10, 944, 938, 606, 271, 31]
                }
            }
        }
    }),
    XK = ld.extend({
        imageManifest: {
            sink: new URL("main/pp7/everyday/assets/240b88d8.png", self.location).href,
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href
        },
        elements: [...a.elementsFromSprite("sprite", ["glass0", "glass1"]), {
            class: "paw-container",
            type: "container",
            children: a.elementsFromImages(["paw", null, [-1200, 0]])
        }, ...a.elementsFromSprite("sprite", ["glass2", "glass3", "glass4"])],
        onLoadComplete() {
            s.set(".e.paw", {
                rotation: 180,
                scale: .9
            })
        },
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: "none",
                    repeat: t / 1e3
                }).to(".e.paw-container", {
                    x: 2,
                    y: 2
                }).to(".e.paw-container", {
                    x: -2,
                    y: -2
                }).to(".e.paw-container", {
                    x: -2,
                    y: 2
                }).to(".e.paw-container", {
                    x: 2,
                    y: 2
                }).to(".e.paw-container", {
                    x: 2,
                    y: -2
                }).to(".e.paw-container", {
                    x: -2,
                    y: 2
                }).to(".e.paw-container", {
                    x: -2,
                    y: 2
                }).to(".e.paw-container", {
                    x: 2,
                    y: 2
                }).to(".e.paw-container", {
                    x: 2,
                    y: -2
                }).to(".e.paw-container", {
                    x: 2,
                    y: 2
                }).to(".e.paw-container", {
                    x: 2,
                    y: 2
                });
            e.name = "image", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.paw", {
                y: 650,
                duration: .35
            }), s.to(".e.glass1", {
                y: -82,
                duration: .17,
                delay: .18
            }), s.to(".e.glass2", {
                y: -82,
                duration: .17,
                delay: .18
            }), s.to(".e.glass3", {
                scaleY: 1.2,
                transformOrigin: "bottom",
                duration: .17,
                delay: .18
            })
        },
        onStopProgress() {
            s.to(".e.paw", {
                y: 0,
                duration: .35
            }), s.to(".e.glass1", {
                y: 0,
                duration: .17
            }), s.to(".e.glass2", {
                y: 0,
                duration: .17
            }), s.to(".e.glass3", {
                scaleY: 1,
                transformOrigin: "bottom",
                duration: .17
            })
        }
    }),
    yb = ld.extend({
        elements: a.elementsFromSprite("sprite", ["handle", "sink", "water"]),
        onLoadComplete() {
            s.set(".e.handle", {
                transformOrigin: "center bottom"
            }), s.set(".e.water", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handle", {
                rotate: 30
            }).set(".e.water", {
                hidden: !1
            }).fillTime(.1)
        }
    }),
    YK = ld.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["glass0", "glass1", "glass2", "glass3", "glass4"])
        }],
        onLoadComplete() {
            s.set(".e.glass1", {
                y: 80
            }), s.set(".e.glass2", {
                y: 80
            }), s.set(".e.glass3", {
                scaleY: .8,
                transformOrigin: "bottom"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.glass1", {
                y: -80
            }, 0).to(".e.glass2", {
                y: -80
            }, 0).to(".e.glass3", {
                scaleY: 1.2
            }, 0)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    KK = ld.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["cat"]),
        onDiscreteProgress() {
            a.squashOnce("cat", .45, "y")
        }
    }),
    bb = E.extend({
        imageManifest: {
            drain: new URL("main/pp7/everyday/assets/8e84d176.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "drain",
                images: {
                    pool: [10, 695, 658, 226, 649, 143],
                    ragOut: [818, 10, 371, 422, 179, 362],
                    ragIn: [678, 695, 208, 219, 381, 381],
                    drain: [10, 10, 798, 675, 147, 98]
                }
            }
        }
    }),
    WK = yb,
    JK = v2,
    ZK = bb.extend({
        elements: a.elementsFromSprite("sprite", ["pool"]),
        onLoadComplete() {
            s.set(".e.pool", {
                scale: .6
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.pool", {
                scale: 1
            })
        }
    }),
    _K = bb.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["drain", "ragIn", "ragOut"])
        }],
        onLoadComplete() {
            s.set(".e.ragOut", {
                hidden: !0,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(3).add(a.squashOnce("c", .5)).set(".e.ragOut", {
                hidden: !1
            }, 3.25).set(".e.ragIn", {
                hidden: !0
            }, 3.25).to(".e.drain", {
                scale: .7
            }, 3.25).to(".e.ragOut", {
                scale: 1
            }, 3.25)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Ad = E.extend({
        imageManifest: {
            samosa: new URL("main/pp7/everyday/assets/70decb01.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "samosa",
                images: {
                    flat: [405, 836, 445, 802, 99, 277],
                    ball: [860, 1016, 642, 485, 257, 178],
                    oil: [10, 836, 385, 924, 46, 291],
                    fire: [10, 10, 821, 816, 100, 80],
                    dough: [860, 603, 840, 403, 61, 83],
                    bowl: [841, 10, 921, 583, 354, 43]
                }
            }
        }
    }),
    $K = Ad.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["bowl", "dough"])
        }],
        onLoadComplete() {
            s.set(".e.dough", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).add(a.squashOnce("c", 1)).set(".e.dough", {
                hidden: !1
            }, 1.5)
        }
    }),
    eW = Ad.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["oil"]),
        onDiscreteProgress() {
            a.squashOnce("oil", .35)
        }
    }),
    tW = Ad.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["ball", "flat"]),
        onLoadComplete() {
            s.set(".e.flat", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("ball", "flat", .35)
        }
    }),
    nW = Ad.extend({
        elements: a.elementsFromSprite("sprite", ["fire"]),
        onLoadComplete() {
            s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.fire", {
                scaleX: .9,
                scaleY: 1.1
            }).to(".e.fire", {
                scaleX: 1.1,
                scaleY: .9
            })
        }
    }),
    um = E.extend({
        imageManifest: {
            bucket: new URL("main/pp7/everyday/assets/f3913cde.png", self.location).href,
            extinguisher: new URL("main/pp7/everyday/assets/7302b4f1.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/27d89b47.png", self.location).href,
            stomp: new URL("main/pp7/everyday/assets/b425b75d.png", self.location).href,
            cloud: new URL("main/pp7/everyday/assets/bdaa73dc.png", self.location).href
        }
    }),
    iW = um.extend({
        elements: [...a.elementsFromImages("fire"), {
            class: "c",
            type: "container",
            children: a.elementsFromImages("extinguisher", "cloud")
        }],
        onLoadComplete() {
            s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.fire", {
                scaleX: .9,
                scaleY: 1.1
            }).to(".e.fire", {
                scaleX: 1.1,
                scaleY: .9
            }), s.set(".e.c", {
                x: 350,
                y: 200
            }), s.set(".e.extinguisher", {
                scale: .8
            }), s.set(".e.cloud", {
                x: -370,
                y: 30,
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                rotate: 20
            }).to(".e.c", {
                rotate: -20
            }).to(".e.c", {
                rotate: 20
            })
        },
        onStartProgress() {
            s.set(".e.cloud", {
                hidden: !1
            })
        },
        onStopProgress() {
            s.set(".e.cloud", {
                hidden: !0
            })
        }
    }),
    sW = um.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("fire", "bucket"),
        onLoadComplete() {
            s.set(".e.bucket", {
                x: -250,
                opacity: 0,
                scale: .7
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.fire", {
                scaleX: .9,
                scaleY: 1.1
            }).to(".e.fire", {
                scaleX: 1.1,
                scaleY: .9
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bucket", {
                x: -100,
                opacity: 1,
                scale: 1
            })
        }
    }),
    oW = um.extend({
        elements: a.elementsFromImages("stomp"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("stomp")).add(a.squashOnce("stomp")).add(a.squashOnce("stomp")).add(a.squashOnce("stomp"))
        }
    }),
    mm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/56a7427f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    closet: [0, 0, 932, 756],
                    door: [0, 756, 496, 756],
                    hiding: [0, 1510, 131, 209]
                }
            }
        }
    }),
    aW = mm.extend({
        stepDuration: .75,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["hiding", null, [427, 754]],
                ["door", null, [122, 468]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.door", {
                x: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: -400,
                duration: 1,
                ease: "bounce.out"
            })
        }
    }),
    rW = mm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["door", null, [122, 468]],
                ["hiding", null, [427, 754]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.door", {
                x: -400
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).to(".e.c", {
                skewX: -3,
                duration: .5,
                ease: "power2.inOut"
            }).to(".e.c", {
                skewX: 3,
                duration: .5,
                ease: "power2.inOut"
            }).to(".e.c", {
                skewX: -3,
                duration: .5,
                ease: "power2.inOut"
            }).to(".e.c", {
                skewX: 0,
                duration: .5,
                ease: "power2.inOut"
            }).add(a.squashOnce("c", .5)).set(".e.hiding", {
                hidden: !0
            }, 3.25)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    VW = mm.extend({
        stepDuration: .75,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["door", null, [122, 468]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.door", {
                x: -400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: 0,
                duration: 1,
                ease: "bounce.out"
            })
        }
    }),
    cd = E.extend({
        imageManifest: {
            dirt: new URL("main/pp7/everyday/assets/4f92817f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "dirt",
                images: {
                    cousin: [492, 928, 415, 327, 249, 250],
                    tornBag: [10, 928, 472, 536, 112, 230],
                    bag: [10, 10, 472, 609, 112, 230],
                    vacuumBottomOff: [492, 309, 429, 279, 675, 220],
                    vacuumBottomOn: [917, 1107, 429, 279, 675, 220],
                    vacuumTop: [959, 309, 293, 788, 35, 151],
                    dirt: [492, 10, 895, 289, 711, 38],
                    rug: [10, 629, 939, 289, 711, 31]
                }
            }
        }
    }),
    lW = cd.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["rug", "dirt", "vacuumTop", "vacuumBottomOff", "vacuumBottomOn"])
        }],
        onLoadComplete() {
            s.set(".e.vacuumBottomOn", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress() {
            s.set(".e.vacuumBottomOn", {
                visibility: "visible"
            }), s.set(".e.vacuumBottomOff", {
                visibility: "hidden"
            }), a.squashOnce("c", .35)
        }
    }),
    AW = cd.extend({
        elements: [...a.elementsFromSprite("sprite", ["rug", "dirt"]), {
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["vacuumTop", "vacuumBottomOn"])
        }],
        onLoadComplete() {
            s.set(".e.vacuumTop", {
                transformOrigin: "bottom center"
            }), a.startShake("c", 3, 0, 2)
        },
        initializeTimeline() {
            this.timeline.to(".e.vacuumTop", {
                rotate: -20,
                duration: .75
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }, .5).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 400,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 400,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }).to(".e.dirt", {
                opacity: 0,
                duration: 5
            }, .5)
        }
    }),
    cW = cd.extend({
        stepDuration: .45,
        elements: [...a.elementsFromSprite("sprite", ["rug"]), {
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["vacuumTop", "vacuumBottomOn"])
        }],
        onLoadComplete() {
            s.set(".e.vacuumTop", {
                x: -100,
                rotate: -20,
                transformOrigin: "bottom center"
            }), s.set(".e.vacuumBottomOn", {
                x: -100
            }), a.startShake("c", 3, 0, 2)
        },
        initializeTimeline() {
            this.timeline.to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 0,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 0,
                duration: 1
            }).fillTime(1).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 0,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: -100,
                duration: 1
            }).to(".e.vacuumTop, .e.vacuumBottomOn", {
                x: 0,
                duration: 1
            })
        }
    }),
    dW = cd.extend({
        elements: a.elementsFromSprite("sprite", ["cousin", "bag", "tornBag"]),
        onLoadComplete() {
            s.set(".e.tornBag", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("bag", "tornBag")).to(".e.cousin", {
                y: 500
            })
        }
    }),
    fm = E.extend({
        className: "news",
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/43cbacb0.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    tv: [10, 10, 831, 986, 9, 98],
                    show0: [471, 1006, 449, 399, 253, 172],
                    show1: [471, 1415, 448, 399, 253, 173],
                    show2: [10, 1006, 451, 399, 253, 170],
                    show3: [10, 1415, 451, 399, 253, 170]
                }
            }
        }
    }),
    pW = fm.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["show3", "show2", "show1", "show0", "tv"])
        }],
        initializeTimeline() {
            this.timeline.set(".e.show0", {
                hidden: !0
            }, .15).set(".e.show1", {
                hidden: !0
            }, .45).set(".e.show2", {
                hidden: !0
            }, .75)
        },
        onDiscreteProgress() {
            a.squashOnce("c", .3)
        }
    }),
    hW = fm.extend({
        elements: [...a.elementsFromSprite("sprite", ["show3"]), {
            class: "text",
            type: "div",
            pos: [564, 198],
            html: "<p>Breaking News!!! The gronking continues to plague the world's youth. No one understands anything.</p>"
        }, ...a.elementsFromSprite("sprite", ["tv"])],
        onLoadComplete() {
            s.set(".e.text", {
                rotate: -4
            }), s.set(".e.text p", {
                width: 5e3,
                x: 400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.text p", {
                x: -550,
                ease: "none"
            })
        }
    }),
    uW = fm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: [...a.elementsFromSprite("sprite", ["show3"]), {
                class: "text",
                type: "div",
                pos: [564, 198],
                html: "<p>Breaking News!!! The gronking continues to plague the world's youth. No one understands anything.</p>"
            }, ...a.elementsFromSprite("sprite", ["tv"])]
        }],
        onLoadComplete() {
            s.set(".e.text", {
                rotate: -4
            }), s.set(".e.text p", {
                width: 5e3,
                x: -550
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.text p", {
                x: -1500,
                ease: "none"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    qm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/2ac509c3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    phone: [479, 10, 585, 857, 16, 191],
                    text: [10, 10, 459, 1210, 42, 290],
                    door: [479, 877, 580, 967, 20, 218]
                }
            }
        }
    }),
    mW = qm.extend({
        elements: a.elementsFromSprite("sprite", ["text", "phone"]),
        onLoadComplete() {
            s.set(".e.text", {
                rotate: -9,
                clipPath: "inset(0% 0% 40%)"
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).to(".e.text", {
                x: -40,
                y: -235,
                clipPath: "inset(21% 0% 20%)",
                ease: "power2.out"
            }).fillTime(.5).to(".e.text", {
                x: -80,
                y: -470,
                clipPath: "inset(42% 0% 0%)",
                ease: "power2.out"
            })
        }
    }),
    vb = qm.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["door"]),
        onDiscreteProgress() {
            a.squashOnce("door", .35)
        }
    }),
    fW = qm.extend({
        elements: a.elementsFromSprite("sprite", ["door"]),
        onLoadComplete() {
            s.set(".e.door", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                skewX: -10,
                ease: "power2.inOut"
            }).to(".e.door", {
                skewX: 10,
                ease: "power2.inOut"
            }).to(".e.door", {
                skewX: -10,
                ease: "power2.inOut"
            })
        }
    }),
    qW = vb,
    gm = E.extend({
        imageManifest: {
            psa: new URL("main/pp7/everyday/assets/28c42d56.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "psa",
                images: {
                    question: [851, 10, 384, 600, 200, 308],
                    tv: [10, 10, 831, 986, 9, 98],
                    paid: [1245, 549, 257, 61, 564, 265],
                    no: [469, 1006, 261, 261, 288, 262],
                    gronking: [1245, 419, 365, 120, 357, 214],
                    psa: [1245, 10, 449, 399, 253, 172],
                    show0: [10, 1006, 449, 399, 253, 172],
                    show1: [740, 1029, 448, 399, 253, 173],
                    show2: [851, 620, 451, 399, 253, 170]
                }
            }
        }
    }),
    gW = gm.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["psa", "show2", "show1", "show0", "tv"])
        }],
        initializeTimeline() {
            this.timeline.set(".e.show0", {
                hidden: !0
            }, .15).set(".e.show1", {
                hidden: !0
            }, .45).set(".e.show2", {
                hidden: !0
            }, .75)
        },
        onDiscreteProgress() {
            a.squashOnce("c", .3)
        }
    }),
    yW = gm.extend({
        elements: a.elementsFromSprite("sprite", ["psa", "paid", "gronking", "no", "tv"]),
        onLoadComplete() {
            s.set(".e.paid", {
                opacity: 0
            }), s.set(".e.gronking", {
                opacity: 0,
                scale: .6
            }), s.set(".e.no", {
                opacity: 0,
                scale: 1.1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.gronking", {
                opacity: 1,
                duration: .2
            }, 0).to(".e.gronking", {
                scale: 1,
                ease: "back.out(2)"
            }, "<").fillTime(.25).to(".e.no", {
                opacity: 1,
                duration: .1
            }).to(".e.no", {
                scale: 1,
                duration: .2
            }, "<").to(".e.paid", {
                opacity: 1,
                duration: .2
            }).fillTime(1.5)
        },
        onDiscreteProgress() {
            a.squashOnce("c", .3)
        }
    }),
    bW = gm.extend({
        elements: a.elementsFromSprite("sprite", ["question"])
    }),
    dd = E.extend({
        imageManifest: {
            spy: new URL("main/pp7/everyday/assets/b023b5c6.png", self.location).href
        },
        sprites: {
            spy: {
                key: "spy",
                images: {
                    pupils: [277, 629, 79, 20, 479, 447],
                    eyes: [804, 629, 127, 67, 454, 423],
                    clothes: [277, 10, 740, 609, 213, 130],
                    exclamation: [10, 10, 257, 657, 165, 361],
                    crawl: [10, 677, 784, 326, 367, 104]
                }
            }
        }
    }),
    vW = dd.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("spy", ["crawl"]),
        onLoadComplete() {
            s.set(".e.crawl", {
                x: -150
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.crawl", {
                x: -50,
                ease: "back.out(2)"
            }).to(".e.crawl", {
                x: 50,
                ease: "back.out(2)"
            }).to(".e.crawl", {
                x: 150,
                ease: "back.out(2)"
            })
        }
    }),
    wW = dd.extend({
        elements: a.elementsFromSprite("spy", ["clothes", "eyes", "pupils"]),
        onLoadComplete() {
            s.set(".e.eyes, .e.pupils", {
                opacity: 0
            }), s.set(".e.clothes", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.clothes", {
                skewX: 2,
                scaleY: 1.1,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: 1,
                duration: .1
            }).to(".e.clothes", {
                skewX: 2,
                scaleY: 1.1,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: .9,
                duration: .1
            }).to(".e.clothes", {
                skewX: -2,
                scaleY: 1,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: 1.1,
                duration: .1
            }).to(".e.clothes", {
                skewX: 2,
                scaleY: .9,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: 1,
                duration: .1
            }).to(".e.clothes", {
                skewX: -2,
                scaleY: .9,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: 1.1,
                duration: .1
            }).to(".e.clothes", {
                skewX: -2,
                scaleY: .9,
                duration: .1
            }).to(".e.clothes", {
                skewX: 0,
                scaleY: 1,
                duration: .1
            }).fillTime(.6).to(".e.eyes, .e.pupils", {
                opacity: 1,
                duration: .05
            }).fillTime(1)
        }
    }),
    xW = dd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("spy", ["clothes", "eyes", "pupils"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.pupils", {
                x: -5
            }).fillTime(1).to(".e.pupils", {
                x: 5
            }).fillTime(1).to(".e.pupils", {
                x: -5
            }).fillTime(1).to(".e.pupils", {
                x: 5
            }).fillTime(1).to(".e.pupils", {
                x: 0
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.startHoldShake("c")
        }
    }),
    kW = dd.extend({
        elements: a.elementsFromSprite("spy", ["exclamation"])
    }),
    ym = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/56a7427f.png", self.location).href,
            shoebox: new URL("main/pp7/everyday/assets/8db4f71e.png", self.location).href,
            laundry: new URL("main/pp7/everyday/assets/1f85003e.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    closet: [0, 0, 932, 756],
                    door: [0, 756, 496, 756]
                }
            }
        }
    }),
    CW = ym.extend({
        stepDuration: .65,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["closet", null, [122, 34]],
                ["door", null, [122, 468]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                scaleX: -1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: -400,
                duration: 1,
                ease: "bounce.out"
            })
        }
    }),
    RW = ym.extend({
        elements: a.elementsFromImages("laundry"),
        onLoadComplete() {
            s.set(".e.laundry", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.laundry", {
                skewX: -10,
                scaleY: 1.02,
                ease: "circ.inOut"
            }).to(".e.laundry", {
                skewX: 10,
                scaleY: 1.04,
                ease: "circ.inOut"
            }).to(".e.laundry", {
                skewX: -10,
                scaleY: 1.02,
                ease: "circ.inOut"
            }).to(".e.laundry", {
                skewX: 10,
                scaleY: 1,
                ease: "circ.inOut"
            }).to(".e.laundry", {
                skewX: -10,
                scaleY: .98,
                ease: "circ.inOut"
            })
        }
    }),
    DW = ym.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("laundry", "shoebox"),
        onLoadComplete() {
            s.to(".e.laundry", {
                x: -100,
                y: 50,
                scale: .7,
                duration: .5
            }), s.fromTo(".e.shoebox", {
                opacity: 0
            }, {
                x: 100,
                y: 150,
                scale: .8,
                rotate: 10,
                opacity: 1,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.shoebox", {
                x: 0,
                y: 0,
                scale: .4,
                duration: 1
            }, 0).to(".e.shoebox", {
                opacity: 0,
                duration: .2
            }, .8).to(".e.laundry", {
                x: 0,
                y: 0,
                scale: .9,
                duration: 1
            }, 0)
        }
    }),
    bm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/95c914e3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    bus: [10, 10, 903, 363, 335, 72],
                    bush: [10, 383, 781, 473, 280, 133],
                    lines: [801, 383, 55, 523, 508, 514],
                    street: [923, 10, 786, 542, 246, 131]
                }
            }
        }
    }),
    SW = bm.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["bus"]),
        onLoadComplete() {
            s.timeline().set(".e.bus", {
                x: 200
            }).to(".e.bus", {
                x: -10,
                skewX: 10,
                duration: .2
            }).to(".e.bus", {
                x: 0,
                skewX: 0,
                duration: .05
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashOnce("bus"))
        }
    }),
    TW = bm.extend({
        elements: a.elementsFromSprite("sprite", ["bush"]),
        onStartProgress() {
            a.startHoldShake("bush")
        },
        onStopProgress() {
            a.stopHoldShake("bush")
        }
    }),
    EW = bm.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", [
            ["street", "street vignette"], "lines"
        ]),
        onLoadComplete() {
            s.set(".e.lines", {
                clipPath: "inset(0% 0% 46%)"
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 3
            }).to(".e.lines", {
                y: -108,
                scale: .8,
                clipPath: "inset(11% 0% 19%)"
            }).set(".e.lines", {
                y: 0,
                scale: 1,
                clipPath: "inset(0% 0% 50%)"
            }).to(".e.lines", {
                y: -108,
                scale: .8,
                clipPath: "inset(11% 0% 19%)"
            }).set(".e.lines", {
                y: 0,
                scale: 1,
                clipPath: "inset(0% 0% 50%)"
            });
            this.timeline.add(t)
        }
    }),
    LW = E.extend({
        imageManifest: {
            family: new URL("main/pp7/everyday/assets/09eeca05.png", self.location).href,
            heart: new URL("main/pp7/everyday/assets/69b208d1.png", self.location).href
        }
    }),
    BW = LW.extend({
        elements: a.elementsFromImages("heart", "family"),
        onLoadComplete() {
            s.set(".e.family", {
                y: 150
            }), s.set(".e.heart", {
                x: 0,
                y: -400,
                scale: .2,
                opacity: 0,
                transformOrigin: "bottom right"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.heart", {
                scale: .5,
                opacity: 1
            }).fillTime(2).set(".e.heart", {
                x: -490,
                y: -440,
                scale: .2,
                opacity: 0
            }).to(".e.heart", {
                scale: .5,
                opacity: 1
            }).fillTime(2).set(".e.heart", {
                x: -100,
                y: -400,
                scale: .2,
                opacity: 0
            }).to(".e.heart", {
                scale: .5,
                opacity: 1
            }).fillTime(2).set(".e.heart", {
                x: -290,
                y: -440,
                scale: .2,
                opacity: 0
            }).to(".e.heart", {
                scale: .5,
                opacity: 1
            }).fillTime(2)
        }
    }),
    vm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/5cb53996.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    stuff: [10, 1708, 388, 154, 744, 566],
                    ground: [10, 1872, 460, 116, 818, 494],
                    window: [10, 1238, 529, 460, 109, 70],
                    poster: [10, 10, 573, 727, 158, 234],
                    shower: [10, 747, 491, 481, 260, 266]
                }
            }
        }
    }),
    MW = vm.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sprite", ["window", "ground", "stuff"]),
        onLoadComplete() {
            s.to(".e.stuff", {
                x: 100,
                y: -100,
                rotate: -20,
                duration: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.stuff", {
                x: -400,
                y: -430,
                scale: .6,
                rotate: -200,
                duration: 1,
                ease: "back.in(2)"
            }, 0).to(".e.stuff", {
                opacity: 0,
                duration: .05
            }, .95)
        }
    }),
    OW = vm.extend({
        elements: a.elementsFromSprite("sprite", ["shower"]),
        initializeTimeline() {
            this.timeline.to(".e.shower", {
                rotate: 180
            })
        }
    }),
    IW = vm.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["poster"]),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("poster"))
        }
    }),
    wb = E.extend({
        imageManifest: {
            pledge: new URL("main/pp7/everyday/assets/47953b3d.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "pledge",
                images: {
                    signature: [656, 255, 390, 163, 689, 347],
                    token: [656, 10, 285, 235, 379, 358],
                    paper: [10, 10, 636, 905, 44, 186]
                }
            }
        }
    }),
    PW = wb.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["paper", "signature"]),
        onLoadComplete() {
            s.set(".e.signature", {
                clipPath: "inset(0% 100% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.signature", {
                clipPath: "inset(0% 0% 0% 0%)"
            })
        }
    }),
    UW = wb.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["token", "token2", [529, 238]],
            ["token", "token1", [279, 358]],
            ["token", "token0", [479, 558]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.token0", {
                x: -450,
                y: -50,
                rotate: -200
            }).to(".e.token0", {
                x: -900,
                y: 150,
                rotate: -400
            }).to(".e.token1", {
                x: -450,
                y: -50,
                rotate: -200
            }).to(".e.token1", {
                x: -900,
                y: 150,
                rotate: -400
            }).to(".e.token2", {
                x: -450,
                y: -50,
                rotate: -200
            }).to(".e.token2", {
                x: -900,
                y: 150,
                rotate: -400
            })
        }
    }),
    pd = E.extend({
        imageManifest: {
            close1: new URL("main/pp7/everyday/assets/d3a296bd.png", self.location).href,
            far: new URL("main/pp7/everyday/assets/fbaacd75.png", self.location).href,
            stand: new URL("main/pp7/everyday/assets/a7ca3bc8.png", self.location).href,
            telescope: new URL("main/pp7/everyday/assets/04217657.png", self.location).href
        }
    }),
    xb = pd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("stand", "telescope"),
        initializeTimeline() {
            s.set(".e.telescope", {
                y: -230
            }), s.set(".e.stand", {
                y: 200
            }), this.timeline.from(".e.telescope", {
                rotate: 20
            })
        }
    }),
    FW = xb.extend({
        initializeTimeline() {
            s.set(".e.telescope", {
                y: -230
            }), s.set(".e.stand", {
                y: 200
            }), this.timeline.to(".e.telescope", {
                rotateY: 180,
                yoyo: !0,
                repeat: 1
            })
        }
    }),
    jW = pd.extend({
        elements: a.elementsFromImages("far"),
        initializeTimeline() {
            s.to(".e.far", {
                scaleY: 0,
                delay: 2.8,
                duration: .2
            })
        }
    }),
    QW = pd.extend({
        elements: a.elementsFromImages("close1"),
        initializeTimeline() {
            s.from(".e.close1", {
                scaleY: 0,
                duration: .2
            }), this.timeline.fromTo(".e.close1", {
                filter: "blur(15px)"
            }, {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.close1", {
                filter: "blur(14px)",
                autoRound: !1
            }).to(".e.close1", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.close1", {
                filter: "blur(20px)",
                autoRound: !1
            }).to(".e.close1", {
                filter: "blur(0px)",
                autoRound: !1
            })
        }
    }),
    zW = pd.extend({
        elements: a.elementsFromImages("close1"),
        initializeTimeline() {
            this.timeline.to(".e.close1", {
                scale: 4,
                ease: "power2.in"
            })
        }
    }),
    hd = E.extend({
        imageManifest: {
            asteroid: new URL("main/pp7/everyday/assets/0b2966f7.png", self.location).href,
            curse: new URL("main/pp7/everyday/assets/393f05f1.png", self.location).href,
            listen: new URL("main/pp7/everyday/assets/66491a2e.png", self.location).href,
            manycurses: new URL("main/pp7/everyday/assets/55b72491.png", self.location).href
        }
    }),
    HW = hd.extend({
        elements: a.elementsFromImages("asteroid"),
        initializeTimeline() {
            s.fromTo(".e.asteroid", {
                scale: .1
            }, {
                scale: 1,
                ease: "back.out(1.7)"
            })
        },
        onStartProgress() {
            a.startHoldShake("asteroid", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("asteroid", 2, 1)
        }
    }),
    NW = hd.extend({
        elements: a.elementsFromImages("listen"),
        initializeTimeline() {
            this.timeline.fromTo(".e.listen", {
                scale: 2,
                x: -350,
                y: 100
            }, {
                x: 350,
                y: 100,
                yoyo: !0,
                repeat: 1,
                ease: "power3.inOut"
            })
        }
    }),
    GW = hd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("curse"),
        initializeTimeline() {
            this.timeline.to(".e.curse", {
                y: 100,
                x: 200,
                scale: .8
            }), this.timeline.to(".e.curse", {
                y: -100,
                x: 100,
                scale: .5
            }), this.timeline.to(".e.curse", {
                y: 150,
                x: -200,
                scale: .25
            }), this.timeline.to(".e.curse", {
                y: -150,
                x: -100,
                scale: .5
            }), this.timeline.to(".e.curse", {
                y: 100,
                x: 0,
                scale: 1
            })
        }
    }),
    XW = hd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("manycurses"),
        initializeTimeline() {
            s.to(".e.manycurses", {
                opacity: .5,
                repeat: -1,
                rotate: 2,
                yoyo: !0,
                ease: "power2.inOut",
                duration: .2
            }), this.timeline.to(".e.manycurses", {
                y: 100,
                x: 200,
                scale: .8
            }), this.timeline.to(".e.manycurses", {
                y: -100,
                x: 100,
                scale: .5
            }), this.timeline.to(".e.manycurses", {
                y: 150,
                x: -200,
                scale: .25
            }), this.timeline.to(".e.manycurses", {
                y: -150,
                x: -100,
                scale: .5
            }), this.timeline.to(".e.manycurses", {
                y: 100,
                x: 0,
                scale: 1
            })
        }
    }),
    kb = E.extend({
        imageManifest: {
            close: new URL("main/pp7/everyday/assets/1bb64d31.png", self.location).href,
            closer: new URL("main/pp7/everyday/assets/8ab21ed4.png", self.location).href,
            far: new URL("main/pp7/everyday/assets/a9c63bf6.png", self.location).href,
            sun: new URL("main/pp7/everyday/assets/37c41570.png", self.location).href
        }
    }),
    YW = kb.extend({
        elements: a.elementsFromImages("sun"),
        initializeTimeline() {
            s.set(".e.sun", {
                y: -500
            }), s.to(".e.sun", {
                opacity: .8,
                repeat: -1,
                yoyo: !0,
                ease: "power2.inOut"
            })
        }
    }),
    Cb = kb.extend({
        stepDuration: .75,
        elements: a.elementsFromImages("sun", "far"),
        initializeTimeline() {
            this.timeline.fromTo(".e.sun", {
                y: -500
            }, {
                y: 0
            }), this.timeline.fromTo(".e.far", {
                x: 500,
                y: -900
            }, {
                x: 200,
                y: -400
            }, "<")
        }
    }),
    Rb = Cb.extend({
        initializeTimeline() {
            this.timeline.fromTo(".e.far", {
                scale: 1,
                x: 200,
                y: -400
            }, {
                scale: 1.5,
                x: 0,
                y: -300,
                ease: "none"
            })
        }
    }),
    KW = Rb.extend({
        initializeTimeline() {
            this.timeline.fromTo(".e.far", {
                scale: 1.5,
                x: 0,
                y: -300
            }, {
                scale: 2.5,
                x: -200,
                y: -100,
                ease: "none"
            })
        }
    }),
    WW = E.extend({
        imageManifest: {
            news: new URL("main/pp7/everyday/assets/065fcb3c.png", self.location).href
        }
    }),
    JW = WW.extend({
        elements: a.elementsFromImages("news"),
        initializeTimeline() {
            s.to(".e.news", {
                scale: 1.5,
                ease: "none",
                duration: 3
            })
        }
    }),
    ZW = E.extend({
        imageManifest: {
            laser: new URL("main/pp7/everyday/assets/f909c0e2.png", self.location).href,
            laserPress: new URL("main/pp7/everyday/assets/ff6c27fb.png", self.location).href
        }
    }),
    _W = ZW.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("laserPress", "laser"),
        onDiscreteProgress() {
            s.set(".e.laser", {
                opacity: 0
            }), s.set(".e.laser", {
                opacity: 1,
                delay: .15
            })
        }
    }),
    wm = E.extend({
        imageManifest: {
            burn: new URL("main/pp7/everyday/assets/c17bd763.png", self.location).href,
            gift: new URL("main/pp7/everyday/assets/526186c1.png", self.location).href,
            note: new URL("main/pp7/everyday/assets/22e34763.png", self.location).href
        }
    }),
    $W = wm.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("gift"),
        onDiscreteProgress() {
            a.squashOnce("gift", .4)
        }
    }),
    eJ = wm.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("note"),
        onDiscreteProgress() {
            a.squashOnce("note", .4)
        }
    }),
    tJ = wm.extend({
        elements: a.elementsFromImages("burn"),
        onStartProgress() {
            a.startHoldShake("burn")
        },
        onStopProgress() {
            a.startHoldShake("burn")
        }
    }),
    ud = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/d4cca7d4.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    laugh: [10, 614, 758, 702, 150, 122],
                    empty: [238, 10, 526, 594, 207, 238],
                    drink: [774, 10, 526, 594, 208, 237],
                    question: [10, 10, 218, 377, 178, 405],
                    thoughCloud: [778, 614, 868, 826, 94, 66]
                }
            }
        }
    }),
    nJ = ud.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["thoughCloud", "question"])
        }],
        onLoadComplete() {
            s.fromTo(".e.question", {
                scale: .8,
                opaicty: 0
            }, {
                scale: 1,
                opaicty: 1,
                duration: 1
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    iJ = ud.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["laugh"]),
        onDiscreteProgress() {
            a.squashOnce("laugh")
        }
    }),
    sJ = ud.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["drink"]),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("drink"))
        }
    }),
    oJ = ud.extend({
        elements: a.elementsFromSprite("sprite", ["empty"])
    }),
    md = E.extend({
        imageManifest: {
            bookcase: new URL("main/pp7/everyday/assets/e224790f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "bookcase",
                images: {
                    peekHead: [1374, 10, 296, 623, 190, 385],
                    peekHands: [1680, 10, 101, 435, 378, 321],
                    neat: [707, 10, 657, 790, 133, 274],
                    lessNeat: [10, 807, 657, 790, 133, 274],
                    almostMessy: [677, 810, 657, 790, 133, 274],
                    messy: [10, 10, 687, 787, 133, 41],
                    thumb: [1344, 810, 486, 754, 124, 258]
                }
            }
        }
    }),
    aJ = md.extend({
        elements: a.elementsFromSprite("sprite", ["thumb"]),
        initializeTimeline() {
            this.timeline.to(".e.thumb", {
                scale: 1.1
            }).to(".e.thumb", {
                scale: 1
            }).to(".e.thumb", {
                scale: 1.1
            }).to(".e.thumb", {
                scale: 1
            })
        }
    }),
    rJ = md.extend({
        elements: a.elementsFromSprite("sprite", ["peekHead", "peekHands"]),
        onLoadComplete() {
            s.set(".e.peekHead", {
                x: -150,
                clipPath: "inset(0% 0% 0% 52%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.peekHead", {
                x: 0,
                clipPath: "inset(0% 0% 0% 0%)"
            })
        }
    }),
    VJ = md.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["neat", "lessNeat", "almostMessy", "messy"]),
        onLoadComplete() {
            s.set(".e.lessNeat, .e.almostMessy, .e.messy", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("neat", "lessNeat")).add(a.squashTransition("lessNeat", "almostMessy")).add(a.squashTransition("almostMessy", "messy"))
        }
    }),
    lJ = md.extend({
        elements: a.elementsFromSprite("sprite", ["messy"]),
        onStartProgress() {
            a.startHoldShake("messy")
        },
        onStopProgress() {
            a.stopHoldShake("messy")
        }
    }),
    fd = E.extend({
        imageManifest: {
            college: new URL("main/pp7/everyday/assets/460b94b5.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "college",
                images: {
                    exclamation: [933, 10, 181, 557, 221, 410],
                    despair: [10, 10, 913, 418, 291, 44],
                    applicationWriting: [1124, 10, 559, 675, 163, 226],
                    application: [972, 695, 794, 956, 22, 104],
                    gpa: [10, 577, 952, 787, 106, 25]
                }
            }
        }
    }),
    AJ = fd.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["application", "applicationWriting"]),
        onLoadComplete() {
            s.set(".e.applicationWriting", {
                rotate: -10,
                clipPath: "inset(0% 0% 100%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.applicationWriting", {
                clipPath: "inset(0% 0% 90%)"
            }).to(".e.applicationWriting", {
                clipPath: "inset(0% 0% 60%)"
            }).to(".e.applicationWriting", {
                clipPath: "inset(0% 0% 30%)"
            }).to(".e.applicationWriting", {
                clipPath: "inset(0% 0% 10%)"
            }).to(".e.applicationWriting", {
                clipPath: "inset(0% 0% 0%)"
            })
        }
    }),
    cJ = fd.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["gpa"]),
        onLoadComplete() {
            s.set(".e.gpa", {
                x: -500,
                rotate: -160
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.gpa", {
                x: 0,
                rotate: 0,
                ease: "back.out(2)"
            })
        }
    }),
    dJ = fd.extend({
        elements: a.elementsFromSprite("sprite", ["exclamation"]),
        onStartProgress() {
            a.startHoldShake("exclamation")
        },
        onStopProgress() {
            a.stopHoldShake("exclamation")
        }
    }),
    pJ = fd.extend({
        elements: a.elementsFromSprite("sprite", ["despair"])
    }),
    PV = E.extend({
        imageManifest: {
            drink: new URL("main/pp7/everyday/assets/d1bc40a3.png", self.location).href,
            empty: new URL("main/pp7/everyday/assets/c7c704dd.png", self.location).href,
            sad: new URL("main/pp7/everyday/assets/d4c96bb0.png", self.location).href,
            steps: new URL("main/pp7/everyday/assets/ac95ef53.png", self.location).href
        }
    }),
    hJ = PV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("steps"),
        onDiscreteProgress() {
            a.squashOnce("steps", .25)
        }
    }),
    uJ = PV.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("steps", "sad"),
        onLoadComplete() {
            s.set(".e.sad", {
                scale: .8,
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("steps", "sad", 1)).to(".e.sad", {
                scale: 1,
                duration: 1,
                ease: "back.out(3)"
            }).to(".e.sad", {
                scale: 1.15,
                duration: 1,
                ease: "back.out(3)"
            }).to(".e.sad", {
                scale: 1.3,
                duration: 1,
                ease: "back.out(3)"
            })
        }
    }),
    mJ = PV.extend({
        stepDuration: .3,
        elements: a.elementsFromImages("drink"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("drink"))
        }
    }),
    fJ = PV.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("drink", "empty")
        }],
        onLoadComplete() {
            s.set(".e.empty", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(2).call(() => {
                a.squashTransition("drink", "empty", .6)
            }).fillTime(1)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    qJ = PV.extend({
        stepDuration: .4,
        elements: a.elementsFromImages("sad"),
        onLoadComplete() {
            s.set(".e.sad", {
                scale: .8
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sad", {
                scale: 1,
                duration: 1,
                ease: "back.out(3)"
            }).to(".e.sad", {
                scale: 1.15,
                duration: 1,
                ease: "back.out(3)"
            }).to(".e.sad", {
                scale: 1.3,
                duration: 1,
                ease: "back.out(3)"
            }).to(".e.sad", {
                scale: 1.5,
                duration: 1,
                ease: "back.out(3)"
            })
        }
    }),
    qd = E.extend({
        imageManifest: {
            lizard: new URL("main/pp7/everyday/assets/ef1ad1c5.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "lizard",
                images: {
                    dead: [739, 963, 940, 581, 298, 37],
                    poof2: [1180, 650, 126, 131, 29, 688],
                    poof1: [1316, 650, 108, 107, 872, 639],
                    poof0: [1031, 650, 139, 134, 808, 97],
                    poof: [1031, 10, 797, 630, 188, 108],
                    search: [10, 927, 719, 861, 364, 214],
                    stick: [843, 10, 178, 943, 29, 471],
                    alive: [10, 10, 823, 907, 52, 230]
                }
            }
        }
    }),
    gJ = qd.extend({
        stepDuration: .45,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["dead", ["dead", "zoom"]])
        }, ...a.elementsFromSprite("sprite", ["search"])],
        onLoadComplete() {
            s.set(".e.c", {
                x: 300
            }), s.set(".e.dead", {
                scale: .5
            }), s.set(".e.zoom", {
                clipPath: "inset(27% 64% 16% -5%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: -300,
                duration: 1,
                ease: "back.in(2)"
            }, 0).to(".e.zoom", {
                clipPath: "inset(27% 4% 16% 57%)",
                duration: 1,
                ease: "back.in(2)"
            }, 0).to(".e.c", {
                x: 0,
                duration: 1,
                ease: "back.in(2)"
            }, 1).to(".e.zoom", {
                clipPath: "inset(27% 32% 16% 30%)",
                duration: 1,
                ease: "back.in(2)"
            }, 1)
        }
    }),
    yJ = qd.extend({
        stepDuration: .45,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["dead", ["dead", "zoom"]])
        }, ...a.elementsFromSprite("sprite", ["search", "stick"])],
        onLoadComplete() {
            s.fromTo(".e.dead", {
                scale: .5
            }, {
                y: 50,
                scale: .8,
                transformOrigin: "bottom center"
            }), s.fromTo(".e.zoom", {
                clipPath: "inset(27% 32% 16% 30%)"
            }, {
                clipPath: "inset(100% 0% -33% 67%)",
                duration: .3
            }), s.to(".e.search", {
                x: 400,
                y: 400,
                duration: .3,
                onComplete() {
                    s.to(".e.search", {
                        hidden: !0
                    })
                }
            }), s.fromTo(".e.stick", {
                opacity: 0
            }, {
                x: -350,
                y: -280,
                rotate: -30,
                opacity: 1,
                duration: .3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.stick", {
                x: -320,
                y: -180,
                duration: 1
            }, 0).to(".e.dead", {
                scaleY: .5,
                duration: 1
            }, 0).to(".e.stick", {
                x: -350,
                y: -280,
                duration: 1
            }, 1).to(".e.dead", {
                scaleY: .8,
                duration: 1
            }, 1).to(".e.stick", {
                x: -320,
                y: -180,
                duration: 1
            }, 2).to(".e.dead", {
                scaleY: .5,
                duration: 1
            }, 2).to(".e.stick", {
                x: -350,
                y: -280,
                duration: 1
            }, 3).to(".e.dead", {
                scaleY: .8,
                duration: 1
            }, 3)
        }
    }),
    bJ = qd.extend({
        elements: a.elementsFromSprite("sprite", ["dead", "alive", "poof", "poof0", "poof1", "poof2"]),
        onLoadComplete() {
            s.set(".e.dead", {
                y: 50,
                scale: .8,
                transformOrigin: "bottom center"
            }), s.set(".e.alive", {
                hidden: !0
            }), s.set(".e.poof", {
                hidden: !0
            }), s.set(".e.poof0", {
                hidden: !0
            }), s.set(".e.poof1", {
                hidden: !0
            }), s.set(".e.poof2", {
                hidden: !0
            }), a.startShake("dead", 2, 2, 2)
        },
        initializeTimeline() {
            this.timeline.to(".e.dead", {
                scale: .8,
                duration: 1.4
            }).to(".e.dead", {
                scale: .5,
                duration: .1
            }).set(".e.dead", {
                hidden: !0
            }, 1.5).set(".e.poof", {
                hidden: !1,
                scale: .7
            }, 1.5).set(".e.poof0", {
                hidden: !1,
                x: 100,
                y: -100
            }, 1.5).set(".e.poof1", {
                hidden: !1,
                x: -100,
                y: -100
            }, 1.5).set(".e.poof2", {
                hidden: !1,
                x: -100,
                y: 100
            }, 1.5).to(".e.poof", {
                scale: 1,
                duration: .2,
                ease: "none"
            }, 1.5).to(".e.poof0", {
                x: 0,
                y: 0,
                duration: .2,
                ease: "none"
            }, 1.5).to(".e.poof1", {
                x: 0,
                y: 0,
                duration: .2,
                ease: "none"
            }, 1.5).to(".e.poof2", {
                x: 0,
                y: 0,
                duration: .2,
                ease: "none"
            }, 1.5).to(".e.poof", {
                scale: 1.3,
                opacity: 0,
                duration: .2,
                ease: "none"
            }, 1.7).to(".e.poof0", {
                x: -100,
                y: 100,
                opacity: 0,
                duration: .2,
                ease: "none"
            }, 1.7).to(".e.poof1", {
                x: 100,
                y: 100,
                opacity: 0,
                duration: .2,
                ease: "none"
            }, 1.7).to(".e.poof2", {
                x: 100,
                y: -100,
                opacity: 0,
                duration: .2,
                ease: "none"
            }, 1.7).set(".e.alive", {
                hidden: !1,
                scale: .5
            }, 1.5).to(".e.alive", {
                scale: 1,
                duration: .4
            }, 1.5)
        }
    }),
    vJ = qd.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["alive", "stick"]),
        onLoadComplete() {
            s.set(".e.alive", {
                transformOrigin: "right center"
            }), s.fromTo(".e.stick", {
                opacity: 0
            }, {
                x: -500,
                y: -180,
                rotate: -60,
                opacity: 1,
                duration: .3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.stick", {
                x: -400,
                y: -140,
                duration: 1
            }, 0).to(".e.alive", {
                scaleX: .9,
                duration: 1
            }, 0).to(".e.stick", {
                x: -500,
                y: -180,
                duration: 1
            }, 1).to(".e.alive", {
                scaleX: 1,
                duration: 1
            }, 1).to(".e.stick", {
                x: -400,
                y: -140,
                duration: 1
            }, 2).to(".e.alive", {
                scaleX: .9,
                duration: 1
            }, 2).to(".e.stick", {
                x: -500,
                y: -180,
                duration: 1
            }, 3).to(".e.alive", {
                scaleX: 1,
                duration: 1
            }, 3)
        }
    }),
    gd = E.extend({
        imageManifest: {
            doll: new URL("main/pp7/everyday/assets/b930a4af.png", self.location).href,
            dream: new URL("main/pp7/everyday/assets/5fe8886d.png", self.location).href,
            gaze: new URL("main/pp7/everyday/assets/22d0f5d8.png", self.location).href,
            inferiority: new URL("main/pp7/everyday/assets/89d9fabb.png", self.location).href
        }
    }),
    wJ = gd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("doll"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("doll"))
        }
    }),
    xJ = gd.extend({
        elements: a.elementsFromImages("dream"),
        onStartProgress() {
            a.startHoldShake("dream")
        },
        onStopProgress() {
            a.stopHoldShake("dream")
        }
    }),
    kJ = gd.extend({
        elements: a.elementsFromImages("gaze")
    }),
    CJ = gd.extend({
        elements: a.elementsFromImages("inferiority"),
        onStartProgress() {
            a.startHoldShake("inferiority")
        },
        onStopProgress() {
            a.stopHoldShake("inferiority")
        }
    }),
    yd = E.extend({
        imageManifest: {
            heart: new URL("main/pp7/everyday/assets/3ca613e7.png", self.location).href,
            script: new URL("main/pp7/everyday/assets/bf5cba02.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/187a9c17.png", self.location).href,
            twirl: new URL("main/pp7/everyday/assets/6f5bac28.png", self.location).href
        }
    }),
    RJ = yd.extend({
        elements: a.elementsFromImages("script"),
        onStartProgress() {
            a.startHoldShake("script")
        },
        onStopProgress() {
            a.stopHoldShake("script")
        }
    }),
    DJ = yd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("trash", "script"),
        onLoadComplete() {
            s.set(".e.trash", {
                y: 150,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.script", {
                y: -300,
                scale: .7,
                rotate: 30,
                ease: "none"
            }).to(".e.script", {
                y: -200,
                scale: .4,
                rotate: 60,
                ease: "none"
            }).to(".e.script", {
                y: -100,
                opacity: 0,
                scale: .1,
                rotate: 90,
                ease: "none"
            })
        }
    }),
    SJ = yd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("heart"),
        onDiscreteProgress() {
            a.squashOnce("heart", .25)
        }
    }),
    TJ = yd.extend({
        elements: a.elementsFromImages("twirl"),
        initializeTimeline() {
            this.timeline.to(".e.twirl", {
                scaleX: -1,
                ease: "none"
            }).to(".e.twirl", {
                scaleX: 1,
                ease: "none"
            }).to(".e.twirl", {
                scaleX: -1,
                ease: "none"
            }).to(".e.twirl", {
                scaleX: 1,
                ease: "none"
            })
        }
    }),
    bd = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/454677b1.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    doorFront: [951, 912, 518, 865, 64, 241],
                    doorBack: [1330, 10, 518, 865, 64, 241],
                    doorJam: [799, 10, 521, 892, 52, 224],
                    splash: [1479, 885, 468, 492, 74, 182],
                    cup: [10, 1441, 475, 585, 388, 267],
                    sweat: [495, 1441, 302, 438, 244, 309],
                    hand: [10, 10, 779, 899, 101, 221],
                    shake: [10, 919, 931, 512, 244, 34]
                }
            }
        }
    }),
    EJ = bd.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["shake"]),
        initializeTimeline() {
            this.timeline.to(".e.shake", {
                y: -100,
                scaleY: .9
            }).to(".e.shake", {
                y: 0,
                scaleY: 1
            }).to(".e.shake", {
                y: -100,
                scaleY: .9
            }).to(".e.shake", {
                y: 0,
                scaleY: 1
            })
        }
    }),
    LJ = bd.extend({
        elements: a.elementsFromSprite("sprite", ["hand", "sweat"]),
        initializeTimeline() {
            this.timeline.to(".e.sweat", {
                y: 100,
                opacity: 0
            })
        }
    }),
    BJ = bd.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["cup", "splash"]),
        onLoadComplete() {
            s.set(".e.splash", {
                hidden: !0,
                scale: .5,
                transformOrigin: "bottom center"
            }), s.set(".e.cup", {
                transformOrigin: "bottom left"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.splash", {
                hidden: !1
            }, 0).to(".e.splash", {
                x: -50,
                y: -100,
                scale: 1
            }, 0).to(".e.cup", {
                rotate: -50,
                duration: .2
            }, 0)
        }
    }),
    MJ = bd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["doorJam", "doorFront", "doorBack"])
        }],
        onLoadComplete() {
            s.set(".e.doorFront", {
                hidden: !0,
                scaleX: -.5,
                transformOrigin: "left center"
            }), s.set(".e.doorBack", {
                scaleX: -.5,
                transformOrigin: "left center"
            }), s.timeline().to(".e.doorFront", {
                scaleX: 1,
                duration: .25
            }, 0).to(".e.doorBack", {
                scaleX: 1,
                duration: .25
            }, 0).set(".e.doorFront", {
                hidden: !1
            }, .1).set(".e.doorBack", {
                hidden: !0
            }, .1)
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scale: .7
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    vd = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/d83cee16.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    snacks: [10, 10, 953, 626, 158, 24],
                    jump: [10, 646, 919, 553, 322, 37],
                    billy: [939, 663, 540, 479, 237, 215],
                    trailer: [973, 10, 927, 643, 54, 41]
                }
            }
        }
    }),
    OJ = vd.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["jump"]),
        initializeTimeline() {
            this.timeline.to(".e.jump", {
                x: 100,
                y: 300,
                ease: "power1.in"
            }).to(".e.jump", {
                x: 200,
                y: 350,
                ease: "power1.out"
            })
        }
    }),
    IJ = vd.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["snacks"]),
        onLoadComplete() {
            s.set(".e.snacks", {
                x: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.snacks", {
                x: -150
            }).to(".e.snacks", {
                x: 0
            }).to(".e.snacks", {
                x: 150
            })
        }
    }),
    PJ = vd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["trailer"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scale: 1
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.startHoldShake("c")
        }
    }),
    UJ = vd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["trailer", "billy"])
        }],
        onLoadComplete() {
            s.set(".e.billy", {
                x: -129,
                y: -176,
                scale: .4,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                x: 360,
                y: 470,
                scale: 2.5,
                duration: 1
            }, 0).to(".e.billy", {
                opacity: 1,
                duration: .5
            }, 0).to(".e.trailer", {
                opacity: 0,
                duration: .5
            }, .25)
        }
    }),
    Db = E.extend({
        imageManifest: {
            arrested: new URL("main/pp7/everyday/assets/9814389a.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "arrested",
                images: {
                    angry: [10, 10, 573, 980, 0, 240],
                    frown: [593, 928, 292, 174, 384, 369],
                    devil: [593, 10, 573, 908, 72, 240]
                }
            }
        }
    }),
    FJ = Db.extend({
        elements: a.elementsFromSprite("sprite", ["angry"])
    }),
    jJ = Db.extend({
        elements: a.elementsFromSprite("sprite", ["devil", "frown"]),
        onLoadComplete() {
            s.set(".e.frown", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).set(".e.frown", {
                hidden: !1
            }).fillTime(1)
        }
    }),
    ja = E.extend({
        stepDuration: .25,
        items: ["selfieNone", "selfie0"],
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/19d9cd81.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    selfie4: [10, 10, 475, 722, 55, 274],
                    selfie3: [495, 10, 475, 722, 55, 274],
                    selfie1: [980, 10, 475, 722, 55, 274],
                    selfie0: [1465, 10, 475, 722, 55, 274],
                    selfie2: [10, 742, 475, 722, 55, 274],
                    selfieNone: [980, 742, 520, 909, 31, 252],
                    selfie5: [495, 742, 475, 722, 55, 274]
                }
            }
        },
        elements() {
            return [{
                class: "c0",
                type: "container",
                children: a.elementsFromSprite("sprite", ["selfieNone", this.items[0]])
            }, {
                class: "c1",
                type: "container",
                children: a.elementsFromSprite("sprite", ["selfieNone", this.items[1]])
            }]
        },
        onLoadComplete() {
            s.set(".e.c1", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("c0", "c1", .25)
        }
    }),
    QJ = ja,
    zJ = ja.extend({
        items: ["selfie0", "selfie1"]
    }),
    HJ = ja.extend({
        items: ["selfie1", "selfie2"]
    }),
    NJ = ja.extend({
        items: ["selfie2", "selfie3"]
    }),
    GJ = ja.extend({
        items: ["selfie3", "selfie4"]
    }),
    XJ = ja.extend({
        items: ["selfie4", "selfie5"]
    }),
    YJ = pb,
    xm = E.extend({
        imageManifest: {
            diary: new URL("main/pp7/everyday/assets/b0dc7ccb.png", self.location).href,
            diaryClosed: new URL("main/pp7/everyday/assets/66c5f374.png", self.location).href
        }
    }),
    Sb = xm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("diaryClosed"),
        initializeTimeline() {
            this.timeline.to(".e.diaryClosed", {
                x: 600
            })
        }
    }),
    KJ = Sb.extend({
        initializeTimeline() {
            this.timeline.fromTo(".e.diaryClosed", {
                x: 600
            }, {
                x: -600
            }), this.timeline.to(".e.diaryClosed", {
                x: 0
            })
        }
    }),
    WJ = xm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("diary", "diaryClosed"),
        initializeTimeline() {
            s.set(".e.diary", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("diaryClosed", "diary", .25)
        }
    }),
    JJ = xm.extend({
        elements: a.elementsFromImages("diary")
    }),
    ZJ = E.extend({
        imageManifest: {
            photo1: new URL("main/pp7/everyday/assets/65e251a4.png", self.location).href,
            photo2: new URL("main/pp7/everyday/assets/1aa9e690.png", self.location).href,
            photo3: new URL("main/pp7/everyday/assets/042f0278.png", self.location).href
        }
    }),
    _J = ZJ.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("photo1", "photo2", "photo3"),
        initializeTimeline() {
            s.set(".e.photo1", {
                zIndex: 3
            }), s.set(".e.photo2", {
                x: 30,
                y: 20,
                zIndex: 4
            }), s.set(".e.photo3", {
                x: -20,
                y: -30,
                zIndex: 5
            }), this.timeline.to(".e.photo3", {
                x: -700,
                rotate: -3,
                zIndex: 2,
                duration: .5
            }), this.timeline.to(".e.photo3", {
                x: 0,
                rotate: 0,
                duration: .5
            }), this.timeline.to(".e.photo2", {
                x: -700,
                rotate: -3,
                zIndex: 1,
                duration: .5
            }), this.timeline.to(".e.photo2", {
                x: 0,
                rotate: 0,
                duration: .5
            }), this.timeline.to(".e.photo1", {
                x: 1e3,
                y: -1e3,
                rotate: 180,
                duration: 1
            }), this.timeline.to(".e.photo3", {
                x: -1e3,
                y: -1e3,
                rotate: 180,
                duration: 1
            }), this.timeline.to(".e.photo2", {
                x: -1e3,
                y: -1e3,
                rotate: 180,
                duration: 1
            })
        }
    }),
    wd = E.extend({
        imageManifest: {
            camera: new URL("main/pp7/everyday/assets/24ba3529.png", self.location).href,
            bored: new URL("main/pp7/everyday/assets/4769e5fc.png", self.location).href,
            goofy: new URL("main/pp7/everyday/assets/32f36bd9.png", self.location).href
        }
    }),
    $J = wd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("camera"),
        onDiscreteProgress() {
            a.squashOnce("camera", .3, "y")
        }
    }),
    eZ = wd.extend({
        elements: a.elementsFromImages("bored"),
        onStartProgress() {
            a.startHoldShake("bored")
        },
        onStopProgress() {
            a.stopHoldShake("bored")
        }
    }),
    tZ = wd.extend({
        elements: a.elementsFromImages("bored"),
        initializeTimeline() {
            this.timeline.fillTime(2).to(".e.bored", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.bored", {
                filter: "blur(0px)",
                autoRound: !1
            }).fillTime(1)
        },
        onStartProgress() {
            a.startHoldShake("bored")
        },
        onStopProgress() {
            a.stopHoldShake("bored")
        }
    }),
    nZ = wd.extend({
        stepDuration: .45,
        elements: [...a.elementsFromImages("goofy", "bored"), {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3]
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            }), s.set(".e.bored", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).set(".e.bored", {
                hidden: !1
            }).set(".e.goofy", {
                hidden: !0
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            })
        }
    }),
    km = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/faf071ad.png", self.location).href,
            animated: new URL("main/pp7/everyday/assets/d37aa725.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/df6f0127.png", self.location).href,
            shin: new URL("main/pp7/everyday/assets/ec5c958f.png", self.location).href
        }
    }),
    iZ = km.extend({
        stepDuration: .25,
        elements: [{
            type: "container",
            children: a.elementsFromImages("animated"),
            class: "cam",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.cam", {
                width: 1e3,
                height: 1e3,
                overflow: "hidden"
            }), this.runTween = s.to(".e.animated", {
                x: -3e3,
                repeat: -1,
                ease: "steps(3)"
            }), this.timeline.to(".e.cam", {
                x: 0
            }), this.timeline.to(".e.cam", {
                x: 0
            }), this.timeline.to(".e.cam", {
                x: 0
            }), this.timeline.to(".e.cam", {
                x: -1e3,
                ease: "none"
            })
        },
        onDiscreteProgress() {
            this.runTween.timeScale(this.runTween.timeScale() * 1.5)
        }
    }),
    sZ = km.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("car", "run"),
        initializeTimeline() {
            this.timeline.fromTo(".e.run", {
                scale: .35,
                opacity: 1,
                x: 650,
                y: 0
            }, {
                opacity: 0,
                x: 0,
                y: 10
            }), this.timeline.fromTo(".e.run", {
                y: 0
            }, {
                y: -30,
                ease: "back.out(50)"
            }, "<")
        }
    }),
    oZ = km.extend({
        elements: a.elementsFromImages("shin"),
        onStartProgress() {
            a.startShake("shin", 2, 3, .2)
        },
        onStopProgress() {
            a.stopShake("shin")
        }
    }),
    aZ = E.extend({
        imageManifest: {
            wait: new URL("main/pp7/everyday/assets/e1546a19.png", self.location).href
        }
    }),
    rZ = aZ.extend({
        elements: a.elementsFromImages("wait"),
        initializeTimeline() {
            s.fromTo(".e.wait", {
                scale: .25
            }, {
                scale: 1,
                ease: "back.out(3)",
                duration: 2
            })
        }
    }),
    xd = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/c954cd21.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/e32cb39b.png", self.location).href,
            kissLeft: new URL("main/pp7/everyday/assets/00adfde6.png", self.location).href,
            kissRight: new URL("main/pp7/everyday/assets/22e09fc9.png", self.location).href
        }
    }),
    VZ = xd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("car"),
        initializeTimeline() {
            s.from(".e.car", {
                x: 600,
                y: -200,
                opacity: 0,
                rotate: -2,
                ease: "back.out(1)"
            }), this.timeline.to(".e.car", {
                scale: .8
            }), this.timeline.to(".e.car", {
                scale: 1
            })
        }
    }),
    lZ = xd.extend({
        elements: a.elementsFromImages("kissLeft", "kissRight"),
        initializeTimeline() {
            this.timeline.from(".e.kissLeft", {
                x: -250,
                duration: .5
            }), this.timeline.to(".e.kissLeft", {
                x: 0,
                duration: .5
            })
        },
        onProgress(t) {
            t > 50 && a.startShake("kissLeft", 1, 1, .25)
        }
    }),
    AZ = xd.extend({
        elements: a.elementsFromImages("kissLeft", "kissRight"),
        initializeTimeline() {
            this.timeline.to(".e.kissLeft", {
                x: -500,
                rotateY: 180
            }), this.timeline.to(".e.kissLeft", {
                x: -1250,
                ease: "none"
            })
        }
    }),
    cZ = xd.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("door"),
        initializeTimeline() {
            s.set(".e.door", {
                scale: .25
            }), this.timeline.to(".e.door", {
                x: -150,
                scale: .5
            }), this.timeline.to(".e.door", {
                y: 150,
                yoyo: !0,
                repeat: 1,
                duration: .5,
                ease: "power2.inOut"
            }, "<"), this.timeline.to(".e.door", {
                x: 150,
                scale: .75
            }), this.timeline.to(".e.door", {
                y: 150,
                yoyo: !0,
                repeat: 1,
                duration: .5,
                ease: "power2.inOut"
            }, "<"), this.timeline.to(".e.door", {
                x: 0,
                scale: 1
            }), this.timeline.to(".e.door", {
                y: 150,
                yoyo: !0,
                repeat: 1,
                duration: .5,
                ease: "power2.inOut"
            }, "<")
        }
    }),
    kd = E.extend({
        imageManifest: {
            bow: new URL("main/pp7/everyday/assets/cf10dc14.png", self.location).href,
            box: new URL("main/pp7/everyday/assets/541b8622.png", self.location).href,
            fold: new URL("main/pp7/everyday/assets/18fee021.png", self.location).href,
            tape: new URL("main/pp7/everyday/assets/e290ea6f.png", self.location).href,
            taped: new URL("main/pp7/everyday/assets/4b6097a2.png", self.location).href,
            wrapped: new URL("main/pp7/everyday/assets/5adbeb78.png", self.location).href
        }
    }),
    dZ = kd.extend({
        stepDuration: .5,
        elements: [{
            class: "box-container",
            type: "container",
            children: [{
                class: "box",
                type: "img",
                key: "box"
            }, {
                class: "fold",
                type: "img",
                key: "fold"
            }]
        }],
        initializeTimeline() {
            s.set(".e.fold", {
                opacity: 0
            });
            const t = s.timeline().to(".e.fold", {
                opacity: 1,
                duration: .1
            }, .3).to(".e.box", {
                opacity: 0,
                duration: .1
            }, .3).to(".e.fold", {
                scaleX: -1,
                duration: .2
            }, .5).to(".e.fold", {
                scaleY: -1,
                duration: .2
            }, 1).to(".e.fold", {
                scaleX: 1,
                duration: .2
            }, 1.5).to(".e.fold", {
                scaleY: 1,
                duration: .2
            }, 2).to(".e.fold", {
                scaleX: -1,
                duration: .2
            }, 2.5);
            this.timeline.add(t)
        },
        onDiscreteProgress() {
            a.squashOnce("box-container")
        }
    }),
    pZ = kd.extend({
        elements: [{
            class: "box-container",
            type: "container",
            children: [{
                class: "fold",
                type: "img",
                key: "fold"
            }, {
                class: "taped",
                type: "img",
                key: "taped"
            }]
        }, {
            class: "tape",
            type: "img",
            key: "tape"
        }],
        initializeTimeline() {
            s.set(".e.fold", {
                scaleX: -1
            }), s.set(".e.tape", {
                x: -180,
                y: 20,
                scale: .6,
                rotate: 90
            }), s.set(".e.taped", {
                opacity: 0,
                scaleX: -1
            })
        },
        latestProgress: 0,
        onProgress(t, e) {
            if (t > this.latestProgress) {
                switch (t) {
                    case 5:
                        s.timeline().to(".e.tape", {
                            x: -280,
                            duration: .4,
                            ease: "linear"
                        });
                        break;
                    case 15:
                        s.timeline().to(".e.tape", {
                            x: 300,
                            duration: .4,
                            ease: "back.inOut"
                        }), s.timeline().to(".e.fold", {
                            opacity: 0,
                            duration: .2
                        }, .1).to(".e.taped", {
                            opacity: 1,
                            duration: .2
                        }, .1);
                        break;
                    case 40:
                        a.squashOnce("box-container"), s.timeline().to(".e.taped", {
                            opacity: 0,
                            scaleX: 1,
                            duration: .1
                        }).to(".e.fold", {
                            opacity: 1,
                            scaleX: 1,
                            duration: .1
                        });
                        break;
                    case 50:
                        s.timeline().to(".e.tape", {
                            x: 380,
                            duration: .4,
                            ease: "linear"
                        });
                        break;
                    case 65:
                        t > e && a.squashOnce("box-container"), s.timeline().to(".e.tape", {
                            x: -300,
                            duration: .4,
                            ease: "back.inOut"
                        }), s.timeline().to(".e.fold", {
                            opacity: 0,
                            duration: .2
                        }, .3).to(".e.taped", {
                            opacity: 1,
                            duration: .2
                        }, .3);
                        break
                }
                this.latestProgress = t
            }
        }
    }),
    hZ = kd.extend({
        elements: [{
            class: "box-container",
            type: "container",
            children: [{
                class: "taped",
                type: "img",
                key: "taped"
            }]
        }, {
            class: "bow",
            type: "img",
            key: "bow"
        }],
        initializeTimeline() {
            s.set(".e.bow", {
                scale: .6,
                x: 50,
                y: 180
            });
            const t = s.timeline().to(".e.bow", {
                repeat: 3,
                rotateY: 180,
                x: 180,
                yoyo: !0
            });
            this.timeline.add(t)
        }
    }),
    uZ = kd.extend({
        stepDuration: 1.5,
        elements: [{
            class: "box-container",
            type: "container",
            children: [{
                class: "taped",
                type: "img",
                key: "taped"
            }, {
                class: "wrapped",
                type: "img",
                key: "wrapped"
            }]
        }, {
            class: "bow",
            type: "img",
            key: "bow"
        }],
        initializeTimeline() {
            s.set(".e.bow", {
                scale: .6,
                x: 50,
                y: 180
            }), s.set(".e.wrapped", {
                opacity: 0,
                y: -50
            });
            const t = s.timeline().to(".e.wrapped", {
                opacity: 1,
                duration: .25
            }, .15).to(".e.taped", {
                opacity: 0,
                duration: .25
            }, .15).to(".e.bow", {
                rotate: 360,
                duration: .25
            }, 0);
            this.timeline.add(t)
        },
        onDiscreteProgress() {
            a.squashOnce("box-container")
        }
    }),
    mZ = !1,
    fZ = E.extend({
        imageManifest: {
            candles: new URL("main/pp7/everyday/assets/91e1a9f7.png", self.location).href,
            candlesLit: new URL("main/pp7/everyday/assets/dba787ec.png", self.location).href,
            candlesblow: new URL("main/pp7/everyday/assets/17b0a283.png", self.location).href,
            candlessmoke: new URL("main/pp7/everyday/assets/59d2a862.png", self.location).href
        }
    }),
    qZ = fZ.extend({
        elements: [{
            class: "candles-container",
            type: "container",
            children: [{
                class: "candles",
                type: "img",
                key: "candles"
            }, {
                class: "candlesFlicker",
                type: "img",
                key: "candlesLit"
            }, {
                class: "candlesLit",
                type: "img",
                key: "candlesLit"
            }, {
                class: "candlesblow",
                type: "img",
                key: "candlesblow"
            }, {
                class: "candlessmoke",
                type: "img",
                key: "candlessmoke"
            }]
        }],
        initializeTimeline() {
            s.set(".e.candlesLit", {
                opacity: 0
            }), s.set(".e.candlesblow", {
                opacity: 0,
                scaleX: -1
            }), s.set(".e.candlessmoke", {
                opacity: 0
            });
            const t = s.to(".e.candlesFlicker", {
                    repeat: -1,
                    yoyo: !0,
                    opacity: .5,
                    duration: .5
                }),
                e = s.timeline().to(".e.candlesFlicker", {
                    onStart: () => t.kill(),
                    opacity: 0,
                    duration: .25
                }, 0).to(".e.candlesLit", {
                    opacity: .5,
                    duration: .25
                }, .25).to(".e.candlesLit", {
                    opacity: 1,
                    duration: .25
                }, .5).to(".e.candlesLit", {
                    opacity: .5,
                    duration: .25
                }, .75).to(".e.candlesLit", {
                    opacity: 1,
                    duration: .25
                }, 1).to(".e.candlesLit", {
                    opacity: .5,
                    duration: .25
                }, 1.25).to(".e.candlesLit", {
                    opacity: 1,
                    duration: .25
                }, 1.5).to(".e.candlesLit", {
                    opacity: .5,
                    duration: .25
                }, 1.75).to(".e.candlesLit", {
                    opacity: 1,
                    duration: .25
                }, 2).to(".e.candlesLit", {
                    opacity: 0,
                    duration: .25
                }, 2.25).to(".e.candlesblow", {
                    opacity: 1,
                    duration: .25
                }, 2.25).to(".candles-container", {
                    scaleX: .9,
                    scaleY: 1.1,
                    duration: 2
                }, .75).to(".candles-container", {
                    scaleX: 1.2,
                    scaleY: .8,
                    duration: .25
                }, 2.5).to(".e.candlesblow", {
                    opacity: 1,
                    duration: .25,
                    scaleX: 1
                }, 2.5).to(".candles-container", {
                    scaleX: 1,
                    scaleY: 1,
                    duration: .25
                }, 2.75).to(".e.candlesblow", {
                    opacity: 0,
                    duration: .25
                }, 2.75).to(".e.candlessmoke", {
                    opacity: 1,
                    duration: .5
                }, 3).to(".e.candlessmoke", {
                    opacity: .6,
                    duration: .5
                }, 3.5).to(".e.candlessmoke", {
                    opacity: 1,
                    duration: .5
                }, 4).to(".e.candlessmoke", {
                    opacity: .6,
                    duration: .5
                }, 4.5).to(".e.candlessmoke", {
                    opacity: 1,
                    duration: .5
                }, 5);
            this.timeline.add(e)
        }
    }),
    gZ = Hn.extend({
        imageManifest: {
            bag: new URL("main/pp7/everyday/assets/0fd425d6.png", self.location).href
        }
    }),
    yZ = E.extend({
        imageManifest: {
            chips: new URL("main/pp7/everyday/assets/4dcf75d5.png", self.location).href
        },
        elements: a.elementsFromImages("chips"),
        initializeTimeline() {
            this.timeline.to(".e.chips", {
                scale: 1.2
            })
        }
    }),
    bZ = Hn.extend({
        imageManifest: {
            vomit: new URL("main/pp7/everyday/assets/cc915944.png", self.location).href
        }
    }),
    Cm = E.extend({
        imageManifest: {
            bat: new URL("main/pp7/everyday/assets/a1d80db6.png", self.location).href,
            vacuum: new URL("main/pp7/everyday/assets/52375616.png", self.location).href
        }
    }),
    vZ = Cm.extend({
        stepDuration: .2,
        elements: a.elementsFromImages("vacuum"),
        onDiscreteProgress() {
            s.to(".e.vacuum", {
                scale: .95,
                duration: .2
            })
        }
    }),
    wZ = Cm.extend({
        stepDuration: .65,
        elements: a.elementsFromImages("vacuum", ["bat", null, [0, 0]]),
        onLoadComplete() {
            a.startShake("vacuum", 10, 0), s.set(".e.bat", {
                x: 900,
                y: 10,
                scaleX: .5,
                scaleY: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.bat", {
                x: -650,
                y: 280,
                scaleX: 1,
                scaleY: 1
            }).set(".e.bat", {
                x: -500,
                y: 50,
                scaleX: -.5,
                scaleY: .5
            }).to(".e.bat", {
                x: 1100,
                y: 200,
                scaleX: -1,
                scaleY: 1
            }).set(".e.bat", {
                x: 900,
                y: 500,
                scaleX: .5,
                scaleY: .5
            }).to(".e.bat", {
                x: -650,
                y: 0,
                scaleX: 1,
                scaleY: 1
            }).set(".e.bat", {
                x: -500,
                y: 50,
                scaleX: -.5,
                scaleY: .5
            }).to(".e.bat", {
                x: 1100,
                y: 400,
                scaleX: -1,
                scaleY: 1
            }).set(".e.bat", {
                x: 900,
                y: 100,
                scaleX: .5,
                scaleY: .5
            }).to(".e.bat", {
                x: -650,
                y: 580,
                scaleX: 1,
                scaleY: 1
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.vacuum", {
                scale: .95,
                duration: .2
            }).to(".e.vacuum", {
                scale: 1,
                duration: .2
            })
        }
    }),
    xZ = Cm.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("vacuum"),
        onLoadComplete() {
            a.startShake("vacuum", 10, 0)
        },
        onDiscreteProgress() {
            a.stopShake("vacuum")
        }
    }),
    Cd = E.extend({
        imageManifest: {
            bat: new URL("main/pp7/everyday/assets/33ae6671.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/d4922f31.png", self.location).href,
            tiptoe: new URL("main/pp7/everyday/assets/54e9fc15.png", self.location).href,
            devil: new URL("main/pp7/everyday/assets/5eb9bedb.png", self.location).href
        }
    }),
    kZ = Cd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("tiptoe", ["devil", null, [440, 280]]),
        onLoadComplete() {
            s.set(".e.devil", {
                x: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil", {
                x: -200
            }).to(".e.devil", {
                x: -100
            }).to(".e.devil", {
                x: 0
            }).to(".e.devil", {
                x: 100
            })
        }
    }),
    CZ = Cd.extend({
        lastStepDuration: .3,
        hasBat: !1,
        elements: a.elementsFromImages("tiptoe", ["devil", null, [440, 280]], "bat"),
        onLoadComplete() {
            s.set(".e.devil", {
                x: 100
            }), s.set(".e.bat", {
                x: 1e3,
                y: 180,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil", {
                scaleX: -1
            })
        },
        onProgress(t) {
            this.hasBat || t < 75 || (this.hasBat = !0, s.timeline().set(".e.bat", {
                opacity: 1
            }).to(".e.bat", {
                x: 700,
                y: 227,
                duration: .2
            }))
        }
    }),
    RZ = Cd.extend({
        elements: a.elementsFromImages("tiptoe", ["devil", null, [440, 280]], "bat"),
        onLoadComplete() {
            s.set(".e.devil", {
                x: 100,
                scaleX: -1
            }), s.set(".e.bat", {
                x: 700,
                y: 227
            }), s.to(".e.devil", {
                x: 106,
                duration: .1,
                yoyo: !0,
                repeat: -1
            })
        }
    }),
    DZ = Cd.extend({
        stepDuration: .7,
        elements: a.elementsFromImages("run", "bat"),
        onLoadComplete() {
            s.set(".e.run", {
                scaleX: -1
            }), s.set(".e.bat", {
                scaleX: -1
            }), s.timeline().fromTo(".e.run", {
                x: 780
            }, {
                x: -750,
                duration: .4,
                ease: "none"
            }).fromTo(".e.bat", {
                x: 1400,
                y: 400
            }, {
                x: -200,
                y: 400,
                duration: .4,
                ease: "none"
            }, .1).set(".e.run", {
                scaleX: 1
            }).set(".e.bat", {
                x: -500,
                scaleX: 1
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.run", {
                    x: 780,
                    duration: .8,
                    ease: "none"
                }).set(".e.run", {
                    scaleX: -1
                }).to(".e.run", {
                    x: -750,
                    duration: .8,
                    ease: "none"
                }, 1).set(".e.run", {
                    scaleX: 1
                }).to(".e.run", {
                    x: 780,
                    duration: .8,
                    ease: "none"
                }, 2).set(".e.run", {
                    scaleX: -1
                }).to(".e.run", {
                    x: -750,
                    duration: .8,
                    ease: "none"
                }, 3).set(".e.run", {
                    scaleX: 1
                }).to(".e.run", {
                    x: 780,
                    duration: .8,
                    ease: "none"
                }, 4),
                e = s.timeline().to(".e.bat", {
                    x: 1100,
                    duration: .8,
                    ease: "none"
                }, .2).set(".e.bat", {
                    x: 1400,
                    scaleX: -1
                }).to(".e.bat", {
                    x: -200,
                    duration: .8,
                    ease: "none"
                }, 1.2).set(".e.bat", {
                    x: -500,
                    scaleX: 1
                }).to(".e.bat", {
                    x: 1100,
                    duration: .8,
                    ease: "none"
                }, 2.2).set(".e.bat", {
                    x: 1400,
                    scaleX: -1
                }).to(".e.bat", {
                    x: -200,
                    duration: .8,
                    ease: "none"
                }, 3.2).set(".e.bat", {
                    x: -500,
                    scaleX: 1
                }).to(".e.bat", {
                    x: 1100,
                    duration: .8,
                    ease: "none"
                }, 4.2);
            this.timeline.add(t), this.timeline.add(e, 0)
        }
    }),
    Rm = E.extend({
        imageManifest: {
            bat: new URL("main/pp7/everyday/assets/33ae6671.png", self.location).href,
            blanket: new URL("main/pp7/everyday/assets/a5443fec.png", self.location).href,
            chips0: new URL("main/pp7/everyday/assets/a1f02a7a.png", self.location).href,
            chips1: new URL("main/pp7/everyday/assets/980d96c4.png", self.location).href,
            chips2: new URL("main/pp7/everyday/assets/3b299d00.png", self.location).href,
            chips3: new URL("main/pp7/everyday/assets/82c4c069.png", self.location).href
        }
    }),
    SZ = Rm.extend({
        stepDuration: .25,
        elements: [{
            class: "chip-container",
            type: "container",
            children: a.elementsFromImages("chips0", "chips1", "chips2", "chips3")
        }],
        onLoadComplete() {
            s.set(".e.chips1, .e.chips2, .e.chips3", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.chips1", {
                opacity: 1
            }).to(".e.chips2", {
                opacity: 1
            }).to(".e.chips3", {
                opacity: 1
            })
        },
        onDiscreteProgress() {
            s.to(".e.chip-container", {
                scale: .85,
                yoyo: !0,
                repeat: 1,
                duration: .1
            })
        }
    }),
    TZ = Rm.extend({
        elements: a.elementsFromImages("blanket"),
        initializeTimeline() {
            this.timeline.to(".e.blanket", {
                y: -300,
                scaleX: .8,
                scaleY: .5,
                ease: "back.out(2)"
            })
        }
    }),
    EZ = Rm.extend({
        elements: [{
            class: "chip-container",
            type: "container",
            children: a.elementsFromImages("chips0", "chips1", "chips2", "chips3", "bat")
        }, {
            class: "blanket",
            type: "img",
            pos: [0, 0],
            key: "blanket"
        }],
        onLoadComplete() {
            s.set(".e.blanket", {
                y: -300,
                scaleX: .8,
                scaleY: .5
            }), s.set(".e.bat", {
                x: -500,
                y: 175
            }), s.to(".e.bat", {
                x: 1500,
                yoyo: !0,
                repeat: -1,
                repeatDelay: 1,
                duration: .5
            }), s.fromTo(".e.chip-container", {
                x: -300,
                y: 200,
                scale: .7,
                opacity: 0
            }, {
                x: 0,
                scale: .7,
                opacity: 1,
                duration: .3
            })
        },
        onStartProgress() {
            a.startHoldShake("blanket")
        },
        onStopProgress() {
            a.stopHoldShake("blanket")
        }
    }),
    Rd = E.extend({
        imageManifest: {
            bat: new URL("main/pp7/everyday/assets/33ae6671.png", self.location).href,
            batBlack: new URL("main/pp7/everyday/assets/b83e670a.png", self.location).href,
            blanket: new URL("main/pp7/everyday/assets/a5443fec.png", self.location).href,
            chips: new URL("main/pp7/everyday/assets/24035ba1.png", self.location).href,
            cover: new URL("main/pp7/everyday/assets/d183c149.png", self.location).href,
            wing: new URL("main/pp7/everyday/assets/5b7831c3.png", self.location).href,
            fire: new URL("main/pp7/everyday/assets/01b520d9.png", self.location).href,
            smoke: new URL("main/pp7/everyday/assets/5eb1b860.png", self.location).href
        }
    }),
    LZ = Rd.extend({
        elements: a.elementsFromImages("chips", "bat", "blanket"),
        onLoadComplete() {
            s.set(".e.chips", {
                y: 200,
                scale: .7
            }), s.set(".e.bat", {
                x: 1200,
                y: 200,
                visibility: "hidden"
            }), s.set(".e.blanket", {
                y: -300,
                scaleX: .8,
                scaleY: .5
            }), a.startHoldShake("blanket")
        },
        initializeTimeline() {
            this.timeline.set(".e.bat", {
                visibility: "visible"
            }, .9).to(".e.bat", {
                x: 440,
                y: 540,
                duration: .1
            })
        }
    }),
    BZ = Rd.extend({
        stepDuration: .5,
        elements: [{
            class: "bat-container",
            type: "container",
            children: a.elementsFromImages("chips", "bat", "blanket")
        }, {
            class: "cover",
            type: "img",
            key: "cover"
        }],
        onLoadComplete() {
            s.set(".e.chips", {
                y: 200,
                scale: .7
            }), s.set(".e.bat", {
                x: 440,
                y: 540
            }), s.set(".e.blanket", {
                y: -300,
                scaleX: .8,
                scaleY: .5
            }), s.set(".e.cover", {
                y: 0,
                scale: .8,
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.blanket", {
                y: -325,
                duration: .2,
                ease: "power2.inOut"
            }).to(".e.blanket", {
                scaleX: 1,
                y: 190,
                duration: .8,
                ease: "power2.inOut"
            }).set(".e.bat-container", {
                visibility: "hidden"
            }, .7).set(".e.cover", {
                visibility: "visible"
            }, .7).to(".e.cover", {
                y: 150,
                duration: .1,
                ease: "none"
            }, .7)
        }
    }),
    MZ = Rd.extend({
        elements: a.elementsFromImages("wing", "cover"),
        onLoadComplete() {
            s.set(".e.cover", {
                y: 150,
                scale: .8,
                transformOrigin: "center 55%"
            }), s.set(".e.wing", {
                x: 285,
                y: 775,
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.cover", {
                    x: -20,
                    scaleY: 1,
                    skewX: 10,
                    duration: 1
                }).to(".e.cover", {
                    x: 20,
                    scaleY: .9,
                    skewX: -10,
                    duration: 1
                }).to(".e.cover", {
                    x: 0,
                    scaleY: 1.1,
                    skewX: 0,
                    duration: 1
                }).to(".e.cover", {
                    x: 20,
                    scaleY: .8,
                    skewX: -10,
                    duration: 1
                }).to(".e.cover", {
                    x: -10,
                    scaleY: 1,
                    skewX: 5,
                    duration: 1
                }).to(".e.cover", {
                    x: 0,
                    scaleY: .9,
                    skewX: 0,
                    duration: 1
                }).to(".e.cover", {
                    x: -40,
                    scaleY: 1.3,
                    skewX: 20,
                    duration: 1
                }).to(".e.cover", {
                    x: 0,
                    scaleY: .9,
                    skewX: 0,
                    duration: 1
                }).to(".e.cover", {
                    x: 20,
                    scaleY: 1,
                    skewX: -10,
                    duration: 1
                }).to(".e.cover", {
                    x: 0,
                    scaleY: .9,
                    skewX: 0,
                    duration: 1
                }),
                e = s.timeline().to(".e.wing", {
                    rotate: 0,
                    duration: 2
                }).to(".e.wing", {
                    rotate: -10,
                    duration: .25
                }).to(".e.wing", {
                    rotate: 0,
                    duration: 2
                }).to(".e.wing", {
                    rotate: -15,
                    duration: .25
                }).to(".e.wing", {
                    rotate: 0,
                    duration: .25
                }).to(".e.wing", {
                    rotate: -10,
                    duration: .25
                }).to(".e.wing", {
                    rotate: 0,
                    duration: 2
                }).to(".e.wing", {
                    rotate: -15,
                    duration: .25
                }).to(".e.wing", {
                    rotate: 0,
                    duration: 2.75
                });
            this.timeline.add(t), this.timeline.add(e, 0)
        }
    }),
    OZ = Rd.extend({
        elements: a.elementsFromImages(["fire", null, [100, 0]], "smoke", "batBlack"),
        onLoadComplete() {
            s.set(".e.smoke", {
                x: 420,
                y: 280
            }), s.set(".e.batBlack", {
                x: 400,
                y: 400
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.smoke", {
                y: 100,
                opacity: 0,
                duration: .4
            }).to(".e.batBlack", {
                opacity: 0,
                duration: .3
            }, .6).to(".e.batBlack", {
                x: 0,
                y: 50,
                scale: .2,
                rotate: -30,
                duration: 1,
                ease: "power2.out"
            }, 0)
        }
    }),
    Dd = E.extend({
        imageManifest: {
            wait: new URL("main/pp7/everyday/assets/75ef0522.png", self.location).href,
            empty: new URL("main/pp7/everyday/assets/c62bf340.png", self.location).href,
            bat: new URL("main/pp7/everyday/assets/33ae6671.png", self.location).href,
            batBlack: new URL("main/pp7/everyday/assets/b83e670a.png", self.location).href,
            button: new URL("main/pp7/everyday/assets/9eef3557.png", self.location).href,
            pressed: new URL("main/pp7/everyday/assets/5897eb5d.png", self.location).href,
            crush: new URL("main/pp7/everyday/assets/5cf41270.png", self.location).href,
            mist: new URL("main/pp7/everyday/assets/b193c359.png", self.location).href,
            trap: new URL("main/pp7/everyday/assets/aec21901.png", self.location).href,
            dust: new URL("main/pp7/everyday/assets/6ff80912.png", self.location).href
        }
    }),
    IZ = Dd.extend({
        elements: a.elementsFromImages("wait", "bat"),
        onLoadComplete() {
            s.set(".e.bat", {
                x: 1200,
                y: 200,
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.bat", {
                visibility: "visible"
            }, .9).to(".e.bat", {
                x: 580,
                y: 450,
                duration: .1
            })
        },
        onStartProgress() {
            a.startHoldShake("wait")
        },
        onStopProgress() {
            a.stopHoldShake("wait")
        }
    }),
    PZ = Dd.extend({
        stepDuration: .35,
        elements: [{
            class: "bat-container",
            type: "container",
            children: a.elementsFromImages(["button", "up"], ["pressed", "down"])
        }],
        onLoadComplete() {
            s.set(".e.down", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("up", "down", .35)
        }
    }),
    UZ = Dd.extend({
        elements: [{
            class: "bat-container",
            type: "container",
            children: a.elementsFromImages("empty", "batBlack", "mist", "trap", "dust")
        }],
        onLoadComplete() {
            s.set(".e.empty, .e.batBlack, .e.mist, .e.dust", {
                visibility: "hidden"
            }), s.fromTo(".e.bat-container", {
                scale: .75
            }, {
                scale: 1,
                duration: .1,
                ease: "power2.in"
            }), s.set(".e.batBlack", {
                x: 400,
                y: 300
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.dust, .e.mist, .e.empty, .e.batBlack", {
                visibility: "visible"
            }, .2).set(".e.trap", {
                visibility: "hidden"
            }, .2).to(".e.dust", {
                scale: .8,
                duration: .2,
                ease: "back.out(3)"
            }, .2).to(".e.dust", {
                opacity: 0,
                duration: .2,
                ease: "power2.out"
            }, .2).to(".e.mist", {
                opacity: 0,
                duration: .2,
                ease: "power2.out"
            }, .2).to(".e.batBlack", {
                opacity: 0,
                duration: .3
            }, .2).to(".e.batBlack", {
                x: 800,
                y: 0,
                scale: .2,
                rotate: 30,
                duration: .4,
                ease: "power2.out"
            }, .2)
        }
    }),
    FZ = Dd.extend({
        elements: a.elementsFromImages("crush"),
        initializeTimeline() {
            const t = s.timeline({
                repeat: 8
            }).to(".e.crush", {
                scale: 1.1,
                duration: .05
            }).to(".e.crush", {
                scale: 1,
                duration: .3,
                ease: "elastic.out(1, 0.2)"
            });
            this.timeline.add(t)
        }
    }),
    jZ = E.extend({
        imageManifest: {
            fire: new URL("main/pp7/everyday/assets/f6aec0cd.png", self.location).href,
            shadows: new URL("main/pp7/everyday/assets/571683ee.png", self.location).href,
            family: new URL("main/pp7/everyday/assets/09eeca05.png", self.location).href
        }
    }),
    QZ = jZ.extend({
        elements: a.elementsFromImages("fire", "shadows", "family"),
        onLoadComplete() {
            s.set(".e.fire", {
                width: 1e3,
                height: 1e3
            }), s.set(".e.chant", {
                opacity: 0
            }), s.timeline({
                yoyo: !0,
                repeat: -1
            }).to(".e.fire", {
                scale: .9,
                opacity: .8,
                duration: .3
            }).to(".e.fire", {
                scale: 1,
                opacity: 1,
                duration: .3
            }).to(".e.fire", {
                scale: .8,
                opacity: .7,
                duration: .3
            }).to(".e.fire", {
                scale: 1.1,
                opacity: 1,
                duration: .3
            }).to(".e.fire", {
                scale: .9,
                opacity: .8,
                duration: .3
            }).to(".e.fire", {
                scale: 1,
                opacity: .9,
                duration: .3
            }), s.timeline({
                yoyo: !0,
                repeat: -1
            }).to(".e.shadows", {
                opacity: .98,
                duration: .3
            }).to(".e.shadows", {
                opacity: 1,
                duration: .3
            }).to(".e.shadows", {
                opacity: .96,
                duration: .3
            }).to(".e.shadows", {
                opacity: 1,
                duration: .3
            }).to(".e.shadows", {
                opacity: .98,
                duration: .3
            }).to(".e.shadows", {
                opacity: 1,
                duration: .3
            })
        }
    }),
    zZ = E.extend({
        imageManifest: {
            sticks: new URL("main/pp7/everyday/assets/26fdfa9b.png", self.location).href
        },
        sprites: {
            sticks: {
                key: "sticks",
                images: {
                    stick0: [0, 0, 180, 747],
                    stick1: [180, 0, 75, 747],
                    stick2: [255, 0, 140, 747],
                    stick3: [395, 0, 95, 747]
                }
            }
        }
    }),
    HZ = zZ.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("sticks", [
            ["stick0", null, [116, 410]],
            ["stick1", null, [116, 462]],
            ["stick2", null, [116, 430]],
            ["stick3", null, [116, 452]]
        ]),
        onLoadComplete() {
            s.set(".e.stick0", {
                x: -170,
                y: -200,
                rotate: -79
            }), s.set(".e.stick1", {
                x: -200,
                y: 10,
                rotate: 19
            }), s.set(".e.stick2", {
                x: 140,
                y: 210,
                rotate: 80
            }), s.set(".e.stick3", {
                x: 210,
                y: -110,
                rotate: -50
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.stick0", {
                x: 0,
                y: 0,
                rotate: 0
            }).to(".e.stick1", {
                x: 0,
                y: 0,
                rotate: 0
            }).to(".e.stick2", {
                x: 0,
                y: 0,
                rotate: 0
            }).to(".e.stick3", {
                x: 0,
                y: 0,
                rotate: 0
            }).to(".e.stick0, .e.stick1, .e.stick2, .e.stick3", {
                y: 300,
                opacity: 0,
                ease: "back.in(2)"
            })
        }
    }),
    NZ = E.extend({
        imageManifest: {
            hedge: new URL("main/pp7/everyday/assets/f04a9f31.png", self.location).href,
            hedgeFull: new URL("main/pp7/everyday/assets/31f448e1.png", self.location).href,
            leaf0: new URL("main/pp7/everyday/assets/82f447ef.png", self.location).href,
            leaf1: new URL("main/pp7/everyday/assets/14bcab5b.png", self.location).href
        }
    }),
    GZ = NZ.extend({
        stepDuration: .25,
        emitters: [],
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("hedge", "hedgeFull")
        }, {
            class: "leaves leaves0",
            type: "div",
            html: ""
        }, {
            class: "leaves leave1",
            type: "div",
            html: ""
        }, {
            type: "img",
            key: "leaf0",
            class: "leaf0"
        }, {
            type: "img",
            key: "leaf1",
            class: "leaf1"
        }],
        onLoadComplete() {
            s.set(".e.leaves", {
                width: 1e3,
                height: 1e3
            }), s.set(".e.leaf0, .e.leaf1", {
                visibility: "hidden"
            });
            for (let t = 0; t < 2; t++) this.emitters.push(a.addParticleEmitter({
                container: `leaves${t}`,
                image: `leaf${t}`,
                autoplay: !1,
                numberOfParticles: 10,
                restartOnProgress: !1,
                zIndex: 1,
                frequency: .005,
                settings: {
                    randomAngleRange: 359,
                    minSize: 70,
                    maxSize: 100,
                    force: 3,
                    gravity: 2,
                    boundaries: {
                        left: 500,
                        right: 500,
                        top: 300,
                        bottom: 300
                    }
                }
            }, this))
        },
        initializeTimeline() {
            this.timeline.to(".e.hedgeFull", {
                opacity: 0,
                ease: "power4.inOut"
            })
        },
        onDiscreteProgress() {
            a.squashOnce("c", .2, Math.random() < .5 ? "x" : "y"), this.emitters.forEach(t => t.restart()), setTimeout(() => {
                this.emitters.forEach(t => t.kill())
            }, 300)
        }
    }),
    Sd = E.extend({
        imageManifest: {
            dust: new URL("main/pp7/everyday/assets/2a9b9cd4.png", self.location).href,
            bench: new URL("main/pp7/everyday/assets/e8ad068e.png", self.location).href,
            sprite: new URL("main/pp7/everyday/assets/9e39ef64.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    rough: [0, 0, 730, 356],
                    smooth: [0, 357, 730, 356],
                    painted: [0, 714, 730, 356],
                    nail: [732, 0, 92, 298],
                    hammer: [730, 298, 339, 427]
                }
            }
        }
    }),
    XZ = Sd.extend({
        elements: [...a.elementsFromSprite("sprite", [
            ["rough", null, [322, 135]],
            ["smooth", null, [322, 135]]
        ]), ...a.elementsFromImages(["dust", "dust0", [425, 225]], ["dust", "dust1", [350, 300]], ["dust", "dust2", [275, 375]])],
        onLoadComplete() {
            s.set(".e.smooth", {
                opacity: 0
            }), s.set(".e.dust0", {
                opacity: 0
            }), s.set(".e.dust1", {
                opacity: 0
            }), s.set(".e.dust2", {
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.smooth", {
                    opacity: 1,
                    duration: 6
                }),
                e = s.timeline().to(".e.dust0", {
                    x: 100,
                    y: -100,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust0", {
                    x: 200,
                    y: -200,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust0", {
                    x: 0,
                    y: 0
                }).fillTime(1).to(".e.dust0", {
                    x: -50,
                    y: 50,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust0", {
                    x: -100,
                    y: 100,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust0", {
                    x: 0,
                    y: 0
                }).fillTime(1),
                n = s.timeline().fillTime(1).to(".e.dust1", {
                    x: -100,
                    y: 100,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust1", {
                    x: -200,
                    y: 200,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust1", {
                    x: 0,
                    y: 0
                }).fillTime(1).to(".e.dust1", {
                    x: 50,
                    y: -50,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust1", {
                    x: 100,
                    y: -100,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust1", {
                    x: 0,
                    y: 0
                }),
                i = s.timeline().fillTime(.5).to(".e.dust2", {
                    x: 100,
                    y: -100,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust2", {
                    x: 200,
                    y: -200,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust2", {
                    x: 0,
                    y: 0
                }).fillTime(1).to(".e.dust2", {
                    x: -50,
                    y: 50,
                    ease: "none",
                    opacity: 1
                }).to(".e.dust2", {
                    x: -100,
                    y: 100,
                    ease: "none",
                    opacity: 0
                }).set(".e.dust2", {
                    x: 0,
                    y: 0
                }).fillTime(.5);
            this.timeline.add(t), this.timeline.add(e, 0), this.timeline.add(n, 0), this.timeline.add(i, 0)
        }
    }),
    Tb = Sd.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["smooth", null, [322, 135]],
                ["nail", "nail0", [276, 295]],
                ["nail", "nail1", [182, 457]],
                ["nail", "nail2", [88, 610]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.nail0", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            }).to(".e.nail1", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            }).to(".e.nail2", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.c", {
                scale: .85,
                ease: "back.in(2)",
                duration: .15
            }).to(".e.c", {
                scale: 1,
                ease: "back.out(2)",
                duration: .15
            })
        }
    }),
    YZ = Sd.extend({
        elements: a.elementsFromSprite("sprite", [
            ["smooth", null, [322, 135]],
            ["painted", null, [322, 135]]
        ]),
        onLoadComplete() {
            s.set(".e.painted", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.painted", {
                opacity: 1
            })
        }
    }),
    KZ = Sd.extend({
        elements: a.elementsFromImages("bench")
    }),
    Dm = E.extend({
        imageManifest: {
            lawn: new URL("main/pp7/everyday/assets/c3e540dc.png", self.location).href,
            puddle: new URL("main/pp7/everyday/assets/9f85007e.png", self.location).href,
            sign: new URL("main/pp7/everyday/assets/ea276bbb.png", self.location).href
        }
    }),
    WZ = Dm.extend({
        elements: [{
            class: "lawn",
            type: "img",
            key: "lawn"
        }, {
            class: "particles",
            type: "div"
        }],
        onLoadComplete() {
            s.set(".e.particles", {
                visibility: "hidden",
                width: 1e3,
                height: 1e3
            }), s.set(".e.lawn", {
                scale: 1.15
            }), a.addParticleEmitter({
                container: "particles",
                numberOfParticles: 15,
                autoplay: !0,
                restartOnProgress: !1,
                zIndex: 1,
                settings: {
                    frequency: .05,
                    boundaries: {
                        left: 500,
                        right: 500,
                        top: 200,
                        bottom: 200
                    },
                    from: {
                        backgroundColor: "#0085FF",
                        border: "3px solid black",
                        opacity: 1,
                        duration: .001
                    },
                    to: {
                        duration: .36,
                        opacity: 0,
                        ease: "power2.in"
                    },
                    minSize: 15,
                    maxSize: 20,
                    angle: -90,
                    force: 2,
                    gravity: 2,
                    randomAngle: !0,
                    randomAngleRange: 120
                }
            }, this)
        },
        onStartProgress() {
            a.startHoldShake("lawn"), s.set(".e.particles", {
                visibility: "visible"
            })
        },
        onStopProgress() {
            a.stopHoldShake("lawn"), s.set(".e.particles", {
                visibility: "hidden"
            })
        }
    }),
    JZ = Dm.extend({
        elements: a.elementsFromImages("lawn", ["puddle", null, [60, 50]]),
        onLoadComplete() {
            s.set(".e.lawn", {
                scale: 1.15
            }), s.set(".e.puddle", {
                opacity: 0,
                scale: .2
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.puddle", {
                opacity: 1,
                duration: .2
            }).to(".e.puddle", {
                scale: .7
            }, 0)
        }
    }),
    ZZ = Dm.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("lawn", ["puddle", null, [60, 50]], ["sign", null, [170, 270]]),
        onLoadComplete() {
            s.set(".e.lawn", {
                scale: 1.15
            }), s.set(".e.puddle", {
                scale: .7
            }), s.set(".e.sign", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                opacity: 1,
                duration: 1
            }).to(".e.sign", {
                x: -120,
                scale: .8,
                duration: 1
            }).to(".e.sign", {
                y: 120,
                duration: .5,
                ease: "back.in(4)"
            }).to(".e.lawn, .e.puddle", {
                x: 10,
                y: 10,
                duration: .1
            }).to(".e.lawn, .e.puddle", {
                x: -8,
                y: 0,
                duration: .1
            }).to(".e.lawn, .e.puddle", {
                x: 6,
                y: -6,
                duration: .1
            }).to(".e.lawn, .e.puddle", {
                x: -4,
                y: -4,
                duration: .1
            }).to(".e.lawn, .e.puddle", {
                x: 0,
                y: 2,
                duration: .1
            })
        }
    }),
    Sm = E.extend({
        imageManifest: {
            arm: new URL("main/pp7/everyday/assets/34228960.png", self.location).href,
            grass: new URL("main/pp7/everyday/assets/c721f928.png", self.location).href,
            sun: new URL("main/pp7/everyday/assets/cb968720.png", self.location).href,
            sunBack: new URL("main/pp7/everyday/assets/723966b2.png", self.location).href
        },
        sprites: {
            arm: {
                key: "arm",
                images: {
                    arm: [0, 0, 490, 440],
                    bump: [490, 0, 100, 80]
                }
            }
        }
    }),
    _Z = Sm.extend({
        elements: a.elementsFromImages("grass")
    }),
    $Z = Sm.extend({
        elements: a.elementsFromImages(["sunBack", "sun0"], ["sunBack", "sun1"], "sun"),
        onLoadComplete() {
            s.set(".e.sun0", {
                opacity: .6,
                rotate: 73,
                scale: .9
            }), s.set(".e.sun1", {
                opacity: .6,
                rotate: 53,
                scale: .7
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sun0", {
                scale: .8,
                ease: "none"
            }).to(".e.sun1", {
                scale: .8,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .7,
                ease: "none"
            }).to(".e.sun1", {
                scale: .6,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .6,
                ease: "none"
            }).to(".e.sun1", {
                scale: .7,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .7,
                ease: "none"
            }).to(".e.sun1", {
                scale: .8,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .8,
                ease: "none"
            }).to(".e.sun1", {
                scale: .8,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .7,
                ease: "none"
            }).to(".e.sun1", {
                scale: .6,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .6,
                ease: "none"
            }).to(".e.sun1", {
                scale: .7,
                ease: "none"
            }, "<").to(".e.sun0", {
                scale: .7,
                ease: "none"
            }).to(".e.sun1", {
                scale: .8,
                ease: "none"
            }, "<")
        }
    }),
    e_ = Sm.extend({
        elements: a.elementsFromSprite("arm", [
            ["arm", null, [280, 225]],
            ["bump", null, [480, 360]]
        ]),
        initializeTimeline() {
            this.timeline.to(".e.bump", {
                scale: 1.1
            }).to(".e.bump", {
                scale: .9
            }).to(".e.bump", {
                scale: 1.1
            }).to(".e.bump", {
                scale: .9
            }).to(".e.bump", {
                scale: 1.1
            }).to(".e.bump", {
                scale: .9
            }).to(".e.bump", {
                scale: 1.1
            }).to(".e.bump", {
                scale: .9
            })
        }
    }),
    t_ = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/c052bdf3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    stem: [0, 0, 200, 580],
                    leaf0: [0, 580, 244, 145],
                    leaf1: [0, 725, 244, 145],
                    leaf2: [0, 870, 122, 80],
                    leaf3: [122, 870, 122, 80],
                    pedal0: [244, 750, 208, 210],
                    pedal1: [852, 785, 235, 190],
                    pedal2: [1086, 785, 232, 208],
                    pedal3: [1320, 628, 269, 178],
                    pedal4: [244, 504, 208, 246],
                    bud0: [200, 252, 252, 252],
                    bud1: [200, 0, 252, 252],
                    tent0: [1301, 260, 291, 368],
                    tent1: [1298, 0, 353, 260],
                    tent2: [890, 0, 375, 280],
                    tent3: [892, 278, 366, 313],
                    tent4: [858, 591, 432, 194],
                    tooth0: [452, 0, 200, 200],
                    tooth1: [452, 200, 200, 200],
                    tooth2: [452, 400, 200, 200],
                    tooth3: [452, 600, 200, 200],
                    tooth4: [452, 800, 200, 200],
                    tooth5: [652, 0, 200, 200],
                    tooth6: [652, 200, 200, 200],
                    tooth7: [652, 400, 200, 200],
                    tooth8: [652, 600, 200, 200],
                    tooth9: [652, 800, 200, 200]
                }
            }
        }
    }),
    n_ = t_.extend({
        stepDuration: .25,
        shouldWiggle: !1,
        attachedLeaves: [!0, !0, !0, !0],
        elements: [{
            class: "c-stem",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["leaf0", null, [651, 522]],
                ["leaf1", null, [675, 270]],
                ["leaf2", null, [762, 533]],
                ["leaf3", null, [789, 347]],
                ["stem", null, [430, 428]]
            ])
        }, {
            class: "c-tenticles",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["tent0", null, [13, 420]],
                ["tent1", null, [518, 110]],
                ["tent2", null, [160, 40]],
                ["tent3", null, [488, 530]],
                ["tent4", null, [250, 551]]
            ])
        }, {
            class: "c-pedals",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["pedal0", "pedal pedal0", [205, 307]],
                ["pedal1", "pedal pedal1", [385, 219]],
                ["pedal2", "pedal pedal2", [200, 488]],
                ["pedal3", "pedal pedal3", [379, 509]],
                ["pedal4", "pedal pedal4", [463, 392]]
            ])
        }, {
            class: "c-bud",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["bud0", null, [294, 374]],
                ["tooth0", "tooth tooth0", [320, 400]],
                ["tooth1", "tooth tooth1", [320, 400]],
                ["tooth2", "tooth tooth2", [320, 400]],
                ["tooth3", "tooth tooth3", [320, 400]],
                ["tooth4", "tooth tooth4", [320, 400]],
                ["tooth5", "tooth tooth5", [320, 400]],
                ["tooth6", "tooth tooth6", [320, 400]],
                ["tooth7", "tooth tooth7", [320, 400]],
                ["tooth8", "tooth tooth8", [320, 400]],
                ["tooth9", "tooth tooth9", [320, 400]],
                ["bud1", null, [294, 374]]
            ])
        }],
        initializeTimeline() {
            this.initBud(), this.initPedals(), this.initTenticles(), this.initStem(), s.timeline({
                repeat: -1
            }).to(".e.c-tenticles, .e.c-pedals, .e.c-bud", {
                x: 15,
                ease: "none"
            }).to(".e.c-tenticles, .e.c-pedals, .e.c-bud", {
                x: 0,
                ease: "none"
            }).to(".e.c-tenticles, .e.c-pedals, .e.c-bud", {
                x: -15,
                ease: "none"
            }).to(".e.c-tenticles, .e.c-pedals, .e.c-bud", {
                x: 0,
                ease: "none"
            })
        },
        initBud() {
            const t = s.timeline().fillTime(.5).to(".e.tooth0", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth4", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth7", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth2", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth9", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth5", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth1", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth6", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth3", {
                opacity: 0,
                duration: .05
            }).to(".e.tooth8", {
                opacity: 0,
                duration: .05
            });
            this.timeline.add(t, 0), s.set(".e.c-bud", {
                transformOrigin: "500px 419px"
            }), s.timeline({
                repeat: -1,
                yoyo: !0,
                ease: "power2.inOut"
            }).to(".e.tooth", {
                rotate: 60,
                duration: 6
            }).to(".e.tooth", {
                rotate: -60,
                duration: 6
            }), s.timeline({
                repeat: -1,
                yoyo: !0,
                ease: "power1.inOut"
            }).to(".e.tooth", {
                scale: 1.15,
                duration: .4
            }).to(".e.tooth", {
                scale: .95,
                duration: .3
            }).to(".e.tooth", {
                scale: 1.1,
                duration: .6
            }).to(".e.tooth", {
                scale: .97,
                duration: .2
            })
        },
        initPedals() {
            s.set(".e.c-pedals", {
                transformOrigin: "500px 419px"
            });
            const t = s.timeline().to(".e.c-pedals", {
                scale: .8
            });
            this.timeline.add(t, 0), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.c-pedals", {
                rotate: 10,
                duration: 2,
                ease: "power2.inOut"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.pedal", {
                scale: 1.05,
                duration: .7,
                ease: "power3.inOut"
            })
        },
        initTenticles() {
            s.set(".e.c-tenticles", {
                transformOrigin: "506px 442px"
            });
            const t = s.timeline().to(".e.c-tenticles", {
                scale: .6,
                ease: "none"
            });
            this.timeline.add(t, 0), s.set(".e.tent0", {
                transformOrigin: "84px 328px"
            }), s.set(".e.tent1", {
                transformOrigin: "310px 55px"
            }), s.set(".e.tent2", {
                transformOrigin: "365px 223px"
            }), s.set(".e.tent3", {
                transformOrigin: "110px 98px"
            }), s.set(".e.tent4", {
                transformOrigin: "77px 158px"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.tent0", {
                scaleY: 1.2,
                skewX: 0,
                duration: 3,
                ease: "power2.inOut"
            }).to(".e.tent0", {
                scaleY: 1,
                skewX: 10,
                duration: 1,
                ease: "power1.inOut"
            }).to(".e.tent0", {
                scaleY: 1.1,
                skewX: 0,
                duration: 2,
                ease: "power2.inOut"
            }).to(".e.tent0", {
                scaleY: 1,
                skewX: -7,
                duration: 1,
                ease: "power1.inOut"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.tent1", {
                scaleX: 1.1,
                skewY: 5,
                duration: 2,
                ease: "power2.inOut"
            }).to(".e.tent1", {
                scaleX: 1,
                skewY: -6,
                duration: 2,
                ease: "power3.inOut"
            }).to(".e.tent1", {
                scaleX: 1.2,
                skewY: 0,
                duration: 1,
                ease: "power1.inOut"
            }).to(".e.tent1", {
                scaleX: 1,
                skewY: 0,
                duration: 1,
                ease: "power1.inOut"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.tent2", {
                scaleX: 1,
                skewY: 0,
                duration: 1,
                ease: "power2.inOut"
            }).to(".e.tent2", {
                scaleX: 1.2,
                skewY: -10,
                duration: 3,
                ease: "power2.inOut"
            }).to(".e.tent2", {
                scaleX: 1.2,
                skewY: 2,
                duration: 1,
                ease: "power1.inOut"
            }).to(".e.tent2", {
                scaleX: .95,
                skewY: 0,
                duration: 2,
                ease: "power2.inOut"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.tent3", {
                scaleX: 1.1,
                skewY: 0,
                duration: 2,
                ease: "power2.inOut"
            }).to(".e.tent3", {
                scaleX: .95,
                skewY: 5,
                duration: 1,
                ease: "power2.inOut"
            }).to(".e.tent3", {
                scaleX: 1,
                skewY: 1,
                duration: 1,
                ease: "power1.inOut"
            }).to(".e.tent3", {
                scaleX: 1,
                skewY: -5,
                duration: 4,
                ease: "power3.inOut"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.tent4", {
                scaleX: 1,
                skewY: 2,
                duration: 3,
                ease: "power2.inOut"
            }).to(".e.tent4", {
                scaleX: 1.1,
                skewY: 0,
                duration: 3,
                ease: "power2.inOut"
            }).to(".e.tent4", {
                scaleX: 1,
                skewY: 10,
                duration: 2,
                ease: "power1.inOut"
            }).to(".e.tent4", {
                scaleX: 1,
                skewY: -10,
                duration: 2,
                ease: "power2.inOut"
            })
        },
        initStem() {
            s.set(".e.c-stem", {
                transformOrigin: "bottom center"
            }), s.set(".e.leaf0", {
                transformOrigin: "48px 63px"
            }), s.set(".e.leaf1", {
                transformOrigin: "200px 75px"
            }), s.set(".e.leaf2", {
                transformOrigin: "31px 34px"
            }), s.set(".e.leaf3", {
                transformOrigin: "94px 21px"
            }), s.timeline({
                repeat: -1
            }).to(".e.c-stem", {
                skewX: -4,
                ease: "none"
            }).to(".e.c-stem", {
                skewX: 0,
                ease: "none"
            }).to(".e.c-stem", {
                skewX: 4,
                ease: "none"
            }).to(".e.c-stem", {
                skewX: 0,
                ease: "none"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.leaf0", {
                rotate: 6,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 4,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 6,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 8,
                duration: .3
            }).to(".e.leaf0", {
                rotate: 0,
                duration: .3
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.leaf1", {
                rotate: -4,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 7,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 8,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 0,
                duration: .3
            }).to(".e.leaf1", {
                rotate: -5,
                duration: .3
            }).to(".e.leaf1", {
                rotate: 0,
                duration: .3
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.leaf2", {
                rotate: 4,
                duration: .2
            }).to(".e.leaf2", {
                rotate: 0,
                duration: .2
            }).to(".e.leaf2", {
                rotate: -2,
                duration: .2
            }).to(".e.leaf2", {
                rotate: 0,
                duration: .2
            }).to(".e.leaf2", {
                rotate: 4,
                duration: .2
            }).to(".e.leaf2", {
                rotate: 0,
                duration: .2
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.leaf3", {
                rotate: 3,
                duration: .2
            }).to(".e.leaf3", {
                rotate: 0,
                duration: .2
            }).to(".e.leaf3", {
                rotate: -3,
                duration: .2
            }).to(".e.leaf3", {
                rotate: 0,
                duration: .2
            }).to(".e.leaf3", {
                rotate: -3,
                duration: .2
            })
        },
        onDiscreteProgress(t) {
            s.globalTimeline.timeScale(1 + t / 50), t > 20 && this.attachedLeaves[2] && (this.attachedLeaves[2] = !1, s.to(".e.leaf2", {
                x: 30,
                y: 200,
                onComplete() {
                    s.killTweensOf(".e.leaf2")
                }
            })), t > 40 && this.attachedLeaves[1] && (this.attachedLeaves[1] = !1, s.to(".e.leaf1", {
                x: -30,
                y: 280,
                onComplete() {
                    s.killTweensOf(".e.leaf1")
                }
            })), t > 60 && this.attachedLeaves[3] && (this.attachedLeaves[3] = !1, s.to(".e.leaf3", {
                x: -50,
                y: 200,
                onComplete() {
                    s.killTweensOf(".e.leaf3")
                }
            })), t > 80 && this.attachedLeaves[0] && (this.attachedLeaves[0] = !1, s.to(".e.leaf0", {
                x: 50,
                y: 300,
                onComplete() {
                    s.killTweensOf(".e.leaf0")
                }
            }))
        }
    }),
    Td = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/eeab2077.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    search0: [1267, 1215, 209, 83, 295, 469],
                    search1: [1030, 1215, 227, 89, 294, 469],
                    search2: [1253, 760, 279, 104, 292, 469],
                    search3: [954, 760, 289, 105, 293, 469],
                    search4: [1464, 653, 273, 96, 298, 468],
                    pop0: [1030, 875, 452, 330, 153, 433],
                    pop1: [1464, 10, 433, 328, 180, 376],
                    pop2: [1464, 348, 403, 295, 247, 477],
                    squirrel0: [10, 903, 500, 365, 147, 377],
                    squirrel1: [520, 903, 500, 365, 147, 377],
                    squirrel2: [954, 10, 500, 365, 147, 377],
                    squirrel3: [954, 385, 500, 365, 147, 377],
                    computer: [10, 10, 934, 883, 41, 30]
                }
            }
        }
    }),
    i_ = Td.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["computer", "search0", "search1", "search2", "search3", "search4"]),
        onLoadComplete() {
            s.set(".e.search0, .e.search1, .e.search2, .e.search3, .e.search4", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("search4", "search0")).add(a.squashTransition("search0", "search1")).add(a.squashTransition("search1", "search2")).add(a.squashTransition("search2", "search3")).add(a.squashTransition("search3", "search4"))
        }
    }),
    s_ = Td.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["computer", "search4", "squirrel0", "pop2", "pop1", "pop0"]),
        onLoadComplete() {
            s.set(".e.squirrel0, .e.pop2, .e.pop1, .e.pop0", {
                scale: .7,
                hidden: !0
            }), s.timeline().set(".e.squirrel0", {
                hidden: !1
            }).to(".e.squirrel0", {
                scale: 1,
                duration: .15,
                ease: "back.out(2)"
            }).set(".e.pop2", {
                hidden: !1
            }).to(".e.pop2", {
                scale: 1,
                duration: .15,
                ease: "back.out(2)"
            }, .1).set(".e.pop1", {
                hidden: !1
            }).to(".e.pop1", {
                scale: 1,
                duration: .15,
                ease: "back.out(2)"
            }, .2).set(".e.pop0", {
                hidden: !1
            }).to(".e.pop0", {
                scale: 1,
                duration: .15,
                ease: "back.out(2)"
            }, .3)
        },
        initializeTimeline() {
            this.timeline.to(".e.pop0", {
                scale: .6,
                duration: 1,
                ease: "back.in(2)"
            }, 0).set(".e.pop0", {
                hidden: !0
            }, .99).to(".e.pop1", {
                scale: .6,
                duration: 1,
                ease: "back.in(2)"
            }, 1).set(".e.pop1", {
                hidden: !0
            }, 1.99).to(".e.pop2", {
                scale: .6,
                duration: 1,
                ease: "back.in(2)"
            }, 2).set(".e.pop2", {
                hidden: !0
            }, 2.99)
        }
    }),
    o_ = Td.extend({
        elements: a.elementsFromSprite("sprite", ["computer", "squirrel0"]),
        onLoadComplete() {
            a.startShake("squirrel0", 0, 3, 1)
        }
    }),
    a_ = Td.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["computer", "squirrel0", "squirrel1", "squirrel2", "squirrel3"]),
        onLoadComplete() {
            s.set(".e.squirrel1, .e.squirrel2, .e.squirrel3", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("squirrel0", "squirrel1")).add(a.squashTransition("squirrel1", "squirrel2")).add(a.squashTransition("squirrel2", "squirrel3"))
        }
    }),
    Tm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/9442c2dc.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    sign: [415, 10, 841, 290, 23, 72],
                    stand: [683, 311, 810, 850, 94, 77],
                    front: [190, 10, 215, 262, 662, 195],
                    pour: [10, 310, 663, 845, 46, 271],
                    liquid: [10, 10, 170, 212, 706, 216],
                    back: [1266, 10, 215, 291, 633, 195]
                }
            }
        }
    }),
    r_ = Tb,
    V_ = Tm.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["stand", "sign"]),
        onLoadComplete() {
            s.set(".e.sign", {
                opacity: 0,
                rotate: 80,
                transformOrigin: "top left"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sign", {
                x: 110,
                y: 40,
                opacity: 1
            }).to(".e.sign", {
                x: 0,
                y: 0,
                rotate: 0
            })
        }
    }),
    Eb = Tm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["back", "liquid", "pour", "front"])
        }],
        onLoadComplete() {
            s.set(".e.liquid", {
                y: 135,
                scale: .9,
                clipPath: "inset(0% 0% 70% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.liquid", {
                y: 0,
                scale: 1,
                clipPath: "inset(0% 0% 0% 0%)"
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    l_ = Tm.extend({
        elements: a.elementsFromSprite("sprite", ["stand", "sign"])
    }),
    Ed = E.extend({
        imageManifest: {
            lemonade: new URL("main/pp7/everyday/assets/50241eff.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "lemonade",
                images: {
                    shine: [799, 911, 311, 311, 421, 19],
                    coin: [10, 766, 779, 660, 234, 144],
                    hand: [10, 10, 896, 746, 96, 70],
                    friendly: [916, 10, 563, 891, 44, 188]
                }
            }
        }
    }),
    A_ = Ed.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["friendly"]),
        onDiscreteProgress() {
            a.squashOnce("friendly", .25)
        }
    }),
    c_ = Eb,
    d_ = Ed.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["hand"]),
        onLoadComplete() {
            s.set(".e.hand", {
                x: 150,
                y: 50,
                scale: .8,
                rotate: -45
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.hand", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0,
                ease: "back.in(2)"
            })
        }
    }),
    p_ = Ed.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["coin"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.coin", {
                scaleY: .9,
                rotate: 10
            }).to(".e.coin", {
                scaleY: 1,
                rotate: -10
            }).to(".e.coin", {
                scaleY: .9,
                rotate: 10
            }).to(".e.coin", {
                scaleY: 1.1,
                rotate: -10
            })
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    h_ = Ed.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["coin", "shine"])
        }],
        onLoadComplete() {
            s.set(".e.shine", {
                opacity: 0
            }), s.fromTo(".e.c", {
                scaleY: 1.1,
                rotate: -10
            }, {
                scaleY: 1,
                rotate: 0,
                duration: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.shine", {
                rotate: -200,
                duration: 3
            }, 0).to(".e.shine", {
                opacity: 1,
                duration: .75
            }, 0).to(".e.shine", {
                x: 0,
                y: -30,
                duration: .5
            }, 0).to(".e.shine", {
                x: -20,
                y: -20,
                duration: .5
            }, .5).to(".e.shine", {
                x: -10,
                y: -10,
                duration: .5
            }, 1).to(".e.shine", {
                x: 0,
                y: 0,
                duration: .5
            }, 1.5).to(".e.shine", {
                x: 10,
                y: 10,
                duration: .5
            }, 2).to(".e.shine", {
                x: 20,
                y: 20,
                duration: .5
            }, 2.5).to(".e.shine", {
                opacity: 0,
                duration: .75
            }, 2.25).fillTime(5)
        }
    }),
    Ld = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/318822df.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    footLeft: [0, 0, 202, 336],
                    footRight: [202, 0, 211, 336],
                    cloud1: [413, 0, 395, 336],
                    cloud0: [552, 1134, 102, 96],
                    ghost: [552, 1230, 219, 200],
                    devil: [0, 336, 434, 651],
                    glass: [434, 336, 461, 798],
                    fossil: [0, 1036, 552, 655]
                }
            }
        },
        printElements: [{
            class: "prints",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["footLeft", null, [700, 249]],
                ["footRight", null, [500, 545]],
                ["footLeft", null, [250, 249]],
                ["footRight", null, [150, 545]]
            ])
        }, {
            class: "zoomed",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["footLeft", null, [700, 249]],
                ["footRight", null, [500, 545]],
                ["footLeft", null, [250, 249]],
                ["footRight", null, [150, 545]]
            ])
        }, ...a.elementsFromSprite("sprite", [
            ["glass", null, [101, 270]]
        ])]
    }),
    u_ = Ld.extend({
        stepDuration: .3,
        elements() {
            return this.printElements
        },
        onLoadComplete() {
            s.set(".e.glass", {
                rotate: -60,
                scale: .8
            }), s.set(".e.prints, .e.zoomed", {
                opacity: 0,
                rotate: 20
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.glass", {
                rotate: 0,
                scale: 1
            }).to(".e.prints", {
                opacity: 1
            }, 0)
        }
    }),
    m_ = Ld.extend({
        elements() {
            return this.printElements
        },
        onLoadComplete() {
            s.set(".e.prints, .e.zoomed", {
                rotate: 20
            }), s.set(".e.zoomed", {
                rotate: 20,
                backgroundColor: "#FFC6BC",
                clipPath: "inset(19% 41% 52% 29%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.glass", {
                rotate: 10,
                scale: 1.3
            }).to(".e.zoomed", {
                scale: 1.4,
                clipPath: "inset(20% 39% 54% 33%)"
            }, "<").to(".e.glass", {
                x: -220,
                y: 20,
                rotate: -10
            }).to(".e.zoomed", {
                clipPath: "inset(28% 59% 45% 15%)"
            }, "<").to(".e.glass", {
                x: -310,
                y: 460
            }).to(".e.zoomed", {
                clipPath: "inset(61% 54% 12% 16%)"
            }, "<").to(".e.glass", {
                x: 110,
                y: 180,
                rotate: 10
            }).to(".e.zoomed", {
                clipPath: "inset(30% 28% 44% 45%)"
            }, "<")
        }
    }),
    f_ = Ld.extend({
        elements() {
            return [...this.printElements, ...a.elementsFromSprite("sprite", [
                ["fossil", null, [137, 216]]
            ])]
        },
        onLoadComplete() {
            s.set(".e.glass", {
                x: 110,
                y: 180,
                rotate: 10,
                scale: 1.3
            }), s.set(".e.prints", {
                rotate: 20
            }), s.set(".e.zoomed", {
                opacity: 0
            }), s.set(".e.fossil", {
                opacity: 0,
                rotate: 13
            }), s.fromTo(".e.glass", {
                x: 110,
                y: 180,
                rotate: 10,
                scale: 1.3
            }, {
                x: 500,
                y: -100,
                opacity: 0,
                rotate: 200,
                duration: .3
            }), s.fromTo(".e.prints", {
                rotate: 20
            }, {
                x: 200,
                y: 100,
                rotate: 0,
                scale: 1.3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.fossil", {
                opacity: 1
            })
        }
    }),
    q_ = Ld.extend({
        elements: a.elementsFromSprite("sprite", [
            ["devil", null, [300, 425]],
            ["cloud0", null, [395, 440]],
            ["cloud1", null, [95, 130]],
            ["ghost", null, [155, 225]]
        ]),
        onLoadComplete() {
            s.fromTo(".e.ghost", {
                opacity: 0
            }, {
                opacity: 1,
                delay: .35,
                duration: .5
            }), s.fromTo(".e.cloud0", {
                x: 50,
                y: 50,
                opacity: 0
            }, {
                x: 0,
                y: 0,
                opacity: 1,
                duration: .35
            }), s.fromTo(".e.cloud1", {
                x: 75,
                y: 75,
                opacity: 0
            }, {
                x: 0,
                y: 0,
                opacity: 1,
                delay: .15,
                duration: .35
            })
        }
    }),
    g_ = E.extend({
        imageManifest: {
            ghost: new URL("main/pp7/everyday/assets/d73ae475.png", self.location).href
        }
    }),
    y_ = g_.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("ghost"),
        onLoadComplete() {
            s.set(".e.ghost", {
                scale: .4
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.ghost", {
                scale: 1.1,
                ease: "power2.in"
            })
        }
    }),
    Em = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/32349092.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    paper0: [0, 0, 674, 698],
                    paper1: [674, 0, 673, 698],
                    paper2: [0, 698, 674, 698],
                    paperSig: [674, 698, 673, 698],
                    hat: [0, 1396, 765, 604]
                }
            }
        }
    }),
    b_ = Em.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["paperSig", null, [151, 163]],
            ["paper0", null, [151, 163]],
            ["paper1", null, [151, 163]],
            ["paper2", null, [151, 163]],
            ["paper0", "paper3", [151, 163]]
        ]),
        onLoadComplete() {
            s.set(".e.paperSig", {
                y: -80,
                x: -100,
                rotate: 5
            }), s.set(".e.paper0", {
                y: -40,
                x: -50,
                rotate: 5
            }), s.set(".e.paper1", {
                y: 0,
                x: 0,
                rotate: 5
            }), s.set(".e.paper2", {
                y: 40,
                x: 50,
                rotate: 5
            }), s.set(".e.paper3", {
                y: 80,
                x: 100,
                rotate: 5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paperSig", {
                y: -40,
                x: -50,
                duration: 1
            }, 0).to(".e.paper0", {
                y: 0,
                x: 0,
                duration: 1
            }, 0).to(".e.paper1", {
                y: 40,
                x: 50,
                duration: 1
            }, 0).to(".e.paper2", {
                y: 80,
                x: 100,
                duration: 1
            }, 0).to(".e.paper3", {
                x: 350,
                duration: .5
            }, 0).set(".e.paper3", {
                zIndex: -1
            }, .5).to(".e.paper3", {
                y: -80,
                x: -100,
                duration: .5
            }, .5).to(".e.paperSig", {
                y: 0,
                x: 0,
                duration: 1
            }, 1).to(".e.paper0", {
                y: 40,
                x: 50,
                duration: 1
            }, 1).to(".e.paper1", {
                y: 80,
                x: 100,
                duration: 1
            }, 1).to(".e.paper2", {
                x: 350,
                duration: .5
            }, 1).set(".e.paper2", {
                zIndex: -1
            }, 1.5).to(".e.paper2", {
                y: -80,
                x: -100,
                duration: .5
            }, 1.5).to(".e.paper3", {
                y: -40,
                x: -50,
                duration: 1
            }, 1).to(".e.paperSig", {
                y: 40,
                x: 50,
                duration: 1
            }, 2).to(".e.paper0", {
                y: 80,
                x: 100,
                duration: 1
            }, 2).to(".e.paper1", {
                x: 350,
                duration: .5
            }, 2).set(".e.paper1", {
                zIndex: -1
            }, 2.5).to(".e.paper1", {
                y: -80,
                x: -100,
                duration: .5
            }, 2.5).to(".e.paper2", {
                y: -40,
                x: -50,
                duration: 1
            }, 2).to(".e.paper3", {
                y: 0,
                x: 0,
                duration: 1
            }, 2).to(".e.paperSig", {
                y: 80,
                x: 100,
                duration: 1
            }, 3).to(".e.paper0", {
                x: 350,
                duration: .5
            }, 3).set(".e.paper0", {
                zIndex: -1
            }, 3.5).to(".e.paper0", {
                y: -80,
                x: -100,
                duration: .5
            }, 3.5).to(".e.paper1", {
                y: -40,
                x: -50,
                duration: 1
            }, 3).to(".e.paper2", {
                y: 0,
                x: 0,
                duration: 1
            }, 3).to(".e.paper3", {
                y: 40,
                x: 50,
                duration: 1
            }, 3)
        }
    }),
    v_ = Em.extend({
        elements: a.elementsFromSprite("sprite", [
            ["paper0", null, [151, 163]],
            ["paper1", null, [151, 163]],
            ["paper2", null, [151, 163]],
            ["paper0", "paper3", [151, 163]],
            ["paperSig", null, [151, 163]]
        ]),
        onLoadComplete() {
            s.set(".e.paper0", {
                y: -80,
                x: -100,
                rotate: 5
            }), s.set(".e.paper1", {
                y: -40,
                x: -50,
                rotate: 5
            }), s.set(".e.paper2", {
                y: 0,
                x: 0,
                rotate: 5
            }), s.set(".e.paper3", {
                y: 40,
                x: 50,
                rotate: 5
            }), s.set(".e.paperSig", {
                y: 80,
                x: 100,
                rotate: 5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.paper0, .e.paper1, .e.paper2, .e.paper3", {
                opacity: 0
            }).to(".e.paperSig", {
                x: 0,
                y: 0,
                scale: 1.2
            }, 0)
        }
    }),
    w_ = Em.extend({
        elements: a.elementsFromSprite("sprite", [
            ["hat", null, [198, 117]]
        ])
    }),
    x_ = E.extend({
        imageManifest: {
            shh: new URL("main/pp7/everyday/assets/8071976b.png", self.location).href
        }
    }),
    k_ = x_.extend({
        elements: a.elementsFromImages("shh")
    }),
    Lb = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/926658ee.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    mask: [0, 0, 610, 912],
                    string: [610, 701, 390, 264],
                    man: [610, 0, 930, 701],
                    face: [1e3, 701, 271, 264]
                }
            }
        }
    }),
    C_ = Lb.extend({
        stepDuration: .65,
        elements: a.elementsFromSprite("sprite", [
            ["man", null, [127, 35]],
            ["string", null, [220, 295]],
            ["mask", null, [-85, 55]]
        ]),
        onLoadComplete() {
            s.set(".e.mask", {
                x: 100,
                y: -100,
                scale: .5
            }), s.set(".e.string", {
                x: 100,
                y: -100,
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mask", {
                x: 0,
                y: -75,
                ease: "power2."
            }).to(".e.mask", {
                x: 100,
                y: -100,
                duration: .25
            }).to(".e.mask", {
                x: -75,
                y: -100,
                ease: "power2."
            }).to(".e.mask", {
                x: 100,
                y: -100,
                duration: .25
            }).to(".e.mask", {
                x: -100,
                y: -50,
                ease: "power2."
            }).to(".e.mask", {
                x: 100,
                y: -100,
                duration: .25
            }).to(".e.mask", {
                x: 0,
                y: -75,
                ease: "power2."
            }).to(".e.mask", {
                x: 100,
                y: -100,
                duration: .25
            }).to(".e.mask", {
                x: -75,
                y: -50,
                ease: "power2."
            }).to(".e.mask", {
                x: 100,
                y: -100,
                duration: .25
            })
        }
    }),
    R_ = Lb.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["man", null, [127, 35]],
                ["face", null, [368, 364.5]],
                ["string", null, [220, 295]],
                ["mask", null, [-85, 55]]
            ])
        }],
        onLoadComplete() {
            s.set(".e.mask", {
                x: 100,
                y: -100,
                scale: .5
            }), s.set(".e.string", {
                x: 50,
                y: -100,
                scale: .5,
                transformOrigin: "288px 122px"
            }), s.set(".e.face", {
                x: 0,
                y: -240,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mask", {
                x: -150,
                duration: 1,
                ease: "power2.out"
            }).to(".e.mask", {
                rotate: -3,
                duration: .05
            }, .5).to(".e.mask", {
                rotate: 3,
                duration: .05
            }, .55).to(".e.mask", {
                rotate: -3,
                duration: .05
            }, .6).to(".e.mask", {
                rotate: 3,
                duration: .05
            }, .65).to(".e.mask", {
                rotate: -3,
                duration: .05
            }, .7).to(".e.mask", {
                rotate: 3,
                duration: .05
            }, .75).to(".e.mask", {
                rotate: -3,
                duration: .05
            }, .8).to(".e.mask", {
                rotate: 3,
                duration: .05
            }, .85).to(".e.mask", {
                rotate: -3,
                duration: .05
            }, .9).to(".e.mask", {
                rotate: 3,
                duration: .05
            }, .95).to(".e.mask", {
                x: -175,
                y: -150,
                rotate: 220,
                duration: .2,
                ease: "power1.out"
            }, 1).to(".e.mask", {
                x: -200,
                y: 600,
                rotate: 440,
                duration: .6,
                ease: "power1.inOut"
            }, 1.2).to(".e.string", {
                scaleX: 1.3,
                duration: 1,
                ease: "power2.out"
            }, 0).to(".e.string", {
                y: -150,
                rotate: 300,
                scaleX: .5,
                duration: .1,
                ease: "power1.out"
            }, 1).to(".e.string", {
                x: 100,
                y: 600,
                rotate: 700,
                duration: .5,
                ease: "power1.inOut"
            }, 1.1).to(".e.face", {
                opacity: 1,
                duration: .3
            }, 1.8).to(".e.c", {
                y: 100,
                scale: 1.5,
                duration: 1.25
            }, 1.8)
        }
    }),
    Bb = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/da5698e8.png", self.location).href,
            scribble: new URL("main/pp7/everyday/assets/8e70ca34.png", self.location).href
        }
    }),
    D_ = Bb.extend({
        elements: a.elementsFromImages("car", "scribble"),
        onLoadComplete() {
            s.set(".e.scribble", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.scribble", {
                opacity: 1
            })
        }
    }),
    S_ = Bb.extend({
        elements: a.elementsFromImages("car", "scribble"),
        initializeTimeline() {
            this.timeline.to([".e.car", ".e.scribble"], {
                scale: 1.5
            })
        }
    }),
    T_ = E.extend({
        imageManifest: {
            car: new URL("main/pp7/everyday/assets/da5698e8.png", self.location).href,
            family: new URL("main/pp7/everyday/assets/ef245a24.png", self.location).href
        }
    }),
    E_ = T_.extend({
        elements: [{
            class: "family-container",
            type: "container",
            children: a.elementsFromImages("car", "family")
        }, {
            class: "flash",
            type: "div",
            pos: [-5e3, -5e3],
            html: ""
        }],
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            }), s.set(".e.car", {
                x: -60,
                y: 0
            }), s.set(".e.family", {
                x: 90,
                y: 80,
                scale: .8
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.family-container", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.family-container", {
                filter: "blur(0px)",
                autoRound: !1
            });
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }, 5).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.flash", {
                opacity: 0,
                duration: 1
            }), this.timeline.add(t, 0)
        }
    }),
    UV = E.extend({
        imageManifest: {
            ants: new URL("main/pp7/everyday/assets/d850116e.png", self.location).href,
            bag: new URL("main/pp7/everyday/assets/57e6e04b.png", self.location).href,
            bagEmpty: new URL("main/pp7/everyday/assets/e4fd3947.png", self.location).href,
            bugs: new URL("main/pp7/everyday/assets/205cec39.png", self.location).href,
            rolypoly: new URL("main/pp7/everyday/assets/fb310826.png", self.location).href,
            search: new URL("main/pp7/everyday/assets/1a875183.png", self.location).href,
            worm: new URL("main/pp7/everyday/assets/42cd2a2b.png", self.location).href
        }
    }),
    L_ = UV.extend({
        elements: [{
            class: "bug-container",
            type: "container",
            children: [{
                class: "bugs",
                type: "img",
                key: "bugs"
            }]
        }, {
            class: "glass-container",
            type: "container",
            children: [{
                class: "search",
                type: "img",
                key: "search"
            }]
        }],
        initializeTimeline() {
            s.set(".bug-container", {
                overflow: "hidden",
                width: 400,
                height: 400,
                x: 260,
                y: 70,
                borderRadius: "100%"
            }), this.timeline.fromTo(".e.bugs", {
                x: -200,
                y: 0,
                scale: 1.4
            }, {
                x: -320,
                y: -219,
                scale: 1.8,
                ease: "back.in"
            }).to(".e.bugs", {
                x: 40,
                y: -269,
                scale: 1.8,
                ease: "back.in"
            }).to(".e.bugs", {
                x: 60,
                y: -519,
                scale: 1.6,
                ease: "back.in"
            }).to(".e.bugs", {
                x: -300,
                y: -632,
                scale: 1.6,
                ease: "back.in"
            }).to(".e.bugs", {
                x: -690,
                y: 88,
                scale: 2.5,
                ease: "power3.inOut"
            }).to(".scene-container", {
                opacity: 0,
                scale: 3,
                y: -50,
                ease: "back.in"
            })
        }
    }),
    B_ = UV.extend({
        stepDuration: .4,
        elements: [{
            class: "bug-container",
            type: "container",
            children: [{
                class: "bug",
                type: "img",
                key: "worm"
            }]
        }],
        onDiscreteProgress() {
            s.timeline().to(".e.bug", {
                y: -2e3,
                delay: .1,
                duration: .25,
                rotate: -180,
                ease: "back.in"
            }), a.squashOnce("bug-container", .3)
        }
    }),
    M_ = UV.extend({
        stepDuration: .5,
        elements: [{
            class: "bug-container",
            type: "container",
            children: [{
                class: "bug",
                type: "img",
                key: "ants"
            }, {
                class: "bug",
                type: "img",
                key: "ants"
            }, {
                class: "bug",
                type: "img",
                key: "ants"
            }]
        }],
        initializeTimeline() {
            s.set(".e.bug:nth-child(1)", {
                scaleX: -.6,
                scaleY: .6,
                x: -200,
                y: -250
            }), s.set(".e.bug:nth-child(2)", {
                x: 200,
                y: -50,
                scale: .8
            }), s.set(".e.bug:nth-child(3)", {
                y: 150
            })
        },
        onDiscreteProgress(t) {
            const e = Math.floor(t);
            e === 33 ? s.timeline().to(".e.bug:nth-child(3)", {
                y: -2e3,
                delay: .1,
                duration: .5,
                rotate: -180,
                ease: "power3.out"
            }) : e === 66 ? s.timeline().to(".e.bug:nth-child(2)", {
                y: -2e3,
                delay: .1,
                duration: .5,
                rotate: 180,
                ease: "power3.out"
            }) : e >= 99 && s.timeline().to(".e.bug:nth-child(1)", {
                y: -2e3,
                delay: .1,
                duration: .5,
                rotate: -180,
                ease: "power3.out"
            })
        }
    }),
    O_ = UV.extend({
        stepDuration: 1,
        elements: [{
            class: "bug-container",
            type: "container",
            children: [{
                class: "bug",
                type: "img",
                key: "rolypoly"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.bug", {
                x: 200
            }).to(".e.bug", {
                scaleX: -1,
                x: -50
            }).to(".e.bug", {
                x: 0,
                rotate: 180
            }).to(".e.bug", {
                y: -1e3
            })
        }
    }),
    I_ = UV.extend({
        stepDuration: .5,
        elements: [{
            class: "bag-container",
            type: "container",
            children: [{
                class: "bagEmpty",
                type: "img",
                key: "bagEmpty"
            }, {
                class: "bag",
                type: "img",
                key: "bag"
            }]
        }],
        initializeTimeline() {
            s.set(".e.bag", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("bagEmpty", "bag", .5)
        }
    }),
    FV = E.extend({
        imageManifest: {
            apple: new URL("main/pp7/everyday/assets/34da0fff.png", self.location).href,
            bag: new URL("main/pp7/everyday/assets/91ee79f9.png", self.location).href,
            ick: new URL("main/pp7/everyday/assets/07908138.png", self.location).href,
            nose: new URL("main/pp7/everyday/assets/f8039dca.png", self.location).href,
            shirt: new URL("main/pp7/everyday/assets/f1651432.png", self.location).href
        }
    }),
    P_ = FV.extend({
        elements: [{
            class: "teacher-container",
            type: "container",
            children: [{
                class: "apple",
                type: "img",
                key: "apple"
            }, {
                class: "bag",
                type: "img",
                key: "bag"
            }]
        }],
        initializeTimeline() {
            s.set(".e.apple", {
                scale: .2,
                rotate: 180
            }), this.timeline.to(".e.bag", {
                rotate: 180,
                y: -50
            }).to(".e.apple", {
                y: 500,
                rotate: -90,
                ease: "bounce.out",
                duration: .3
            })
        }
    }),
    U_ = FV.extend({
        stepDuration: 1,
        elements: [{
            class: "teacher-container",
            type: "container",
            children: [{
                class: "apple",
                type: "img",
                key: "apple"
            }, {
                class: "bag",
                type: "img",
                key: "bag"
            }]
        }],
        initializeTimeline() {
            s.fromTo(".e.bag", {
                rotate: 180,
                y: -50
            }, {
                y: -250,
                opacity: 0,
                duration: .25
            }), s.fromTo(".e.apple", {
                scale: .2,
                y: 500,
                rotate: -90
            }, {
                scale: .8,
                y: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.apple", {
                y: -2e3,
                delay: .1,
                duration: .5,
                rotate: 0,
                ease: "back.in"
            }), a.squashOnce("teacher-container", .3)
        }
    }),
    F_ = FV.extend({
        elements: [{
            class: "teacher-container",
            type: "container",
            children: [{
                class: "shirt",
                type: "img",
                key: "shirt"
            }, {
                class: "apple",
                type: "img",
                key: "apple"
            }]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.apple", {
                scale: .3,
                x: -100,
                y: 200
            }, {
                rotate: 40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: -40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: 40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: -40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: 40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: -40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: 40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: -40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: 40,
                ease: "power2.inOut"
            }).to(".e.apple", {
                rotate: 0,
                ease: "power2.inOut"
            }).to(".e.shirt", {
                opacity: 0,
                ease: "power2.inOut"
            })
        }
    }),
    j_ = FV.extend({
        stepDuration: 1,
        lastStepDuration: 1.25,
        elements: [{
            class: "teacher-container",
            type: "container",
            children: [{
                class: "nose",
                type: "img",
                key: "nose"
            }, {
                class: "apple",
                type: "img",
                key: "apple"
            }, {
                class: "ick",
                type: "img",
                key: "ick"
            }]
        }],
        onLoadComplete() {
            s.set(".e.ick", {
                hidden: !0
            }), s.to(".teacher-container", {
                scale: .6,
                y: 150
            }), s.fromTo(".e.nose", {
                opacity: 0
            }, {
                opacity: 1,
                y: -650
            }), s.fromTo(".e.apple", {
                scale: .4,
                x: -100,
                y: 200
            }, {
                scale: 1,
                x: 0,
                y: 0
            })
        },
        onDiscreteProgress(t) {
            Math.floor(t) === 50 ? s.timeline().to(".e.nose", {
                scaleX: 1.2,
                scaleY: .9,
                y: -750
            }) : (a.squashOnce("nose", .5), a.squashTransition("apple", "ick", .25))
        }
    }),
    Q_ = FV.extend({
        stepDuration: 1,
        elements: [{
            class: "teacher-container",
            type: "container",
            children: [{
                class: "nose",
                type: "img",
                key: "nose"
            }, {
                class: "ick",
                type: "img",
                key: "ick"
            }]
        }],
        initializeTimeline() {
            s.fromTo(".teacher-container", {
                scale: .6,
                y: 150
            }, {
                scale: 1,
                y: 0
            }), s.fromTo(".e.nose", {
                scaleX: 1.2,
                scaleY: .9,
                y: -750
            }, {
                opacity: 0,
                y: -800
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.ick", {
                x: 1e3,
                delay: .1,
                duration: .5,
                ease: "back.in"
            }), a.squashOnce("teacher-container", .3)
        }
    }),
    jV = E.extend({
        imageManifest: {
            bask: new URL("main/pp7/everyday/assets/cc1077fb.png", self.location).href,
            handstand: new URL("main/pp7/everyday/assets/6200874b.png", self.location).href,
            devil: new URL("main/pp7/everyday/assets/cb54fd65.png", self.location).href,
            nervous: new URL("main/pp7/everyday/assets/32aab448.png", self.location).href,
            noJumper: new URL("main/pp7/everyday/assets/eedf7535.png", self.location).href,
            rope0: new URL("main/pp7/everyday/assets/8b245534.png", self.location).href,
            rope1: new URL("main/pp7/everyday/assets/8aea8849.png", self.location).href,
            rope2: new URL("main/pp7/everyday/assets/95262a4d.png", self.location).href,
            rope3: new URL("main/pp7/everyday/assets/fa7fe47b.png", self.location).href
        }
    }),
    z_ = jV.extend({
        stepDuration: .5,
        elements: [{
            class: "devil",
            type: "img",
            pos: [0, 0],
            key: "devil"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .5,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .2
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .5
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.devil", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .3
            })
        }
    }),
    H_ = jV.extend({
        stepDuration: .5,
        elements: [{
            class: "nervous",
            type: "img",
            pos: [0, 0],
            key: "nervous"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .1
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.nervous", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .15
            })
        }
    }),
    N_ = jV.extend({
        lastStepDuration: .75,
        elements: [{
            class: "devil",
            type: "img",
            pos: [0, 0],
            key: "devil"
        }, {
            class: "handstand",
            type: "img",
            pos: [0, 0],
            key: "handstand"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .1
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25
            }), s.set(".e.handstand", {
                hidden: !0
            }), this.timeline.to(".e.devil", {
                rotate: 180,
                onComplete: () => {
                    a.squashTransition("devil", "handstand", .15)
                }
            })
        }
    }),
    G_ = jV.extend({
        stepDuration: .5,
        elements: [{
            class: "handstand",
            type: "img",
            pos: [0, 0],
            key: "handstand"
        }, {
            class: "rope0",
            type: "img",
            pos: [0, 0],
            key: "rope0"
        }, {
            class: "rope1",
            type: "img",
            pos: [0, 0],
            key: "rope1"
        }, {
            class: "rope2",
            type: "img",
            pos: [0, 0],
            key: "rope2"
        }, {
            class: "rope3",
            type: "img",
            pos: [0, 0],
            key: "rope3"
        }],
        initializeTimeline() {
            s.timeline().to(".e.rope2", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25,
                ease: "power2.out"
            }).to(".e.rope3", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .1
            }).to(".e.rope1", {
                repeat: -1,
                yoyo: !0,
                opacity: 0,
                duration: .25
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.handstand", {
                repeat: 1,
                yoyo: !0,
                y: -200,
                ease: "power2.out",
                duration: .15
            })
        }
    }),
    X_ = jV.extend({
        elements: [{
            class: "noJumper",
            type: "img",
            pos: [65, 0],
            key: "noJumper"
        }, {
            class: "bask",
            type: "img",
            pos: [0, 0],
            key: "bask"
        }],
        initializeTimeline() {
            this.timeline.to(".e.bask", {
                scale: 1.8,
                x: 25,
                ease: "power3.inOut"
            })
        }
    }),
    QV = E.extend({
        imageManifest: {
            burn: new URL("main/pp7/everyday/assets/a2c6f8cd.png", self.location).href,
            rope: new URL("main/pp7/everyday/assets/50843536.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/d1fff602.png", self.location).href,
            shorts: new URL("main/pp7/everyday/assets/a7f8fb55.png", self.location).href,
            towel: new URL("main/pp7/everyday/assets/bf813621.png", self.location).href,
            pants1: new URL("main/pp7/everyday/assets/c8afd5ef.png", self.location).href,
            pants2: new URL("main/pp7/everyday/assets/eaaf273e.png", self.location).href
        }
    }),
    Y_ = QV.extend({
        elements: [{
            class: "gym-container",
            type: "container",
            children: [{
                class: "pants1",
                type: "img",
                key: "pants1"
            }, {
                class: "pants2",
                type: "img",
                key: "pants2"
            }, {
                class: "shorts",
                type: "img",
                key: "shorts"
            }, {
                class: "towel",
                type: "img",
                key: "towel"
            }]
        }],
        initializeTimeline() {
            s.set(".e.pants1", {
                opacity: 0
            }), s.set(".e.shorts", {
                hidden: !0,
                scale: .8,
                y: -200
            }), s.set(".e.towel", {
                scale: 1.5
            }), this.timeline.to(".e.towel", {
                rotate: -90,
                onComplete: () => {
                    a.squashOnce("gym-container", .25), a.squashTransition("pants2", "shorts", .25), s.timeline().to(".e.pants1", {
                        opacity: 1,
                        y: 500,
                        x: -50,
                        ease: "bounce.out",
                        duration: .5,
                        delay: .25
                    })
                }
            }).to(".e.towel", {
                rotate: -180,
                x: -1500,
                duration: .25
            })
        }
    }),
    K_ = QV.extend({
        elements: [{
            class: "gym-container",
            type: "container",
            children: [{
                class: "leftLeg",
                type: "img",
                key: "run"
            }, {
                class: "rightLeg",
                type: "img",
                key: "run"
            }]
        }],
        initializeTimeline() {
            s.set(".e.leftLeg", {
                rotate: 65,
                y: -45,
                x: 45
            });
            const t = s.timeline({
                repeat: 8,
                yoyo: !0
            }).to(".e.leftLeg", {
                rotate: -15
            }, 0).to(".e.rightLeg", {
                rotate: 65
            }, 0);
            this.timeline.add(t)
        }
    }),
    W_ = QV.extend({
        stepDuration: 1,
        elements: [{
            class: "gym-container",
            type: "container",
            children: [{
                class: "rope",
                type: "img",
                key: "rope"
            }]
        }],
        onLoadComplete() {
            a.startShake("gym-container", 1, 1, 1)
        },
        onDiscreteProgress() {
            a.squashOnce("rope", .5)
        }
    }),
    J_ = QV.extend({
        stepDuration: 1,
        elements: [{
            class: "gym-container",
            type: "container",
            children: [{
                class: "rope",
                type: "img",
                key: "rope"
            }]
        }],
        onLoadComplete() {
            a.startShake("gym-container", 2, 2, 2)
        },
        onDiscreteProgress() {
            a.squashOnce("rope", .75)
        }
    }),
    Z_ = QV.extend({
        stepDuration: 2,
        elements: [{
            class: "gym-container",
            type: "container",
            children: [{
                class: "rope",
                type: "img",
                key: "rope"
            }, {
                class: "burn",
                type: "img",
                key: "burn"
            }]
        }],
        initializeTimeline() {
            a.startShake("gym-container", 4, 3, 3), s.set(".e.burn", {
                y: 500,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.rope", {
                y: -800,
                opacity: 0,
                duration: .4,
                ease: "back.inOut"
            }, 0).to(".e.burn", {
                y: 0,
                opacity: 1,
                duration: .4,
                ease: "back.inOut",
                delay: .15
            }, 0)
        }
    }),
    Bd = E.extend({
        imageManifest: {
            eyes: new URL("main/pp7/everyday/assets/46e85fa3.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/ec323984.png", self.location).href,
            school: new URL("main/pp7/everyday/assets/27a1fc07.png", self.location).href,
            yearbook: new URL("main/pp7/everyday/assets/d0ff2444.png", self.location).href
        }
    }),
    __ = Bd.extend({
        lastStepDuration: .25,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "school",
                type: "img",
                key: "school"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.school", {
                scale: 3,
                filter: "blur(50px)",
                onComplete: () => {
                    s.to(".e.school", {
                        opacity: 0,
                        duration: .25
                    })
                }
            })
        }
    }),
    $_ = Bd.extend({
        stepDuration: 1,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "yearbook",
                type: "img",
                key: "yearbook"
            }, {
                class: "open",
                type: "img",
                key: "open"
            }]
        }],
        initializeTimeline() {
            s.set(".e.open", {
                hidden: !0
            }), s.fromTo(".e.yearbook", {
                opacity: 0,
                y: 100
            }, {
                opacity: 1,
                y: 0,
                ease: "back.out",
                duration: .25,
                delay: .1
            })
        },
        onDiscreteProgress() {
            a.squashTransition("yearbook", "open", .35)
        }
    }),
    e$ = Bd.extend({
        stepDuration: .5,
        lastStepDuration: 1,
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "open",
                type: "img",
                key: "open"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.open", {
                y: -10,
                scale: 1.2,
                rotate: -5,
                ease: "back.out",
                duration: .25
            }).to(".e.open", {
                y: -40,
                x: -50,
                scale: 2,
                rotate: -10,
                ease: "back.out",
                duration: .25
            }).to(".e.open", {
                y: -80,
                x: -120,
                scale: 3,
                rotate: -15,
                ease: "back.out",
                duration: .25
            })
        }
    }),
    t$ = Bd.extend({
        elements: [{
            class: "band-container",
            type: "container",
            children: [{
                class: "eyes",
                type: "img",
                key: "eyes"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".eyes", {
                scale: 4,
                duration: 3,
                ease: "power1.in"
            }, 0).to(".eyes", {
                filter: "blur(10px)",
                duration: 1.5
            }, 1.5).to(".eyes", {
                opacity: 0,
                duration: .25
            }, 2.75)
        }
    }),
    Mb = E.extend({
        imageManifest: {
            phone: new URL("main/pp7/everyday/assets/d035379b.png", self.location).href,
            phonePush: new URL("main/pp7/everyday/assets/81e343c8.png", self.location).href,
            devil: new URL("main/pp7/everyday/assets/1d27f660.png", self.location).href,
            sweat: new URL("main/pp7/everyday/assets/60e55a94.png", self.location).href
        }
    }),
    n$ = Mb.extend({
        stepDuration: 1,
        elements: [{
            class: "phone",
            type: "img",
            key: "phone"
        }, {
            class: "phonePush",
            type: "img",
            key: "phonePush"
        }],
        initializeTimeline() {
            s.set(".e.phonePush", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            s.set(".e.phone", {
                hidden: !0
            }), s.set(".e.phonePush", {
                hidden: !1
            }), a.scaleBounce("phonePush", .95, .1)
        }
    }),
    i$ = Mb.extend({
        stepDuration: 1.25,
        elements: [{
            class: "sweat-container",
            type: "container",
            children: [{
                class: "devil",
                type: "img",
                key: "devil"
            }, {
                class: "sweat",
                type: "img",
                key: "sweat"
            }]
        }],
        sweatPE: null,
        initializeTimeline() {
            this.sweatPE = a.addParticleEmitter({
                container: "sweat-container",
                image: "sweat",
                settings: {
                    frequency: .4,
                    minSize: 75,
                    maxSize: 150,
                    angle: 180,
                    randomAngle: !1,
                    boundaries: {
                        left: 300,
                        right: 330
                    },
                    duration: .1
                }
            })
        },
        onDiscreteProgress() {
            a.squashOnce("sweat-container"), s.timeline().to(".particle-emitter", {
                x: 200,
                duration: .35,
                opacity: 0
            })
        }
    }),
    Md = E.extend({
        imageManifest: {
            bonnet: new URL("main/pp7/everyday/assets/c01c87c0.png", self.location).href,
            closet: new URL("main/pp7/everyday/assets/f04688f7.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/a091c42d.png", self.location).href,
            jacketYellow: new URL("main/pp7/everyday/assets/ce70748d.png", self.location).href,
            jacketWhite: new URL("main/pp7/everyday/assets/1ca9891a.png", self.location).href,
            jacketGray: new URL("main/pp7/everyday/assets/1075fafa.png", self.location).href,
            jacketBrown: new URL("main/pp7/everyday/assets/646f36e0.png", self.location).href,
            tie: new URL("main/pp7/everyday/assets/c8780f14.png", self.location).href
        }
    }),
    s$ = Md.extend({
        stepDuration: 1.25,
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "closet",
                type: "img",
                key: "closet"
            }, {
                class: "door",
                type: "img",
                key: "door"
            }]
        }],
        onDiscreteProgress() {
            s.timeline().to(".e.door", {
                x: -250,
                ease: "back.out",
                duration: .5
            }).to(".closet-container", {
                scale: 3,
                opacity: 0,
                ease: "powerq.inOut",
                duration: .5,
                x: -200
            }, .55)
        }
    }),
    o$ = Md.extend({
        stepDuration: 1.75,
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "jacketGray",
                type: "img",
                pos: [0, -500],
                key: "jacketGray"
            }, {
                class: "jacketYellow",
                type: "img",
                key: "jacketYellow"
            }, {
                class: "jacketWhite",
                type: "img",
                pos: [0, 500],
                key: "jacketWhite"
            }, {
                class: "jacketBrown",
                type: "img",
                pos: [0, 1e3],
                key: "jacketBrown"
            }]
        }],
        closet: null,
        initializeTimeline() {
            a.addInfiniteWiggle("jacketYellow"), this.closet = s.timeline().set(".closet-container", {
                opacity: 0,
                scale: .8
            }).to(".closet-container", {
                x: -750,
                scale: 1,
                opacity: 1,
                ease: "backOut"
            }).to(".closet-container", {
                x: 250,
                repeat: -1,
                yoyo: !0,
                ease: "power1.inOut",
                duration: 5
            })
        },
        onDiscreteProgress() {
            this.closet.kill(), s.timeline().to(".closet-container", {
                x: 0
            }).to(".e.jacketGray", {
                x: -100,
                opacity: 0,
                ease: "power2.out"
            }, .25).to(".e.jacketBrown", {
                x: 100,
                opacity: 0,
                ease: "power2.out"
            }, .15).to(".e.jacketWhite", {
                x: 100,
                opacity: 0,
                ease: "power2.out"
            }, .35).to(".e.jacketYellow", {
                scale: 1.25,
                ease: "back.out",
                duration: .75
            }, .5)
        }
    }),
    a$ = Md.extend({
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "jacketYellow",
                type: "img",
                key: "jacketYellow"
            }, {
                class: "tie",
                type: "img",
                key: "tie"
            }]
        }],
        initializeTimeline() {
            s.set(".e.jacketYellow", {
                scale: 1.25
            }), s.timeline().set(".e.tie", {
                scale: 1,
                x: 200,
                y: 200,
                rotate: -180,
                opacity: 0
            }).to(".e.tie", {
                opacity: 1,
                y: 100,
                ease: "back.out"
            }, .2);
            const t = s.timeline().to(".e.tie", {
                x: -10,
                y: -25,
                rotate: 0,
                scale: .6
            }, 0);
            this.timeline.add(t)
        }
    }),
    r$ = Md.extend({
        stepDuration: 1.5,
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "jacketYellow",
                type: "img",
                key: "jacketYellow"
            }, {
                class: "tie",
                type: "img",
                key: "tie"
            }, {
                class: "bonnet",
                type: "img",
                key: "bonnet"
            }]
        }],
        initializeTimeline() {
            s.set(".e.jacketYellow", {
                scale: 1.25
            }), s.set(".e.tie", {
                scale: .6,
                x: -10,
                y: -25
            }), s.timeline().set(".e.bonnet", {
                scale: .65,
                x: -125,
                y: -400,
                rotate: -45,
                opacity: 0
            }).to(".e.bonnet", {
                opacity: 1,
                y: -300,
                ease: "back.out"
            }, .2), s.timeline().to(".e.jacketYellow", {
                y: "+=200",
                ease: "back.inOut"
            }, 0).to(".e.tie", {
                y: "+=200",
                ease: "back.inOut"
            }, .1)
        },
        onDiscreteProgress() {
            s.timeline().to(".e.bonnet", {
                scale: .55,
                x: 0,
                y: -325,
                rotate: 0
            }).to(".e.tie", {
                y: 25,
                ease: "back.inOut",
                onComplete: () => {
                    a.squashOnce("closet-container")
                }
            }, 0).to(".e.jacketYellow", {
                y: 50,
                ease: "back.inOut"
            }, .1)
        }
    }),
    Lm = E.extend({
        imageManifest: {
            cheer: new URL("main/pp7/everyday/assets/447fa680.png", self.location).href
        }
    }),
    V$ = Lm.extend({
        elements: [{
            class: "protest-container",
            type: "container",
            children: [{
                class: "cheer",
                type: "img",
                key: "cheer"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).to(".e.cheer", {
                scale: 1.2,
                duration: 1.5 / 2,
                ease: "power3.out"
            }).to(".e.cheer", {
                scale: 1,
                duration: 1.5 / 2,
                ease: "power3.in"
            })
        }
    }),
    l$ = Lm.extend({
        elements: [{
            class: "protest-container",
            type: "container",
            children: [{
                class: "cheer",
                type: "img",
                key: "cheer"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).to(".e.cheer", {
                scale: 1.4,
                duration: 1 / 2,
                ease: "power3.out"
            }).to(".e.cheer", {
                scale: 1,
                duration: 1 / 2,
                ease: "power3.in"
            })
        }
    }),
    A$ = Lm.extend({
        elements: [{
            class: "protest-container",
            type: "container",
            children: [{
                class: "cheer",
                type: "img",
                key: "cheer"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).to(".e.cheer", {
                scale: 1.6,
                duration: .5 / 2,
                ease: "power3.out"
            }).to(".e.cheer", {
                scale: 1,
                duration: .5 / 2,
                ease: "power3.in"
            })
        }
    }),
    c$ = E.extend({
        imageManifest: {
            churn: new URL("main/pp7/everyday/assets/92e77b79.png", self.location).href,
            handle: new URL("main/pp7/everyday/assets/f0791277.png", self.location).href
        }
    }),
    d$ = c$.extend({
        elements: [{
            class: "protest-container",
            type: "container",
            children: [{
                class: "churn",
                type: "img",
                key: "churn"
            }, {
                class: "handle",
                type: "img",
                key: "handle"
            }]
        }],
        initializeTimeline() {
            s.set(".e.handle", {
                x: 12,
                y: -67
            });
            const t = s.timeline().to(".e.handle", {
                repeat: 4,
                rotate: 360,
                ease: "linear"
            });
            this.timeline.add(t)
        }
    }),
    Od = E.extend({
        imageManifest: {
            mustache: new URL("main/pp7/everyday/assets/8932a7ef.png", self.location).href,
            sign: new URL("main/pp7/everyday/assets/134da961.png", self.location).href,
            parent: new URL("main/pp7/everyday/assets/b0752653.png", self.location).href,
            sword: new URL("main/pp7/everyday/assets/f84ea48d.png", self.location).href,
            wingsfire: new URL("main/pp7/everyday/assets/5f679a3b.png", self.location).href
        }
    }),
    p$ = Od.extend({
        elements: [{
            class: "sign-container",
            type: "container",
            children: [{
                class: "sign",
                type: "img",
                key: "sign"
            }, {
                class: "parent",
                type: "img",
                key: "parent"
            }]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.parent", {
                clipPath: "inset(750px 0px 0px 0px)"
            }, {
                clipPath: "inset(350px 0px 0px 0px)"
            })
        }
    }),
    h$ = Od.extend({
        elements: [{
            class: "sign-container",
            type: "container",
            children: [{
                class: "sign",
                type: "img",
                key: "sign"
            }, {
                class: "parent",
                type: "img",
                key: "parent"
            }, {
                class: "mustache",
                type: "img",
                key: "mustache"
            }]
        }],
        initializeTimeline() {
            s.timeline().to(".sign-container", {
                scale: 2,
                y: 200,
                ease: "back.out",
                duration: .5
            }, .2), this.timeline.fromTo(".e.mustache", {
                clipPath: "inset(0px 600px 0px 0px)"
            }, {
                clipPath: "inset(0px 420px 0px 0px)"
            })
        }
    }),
    u$ = Od.extend({
        elements: [{
            class: "sign-container",
            type: "container",
            children: [{
                class: "sign",
                type: "img",
                key: "sign"
            }, {
                class: "parent",
                type: "img",
                key: "parent"
            }, {
                class: "mustache",
                type: "img",
                key: "mustache"
            }, {
                class: "sword",
                type: "img",
                key: "sword"
            }]
        }],
        initializeTimeline() {
            s.timeline().fromTo(".sign-container", {
                scale: 2,
                y: 200
            }, {
                scale: 1.5,
                y: 125,
                x: 25,
                ease: "back.out",
                duration: .5,
                rotate: -15
            }, .2), this.timeline.fromTo(".e.sword", {
                clipPath: "inset(0px 0px 840px 0px)"
            }, {
                clipPath: "inset(0px 0px 420px 0px)"
            })
        }
    }),
    m$ = Od.extend({
        elements: [{
            class: "sign-container",
            type: "container",
            children: [{
                class: "sign",
                type: "img",
                key: "sign"
            }, {
                class: "parent",
                type: "img",
                key: "parent"
            }, {
                class: "mustache",
                type: "img",
                key: "mustache"
            }, {
                class: "sword",
                type: "img",
                key: "sword"
            }, {
                class: "wingsfire",
                type: "img",
                key: "wingsfire"
            }]
        }],
        initializeTimeline() {
            s.timeline().fromTo(".sign-container", {
                scale: 1.5,
                y: 125,
                x: 25,
                rotate: -15
            }, {
                scale: 1.2,
                y: 0,
                x: 0,
                ease: "back.out",
                duration: .5,
                rotate: 0
            }), s.timeline({
                repeat: -1,
                duration: .1,
                yoyo: !0
            }).fromTo(".e.wingsfire", {
                opacity: .3
            }, {
                opacity: 1
            })
        }
    }),
    Bm = E.extend({
        imageManifest: {
            lawn1: new URL("main/pp7/everyday/assets/c3e540dc.png", self.location).href,
            lawn2: new URL("main/pp7/everyday/assets/ea2b1ae5.png", self.location).href,
            lawn3: new URL("main/pp7/everyday/assets/9de6c9cf.png", self.location).href,
            sign: new URL("main/pp7/everyday/assets/2a8d1fc7.png", self.location).href,
            workitin: new URL("main/pp7/everyday/assets/7ebaa84b.png", self.location).href
        }
    }),
    f$ = Bm.extend({
        stepDuration: .3,
        elements: [{
            class: "lawn-container",
            type: "container",
            children: [{
                class: "lawn1",
                type: "img",
                key: "lawn1"
            }]
        }],
        initializeTimeline() {
            s.set(".lawn1", {
                scale: .4
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".lawn-container", {
                y: -100,
                ease: "power2.out",
                duration: .15
            }).to(".lawn-container", {
                y: 0,
                ease: "power2.inOut",
                duration: .15
            }), t === 25 ? s.timeline().to(".lawn1", {
                scale: .55,
                duration: .25
            }) : t === 50 ? s.timeline().to(".lawn1", {
                scale: .7,
                duration: .25
            }) : t === 75 ? s.timeline().to(".lawn1", {
                scale: .85,
                duration: .25
            }) : t === 100 && s.timeline().to(".lawn1", {
                scale: 1,
                duration: .25
            })
        }
    }),
    q$ = Bm.extend({
        stepDuration: .75,
        elements: [{
            class: "lawn-container",
            type: "container",
            children: [{
                class: "lawn1",
                type: "img",
                key: "lawn1"
            }, {
                class: "lawn2",
                type: "img",
                key: "lawn2"
            }, {
                class: "sign",
                type: "img",
                key: "sign"
            }]
        }],
        initializeTimeline() {
            s.set(".e.lawn2", {
                hidden: !0
            }), s.set(".e.sign", {
                y: -300,
                x: -20,
                rotate: -25
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.sign", {
                y: 0,
                ease: "back.in",
                duration: .2,
                x: 0,
                rotate: 0,
                onStart: () => {
                    a.squashTransition("lawn1", "lawn2", .25)
                }
            })
        }
    }),
    g$ = Bm.extend({
        elements: [{
            class: "lawn-container",
            type: "container",
            children: [{
                class: "lawn2",
                type: "img",
                key: "lawn2"
            }, {
                class: "lawn3",
                type: "img",
                key: "lawn3"
            }, {
                class: "sign",
                type: "img",
                key: "sign"
            }]
        }],
        initializeTimeline() {
            s.set(".lawn3", {
                hidden: !0
            }), s.timeline().to(".lawn-container", {
                scale: 1.8,
                x: 275,
                y: -100,
                ease: "back.out",
                duration: .2
            }, .2)
        },
        onProgress(t) {
            const e = Math.floor(t);
            e === 10 || e === 20 || e === 30 ? s.timeline().to(".e.sign", {
                y: -50,
                ease: "power2.out",
                duration: .5
            }).to(".e.sign", {
                y: 0,
                ease: "bounce.out",
                duration: .5
            }) : e === 40 || e === 50 || e === 60 || e === 70 ? s.timeline().to(".e.sign", {
                y: -150,
                ease: "power3.out",
                duration: .5
            }).to(".e.sign", {
                y: 0,
                ease: "bounce.out",
                duration: .25
            }) : e === 80 && s.timeline().to(".e.sign", {
                y: -200,
                ease: "power4.out",
                duration: .75
            }).to(".e.sign", {
                y: 26,
                ease: "linear",
                duration: .1,
                onComplete: () => {
                    a.squashTransition("lawn2", "lawn3", .1)
                }
            })
        }
    }),
    zV = E.extend({
        imageManifest: {
            brain: new URL("main/pp7/everyday/assets/1e720186.png", self.location).href,
            cool: new URL("main/pp7/everyday/assets/0b55d1ca.png", self.location).href,
            crawl: new URL("main/pp7/everyday/assets/fa6d5ca2.png", self.location).href,
            floorboards: new URL("main/pp7/everyday/assets/7369e5c3.png", self.location).href,
            floorboardsDown: new URL("main/pp7/everyday/assets/58b1875d.png", self.location).href,
            icecream: new URL("main/pp7/everyday/assets/0e864714.png", self.location).href,
            scoop: new URL("main/pp7/everyday/assets/f287de2d.png", self.location).href
        }
    }),
    y$ = zV.extend({
        stepDuration: .25,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "crawl",
                type: "img",
                key: "crawl"
            }]
        }],
        onDiscreteProgress(t) {
            a.squashOnce("sneak-container", .4, "x");
            let e = -1;
            Math.floor(t) === 66 ? e = 1 : e = -1, s.timeline().to(".crawl", {
                scaleX: e,
                duration: .25
            })
        }
    }),
    b$ = zV.extend({
        stepDuration: 1,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "floorboardsDown",
                type: "img",
                key: "floorboardsDown"
            }, {
                class: "floorboards",
                type: "img",
                key: "floorboards"
            }]
        }],
        initializeTimeline() {
            s.set(".e.floorboards", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("floorboardsDown", "floorboards", .35)
        }
    }),
    v$ = zV.extend({
        stepDuration: 2,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "icecream",
                type: "img",
                key: "icecream"
            }, {
                class: "scoop",
                type: "img",
                key: "scoop"
            }]
        }],
        initializeTimeline() {
            s.set(".e.scoop", {
                x: -200,
                y: -300
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.scoop", {
                rotate: 25,
                y: -145,
                x: -250,
                ease: "power2.inOut",
                duration: 1.2
            }).to(".e.scoop", {
                y: -300,
                x: 150,
                rotate: -20,
                duration: .3,
                ease: "power3.out",
                onStart: () => {
                    a.squashOnce("sneak-container")
                }
            })
        }
    }),
    w$ = zV.extend({
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "brain",
                type: "img",
                key: "brain"
            }]
        }],
        initializeTimeline() {
            a.startShake("brain", 20, 20)
        },
        onProgress(t, e) {
            const n = Math.floor(t);
            n > e && n === 25 ? a.startShake("brain", 15, 15) : n > e && n === 50 ? a.startShake("brain", 10, 10) : n > e && n === 75 && a.startShake("brain", 5, 5)
        }
    }),
    x$ = zV.extend({
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "cool",
                type: "img",
                key: "cool"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).fromTo(".cool", {
                rotate: -10
            }, {
                rotate: 10,
                ease: "power1.inOut",
                duration: .5
            }).to(".cool", {
                rotate: -10,
                ease: "power1.inOut",
                duration: .5
            })
        }
    }),
    Mm = E.extend({
        imageManifest: {
            cheer: new URL("main/pp7/everyday/assets/0d75f137.png", self.location).href,
            loveicecream: new URL("main/pp7/everyday/assets/b377a19a.png", self.location).href,
            praiseicecream: new URL("main/pp7/everyday/assets/19c0dca8.png", self.location).href
        }
    }),
    k$ = Mm.extend({
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "loveicecream",
                type: "img",
                key: "loveicecream"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).to(".e.loveicecream", {
                scale: 1.2,
                duration: 1.2 / 2,
                ease: "power3.out"
            }).to(".e.loveicecream", {
                scale: 1,
                duration: 1.2 / 2,
                ease: "power3.in"
            })
        }
    }),
    C$ = Mm.extend({
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "praiseicecream",
                type: "img",
                key: "praiseicecream"
            }]
        }],
        initializeTimeline() {
            s.timeline({
                repeat: -1
            }).to(".e.praiseicecream", {
                scale: 1.2,
                duration: .8 / 2,
                ease: "power3.out"
            }).to(".e.praiseicecream", {
                scale: 1,
                duration: .8 / 2,
                ease: "power3.in"
            })
        }
    }),
    R$ = Mm.extend({
        elements: [{
            class: "closet-container",
            type: "container",
            children: [{
                class: "praiseicecream",
                type: "img",
                key: "praiseicecream"
            }, {
                class: "cheer",
                type: "img",
                key: "cheer"
            }]
        }],
        initializeTimeline() {
            s.set(".e.cheer", {
                y: 150
            }), s.timeline({
                repeat: -1
            }).set(".e.praiseicecream", {
                clipPath: "inset(0px 0px 220px 0px)"
            }).to(".e.praiseicecream", {
                scale: 1.2,
                duration: .8 / 2,
                ease: "power3.out"
            }).to(".e.praiseicecream", {
                scale: 1,
                duration: .8 / 2,
                ease: "power3.in"
            }), s.timeline({
                repeat: -1
            }).to(".e.cheer", {
                scale: 1.4,
                duration: .8,
                ease: "power3.out"
            }).to(".e.cheer", {
                scale: 1,
                duration: .8,
                ease: "power3.in"
            })
        }
    }),
    Id = E.extend({
        imageManifest: {
            balloons: new URL("main/pp7/everyday/assets/a1d4420c.png", self.location).href,
            banner: new URL("main/pp7/everyday/assets/dc573a87.png", self.location).href,
            congrats: new URL("main/pp7/everyday/assets/5b379a90.png", self.location).href,
            sparkles: new URL("main/pp7/everyday/assets/80c06979.png", self.location).href
        }
    }),
    D$ = Id.extend({
        stepDuration: 2.5,
        elements: [{
            class: "decorate-container",
            type: "container",
            children: [{
                class: "banner",
                type: "img",
                key: "banner"
            }]
        }],
        initializeTimeline() {
            s.set(".e.banner", {
                scaleY: .2,
                y: 200
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.banner", {
                scaleY: .8,
                duration: .5,
                ease: "back.in"
            }).to(".e.banner", {
                scaleY: 1,
                rotate: 25,
                y: 100,
                duration: .5,
                ease: "back.in"
            }).to(".e.banner", {
                rotate: 0,
                y: 0,
                duration: .5,
                ease: "back.in"
            }).to(".e.banner", {
                y: -100,
                duration: .5,
                ease: "back.in"
            })
        }
    }),
    S$ = Id.extend({
        elements: [{
            class: "decorate-container",
            type: "container",
            children: [{
                class: "banner",
                type: "img",
                key: "banner"
            }, {
                class: "balloons",
                type: "img",
                key: "balloons"
            }]
        }],
        balloonPE: null,
        initializeTimeline() {
            s.set(".e.banner", {
                y: -100
            }), this.balloonPE = a.addParticleEmitter({
                container: "decorate-container",
                image: "balloons",
                autoplay: !1,
                settings: {
                    gravity: -3,
                    randomAngle: !1,
                    angle: 0,
                    minSize: 800,
                    maxSize: 1e3,
                    frequency: .4,
                    to: {
                        opacity: 1,
                        duration: 1
                    },
                    boundaries: {
                        top: 700,
                        bottom: 700,
                        left: -500,
                        right: 500
                    }
                }
            })
        },
        onProgress(t, e) {
            t > e ? this.balloonPE.play() : this.balloonPE.pause()
        }
    }),
    T$ = Id.extend({
        elements: [{
            class: "decorate-container",
            type: "container",
            children: [{
                class: "banner",
                type: "img",
                key: "banner"
            }, {
                class: "congrats",
                type: "img",
                key: "congrats"
            }]
        }],
        initializeTimeline() {
            s.timeline().fromTo(".e.banner", {
                y: -100
            }, {
                y: -250,
                scale: .8,
                ease: "back.inOut",
                duration: .8
            }, .2), this.timeline.fromTo(".e.congrats", {
                y: 200,
                clipPath: "inset(0px 1000px 0px 0px)"
            }, {
                clipPath: "inset(0px 0px 0px 0px)"
            })
        }
    }),
    E$ = Id.extend({
        elements: [{
            class: "decorate-container",
            type: "container",
            children: [{
                class: "banner",
                type: "img",
                key: "banner"
            }, {
                class: "congrats",
                type: "img",
                key: "congrats"
            }]
        }],
        initializeTimeline() {
            s.set(".e.banner", {
                y: -250,
                scale: .8
            }), s.set(".e.congrats", {
                y: 200
            }), this.timeline.fromTo(".e.congrats", {
                filter: "blur(0px)",
                opacity: 1
            }, {
                filter: "blur(20px)",
                opacity: .8
            })
        }
    }),
    Om = E.extend({
        imageManifest: {
            swim: new URL("main/pp7/everyday/assets/0028404c.png", self.location).href
        },
        sprites: {
            swim: {
                key: "swim",
                images: {
                    kickRight: [552, 0, 474, 444],
                    kickLeft: [0, 509, 535, 443],
                    flat: [535, 509, 518, 444],
                    arm: [0, 0, 552, 509]
                }
            }
        }
    }),
    L$ = Om.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("swim", [
            ["flat", null, [278, 241]]
        ]),
        onDiscreteProgress() {
            a.squashOnce("flat")
        }
    }),
    B$ = Om.extend({
        elements: a.elementsFromSprite("swim", [
            ["flat", null, [278, 241]],
            ["arm", null, [278, 207]]
        ]),
        onLoadComplete() {
            s.set(".e.arm", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("flat", "arm")), this.timeline.add(a.squashTransition("arm", "flat")), this.timeline.add(a.squashTransition("flat", "arm")), this.timeline.add(a.squashTransition("arm", "flat")), this.timeline.add(a.squashTransition("flat", "arm")), this.timeline.add(a.squashTransition("arm", "flat")), this.timeline.add(a.squashTransition("flat", "arm"))
        }
    }),
    M$ = Om.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("swim", [
            ["kickRight", null, [278, 241]],
            ["kickLeft", null, [279, 241]],
            ["flat", null, [278, 241]]
        ]),
        onLoadComplete() {
            s.set(".e.kickRight, .e.kickLeft", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("flat", "kickRight")), this.timeline.add(a.squashTransition("kickRight", "flat")), this.timeline.add(a.squashTransition("flat", "kickLeft")), this.timeline.add(a.squashTransition("kickLeft", "flat")), this.timeline.add(a.squashTransition("flat", "kickRight"))
        }
    }),
    Ob = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/9ee5dfb8.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    emoji: [0, 0, 693, 583],
                    pools: [0, 583, 348, 103],
                    invited: [348, 583, 339, 105],
                    why: [318, 688, 239, 88],
                    hey: [0, 686, 318, 103],
                    phone: [693, 0, 585, 857]
                }
            }
        }
    }),
    O$ = Ob.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["phone", null, [91, 227]],
            ["pools", null, [184, 312]],
            ["invited", null, [184, 309]],
            ["why", null, [190, 359]],
            ["hey", null, [183, 323]]
        ]),
        onLoadComplete() {
            s.set(".e.hey, .e.pools, .e.invited, .e.why", {
                scale: .5,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.hey", {
                scale: 1,
                opacity: 1,
                duration: 1,
                ease: "back.out(2)"
            }, 0).to(".e.hey", {
                y: -50,
                x: -50,
                opacity: 0,
                duration: .25
            }, 1).to(".e.why", {
                scale: 1,
                opacity: 1,
                duration: 1,
                ease: "back.out(2)"
            }, 1).to(".e.why", {
                y: -50,
                x: -50,
                opacity: 0,
                duration: .25
            }, 2).to(".e.invited", {
                scale: 1,
                opacity: 1,
                duration: 1,
                ease: "back.out(2)"
            }, 2).to(".e.invited", {
                y: -50,
                x: -50,
                opacity: 0,
                duration: .25
            }, 3).to(".e.pools", {
                scale: 1,
                opacity: 1,
                duration: 1,
                ease: "back.out(2)"
            }, 3)
        }
    }),
    I$ = Ob.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", [
            ["emoji", null, [206, 159]]
        ]),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("emoji", .35))
        }
    }),
    Ib = E.extend({
        imageManifest: {
            badPool: new URL("main/pp7/everyday/assets/af541a93.png", self.location).href,
            hammer: new URL("main/pp7/everyday/assets/eeabc739.png", self.location).href,
            screwDriver: new URL("main/pp7/everyday/assets/53ad5b7f.png", self.location).href,
            wrench: new URL("main/pp7/everyday/assets/0206d509.png", self.location).href
        }
    }),
    P$ = Ib.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("hammer", "screwDriver", "wrench"),
        onLoadComplete() {
            s.set(".e.hammer, .e.wrench", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench")), this.timeline.add(a.squashTransition("wrench", "screwDriver")), this.timeline.add(a.squashTransition("screwDriver", "hammer")), this.timeline.add(a.squashTransition("hammer", "wrench"))
        }
    }),
    U$ = Ib.extend({
        elements: a.elementsFromImages("badPool")
    }),
    Qa = E.extend({
        imageManifest: {
            help: new URL("main/pp7/everyday/assets/3c3b2b9b.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "help",
                images: {
                    thumbsUp: [10, 638, 523, 709, 181, 239],
                    signature: [1394, 462, 613, 132, 520, 171],
                    question: [1394, 10, 282, 442, 158, 354],
                    hardHat: [1297, 832, 642, 525, 223, 220],
                    hammer: [980, 10, 404, 812, 126, 462],
                    drillAnimated: [543, 638, 335, 8, 436, 50],
                    drill: [543, 832, 744, 515, 350, 28],
                    card: [10, 10, 960, 618, 120, 16]
                }
            }
        }
    }),
    F$ = Qa.extend({
        elements: a.elementsFromSprite("sprite", ["question"]),
        onStartProgress() {
            a.startHoldShake("question")
        },
        onStopProgress() {
            a.stopHoldShake("question")
        }
    }),
    j$ = Qa.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["hardHat"]),
        onDiscreteProgress() {
            a.squashOnce("hardHat", .25)
        }
    }),
    Q$ = Qa.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["hammer"]),
        onLoadComplete() {
            s.set(".e.hammer", {
                transformOrigin: "center bottom"
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".progress, .pie, .info", {
                    x: -5,
                    y: 5,
                    duration: .1
                }).to(".progress, .pie, .info", {
                    x: 5,
                    y: -5,
                    duration: .1
                }).to(".progress, .pie, .info", {
                    x: 3,
                    y: 3,
                    duration: .1
                }).to(".progress, .pie, .info", {
                    x: 2,
                    y: -2,
                    duration: .1
                }).to(".progress, .pie, .info", {
                    x: 1,
                    y: 1,
                    duration: .1
                }).to(".progress, .pie, .info", {
                    x: 0,
                    y: 0,
                    duration: .1
                }),
                e = s.timeline({
                    repeat: 4
                }).to(".e.hammer", {
                    rotate: 15,
                    ease: "power2.in"
                }).to(".e.hammer", {
                    rotate: -45,
                    duration: .1,
                    ease: "none"
                }).add(t).to(".e.hammer", {
                    rotate: 0
                });
            this.timeline.add(e)
        }
    }),
    z$ = Qa.extend({
        elements: a.elementsFromSprite("sprite", ["drill", "drillAnimated"]),
        onLoadComplete() {
            s.set(".e.drillAnimated", {
                clipPath: "inset(0% 50% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.drillAnimated", {
                x: -140,
                clipPath: "inset(0% 0% 0% 40%)"
            })
        }
    }),
    H$ = Qa.extend({
        elements: a.elementsFromSprite("sprite", ["thumbsUp"]),
        onLoadComplete() {
            s.fromTo(".e.thumbsUp", {
                scale: .7
            }, {
                scale: 1.1,
                duration: .75,
                ease: "back.out(3)"
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.thumbsUp", {
                rotate: -10,
                ease: "none"
            }).to(".e.thumbsUp", {
                rotate: 0,
                ease: "none"
            }).to(".e.thumbsUp", {
                rotate: 10,
                ease: "none"
            }).to(".e.thumbsUp", {
                rotate: 0,
                ease: "none"
            });
            this.timeline.add(t)
        }
    }),
    N$ = Qa.extend({
        elements: a.elementsFromSprite("sprite", ["card", "signature"]),
        onLoadComplete() {
            s.set(".e.signature", {
                clipPath: "inset(0% 100% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.signature", {
                clipPath: "inset(0% 0% 0% 0%)"
            })
        }
    }),
    G$ = E.extend({
        imageManifest: {
            pool: new URL("main/pp7/everyday/assets/c3c25f4e.png", self.location).href
        },
        sprites: {
            pool: {
                key: "pool",
                images: {
                    front: [10, 636, 853, 527, 251, 64],
                    hose: [650, 1173, 28, 90, 277, 728],
                    water: [10, 1173, 630, 65, 300, 197],
                    back: [10, 10, 853, 616, 162, 64]
                }
            }
        }
    }),
    X$ = G$.extend({
        elements: a.elementsFromSprite("pool", ["back", "water", "hose", "front"]),
        onLoadComplete() {
            s.set(".e.water", {
                y: 150
            }), s.set(".e.hose", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.hose", {
                hidden: !1
            }, .1).to(".e.water", {
                y: 0
            }, .3).set(".e.hose", {
                hidden: !0
            })
        }
    }),
    Im = E.extend({
        imageManifest: {
            flex: new URL("main/pp7/everyday/assets/8c135b4b.png", self.location).href,
            lotion: new URL("main/pp7/everyday/assets/62c0efc5.png", self.location).href,
            unflex: new URL("main/pp7/everyday/assets/f5aeb6cb.png", self.location).href
        }
    }),
    Y$ = Im.extend({
        elements: a.elementsFromImages("lotion"),
        initializeTimeline() {
            this.timeline.to(".e.lotion", {
                rotate: 180,
                scale: .9,
                duration: 1
            }).fillTime(.5).to(".e.lotion", {
                scaleX: .6,
                scaleY: 1,
                duration: .3
            }).to(".e.lotion", {
                scaleX: .9,
                scaleY: .9,
                duration: 1
            }).fillTime(.2).to(".e.lotion", {
                scaleX: .6,
                scaleY: 1,
                duration: .3
            }).to(".e.lotion", {
                scaleX: .9,
                scaleY: .9,
                duration: 1
            }).fillTime(.2).to(".e.lotion", {
                scaleX: .6,
                scaleY: 1,
                duration: .3
            }).to(".e.lotion", {
                scaleX: .9,
                scaleY: .9,
                duration: 1
            })
        }
    }),
    Pb = Im.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages(["unflex", null, [-270, 0]], ["flex", null, [115, 338]])
        }],
        onLoadComplete() {
            s.set(".e.flex", {
                hidden: !0
            })
        },
        onStartProgress() {
            a.startHoldShake("c", 10, 0), a.squashTransition("unflex", "flex", .25)
        },
        onStopProgress() {
            a.stopHoldShake("c"), a.squashTransition("flex", "unflex", .25)
        }
    }),
    K$ = Im.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages(["unflex", null, [-270, 0]], ["flex", null, [115, 338]])
        }],
        onLoadComplete() {
            s.set(".e.unflex", {
                hidden: !0
            }), a.squashTransition("flex", "unflex", .25)
        }
    }),
    W$ = Pb,
    Pm = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/1d52af0c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    yell: [910, 163, 454, 559, 190, 265],
                    front: [10, 10, 746, 502, 407, 190],
                    splash: [10, 522, 890, 417, 75, 15],
                    pool: [766, 10, 708, 143, 365, 221]
                }
            }
        }
    }),
    J$ = Pm.extend({
        elements: a.elementsFromSprite("sprite", [
            ["yell", null, [190, 265]]
        ]),
        onStartProgress() {
            a.startHoldShake("yell", 5, 5)
        },
        onStopProgress() {
            a.stopHoldShake("yell")
        }
    }),
    Z$ = Pm.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", [
            ["yell", null, [190, 265]]
        ]),
        onDiscreteProgress() {
            s.to(".e.yell", {
                x: 300,
                opacity: 0,
                ease: "back.in(2)"
            })
        }
    }),
    _$ = Pm.extend({
        stepDuration: .6,
        elements: a.elementsFromSprite("sprite", [
            ["pool", null, [365, 221]],
            ["splash", null, [75, 15]],
            ["front", null, [407, 190]]
        ]),
        onLoadComplete() {
            s.set(".e.splash", {
                x: 10,
                y: 310,
                scaleX: .6,
                scaleY: .4,
                transformOrigin: "bottom right"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.splash", {
                x: 0,
                y: 0,
                scale: 1
            }, 0)
        }
    }),
    Ub = E.extend({
        imageManifest: {
            capacity: new URL("main/pp7/everyday/assets/0017a819.png", self.location).href,
            tv: new URL("main/pp7/everyday/assets/2ad26346.png", self.location).href,
            tv1: new URL("main/pp7/everyday/assets/b862c36a.png", self.location).href
        }
    }),
    $$ = Ub.extend({
        elements: a.elementsFromImages("capacity"),
        onLoadComplete() {
            s.fromTo(".e.capacity", {
                scale: .6
            }, {
                scale: 1,
                duration: .5,
                ease: "back.out(2)"
            })
        }
    }),
    eee = Ub.extend({
        elements: a.elementsFromImages("tv1", "tv")
    }),
    Um = E.extend({
        imageManifest: {
            break: new URL("main/pp7/everyday/assets/0d5b4015.png", self.location).href,
            dip: new URL("main/pp7/everyday/assets/3f7f88bb.png", self.location).href,
            temp: new URL("main/pp7/everyday/assets/738765b8.png", self.location).href,
            thermometer: new URL("main/pp7/everyday/assets/1569517e.png", self.location).href,
            thermometerBroken: new URL("main/pp7/everyday/assets/b308bd5e.png", self.location).href
        }
    }),
    tee = Um.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("dip", "thermometer"),
        initializeTimeline() {
            this.timeline.to(".e.thermometer", {
                x: -50,
                y: 0,
                scale: .8
            })
        }
    }),
    nee = Um.extend({
        elements: a.elementsFromImages("temp"),
        onStartProgress() {
            a.startHoldShake("temp", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("temp", 2, 1)
        }
    }),
    iee = Um.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("break", "thermometerBroken"),
        initializeTimeline() {
            s.to(".e.thermometerBroken", {
                scale: 1.5,
                opacity: 0,
                delay: .15
            })
        }
    }),
    Pd = E.extend({
        imageManifest: {
            blow: new URL("main/pp7/everyday/assets/7463ec0e.png", self.location).href,
            ick: new URL("main/pp7/everyday/assets/e7688583.png", self.location).href,
            box: new URL("main/pp7/everyday/assets/504603e8.png", self.location).href,
            tissue1: new URL("main/pp7/everyday/assets/44a8fa3e.png", self.location).href,
            tissue2: new URL("main/pp7/everyday/assets/d8cfc14d.png", self.location).href,
            tissue3: new URL("main/pp7/everyday/assets/a1fc7b06.png", self.location).href,
            wipe: new URL("main/pp7/everyday/assets/c8e072c2.png", self.location).href
        }
    }),
    see = Pd.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("box", "tissue1", "tissue2"),
        initializeTimeline() {
            s.set(".e.tissue2", {
                scaleY: .6,
                scaleX: .8,
                y: 35
            }), s.set(".e.tissue1", {
                opacity: 0,
                scale: .5
            }), this.timeline.to(".e.tissue2", {
                scaleY: 1,
                scaleX: 1,
                y: 0
            }), this.timeline.to(".e.tissue1", {
                scale: 1,
                y: -200,
                opacity: 1,
                ease: "none"
            }, "<"), this.timeline.to(".e.tissue1", {
                opacity: 0,
                y: -300
            })
        }
    }),
    oee = Pd.extend({
        elements: a.elementsFromImages("blow"),
        onStartProgress() {
            a.startHoldShake("blow", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("blow", 2, 1)
        }
    }),
    aee = Pd.extend({
        elements: a.elementsFromImages("wipe", "tissue3"),
        initializeTimeline() {
            this.timeline.fromTo(".e.tissue3", {
                x: 20
            }, {
                x: -20,
                yoyo: !0,
                repeat: 10
            })
        }
    }),
    ree = Pd.extend({
        elements: a.elementsFromImages("ick")
    }),
    Ud = E.extend({
        imageManifest: {
            doctor: new URL("main/pp7/everyday/assets/118ae0fb.png", self.location).href,
            advice: new URL("main/pp7/everyday/assets/0053dd86.png", self.location).href,
            ick: new URL("main/pp7/everyday/assets/0cba1838.png", self.location).href,
            soup: new URL("main/pp7/everyday/assets/104132f9.png", self.location).href,
            spoon: new URL("main/pp7/everyday/assets/6f2d06ad.png", self.location).href,
            violin: new URL("main/pp7/everyday/assets/28cb9cc8.png", self.location).href,
            note: new URL("main/pp7/everyday/assets/0a65c77c.png", self.location).href
        }
    }),
    Vee = Ud.extend({
        elements: a.elementsFromImages("violin", "note", "note", "note", "note"),
        initializeTimeline() {
            this.timeline.fromTo(".e.note", {
                display: "none",
                opacity: 1,
                x: 500,
                y: 500
            }, {
                display: "block",
                x: "random(300, 700)",
                y: 0,
                rotate: "random(-50, 50)",
                opacity: 0,
                stagger: .25,
                duration: .5
            })
        },
        onStartProgress() {
            a.startHoldShake("violin", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("violin", 2, 1)
        }
    }),
    lee = Ud.extend({
        elements: a.elementsFromImages("doctor", "advice"),
        initializeTimeline() {
            this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .2
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .2
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .05
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .05
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .2
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .05
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .1
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .2
            }), this.timeline.set(".e.advice", {
                opacity: 0,
                delay: .2
            }), this.timeline.set(".e.advice", {
                opacity: 1,
                delay: .1
            })
        }
    }),
    Aee = Ud.extend({
        elements: a.elementsFromImages("soup", "spoon"),
        initializeTimeline() {
            this.timeline.to(".e.spoon", {
                rotate: -10,
                x: -160,
                y: 20,
                yoyo: !0,
                repeat: 3
            })
        }
    }),
    cee = Ud.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("ick", "soup", "spoon"),
        initializeTimeline() {
            s.set(".e.ick", {
                opacity: 0,
                y: 110
            }), this.timeline.to(".e.soup,.e.spoon", {
                opacity: 0,
                y: 30
            }), this.timeline.to(".e.ick", {
                opacity: 1,
                y: 80
            }, "<")
        }
    }),
    dee = E.extend({
        imageManifest: {
            pillow: new URL("main/pp7/everyday/assets/236ed0ec.png", self.location).href
        }
    }),
    pee = dee.extend({
        elements: a.elementsFromImages("pillow")
    }),
    Fm = E.extend({
        imageManifest: {
            dentist: new URL("main/pp7/everyday/assets/8fd394b4.png", self.location).href,
            route666: new URL("main/pp7/everyday/assets/10c4e76e.png", self.location).href,
            teen: new URL("main/pp7/everyday/assets/4faa82cc.png", self.location).href
        }
    }),
    hee = Fm.extend({
        stepDuration: 1,
        elements: [{
            class: "fridge-container",
            type: "container",
            children: [{
                class: "teen",
                type: "img",
                key: "teen"
            }]
        }],
        onDiscreteProgress() {
            s.timeline().to(".e.teen", {
                rotate: 180,
                scale: .7,
                y: 1e3,
                duration: .75,
                ease: "power3.out"
            }, 0).to(".e.teen", {
                opacity: 0
            }, .5)
        }
    }),
    uee = Fm.extend({
        stepDuration: 1,
        elements: [{
            class: "fridge-container",
            type: "container",
            children: [{
                class: "dentist",
                type: "img",
                key: "dentist"
            }]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.dentist", {
                rotate: -65,
                y: 500,
                scale: 1.5
            }, {
                y: 0,
                scale: 1,
                rotate: 0,
                duration: .75,
                ease: "back.inOut"
            })
        }
    }),
    mee = Fm.extend({
        stepDuration: 1.15,
        elements: [{
            class: "fridge-container",
            type: "container",
            children: [{
                class: "dentist",
                type: "img",
                key: "dentist"
            }, {
                class: "route666",
                type: "img",
                key: "route666"
            }]
        }],
        initializeTimeline() {
            s.set(".e.route666", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("dentist", "route666", .25)
        }
    }),
    Fd = E.extend({
        imageManifest: {
            improved: new URL("main/pp7/everyday/assets/17e42203.png", self.location).href,
            mailbox: new URL("main/pp7/everyday/assets/246f6788.png", self.location).href,
            report: new URL("main/pp7/everyday/assets/25f1f8ed.png", self.location).href
        }
    }),
    fee = Fd.extend({
        stepDuration: .3,
        elements: [{
            class: "mailbox-container",
            type: "container",
            children: [{
                class: "mailbox",
                type: "img",
                key: "mailbox"
            }]
        }],
        initializeTimeline() {
            s.set(".mailbox", {
                scale: .4
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".mailbox-container", {
                y: -100,
                ease: "power2.out",
                duration: .15
            }).to(".mailbox-container", {
                y: 0,
                ease: "power2.inOut",
                duration: .15
            }), t === 25 ? s.timeline().to(".mailbox", {
                scale: .55,
                duration: .25
            }) : t === 50 ? s.timeline().to(".mailbox", {
                scale: .7,
                duration: .25
            }) : t === 75 ? s.timeline().to(".mailbox", {
                scale: .85,
                duration: .25
            }) : t === 100 && s.timeline().to(".mailbox", {
                scale: 1,
                duration: .25
            })
        }
    }),
    qee = Fd.extend({
        elements: [{
            class: "mailbox-container",
            type: "container",
            children: [{
                class: "report",
                type: "img",
                key: "report"
            }]
        }],
        initializeTimeline() {
            s.set(".e.report", {
                y: -250,
                scale: .6
            }), this.timeline.to(".e.report", {
                y: 500,
                scale: .9,
                ease: "back.in"
            })
        }
    }),
    gee = Fd.extend({
        elements: [{
            class: "mailbox-container",
            type: "container",
            children: [{
                class: "improved",
                type: "img",
                key: "improved"
            }, {
                class: "report",
                type: "img",
                key: "report"
            }]
        }],
        initializeTimeline() {
            s.set(".e.report", {
                y: 500,
                scale: .9
            }), s.set(".e.improved", {
                y: 500,
                scale: .9
            }), this.timeline.to(".e.improved", {
                y: -250,
                scale: .6,
                ease: "power3.out"
            }).to(".e.report", {
                y: 700,
                opacity: 0
            })
        }
    }),
    yee = Fd.extend({
        stepDuration: .3,
        elements: [{
            class: "mailbox-container",
            type: "container",
            children: [{
                class: "mailbox",
                type: "img",
                key: "mailbox"
            }]
        }],
        initializeTimeline() {
            s.set(".mailbox", {
                scale: 1
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".mailbox-container", {
                y: -100,
                ease: "power2.out",
                duration: .15
            }).to(".mailbox-container", {
                y: 0,
                ease: "power2.inOut",
                duration: .15
            }), t === 25 ? s.timeline().to(".mailbox", {
                scale: .95,
                duration: .25
            }) : t === 50 ? s.timeline().to(".mailbox", {
                scale: .85,
                duration: .25
            }) : t === 75 ? s.timeline().to(".mailbox", {
                scale: .7,
                duration: .25
            }) : t === 100 && s.timeline().to(".mailbox", {
                scale: .55,
                duration: .25
            })
        }
    }),
    jd = E.extend({
        imageManifest: {
            eyes: new URL("main/pp7/everyday/assets/c62f916a.png", self.location).href,
            hand: new URL("main/pp7/everyday/assets/30fa82b1.png", self.location).href,
            finger1: new URL("main/pp7/everyday/assets/2ad1dfae.png", self.location).href,
            finger: new URL("main/pp7/everyday/assets/286e17b3.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/1afcf734.png", self.location).href
        }
    }),
    bee = jd.extend({
        elements: [{
            class: "teen-container",
            type: "container",
            children: [{
                class: "eyes",
                type: "img",
                key: "eyes"
            }]
        }],
        initializeTimeline() {
            a.startShake("eyes", 2, 2, 2), this.timeline.fromTo(".teen-container", {
                scale: .8
            }, {
                scale: 1.8
            })
        }
    }),
    vee = jd.extend({
        stepDuration: .4,
        lastStepDuration: 1.15,
        elements: [{
            class: "teen-container",
            type: "container",
            children: [{
                class: "hand",
                type: "img",
                key: "hand"
            }]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.hand", {
                y: -500,
                x: 150,
                scale: .6
            }, {
                y: 0,
                x: -250,
                scale: .8,
                ease: "back.inOut"
            })
        },
        onDiscreteProgress() {}
    }),
    wee = jd.extend({
        stepDuration: 2,
        elements: [{
            class: "teen-container",
            type: "container",
            children: [{
                class: "finger",
                type: "img",
                key: "finger"
            }, {
                class: "finger1",
                type: "img",
                key: "finger1"
            }]
        }],
        initializeTimeline() {
            s.set(".e.finger", {
                transformOrigin: "center 80%",
                hidden: !0
            }), s.set(".e.finger1", {
                transformOrigin: "center 80%",
                rotate: 15
            })
        },
        onDiscreteProgress() {
            s.set(".e.finger", {
                hidden: !1
            }), s.set(".e.finger1", {
                hidden: !0
            }), a.startShake("finger", 0, 20, 0)
        }
    }),
    xee = jd.extend({
        stepDuration: .5,
        lastStepDuration: 1.25,
        elements: [{
            class: "teen-container",
            type: "container",
            children: [{
                class: "phone",
                type: "img",
                key: "phone"
            }]
        }],
        initializeTimeline() {
            this.timeline.to(".e.phone", {
                y: 1e3,
                rotate: 25,
                ease: "back.in"
            }, 0).to(".e.phone", {
                opacity: 0
            }, .5)
        }
    }),
    Qd = E.extend({
        imageManifest: {
            crawl: new URL("main/pp7/everyday/assets/fa6d5ca2.png", self.location).href,
            drawer: new URL("main/pp7/everyday/assets/ec9df9b2.png", self.location).href,
            open: new URL("main/pp7/everyday/assets/9aeb204a.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/9696c8b4.png", self.location).href
        }
    }),
    kee = Qd.extend({
        stepDuration: .25,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "crawl",
                type: "img",
                key: "crawl"
            }]
        }],
        onDiscreteProgress(t) {
            a.squashOnce("sneak-container", .4, "x");
            let e = -1;
            Math.floor(t) === 66 ? e = 1 : e = -1, s.timeline().to(".crawl", {
                scaleX: e,
                duration: .25
            })
        }
    }),
    Cee = Qd.extend({
        stepDuration: 1.25,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "drawer",
                type: "img",
                key: "drawer"
            }, {
                class: "open",
                type: "img",
                key: "open"
            }]
        }],
        initializeTimeline() {
            s.set(".e.open", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("drawer", "open", .25)
        }
    }),
    Ree = Qd.extend({
        stepDuration: .5,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "phone",
                type: "img",
                key: "phone"
            }]
        }],
        onDiscreteProgress() {
            a.squashOnce("phone", .15)
        }
    }),
    Dee = Qd.extend({
        stepDuration: 1.25,
        elements: [{
            class: "sneak-container",
            type: "container",
            children: [{
                class: "drawer",
                type: "img",
                key: "drawer"
            }, {
                class: "open",
                type: "img",
                key: "open"
            }]
        }],
        initializeTimeline() {
            s.set(".e.drawer", {
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("open", "drawer", .25)
        }
    }),
    zd = E.extend({
        imageManifest: {
            ladder: new URL("main/pp7/everyday/assets/1dd2e79e.png", self.location).href,
            report: new URL("main/pp7/everyday/assets/7891c359.png", self.location).href,
            shoebox: new URL("main/pp7/everyday/assets/b81c73ba.png", self.location).href,
            lid: new URL("main/pp7/everyday/assets/bada3784.png", self.location).href
        }
    }),
    See = zd.extend({
        stepDuration: .3,
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "ladder",
                type: "img",
                key: "ladder"
            }]
        }],
        onDiscreteProgress() {
            a.squashOnce("ladder", .25), s.timeline().to(".attic-container", {
                y: -100,
                ease: "power2.out",
                duration: .15
            }).to(".attic-container", {
                y: 0,
                ease: "power2.inOut",
                duration: .15
            })
        }
    }),
    Tee = zd.extend({
        stepDuration: 1.25,
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "shoebox",
                type: "img",
                key: "shoebox"
            }, {
                class: "lid",
                type: "img",
                key: "lid"
            }]
        }],
        onDiscreteProgress(t) {
            t > 25 && t < 75 ? s.timeline().set(".e.lid", {
                transformOrigin: "95% 76%"
            }).to(".e.lid", {
                rotate: 15,
                ease: "power3.out",
                duration: .2
            }).to(".e.lid", {
                rotate: 0,
                ease: "bounce.out",
                duration: .2
            }) : t > 75 && s.timeline().set(".e.lid", {
                transformOrigin: "95% 76%"
            }).to(".e.lid", {
                rotate: 270,
                x: 500,
                y: -1250,
                duration: .5
            })
        }
    }),
    Eee = zd.extend({
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "report",
                type: "img",
                key: "report"
            }]
        }],
        initializeTimeline() {
            a.startShake("report", 2, 5, 2)
        }
    }),
    Lee = zd.extend({
        stepDuration: .25,
        lastStepDuration: 1,
        elements: [{
            class: "attic-container",
            type: "container",
            children: [{
                class: "shoebox",
                type: "img",
                key: "shoebox"
            }, {
                class: "lid",
                type: "img",
                key: "lid"
            }]
        }],
        initializeTimeline() {
            s.set(".e.lid", {
                rotate: 25,
                x: 250,
                y: -150
            }), this.timeline.to(".e.lid", {
                rotate: 0,
                x: 0,
                y: 0,
                duration: .15,
                ease: "back.out"
            })
        }
    }),
    Bee = E.extend({
        imageManifest: {
            dice1: new URL("main/pp7/everyday/assets/60a76ba8.png", self.location).href,
            dice2: new URL("main/pp7/everyday/assets/7914659d.png", self.location).href
        }
    }),
    Mee = Bee.extend({
        elements: [{
            class: "game-container",
            type: "container",
            children: [{
                class: "dice1",
                type: "img",
                key: "dice1",
                pos: [-50, -200]
            }, {
                class: "dice2",
                type: "img",
                key: "dice2",
                pos: [50, 200]
            }]
        }],
        initializeTimeline() {
            a.startShake("dice1", 2, 3, 0), a.startShake("dice2", 4, 2, 0)
        }
    }),
    Hd = E.extend({
        imageManifest: {
            coolKids: new URL("main/pp7/everyday/assets/50e3cb3b.png", self.location).href,
            devilSig: new URL("main/pp7/everyday/assets/a1380232.png", self.location).href,
            hand: new URL("main/pp7/everyday/assets/f0f1e20b.png", self.location).href,
            autographs: new URL("main/pp7/everyday/assets/569d5e94.png", self.location).href,
            forgetHead: new URL("main/pp7/everyday/assets/da3ea313.png", self.location).href,
            forgetBubble: new URL("main/pp7/everyday/assets/0a9fb7ad.png", self.location).href,
            headSet: new URL("main/pp7/everyday/assets/205ac52b.png", self.location).href
        }
    }),
    Oee = Hd.extend({
        elements: a.elementsFromImages("forgetHead", "forgetBubble"),
        onLoadComplete() {
            s.set(".e.forgetBubble", {
                scale: .7,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.forgetBubble", {
                opacity: 1,
                duration: .1
            }, .3).to(".e.forgetBubble", {
                scale: 1,
                duration: .3,
                ease: "back.out(2)"
            }, .3).set(".e.forgetBubble", {
                visibility: !0
            }, 2)
        },
        onStartProgress() {
            a.startHoldShake("forgetHead")
        },
        onStopProgress() {
            a.stopHoldShake("forgetHead")
        }
    }),
    Iee = Hd.extend({
        elements: a.elementsFromImages("coolKids", "autographs"),
        onLoadComplete() {
            s.set(".e.autographs", {
                clipPath: "inset(0% 80% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.autographs", {
                clipPath: "inset(0% 46% 0% 0%)"
            })
        }
    }),
    Pee = Hd.extend({
        elements: a.elementsFromImages("coolKids", "autographs", "devilSig", "hand"),
        onLoadComplete() {
            s.set(".e.hand", {
                x: -140,
                y: -220
            }), s.set(".e.devilSig", {
                x: 190,
                y: 60,
                rotate: 27,
                clipPath: "inset(0% 77% 0% 0%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devilSig", {
                clipPath: "inset(0% 43% 0% 0%)"
            }, 0).to(".e.hand", {
                x: 80,
                y: -120
            }, 0).to(".e.hand", {
                x: -100,
                y: 200
            })
        }
    }),
    Uee = Hd.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("headSet"),
        onLoadComplete() {
            s.set(".e.headSet", {
                y: -100
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.headSet", {
                y: -200,
                scaleY: .7,
                duration: .2,
                ease: "power1.out"
            }).to(".e.headSet", {
                y: 0,
                scaleY: 1,
                duration: .15,
                ease: "power1.in"
            }, .25)
        }
    }),
    Nd = E.extend({
        imageManifest: {
            board: new URL("main/pp7/everyday/assets/4ad11dc6.png", self.location).href,
            run: new URL("main/pp7/everyday/assets/4fac560f.png", self.location).href,
            sweat: new URL("main/pp7/everyday/assets/f3504e08.png", self.location).href
        },
        sprites: {
            run: {
                size: [1200, 400],
                grid: [3, 1],
                key: "run",
                images: {
                    run: [0, 0],
                    down: [1, 0],
                    lines: [2, 0]
                }
            }
        }
    }),
    Fee = Nd.extend({
        elements: a.elementsFromImages("board"),
        onLoadComplete() {
            s.set(".e.board", {
                scale: .6
            })
        }
    }),
    jee = Nd.extend({
        elements: a.elementsFromImages("board"),
        onLoadComplete() {
            s.set(".e.board", {
                scale: .6
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.board", {
                scale: 1
            })
        }
    }),
    Qee = Nd.extend({
        elements: a.elementsFromImages("sweat"),
        onStartProgress() {
            a.startHoldShake("sweat", 5)
        },
        onStopProgress() {
            a.stopHoldShake("sweat")
        }
    }),
    zee = Nd.extend({
        stepDuration: .75,
        elements: a.elementsFromSprite("run", [
            ["run", null, [330, -300]],
            ["down", null, [570, -200]],
            ["lines", null, [480, 260]]
        ]),
        onLoadComplete() {
            s.set(".e.lines", {
                opacity: 0
            }), s.set(".e.down", {
                opacity: 0,
                y: -150,
                rotate: -80
            }), s.timeline().to(".e.run", {
                x: 1350,
                duration: this.stepDuration,
                ease: "power2.in"
            }).set(".e.run", {
                x: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                    repeat: 2
                }).to(".e.run", {
                    x: 1350,
                    duration: 1,
                    ease: "power2.in"
                }).set(".e.run", {
                    x: 0
                }),
                e = s.timeline({
                    repeat: 2
                }).to(".e.lines", {
                    x: 80,
                    duration: .5,
                    ease: "power2.in"
                }, .5).to(".e.lines", {
                    opacity: 1,
                    duration: .15,
                    ease: "none"
                }, .7).to(".e.lines", {
                    opacity: 0,
                    duration: .15,
                    ease: "none"
                }, .85),
                n = s.timeline().set(".e.down", {
                    opacity: 1
                }).to(".e.down", {
                    y: 0,
                    x: 180,
                    rotate: 0,
                    duration: .35,
                    ease: "power2.in"
                }, .15).to(".e.down", {
                    x: 350,
                    duration: .6,
                    ease: "power2.out"
                });
            this.timeline.add(t), this.timeline.add(e, 0), this.timeline.add(n, 2)
        }
    }),
    Gd = E.extend({
        imageManifest: {
            photo: new URL("main/pp7/everyday/assets/76f29f96.png", self.location).href,
            photoClean: new URL("main/pp7/everyday/assets/774f2a08.png", self.location).href,
            dust: new URL("main/pp7/everyday/assets/2a9b9cd4.png", self.location).href,
            playbill: new URL("main/pp7/everyday/assets/caf6d9ed.png", self.location).href,
            shame: new URL("main/pp7/everyday/assets/16a69468.png", self.location).href,
            think: new URL("main/pp7/everyday/assets/f991fddc.png", self.location).href,
            thought: new URL("main/pp7/everyday/assets/e809108c.png", self.location).href,
            fuss: new URL("main/pp7/everyday/assets/54f35938.png", self.location).href
        },
        sprites: {
            thought: {
                size: [388, 1232],
                grid: [1, 4],
                key: "thought",
                images: {
                    thought0: [0, 0],
                    thought1: [0, 1],
                    thought2: [0, 2],
                    thought3: [0, 3]
                }
            }
        }
    }),
    Hee = Gd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("photo", "photoClean", ["dust", "dust0", [300, 350]], ["dust", "dust1", [300, 350]], ["dust", "dust2", [300, 350]])
        }],
        onLoadComplete() {
            s.set(".e.photoClean, .e.dust0, .e.dust1, .e.dust2", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.dust0", {
                x: 200,
                y: -300,
                duration: .15
            }).to(".e.dust0", {
                opacity: 1,
                duration: .075,
                ease: "none"
            }, 0).to(".e.dust0", {
                opacity: 0,
                duration: .075,
                ease: "none"
            }, .075).to(".e.dust1", {
                x: -150,
                y: -350,
                duration: .15
            }, 0).to(".e.dust1", {
                opacity: 1,
                duration: .075,
                ease: "none"
            }, 0).to(".e.dust1", {
                opacity: 0,
                duration: .075,
                ease: "none"
            }, .075).to(".e.dust2", {
                x: 25,
                y: -370,
                duration: .15
            }, 0).to(".e.dust2", {
                opacity: 1,
                duration: .075,
                ease: "none"
            }, 0).to(".e.dust2", {
                opacity: 0,
                duration: .075,
                ease: "none"
            }, .075).to(".e.photoClean", {
                opacity: 1,
                ease: "power1.out"
            }, 0)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Nee = Gd.extend({
        stepDuration: .6,
        elements: a.elementsFromImages(["playbill", "playbill2", [164, 285]], ["playbill", "playbill1", [164, 285]], ["playbill", "playbill0", [164, 285]]),
        onLoadComplete() {
            s.set(".e.playbill1", {
                x: -30,
                rotate: -10
            }), s.set(".e.playbill2", {
                x: -60,
                rotate: -20
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.playbill0", {
                x: -600,
                rotate: -20
            }).to(".e.playbill1", {
                x: 0,
                rotate: 0
            }, "<").to(".e.playbill2", {
                x: -30,
                rotate: -10
            }, "<").set(".e.playbill0", {
                zIndex: -1
            }).to(".e.playbill0", {
                x: -60,
                rotate: -20
            }).to(".e.playbill1", {
                x: -600,
                rotate: -20
            }).to(".e.playbill2", {
                x: 0,
                rotate: 0
            }, "<").to(".e.playbill0", {
                x: -30,
                rotate: -10
            }, "<").set(".e.playbill1", {
                zIndex: -1
            }).to(".e.playbill1", {
                x: -60,
                rotate: -20
            }).to(".e.playbill2", {
                x: -600,
                rotate: -20
            }).to(".e.playbill0", {
                x: 0,
                rotate: 0
            }, "<").to(".e.playbill1", {
                x: -30,
                rotate: -10
            }, "<").set(".e.playbill2", {
                zIndex: -1
            }).to(".e.playbill2", {
                x: -60,
                rotate: -20
            })
        }
    }),
    Gee = Gd.extend({
        elements: [...a.elementsFromImages("think"), ...a.elementsFromSprite("thought", ["thought0", "thought1", "thought2", "thought3"])],
        onLoadComplete() {
            s.set(".e.thought0", {
                x: 480,
                y: 176,
                opacity: 0
            }), s.set(".e.thought1", {
                x: 610,
                y: 480,
                opacity: 0
            }), s.set(".e.thought2", {
                x: 550,
                y: 590,
                opacity: 0
            }), s.set(".e.thought3", {
                x: 608,
                y: 210,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.thought2", {
                opacity: 1,
                duration: 1
            }).to(".e.thought1", {
                opacity: 1,
                duration: 1
            }, .25).to(".e.thought0", {
                opacity: 1,
                duration: 1
            }, .5).to(".e.thought3", {
                opacity: 1
            }, .75).fillTime(1.5)
        }
    }),
    Xee = Gd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("shame", ["fuss", null, [290, 475]]),
        onLoadComplete() {
            s.set(".e.fuss", {
                rotate: 120,
                opacity: 0
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.fuss", {
                x: 40,
                duration: .2
            }).to(".e.fuss", {
                opacity: 1,
                duration: .1
            }, 0).to(".e.fuss", {
                opacity: 0,
                duration: .1
            }).set(".e.fuss", {
                x: 0
            })
        }
    }),
    Xd = E.extend({
        imageManifest: {
            cutBack: new URL("main/pp7/everyday/assets/e65a632d.png", self.location).href,
            cutFront: new URL("main/pp7/everyday/assets/e16fd0a4.png", self.location).href,
            scissors: new URL("main/pp7/everyday/assets/4961b552.png", self.location).href,
            hat: new URL("main/pp7/everyday/assets/125caa9e.png", self.location).href,
            blouse: new URL("main/pp7/everyday/assets/5c616864.png", self.location).href,
            leaf: new URL("main/pp7/everyday/assets/4496bdf8.png", self.location).href,
            window: new URL("main/pp7/everyday/assets/49692c80.png", self.location).href
        }
    }),
    Yee = Xd.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("cutBack", "scissors", "cutFront"),
        onLoadComplete() {
            s.set(".e.scissors", {
                x: 460,
                y: 162
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.scissors", {
                x: 250,
                y: 250
            })
        }
    }),
    Kee = Xd.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("blouse", ["leaf", "leaf-0"], ["leaf", "leaf-1"], ["leaf", "leaf-2"], ["leaf", "leaf-3"], ["leaf", "leaf-4"]),
        onLoadComplete() {
            s.set(".e.leaf-0", {
                x: 220,
                y: 100,
                opacity: 0
            }), s.set(".e.leaf-1", {
                x: 550,
                y: 500,
                opacity: 0,
                rotate: 30,
                scaleX: -1
            }), s.set(".e.leaf-2", {
                x: 630,
                y: 190,
                opacity: 0,
                rotate: 20
            }), s.set(".e.leaf-3", {
                x: 140,
                y: 230,
                opacity: 0,
                rotate: -20,
                scaleX: -1
            }), s.set(".e.leaf-4", {
                x: 260,
                y: 460,
                opacity: 0,
                rotate: -30
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.leaf-0", {
                opacity: 1,
                scale: .5
            }).to(".e.leaf-1", {
                opacity: 1,
                scaleX: -.5,
                scaleY: .5
            }).to(".e.leaf-2", {
                opacity: 1,
                scale: .5
            }).to(".e.leaf-3", {
                opacity: 1,
                scaleX: -.5,
                scaleY: .5
            }).to(".e.leaf-4", {
                opacity: 1,
                scale: .5
            })
        }
    }),
    Wee = Xd.extend({
        elements: a.elementsFromImages("window")
    }),
    Jee = Xd.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("blouse", ["leaf", "leaf-0"], ["leaf", "leaf-1"], ["leaf", "leaf-2"], ["leaf", "leaf-3"], ["leaf", "leaf-4"])
        }, {
            class: "hat",
            type: "img",
            key: "hat"
        }],
        onLoadComplete() {
            s.set(".e.hat", {
                y: -550,
                scale: .4,
                opacity: 0
            }), s.set(".e.leaf-0", {
                x: 220,
                y: 100,
                scale: .5
            }), s.set(".e.leaf-1", {
                x: 550,
                y: 500,
                rotate: 30,
                scaleX: -.5,
                scaleY: .5
            }), s.set(".e.leaf-2", {
                x: 630,
                y: 190,
                rotate: 20,
                scale: .5
            }), s.set(".e.leaf-3", {
                x: 140,
                y: 230,
                rotate: -20,
                scaleX: -.5,
                scaleY: .5
            }), s.set(".e.leaf-4", {
                x: 260,
                y: 460,
                rotate: -30,
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.c", {
                y: 130,
                ease: "back.in(2)"
            }).fillTime(.5).to(".e.hat", {
                opacity: 1
            }).to(".e.hat", {
                y: -400,
                ease: "back.out(2)"
            }).fillTime(.5)
        }
    }),
    Fb = E.extend({
        imageManifest: {
            finish: new URL("main/pp7/everyday/assets/0fec1f98.png", self.location).href,
            sew: new URL("main/pp7/everyday/assets/934fa311.png", self.location).href
        }
    }),
    jb = Fb.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("sew"),
        onDiscreteProgress() {
            a.squashOnce("sew")
        }
    }),
    Zee = jb,
    _ee = Fb.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("finish"),
        onDiscreteProgress() {
            a.squashOnce("finish")
        }
    }),
    Yd = E.extend({
        imageManifest: {
            headSet: new URL("main/pp7/everyday/assets/205ac52b.png", self.location).href,
            nyc: new URL("main/pp7/everyday/assets/74321a06.png", self.location).href,
            set: new URL("main/pp7/everyday/assets/4d028bc4.png", self.location).href
        },
        sprites: {
            nyc: {
                size: [580, 1060],
                grid: [1, 2],
                key: "nyc",
                images: {
                    nyc: [0, 0],
                    devil: [0, 1]
                }
            },
            set: {
                key: "set",
                images: {
                    tower: [0, 0, 193, 531],
                    devil: [193, 0, 181, 278],
                    front: [374, 0, 429, 350]
                }
            }
        }
    }),
    $ee = Yd.extend({
        stepDuration: .5,
        elements: a.elementsFromSprite("nyc", ["nyc", "devil"]),
        onLoadComplete() {
            s.set(".e.nyc", {
                x: 120,
                y: 100,
                opacity: 0,
                scale: .7
            }), s.set(".e.devil", {
                x: 520,
                y: 500
            })
        },
        onDiscreteProgress() {
            s.to(".e.nyc", {
                opacity: 1,
                scale: 1,
                duration: .4,
                ease: "back.out(2)"
            })
        }
    }),
    ete = Yd.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("headSet"),
        initializeTimeline() {
            this.timeline.fromTo(".e.headSet", {
                y: 100
            }, {
                y: -100,
                ease: "back.in(2)"
            })
        }
    }),
    tte = Yd.extend({
        elements: a.elementsFromSprite("set", [
            ["front", null, [440, 217]],
            ["tower", "left", [265, 250]],
            ["tower", "right", [265, 608]],
            ["devil", null, [513, 792]]
        ]),
        onLoadComplete() {
            s.set(".e.left", {
                scaleX: -1,
                transformOrigin: "bottom left"
            }), s.set(".e.right", {
                transformOrigin: "bottom left"
            }), s.set(".e.front", {
                transformOrigin: "bottom center"
            }), s.set(".e.devil", {
                skewX: -5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil", {
                x: -25,
                skewX: 0
            }).to(".e.right", {
                x: -16,
                duration: .75
            }, .2)
        }
    }),
    nte = Yd.extend({
        elements: a.elementsFromSprite("set", [
            ["front", null, [440, 217]],
            ["tower", "right", [265, 592]],
            ["tower", "left", [265, 250]],
            ["devil", null, [513, 767]]
        ]),
        onLoadComplete() {
            s.set(".e.left", {
                scaleX: -1,
                transformOrigin: "bottom left"
            }), s.set(".e.right", {
                transformOrigin: "bottom left"
            }), s.set(".e.front", {
                transformOrigin: "bottom center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.front", {
                scaleY: .25,
                duration: 1,
                ease: "power2.in"
            }, 0).to(".e.right", {
                rotate: -70,
                duration: 1,
                ease: "power3.in"
            }, .2).to(".e.right", {
                x: -15,
                rotate: -65,
                duration: .05,
                ease: "power3.out"
            }, 1.2).to(".e.right", {
                x: -30,
                rotate: -70,
                duration: .05,
                ease: "none"
            }, 1.3).to(".e.left", {
                rotate: 90,
                duration: 1,
                ease: "power3.in"
            }, .2).to(".e.left", {
                x: 15,
                rotate: 85,
                duration: .05,
                ease: "power3.out"
            }, 1.2).to(".e.left", {
                x: 30,
                rotate: 90,
                duration: .05,
                ease: "none"
            }, 1.3).fillTime(.5)
        }
    }),
    Kd = E.extend({
        imageManifest: {
            heckler: new URL("main/pp7/everyday/assets/93a82f30.png", self.location).href,
            exclaim: new URL("main/pp7/everyday/assets/05fcac50.png", self.location).href,
            flee: new URL("main/pp7/everyday/assets/6c29e649.png", self.location).href,
            spotlight: new URL("main/pp7/everyday/assets/8ff29623.png", self.location).href,
            squint: new URL("main/pp7/everyday/assets/84d6c4ad.png", self.location).href
        },
        sprites: {
            flee: {
                key: "flee",
                images: {
                    devil: [0, 0, 400, 511],
                    tomato: [400, 0, 139, 118],
                    lines: [400, 118, 139, 256]
                }
            },
            squint: {
                key: "squint",
                images: {
                    devil: [0, 0, 730, 456],
                    eye: [730, 0, 134, 65]
                }
            }
        }
    }),
    ite = Kd.extend({
        elements: a.elementsFromImages("spotlight", ["exclaim", null, [165, 320]]),
        onLoadComplete() {
            s.set(".e.exclaim", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.exclaim", {
                opacity: 1
            }).to(".e.exclaim", {
                opacity: 0
            }).to(".e.exclaim", {
                opacity: 1
            }).to(".e.exclaim", {
                opacity: 0
            }).to(".e.exclaim", {
                opacity: 1
            }, 3).to(".e.exclaim", {
                opacity: 0
            }).to(".e.exclaim", {
                opacity: 1
            }).to(".e.exclaim", {
                opacity: 0
            })
        }
    }),
    ste = Kd.extend({
        stepDuration: .65,
        elements: a.elementsFromSprite("flee", [
            ["devil", null, [180, 160]],
            ["tomato", null, [300, 320]],
            ["lines", null, [340, 290]]
        ]),
        onLoadComplete() {
            s.set(".e.tomato, .e.lines", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.devil", {
                x: 400
            }).to(".e.tomato, .e.lines", {
                opacity: 1,
                duration: .2
            }, 0).to(".e.tomato", {
                x: 100,
                y: -100
            }, 0)
        }
    }),
    ote = Kd.extend({
        elements: a.elementsFromSprite("squint", [
            ["devil", null, [272, 135]],
            ["eye", "left", [545, 290]],
            ["eye", "right", [538, 570]]
        ]),
        onLoadComplete() {
            s.set(".e.right", {
                scaleX: -1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.left, .e.right", {
                x: -70,
                duration: .5
            }).fillTime(1).to(".e.left, .e.right", {
                x: 70
            }).fillTime(1).to(".e.left, .e.right", {
                x: -70
            }).fillTime(1).to(".e.left, .e.right", {
                x: 70
            }).fillTime(1)
        }
    }),
    ate = Kd.extend({
        elements: a.elementsFromImages("heckler")
    }),
    rte = E.extend({
        imageManifest: {
            clock: new URL("main/pp7/everyday/assets/996e01f2.png", self.location).href
        },
        sprites: {
            clock: {
                key: "clock",
                images: {
                    face: [0, 0, 681, 681],
                    hours: [681, 0, 125, 202],
                    minutes: [681, 202, 125, 242]
                }
            }
        }
    }),
    Vte = rte.extend({
        elements: a.elementsFromSprite("clock", [
            ["face", null, [160, 160]],
            ["hours", null, [470, 438]],
            ["minutes", null, [470, 438]]
        ]),
        onLoadComplete() {
            s.set(".e.hours", {
                rotate: 10,
                transformOrigin: "center 25px"
            }), s.set(".e.minutes", {
                transformOrigin: "center 25px"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.minutes", {
                rotate: 560,
                ease: "none"
            }).to(".e.hours", {
                rotate: 70,
                ease: "none"
            }, 0)
        }
    }),
    Wd = E.extend({
        imageManifest: {
            run: new URL("main/pp7/everyday/assets/0a1bcf83.png", self.location).href,
            spotlight: new URL("main/pp7/everyday/assets/17898f04.png", self.location).href,
            window: new URL("main/pp7/everyday/assets/372fabc1.png", self.location).href,
            worry: new URL("main/pp7/everyday/assets/73c72ad7.png", self.location).href
        }
    }),
    lte = Wd.extend({
        elements: a.elementsFromImages("worry"),
        onStartProgress() {
            a.startHoldShake("worry")
        },
        onStopProgress() {
            a.stopHoldShake("worry")
        }
    }),
    Ate = Wd.extend({
        elements: a.elementsFromImages("window")
    }),
    cte = Wd.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("run"),
        onLoadComplete() {
            s.set(".e.run", {
                x: -300
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.run", {
                x: -150
            }).to(".e.run", {
                x: 0
            }).to(".e.run", {
                x: 150
            }).to(".e.run", {
                x: 300
            }).to(".e.run", {
                x: 450
            })
        }
    }),
    dte = Wd.extend({
        className: "save-show",
        stepDuration: .45,
        elements: [{
            class: "light",
            type: "div",
            pos: [0, 600],
            html: ""
        }, ...a.elementsFromImages(["spotlight", null, [390, 261]])],
        onLoadComplete() {
            s.set(".e.light", {
                transformOrigin: "top center",
                rotateX: 45,
                skewX: -10,
                transformPerspective: 490
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.spotlight", {
                scaleX: .8
            }).fillTime(.2).to(".e.spotlight", {
                scaleX: 1.1
            }).set(".e.spotlight", {
                scaleX: -1.1
            }).to(".e.spotlight", {
                scaleX: -1
            }).to(".e.spotlight", {
                scaleX: -.8
            }).fillTime(.2).to(".e.spotlight", {
                scaleX: -1.1
            }).set(".e.spotlight", {
                scaleX: 1.1
            }).to(".e.spotlight", {
                scaleX: 1
            })
        }
    }),
    Jd = E.extend({
        imageManifest: {
            ball: new URL("main/pp7/everyday/assets/63dd3167.png", self.location).href,
            dummy: new URL("main/pp7/everyday/assets/46f072bf.png", self.location).href,
            football: new URL("main/pp7/everyday/assets/a2d504a5.png", self.location).href,
            pants: new URL("main/pp7/everyday/assets/049e428b.png", self.location).href,
            scissors: new URL("main/pp7/everyday/assets/26a894ba.png", self.location).href,
            soccer: new URL("main/pp7/everyday/assets/168c3240.png", self.location).href,
            tape: new URL("main/pp7/everyday/assets/32dbfc53.png", self.location).href
        }
    }),
    pte = Jd.extend({
        stepDuration: .5,
        lastStepDuration: 1,
        elements: [{
            class: "dummy-container",
            type: "container",
            children: [{
                class: "ball",
                type: "img",
                key: "ball"
            }, {
                class: "football",
                type: "img",
                key: "football"
            }, {
                class: "soccer",
                type: "img",
                key: "soccer"
            }]
        }],
        initializeTimeline() {
            s.set(".e.ball", {
                scale: .6,
                opacity: .5,
                x: -100,
                y: -100
            }), s.set(".e.football", {
                scale: .8,
                opacity: .75,
                x: 100,
                y: -50
            }), this.timeline.to(".e.soccer", {
                duration: .5,
                ease: "back.in",
                scale: .8,
                opacity: 0,
                x: -500,
                y: -500,
                rotate: 360
            }, 0).to(".e.football", {
                duration: .5,
                ease: "back.in",
                scale: 1,
                opacity: 1,
                x: 0,
                y: 0
            }, 0).to(".e.ball", {
                duration: .5,
                ease: "back.in",
                scale: .8,
                opacity: .75,
                x: 100,
                y: -50
            }, 0).to(".e.football", {
                duration: .5,
                ease: "back.in",
                scale: .8,
                opacity: 0,
                x: 500,
                y: -500,
                rotate: -360
            }, .5).to(".e.ball", {
                duration: .5,
                ease: "back.in",
                scale: 1,
                opacity: 1,
                x: 0,
                y: 0
            }, .5).to(".e.ball", {
                duration: .5,
                ease: "back.in",
                scale: 2
            }, 1).to(".e.ball", {
                duration: .5,
                ease: "back.in",
                rotate: 360,
                opacity: 0,
                scale: 3
            }, 1.5)
        }
    }),
    hte = Jd.extend({
        stepDuration: 1.5,
        elements: [{
            class: "dummy-container",
            type: "container",
            children: [{
                class: "pants",
                type: "img",
                key: "pants"
            }]
        }],
        initializeTimeline() {
            s.set(".e.pants", {
                scaleX: .6,
                scaleY: .6
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.pants", {
                scaleX: .75,
                scaleY: .5,
                rotate: 0,
                ease: "power4.out",
                duration: .5
            }).to(".e.pants", {
                scaleX: 1,
                scaleY: 1,
                rotate: 0,
                ease: "elastic.out",
                duration: .5
            })
        }
    }),
    ute = Jd.extend({
        stepDuration: 2,
        elements: [{
            class: "dummy-container",
            type: "container",
            children: [{
                class: "tape",
                type: "img",
                key: "tape"
            }, {
                class: "scissors",
                type: "img",
                key: "scissors"
            }]
        }],
        tapePE: null,
        initializeTimeline() {
            this.tapePE = a.addParticleEmitter({
                container: "dummy-container",
                image: "tape",
                autoplay: !1,
                zIndex: -1,
                settings: {
                    particleLimit: 25,
                    randomAngleRange: 35,
                    force: -10,
                    minSize: 100,
                    maxSize: 400,
                    boundaries: {
                        top: 250,
                        bottom: 500,
                        left: 0,
                        right: 600
                    }
                }
            }, this)
        },
        onDiscreteProgress() {
            a.startShake("scissors", 25, 45, 1), this.tapePE.play()
        }
    }),
    mte = Jd.extend({
        lastStepDuration: .5,
        elements: [{
            class: "dummy-container",
            type: "container",
            children: [{
                class: "dummy",
                type: "img",
                key: "dummy"
            }]
        }],
        initializeTimeline() {
            this.timeline.fromTo(".e.dummy", {
                scale: .5
            }, {
                rotate: 360,
                scale: 1.5,
                ease: "back.inOut"
            })
        }
    }),
    Zd = E.extend({
        imageManifest: {
            box: new URL("main/pp7/everyday/assets/7cf2c78a.png", self.location).href,
            chair: new URL("main/pp7/everyday/assets/7e882f67.png", self.location).href,
            marble1: new URL("main/pp7/everyday/assets/f447fabd.png", self.location).href,
            marble2: new URL("main/pp7/everyday/assets/d25e1e1f.png", self.location).href,
            marble3: new URL("main/pp7/everyday/assets/31906e25.png", self.location).href,
            mug: new URL("main/pp7/everyday/assets/1008a896.png", self.location).href
        }
    }),
    fte = Zd.extend({
        stepDuration: 1,
        elements: [{
            class: "dummy-container",
            type: "container",
            children: [{
                class: "chair",
                type: "img",
                key: "chair"
            }]
        }],
        onDiscreteProgress() {
            a.squashOnce("chair", .5)
        }
    }),
    qte = Zd.extend({
        elements: [{
            class: "chair-container",
            type: "container",
            children: [{
                class: "chair",
                type: "img",
                key: "chair"
            }, {
                class: "mug",
                type: "img",
                key: "mug"
            }]
        }],
        initializeTimeline() {
            s.fromTo(".e.mug", {
                scale: 1.5,
                x: 500,
                y: 1e3,
                filter: "blur(10px)",
                opacity: 0
            }, {
                y: 500,
                opacity: 1,
                ease: "power4.out",
                duration: .5,
                delay: .25
            }), this.timeline.to(".e.mug", {
                filter: "blur(0px)",
                scale: .25,
                x: -250,
                y: -150,
                ease: "back.inOut"
            }).to(".e.mug", {
                rotate: 25
            }).to(".e.mug", {
                rotate: 0
            })
        }
    }),
    gte = Zd.extend({
        stepDuration: 1.25,
        elements: [{
            class: "chair-container",
            type: "container",
            children: [{
                class: "chair",
                type: "img",
                key: "chair"
            }, {
                class: "mug",
                type: "img",
                key: "mug"
            }, {
                class: "box",
                type: "img",
                key: "box"
            }]
        }, {
            class: "marble-container",
            type: "container",
            children: [{
                class: "marble1",
                type: "img",
                key: "marble1"
            }, {
                class: "marble2",
                type: "img",
                key: "marble2"
            }, {
                class: "marble3",
                type: "img",
                key: "marble3"
            }]
        }],
        initializeTimeline() {
            s.set(".e.mug", {
                scale: .25,
                x: -250,
                y: -150
            }), s.set(".marble-container", {
                hidden: !0
            }), s.fromTo(".e.box", {
                scale: .5,
                y: 500,
                opacity: 0
            }, {
                y: 25,
                opacity: 1,
                ease: "back.out",
                duration: .5,
                delay: .25
            })
        },
        onDiscreteProgress() {
            a.squashTransition("chair-container", "marble-container", .25), s.timeline().to(".e.marble1", {
                x: 300,
                y: 100,
                rotate: 360
            }, 0).to(".e.marble2", {
                x: -250,
                y: -50,
                rotate: -360
            }, .1).to(".e.marble3", {
                x: 50,
                y: 350,
                rotate: 360
            }, .2)
        }
    }),
    yte = Zd.extend({
        stepDuration: .5,
        lastStepDuration: 1,
        elements: [{
            class: "marble-container",
            type: "container",
            children: [{
                class: "marble1",
                type: "img",
                key: "marble1"
            }, {
                class: "marble2",
                type: "img",
                key: "marble2"
            }, {
                class: "marble3",
                type: "img",
                key: "marble3"
            }]
        }],
        initializeTimeline() {
            s.set(".e.marble1", {
                x: 300,
                y: 100
            }), s.set(".e.marble2", {
                x: -250,
                y: -50
            }), s.set(".e.marble3", {
                x: 50,
                y: 350
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".e.marble1", {
                ease: "power3.out",
                duration: .5,
                x: X.exports.random(-200, 200),
                y: X.exports.random(-400, 400),
                rotate: X.exports.random(720, 1920)
            }, 0).to(".e.marble2", {
                ease: "power3.out",
                duration: .5,
                x: X.exports.random(-200, 200),
                y: X.exports.random(-400, 400),
                rotate: X.exports.random(720, 1920)
            }, 0).to(".e.marble3", {
                ease: "power3.out",
                duration: .5,
                x: X.exports.random(-200, 200),
                y: X.exports.random(-400, 400),
                rotate: X.exports.random(720, 1920)
            }, 0), t >= 90 && a.squashOnce("marble-container", .5)
        }
    }),
    _d = E.extend({
        imageManifest: {
            bleach: new URL("main/pp7/everyday/assets/76b0c198.png", self.location).href,
            box: new URL("main/pp7/everyday/assets/25300fdc.png", self.location).href,
            fridge: new URL("main/pp7/everyday/assets/2e9ec69b.png", self.location).href,
            milksoda: new URL("main/pp7/everyday/assets/4a040779.png", self.location).href,
            milk: new URL("main/pp7/everyday/assets/2a34ceaf.png", self.location).href,
            soda: new URL("main/pp7/everyday/assets/53041b34.png", self.location).href
        }
    }),
    bte = _d.extend({
        stepDuration: 1.5,
        elements: [{
            class: "collider-container",
            type: "container",
            children: [{
                class: "fridge",
                type: "img",
                key: "fridge"
            }, {
                class: "milk",
                type: "img",
                key: "milk"
            }, {
                class: "soda",
                type: "img",
                key: "soda"
            }]
        }],
        initializeTimeline() {
            s.set(".e.fridge", {
                scale: 1.5
            }), s.set(".e.milk", {
                scale: .5,
                hidden: !0
            }), s.set(".e.soda", {
                scale: .5,
                hidden: !0
            })
        },
        onDiscreteProgress() {
            a.squashOnce("collider-container", .5), s.timeline({
                delay: .25
            }).set(".e.milk", {
                hidden: !1
            }).to(".e.milk", {
                x: 200,
                y: -200,
                ease: "power3.out",
                rotate: -360,
                duration: .25
            }).to(".e.milk", {
                x: 200,
                y: 380,
                ease: "power3.in",
                rotate: -450,
                duration: .25
            }), s.timeline({
                delay: .25
            }).set(".e.soda", {
                hidden: !1
            }).to(".e.soda", {
                x: -200,
                y: -250,
                ease: "power3.out",
                rotate: 360,
                duration: .25
            }).to(".e.soda", {
                x: -200,
                y: 420,
                ease: "power3.in",
                rotate: 440,
                duration: .25
            })
        }
    }),
    vte = _d.extend({
        elements: [{
            class: "collider-container",
            type: "container",
            children: [{
                class: "fridge",
                type: "img",
                key: "fridge"
            }, {
                class: "milk",
                type: "img",
                key: "milk"
            }, {
                class: "soda",
                type: "img",
                key: "soda"
            }]
        }, {
            class: "milksoda-container",
            type: "container",
            children: [{
                class: "milksoda",
                type: "img",
                key: "milksoda"
            }]
        }],
        initializeTimeline() {
            s.fromTo(".e.fridge", {
                scale: 1.5
            }, {
                scale: 1,
                opacity: 0,
                duration: .5,
                ease: "back.in",
                delay: .2
            }), s.set(".e.milk", {
                scale: .5,
                x: 200,
                y: 380,
                rotate: -450
            }), s.set(".e.soda", {
                scale: .5,
                x: -200,
                y: 420,
                rotate: 440
            }), s.set(".milksoda-container", {
                hidden: !0
            }), this.timeline.to(".e.milk", {
                scale: .6,
                x: 162,
                y: -220,
                rotate: -438
            }).to(".e.soda", {
                scale: .6,
                x: -240,
                y: -240,
                rotate: 412
            })
        },
        canPour: !0,
        onProgress(t) {
            t >= 40 && this.canPour === !0 ? (this.canPour = !1, a.squashTransition("collider-container", "milksoda-container", .75)) : t < 40 && (s.set(".milksoda-container", {
                hidden: !0,
                scale: 1
            }), s.set(".collider-container", {
                hidden: !1,
                scale: 1
            }), this.canPour = !0)
        }
    }),
    wte = _d.extend({
        stepDuration: 1.25,
        elements: [{
            class: "pour-container",
            type: "container",
            children: [{
                class: "milksoda",
                type: "img",
                key: "milksoda"
            }, {
                class: "bleach",
                type: "img",
                key: "bleach"
            }]
        }],
        initializeTimeline() {
            s.set(".e.bleach", {
                hidden: !0,
                x: -20,
                y: -90
            })
        },
        onDiscreteProgress() {
            a.squashTransition("milksoda", "bleach", .25)
        }
    }),
    xte = _d.extend({
        stepDuration: .25,
        elements: [{
            class: "pour-container",
            type: "container",
            children: [{
                class: "bleach",
                type: "img",
                key: "bleach"
            }, {
                class: "box",
                type: "img",
                key: "box"
            }]
        }],
        initializeTimeline() {
            s.set(".e.bleach", {
                hidden: !1,
                x: -20,
                y: -90
            }), s.set(".e.box", {
                hidden: !0
            }), a.squashTransition("bleach", "box", .25);
            const t = s.timeline({
                repeat: 4
            }).to(".e.box", {
                y: -50,
                ease: "power3.out",
                duration: .5
            }).to(".e.box", {
                y: 50,
                ease: "power3.out",
                duration: .5
            });
            this.timeline.add(t)
        }
    }),
    $d = E.extend({
        imageManifest: {
            barf: new URL("main/pp7/everyday/assets/12dc8bac.png", self.location).href,
            food: new URL("main/pp7/everyday/assets/7efdf486.png", self.location).href,
            hold: new URL("main/pp7/everyday/assets/545bc2e4.png", self.location).href,
            proud: new URL("main/pp7/everyday/assets/33896dc2.png", self.location).href
        }
    }),
    kte = $d.extend({
        stepDuration: .25,
        lastStepDuration: 1.5,
        elements: [{
            class: "food-container",
            type: "container",
            children: [{
                class: "food",
                type: "img",
                key: "food"
            }]
        }],
        pe: null,
        initializeTimeline() {
            this.pe = a.addParticleEmitter({
                container: "food-container",
                autoplay: !1,
                frequency: .01,
                restartOnProgress: !0,
                settings: {
                    particleLimit: 5,
                    randomAngleRange: 35,
                    force: -5,
                    minSize: 60,
                    maxSize: 200,
                    boundaries: {
                        top: 50,
                        bottom: 50,
                        left: 250,
                        right: 750
                    },
                    from: {
                        backgroundColor: "#599DE1",
                        border: "12px solid black",
                        borderRadius: "90px",
                        width: 100
                    }
                }
            }, this)
        },
        onDiscreteProgress() {
            a.squashOnce("food", .25)
        }
    }),
    Cte = $d.extend({
        stepDuration: .25,
        lastStepDuration: 1.5,
        elements: [{
            class: "food-container",
            type: "container",
            children: [{
                class: "food",
                type: "img",
                key: "food"
            }]
        }],
        pe: null,
        initializeTimeline() {
            this.pe = a.addParticleEmitter({
                container: "food-container",
                autoplay: !1,
                frequency: .001,
                restartOnProgress: !0,
                settings: {
                    particleLimit: 20,
                    randomAngleRange: 35,
                    force: -10,
                    minSize: 60,
                    maxSize: 200,
                    boundaries: {
                        top: 50,
                        bottom: 50,
                        left: 250,
                        right: 750
                    },
                    from: {
                        backgroundColor: "#599DE1",
                        border: "12px solid black",
                        borderRadius: "90px",
                        width: 100
                    }
                }
            }, this)
        },
        onDiscreteProgress() {
            a.squashOnce("food", .25)
        }
    }),
    Rte = $d.extend({
        elements: [{
            class: "food-container",
            type: "container",
            children: [{
                class: "proud",
                type: "img",
                key: "proud"
            }]
        }]
    }),
    Dte = $d.extend({
        elements: [{
            class: "food-container",
            type: "container",
            children: [{
                class: "hold",
                type: "img",
                key: "hold"
            }, {
                class: "barf",
                type: "img",
                key: "barf"
            }]
        }],
        pe: null,
        canPuke: !0,
        canShake: !0,
        initializeTimeline() {
            s.set(".e.barf", {
                hidden: !0
            }), this.pe = a.addParticleEmitter({
                container: "food-container",
                autoplay: !1,
                frequency: .01,
                settings: {
                    randomAngleRange: 35,
                    force: -15,
                    minSize: 60,
                    maxSize: 200,
                    boundaries: {
                        top: 400,
                        bottom: 400
                    },
                    from: {
                        backgroundColor: "black",
                        border: "12px solid white",
                        borderRadius: "90px",
                        width: 75
                    }
                }
            }, this)
        },
        onProgress(t) {
            t >= 15 && this.canPuke ? (this.canPuke = !1, a.squashTransition("hold", "barf", .5), a.startShake("barf", 10, 10, 2)) : t < 15 && (a.stopShake("barf"), s.set(".e.barf", {
                hidden: !0,
                scale: 1
            }), s.set(".e.hold", {
                hidden: !1,
                scale: 1
            }), this.canPuke = !0), t > 25 ? this.pe.play() : this.pe.pause()
        }
    }),
    ep = E.extend({
        imageManifest: {
            tv: new URL("main/pp7/everyday/assets/03ecc613.png", self.location).href,
            anime: new URL("main/pp7/everyday/assets/b14d7bb4.png", self.location).href,
            billy: new URL("main/pp7/everyday/assets/fb7dacfd.png", self.location).href,
            cat: new URL("main/pp7/everyday/assets/c5246750.png", self.location).href,
            horror: new URL("main/pp7/everyday/assets/c231143d.png", self.location).href,
            chainsaw: new URL("main/pp7/everyday/assets/45ddd3d5.png", self.location).href,
            pillow: new URL("main/pp7/everyday/assets/2386bdc2.png", self.location).href,
            static: new URL("main/pp7/everyday/assets/36d13209.png", self.location).href,
            hide: new URL("main/pp7/everyday/assets/f5877169.png", self.location).href
        }
    }),
    Ste = ep.extend({
        stepDuration: .25,
        lastStepDuration: .5,
        elements: a.elementsFromImages("static", "anime", "cat", "billy", "chainsaw", "tv"),
        onLoadComplete() {
            s.set(".e.anime, .e.cat, .e.billy, .e.chainsaw", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.anime", {
                visibility: "visible"
            }, 0).set(".e.anime", {
                visibility: "hidden"
            }, 1).set(".e.cat", {
                visibility: "visible"
            }, 1).set(".e.cat", {
                visibility: "hidden"
            }, 2).set(".e.billy", {
                visibility: "visible"
            }, 2).set(".e.billy", {
                visibility: "hidden"
            }, 3).set(".e.anime", {
                visibility: "visible"
            }, 3).set(".e.anime", {
                visibility: "hidden"
            }, 4).set(".e.chainsaw", {
                visibility: "visible"
            }, 4)
        }
    }),
    Tte = ep.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("chainsaw", "tv")
        }],
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Ete = ep.extend({
        elements: a.elementsFromImages("pillow"),
        initializeTimeline() {
            this.timeline.to(".e.pillow", {
                scaleX: .85,
                ease: "bounce.in"
            }).to(".e.pillow", {
                scaleX: .7,
                ease: "bounce.in"
            })
        },
        onStartProgress() {
            a.startHoldShake("pillow")
        },
        onStopProgress() {
            a.stopHoldShake("pillow")
        }
    }),
    Lte = ep.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("horror", "tv", ["hide", "handL"], ["hide", "handR"]),
        onLoadComplete() {
            s.set(".e.handL", {
                x: -800,
                y: 500,
                scaleX: -1
            }), s.set(".e.handR", {
                x: 800,
                y: 500
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handL", {
                x: -100,
                y: 0
            }, 0).to(".e.handR", {
                x: 100,
                y: 0
            }, 0)
        }
    }),
    tp = E.extend({
        imageManifest: {
            clock: new URL("main/pp7/everyday/assets/996e01f2.png", self.location).href,
            lips: new URL("main/pp7/everyday/assets/486cbaa3.png", self.location).href,
            mug: new URL("main/pp7/everyday/assets/b194bf8b.png", self.location).href
        },
        sprites: {
            clock: {
                key: "clock",
                images: {
                    face: [0, 0, 681, 681],
                    hours: [681, 0, 125, 202],
                    minutes: [681, 202, 125, 242]
                }
            }
        }
    }),
    Bte = tp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("lips", "mug"),
        onLoadComplete() {
            s.set(".e.lips", {
                opacity: 0
            }), s.set(".e.mug", {
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.lips", {
                y: -200,
                opacity: 1
            }).to(".e.mug", {
                x: 60,
                y: 300,
                scale: .5
            }, 0)
        }
    }),
    Mte = tp.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("lips", "mug")
        }],
        onLoadComplete() {
            s.set(".e.lips", {
                y: -200
            }), s.set(".e.mug", {
                x: 60,
                y: 300,
                scale: .5,
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mug", {
                scaleY: .45
            }).fillTime(3)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Ote = tp.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("clock", [
            ["face", null, [160, 160]],
            ["hours", null, [470, 438]],
            ["minutes", null, [470, 438]]
        ]),
        onLoadComplete() {
            a.startShake(".instructions", 2, 2, 2), s.fromTo(".e.hours", {
                transformOrigin: "center 25px"
            }, {
                rotate: 360,
                duration: 12,
                repeat: -1,
                ease: "none"
            }), s.fromTo(".e.minutes", {
                transformOrigin: "center 25px"
            }, {
                rotate: 360,
                duration: 1,
                repeat: -1,
                ease: "none"
            })
        }
    }),
    Ite = tp.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("lips", "mug")
        }],
        onLoadComplete() {
            a.startShake(".instructions", 3, 3, 3), s.set(".e.lips", {
                y: -200
            }), s.set(".e.mug", {
                x: 60,
                y: 300,
                scaleX: .5,
                scaleY: .45,
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.mug", {
                scaleY: .4
            }).fillTime(3)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    np = E.extend({
        imageManifest: {
            house: new URL("main/pp7/everyday/assets/9004fd89.png", self.location).href,
            pillow: new URL("main/pp7/everyday/assets/5e4168b1.png", self.location).href,
            cousin: new URL("main/pp7/everyday/assets/48957c3c.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "cousin",
                images: {
                    doorClosed: [10, 1339, 338, 466, 98, 414],
                    doorOpen: [10, 863, 373, 466, 101, 57]
                }
            }
        }
    }),
    Pte = np.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("pillow"),
        onDiscreteProgress() {
            a.squashOnce("pillow", .35)
        }
    }),
    Ute = np.extend({
        stepDuration: .25,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["doorClosed"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                scaleX: -1
            }), s.set(".e.doorClosed", {
                x: -100,
                y: 200,
                scaleX: 1,
                transformOrigin: "left center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.doorClosed", {
                x: -200,
                scale: 1.5,
                ease: "none"
            })
        }
    }),
    Fte = np.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["doorClosed", "doorOpen"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                scaleX: -1
            }), s.set(".e.doorClosed", {
                x: -200,
                y: 200,
                scale: 1.5,
                transformOrigin: "left center"
            }), s.set(".e.doorOpen", {
                x: -200,
                y: 200,
                scaleX: 0,
                scaleY: 1.5,
                transformOrigin: "right center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.doorClosed", {
                scaleX: 0,
                ease: "none"
            }).to(".e.doorOpen", {
                scaleX: 1.5,
                ease: "none"
            })
        }
    }),
    jte = np.extend({
        elements: a.elementsFromImages(["house", null, [200, 0]]),
        initializeTimeline() {
            this.timeline.to(".e.house", {
                scale: .9
            })
        }
    }),
    ip = E.extend({
        imageManifest: {
            clock: new URL("main/pp7/everyday/assets/996e01f2.png", self.location).href,
            scratch: new URL("main/pp7/everyday/assets/8bdc2573.png", self.location).href,
            closet: new URL("main/pp7/everyday/assets/56a7427f.png", self.location).href
        },
        sprites: {
            closet: {
                key: "closet",
                images: {
                    closet: [0, 0, 932, 756],
                    door: [0, 756, 496, 756],
                    hiding: [0, 1510, 131, 209]
                }
            },
            scratch: {
                key: "scratch",
                images: {
                    exclaim: [10, 10, 203, 884, 58, 399],
                    hand: [223, 10, 258, 638, 361, 384],
                    scratch: [223, 658, 217, 299, 86, 445]
                }
            },
            clock: {
                key: "clock",
                images: {
                    face: [0, 0, 681, 681],
                    hours: [681, 0, 125, 202],
                    minutes: [681, 202, 125, 242]
                }
            }
        }
    }),
    Qte = ip.extend({
        stepDuration: .75,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("closet", [
                ["closet", null, [122, 34]],
                ["hiding", null, [427, 754]],
                ["door", null, [122, 468]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: -400,
                duration: 1,
                ease: "bounce.out"
            }).to(".e.door", {
                x: 0,
                duration: 1,
                ease: "bounce.out"
            })
        }
    }),
    zte = ip.extend({
        elements: a.elementsFromSprite("scratch", ["scratch", "hand"]),
        onLoadComplete() {
            s.set(".e.hand", {
                x: 4,
                y: -270
            }), s.set(".e.scratch", {
                clipPath: "inset(0% 0% 100%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.hand", {
                x: -14,
                y: -218,
                duration: 1
            }, 0).to(".e.scratch", {
                clipPath: "inset(0% 0% 72%)",
                duration: 1
            }, 0).to(".e.hand", {
                x: 10,
                y: -185,
                duration: 1
            }, 1).to(".e.scratch", {
                clipPath: "inset(0% 0% 61%)",
                duration: 1
            }, 1).to(".e.hand", {
                x: -10,
                y: -135,
                duration: 1
            }, 2).to(".e.scratch", {
                clipPath: "inset(0% 0% 47%)",
                duration: 1
            }, 2).to(".e.hand", {
                x: 15,
                y: -105,
                duration: 1
            }, 3).to(".e.scratch", {
                clipPath: "inset(0% 0% 35%)",
                duration: 1
            }, 3).to(".e.hand", {
                x: -10,
                y: -65,
                duration: 1
            }, 4).to(".e.scratch", {
                clipPath: "inset(0% 0% 24%)",
                duration: 1
            }, 4).to(".e.hand", {
                x: 12,
                y: -35,
                duration: 1
            }, 5).to(".e.scratch", {
                clipPath: "inset(0% 0% 13%)",
                duration: 1
            }, 5).to(".e.hand", {
                x: 0,
                y: 0,
                duration: 1
            }, 6).to(".e.scratch", {
                clipPath: "inset(0% 0% 0%)",
                duration: 1
            }, 6)
        }
    }),
    Hte = ip.extend({
        elements: a.elementsFromSprite("clock", [
            ["face", null, [160, 160]],
            ["hours", null, [470, 438]],
            ["minutes", null, [470, 438]]
        ]),
        onLoadComplete() {
            s.fromTo(".e.hours", {
                transformOrigin: "center 25px"
            }, {
                rotate: 360,
                duration: 12,
                repeat: -1,
                ease: "none"
            }), s.fromTo(".e.minutes", {
                transformOrigin: "center 25px"
            }, {
                rotate: 360,
                duration: 1,
                repeat: -1,
                ease: "none"
            })
        }
    }),
    Nte = ip.extend({
        stepDuration: .7,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("closet", [
                ["closet", null, [122, 34]],
                ["hiding", null, [427, 754]],
                ["door", null, [122, 468]]
            ])
        }, {
            class: "scare",
            type: "div",
            pos: [-5e3, -5e3]
        }, ...a.elementsFromSprite("scratch", ["exclaim"])],
        onLoadComplete() {
            s.set(".e.scare", {
                hidden: !0,
                width: 11e3,
                height: 11e3,
                backgroundColor: "#AE1D1D"
            }), s.set(".e.exclaim", {
                hidden: !0,
                scale: .5
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.door", {
                x: -400,
                duration: 1,
                ease: "bounce.out"
            }).to(".e.c", {
                scale: .5,
                duration: .5
            }, .25).set(".e.exclaim", {
                hidden: !1
            }, .25).to(".e.exclaim", {
                scale: 1,
                duration: .25
            }, .25).set(".e.scare", {
                hidden: !0
            }, .25).to(".e.exclaim", {
                rotate: 3,
                duration: .1
            }, .25).set(".e.scare", {
                hidden: !1
            }).to(".e.exclaim", {
                rotate: -3,
                duration: .1
            }).set(".e.scare", {
                hidden: !0
            }).to(".e.exclaim", {
                rotate: 3,
                duration: .1
            }).set(".e.scare", {
                hidden: !1
            }).to(".e.exclaim", {
                rotate: -3,
                duration: .1
            }).set(".e.scare", {
                hidden: !0
            }).to(".e.exclaim", {
                rotate: 3,
                duration: .1
            }).set(".e.scare", {
                hidden: !1
            }).to(".e.exclaim", {
                rotate: -3,
                duration: .1
            })
        }
    }),
    sp = E.extend({
        imageManifest: {
            scare: new URL("main/pp7/everyday/assets/6be13138.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "scare",
                images: {
                    face: [10, 10, 270, 243, 244, 455],
                    shadow: [10, 765, 697, 954, 28, 149],
                    question: [290, 10, 476, 745, 128, 259],
                    run: [717, 767, 819, 964, 18, 88],
                    stairs: [776, 10, 956, 747, 166, 19]
                }
            }
        }
    }),
    Gte = sp.extend({
        stepDuration: .6,
        shouldWiggle: !1,
        elements: a.elementsFromSprite("sprite", ["stairs"]),
        onDiscreteProgress() {
            s.timeline().to(".e.stairs", {
                scale: .98,
                duration: .3
            }).to(".e.stairs", {
                scale: 1,
                duration: .3
            })
        }
    }),
    Xte = sp.extend({
        elements: a.elementsFromSprite("sprite", ["shadow", "face"]),
        onLoadComplete() {
            s.set(".e.face", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.face", {
                visibility: "hidden"
            }, 0).set(".e.face", {
                visibility: "visible"
            }, .05).set(".e.face", {
                visibility: "hidden"
            }, .1).set(".e.face", {
                visibility: "visible"
            }, .15).set(".e.face", {
                visibility: "hidden"
            }, .2).set(".e.face", {
                visibility: "visible"
            }, .25).set(".e.face", {
                visibility: "hidden"
            }, .35).set(".e.face", {
                visibility: "visible"
            }, .65).set(".e.face", {
                visibility: "hidden"
            }, .7).fillTime(2)
        },
        onStartProgress() {
            a.startHoldShake("shadow")
        },
        onStopProgress() {
            a.stopHoldShake("shadow")
        }
    }),
    Yte = sp.extend({
        elements: a.elementsFromSprite("sprite", ["question"])
    }),
    Kte = sp.extend({
        stepDuration: .3,
        elements: a.elementsFromSprite("sprite", ["run"]),
        onDiscreteProgress() {
            a.squashOnce("run", .3)
        }
    }),
    Wte = E.extend({
        imageManifest: {
            bed: new URL("main/pp7/everyday/assets/43e0c2d9.png", self.location).href
        }
    }),
    Jte = Wte.extend({
        elements: a.elementsFromImages("bed")
    }),
    jm = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/b831fde8.png", self.location).href,
            garage: new URL("main/pp7/everyday/assets/7a56a2dd.png", self.location).href,
            light: new URL("main/pp7/everyday/assets/6df8cb41.png", self.location).href
        }
    }),
    Zte = jm.extend({
        elements: a.elementsFromImages("garage")
    }),
    _te = jm.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("light"),
        onDiscreteProgress() {
            a.squashOnce("light", .35)
        }
    }),
    $te = jm.extend({
        elements: a.elementsFromImages("door")
    }),
    Qm = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/c96f2576.png", self.location).href,
            sh: new URL("main/pp7/everyday/assets/7557ba4f.png", self.location).href,
            sshh: new URL("main/pp7/everyday/assets/7d7d8e46.png", self.location).href
        }
    }),
    ene = Qm.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("door"),
        onDiscreteProgress() {
            a.squashOnce("door", .45)
        }
    }),
    tne = Qm.extend({
        elements: a.elementsFromImages("sh"),
        onLoadComplete() {
            s.set(".e.sh", {
                scale: .7,
                opacity: 0
            })
        },
        onStartProgress() {
            s.to(".e.sh", {
                scale: 1,
                duration: .4,
                ease: "back.out(2)"
            }), s.to(".e.sh", {
                opacity: 1,
                duration: .05
            })
        },
        onStopProgress() {
            s.to(".e.sh", {
                scale: .7,
                opacity: 0,
                duration: .2
            })
        }
    }),
    nne = Qm.extend({
        elements: a.elementsFromImages("sshh"),
        onLoadComplete() {
            s.set(".e.sshh", {
                scale: .7,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.sshh", {
                x: -4e3,
                ease: "none"
            })
        },
        onStartProgress() {
            s.to(".e.sshh", {
                scale: 1,
                duration: .4,
                ease: "back.out(2)"
            }), s.to(".e.sshh", {
                opacity: 1,
                duration: .05
            })
        },
        onStopProgress() {
            s.to(".e.sshh", {
                scale: .7,
                opacity: 0,
                duration: .2
            })
        }
    }),
    zm = E.extend({
        imageManifest: {
            one: new URL("main/pp7/everyday/assets/3ea860be.png", self.location).href,
            three: new URL("main/pp7/everyday/assets/a6234926.png", self.location).href,
            two: new URL("main/pp7/everyday/assets/b28ed16d.png", self.location).href
        }
    }),
    ine = zm.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("one"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("one"))
        }
    }),
    sne = zm.extend({
        stepDuration: .45,
        elements: a.elementsFromImages("one", "two", "three"),
        onLoadComplete() {
            s.set(".e.two, .e.three", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("one", "two")), this.timeline.add(a.squashTransition("two", "three"))
        }
    }),
    one = zm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages(["three", "three0"], ["three", "three1"], ["three", "three2"], ["three", "three3"], ["three", "three4"], ["three", "three5"], ["three", "three6"], ["three", "three7"], ["three", "three8"], ["three", "three9"], ["three", "three10"], ["three", "three11"], ["three", "three12"], ["three", "three13"], ["three", "three14"])
        }],
        initializeTimeline() {
            this.timeline.to(".e.c", {
                scale: 1.5,
                duration: 1
            }, 0).to(".e.three14", {
                scale: .93,
                rotate: 2,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three13", {
                scale: .87,
                rotate: 4,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three12", {
                scale: .81,
                rotate: 6,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three11", {
                scale: .75,
                rotate: 8,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three10", {
                scale: .68,
                rotate: 10,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three9", {
                scale: .62,
                rotate: 12,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three8", {
                scale: .56,
                rotate: 14,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three7", {
                scale: .5,
                rotate: 16,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three6", {
                scale: .43,
                rotate: 18,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three5", {
                scale: .37,
                rotate: 20,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three4", {
                scale: .31,
                rotate: 22,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three3", {
                scale: .25,
                rotate: 24,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three2", {
                scale: .18,
                rotate: 26,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three1", {
                scale: .12,
                rotate: 28,
                duration: .5,
                ease: "power1.in"
            }, 0).to(".e.three0", {
                scale: .06,
                rotate: 30,
                duration: .5,
                ease: "power1.in"
            }, 0)
        }
    }),
    ane = E.extend({
        imageManifest: {
            bed: new URL("main/pp7/everyday/assets/43e0c2d9.png", self.location).href
        }
    }),
    rne = ane.extend({
        elements: a.elementsFromImages("bed")
    }),
    Vne = E.extend({
        imageManifest: {
            base: new URL("main/pp7/everyday/assets/08e2ec39.png", self.location).href,
            spin: new URL("main/pp7/everyday/assets/3474f344.png", self.location).href
        }
    }),
    lne = Vne.extend({
        elements: a.elementsFromImages("base", ["spin", null, [-37, 410]]),
        initializeTimeline() {
            const t = s.timeline().to(".e.spin", {
                rotate: 2070,
                ease: "none"
            });
            this.timeline.add(t)
        }
    }),
    op = E.extend({
        imageManifest: {
            helmetPlayer: new URL("main/pp7/everyday/assets/aa9d6fb1.png", self.location).href,
            helmet: new URL("main/pp7/everyday/assets/e1c15a99.png", self.location).href,
            pool: new URL("main/pp7/everyday/assets/47a28b3f.png", self.location).href,
            poolShim: new URL("main/pp7/everyday/assets/637febe0.png", self.location).href,
            gun: new URL("main/pp7/everyday/assets/25ea044a.png", self.location).href,
            bear: new URL("main/pp7/everyday/assets/bc7a4038.png", self.location).href,
            football: new URL("main/pp7/everyday/assets/ab88a45b.png", self.location).href,
            frame: new URL("main/pp7/everyday/assets/78f0930b.png", self.location).href,
            Adult0: new URL("main/pp7/everyday/assets/13079939.png", self.location).href,
            Adult0v2: new URL("main/pp7/everyday/assets/b3055837.png", self.location).href,
            Adult1: new URL("main/pp7/everyday/assets/91879276.png", self.location).href,
            Adult1v2: new URL("main/pp7/everyday/assets/0974f994.png", self.location).href,
            Child0: new URL("main/pp7/everyday/assets/3b20e75e.png", self.location).href,
            Child0v2: new URL("main/pp7/everyday/assets/62c41223.png", self.location).href,
            Child0v3: new URL("main/pp7/everyday/assets/f3a0aa61.png", self.location).href,
            Child1: new URL("main/pp7/everyday/assets/2bc8bbaf.png", self.location).href,
            Child1v2: new URL("main/pp7/everyday/assets/0f1da4c9.png", self.location).href,
            Child1v3: new URL("main/pp7/everyday/assets/85b613fa.png", self.location).href,
            Child2: new URL("main/pp7/everyday/assets/9a21c2be.png", self.location).href,
            Child2v2: new URL("main/pp7/everyday/assets/9a2950f2.png", self.location).href,
            Child2v3: new URL("main/pp7/everyday/assets/c7b3a342.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/dcd37d7d.png", self.location).href,
            Teen0v2: new URL("main/pp7/everyday/assets/61558f69.png", self.location).href,
            Teen0v3: new URL("main/pp7/everyday/assets/c6291b0a.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/7083da3e.png", self.location).href,
            Teen1v2: new URL("main/pp7/everyday/assets/498f07e1.png", self.location).href,
            Teen1v3: new URL("main/pp7/everyday/assets/cd3f6e9f.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/0d5a1309.png", self.location).href,
            Teen2v2: new URL("main/pp7/everyday/assets/38f46a5c.png", self.location).href,
            Teen2v3: new URL("main/pp7/everyday/assets/1918eba3.png", self.location).href
        }
    }),
    Ane = op.extend({
        stepDuration: 1,
        elements() {
            const t = this.model.get("playerInfo");
            return [{
                class: "bg",
                type: "div",
                pos: [100, 300]
            }, ...a.elementsFromImages([t.avatar, "player", [80, 0]], ["helmetPlayer", null, [-300, 0]])]
        },
        onLoadComplete() {
            s.set(".e.player", {
                clipPath: "inset(0% 0% 0%)"
            }), s.set(".e.bg", {
                width: 400,
                height: 400,
                backgroundColor: "#001B20",
                transformOrigin: "top center"
            }), s.set(".e.helmetPlayer", {
                transformOrigin: "top center"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.helmetPlayer", {
                scaleY: .8,
                y: -50,
                duration: 1
            }, 0).to(".e.bg", {
                scaleY: .8,
                y: -130,
                duration: 1
            }, 0).to(".e.player", {
                y: -50,
                clipPath: "inset(40% 0% 0%)",
                duration: 1
            }, 1).to(".e.helmetPlayer, .e.bg", {
                scaleY: 1,
                y: 340,
                duration: 1
            }, 1).fillTime(1)
        }
    }),
    cne = op.extend({
        stepDuration: .25,
        elements: a.elementsFromImages(["poolShim", null, [50, 0]], ["helmet", null, [-170, 47]], ["pool", null, [50, 0]]),
        onLoadComplete() {
            s.set(".e.helmet", {
                scale: .25
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.helmet", {
                y: 153
            })
        }
    }),
    dne = op.extend({
        className: "scene-container under-water",
        elements: [{
            class: "c",
            type: "container",
            pos: [200, 90],
            children: [{
                class: "water-back",
                type: "div",
                html: ""
            }, {
                class: "caustic-1",
                type: "div",
                pos: [0, 400],
                html: ""
            }, {
                class: "caustic-2",
                type: "div",
                pos: [0, 200],
                html: ""
            }, {
                class: "water-front",
                type: "div",
                html: ""
            }]
        }, {
            class: "frame",
            type: "img",
            key: "frame"
        }],
        onLoadComplete() {
            s.set(".e.water", {
                backgroundColor: "#000"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-1", {
                opacity: .7
            }).to(".e.caustic-1", {
                opacity: .9
            }).to(".e.caustic-1", {
                opacity: .5
            }).to(".e.caustic-1", {
                opacity: 1
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-1", {
                x: -30,
                scaleX: 1.3,
                duration: 3
            }).to(".e.caustic-1", {
                x: 20,
                scaleX: 1,
                duration: 3
            }).to(".e.caustic-1", {
                x: -10,
                scaleX: 1.1,
                duration: 3
            }).to(".e.caustic-1", {
                x: 30,
                scaleX: 1,
                duration: 3
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-2", {
                opacity: .8
            }).to(".e.caustic-2", {
                opacity: 1
            }).to(".e.caustic-2", {
                opacity: .7
            }).to(".e.caustic-2", {
                opacity: .9
            }).to(".e.caustic-2", {
                opacity: .8
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-2", {
                x: -10,
                scaleX: 1.2,
                duration: 3
            }).to(".e.caustic-2", {
                x: -20,
                scaleX: 1,
                duration: 3
            }).to(".e.caustic-2", {
                x: 10,
                scaleX: 1,
                duration: 3
            })
        },
        initializeTimeline() {}
    }),
    pne = op.extend({
        stepDuration: .5,
        className: "scene-container under-water",
        elements: [{
            class: "c",
            type: "container",
            pos: [200, 90],
            children: [{
                class: "water-back",
                type: "div",
                html: ""
            }, {
                class: "caustic-1",
                type: "div",
                pos: [0, 400],
                html: ""
            }, {
                class: "caustic-2",
                type: "div",
                pos: [0, 200],
                html: ""
            }, {
                class: "football",
                type: "img",
                pos: [650, 75],
                key: "football"
            }, {
                class: "gun",
                type: "img",
                pos: [750, 275],
                key: "gun"
            }, {
                class: "bear",
                type: "img",
                pos: [600, 525],
                key: "bear"
            }, {
                class: "water-front",
                type: "div",
                html: ""
            }]
        }, {
            class: "frame",
            type: "img",
            key: "frame"
        }],
        onLoadComplete() {
            s.set(".e.water", {
                backgroundColor: "#000"
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-1", {
                opacity: .7
            }).to(".e.caustic-1", {
                opacity: .9
            }).to(".e.caustic-1", {
                opacity: .5
            }).to(".e.caustic-1", {
                opacity: 1
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-1", {
                x: -30,
                scaleX: 1.3,
                duration: 3
            }).to(".e.caustic-1", {
                x: 20,
                scaleX: 1,
                duration: 3
            }).to(".e.caustic-1", {
                x: -10,
                scaleX: 1.1,
                duration: 3
            }).to(".e.caustic-1", {
                x: 30,
                scaleX: 1,
                duration: 3
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-2", {
                opacity: .8
            }).to(".e.caustic-2", {
                opacity: 1
            }).to(".e.caustic-2", {
                opacity: .7
            }).to(".e.caustic-2", {
                opacity: .9
            }).to(".e.caustic-2", {
                opacity: .8
            }), s.timeline({
                repeat: -1,
                yoyo: !0
            }).to(".e.caustic-2", {
                x: -10,
                scaleX: 1.2,
                duration: 3
            }).to(".e.caustic-2", {
                x: -20,
                scaleX: 1,
                duration: 3
            }).to(".e.caustic-2", {
                x: 10,
                scaleX: 1,
                duration: 3
            }), s.to(".e.bear, .e.football, .e.gun", {
                y: "-=450",
                stagger: .2,
                duration: 1.75,
                ease: "back.out(2)",
                onComplete() {
                    s.to(".e.bear", {
                        y: "-=30",
                        duration: 2,
                        ease: "none",
                        yoyo: !0,
                        repeat: -1
                    }), s.to(".e.football", {
                        y: "-=30",
                        duration: 2.3,
                        ease: "none",
                        yoyo: !0,
                        repeat: -1
                    }), s.to(".e.gun", {
                        y: "-=30",
                        duration: 1.7,
                        ease: "none",
                        yoyo: !0,
                        repeat: -1
                    })
                }
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.football", {
                scale: .5,
                opacity: 0,
                ease: "back.in(2)"
            }).to(".e.bear", {
                scale: .5,
                opacity: 0,
                ease: "back.in(2)"
            }).to(".e.gun", {
                scale: .5,
                opacity: 0,
                ease: "back.in(2)"
            })
        }
    }),
    hne = E.extend({
        imageManifest: {
            poocho: new URL("main/pp7/everyday/assets/d6f6ad49.png", self.location).href
        }
    }),
    une = hne.extend({
        elements: a.elementsFromImages("poocho")
    }),
    mne = _2,
    fne = E.extend({
        imageManifest: {
            button: new URL("main/pp7/everyday/assets/d65e0204.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "button",
                images: {
                    hand: [771, 10, 404, 601, 6, 339],
                    buttonFront: [10, 399, 751, 325, 655, 120],
                    red: [771, 621, 555, 303, 553, 216],
                    buttonBack: [10, 10, 751, 379, 601, 120]
                }
            }
        }
    }),
    qne = fne.extend({
        stepDuration: .3,
        elements: a.elementsFromSprite("sprite", ["buttonBack", "red", "buttonFront", "hand"]),
        onLoadComplete() {
            s.to(".e.hand", {
                y: 20,
                duration: .2
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.hand", {
                y: 40,
                duration: .1
            }).to(".e.red", {
                y: 25,
                duration: .07
            }, .03).to(".e.hand", {
                y: 0,
                duration: .1
            }, .1).to(".e.red", {
                y: 0,
                duration: .1
            }, .1)
        }
    }),
    HV = E.extend({
        imageManifest: {
            comic1: new URL("main/pp7/everyday/assets/84f049ef.png", self.location).href,
            comic2: new URL("main/pp7/everyday/assets/e9cef25e.png", self.location).href,
            comic3: new URL("main/pp7/everyday/assets/c328ad84.png", self.location).href,
            comic4: new URL("main/pp7/everyday/assets/72a89dee.png", self.location).href,
            question: new URL("main/pp7/everyday/assets/5af410d5.png", self.location).href
        }
    }),
    gne = HV.extend({
        elements: a.elementsFromImages("comic3"),
        onStartProgress() {
            a.startHoldShake("comic3", 2, 1)
        },
        onStopProgress() {
            a.stopHoldShake("comic3", 2, 1)
        }
    }),
    yne = HV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("comic2"),
        initializeTimeline() {
            this.timeline.to(".e.comic2", {
                x: 800,
                opacity: 0
            })
        }
    }),
    bne = HV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("comic1"),
        initializeTimeline() {
            this.timeline.to(".e.comic1", {
                x: -800,
                opacity: 0
            })
        }
    }),
    vne = HV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("question"),
        initializeTimeline() {
            this.timeline.to(".e.question", {
                rotate: 360,
                scale: 1
            }), this.timeline.to(".e.question", {
                rotate: 720,
                scale: 2
            }), this.timeline.to(".e.question", {
                rotate: 1080,
                scale: 3
            })
        }
    }),
    wne = HV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("comic4"),
        initializeTimeline() {
            this.timeline.to(".e.comic4", {
                y: 800,
                opacity: 0
            })
        }
    }),
    ap = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/00546c85.png", self.location).href,
            dirt: new URL("main/pp7/everyday/assets/d00285aa.png", self.location).href,
            document: new URL("main/pp7/everyday/assets/5b9d8385.png", self.location).href
        }
    }),
    xne = ap.extend({
        elements: a.elementsFromImages("document"),
        initializeTimeline() {
            s.set(".e.document", {
                scale: .5
            }), this.timeline.to(".e.document", {
                y: 500,
                scale: 1.8
            }), this.timeline.to(".e.document", {
                y: -500
            })
        }
    }),
    kne = ap.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("dirt"),
        onLoadComplete() {
            this.particles = this.addParticleEmitter({
                numberOfParticles: 20,
                autoplay: !0,
                restartOnProgress: !0,
                zIndex: 1,
                settings: {
                    frequency: .0025,
                    from: {
                        backgroundColor: "#685447",
                        border: "2px solid black"
                    },
                    to: {
                        ease: "power2.in",
                        duration: .3
                    },
                    boundaries: {
                        left: 0,
                        right: 0,
                        top: 50,
                        bottom: 100
                    },
                    minSize: 53,
                    maxSize: 65,
                    angle: -75,
                    force: 5,
                    randomAngle: !1,
                    particleLimit: 30
                }
            })
        }
    }),
    Cne = ap.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("capsule", "document", "document"),
        initializeTimeline() {
            s.set(".e.document", {
                scale: .6,
                y: -200
            }), s.set(".e.document:last-child", {
                x: 40,
                y: -180
            }), s.set(".e.capsule", {
                y: 300,
                scale: .8
            }), this.timeline.to(".e.document:last-child", {
                y: 300,
                scale: .3,
                opacity: 0
            })
        }
    }),
    Rne = ap.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("capsule", "document"),
        initializeTimeline() {
            s.set(".e.document", {
                scale: .6,
                y: -200
            }), s.set(".e.capsule", {
                y: 300,
                scale: .8
            }), this.timeline.to(".e.document", {
                y: 300,
                scale: .3,
                opacity: 0
            })
        }
    }),
    rp = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/60fe60a8.png", self.location).href,
            frown: new URL("main/pp7/everyday/assets/a9abe2e0.png", self.location).href,
            hole: new URL("main/pp7/everyday/assets/a670132d.png", self.location).href,
            stomp: new URL("main/pp7/everyday/assets/ace4584a.png", self.location).href,
            fx: new URL("main/pp7/everyday/assets/5f15270d.png", self.location).href
        }
    }),
    Dne = rp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("hole"),
        initializeTimeline() {
            this.timeline.to(".e.hole", {
                scale: 2.8,
                x: -500,
                y: 500
            }), this.timeline.to(".e.hole", {
                scale: 2.2,
                x: -200,
                y: -300
            }), this.timeline.to(".e.hole", {
                scale: 2.8,
                x: -500,
                y: 500
            }), this.timeline.to(".e.hole", {
                scale: 1,
                x: 0,
                y: 0
            })
        }
    }),
    Sne = rp.extend({
        elements: a.elementsFromImages("frown"),
        initializeTimeline() {
            a.startShake("frown", 5, 3)
        }
    }),
    Tne = rp.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("stomp", "fx"),
        initializeTimeline() {
            this.timeline.fromTo(".e.stomp", {
                rotate: 15
            }, {
                rotate: 0,
                ease: "back.in(3)"
            }), this.timeline.fromTo(".e.fx", {
                opacity: 1,
                display: "none"
            }, {
                display: "block",
                opacity: 0
            })
        }
    }),
    Ene = rp.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("frown"),
        initializeTimeline() {
            this.timeline.to(".e.frown", {
                x: -500,
                opacity: 0,
                scale: 2,
                duration: 1
            }), this.timeline.to(".e.frown", {
                y: 90,
                yoyo: !0,
                duration: .25,
                repeat: 3
            }, "<")
        }
    }),
    Vp = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/0cce2952.png", self.location).href,
            crayon: new URL("main/pp7/everyday/assets/d44b6257.png", self.location).href,
            crayonSingle: new URL("main/pp7/everyday/assets/bb369ee7.png", self.location).href,
            exclamation: new URL("main/pp7/everyday/assets/970f0046.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/1976b38f.png", self.location).href
        }
    }),
    Lne = Vp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("paper"),
        initializeTimeline() {
            this.timeline.from(".e.paper", {
                scale: 2,
                y: 1e3
            })
        }
    }),
    Bne = Vp.extend({
        elements: a.elementsFromImages("crayonSingle", "crayon"),
        initializeTimeline() {
            this.timeline.from(".e.crayonSingle", {
                y: 150
            })
        }
    }),
    Mne = Vp.extend({
        elements: a.elementsFromImages("paper", "exclamation"),
        initializeTimeline() {
            this.timeline.fromTo(".e.exclamation", {
                clipPath: "inset(0px 0px 800px 0px)"
            }, {
                clipPath: "inset(0px 0px 210px 0px)"
            })
        }
    }),
    One = Vp.extend({
        stepDuration: .5,
        elements: [{
            type: "img",
            key: "capsule",
            pos: [400, 0],
            class: "capsule"
        }, {
            type: "container",
            children: a.elementsFromImages("paper", "exclamation"),
            class: "paper-container"
        }],
        initializeTimeline() {
            s.set(".e.capsule", {
                scale: .5
            }), s.from(".e.capsule", {
                opacity: 0,
                scale: 1,
                y: 1e3
            }), this.timeline.to(".e.paper-container", {
                y: 200,
                opacity: 0,
                scale: .25
            })
        }
    }),
    Hm = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/0cce2952.png", self.location).href,
            censor: new URL("main/pp7/everyday/assets/75a84bbf.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/1976b38f.png", self.location).href,
            pen: new URL("main/pp7/everyday/assets/1a0d35e9.png", self.location).href,
            cap: new URL("main/pp7/everyday/assets/5d53151f.png", self.location).href
        }
    }),
    Ine = Hm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("paper"),
        initializeTimeline() {
            this.timeline.from(".e.paper", {
                scale: 2,
                y: 1e3
            })
        }
    }),
    Pne = Hm.extend({
        elements: a.elementsFromImages("pen", "cap"),
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                x: -200,
                y: -200,
                opacity: 0
            })
        }
    }),
    Une = Hm.extend({
        elements: a.elementsFromImages("paper", "censor"),
        initializeTimeline() {
            s.set(".e.censor", {
                scale: .7
            }), this.timeline.fromTo(".e.censor", {
                clipPath: "inset(0px 0px 730px 0px)"
            }, {
                clipPath: "inset(0px 0px 300px 0px)"
            })
        }
    }),
    lp = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/82b0dfd8.png", self.location).href,
            cloud: new URL("main/pp7/everyday/assets/479fd2fa.png", self.location).href,
            paper: new URL("main/pp7/everyday/assets/1976b38f.png", self.location).href,
            pen: new URL("main/pp7/everyday/assets/1a0d35e9.png", self.location).href,
            cap: new URL("main/pp7/everyday/assets/5d53151f.png", self.location).href,
            scribble: new URL("main/pp7/everyday/assets/41ca06d3.png", self.location).href
        }
    }),
    Fne = lp.extend({
        elements: a.elementsFromImages("paper", "scribble"),
        initializeTimeline() {
            this.timeline.fromTo(".e.scribble", {
                clipPath: "inset(0px 0px 820px 0px)"
            }, {
                clipPath: "inset(0px 0px 300px 0px)"
            })
        }
    }),
    jne = lp.extend({
        elements: a.elementsFromImages("cloud"),
        onStartProgress() {
            a.startHoldShake("cloud", 5, 1)
        },
        onStopProgress() {
            a.stopHoldShake("cloud", 5, 1)
        }
    }),
    Qne = lp.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("pen", "cap"),
        initializeTimeline() {
            this.timeline.to(".e.cap", {
                x: -200,
                y: -200,
                opacity: 0,
                duration: 1
            }), this.timeline.to(".e.pen", {
                rotate: -90,
                duration: 1
            }), this.timeline.to(".e.pen", {
                rotate: -95,
                yoyo: !0,
                repeat: 7,
                duration: .5
            })
        }
    }),
    zne = lp.extend({
        elements: a.elementsFromImages("cloud"),
        onStartProgress() {
            a.startHoldShake("cloud", 5, 1)
        },
        onStopProgress() {
            a.stopHoldShake("cloud", 5, 1)
        }
    }),
    Qb = E.extend({
        imageManifest: {
            capsule: new URL("main/pp7/everyday/assets/2a548915.png", self.location).href,
            sunglasses: new URL("main/pp7/everyday/assets/f1f90909.png", self.location).href
        }
    }),
    Hne = Qb.extend({
        elements: a.elementsFromImages("capsule"),
        initializeTimeline() {
            s.fromTo(".e.capsule", {
                scale: .5
            }, {
                scale: 1,
                ease: "back.inOut(3)",
                duration: 1
            })
        }
    }),
    Nne = Qb.extend({
        elements: a.elementsFromImages("sunglasses"),
        initializeTimeline() {
            this.timeline.to(".e.sunglasses", {
                rotate: -70,
                yoyo: !0,
                repeat: 1
            })
        }
    }),
    Nm = E.extend({
        imageManifest: {
            bracelet: new URL("main/pp7/everyday/assets/8feb8f47.png", self.location).href,
            slap: new URL("main/pp7/everyday/assets/26337a84.png", self.location).href
        }
    }),
    Gne = Nm.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("bracelet"),
        initializeTimeline() {
            this.timeline.fromTo(".e.bracelet", {
                y: 200,
                x: 0
            }, {
                rotate: -50,
                y: 50,
                x: -100
            })
        }
    }),
    Xne = Nm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bracelet"),
        initializeTimeline() {
            this.timeline.fromTo(".e.bracelet", {
                rotate: -50,
                y: 50,
                x: -100
            }, {
                rotate: 20,
                y: 400,
                x: 0,
                opacity: 0
            })
        }
    }),
    Yne = Nm.extend({
        elements: a.elementsFromImages("slap"),
        initializeTimeline() {
            s.from(".e.slap", {
                y: 600,
                opacity: 0
            }), this.timeline.to(".e.slap", {
                rotateZ: -20,
                rotateY: -10
            }), this.timeline.to(".e.slap", {
                rotateZ: 20,
                rotateY: 10
            })
        }
    }),
    Gm = E.extend({
        imageManifest: {
            jacket: new URL("main/pp7/everyday/assets/4411acd2.png", self.location).href,
            mirror: new URL("main/pp7/everyday/assets/63bb3ff8.png", self.location).href
        }
    }),
    Kne = Gm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("jacket"),
        initializeTimeline() {
            this.timeline.to(".e.jacket", {
                scale: 3,
                opacity: 0,
                rotateY: 20
            })
        }
    }),
    Wne = Gm.extend({
        elements: [{
            type: "container",
            children: a.elementsFromImages("mirror", "jacket"),
            class: "pose",
            pos: [0, 0]
        }],
        initializeTimeline() {
            s.set(".e.jacket", {
                opacity: .5,
                scale: .7,
                clipPath: "inset(0 160px 0 170px)"
            }), this.timeline.to(".e.pose", {
                scale: 2
            })
        }
    }),
    Jne = Gm.extend({
        elements: a.elementsFromImages("jacket"),
        initializeTimeline() {
            this.timeline.to(".e.jacket", {
                rotateY: 180,
                ease: "power2.inOut",
                duration: 1
            }), this.timeline.to(".e.jacket", {
                scale: 1.5,
                ease: "power2.inOut",
                yoyo: !0,
                repeat: 1,
                duration: .5
            }, "<")
        }
    }),
    NV = E.extend({
        imageManifest: {
            bite: new URL("main/pp7/everyday/assets/53933df7.png", self.location).href,
            bubbles: new URL("main/pp7/everyday/assets/3c722c78.png", self.location).href,
            chew: new URL("main/pp7/everyday/assets/0c3f1a03.png", self.location).href,
            gum: new URL("main/pp7/everyday/assets/a71ff11f.png", self.location).href,
            teeth: new URL("main/pp7/everyday/assets/f6588ea3.png", self.location).href,
            biteNoGum: new URL("main/pp7/everyday/assets/8c0fc1da.png", self.location).href,
            wrap: new URL("main/pp7/everyday/assets/496acc42.png", self.location).href
        }
    }),
    Zne = NV.extend({
        elements: a.elementsFromImages("wrap"),
        initializeTimeline() {
            this.timeline.to(".e.wrap", {
                rotateX: 720,
                ease: "none"
            })
        }
    }),
    _ne = NV.extend({
        stepDuration: .6,
        elements: a.elementsFromImages("teeth", "bite"),
        initializeTimeline() {},
        onDiscreteProgress() {
            a.squashTransition("bite", "teeth", .5)
        }
    }),
    $ne = NV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("chew"),
        onDiscreteProgress() {
            a.squashOnce("chew")
        }
    }),
    eie = NV.extend({
        stepDuration: 1,
        elements: a.elementsFromImages("chew"),
        initializeTimeline() {
            this.timeline.to(".e.chew", {
                scaleY: 1.1,
                y: 50
            }), this.timeline.to(".e.chew", {
                scaleY: 1,
                scaleX: 1.1,
                y: -50
            })
        }
    }),
    tie = NV.extend({
        elements: a.elementsFromImages("biteNoGum", "chew", "bubbles"),
        initializeTimeline() {
            this.timeline.add(a.squashTransition("chew", "biteNoGum", .5)), this.timeline.from(".e.bubbles", {
                opacity: 0,
                scale: .25
            })
        }
    }),
    Ap = E.extend({
        imageManifest: {
            comic: new URL("main/pp7/everyday/assets/2df710a0.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "comic",
                images: {
                    spill: [934, 984, 296, 283, 288, 300],
                    comic: [10, 10, 823, 858, 84, 89],
                    money: [10, 878, 914, 472, 264, 43],
                    armRight: [1240, 984, 146, 239, 274, 743],
                    armLeft: [1338, 683, 150, 197, 534, 119],
                    body: [843, 10, 683, 663, 299, 119],
                    head: [934, 683, 394, 291, 47, 238]
                }
            }
        }
    }),
    nie = Ap.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", ["comic"]),
        onLoadComplete() {
            s.set(".e.comic", {
                x: 200,
                y: 100,
                rotate: 75
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.comic", {
                x: 0,
                y: 0,
                rotate: 0
            })
        }
    }),
    iie = Ap.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("sprite", ["head", "body", "armLeft", "armRight"]),
        onLoadComplete() {
            s.set(".e.armLeft", {
                transformOrigin: "30px 30px"
            }), s.set(".e.armRight", {
                transformOrigin: "27px 218px"
            }), s.set(".e.head", {
                x: 20,
                y: 70
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.head", {
                x: 0,
                y: 0,
                duration: 1
            }).to(".e.armLeft", {
                rotate: -30,
                duration: .5
            }).to(".e.armLeft", {
                rotate: 30,
                duration: .5
            }).to(".e.head", {
                x: 20,
                y: 70,
                duration: .5
            }).to(".e.head", {
                x: 0,
                y: 0,
                duration: .5
            }).to(".e.armRight", {
                rotate: 30,
                duration: 1
            }).to(".e.armLeft", {
                rotate: -30,
                duration: .5
            }).to(".e.armLeft", {
                rotate: 30,
                duration: .5
            })
        }
    }),
    sie = Ap.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["comic", "spill"]),
        onLoadComplete() {
            s.set(".e.spill", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.spill", {
                opacity: 1
            })
        }
    }),
    oie = Ap.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["comic", "spill", ["money", "money0"],
                ["money", "money1"],
                ["money", "money2"],
                ["money", "money3"],
                ["money", "money4"]
            ])
        }],
        onLoadComplete() {
            s.to(".e.comic, .e.spill", {
                scale: .5,
                opacity: 0,
                duration: .6
            })
        },
        onStartProgress() {
            a.startHoldShake("c"), s.to(".e.money0", {
                rotate: -10,
                duration: .2
            }), s.to(".e.money1", {
                rotate: -5,
                duration: .2
            }), s.to(".e.money2", {
                rotate: 0,
                duration: .2
            }), s.to(".e.money3", {
                rotate: 5,
                duration: .2
            }), s.to(".e.money4", {
                rotate: 10,
                duration: .2
            })
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Xm = E.extend({
        imageManifest: {
            branch: new URL("main/pp7/everyday/assets/00d533ea.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/e3fb68fb.png", self.location).href,
            tree: new URL("main/pp7/everyday/assets/4defc72b.png", self.location).href
        }
    }),
    aie = Xm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("ladder"),
        onDiscreteProgress() {
            a.squashOnce("ladder", .25)
        }
    }),
    rie = Xm.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("tree", ["branch", "branch0", [150, 120]], ["branch", "branch1", [190, -170]], ["branch", "branch2", [40, 110]], ["branch", "branch3", [10, -160]]),
        onLoadComplete() {
            s.set(".e.branch1, .e.branch3", {
                scaleX: -1
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.branch1", {
                x: -30,
                y: 290,
                rotate: 160
            }).to(".e.branch0", {
                x: 80,
                y: 220,
                rotate: 54
            }).to(".e.branch3", {
                x: -40,
                y: 340,
                rotate: 20
            }).to(".e.branch2", {
                x: 60,
                y: 330,
                rotate: -10
            })
        }
    }),
    Vie = Xm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("ladder")
        }],
        onLoadComplete() {
            a.startShake("ladder", 0, 3, .5)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    lie = E.extend({
        imageManifest: {
            panel: new URL("main/pp7/everyday/assets/14d7f117.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "panel",
                images: {
                    ropeBL: [651, 10, 68, 1477, -330, 234],
                    ropeBR: [651, 10, 68, 1477, -330, 614],
                    wall: [10, 10, 631, 535, 618, 189],
                    ropeFL: [651, 10, 68, 1477, -300, 284],
                    ropeFR: [651, 10, 68, 1477, -300, 664]
                }
            }
        }
    }),
    Aie = lie.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["ropeBL", "ropeBR", "wall", "ropeFL", "ropeFR"]),
        initializeTimeline() {
            const t = {
                    y: "-=23",
                    duration: 1,
                    ease: "none"
                },
                e = {
                    y: "-=47",
                    duration: 1,
                    ease: "none"
                };
            this.timeline.to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 0).to(".e.ropeBL, .e.ropeFL", {
                y: -27,
                duration: 1,
                ease: "power1.out"
            }, 0).to(".e.ropeBR, .e.ropeFR", {
                y: -46,
                duration: 1,
                ease: "power1.out"
            }, 0).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 1).to(".e.ropeBL, .e.ropeFL", {
                y: -80,
                duration: 1,
                ease: "power1.out"
            }, 1).to(".e.ropeBR, .e.ropeFR", {
                y: -63,
                duration: 1,
                ease: "power1.out"
            }, 1).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 2).to(".e.ropeBL, .e.ropeFL", {
                y: -97,
                duration: 1,
                ease: "power1.out"
            }, 2).to(".e.ropeBR, .e.ropeFR", {
                y: -114,
                duration: 1,
                ease: "power1.out"
            }, 2).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 3).to(".e.ropeBL, .e.ropeFL", {
                y: -150,
                duration: 1,
                ease: "power1.out"
            }, 3).to(".e.ropeBR, .e.ropeFR", t, 3).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 4).to(".e.ropeBL, .e.ropeFL", t, 4).to(".e.ropeBR, .e.ropeFR", e, 4).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 5).to(".e.ropeBL, .e.ropeFL", e, 5).to(".e.ropeBR, .e.ropeFR", t, 5).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 6).to(".e.ropeBL, .e.ropeFL", t, 6).to(".e.ropeBR, .e.ropeFR", e, 6).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 7).to(".e.ropeBL, .e.ropeFL", e, 7).to(".e.ropeBR, .e.ropeFR", t, 7).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 8).to(".e.ropeBL, .e.ropeFL", t, 8).to(".e.ropeBR, .e.ropeFR", e, 8).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 9).to(".e.ropeBL, .e.ropeFL", e, 9).to(".e.ropeBR, .e.ropeFR", t, 9).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 10).to(".e.ropeBL, .e.ropeFL", t, 10).to(".e.ropeBR, .e.ropeFR", e, 10).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 11).to(".e.ropeBL, .e.ropeFL", e, 11).to(".e.ropeBR, .e.ropeFR", t, 11).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 12).to(".e.ropeBL, .e.ropeFL", t, 12).to(".e.ropeBR, .e.ropeFR", e, 12).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 13).to(".e.ropeBL, .e.ropeFL", e, 13).to(".e.ropeBR, .e.ropeFR", t, 13).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 14).to(".e.ropeBL, .e.ropeFL", t, 14).to(".e.ropeBR, .e.ropeFR", e, 14).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 15).to(".e.ropeBL, .e.ropeFL", e, 15).to(".e.ropeBR, .e.ropeFR", t, 15).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 16).to(".e.ropeBL, .e.ropeFL", t, 16).to(".e.ropeBR, .e.ropeFR", e, 16).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 17).to(".e.ropeBL, .e.ropeFL", e, 17).to(".e.ropeBR, .e.ropeFR", t, 17).to(".e.wall", {
                rotate: -3,
                duration: 1
            }, 18).to(".e.ropeBL, .e.ropeFL", t, 18).to(".e.ropeBR, .e.ropeFR", e, 18).to(".e.wall", {
                rotate: 3,
                duration: 1
            }, 19).to(".e.ropeBL, .e.ropeFL", e, 19).to(".e.ropeBR, .e.ropeFR", t, 19).to(".e.wall", {
                y: -700,
                duration: 20,
                ease: "none"
            }, 0)
        }
    }),
    Ym = E.extend({
        imageManifest: {
            dust: new URL("main/pp7/everyday/assets/2a9b9cd4.png", self.location).href,
            bench: new URL("main/pp7/everyday/assets/e8ad068e.png", self.location).href,
            sprite: new URL("main/pp7/everyday/assets/9e39ef64.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    rough: [0, 0, 730, 356],
                    smooth: [0, 357, 730, 356],
                    painted: [0, 714, 730, 356],
                    nail: [732, 0, 92, 298],
                    hammer: [730, 298, 339, 427]
                }
            }
        }
    }),
    cie = Ym.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["smooth", null, [322, 135]],
                ["nail", "nail0", [276, 295]],
                ["nail", "nail1", [88, 610]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.nail0", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            }).to(".e.nail1", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.c", {
                scale: .85,
                ease: "back.in(2)",
                duration: .15
            }).to(".e.c", {
                scale: 1,
                ease: "back.out(2)",
                duration: .15
            })
        }
    }),
    die = Ym.extend({
        stepDuration: .2,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["smooth", null, [322, 135]],
                ["nail", "nail0", [276, 295]],
                ["nail", "nail1", [182, 457]],
                ["nail", "nail2", [88, 610]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.nail0", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            }).to(".e.nail1", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            }).to(".e.nail2", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.c", {
                scale: .85,
                ease: "back.in(2)",
                duration: .1
            }).to(".e.c", {
                scale: 1,
                ease: "back.out(2)",
                duration: .1
            })
        }
    }),
    pie = Ym.extend({
        stepDuration: .3,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", [
                ["smooth", null, [322, 135]],
                ["nail", "nail0", [182, 457]]
            ])
        }],
        initializeTimeline() {
            this.timeline.to(".e.nail0", {
                y: 260,
                clipPath: "inset(0 0 269px 0)"
            })
        },
        onDiscreteProgress() {
            s.timeline().to(".e.c", {
                scale: .85,
                ease: "back.in(2)",
                duration: .15
            }).to(".e.c", {
                scale: 1,
                ease: "back.out(2)",
                duration: .15
            })
        }
    }),
    Km = E.extend({
        imageManifest: {
            blue: new URL("main/pp7/everyday/assets/5f1718bb.png", self.location).href,
            green: new URL("main/pp7/everyday/assets/5536da4e.png", self.location).href,
            red: new URL("main/pp7/everyday/assets/95869b1f.png", self.location).href,
            yellow: new URL("main/pp7/everyday/assets/53b45d0f.png", self.location).href,
            paint: new URL("main/pp7/everyday/assets/c93be65c.png", self.location).href,
            splats: new URL("main/pp7/everyday/assets/aa0e65a1.png", self.location).href
        },
        sprites: {
            cans: {
                key: "paint",
                images: {
                    canY: [438, 984, 322, 338, 461, 56],
                    canR: [474, 486, 322, 338, 372, 246],
                    canG: [513, 10, 322, 338, 283, 436],
                    canB: [477, 1332, 322, 338, 194, 626]
                }
            },
            hands: {
                key: "paint",
                images: {
                    handY: [10, 1465, 457, 467, 0, 501],
                    handR: [10, 486, 454, 488, 558, -39],
                    handG: [10, 10, 493, 466, 580, 591],
                    handB: [10, 984, 418, 471, 0, -39]
                }
            },
            splats: {
                key: "splats",
                images: {
                    splatY: [10, 792, 855, 699, -84, -79],
                    splatR: [10, 10, 717, 772, 53, 418],
                    splatG: [737, 10, 852, 701, 266, -186],
                    splatB: [875, 721, 773, 713, 395, 132]
                }
            }
        }
    }),
    hie = Km.extend({
        stepDuration: .45,
        elements: a.elementsFromSprite("cans", ["canB", "canG", "canR", "canY"]),
        onLoadComplete() {
            s.set(".e.canG, .e.canR, .e.canY", {
                hidden: !0,
                y: -300,
                scaleY: 1.1,
                transformOrigin: "bottom center"
            }), s.timeline().set(".e.canB", {
                y: -300,
                scaleY: 1.1,
                transformOrigin: "bottom center"
            }, 0).to(".e.canB", {
                y: 0,
                duration: .25,
                ease: "none"
            }, 0).to(".e.canB", {
                scaleY: .7,
                duration: .13,
                ease: "power2.out"
            }).to(".e.canB", {
                scaleY: 1,
                duration: .1
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.canG", {
                hidden: !1
            }, 0).to(".e.canG", {
                y: 0,
                duration: 1,
                ease: "none"
            }, 0).to(".e.canG", {
                scaleY: .7,
                duration: .25,
                ease: "power2.out"
            }, 1).to(".e.canG", {
                scaleY: 1,
                duration: .15
            }, 1.25).set(".e.canR", {
                hidden: !1
            }, 2.01).to(".e.canR", {
                y: 0,
                duration: 1,
                ease: "none"
            }, 2).to(".e.canR", {
                scaleY: .7,
                duration: .25,
                ease: "power2.out"
            }, 3).to(".e.canR", {
                scaleY: 1,
                duration: .15
            }, 3.25).set(".e.canY", {
                hidden: !1
            }, 4.01).to(".e.canY", {
                y: 0,
                duration: 1,
                ease: "none"
            }, 4).to(".e.canY", {
                scaleY: .7,
                duration: .25,
                ease: "power2.out"
            }, 5).to(".e.canY", {
                scaleY: 1,
                duration: .15
            }, 5.25).fillTime(.6)
        }
    }),
    uie = Km.extend({
        stepDuration: .75,
        elements: a.elementsFromSprite("splats", ["splatB", "splatY", "splatG", "splatR"]),
        onLoadComplete() {
            s.set(".e.splatB, .e.splatG, .e.splatR, .e.splatY", {
                scale: .7,
                opacity: .9,
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.splatB", {
                hidden: !1
            }).to(".e.splatB", {
                scale: 1,
                duration: 1
            }).set(".e.splatY", {
                hidden: !1
            }, .5).to(".e.splatY", {
                scale: 1,
                duration: 1
            }, .5).set(".e.splatG", {
                hidden: !1
            }, 1).to(".e.splatG", {
                scale: 1,
                duration: 1
            }, 1).set(".e.splatR", {
                hidden: !1
            }, 1.5).to(".e.splatR", {
                scale: 1,
                duration: 1
            }, 1.5).fillTime(.5)
        }
    }),
    mie = Km.extend({
        elements: [...a.elementsFromImages(["blue", null, [-500, -475]], ["yellow", null, [-500, 380]], ["green", null, [470, 430]], ["red", null, [480, -480]]), ...a.elementsFromSprite("hands", ["handB", "handY", "handG", "handR"])],
        onLoadComplete() {
            s.fromTo(".e.handB, .e.handG, .e.handR, .e.handY", {
                scale: .7,
                opacity: .9
            }, {
                scale: 1,
                duration: .5
            }), s.set(".e.blue, .e.yellow, .e.green, .e.red", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.handY", {
                rotate: 20,
                duration: .75
            }, 0).to(".e.handY", {
                rotate: -40,
                duration: 1
            }, .75).to(".e.handY", {
                rotate: 20,
                duration: 1
            }, 1.75).to(".e.handY", {
                rotate: -40,
                duration: 1
            }, 2.75).to(".e.handY", {
                rotate: 20,
                duration: .25
            }, 3.75).to(".e.handY", {
                opacity: 0,
                duration: 2
            }, 2).to(".e.yellow", {
                opacity: .9,
                duration: 3
            }, 1), this.timeline.to(".e.handR", {
                rotate: 10,
                duration: .25
            }, 0).to(".e.handR", {
                rotate: -50,
                duration: 1
            }, .25).to(".e.handR", {
                rotate: 10,
                duration: 1
            }, 1.25).to(".e.handR", {
                rotate: -50,
                duration: 1
            }, 2.25).to(".e.handR", {
                rotate: 10,
                duration: .75
            }, 3.25).to(".e.handR", {
                opacity: 0,
                duration: 2
            }, 1.25).to(".e.red", {
                opacity: .9,
                duration: 3
            }, .25), this.timeline.to(".e.handG", {
                rotate: -30,
                duration: 1
            }, 0).to(".e.handG", {
                rotate: 30,
                duration: 1
            }, 1).to(".e.handG", {
                rotate: -30,
                duration: 1
            }, 2).to(".e.handG", {
                rotate: 30,
                duration: 1
            }, 3).to(".e.handG", {
                opacity: 0,
                duration: 2
            }, 1.5).to(".e.green", {
                opacity: .9,
                duration: 3
            }, .5), this.timeline.to(".e.handB", {
                rotate: -30,
                duration: 1
            }, 0).to(".e.handB", {
                rotate: 30,
                duration: 1
            }, 1).to(".e.handB", {
                rotate: -30,
                duration: 1
            }, 2).to(".e.handB", {
                rotate: 30,
                duration: 1
            }, 3).to(".e.handB", {
                opacity: 0,
                duration: 2
            }, 1.75).to(".e.blue", {
                opacity: .9,
                duration: 3
            }, .75)
        }
    }),
    Wm = E.extend({
        imageManifest: {
            neighbor: new URL("main/pp7/everyday/assets/d07529dc.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "neighbor",
                images: {
                    neighbor: [10, 10, 218, 248, 376, 391],
                    whole: [581, 10, 139, 262, 371, 394],
                    quarter: [730, 10, 213, 263, 370, 394],
                    eighth: [238, 10, 333, 261, 370, 333],
                    binocks: [10, 283, 831, 601, 221, 84]
                }
            }
        }
    }),
    fie = Wm.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["binocks"]),
        onLoadComplete() {
            s.set(".e.binocks", {
                rotate: -70,
                scale: .75
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.binocks", {
                rotate: 0,
                scale: 1
            })
        }
    }),
    qie = Wm.extend({
        elements: a.elementsFromSprite("sprite", ["neighbor"]),
        onLoadComplete() {
            s.set(".e.neighbor", {
                scaleY: .8,
                transformOrigin: "bottom center"
            }), s.timeline({
                repeat: -1
            }).to(".e.neighbor", {
                scaleY: 1.1,
                skewX: -5
            }).to(".e.neighbor", {
                scaleY: .8,
                skewX: 0
            }).to(".e.neighbor", {
                scaleY: 1.1,
                skewX: 5
            }).to(".e.neighbor", {
                scaleY: .8,
                skewX: 0
            })
        }
    }),
    gie = Wm.extend({
        elements: a.elementsFromSprite("sprite", ["whole", "quarter", "eighth"]),
        onLoadComplete() {
            s.set(".e.whole, .e.quarter, .e.eighth", {
                x: -400,
                opacity: 0,
                rotate: -20
            }), s.to(".e.whole, .e.quarter, .e.eighth", {
                rotate: 20,
                repeat: -1
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                    repeat: 1
                }).to(".e.whole", {
                    x: 400,
                    duration: 1,
                    ease: "none"
                }).to(".e.whole", {
                    opacity: 1,
                    duration: .2
                }, 0).to(".e.whole", {
                    opacity: 0,
                    duration: .2
                }, .8),
                e = s.timeline({
                    delay: .33
                }).to(".e.quarter", {
                    x: 400,
                    duration: 1,
                    ease: "none"
                }).to(".e.quarter", {
                    opacity: 1,
                    duration: .2
                }, 0).to(".e.quarter", {
                    opacity: 0,
                    duration: .2
                }, .8),
                n = s.timeline({
                    delay: .66
                }).to(".e.eighth", {
                    x: 400,
                    duration: 1,
                    ease: "none"
                }).to(".e.eighth", {
                    opacity: 1,
                    duration: .2
                }, 0).to(".e.eighth", {
                    opacity: 0,
                    duration: .2
                }, .8);
            this.timeline.add(t, 0).add(e, 0).add(n, 0)
        }
    }),
    Jm = E.extend({
        imageManifest: {
            hand: new URL("main/pp7/everyday/assets/53094280.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/e3fb68fb.png", self.location).href,
            smooch: new URL("main/pp7/everyday/assets/486cbaa3.png", self.location).href
        }
    }),
    zb = Jm.extend({
        stepDuration: .35,
        elements: a.elementsFromImages("ladder"),
        onDiscreteProgress() {
            a.squashOnce("ladder", .35)
        }
    }),
    Hb = Jm.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromImages("hand")
        }],
        onLoadComplete() {
            s.set(".e.hand", {
                scale: .8,
                rotate: 30
            })
        },
        onStartProgress() {
            a.startHoldShake("c"), s.to(".e.hand", {
                scale: 1.1,
                rotate: 0,
                duration: .4,
                ease: "back.out(2)"
            })
        },
        onStopProgress() {
            a.stopHoldShake("c"), s.to(".e.hand", {
                scale: .8,
                rotate: 30,
                duration: .2
            })
        }
    }),
    yie = Jm.extend({
        elements: a.elementsFromImages("smooch"),
        initializeTimeline() {
            this.timeline.add(a.squashOnce("smooch")).add(a.squashOnce("smooch", "y")).add(a.squashOnce("smooch")).add(a.squashOnce("smooch", "y")).add(a.squashOnce("smooch"))
        }
    }),
    bie = E.extend({
        imageManifest: {
            eyes: new URL("main/pp7/everyday/assets/e0fa1755.png", self.location).href
        }
    }),
    vie = zb,
    wie = Hb,
    xie = bie.extend({
        elements: a.elementsFromImages("eyes")
    }),
    Zm = E.extend({
        imageManifest: {
            crack: new URL("main/pp7/everyday/assets/b4d4cf8f.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "crack",
                images: {
                    crack: [10, 10, 352, 169, 429, 315],
                    floor: [10, 189, 939, 672, 161, 31]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["floor", "crack"])
        }],
        onLoadComplete() {
            s.set(".e.crack", {
                opacity: 0
            })
        }
    }),
    kie = Zm.extend({
        onStartProgress() {
            a.startHoldShake("floor")
        },
        onStopProgress() {
            a.stopHoldShake("floor")
        }
    }),
    Cie = Zm.extend({
        stepDuration: .3,
        onDiscreteProgress() {
            s.to(".e.crack", {
                opacity: 1,
                duration: .15,
                repeat: 1,
                yoyo: !0
            })
        }
    }),
    Rie = Zm,
    cp = E.extend({
        imageManifest: {
            floor: new URL("main/pp7/everyday/assets/a5d4ed6e.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "floor",
                images: {
                    roll: [10, 522, 383, 383, 309, 610],
                    tape: [10, 445, 756, 67, 309, 219],
                    tape4: [776, 445, 115, 220, 360, 603],
                    tape3: [403, 760, 395, 67, 428, 310],
                    tape2: [901, 445, 99, 219, 360, 310],
                    tape1: [403, 522, 349, 59, 374, 310],
                    tape0: [403, 675, 441, 75, 489, 277],
                    floor: [10, 10, 974, 425, 248, 10]
                }
            }
        }
    }),
    Die = cp.extend({
        elements: a.elementsFromSprite("sprite", ["tape", "roll"]),
        onLoadComplete() {
            s.set(".e.tape", {
                clipPath: "inset(0% 0% 0% 79%)"
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.roll", {
                x: -600
            }, 0).to(".e.tape", {
                clipPath: "inset(0% 0% 0% 0%)"
            }, 0)
        }
    }),
    Sie = cp.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["floor", "tape0", "tape1", "tape2", "tape3", "tape4"])
        }],
        onLoadComplete() {
            s.set(".e.tape0, .e.tape1, .e.tape2, .e.tape3, .e.tape4", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.tape0", {
                hidden: !1
            }, 1).set(".e.tape1", {
                hidden: !1
            }, 2).set(".e.tape2", {
                hidden: !1
            }, 3).set(".e.tape3", {
                hidden: !1
            }, 4).set(".e.tape4", {
                hidden: !1
            }, 5).fillTime(1)
        },
        onStartProgress() {
            a.startHoldShake("c")
        },
        onStopProgress() {
            a.stopHoldShake("c")
        }
    }),
    Tie = cp.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["floor", "tape0", "tape1", "tape2", "tape3", "tape4"])
        }],
        initializeTimeline() {
            this.timeline.add(a.squashOnce("c")).fillTime(.3).add(a.squashOnce("c")).fillTime(.3).add(a.squashOnce("c"))
        }
    }),
    Eie = cp.extend({
        stepDuration: .35,
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["floor", "tape0", "tape1", "tape2", "tape3", "tape4"])
        }],
        initializeTimeline() {
            this.timeline.add(a.squashOnce("c", 1, "y")).add(a.squashOnce("c", 1, "y"))
        }
    }),
    GV = E.extend({
        imageManifest: {
            blanket: new URL("main/pp7/everyday/assets/fd4e3074.png", self.location).href,
            dresser: new URL("main/pp7/everyday/assets/58cd353e.png", self.location).href,
            pillow: new URL("main/pp7/everyday/assets/670367ef.png", self.location).href,
            pine1: new URL("main/pp7/everyday/assets/8c37daa8.png", self.location).href,
            pine2: new URL("main/pp7/everyday/assets/d7d396af.png", self.location).href
        }
    }),
    Lie = GV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("blanket", "pillow"),
        initializeTimeline() {
            this.timeline.fromTo(".e.pillow", {
                y: -200,
                scale: .75
            }, {
                x: 600,
                rotate: 60,
                opacity: 0
            })
        }
    }),
    Bie = GV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("blanket"),
        initializeTimeline() {
            this.timeline.to(".e.blanket", {
                x: -600,
                rotate: -40,
                opacity: 0
            })
        }
    }),
    Mie = GV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("dresser"),
        initializeTimeline() {
            this.timeline.to(".e.dresser", {
                scale: 1.75,
                y: 200,
                duration: 1
            }), this.timeline.to(".e.dresser", {
                y: -500,
                duration: 2
            }), this.timeline.to(".e.dresser", {
                y: 500,
                scale: 1,
                duration: 1
            })
        }
    }),
    Oie = GV.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("dresser", "pine1"),
        initializeTimeline() {
            s.set(".e.dresser", {
                y: 500,
                scale: 1,
                duration: 1
            }), this.timeline.fromTo(".e.pine1", {
                y: -200,
                opacity: 0
            }, {
                scale: .75,
                y: -300,
                opacity: 1
            })
        }
    }),
    Iie = GV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("dresser", "pine1", "pine2"),
        initializeTimeline() {
            s.set(".e.dresser", {
                y: 500,
                scale: 1,
                duration: 1
            }), s.set(".e.pine1", {
                scale: .5,
                y: -200,
                opacity: 1
            }), s.set(".e.pine2", {
                hidden: !0
            }), s.to(".e.dresser", {
                y: 1200,
                scale: 1.5,
                opacity: 0
            }), s.to(".e.pine1", {
                scale: 1,
                y: 0
            })
        },
        onDiscreteProgress() {
            a.squashTransition("pine1", "pine2", .25)
        }
    }),
    XV = E.extend({
        imageManifest: {
            foot: new URL("main/pp7/everyday/assets/741e6bf2.png", self.location).href,
            pants: new URL("main/pp7/everyday/assets/6f8c2fe5.png", self.location).href,
            socks: new URL("main/pp7/everyday/assets/52be1cf2.png", self.location).href,
            yawn: new URL("main/pp7/everyday/assets/14a05ed8.png", self.location).href,
            zzz: new URL("main/pp7/everyday/assets/3bd8483b.png", self.location).href
        }
    }),
    Pie = XV.extend({
        elements: a.elementsFromImages("foot")
    }),
    Uie = XV.extend({
        elements: a.elementsFromImages("socks")
    }),
    Fie = XV.extend({
        elements: a.elementsFromImages("pants")
    }),
    jie = XV.extend({
        elements: a.elementsFromImages("yawn"),
        initializeTimeline() {
            this.timeline.to(".e.yawn", {
                opacity: 0,
                scale: .75
            })
        }
    }),
    Qie = XV.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("zzz"),
        onDiscreteProgress() {
            s.to(".e.zzz", {
                opacity: 0,
                y: 300,
                scale: .75
            })
        }
    }),
    _m = E.extend({
        imageManifest: {
            antacids: new URL("main/pp7/everyday/assets/04b9f785.png", self.location).href,
            show2: new URL("main/pp7/everyday/assets/190b9b54.png", self.location).href,
            funshow: new URL("main/pp7/everyday/assets/31ef4743.png", self.location).href
        }
    }),
    zie = _m.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("show2", "funshow"),
        onProgress(t) {
            t > 98 && a.squashTransition("funshow", "show2", .25)
        }
    }),
    Hie = _m.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("antacids", "show2"),
        onProgress(t) {
            t > 98 && a.squashTransition("show2", "antacids", .25)
        }
    }),
    Nie = _m.extend({
        elements: a.elementsFromImages("antacids"),
        initializeTimeline() {
            this.timeline.to(".e.antacids", {
                scale: 2,
                duration: 2,
                x: 120,
                ease: "none"
            })
        }
    }),
    dp = E.extend({
        imageManifest: {
            sleep1: new URL("main/pp7/everyday/assets/36f07a77.png", self.location).href,
            sleep2: new URL("main/pp7/everyday/assets/a84d5b61.png", self.location).href,
            sleep3: new URL("main/pp7/everyday/assets/a5d6f1ff.png", self.location).href,
            z1: new URL("main/pp7/everyday/assets/ac70635c.png", self.location).href,
            z2: new URL("main/pp7/everyday/assets/77e5f306.png", self.location).href,
            sleep4: new URL("main/pp7/everyday/assets/7b17873e.png", self.location).href
        }
    }),
    Gie = dp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("sleep2", "sleep1"),
        onDiscreteProgress() {
            a.squashTransition("sleep1", "sleep2", .25)
        }
    }),
    Xie = dp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("sleep3", "sleep2"),
        onDiscreteProgress() {
            a.squashTransition("sleep2", "sleep3", .25)
        }
    }),
    Yie = dp.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("sleep2", "sleep3"),
        onDiscreteProgress() {
            a.squashTransition("sleep3", "sleep2", .25)
        }
    }),
    Kie = dp.extend({
        stepDuration: .5,
        elements: a.elementsFromImages("sleep1", "sleep2", "z1", "z2"),
        initializeTimeline() {
            s.set(".e.z2, .e.z1", {
                hidden: !1
            }), this.z1Tween = s.to(".e.z1", {
                opacity: 0,
                x: 50,
                y: -50,
                repeat: -1,
                duration: 1.5
            }), this.z2Tween = s.to(".e.z2", {
                opacity: 0,
                x: 50,
                y: -50,
                repeat: -1,
                duration: 1.5,
                delay: .5
            })
        },
        onStartProgress() {
            a.startShake("sleep2", 1, 2, 3)
        },
        onProgress(t) {
            t > 98 && (a.stopShake("sleep2"), a.squashTransition("sleep2", "sleep1", .25), s.set(".e.z2, .e.z1", {
                hidden: !0
            }))
        },
        onStopProgress() {
            a.stopShake("sleep2")
        }
    }),
    $m = E.extend({
        imageManifest: {
            bucket: new URL("main/pp7/everyday/assets/f5ceaf2c.png", self.location).href,
            bucketFront: new URL("main/pp7/everyday/assets/e73cfe74.png", self.location).href,
            mop: new URL("main/pp7/everyday/assets/0769ab0b.png", self.location).href,
            slime: new URL("main/pp7/everyday/assets/24c29a45.png", self.location).href
        }
    }),
    Wie = $m.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("mop"),
        initializeTimeline() {
            this.timeline.to(".e.mop", {
                y: -100,
                ease: "back(3)"
            })
        }
    }),
    Jie = $m.extend({
        stepDuration: .25,
        elements: a.elementsFromImages("bucket", "mop", "bucketFront"),
        initializeTimeline() {
            this.timeline.fromTo(".e.mop", {
                y: -100
            }, {
                y: 0,
                ease: "back(3)"
            })
        }
    }),
    Zie = $m.extend({
        elements: a.elementsFromImages("slime", "mop"),
        initializeTimeline() {
            this.timeline.fromTo(".e.mop", {
                rotate: -20
            }, {
                rotate: 20,
                repeat: 7,
                yoyo: !0,
                ease: "power2.inOut"
            }), this.timeline.to(".e.slime", {
                opacity: 0,
                duration: 5
            }, "<")
        }
    }),
    _ie = E.extend({
        imageManifest: {
            Adult0Passport: new URL("main/pp7/everyday/assets/658474e2.png", self.location).href,
            Adult0: new URL("main/pp7/everyday/assets/9c5ec28d.png", self.location).href,
            Adult0v2: new URL("main/pp7/everyday/assets/e3794c94.png", self.location).href,
            Adult1Passport: new URL("main/pp7/everyday/assets/e18a5a0c.png", self.location).href,
            Adult1: new URL("main/pp7/everyday/assets/793acee9.png", self.location).href,
            Adult1v2: new URL("main/pp7/everyday/assets/d4bfe2db.png", self.location).href,
            Child0Passport: new URL("main/pp7/everyday/assets/957724a8.png", self.location).href,
            Child0: new URL("main/pp7/everyday/assets/45b3ec32.png", self.location).href,
            Child0v2: new URL("main/pp7/everyday/assets/a344637e.png", self.location).href,
            Child0v3: new URL("main/pp7/everyday/assets/ee6aa9f0.png", self.location).href,
            Child1Passport: new URL("main/pp7/everyday/assets/c2cf55c1.png", self.location).href,
            Child1: new URL("main/pp7/everyday/assets/efeaf4cd.png", self.location).href,
            Child1v2: new URL("main/pp7/everyday/assets/57535bdf.png", self.location).href,
            Child1v3: new URL("main/pp7/everyday/assets/35daf245.png", self.location).href,
            Child2Passport: new URL("main/pp7/everyday/assets/d56bb81a.png", self.location).href,
            Child2: new URL("main/pp7/everyday/assets/16612d7d.png", self.location).href,
            Child2v2: new URL("main/pp7/everyday/assets/dc01d413.png", self.location).href,
            Child2v3: new URL("main/pp7/everyday/assets/24e94e4d.png", self.location).href,
            Teen0Passport: new URL("main/pp7/everyday/assets/57c6cb88.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/d1de01f1.png", self.location).href,
            Teen0v2: new URL("main/pp7/everyday/assets/9ec02ea6.png", self.location).href,
            Teen0v3: new URL("main/pp7/everyday/assets/497bc7b1.png", self.location).href,
            Teen1Passport: new URL("main/pp7/everyday/assets/9dfd584d.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/e1119579.png", self.location).href,
            Teen1v2: new URL("main/pp7/everyday/assets/4b39e3b8.png", self.location).href,
            Teen1v3: new URL("main/pp7/everyday/assets/2bb9e69f.png", self.location).href,
            Teen2Passport: new URL("main/pp7/everyday/assets/7ef001e1.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/3824c8e6.png", self.location).href,
            Teen2v2: new URL("main/pp7/everyday/assets/17ba6639.png", self.location).href,
            Teen2v3: new URL("main/pp7/everyday/assets/aa87151f.png", self.location).href
        }
    }),
    $ie = _ie.extend({
        className: "passport",
        elements() {
            const t = this.model.get("playerInfo"),
                e = this.model.get("playerInfo").avatar.replace("v2", "").replace("v3", ""),
                n = new Date,
                i = new Date(new Date().setFullYear(new Date().getFullYear() + 10)),
                o = n.toLocaleString("en-gb", {
                    day: "numeric",
                    month: "short",
                    year: "numeric"
                }).toUpperCase().replace(",", ""),
                r = i.toLocaleString("en-gb", {
                    day: "numeric",
                    month: "short",
                    year: "numeric"
                }).toUpperCase().replace(",", "");
            return [{
                class: "devil",
                type: "img",
                key: t.avatar
            }, {
                class: "passport-container",
                type: "container",
                children: [{
                    class: "passport",
                    type: "img",
                    pos: [0, -400],
                    key: `${e}Passport`
                }, {
                    class: "data",
                    type: "div",
                    pos: [100, 758],
                    html: `
                    <p>DEVIL</p>
                    <p>${t.name}</p>
                    <p>DEVILLE, UNDERWORLD</p>
                    <p>${o}</p>
                    <p>${r}</p>
                `
                }]
            }, {
                class: "flash",
                type: "div",
                pos: [-5e3, -5e3],
                html: ""
            }]
        },
        onLoadComplete() {
            s.set(".e.flash", {
                opacity: 0
            }), s.set(".e.passport-container", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.devil", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.devil", {
                filter: "blur(4px)",
                autoRound: !1
            }).to(".e.devil", {
                filter: "blur(0px)",
                autoRound: !1
            }).to(".e.devil", {
                filter: "blur(10px)",
                autoRound: !1
            }).to(".e.devil", {
                filter: "blur(0px)",
                autoRound: !1
            });
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }, 5).set(".e.passport-container", {
                visibility: "visible"
            }).set(".e.devil", {
                visibility: "hidden"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, "+=0.15").to(".e.passport-container", {
                x: -180,
                y: 50,
                rotation: -6
            }).set(".e.devil", {
                visibility: "hidden"
            }, "+=3"), this.timeline.add(t, 0)
        }
    }),
    dt = E.extend({
        className: "instructions",
        holdTL: null,
        elementsFromImageKeys(t) {
            return [{
                class: "elements-container",
                type: "container",
                children: t.map((e, n) => ({
                    class: `step step-${n}`,
                    type: "img",
                    pos: [0, 0],
                    key: e
                }))
            }]
        },
        onLoadComplete() {
            this.resetToStep(this.model.get("currentStepIndex"))
        },
        resetToStep() {
            s.set(".e.step", {
                rotation: 0,
                x: 0,
                y: 0,
                opacity: 0
            }), s.set(`.e.step-${this.model.get("currentStepIndex")}`, {
                opacity: 1
            })
        },
        onTapDown() {
            const t = `.e.step-${this.model.get("currentStepIndex")}`;
            s.timeline().to(t, {
                scaleX: 1.2,
                scaleY: 1,
                duration: .1
            }).to(t, {
                scaleX: .9,
                scaleY: 1.1,
                duration: .1
            }), this.holdTL = s.timeline({
                ease: kt.easeNone,
                repeat: -1
            }).to(t, {
                x: 2,
                y: 2,
                duration: .1
            }).to(t, {
                x: -2,
                y: -2,
                duration: .1
            }).to(t, {
                x: -2,
                y: 0,
                duration: .1
            }).to(t, {
                x: 2,
                y: 2,
                duration: .1
            }).to(t, {
                x: 2,
                y: -2,
                duration: .1
            }).to(t, {
                x: -2,
                y: 2,
                duration: .1
            }).to(t, {
                x: -2,
                y: 2,
                duration: .1
            }).to(t, {
                x: 2,
                y: 2,
                duration: .1
            }).to(t, {
                x: 2,
                y: -2,
                duration: .1
            }).to(t, {
                x: 2,
                y: 2,
                duration: .1
            }).to(t, {
                x: 2,
                y: -2,
                duration: .1
            })
        },
        onTapUp() {
            s.to(`.e.step-${this.model.get("currentStepIndex")}`, {
                duration: .15,
                scale: 1,
                ease: kt.easeNone
            }), this.holdTL && (this.holdTL.pause(), this.holdTL = null)
        },
        onRotation(t) {
            s.set(`.e.step-${this.model.get("currentStepIndex")}`, {
                rotation: t
            })
        },
        onSwipe(t) {
            s.to(`.e.step-${this.model.get("currentStepIndex")}`, {
                duration: .15,
                opacity: 0,
                x: Math.cos(t) * 50,
                y: Math.sin(t) * 50,
                ease: kt.easeNone
            })
        }
    }),
    ese = dt.extend({
        imageManifest: {
            bike: new URL("main/pp7/everyday/assets/6e7800fa.png", self.location).href,
            nut: new URL("main/pp7/everyday/assets/02d4c333.png", self.location).href,
            pedal: new URL("main/pp7/everyday/assets/0788c9a8.png", self.location).href,
            wheel: new URL("main/pp7/everyday/assets/59daccb3.png", self.location).href,
            wheelTire: new URL("main/pp7/everyday/assets/2ad58998.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["pedal", "wheel", "nut", "wheel", "nut", "wheelTire", "bike"])
        }
    }),
    tse = dt.extend({
        imageManifest: {
            cheap: new URL("main/pp7/everyday/assets/334dea7a.png", self.location).href,
            expensive: new URL("main/pp7/everyday/assets/4d8fda76.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["expensive", "expensive", "expensive", "cheap"])
        }
    }),
    nse = dt.extend({
        imageManifest: {
            plane0: new URL("main/pp7/everyday/assets/64d069ac.png", self.location).href,
            plane1: new URL("main/pp7/everyday/assets/a827eb04.png", self.location).href,
            plane2: new URL("main/pp7/everyday/assets/879fe83b.png", self.location).href,
            plane3: new URL("main/pp7/everyday/assets/be6ebbf5.png", self.location).href,
            plane4: new URL("main/pp7/everyday/assets/7216b9f9.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["plane0", "plane1", "plane2", "plane3", "plane4"])
        }
    }),
    ise = dt.extend({
        imageManifest: {
            card0: new URL("main/pp7/everyday/assets/41f86b56.png", self.location).href,
            card1: new URL("main/pp7/everyday/assets/ca44a9f6.png", self.location).href,
            card2: new URL("main/pp7/everyday/assets/63161850.png", self.location).href,
            card3: new URL("main/pp7/everyday/assets/1cc7a039.png", self.location).href,
            card4: new URL("main/pp7/everyday/assets/bcb29a7a.png", self.location).href,
            card5: new URL("main/pp7/everyday/assets/40a3d6ef.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["card0", "card1", "card2", "card3", "card4", "card5"])
        }
    }),
    sse = dt.extend({
        imageManifest: {
            tie0: new URL("main/pp7/everyday/assets/bbb16e55.png", self.location).href,
            tie1: new URL("main/pp7/everyday/assets/a9011d47.png", self.location).href,
            tie2: new URL("main/pp7/everyday/assets/d0c41ce0.png", self.location).href,
            tie3: new URL("main/pp7/everyday/assets/772c3f76.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["tie0", "tie1", "tie2", "tie3"])
        }
    }),
    ose = dt.extend({
        imageManifest: {
            brimstone0: new URL("main/pp7/everyday/assets/d730b8ba.png", self.location).href,
            brimstone1: new URL("main/pp7/everyday/assets/4fdfdd4e.png", self.location).href,
            brimstone2: new URL("main/pp7/everyday/assets/8d83524e.png", self.location).href,
            brimstone3: new URL("main/pp7/everyday/assets/468a44ec.png", self.location).href,
            brimstone4: new URL("main/pp7/everyday/assets/8a900f58.png", self.location).href,
            brimstone5: new URL("main/pp7/everyday/assets/9ec2458c.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["brimstone0", "brimstone1", "brimstone2", "brimstone3", "brimstone4", "brimstone5"])
        }
    }),
    ase = dt.extend({
        imageManifest: {
            dim: new URL("main/pp7/everyday/assets/062626c4.png", self.location).href,
            bright: new URL("main/pp7/everyday/assets/fbd1ab59.png", self.location).href,
            brighter: new URL("main/pp7/everyday/assets/e73f868a.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["dim", "bright", "brighter"])
        }
    }),
    rse = dt.extend({
        imageManifest: {
            bike: new URL("main/pp7/everyday/assets/6e7800fa.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["bike", "bike", "bike", "bike", "bike"])
        }
    }),
    Vse = dt.extend({
        imageManifest: {
            post: new URL("main/pp7/everyday/assets/823e182d.png", self.location).href,
            empty: new URL("main/pp7/everyday/assets/9d4e54ab.png", self.location).href,
            seeds: new URL("main/pp7/everyday/assets/f6b9ebad.png", self.location).href,
            full: new URL("main/pp7/everyday/assets/8156df6d.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["post", "empty", "seeds", "full"])
        }
    }),
    lse = dt.extend({
        imageManifest: {
            arm: new URL("main/pp7/everyday/assets/4717b3e0.png", self.location).href,
            seat: new URL("main/pp7/everyday/assets/098d6ca7.png", self.location).href,
            screws: new URL("main/pp7/everyday/assets/2d32115f.png", self.location).href,
            wrench: new URL("main/pp7/everyday/assets/b435b437.png", self.location).href,
            chair: new URL("main/pp7/everyday/assets/e4bbf712.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["arm", "seat", "screws", "wrench", "chair"])
        }
    }),
    Ase = dt.extend({
        imageManifest: {
            bear: new URL("main/pp7/everyday/assets/71a09552.png", self.location).href,
            party: new URL("main/pp7/everyday/assets/a9c2e9a0.png", self.location).href,
            tea: new URL("main/pp7/everyday/assets/88b04b2f.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["party", "tea", "bear", "party"])
        }
    }),
    cse = dt.extend({
        imageManifest: {
            couch: new URL("main/pp7/everyday/assets/1f64a411.png", self.location).href,
            dance0: new URL("main/pp7/everyday/assets/31935c43.png", self.location).href,
            dance1: new URL("main/pp7/everyday/assets/d8e8734e.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["dance0", "dance1", "couch"])
        }
    }),
    dse = dt.extend({
        imageManifest: {
            wallet: new URL("main/pp7/everyday/assets/9b9d1016.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["wallet", "wallet", "wallet", "wallet"])
        }
    }),
    pse = dt.extend({
        imageManifest: {
            box0: new URL("main/pp7/everyday/assets/328a1797.png", self.location).href,
            box1: new URL("main/pp7/everyday/assets/354952a7.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["box0", "box1"])
        }
    }),
    hse = dt.extend({
        imageManifest: {
            boogy: new URL("main/pp7/everyday/assets/36d46eb7.png", self.location).href,
            dropIt: new URL("main/pp7/everyday/assets/671d091e.png", self.location).href,
            spin: new URL("main/pp7/everyday/assets/8bf59cce.png", self.location).href,
            watch: new URL("main/pp7/everyday/assets/9b5f9331.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["boogy", "dropIt", "spin", "watch"])
        }
    }),
    use = dt.extend({
        imageManifest: {
            stepRight: new URL("main/pp7/everyday/assets/0426c1bf.png", self.location).href,
            stepLeft: new URL("main/pp7/everyday/assets/44548847.png", self.location).href,
            handsOut: new URL("main/pp7/everyday/assets/ce0e2b7f.png", self.location).href,
            handsSassy: new URL("main/pp7/everyday/assets/844c5148.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["stepLeft", "stepRight", "handsOut", "handsSassy"])
        }
    }),
    mse = dt.extend({
        imageManifest: {
            button: new URL("main/pp7/everyday/assets/dfec6880.png", self.location).href,
            hole: new URL("main/pp7/everyday/assets/a46f3f4b.png", self.location).href,
            handIn: new URL("main/pp7/everyday/assets/12c8f0ce.png", self.location).href,
            handOut: new URL("main/pp7/everyday/assets/5f034b14.png", self.location).href,
            trash: new URL("main/pp7/everyday/assets/dfe5fc71.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["button", "hole", "handIn", "handOut", "trash"])
        }
    }),
    fse = dt.extend({
        imageManifest: {
            fire: new URL("main/pp7/everyday/assets/27241df0.png", self.location).href,
            iron: new URL("main/pp7/everyday/assets/e482b6da.png", self.location).href,
            ironing: new URL("main/pp7/everyday/assets/da1dfb1c.png", self.location).href,
            smoke: new URL("main/pp7/everyday/assets/5b619cc5.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["iron", "ironing", "ironing", "smoke", "fire"])
        }
    }),
    qse = dt.extend({
        imageManifest: {
            pose0: new URL("main/pp7/everyday/assets/ba86bfbd.png", self.location).href,
            pose1: new URL("main/pp7/everyday/assets/3236342a.png", self.location).href,
            pose2: new URL("main/pp7/everyday/assets/66ad65be.png", self.location).href,
            hold: new URL("main/pp7/everyday/assets/fd83c846.png", self.location).href,
            painting: new URL("main/pp7/everyday/assets/4ee563c6.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["pose0", "pose1", "pose2", "hold", "painting"])
        }
    }),
    gse = dt.extend({
        imageManifest: {
            mix: new URL("main/pp7/everyday/assets/04ef9934.png", self.location).href,
            explosion: new URL("main/pp7/everyday/assets/1bdd4f3d.png", self.location).href,
            mess: new URL("main/pp7/everyday/assets/04ef9934.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["mix", "explosion", "mess"])
        }
    }),
    yse = dt.extend({
        imageManifest: {
            pantsOn: new URL("main/pp7/everyday/assets/eaaf273e.png", self.location).href,
            PantsOff: new URL("main/pp7/everyday/assets/c8afd5ef.png", self.location).href,
            montage: new URL("main/pp7/everyday/assets/428250ba.png", self.location).href,
            bow: new URL("main/pp7/everyday/assets/2df7f743.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["pantsOn", "PantsOff", "montage", "bow"])
        }
    }),
    bse = dt.extend({
        imageManifest: {
            arms: new URL("main/pp7/everyday/assets/5b9320e6.png", self.location).href,
            bigFinish: new URL("main/pp7/everyday/assets/842a5466.png", self.location).href,
            handstand: new URL("main/pp7/everyday/assets/af734f93.png", self.location).href,
            legs: new URL("main/pp7/everyday/assets/cc2f9850.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["arms", "handstand", "legs", "bigFinish"])
        }
    }),
    vse = dt.extend({
        imageManifest: {
            mic: new URL("main/pp7/everyday/assets/3cc1b088.png", self.location).href,
            harmony: new URL("main/pp7/everyday/assets/438a0663.png", self.location).href,
            cowbell: new URL("main/pp7/everyday/assets/f1c8a94d.png", self.location).href,
            stand: new URL("main/pp7/everyday/assets/3bc0b79c.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["mic", "harmony", "cowbell", "stand"])
        }
    }),
    wse = dt.extend({
        imageManifest: {
            food: new URL("main/pp7/everyday/assets/cf307ae3.png", self.location).href,
            souvenirs: new URL("main/pp7/everyday/assets/b71d6e00.png", self.location).href,
            cheese: new URL("main/pp7/everyday/assets/63de8b29.png", self.location).href,
            scribble: new URL("main/pp7/everyday/assets/7b300840.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["food", "souvenirs", "cheese", "scribble"])
        }
    }),
    xse = dt.extend({
        imageManifest: {
            undies: new URL("main/pp7/everyday/assets/0d15ac83.png", self.location).href,
            shirt: new URL("main/pp7/everyday/assets/764a1c33.png", self.location).href,
            socks: new URL("main/pp7/everyday/assets/b7bbe8ab.png", self.location).href,
            suitcase: new URL("main/pp7/everyday/assets/0fe93de2.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["undies", "shirt", "socks", "suitcase"])
        }
    }),
    kse = dt.extend({
        imageManifest: {
            bus: new URL("main/pp7/everyday/assets/40778911.png", self.location).href,
            ticket: new URL("main/pp7/everyday/assets/3fec5144.png", self.location).href,
            question: new URL("main/pp7/everyday/assets/fbd96cfc.png", self.location).href,
            shirt: new URL("main/pp7/everyday/assets/dbbe6e0c.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["bus", "ticket", "question", "shirt"])
        }
    }),
    Cse = dt.extend({
        imageManifest: {
            neutral: new URL("main/pp7/everyday/assets/ec37b476.png", self.location).href,
            pool: new URL("main/pp7/everyday/assets/c9b845f2.png", self.location).href,
            card: new URL("main/pp7/everyday/assets/5f5a8a57.png", self.location).href,
            wrench: new URL("main/pp7/everyday/assets/c0bc40a9.png", self.location).href,
            purchase: new URL("main/pp7/everyday/assets/e66a7185.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["neutral", "pool", "card", "wrench", "purchase"])
        }
    }),
    Rse = dt.extend({
        imageManifest: {
            plain: new URL("main/pp7/everyday/assets/c8b9b695.png", self.location).href,
            xs: new URL("main/pp7/everyday/assets/968d1ff6.png", self.location).href,
            arrows: new URL("main/pp7/everyday/assets/c6e09535.png", self.location).href,
            corrected: new URL("main/pp7/everyday/assets/9000e9fe.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["plain", "xs", "arrows", "corrected"])
        }
    }),
    Dse = dt.extend({
        imageManifest: {
            board: new URL("main/pp7/everyday/assets/615f4418.png", self.location).href,
            saw: new URL("main/pp7/everyday/assets/80ee6dac.png", self.location).href,
            stuck: new URL("main/pp7/everyday/assets/522c965f.png", self.location).href,
            half: new URL("main/pp7/everyday/assets/87e1d23a.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["board", "saw", "stuck", "half"])
        }
    }),
    Sse = dt.extend({
        imageManifest: {
            blank: new URL("main/pp7/everyday/assets/67bf666d.png", self.location).href,
            graph: new URL("main/pp7/everyday/assets/7cc8160e.png", self.location).href,
            music: new URL("main/pp7/everyday/assets/8981297c.png", self.location).href,
            animation: new URL("main/pp7/everyday/assets/11fd80cc.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["blank", "graph", "music", "animation"])
        }
    }),
    Tse = dt.extend({
        imageManifest: {
            marker: new URL("main/pp7/everyday/assets/23d7310b.png", self.location).href,
            speech: new URL("main/pp7/everyday/assets/431645bb.png", self.location).href,
            heart: new URL("main/pp7/everyday/assets/6e690f98.png", self.location).href,
            toilet: new URL("main/pp7/everyday/assets/0f98a404.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["marker", "speech", "heart", "toilet"])
        }
    }),
    Ese = dt.extend({
        imageManifest: {
            fire: new URL("main/pp7/everyday/assets/ebcc6f1e.png", self.location).href,
            down: new URL("main/pp7/everyday/assets/c7d16f45.png", self.location).href,
            brace: new URL("main/pp7/everyday/assets/dd8a5afb.png", self.location).href,
            sigh: new URL("main/pp7/everyday/assets/a88e9a25.png", self.location).href,
            drops: new URL("main/pp7/everyday/assets/dd734158.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["fire", "down", "brace", "sigh", "drops"])
        }
    }),
    Lse = dt.extend({
        imageManifest: {
            tarp: new URL("main/pp7/everyday/assets/ee5477b4.png", self.location).href,
            light: new URL("main/pp7/everyday/assets/ee2e4cbd.png", self.location).href,
            projector: new URL("main/pp7/everyday/assets/9ae0244b.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["tarp", "light", "projector"])
        }
    }),
    Bse = dt.extend({
        imageManifest: {
            pulley: new URL("main/pp7/everyday/assets/72513ecf.png", self.location).href,
            hammer: new URL("main/pp7/everyday/assets/6dbc084e.png", self.location).href,
            net: new URL("main/pp7/everyday/assets/b11b98cf.png", self.location).href,
            claw: new URL("main/pp7/everyday/assets/be23f4c3.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["pulley", "hammer", "net", "claw"])
        }
    }),
    Mse = dt.extend({
        imageManifest: {
            hedge: new URL("main/pp7/everyday/assets/47ce70ff.png", self.location).href,
            elephant: new URL("main/pp7/everyday/assets/7757a3ce.png", self.location).href,
            giraffe: new URL("main/pp7/everyday/assets/8ca032df.png", self.location).href,
            ivy: new URL("main/pp7/everyday/assets/a7c4af74.png", self.location).href,
            marker: new URL("main/pp7/everyday/assets/1ad3f89a.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["hedge", "elephant", "giraffe", "ivy", "marker"])
        }
    }),
    Ose = dt.extend({
        imageManifest: {
            shovel: new URL("main/pp7/everyday/assets/bcfb0139.png", self.location).href,
            seeds: new URL("main/pp7/everyday/assets/5955f173.png", self.location).href,
            sprout: new URL("main/pp7/everyday/assets/23b3bc6e.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["shovel", "seeds", "shovel", "sprout"])
        }
    }),
    Ise = dt.extend({
        imageManifest: {
            cousin: new URL("main/pp7/everyday/assets/7375d967.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/08a9c05c.png", self.location).href,
            roof: new URL("main/pp7/everyday/assets/0e71701f.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["roof", "cousin", "cousin", "ladder"])
        }
    }),
    Pse = dt.extend({
        imageManifest: {
            couch: new URL("main/pp7/everyday/assets/7766c645.png", self.location).href,
            baseboard: new URL("main/pp7/everyday/assets/a0dc021c.png", self.location).href,
            knob: new URL("main/pp7/everyday/assets/51de4afe.png", self.location).href,
            furniture: new URL("main/pp7/everyday/assets/c12152a9.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["couch", "baseboard", "knob", "furniture"])
        }
    }),
    Use = dt.extend({
        imageManifest: {
            curtains: new URL("main/pp7/everyday/assets/914c6b5b.png", self.location).href,
            future: new URL("main/pp7/everyday/assets/24f228a0.png", self.location).href,
            couch0: new URL("main/pp7/everyday/assets/1f652c32.png", self.location).href,
            couch1: new URL("main/pp7/everyday/assets/66dc1115.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["curtains", "future", "couch0", "couch1"])
        }
    }),
    Fse = dt.extend({
        imageManifest: {
            tea: new URL("main/pp7/everyday/assets/28d6b47f.png", self.location).href,
            fridge: new URL("main/pp7/everyday/assets/602454f5.png", self.location).href,
            ladder: new URL("main/pp7/everyday/assets/b24f037c.png", self.location).href,
            fall: new URL("main/pp7/everyday/assets/3533c70e.png", self.location).href,
            spill: new URL("main/pp7/everyday/assets/192a31fc.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["tea", "fridge", "ladder", "fall", "spill"])
        }
    }),
    jse = dt.extend({
        imageManifest: {
            tire: new URL("main/pp7/everyday/assets/b8207da5.png", self.location).href,
            oil: new URL("main/pp7/everyday/assets/938b914d.png", self.location).href,
            hose: new URL("main/pp7/everyday/assets/087b3d14.png", self.location).href,
            nut: new URL("main/pp7/everyday/assets/184bbe15.png", self.location).href,
            car: new URL("main/pp7/everyday/assets/da5698e8.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["tire", "oil", "hose", "nut", "car"])
        }
    }),
    Qse = dt.extend({
        imageManifest: {
            toothpaste: new URL("main/pp7/everyday/assets/9e7fe6bd.png", self.location).href,
            scratch: new URL("main/pp7/everyday/assets/6933b955.png", self.location).href,
            hose: new URL("main/pp7/everyday/assets/009a8e99.png", self.location).href,
            worse: new URL("main/pp7/everyday/assets/cf724378.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["toothpaste", "scratch", "hose", "worse"])
        }
    }),
    zse = dt.extend({
        imageManifest: {
            school: new URL("main/pp7/everyday/assets/edfa6bc7.png", self.location).href,
            dontDrive: new URL("main/pp7/everyday/assets/ec2fe652.png", self.location).href,
            dontKiss: new URL("main/pp7/everyday/assets/df336243.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["school", "dontDrive", "dontKiss"])
        }
    }),
    Hse = dt.extend({
        imageManifest: {
            folded: new URL("main/pp7/everyday/assets/dc1bb9f5.png", self.location).href,
            pin: new URL("main/pp7/everyday/assets/51ab3387.png", self.location).href,
            knob: new URL("main/pp7/everyday/assets/a5c413b6.png", self.location).href,
            table: new URL("main/pp7/everyday/assets/c1d59244.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["folded", "pin", "knob", "table"])
        }
    }),
    Nse = dt.extend({
        imageManifest: {
            bottom: new URL("main/pp7/everyday/assets/a13310b5.png", self.location).href,
            burger: new URL("main/pp7/everyday/assets/76a19238.png", self.location).href,
            sloppy: new URL("main/pp7/everyday/assets/5248a3fc.png", self.location).href,
            neighbor: new URL("main/pp7/everyday/assets/070405e5.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["bottom", "burger", "sloppy", "neighbor"])
        }
    }),
    Gse = dt.extend({
        imageManifest: {
            removeBag: new URL("main/pp7/everyday/assets/44e3bc61.png", self.location).href,
            bypassHole: new URL("main/pp7/everyday/assets/ae239726.png", self.location).href,
            beltTape: new URL("main/pp7/everyday/assets/39bf2d3b.png", self.location).href,
            hose: new URL("main/pp7/everyday/assets/6de7395b.png", self.location).href,
            towel: new URL("main/pp7/everyday/assets/a012be2b.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["removeBag", "bypassHole", "beltTape", "hose", "towel"])
        }
    }),
    Xse = dt.extend({
        imageManifest: {
            box: new URL("main/pp7/everyday/assets/63c29ffe.png", self.location).href,
            assemble: new URL("main/pp7/everyday/assets/11a31237.png", self.location).href,
            wheel: new URL("main/pp7/everyday/assets/ddd1986e.png", self.location).href,
            trap: new URL("main/pp7/everyday/assets/08a01c25.png", self.location).href
        },
        elements() {
            return this.elementsFromImageKeys(["box", "assemble", "wheel", "trap"])
        }
    });
s.registerPlugin(fo);
const Yse = E.extend({
        stepDuration: .15,
        className: "fire-emergency",
        shouldWiggle: !1,
        isFullScreen: !0,
        imageManifest: {
            flame: new URL("main/pp7/everyday/assets/510414a3.png", self.location).href
        },
        elements: [{
            class: "background",
            type: "div",
            pos: [-5e3, -5e3],
            html: ""
        }, {
            class: "glow",
            type: "div",
            html: ""
        }, ...a.elementsFromImages(["flame", "flame flame-0"], ["flame", "flame flame-1"], ["flame", "flame flame-2"], ["flame", "flame flame-3"], ["flame", "flame flame-4"], ["flame", "flame flame-5"], ["flame", "flame flame-6"], ["flame", "flame flame-7"], ["flame", "flame flame-8"], ["flame", "flame flame-9"])],
        onLoadComplete() {
            s.to(".e.background", {
                opacity: .9
            })
        },
        initializeTimeline() {
            a.addInfiniteWiggle(["flame-0", "flame-1", "flame-2", "flame-3", "flame-4", "flame-5", "flame-6", "flame-7", "flame-8", "flame-9"]), s.set(".e.glow", {
                left: "-50%",
                top: "7%"
            }), s.set(".e.flame-0", {
                left: "-50%",
                top: "14%"
            }), s.set(".e.flame-1", {
                left: "-50%",
                top: "21%",
                scaleX: -1
            }), s.set(".e.flame-2", {
                left: "-50%",
                top: "28%"
            }), s.set(".e.flame-3", {
                left: "-50%",
                top: "35%",
                scaleX: -1
            }), s.set(".e.flame-4", {
                left: "-50%",
                top: "42%"
            }), s.set(".e.flame-5", {
                left: "-50%",
                top: "49%",
                scaleX: -1
            }), s.set(".e.flame-6", {
                left: "-50%",
                top: "56%"
            }), s.set(".e.flame-7", {
                left: "-50%",
                top: "63%",
                scaleX: -1
            }), s.set(".e.flame-8", {
                left: "-50%",
                top: "70%"
            }), s.set(".e.flame-9", {
                left: "-50%",
                top: "77%",
                scaleX: -1
            }), this.timeline.to(".e.flame-0", {
                top: "21%",
                duration: 1
            }).set(".e.flame-0", {
                visibility: "hidden"
            }).to(".e.flame-1", {
                top: "28%",
                duration: 1
            }).set(".e.flame-1", {
                visibility: "hidden"
            }).to(".e.flame-2", {
                top: "35%",
                duration: 1
            }).set(".e.flame-2", {
                visibility: "hidden"
            }).to(".e.flame-3", {
                top: "42%",
                duration: 1
            }).set(".e.flame-3", {
                visibility: "hidden"
            }).to(".e.flame-4", {
                top: "49%",
                duration: 1
            }).set(".e.flame-4", {
                visibility: "hidden"
            }).to(".e.flame-5", {
                top: "56%",
                duration: 1
            }).set(".e.flame-5", {
                visibility: "hidden"
            }).to(".e.flame-6", {
                top: "63%",
                duration: 1
            }).set(".e.flame-6", {
                visibility: "hidden"
            }).to(".e.flame-7", {
                top: "70%",
                duration: 1
            }).set(".e.flame-7", {
                visibility: "hidden"
            }).to(".e.flame-8", {
                top: "77%",
                duration: 1
            }).set(".e.flame-8", {
                visibility: "hidden"
            }).to(".e.flame-9", {
                top: "84%",
                duration: 1
            }).set(".e.flame-9", {
                visibility: "hidden"
            }).to(".e.glow", {
                top: "77%",
                duration: 10,
                ease: "none"
            }, 0)
        }
    }),
    Kse = E.extend({
        stepDuration: .15,
        className: "power-emergency",
        shouldWiggle: !1,
        imageManifest: {
            crank: new URL("main/pp7/everyday/assets/0a7cc186.png", self.location).href,
            shadow: new URL("main/pp7/everyday/assets/1709b498.png", self.location).href
        },
        elements: [{
            class: "panel",
            type: "div",
            pos: [50, 400],
            html: ""
        }, {
            class: "background",
            type: "div",
            pos: [-5e3, -5e3],
            html: ""
        }, {
            class: "shadow",
            type: "img",
            pos: [535, 215],
            key: "shadow"
        }, {
            class: "light light-0",
            type: "div",
            pos: [90, 440],
            html: ""
        }, {
            class: "light light-1",
            type: "div",
            pos: [174, 440],
            html: ""
        }, {
            class: "light light-2",
            type: "div",
            pos: [258, 440],
            html: ""
        }, {
            class: "light light-3",
            type: "div",
            pos: [342, 440],
            html: ""
        }, {
            class: "light light-4",
            type: "div",
            pos: [426, 440],
            html: ""
        }, {
            class: "crank",
            type: "img",
            pos: [500, 250],
            key: "crank"
        }],
        onLoadComplete() {
            s.to(".e.background", {
                opacity: 1
            })
        },
        initializeTimeline() {
            const t = s.timeline().to([".e.crank", ".e.shadow"], {
                    rotate: 1800,
                    duration: 1,
                    ease: "none"
                }),
                e = s.timeline().call(() => {
                    this.$el.find(".light-4").addClass("charging")
                }, null, 0).call(() => {
                    this.$el.find(".light-4").removeClass("charging").addClass("on"), this.$el.find(".light-3").addClass("charging")
                }, null, .2).call(() => {
                    this.$el.find(".light-3").removeClass("charging").addClass("on"), this.$el.find(".light-2").addClass("charging")
                }, null, .4).call(() => {
                    this.$el.find(".light-2").removeClass("charging").addClass("on"), this.$el.find(".light-1").addClass("charging")
                }, null, .6).call(() => {
                    this.$el.find(".light-1").removeClass("charging").addClass("on"), this.$el.find(".light-0").addClass("charging")
                }, null, .8).call(() => {
                    this.$el.find(".light-0").removeClass("charging").addClass("on")
                }, null, 1),
                n = s.timeline().to([".e.background", ".e.shadow"], {
                    opacity: .9,
                    duration: .2
                }).to([".e.background", ".e.shadow"], {
                    opacity: 0,
                    duration: .1
                });
            this.timeline.add(t), this.timeline.add(e, 0), this.timeline.add(n, .7)
        },
        onDiscreteProgress() {}
    }),
    Wse = E.extend({
        stepDuration: .15,
        className: "flood-emergency",
        shouldWiggle: !1,
        isFullScreen: !0,
        imageManifest: {
            broom: new URL("main/pp7/everyday/assets/2cf28c40.png", self.location).href,
            cake: new URL("main/pp7/everyday/assets/8c503dd2.png", self.location).href,
            cat: new URL("main/pp7/everyday/assets/7bedffa4.png", self.location).href,
            chair: new URL("main/pp7/everyday/assets/7d87c0d5.png", self.location).href,
            corn: new URL("main/pp7/everyday/assets/6c218032.png", self.location).href,
            fish: new URL("main/pp7/everyday/assets/1c9a6295.png", self.location).href,
            game: new URL("main/pp7/everyday/assets/b2548d3c.png", self.location).href,
            glue: new URL("main/pp7/everyday/assets/b79c9aa4.png", self.location).href,
            hotdog: new URL("main/pp7/everyday/assets/83ec77b1.png", self.location).href,
            laptop: new URL("main/pp7/everyday/assets/7b3b294c.png", self.location).href,
            microwave: new URL("main/pp7/everyday/assets/ddab7640.png", self.location).href,
            milk: new URL("main/pp7/everyday/assets/66e16936.png", self.location).href,
            phone: new URL("main/pp7/everyday/assets/4abe6af7.png", self.location).href,
            remote: new URL("main/pp7/everyday/assets/9992d31a.png", self.location).href,
            spatula: new URL("main/pp7/everyday/assets/86ccfc8b.png", self.location).href,
            toast: new URL("main/pp7/everyday/assets/a509d26c.png", self.location).href,
            water: new URL("main/pp7/everyday/assets/3f3deef2.png", self.location).href
        },
        elements() {
            const t = [{
                class: "background",
                type: "div",
                pos: [-5e3, -5e3],
                html: ""
            }, {
                class: "floater",
                type: "img",
                key: X.exports.sample(["cake", "chair", "cat", "laptop", "microwave"])
            }];
            for (let e = 0; e <= 3; e++) t.push({
                class: `bobber bobber-${e}`,
                type: "img",
                key: X.exports.sample(["broom", "corn", "fish", "game", "glue", "hotdog", "milk", "phone", "remote", "toast", "spatula"])
            });
            return t.push({
                class: "water",
                type: "div",
                html: ""
            }), t
        },
        onLoadComplete() {
            s.set(".e.water", {
                top: "50%",
                left: "-100%",
                width: "300%",
                height: "100%"
            }), s.to(".e.water", {
                top: "0%",
                duration: .5,
                ease: "none"
            }), s.set(".e.floater", {
                top: "-13%",
                left: "100%",
                width: 100,
                height: 100
            }), s.to(".e.floater", {
                left: "-20%",
                duration: 15,
                yoyo: !0,
                repeat: -1,
                ease: "power2.inOut"
            }), s.to(".e.background", {
                opacity: .9
            });
            for (let t = 0; t <= 3; t++) s.set(`.e.bobber-${t}`, {
                top: `${t*10+30}%`,
                left: "80%",
                rotate: X.exports.random(0, 360),
                width: 75,
                height: 75
            }), s.to(`.e.bobber-${t}`, {
                left: "0%",
                duration: X.exports.random(10, 15),
                yoyo: !0,
                repeat: -1,
                ease: "power2.inOut"
            }).progress(t * 40 / 100), a.addInfiniteWiggle(`bobber-${t}`)
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.floater", {
                top: "87%",
                ease: "none"
            }).to(".e.water", {
                top: "100%",
                ease: "none"
            }, 0);
            this.timeline.add(t);
            for (let e = 0; e <= 3; e++) {
                const n = s.timeline().to(`.e.bobber-${e}`, {
                    top: "100%",
                    ease: "none"
                });
                this.timeline.add(n, 0)
            }
        }
    }),
    Jse = E.extend({
        stepDuration: .15,
        className: "termite-emergency",
        shouldWiggle: !1,
        isFullScreen: !0,
        width: 0,
        height: 0,
        deadCount: 0,
        elements() {
            const t = [{
                class: "background",
                type: "div",
                pos: [-5e3, -5e3],
                html: ""
            }];
            for (let e = 0; e < 40; e++) t.push({
                class: `termite termite-${e}`,
                type: "div",
                pos: [0, 0],
                html: ""
            });
            return t.push({
                class: "smoke",
                type: "div",
                pos: [0, 0],
                html: ""
            }), t
        },
        onLoadComplete() {
            this.width = this.el.clientWidth, this.height = this.el.clientHeight;
            for (let t = 0; t < 40; t++) {
                const e = X.exports.random(0, this.width - 80),
                    n = X.exports.random(70, this.height - 92);
                s.set(`.e.termite-${t}`, {
                    x: e,
                    y: n
                });
                const i = [{
                    x: e,
                    y: n
                }, {
                    x: X.exports.random(0, this.width - 80),
                    y: X.exports.random(70, this.height - 92)
                }, {
                    x: X.exports.random(0, this.width - 80),
                    y: X.exports.random(70, this.height - 92)
                }, {
                    x: X.exports.random(0, this.width - 80),
                    y: X.exports.random(70, this.height - 92)
                }, {
                    x: e,
                    y: n
                }];
                s.to(`.e.termite-${t}`, {
                    motionPath: {
                        path: i,
                        curviness: 2,
                        autoRotate: !0
                    },
                    runBackwards: !0,
                    duration: X.exports.random(7, 12),
                    ease: "none",
                    repeat: -1
                })
            }
            s.set(".e.smoke", {
                top: "100%",
                left: "-100%"
            }), s.to(".e.background", {
                opacity: .9
            })
        },
        onDiscreteProgress(t) {
            const e = Math.ceil(40 / (100 / t));
            for (let n = 0; n < 40; n++) {
                if (n < this.deadCount || n > e) continue;
                const i = document.getElementsByClassName(`termite-${n}`);
                if (!i || !i.length) continue;
                const o = i[0];
                !o.classList || (o.classList.add("dead"), s.killTweensOf(`.e.termite-${n}`), s.set(`.e.termite-${n}`, {
                    scaleY: -1
                }), s.to(`.e.termite-${n}`, {
                    y: this.height + 50,
                    delay: .5
                }))
            }
            s.to(".e.smoke", {
                top: `${100-t}%`,
                duration: .15,
                ease: "none"
            }), s.timeline().to(".e.smoke", {
                opacity: .9,
                duration: .1,
                ease: "none"
            }).to(".e.smoke", {
                opacity: .75,
                duration: .1,
                ease: "none"
            }), this.deadCount = e
        }
    }),
    Zse = E.extend({
        stepDuration: .15,
        className: "door-emergency",
        shouldWiggle: !1,
        imageManifest: {
            frame: new URL("main/pp7/everyday/assets/f385028b.png", self.location).href,
            door: new URL("main/pp7/everyday/assets/e68cd5de.png", self.location).href
        },
        elements: [{
            class: "house-container",
            type: "container",
            children: [{
                class: "house",
                type: "div",
                pos: [-5075, -5e3],
                html: ""
            }, {
                class: "grass",
                type: "div",
                pos: [925, -5e3],
                html: ""
            }, {
                class: "inside",
                type: "div",
                pos: [130, 280],
                html: ""
            }, {
                class: "door",
                type: "img",
                key: "door"
            }, {
                class: "cracks",
                type: "div",
                pos: [136, 276],
                html: ""
            }, {
                class: "frame",
                type: "img",
                pos: [0, -1e3],
                key: "frame"
            }]
        }],
        initializeTimeline() {
            const t = s.timeline().to(".e.cracks", {
                backgroundPositionX: "100%",
                ease: "steps(11)"
            });
            this.timeline.add(t)
        },
        onDiscreteProgress(t) {
            s.timeline().to(".e.house-container", {
                x: "random(-10, 10)",
                y: "random(-10, 10)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-8, 8)",
                y: "random(-8, 8)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-6, 6)",
                y: "random(-6, 6)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-4, 4)",
                y: "random(-4, 4)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-3, 3)",
                y: "random(-3, 3)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-2, 2)",
                y: "random(-2, 2)",
                duration: .05
            }).to(".e.house-container", {
                x: "random(-1, 1)",
                y: "random(-1, 1)",
                duration: .05
            }).to(".e.house-container", {
                x: 0,
                y: 0,
                duration: .05
            }), t >= 99 && s.to([".e.cracks", ".e.door"], {
                scale: .5,
                opacity: 0,
                duration: .1
            })
        }
    }),
    _se = E.extend({
        imageManifest: {
            chair1: new URL("main/pp7/everyday/assets/6110896a.png", self.location).href,
            chair0: new URL("main/pp7/everyday/assets/a0ee29eb.png", self.location).href,
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href
        },
        sprites: {
            chair0: {
                key: "chair0",
                images: {
                    chair2: [10, 10, 709, 932, 36, 159],
                    chair1: [729, 10, 709, 932, 36, 159],
                    chair0: [10, 952, 709, 829, 139, 159]
                }
            },
            chair1: {
                key: "chair1",
                images: {
                    chair6: [10, 10, 719, 932, 36, 159],
                    chair5: [739, 10, 709, 932, 36, 159],
                    chair4: [10, 952, 709, 932, 36, 159],
                    chair3: [729, 952, 709, 932, 36, 159]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: [...a.elementsFromSprite("chair0", ["chair0", "chair1", "chair2"]), ...a.elementsFromSprite("chair1", ["chair3", "chair4", "chair5", "chair6"])]
        }, ...a.elementsFromImages(["paw", null, [700, 0]])],
        onLoadComplete() {
            s.set(".e.chair1, .e.chair2, .e.chair3, .e.chair4, .e.chair5, .e.chair6", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            const e = Math.floor(t / 100 * 7);
            s.timeline({
                delay: .3
            }).set(".e.chair0", {
                visibility: e === 0 ? "visible" : "hidden"
            }).set(".e.chair1", {
                visibility: e === 1 ? "visible" : "hidden"
            }).set(".e.chair2", {
                visibility: e === 2 ? "visible" : "hidden"
            }).set(".e.chair3", {
                visibility: e === 3 ? "visible" : "hidden"
            }).set(".e.chair4", {
                visibility: e === 4 ? "visible" : "hidden"
            }).set(".e.chair5", {
                visibility: e === 5 ? "visible" : "hidden"
            }).set(".e.chair6", {
                visibility: e >= 6 ? "visible" : "hidden"
            }).to(".e.c", {
                scale: .95,
                duration: .15
            }).to(".e.c", {
                scale: 1,
                duration: .15
            }), s.timeline().to(".e.paw", {
                y: -250,
                scale: 1.3,
                duration: .15
            }).to(".e.paw", {
                y: -500,
                scale: 1,
                duration: .15
            }).to(".e.paw", {
                y: 0,
                duration: .15
            })
        }
    }),
    $se = E.extend({
        imageManifest: {
            claws: new URL("main/pp7/everyday/assets/f1fad415.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "claws",
                images: {
                    claw0: [10, 1648, 129, 177, 476, 305],
                    claw1: [10, 1447, 111, 191, 373, 448],
                    claw2: [131, 1447, 111, 168, 480, 589],
                    paw: [10, 10, 504, 1427, 373, 248]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["claw0", "claw1", "claw2", "paw"])
        }],
        onLoadComplete() {
            s.set(".e.c", {
                scale: 1.2
            })
        },
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: "none",
                    repeat: t / 1e3
                }).to(".e.c", {
                    x: 5,
                    y: 5
                }).to(".e.c", {
                    x: -5,
                    y: -5
                }).to(".e.c", {
                    x: -5,
                    y: 5
                }).to(".e.c", {
                    x: 5,
                    y: 5
                }).to(".e.c", {
                    x: 5,
                    y: -5
                }).to(".e.c", {
                    x: -5,
                    y: 5
                }).to(".e.c", {
                    x: -5,
                    y: 5
                }).to(".e.c", {
                    x: 5,
                    y: 5
                }).to(".e.c", {
                    x: 5,
                    y: -5
                }).to(".e.c", {
                    x: 5,
                    y: 5
                }).to(".e.c", {
                    x: 5,
                    y: 5
                });
            e.name = "image", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.c", {
                scale: 1,
                duration: .25
            }), s.to(".e.claw0", {
                x: -70,
                y: -130,
                duration: .25
            }), s.to(".e.claw1", {
                x: -1,
                y: -180,
                duration: .25
            }), s.to(".e.claw2", {
                x: 73,
                y: -110,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.c", {
                scale: 1.2,
                duration: .25
            }), s.to(".e.claw0", {
                x: 0,
                y: 0,
                duration: .25
            }), s.to(".e.claw1", {
                x: 0,
                y: 0,
                duration: .25
            }), s.to(".e.claw2", {
                x: 0,
                y: 0,
                duration: .25
            })
        }
    }),
    eoe = E.extend({
        stepDuration: .5,
        imageManifest: {
            nails: new URL("main/pp7/everyday/assets/f99c4457.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "nails",
                images: {
                    scissors0: [866, 10, 216, 302, 349, 432],
                    scissors1: [866, 322, 216, 302, 349, 354],
                    nails0: [267, 1158, 60, 38, 431, 889],
                    paw0: [1092, 10, 208, 254, 412, 693],
                    nails1: [84, 1231, 83, 52, 423, 866],
                    paw1: [1092, 274, 208, 254, 412, 693],
                    nails2: [10, 1231, 64, 53, 552, 837],
                    paw2: [866, 898, 183, 254, 412, 693],
                    nails3: [1092, 538, 90, 79, 526, 811],
                    paw3: [10, 967, 183, 254, 412, 693],
                    nails4: [203, 1158, 54, 90, 576, 695],
                    paw4: [203, 967, 183, 181, 412, 693],
                    paw: [866, 634, 256, 254, 412, 693],
                    nails: [10, 10, 846, 947, 27, 3]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["nails", "paw", "paw4", "nails4", "paw3", "nails3", "paw2", "nails2", "paw1", "nails1", "paw0", "nails0"])
        }],
        onLoadComplete() {
            s.set(".e.paw4, .e.nails4", {
                visibility: "hidden"
            }), s.set(".e.paw3, .e.nails3", {
                visibility: "hidden"
            }), s.set(".e.paw2, .e.nails2", {
                visibility: "hidden"
            }), s.set(".e.paw1, .e.nails1", {
                visibility: "hidden"
            }), s.set(".e.paw0, .e.nails0", {
                visibility: "hidden"
            })
        },
        initializeTimeline() {
            this.timeline.set(".e.paw", {
                visibility: "hidden"
            }, 0).set(".e.paw0", {
                visibility: "visible"
            }, 0).set(".e.nails0", {
                visibility: "visible"
            }, 0).to(".e.nails0", {
                x: 50,
                y: 300,
                rotate: 200
            }, 0).set(".e.paw0", {
                visibility: "hidden"
            }, 1).set(".e.paw1", {
                visibility: "visible"
            }, 1).set(".e.nails1", {
                visibility: "visible"
            }, 1).to(".e.nails1", {
                x: -100,
                y: 400,
                rotate: -200
            }, 1).set(".e.paw1", {
                visibility: "hidden"
            }, 2).set(".e.paw2", {
                visibility: "visible"
            }, 2).set(".e.nails2", {
                visibility: "visible"
            }, 2).to(".e.nails2", {
                x: -100,
                y: -300,
                rotate: 200
            }, 2).set(".e.paw2", {
                visibility: "hidden"
            }, 3).set(".e.paw3", {
                visibility: "visible"
            }, 3).set(".e.nails3", {
                visibility: "visible"
            }, 3).to(".e.nails3", {
                x: 50,
                y: 400,
                rotate: 200
            }, 3).set(".e.paw3", {
                visibility: "hidden"
            }, 4).set(".e.paw4", {
                visibility: "visible"
            }, 4).set(".e.nails4", {
                visibility: "visible"
            }, 4).to(".e.nails4", {
                x: -200,
                y: 300,
                rotate: -200
            }, 4)
        },
        onDiscreteProgress() {
            s.timeline().to(".e.c", {
                scale: .95,
                duration: .1
            }).to(".e.c", {
                scale: 1,
                duration: .1
            })
        }
    }),
    toe = E.extend({
        imageManifest: {
            door: new URL("main/pp7/everyday/assets/4744efdf.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "door",
                images: {
                    door2: [10, 10, 891, 843, 94, 47],
                    door1: [911, 10, 891, 843, 94, 47],
                    door0: [10, 863, 891, 843, 94, 47],
                    door: [911, 863, 891, 843, 94, 47]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["door", "door0", "door1", "door2"])
        }],
        onLoadComplete() {
            s.set(".e.door0", {
                visibility: "hidden"
            }), s.set(".e.door1", {
                visibility: "hidden"
            }), s.set(".e.door2", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            s.timeline().to(".e.c", {
                scale: .95,
                duration: .15
            }).to(".e.c", {
                scale: 1,
                duration: .15
            });
            let e = 0;
            t > 0 && t < 28 ? e = 1 : t > 33 && t < 66 ? e = 2 : t > 72 && (e = 3), s.set(".e.door0", {
                visibility: e === 1 ? "visible" : "hidden"
            }), s.set(".e.door1", {
                visibility: e === 2 ? "visible" : "hidden"
            }), s.set(".e.door2", {
                visibility: e === 3 ? "visible" : "hidden"
            }), s.set(".e.door", {
                visibility: e === 0 ? "visible" : "hidden"
            })
        }
    }),
    noe = E.extend({
        stepDuration: .45,
        imageManifest: {
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href,
            bugs: new URL("main/pp7/everyday/assets/27caaeb0.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "bugs",
                images: {
                    bug3: [402, 10, 458, 257, 377, 275],
                    bug2: [10, 325, 484, 194, 429, 262],
                    bug1: [504, 277, 316, 290, 361, 346],
                    bug0: [10, 10, 382, 305, 353, 313]
                }
            }
        },
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["bug0", "bug1", "bug2", "bug3"])
        }, ...a.elementsFromImages(["paw", null, [700, 0]])],
        onLoadComplete() {
            s.set(".e.bug1, .e.bug2, .e.bug3", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress() {
            const t = X.exports.random(0, 3),
                e = Math.random() < .5 ? 1 : -1;
            s.timeline().to(".e.paw", {
                y: -250,
                scale: 1.3,
                duration: .15
            }, 0).to(".e.c", {
                scale: .8,
                duration: .1
            }, .15).set(".e.bug0", {
                scaleX: e,
                visibility: t === 0 ? "visible" : "hidden"
            }, .2).set(".e.bug1", {
                scaleX: e,
                visibility: t === 1 ? "visible" : "hidden"
            }, .2).set(".e.bug2", {
                scaleX: e,
                visibility: t === 2 ? "visible" : "hidden"
            }, .2).set(".e.bug3", {
                scaleX: e,
                visibility: t === 3 ? "visible" : "hidden"
            }, .2).to(".e.c", {
                scale: 1,
                duration: .15,
                ease: "back.in(2)"
            }, .25).to(".e.paw", {
                y: -500,
                scale: 1,
                duration: .15
            }, .15).to(".e.paw", {
                y: 0,
                duration: .15
            }, .3)
        }
    }),
    ef = E.extend({
        imageManifest: {
            treat: new URL("main/pp7/everyday/assets/fe677fca.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "treat",
                images: {
                    treat: [664, 10, 320, 666, 167, 340],
                    heart: [10, 1312, 183, 184, 140, 402],
                    cat: [10, 661, 619, 641, 359, 189],
                    happy: [639, 686, 616, 641, 359, 192],
                    nom: [10, 10, 644, 641, 359, 178]
                }
            }
        }
    }),
    ioe = ef.extend({
        stepDuration: .25,
        elements: a.elementsFromSprite("sprite", ["happy", "treat"]),
        onLoadComplete() {
            s.set(".e.treat", {
                y: 100,
                rotate: 90
            }), s.set(".e.happy", {
                y: 20,
                scale: .9,
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.happy", {
                y: 0,
                scale: 1,
                opacity: 1
            }, 0).to(".e.treat", {
                y: -350,
                rotate: 0,
                scale: .4
            }, 0)
        }
    }),
    soe = ef.extend({
        stepDuration: .4,
        elements: a.elementsFromSprite("sprite", ["happy", "nom", "treat"]),
        onLoadComplete() {
            s.set(".e.treat", {
                y: -350,
                scale: .4
            }), s.set(".e.nom", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.treat", {
                y: 160,
                scale: .25,
                rotate: 140
            }).set(".e.treat", {
                hidden: !0
            }).fillTime(.1)
        },
        onDiscreteProgress() {
            a.squashTransition("happy", "nom", .4)
        }
    }),
    ooe = ef.extend({
        elements: a.elementsFromSprite("sprite", ["nom", ["heart", "heart0", [180, 302]],
            ["heart", "heart2", [180, 502]],
            ["heart", "heart1", [180, 402]]
        ]),
        onLoadComplete() {
            s.set(".e.heart0", {
                opacity: 0,
                rotate: -20
            }), s.set(".e.heart1", {
                opacity: 0
            }), s.set(".e.heart2", {
                opacity: 0,
                rotate: 20
            }), s.timeline({
                repeat: -1,
                repeatDelay: .4
            }).set(".e.heart0", {
                opacity: 0
            }, 0).to(".e.heart0", {
                opacity: 1,
                duration: .2
            }, 0).to(".e.heart0", {
                opacity: 0,
                duration: .2
            }, .2).to(".e.heart0", {
                x: -50,
                y: -100,
                duration: .4
            }, 0), s.timeline({
                repeat: -1,
                repeatDelay: .4,
                delay: .2
            }).set(".e.heart1", {
                opacity: 0
            }, 0).to(".e.heart1", {
                opacity: 1,
                duration: .2
            }, 0).to(".e.heart1", {
                opacity: 0,
                duration: .2
            }, .2).to(".e.heart1", {
                y: -120,
                duration: .4
            }, 0), s.timeline({
                repeat: -1,
                repeatDelay: .4,
                delay: .4
            }).set(".e.heart2", {
                opacity: 0
            }, 0).to(".e.heart2", {
                opacity: 1,
                duration: .2
            }, 0).to(".e.heart2", {
                opacity: 0,
                duration: .2
            }, .2).to(".e.heart2", {
                x: 50,
                y: -100,
                duration: .4
            }, 0)
        },
        onStartProgress() {
            a.startHoldShake("nom")
        },
        onStopProgress() {
            a.stopHoldShake("nom")
        }
    }),
    Nb = E.extend({
        imageManifest: {
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href,
            litter: new URL("main/pp7/everyday/assets/611318ff.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "litter",
                images: {
                    dust2: [270, 496, 240, 228, 158, 50],
                    dust1: [10, 496, 250, 178, 54, 290],
                    dust0: [10, 684, 240, 228, 143, 568],
                    dustL: [487, 734, 190, 142, 790, 35],
                    dustR: [260, 734, 217, 168, 777, 755],
                    broom: [758, 10, 238, 948, 26, 381],
                    box: [10, 10, 738, 476, 148, 80]
                }
            }
        }
    }),
    aoe = Nb.extend({
        elements: [...a.elementsFromSprite("sprite", ["box", "dust0", "dust1", "dust2"]), ...a.elementsFromImages(["paw", null, [700, 0]])],
        onLoadComplete() {
            s.set(".e.dust0", {
                opacity: 0
            }), s.set(".e.dust1", {
                opacity: 0
            }), s.set(".e.dust2", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            const e = `.e.dust${this.model.get("tapsLeft")%3}`;
            s.timeline({
                delay: .3,
                ease: "power2.out"
            }).set(e, {
                y: 0,
                opacity: 1
            }).to(e, {
                y: -50,
                opacity: 0,
                duration: 1
            }), s.timeline().to(".e.paw", {
                y: -250,
                scale: 1.3,
                duration: .15
            }).to(".e.paw", {
                y: -500,
                scale: 1,
                duration: .15
            }).to(".e.paw", {
                y: 0,
                duration: .15
            })
        }
    }),
    roe = Nb.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["box", "broom", "dustL", "dustR"]),
        onLoadComplete() {
            s.set(".e.dustL", {
                x: 100,
                opacity: 0
            }), s.set(".e.dustR", {
                x: -100,
                opacity: 0
            })
        },
        initializeTimeline() {
            const t = s.timeline({
                repeat: 2
            }).to(".e.broom", {
                rotate: 20,
                duration: .5
            }, 0).to(".e.broom", {
                rotate: 0,
                duration: .5
            }, .5).set(".e.dustL", {
                x: 100,
                opacity: 0
            }).to(".e.dustL", {
                x: 50,
                opacity: 1,
                duration: .5,
                ease: "none"
            }, 0).to(".e.dustL", {
                x: 0,
                opacity: 0,
                duration: .5,
                ease: "none"
            }, .5).to(".e.broom", {
                rotate: -20,
                duration: .5
            }, 1).to(".e.broom", {
                rotate: 0,
                duration: .5
            }, 1.5).set(".e.dustR", {
                x: -100,
                opacity: 0
            }, 1).to(".e.dustR", {
                x: -50,
                opacity: 1,
                duration: .5,
                ease: "none"
            }, 1).to(".e.dustR", {
                x: 0,
                opacity: 0,
                duration: .5,
                ease: "none"
            }, 1.5);
            this.timeline.add(t)
        }
    }),
    Gb = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/c88ff2f4.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    cat: [810, 10, 840, 630, 85, 50],
                    laptop: [10, 10, 790, 628, 186, 105]
                }
            }
        },
        elements: [{
            type: "container",
            class: "c",
            children: a.elementsFromSprite("sprite", ["laptop", "cat"])
        }]
    }),
    Voe = Gb.extend({
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: "none",
                    repeat: t / 4e3
                }).to(".e.cat", {
                    scaleY: 1.03,
                    transformOrigin: "bottom"
                }).to(".e.cat", {
                    scaleY: 1,
                    transformOrigin: "bottom"
                });
            e.name = "cat", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.c", {
                scale: .95,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.c", {
                scale: 1,
                duration: .25
            })
        }
    }),
    loe = Gb.extend({
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    ease: "none",
                    repeat: t / 4e3
                }).to(".e.cat", {
                    scaleY: 1.03,
                    transformOrigin: "bottom"
                }).to(".e.cat", {
                    scaleY: 1,
                    transformOrigin: "bottom"
                });
            e.name = "cat", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.c", {
                scale: .95,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.c", {
                scale: 1,
                duration: .25
            })
        }
    }),
    tf = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/e72fc888.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    attack: [962, 643, 940, 687, 313, 0],
                    hand: [1666, 10, 186, 623, 377, 407],
                    eyes: [714, 10, 942, 522, 259, 29],
                    roll: [10, 542, 942, 522, 259, 29],
                    sitting: [10, 10, 694, 512, 214, 153]
                }
            }
        }
    }),
    Aoe = tf.extend({
        elements: [{
            class: "c",
            type: "container",
            children: a.elementsFromSprite("sprite", ["sitting", "eyes", "roll"])
        }],
        onLoadComplete() {
            s.to(".e.c", {
                scale: 1.1
            }), s.to(".e.eyes", {
                hidden: !0
            }), s.to(".e.roll", {
                hidden: !0
            })
        },
        initializeTimeline() {
            this.timeline.fillTime(1).call(() => a.squashTransition("sitting", "roll", .3)).fillTime(1).call(() => a.squashTransition("roll", "eyes", .3)).fillTime(1)
        },
        onStartProgress() {
            s.to(".e.c", {
                scale: 1,
                duration: .25
            })
        },
        onStopProgress() {
            s.to(".e.c", {
                scale: 1.1,
                duration: .25
            })
        }
    }),
    coe = tf.extend({
        elements: a.elementsFromSprite("sprite", ["eyes", "hand"]),
        onLoadComplete() {
            s.set(".e.hand", {
                y: 300
            })
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.hand", {
                    y: 0
                }).to(".e.hand", {
                    y: 100
                }).to(".e.hand", {
                    y: 0
                }).to(".e.hand", {
                    y: 100
                }).to(".e.hand", {
                    y: 0
                }).to(".e.hand", {
                    y: 100
                }).to(".e.hand", {
                    y: 0
                }),
                e = s.timeline().fillTime(.5).to(".e.eyes", {
                    x: X.exports.random(-30, 30),
                    y: X.exports.random(-10, 10),
                    rotation: X.exports.random(-15, 15),
                    ease: "power2.inOut"
                }).to(".e.eyes", {
                    x: X.exports.random(-30, 30),
                    y: X.exports.random(-10, 10),
                    rotation: X.exports.random(-15, 15),
                    ease: "power2.inOut"
                }).to(".e.eyes", {
                    x: X.exports.random(-30, 30),
                    y: X.exports.random(-10, 10),
                    rotation: X.exports.random(-15, 15),
                    ease: "power2.inOut"
                }).to(".e.eyes", {
                    x: X.exports.random(-30, 30),
                    y: X.exports.random(-10, 10),
                    rotation: X.exports.random(-15, 15),
                    ease: "power2.inOut"
                }).to(".e.eyes", {
                    x: X.exports.random(-30, 30),
                    y: X.exports.random(-10, 10),
                    rotation: X.exports.random(-15, 15),
                    ease: "power2.inOut"
                }).to(".e.eyes", {
                    x: 0,
                    y: 0,
                    rotation: 0
                });
            this.timeline.add(t), this.timeline.add(e, 0)
        }
    }),
    doe = tf.extend({
        stepDuration: .35,
        elements: a.elementsFromSprite("sprite", ["attack", "eyes", "hand"]),
        onLoadComplete() {
            s.set(".e.attack", {
                hidden: !0
            }), s.to(".e.hand", {
                opacity: 0,
                duration: .1,
                delay: .15
            }), a.squashTransition("eyes", "attack", .3)
        },
        onDiscreteProgress() {
            a.squashOnce("attack", .2)
        }
    }),
    Xb = E.extend({
        imageManifest: {
            items: new URL("main/pp7/everyday/assets/f41de186.png", self.location).href,
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "items",
                images: {
                    item0: [220, 647, 188, 174, 413, 406],
                    item1: [10, 501, 200, 162, 422, 400],
                    item2: [430, 637, 178, 181, 400, 411],
                    item3: [220, 501, 200, 136, 464, 400],
                    item4: [430, 501, 194, 126, 437, 403],
                    item5: [182, 831, 173, 152, 428, 414],
                    item6: [618, 701, 192, 158, 421, 404],
                    item7: [778, 501, 186, 95, 452, 407],
                    item8: [10, 673, 162, 162, 419, 419],
                    item9: [418, 828, 176, 160, 420, 412],
                    item10: [634, 501, 134, 190, 405, 433],
                    desk: [10, 10, 942, 481, 183, 30]
                }
            }
        }
    }),
    poe = Xb.extend({
        stepDuration: .25,
        items: [0, 1, 2],
        counter: 2,
        elements: [...a.elementsFromSprite("sprite", ["desk"]), {
            type: "container",
            class: "items-container",
            children: a.elementsFromSprite("sprite", ["item0", "item1", "item2", "item3", "item4", "item5", "item6", "item7", "item8", "item9", "item10"])
        }, ...a.elementsFromImages(["paw", null, [700, 0]])],
        onLoadComplete() {
            s.set(".e.item0", {
                x: -250
            }), s.set(".e.item2", {
                x: 250
            }), s.set(".e.item3", {
                opacity: 0
            }), s.set(".e.item4", {
                opacity: 0
            }), s.set(".e.item5", {
                opacity: 0
            }), s.set(".e.item6", {
                opacity: 0
            }), s.set(".e.item7", {
                opacity: 0
            }), s.set(".e.item8", {
                opacity: 0
            }), s.set(".e.item9", {
                opacity: 0
            }), s.set(".e.item10", {
                opacity: 0
            }), s.set(".e.desk", {
                zIndex: -2
            })
        },
        onDiscreteProgress() {
            const t = (this.model.get("tapsLeft") - 1) % 3;
            let e = 0,
                n = 0;
            t === 0 && (e = -150), t === 2 && (e = 150), t === 0 && (n = -250), t === 1 && (n = 0), t === 2 && (n = 250), this.counter === 10 ? this.counter = 0 : this.counter += 1, s.timeline().to(".e.paw", {
                x: e,
                y: -350,
                scale: 1.2,
                duration: .15
            }).to(".e.paw", {
                x: e * 2,
                y: -500,
                scale: .8,
                duration: .15
            }).to(".e.paw", {
                x: 0,
                y: 0,
                scale: 1,
                duration: .15
            }), s.timeline().set(`.e.item${this.counter}`, {
                x: n,
                y: 0,
                rotation: 0,
                opacity: 1,
                scale: .5,
                zIndex: -1
            }, .3).to(`.e.item${this.counter}`, {
                scale: 1,
                duration: .1
            }, .3).to(`.e.item${this.items[t]}`, {
                y: 800,
                rotation: X.exports.random(-360, 360),
                zIndex: 0,
                duration: .5,
                ease: "power2.in"
            }, .3).set(`.e.item${this.items[t]}`, {
                opacity: 0
            }, .8), this.items[t] = this.counter
        }
    }),
    hoe = Xb.extend({
        stepDuration: .5,
        imageManifest: {
            items: new URL("main/pp7/everyday/assets/f41de186.png", self.location).href
        },
        elements: [...a.elementsFromSprite("sprite", ["desk"]), {
            type: "container",
            class: "items-container",
            children: a.elementsFromSprite("sprite", [
                [`item${X.exports.random(0,10)}`, "item0"],
                [`item${X.exports.random(0,10)}`, "item1"],
                [`item${X.exports.random(0,10)}`, "item2"],
                [`item${X.exports.random(0,10)}`, "item3"],
                [`item${X.exports.random(0,10)}`, "item4"]
            ])
        }],
        onLoadComplete() {
            s.set(".e.item0", {
                x: -300,
                y: 400,
                rotate: 90
            }), s.set(".e.item1", {
                x: -150,
                y: 450,
                rotate: 0
            }), s.set(".e.item2", {
                x: 0,
                y: 500,
                rotate: -90
            }), s.set(".e.item3", {
                x: 150,
                y: 400,
                rotate: 90
            }), s.set(".e.item4", {
                x: 300,
                y: 450,
                rotate: -90
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.item2", {
                y: 0,
                rotate: 0,
                ease: "back.out(2)"
            }).to(".e.item4", {
                y: 0,
                rotate: 0,
                ease: "back.out(2)"
            }).to(".e.item0", {
                y: 0,
                rotate: 0,
                ease: "back.out(2)"
            }).to(".e.item3", {
                y: 0,
                rotate: 0,
                ease: "back.out(2)"
            }).to(".e.item1", {
                y: 0,
                rotate: 0,
                ease: "back.out(2)"
            })
        }
    }),
    YV = E.extend({
        className: "pose",
        imageManifest: {
            pose: new URL("main/pp7/everyday/assets/c4de054e.png", self.location).href,
            posts: new URL("main/pp7/everyday/assets/6f9a464f.png", self.location).href
        },
        sprites: {
            pose: {
                key: "pose",
                images: {
                    phone: [1463, 10, 541, 948, 0, 0],
                    cat: [952, 10, 501, 903, 0, 0],
                    costume: [10, 10, 932, 835, 83, 34]
                }
            },
            posts: {
                key: "posts",
                images: {
                    tt: [10, 10, 689, 930, 34, 156],
                    ig: [709, 10, 689, 930, 34, 156],
                    tw: [10, 950, 799, 950, 29, 101]
                }
            }
        }
    }),
    uoe = YV.extend({
        elements: [...a.elementsFromSprite("pose", [
            ["cat", "cat cat-real"]
        ]), {
            type: "container",
            class: "phone-container",
            pos: [50, 400],
            children: [{
                type: "div",
                pos: [26, 26],
                class: "phone-bg",
                html: ""
            }, ...a.elementsFromSprite("pose", [
                ["cat", "cat cat-phone"], "phone"
            ])]
        }],
        onLoadComplete() {
            s.set(".e.cat-phone", {
                scale: .7
            })
        },
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    repeat: t / 2e4
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: X.exports.random(-120, 120),
                    y: X.exports.random(-20, 20),
                    rotation: X.exports.random(-100, 100),
                    ease: "power2.inOut"
                }).to(".e.cat", {
                    x: 0,
                    y: 0,
                    rotation: 0
                });
            e.name = "image", this.timeline.add(e)
        },
        onStartProgress() {
            s.to(".e.cat-real", {
                scale: .97,
                duration: .35
            })
        },
        onStopProgress() {
            s.to(".e.cat-real", {
                scale: 1,
                duration: .35
            })
        }
    }),
    moe = YV.extend({
        stepDuration: .35,
        elements: [...a.elementsFromSprite("pose", [
            ["costume", "costume cat-real"]
        ]), {
            type: "container",
            class: "phone-container",
            pos: [50, 400],
            children: [{
                type: "div",
                pos: [26, 26],
                class: "phone-bg",
                html: ""
            }, ...a.elementsFromSprite("pose", [
                ["costume", "costume cat-phone"], "phone"
            ])]
        }],
        onLoadComplete() {
            s.set(".e.cat-phone", {
                y: -500,
                scale: .7
            }), s.set(".e.phone-container", {
                x: -200,
                y: 500,
                scale: .5,
                rotate: -30
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.cat-phone", {
                y: 0
            }, 0).to(".e.phone-container", {
                x: 0,
                y: 0,
                scale: 1,
                rotate: -3
            }, 0)
        }
    }),
    foe = YV.extend({
        elements: [...a.elementsFromSprite("pose", [
            ["costume", "costume cat-real"]
        ]), {
            type: "container",
            class: "phone-container",
            pos: [50, 400],
            children: [{
                type: "div",
                pos: [26, 26],
                class: "phone-bg",
                html: ""
            }, ...a.elementsFromSprite("pose", [
                ["costume", "costume cat-phone"], "phone"
            ])]
        }],
        onLoadComplete() {
            s.set(".e.cat-phone", {
                scale: .7
            }), s.set(".e.phone-container", {
                rotate: -3
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.phone-container", {
                x: -5,
                rotate: -3,
                scaleX: .98,
                ease: "power1.inOut"
            }, 0).to(".e.cat-phone", {
                x: -300,
                ease: "power1.inOut"
            }, 0).to(".e.phone-container", {
                x: 2,
                rotate: 5,
                scaleX: 1,
                ease: "power1.inOut"
            }, 1).to(".e.cat-phone", {
                y: -50,
                x: -275,
                ease: "power1.inOut"
            }, 1).to(".e.phone-container", {
                x: -3,
                rotate: 1,
                scaleX: .98,
                ease: "power1.inOut"
            }, 2).to(".e.cat-phone", {
                y: -70,
                x: -100,
                ease: "power1.inOut"
            }, 2).to(".e.phone-container", {
                x: 0,
                rotate: 0,
                scaleX: 1,
                ease: "power1.inOut"
            }, 3).to(".e.cat-phone", {
                x: -300,
                ease: "power1.inOut"
            }, 3)
        }
    }),
    qoe = YV.extend({
        stepDuration: .25,
        elements: [...a.elementsFromSprite("pose", [
            ["costume", "costume cat-real"]
        ]), {
            type: "container",
            class: "phone-container",
            pos: [50, 400],
            children: [{
                type: "div",
                pos: [26, 26],
                class: "phone-bg"
            }, ...a.elementsFromSprite("pose", [
                ["costume", "costume cat-phone"]
            ]), {
                type: "div",
                pos: [26, 26],
                class: "flash"
            }, ...a.elementsFromSprite("pose", ["phone"])]
        }],
        onLoadComplete() {
            s.set(".e.cat-phone", {
                x: -300,
                y: -50,
                scale: .7
            }), s.set(".e.flash", {
                opacity: 0
            })
        },
        initializeTimeline() {
            this.timeline.to(".e.flash", {
                opacity: 1,
                duration: .05,
                ease: "none"
            }).to(".e.flash", {
                opacity: 0,
                duration: .15
            }, .15)
        }
    }),
    goe = YV.extend({
        stepDuration: .4,
        elements: [...a.elementsFromSprite("pose", [
            ["costume", "costume cat-real"]
        ]), {
            type: "container",
            class: "phone-container",
            pos: [50, 400],
            children: [{
                type: "div",
                pos: [26, 26],
                class: "phone-bg"
            }, ...a.elementsFromSprite("pose", [
                ["costume", "costume cat-phone"], "phone"
            ])]
        }, ...a.elementsFromSprite("posts", ["ig", "tt", "tw"])],
        onLoadComplete() {
            s.set(".e.cat-phone", {
                x: -300,
                y: -50,
                scale: .7
            }), s.to(".e.phone-container", {
                x: -160,
                rotate: -3,
                duration: .3
            }), s.to(".e.cat-real", {
                scale: .7,
                opacity: 0,
                duration: .3
            }), s.set(".e.ig", {
                hidden: !0,
                rotate: -3
            }), s.set(".e.tt", {
                hidden: !0,
                rotate: 3
            }), s.set(".e.tw", {
                hidden: !0,
                rotate: -1
            })
        },
        initializeTimeline() {
            this.timeline.add(a.squashTransition("phone-container", "tw")).add(a.squashTransition("tw", "ig")).add(a.squashTransition("ig", "tt"))
        }
    }),
    yoe = E.extend({
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/acf05dcf.png", self.location).href,
            paw: new URL("main/pp7/everyday/assets/89a10df3.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    dust3: [1224, 10, 682, 444, 278, 159],
                    dust2: [628, 10, 586, 428, 286, 207],
                    dust1: [10, 378, 588, 490, 255, 206],
                    dust0: [608, 464, 766, 541, 229, 117],
                    robot: [10, 10, 608, 358, 321, 196]
                }
            }
        },
        elements: [...a.elementsFromSprite("sprite", ["robot", "dust0", "dust1", "dust2", "dust3"]), ...a.elementsFromImages(["paw", null, [700, 0]])],
        onLoadComplete() {
            s.set(".e.dust0", {
                opacity: 0
            }), s.set(".e.dust1", {
                opacity: 0
            }), s.set(".e.dust2", {
                opacity: 0
            }), s.set(".e.dust3", {
                opacity: 0
            })
        },
        onDiscreteProgress() {
            const t = `.e.dust${X.exports.random(0,3)}`;
            s.timeline().to(".e.paw", {
                y: -250,
                scale: 1.3,
                duration: .15
            }).to(".e.paw", {
                y: -500,
                scale: 1,
                duration: .15
            }).to(".e.paw", {
                y: 0,
                duration: .15
            }).to(".e.robot", {
                x: X.exports.random(-75, 75),
                y: X.exports.random(-75, 75),
                rotation: X.exports.random(-30, 30),
                duration: .2,
                scale: .9,
                ease: "back.out(2)"
            }, .3).to(".e.robot", {
                scale: 1,
                duration: .1
            }), s.timeline({
                delay: .3,
                ease: "power2.out"
            }).set(t, {
                x: 0,
                y: 0,
                opacity: 1,
                rotation: X.exports.random(0, 359)
            }).to(t, {
                x: X.exports.random(-100, 100),
                y: -150,
                opacity: 0,
                duration: 1
            })
        }
    }),
    boe = E.extend({
        imageManifest: {
            cat: new URL("main/pp7/everyday/assets/f16bb934.png", self.location).href,
            vomit: new URL("main/pp7/everyday/assets/cf7f09ae.png", self.location).href
        },
        elements: [{
            type: "container",
            class: "c",
            children: a.elementsFromImages("cat", "vomit")
        }],
        onLoadComplete() {
            s.set(".e.vomit", {
                visibility: "hidden"
            })
        },
        onDiscreteProgress(t) {
            const e = t > 66 || t > 33 && Math.random() > .5;
            s.timeline().to(".e.c", {
                scale: .95,
                duration: .15
            }).to(".e.c", {
                scale: 1,
                duration: .15
            }), s.set(".e.cat", {
                visibility: e ? "hidden" : "visible"
            }), s.set(".e.vomit", {
                visibility: e ? "visible" : "hidden"
            })
        }
    }),
    voe = E.extend({
        className: "search-scene",
        progressCounter: 0,
        cloudCounter: 0,
        mistakeText: ["IT'S NOT<br/>HERE", "NO LUCK", "DIDN'T<br/>FIND IT", "NOPE"],
        imageManifest: {
            sprite: new URL("main/pp7/everyday/assets/43bbeef4.png", self.location).href
        },
        sprites: {
            sprite: {
                key: "sprite",
                images: {
                    cloud0: [0, 0, 786, 563],
                    cloud1: [786, 0, 786, 563],
                    cloud2: [0, 562, 786, 563],
                    cloud3: [786, 562, 786, 563],
                    item0: [1572, 0, 225, 225],
                    item1: [1797, 0, 225, 225],
                    item2: [2022, 0, 225, 225],
                    item3: [1572, 225, 225, 225],
                    item4: [1797, 225, 225, 225],
                    item5: [2022, 225, 225, 225],
                    item6: [1572, 450, 225, 225],
                    item7: [1797, 450, 225, 225],
                    item8: [2022, 450, 225, 225],
                    item9: [1572, 675, 225, 225],
                    item10: [1797, 675, 225, 225],
                    item11: [2022, 675, 225, 225],
                    item12: [1572, 900, 225, 225],
                    item13: [2022, 900, 225, 225]
                }
            }
        },
        bindings: {
            ".text span": {
                observe: ["location", "isMistake"],
                updateMethod: "html",
                onGet([t, e]) {
                    return e ? X.exports.sample(this.mistakeText) : `SEARCH ${t}`
                },
                classes: {
                    mistake: "isMistake"
                }
            }
        },
        elements: [{
            class: "search-container",
            type: "container",
            children: [{
                class: "text",
                type: "div",
                pos: [100, 100],
                html: "<span></span>"
            }, ...a.elementsFromSprite("sprite", [
                ["cloud0", "dust0", [218, 107]],
                ["cloud1", "dust1", [218, 107]],
                ["cloud2", "dust2", [218, 107]],
                ["cloud3", "dust3", [218, 107]],
                ["cloud0", "dust4", [218, 107]],
                ["cloud1", "dust5", [218, 107]],
                ["cloud2", "dust6", [218, 107]],
                ["cloud3", "dust7", [218, 107]],
                ["item0", null, [387, 387]],
                ["item1", null, [387, 387]],
                ["item2", null, [387, 387]],
                ["item3", null, [387, 387]],
                ["item4", null, [387, 387]],
                ["item5", null, [387, 387]],
                ["item6", null, [387, 387]],
                ["item7", null, [387, 387]],
                ["item8", null, [387, 387]],
                ["item9", null, [387, 387]],
                ["item10", null, [387, 387]],
                ["item11", null, [387, 387]],
                ["item12", null, [387, 387]],
                ["item13", null, [387, 387]]
            ])]
        }],
        onLoadComplete() {
            s.set(".e.dust0, .e.dust1, .e.dust2, .e.dust3, .e.dust4, .e.dust5, .e.dust6, .e.dust7", {
                opacity: 0
            }), s.set(".e.item0, .e.item1, .e.item2, .e.item3, .e.item4, .e.item5, .e.item6", {
                opacity: 0
            }), s.set(".e.item7, .e.item8, .e.item9, .e.item10, .e.item11, .e.item12, .e.item13", {
                opacity: 0
            })
        },
        onProgress(t) {
            if (t > this.progressCounter) {
                const e = X.exports.random(50, 75) / 100,
                    n = Math.random() * 6,
                    i = X.exports.random(0, 360);
                if (s.set(`.e.dust${this.cloudCounter}`, {
                        x: 0,
                        y: 0,
                        scale: e,
                        rotation: i,
                        opacity: 1
                    }), s.to(`.e.dust${this.cloudCounter}`, {
                        opacity: 0,
                        delay: .5,
                        duration: .5
                    }), s.to(`.e.dust${this.cloudCounter}`, {
                        x: Math.cos(n) * 250,
                        y: Math.sin(n) * 250,
                        scale: e * 1.1,
                        duration: 1
                    }), this.progressCounter += 5, this.cloudCounter === 7 ? this.cloudCounter = 0 : this.cloudCounter += 1, Math.random() < .2) {
                    const r = X.exports.random(60, 85) / 100,
                        V = Math.random() * 6,
                        A = X.exports.random(0, 360),
                        c = X.exports.random(0, 13);
                    s.set(`.e.item${c}`, {
                        x: 0,
                        y: 0,
                        scale: r,
                        rotation: A,
                        opacity: 1
                    }), s.to(`.e.item${c}`, {
                        opacity: 0,
                        delay: .5,
                        duration: .5
                    }), s.to(`.e.item${c}`, {
                        x: Math.cos(V) * 250,
                        y: Math.sin(V) * 250,
                        scale: r * 1.4,
                        duration: 1
                    })
                }
            }
        }
    }),
    nf = E.extend({
        imageManifest: {
            hand: new URL("main/pp7/everyday/assets/4c64bcc5.png", self.location).href,
            Adult0: new URL("main/pp7/everyday/assets/db381156.png", self.location).href,
            Adult0v2: new URL("main/pp7/everyday/assets/a9d76d26.png", self.location).href,
            Adult1: new URL("main/pp7/everyday/assets/067af17b.png", self.location).href,
            Adult1v2: new URL("main/pp7/everyday/assets/9a6348d1.png", self.location).href,
            Child0: new URL("main/pp7/everyday/assets/ad40b733.png", self.location).href,
            Child0v2: new URL("main/pp7/everyday/assets/a0c13110.png", self.location).href,
            Child0v3: new URL("main/pp7/everyday/assets/47453efb.png", self.location).href,
            Child1: new URL("main/pp7/everyday/assets/ba3d34ce.png", self.location).href,
            Child1v2: new URL("main/pp7/everyday/assets/e3f1e13d.png", self.location).href,
            Child1v3: new URL("main/pp7/everyday/assets/8cf7f6fa.png", self.location).href,
            Child2: new URL("main/pp7/everyday/assets/731c7d8f.png", self.location).href,
            Child2v2: new URL("main/pp7/everyday/assets/24d09d86.png", self.location).href,
            Child2v3: new URL("main/pp7/everyday/assets/106de43f.png", self.location).href,
            Teen0: new URL("main/pp7/everyday/assets/c0d7d390.png", self.location).href,
            Teen0v2: new URL("main/pp7/everyday/assets/775f7526.png", self.location).href,
            Teen0v3: new URL("main/pp7/everyday/assets/82186ccf.png", self.location).href,
            Teen1: new URL("main/pp7/everyday/assets/b193a017.png", self.location).href,
            Teen1v2: new URL("main/pp7/everyday/assets/afc6d88e.png", self.location).href,
            Teen1v3: new URL("main/pp7/everyday/assets/61eda4db.png", self.location).href,
            Teen2: new URL("main/pp7/everyday/assets/a57b762c.png", self.location).href,
            Teen2v2: new URL("main/pp7/everyday/assets/abaa0d77.png", self.location).href,
            Teen2v3: new URL("main/pp7/everyday/assets/a6b487ab.png", self.location).href
        },
        elements() {
            const t = this.model.get("playerInfo");
            return [{
                class: "player-container",
                type: "container",
                children: [{
                    class: "player",
                    type: "img",
                    pos: [100, 250],
                    key: t.avatar
                }, {
                    class: "hand",
                    type: "img",
                    pos: [100, 250],
                    key: "hand"
                }]
            }]
        }
    }),
    woe = nf.extend({
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    repeat: t / 2e4
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                });
            e.name = "image", this.timeline.add(e)
        }
    }),
    xoe = nf.extend({
        onDiscreteProgress() {
            s.timeline().to(".e.hand", {
                scale: 1.05,
                duration: .15
            }).to(".e.hand", {
                scale: 1,
                duration: .15
            })
        }
    }),
    koe = nf.extend({
        initializeTimeline() {
            const t = this.model.get("durationInMs"),
                e = s.timeline({
                    repeat: t / 2e4
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                }).to(".e.hand", {
                    scale: 1.05
                }).to(".e.hand", {
                    scale: 1
                });
            e.name = "image", this.timeline.add(e)
        }
    }),
    Coe = E.extend({
        elements() {
            return [{
                class: "image",
                type: "img",
                pos: [0, 0],
                key: Object.keys(this.imageManifest)[0]
            }]
        },
        initializeTimeline() {
            const t = s.timeline().to(".e.image", {
                opacity: 0,
                ease: kt.easeNone
            });
            t.name = "image", this.timeline.add(t)
        }
    }),
    Roe = Os.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Doe = Ma.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Soe = eV.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Toe = Coe.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Eoe = Hn.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Loe = yo.extend({
        imageManifest: {
            cookie: new URL("main/pp7/everyday/assets/e1965589.png", self.location).href
        }
    }),
    Boe = E.extend({
        className: "default hold",
        bindings: {
            ":el": {
                classes: {
                    mistake: "mistake",
                    complete: "isComplete"
                }
            }
        },
        elements: [{
            class: "text",
            type: "div",
            pos: [50, 50],
            html: "<span>TAP AND HOLD!</span>"
        }],
        initializeTimeline() {
            const t = this.model.get("durationInMs");
            s.set(".e.text", {
                rotation: -10
            });
            const e = s.timeline({
                ease: kt.easeNone,
                repeat: t / 2e3
            }).to(".e.text", {
                x: 1,
                y: 1,
                rotation: -10
            }).to(".e.text", {
                x: -1,
                y: -1,
                rotation: -10
            }).to(".e.text", {
                x: -1,
                y: 0,
                rotation: -9
            }).to(".e.text", {
                x: 1,
                y: 1,
                rotation: -10
            }).to(".e.text", {
                x: 1,
                y: -1,
                rotation: -9
            }).to(".e.text", {
                x: -1,
                y: 1,
                rotation: -11
            }).to(".e.text", {
                x: -1,
                y: 1,
                rotation: -10
            }).to(".e.text", {
                x: 1,
                y: 1,
                rotation: -11
            }).to(".e.text", {
                x: 1,
                y: -1,
                rotation: -9
            }).to(".e.text", {
                x: 1,
                y: 1,
                rotation: -10
            }).to(".e.text", {
                x: 1,
                y: 1,
                rotation: -11
            });
            e.name = "text", this.timeline.add(e)
        }
    }),
    Moe = E.extend({
        className: "instructions",
        holdTL: null,
        imageManifest: {
            battery: new URL("main/pp7/everyday/assets/84b7145b.png", self.location).href
        },
        elements: [{
            class: "step step0",
            type: "img",
            pos: [0, 0],
            key: "battery"
        }],
        resetToStep() {
            s.set(".e.step", {
                rotation: 0,
                x: 0,
                y: 0,
                opacity: 1
            })
        },
        onTapDown() {
            s.to(".e.step", {
                duration: .15,
                scale: .97,
                ease: kt.easeNone
            }), this.holdTL = s.timeline({
                ease: kt.easeNone,
                repeat: -1
            }).to(".e.step", {
                x: 2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: -2,
                y: -2,
                duration: .1
            }).to(".e.step", {
                x: -2,
                y: 0,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: -2,
                duration: .1
            }).to(".e.step", {
                x: -2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: -2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: -2,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: 2,
                duration: .1
            }).to(".e.step", {
                x: 2,
                y: -2,
                duration: .1
            })
        },
        onTapUp() {
            s.to(".e.step", {
                duration: .15,
                scale: 1,
                ease: kt.easeNone
            }), this.holdTL.pause(), this.holdTL = null
        },
        onRotation(t) {
            s.set(".e.step", {
                rotation: t
            })
        },
        onSwipe(t) {
            s.to(".e.step", {
                duration: .15,
                opacity: 0,
                x: Math.cos(t) * 50,
                y: Math.sin(t) * 50,
                ease: kt.easeNone
            })
        }
    }),
    Ooe = E.extend({
        className: "default nothing",
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    mistake: "mistake",
                    complete: "isComplete"
                }
            }
        },
        elements: [{
            class: "text",
            type: "div",
            pos: [50, 50],
            html: '<span class="message">DO NOTHING!</span>'
        }],
        onLoadComplete() {
            s.set(".e.text", {
                rotation: -10
            }), this.model.setUpdate({
                message: "DO NOTHING!"
            })
        }
    }),
    Ioe = E.extend({
        className: "default rotate",
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    mistake: "mistake",
                    complete: "isComplete"
                }
            },
            ".text span": {
                observe: "message",
                updateMethod: "html"
            }
        },
        elements: [{
            class: "text",
            type: "div",
            pos: [50, 50],
            html: "<span>ROTATE!</span>"
        }],
        onLoadComplete() {
            const t = this.model.get("direction");
            let e = "ROTATE!";
            t && t.toLowerCase() === "clockwise" && (e = "ROTATE<br/>CLOCKWISE!"), t && t.toLowerCase() === "counter" && (e = "ROTATE<br/>COUNTER!"), this.model.setUpdate({
                message: e
            })
        },
        onProgress() {
            const t = this.model.get("degreesRotated");
            s.set(".e.text", {
                rotation: t - 10
            })
        }
    }),
    Poe = E.extend({
        className: "default scrub",
        elements: [{
            class: "text background",
            type: "div",
            pos: [50, 50],
            html: "<span>SCRUB!</span>"
        }, {
            class: "text foreground",
            type: "div",
            pos: [50, 50],
            html: "<span>SCRUB!</span>"
        }],
        initializeTimeline() {
            s.set(".e.foreground", {
                rotation: -10
            }), s.set(".e.background", {
                rotation: -10,
                opacity: 0
            });
            const t = s.timeline().to(".e.foreground", {
                opacity: 0,
                ease: $i.easeOut
            });
            t.name = "foreground", this.timeline.add(t);
            const e = s.timeline().to(".e.background", {
                opacity: 1,
                ease: $i.easeOut
            });
            e.name = "background", this.timeline.add(e, "-=0.25")
        }
    }),
    Uoe = E.extend({
        className: "default swipe",
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    mistake: "mistake",
                    complete: "isComplete"
                }
            },
            ".text span": "infoText"
        },
        imageManifest: {
            arrow: new URL("main/pp7/everyday/assets/54ccfe4f.png", self.location).href
        },
        elements: [{
            class: "text move",
            type: "div",
            pos: [50, 50],
            html: "<span></span>"
        }, {
            class: "text",
            type: "div",
            pos: [50, 50],
            html: "<span></span>"
        }, {
            class: "arrow",
            type: "img",
            pos: [250, 250],
            key: "arrow"
        }],
        onLoadComplete() {
            s.set(".e.move", {
                opacity: 0
            }), s.set(".e.arrow", {
                opacity: 0,
                scale: .5
            })
        },
        onDiscreteProgress(t, e, n) {
            const i = n.radians;
            s.set(".e.move", {
                opacity: 1
            }), s.to(".e.move", {
                opacity: 0,
                x: Math.cos(i) * 50,
                y: Math.sin(i) * 50,
                onComplete() {
                    s.set(this.targets()[0], {
                        x: 0,
                        y: 0
                    })
                }
            })
        },
        onMistake(t) {
            s.set(".e.arrow", {
                rotation: -t
            }), s.to(".e.arrow", {
                opacity: 1,
                scale: 1,
                duration: .25
            }), setTimeout(() => {
                s.set(".e.arrow", {
                    opacity: 0,
                    scale: .5
                })
            }, 500)
        }
    }),
    Foe = E.extend({
        className: "default tap",
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    complete: "isComplete",
                    waiting: "isWaiting"
                }
            },
            ".text span": {
                observe: "isWaiting",
                onGet(t) {
                    return t ? "WAIT!" : "TAP!"
                }
            }
        },
        elements: [{
            class: "text",
            type: "div",
            pos: [50, 50],
            html: "<span>TAP!</span>"
        }]
    }),
    joe = E.extend({
        className: "default",
        usesTimeline: !1,
        bindings: {
            ":el": {
                classes: {
                    mistake: "mistake",
                    complete: "isComplete",
                    waiting: "isWaiting"
                }
            },
            ".text span": {
                observe: "progress",
                onGet: t => Math.round(t)
            }
        },
        elements: [{
            class: "text",
            type: "div",
            pos: [50, 50],
            html: "<span></span>"
        }],
        onMistake() {
            this.model.setUpdate({
                mistake: !0
            }), setTimeout(() => {
                this.model.setUpdate({
                    mistake: !1
                })
            }, 500)
        }
    }),
    Yn = {
        Stir: r0,
        EatBreakfast: V0,
        EatLunch: KT,
        EatDinner: WT,
        FrostCake1: JT,
        FrostCake2: ZT,
        FrostCake3: _T,
        Flip1: _q,
        Flip2: _q,
        Watch: $T,
        UnscrewSD: eE,
        StealBatteries: tE,
        InsertBatteries: nE,
        TurnOnTV: iE,
        ScoopFish: sE,
        CarryFish: oE,
        TossFish: aE,
        Prayer: rE,
        FinalFlush: VE,
        PickUpClothes: cE,
        Clutter: dE,
        Vacuum: pE,
        WindCord: hE,
        GutterStep1: uE,
        GutterStep2: lu,
        GutterStep3: mE,
        GutterStep4: lu,
        Dish1Step1: v2,
        Dish1Step2: Rh,
        Dish1Step3: Dh,
        Dish2Step1: TE,
        Dish2Step2: EE,
        Dish2Step3: Rh,
        Dish2Step4: Dh,
        Dish3Step1: LE,
        Dish3Step2: BE,
        Dish3Step3: ME,
        Dish3Step4: Rh,
        Dish3Step5: Dh,
        Thermo1: OE,
        Thermo2: IE,
        Thermo3: PE,
        Thermo4: UE,
        UnclogStep1: FE,
        UnclogStep2: jE,
        UnclogStep3: QE,
        FindBoard: zE,
        GrabBoard: HE,
        PlayCheckers: NE,
        FlipBoard: GE,
        TuckLeft: XE,
        TuckRight: YE,
        TuckLeftAgain: KE,
        ThrowBlanket: WE,
        DrawerLookLeft: JE,
        DrawerLookRight: ZE,
        UntangleWires: _E,
        PlugOutlet: $E,
        PickWeeds1: k2,
        AvoidFlowers1: eL,
        PickWeeds2: tL,
        AvoidFlowers2: nL,
        YankRoots: iL,
        PlantWater: sL,
        PlantDead: C2,
        PlantTear: oL,
        CutParsley: R2,
        CutCilantro: aL,
        CilantroParsley: rL,
        CutBagel: VL,
        ToastBagel: lL,
        ToasterTune: AL,
        CreamCheese: cL,
        RecycleBottles: dL,
        RecycleCans: pL,
        RecycleLandfill: hL,
        RecycleReward: uL,
        SpiderWait: mL,
        SpiderTrap: fL,
        SpiderOutside: qL,
        SpiderFreedom: gL,
        DragOutPool: yL,
        PoolWater: tg,
        FillKiddiePool: bL,
        PoolDistraction: vL,
        ForgetPool: wL,
        BirdhouseStep1: xL,
        BirdhouseStep2: kL,
        BirdhouseStep3: CL,
        BirdhouseStep4: RL,
        TupperwareStep1: DL,
        TupperwareStep2: SL,
        TupperwareStep3: S2,
        TupperwareStep4: TL,
        TupperwareStep5: EL,
        TupperwareStep6: LL,
        VacuumAnts: BL,
        SquishEscape: ML,
        GatherCarnage: OL,
        TossAnts: IL,
        RotateTV: CA,
        RotateTV2: PL,
        RotateTVBack: UL,
        SmackTV: FL,
        MicroStart: E2,
        MicroCook: L2,
        MicroStir: jL,
        MicroStartAgain: QL,
        MicroWait: zL,
        MicroCool: HL,
        UnfurlCloth: NL,
        FlattenCloth: GL,
        FlattenMore: XL,
        Candelabra: YL,
        Chimney1Step1: KL,
        Chimney1Step2: WL,
        Chimney1Step3: JL,
        Chimney1Step4: ZL,
        Chimney1Step5: _L,
        Chimney2Step1: $L,
        Chimney2Step2: eB,
        Chimney2Step3: tB,
        Chimney2Step4: nB,
        Chimney2Step5: iB,
        GreetNeighborStep1: sB,
        GreetNeighborStep2: oB,
        GreetNeighborStep3: aB,
        SetTable1: rB,
        SetTable2: VB,
        SetTable3: lB,
        SetTable4: AB,
        ExpiredFood1: cB,
        ExpiredFood2: dB,
        ExpiredFood3: pB,
        ExpiredFood4: hB,
        MopFloor1: uB,
        MopFloor2: mB,
        MopFloor3: fB,
        MopFloor4: qB,
        LeftoversFridge1: gB,
        LeftoversFridge2: yB,
        LeftoversFridge3: bB,
        LeftoversFridge4: vB,
        LeftoversFridge5: wB,
        LeftoversFridge6: xB,
        LeftoversFridge7: kB,
        PlasticSouvenirCups1: CB,
        PlasticSouvenirCups2: RB,
        PlasticSouvenirCups3: DB,
        PlasticSouvenirCups4: SB,
        PlasticSouvenirCups5: TB,
        BirdWatch1: EB,
        BirdWatch2: LB,
        BirdWatch3: BB,
        BirdWatch4: MB,
        BirdWatch5: OB,
        BirdWatch6: IB,
        MakeIceCubes1: PB,
        MakeIceCubes2: UB,
        MakeIceCubes3: FB,
        HosePatioFurniture1: jB,
        HosePatioFurniture2: QB,
        HosePatioFurniture3: zB,
        HosePatioFurniture4: HB,
        HosePatioFurniture5: NB,
        CleanShowerCurtain1: GB,
        CleanShowerCurtain2: XB,
        CleanShowerCurtain3: YB,
        CleanShowerCurtain4: KB,
        CleanShowerCurtain5: WB,
        CleanShowerCurtain6: JB,
        CleanShowerCurtain7: ZB,
        PutAwayLaundry1: _B,
        PutAwayLaundry2: $B,
        PutAwayLaundry3: eM,
        PutAwayLaundry4: tM,
        CleanFancyDishes1: nM,
        CleanFancyDishes2: iM,
        CleanFancyDishes3: sM,
        CleanFancyDishes4: oM,
        HangFrame1: aM,
        HangFrame2: rM,
        HangFrame3: VM,
        HangFrame4: lM,
        PutBooksAway1: AM,
        PutBooksAway2: cM,
        PutBooksAway3: dM,
        PutBooksAway4: pM,
        PutBooksAway5: hM,
        PaintSpill1: uM,
        PaintSpill2: mM,
        PaintSpill3: fM,
        PaintSpill4: qM,
        PaintSpill5: gM,
        PaintSpill6: yM,
        FoldLaundry1: bM,
        FoldLaundry2: vM,
        FoldLaundry3: wM,
        FoldLaundry4: xM,
        FoldLaundry5: kM,
        HavePicnic1: CM,
        HavePicnic2: RM,
        HavePicnic3: DM,
        HavePicnic4: SM,
        Mahjong1Step1: M2,
        Mahjong1Step2: O2,
        Mahjong1Step3: TM,
        Mahjong2Step1: EM,
        Mahjong2Step2: LM,
        Mahjong2Step3: BM,
        Mahjong2Step4: MM,
        Mahjong2Step5: OM,
        PlayShogi1: IM,
        PlayShogi2: PM,
        PlayShogi3: UM,
        PlayShogi4: FM,
        CheckMilkA1: QM,
        CheckMilkA2: U2,
        CheckMilkA3: F2,
        CheckMilkA4: zM,
        CheckMilkB1: HM,
        CheckMilkB2: NM,
        CheckMilkB3: GM,
        CheckMilkB4: XM,
        BugsStep1: YM,
        BugsStep2: KM,
        BugsStep3: WM,
        BugsStep4: JM,
        BugsStep5: ZM,
        PickUpStupidToy: _M,
        TossBear: $M,
        TossMarbles: eO,
        PickUpMarbles: tO,
        HelpOldLady: nO,
        PickUpLitter: iO,
        WearBadge: oO,
        TieKnots: sO,
        SquishAntsSlow: aO,
        SquishAntsFast: rO,
        SlimeSupplies: VO,
        SlimeMix: lO,
        SlimePlay: AO,
        SlimeSupplies2: cO,
        SlimeMix2: dO,
        SlimeFall: pO,
        SlimeHide: hO,
        HoseOn: tg,
        RunThroughSprinkler: uO,
        SprinklerRunMore: mO,
        PickToy1: fO,
        PickToy2: qO,
        ReturnToyBox: gO,
        BathStep1: yO,
        BathStep2: bO,
        BathStep3: vO,
        PickupMarble: wO,
        PullSling: xO,
        LetGo: kO,
        VaseRun: CO,
        VasePieces: RO,
        GlueVase: DO,
        HoldVase: SO,
        JumpRopeStep1: TO,
        JumpRopeStep2: EO,
        JumpRopeStep3: LO,
        JumpRopeStep4: BO,
        ToyCereal1Step1: z2,
        ToyCereal1Step2: H2,
        ToyCereal1Step3: N2,
        ToyCereal1Step4: MO,
        ToyCereal2Step1: OO,
        ToyCereal2Step2: IO,
        ToyCereal2Step3: PO,
        ToyCereal2Step4: UO,
        MakePBJ1: FO,
        MakePBJ2: jO,
        MakePBJ3: QO,
        MakePBJ4: zO,
        ColoringBook1: HO,
        ColoringBook2: NO,
        ColoringBook3: GO,
        PackBackpack1: XO,
        PackBackpack2: YO,
        PackBackpack3: KO,
        PackBackpack4: WO,
        PackBackpack5: JO,
        CapeRun1: ZO,
        CapeRun2: _O,
        CapeRun3: $O,
        CapeRun4: eI,
        CapeRun5: tI,
        MacaroniArt1: nI,
        MacaroniArt2: iI,
        MacaroniArt3: sI,
        PutOnShoes1: oI,
        PutOnShoes2: aI,
        PutOnShoes3: rI,
        SwingSet1: lI,
        SwingSet2: AI,
        SwingSet3: cI,
        SwingSet4: dI,
        Cartwheel1: pI,
        Cartwheel2: hI,
        Cartwheel3: uI,
        Cartwheel4: mI,
        Cartwheel5: fI,
        PaperLantern1Step1: qI,
        PaperLantern1Step2: gI,
        PaperLantern1Step3: yI,
        PaperLantern1Step4: bI,
        PaperLantern2Step1: vI,
        PaperLantern2Step2: wI,
        PaperLantern2Step3: xI,
        PaperLantern2Step4: kI,
        JuiceBox1: CI,
        JuiceBox2: RI,
        JuiceBox3: DI,
        JuiceBox4: SI,
        JuiceBox5: TI,
        LittleWagon1: EI,
        LittleWagon2: LI,
        LittleWagon3: BI,
        LittleWagon4: MI,
        LittleWagon5: OI,
        GrownupClothes1: II,
        GrownupClothes2: PI,
        GrownupClothes3: UI,
        GrownupClothes4: FI,
        GrownupClothes5: jI,
        FeedFish1Step1: x0,
        FeedFish1Step2: QI,
        FeedFish1Step3: zI,
        FeedFish2Step1: HI,
        FeedFish2Step2: NI,
        FeedFish2Step3: GI,
        FingerPainting1: XI,
        FingerPainting2: YI,
        FingerPainting3: KI,
        FingerPainting4: WI,
        PuppetShow1: JI,
        PuppetShow2: ZI,
        PuppetShow3: _I,
        PuppetShow4: $I,
        PuppetShow5: eP,
        RefuseNap1: yX,
        RefuseNap2: bX,
        RefuseNap3: vX,
        HalloweenCandy1: wX,
        HalloweenCandy2: xX,
        HalloweenCandy3: kX,
        ClothesHamper1: tP,
        ClothesHamper2: nP,
        MakeCollage1: iP,
        MakeCollage2: sP,
        MakeCollage3: oP,
        MakeCollage4: aP,
        IcePick: rP,
        IceMelt: VP,
        SprayCleaner: K2,
        ScrubMirror: lP,
        WipeClean: AP,
        CoffeeOpen: cP,
        CoffeeScoop: dP,
        CoffeeBrew: pP,
        CoffeeBurning: hP,
        LightCandles: uP,
        LookForSmell: mP,
        SmellOpenWindow: fP,
        MashAvocado: qP,
        SpreadAvocado: gP,
        OpenAC: yP,
        HoldAC: bP,
        ShoveAC: vP,
        CloseAC: wP,
        RepressEmotions: xP,
        GluePaper: kP,
        PastePaper: CP,
        PaperBubbles: RP,
        HoldPaper: DP,
        ShowerStep1: TP,
        ShowerStep2: EP,
        ShowerStep3: LP,
        TieStep1: MP,
        TieStep2: OP,
        TieStep3: IP,
        GarageButton: PP,
        GarageGunk: UP,
        GarageOpen: FP,
        GarageClose: jP,
        ClimbLadder: QP,
        OldBulb: zP,
        NewBulb: HP,
        ClimbLadderDirty: NP,
        DirtyBulb: GP,
        CleanBulb: XP,
        ReturnBulb: YP,
        CrustSide1: KP,
        CrustSide2: WP,
        CrustSide3: JP,
        CrustSide4: ZP,
        EatCrusts: _P,
        LiquidSoap1Step1: $P,
        LiquidSoap1Step2: eU,
        LiquidSoap1Step3: tU,
        LiquidSoap1Step4: nU,
        LiquidSoap1Step5: iU,
        LiquidSoap2Step1: sU,
        LiquidSoap2Step2: oU,
        LiquidSoap2Step3: aU,
        Smoothie1Step1: rU,
        Smoothie1Step2: VU,
        Smoothie1Step3: lU,
        Smoothie2Step1: AU,
        Smoothie2Step2: cU,
        Smoothie2Step3: dU,
        Smoothie2Step4: pU,
        FridgeLeaking1: hU,
        FridgeLeaking2: uU,
        FridgeLeaking3: mU,
        FridgeLeaking4: fU,
        BakeCake1: qU,
        BakeCake2: gU,
        BakeCake3: yU,
        BakeCake4: bU,
        BakeCake5: vU,
        ChangeCarOil1: wU,
        ChangeCarOil2: xU,
        ChangeCarOil3: kU,
        ChangeCarOil4: CU,
        ChangeCarOil5: RU,
        RollToothpaste1: DU,
        RollToothpaste2: SU,
        RollToothpaste3: TU,
        RollToothpaste4: EU,
        ShopVac1: LU,
        ShopVac2: BU,
        ShopVac3: MU,
        ShopVac4: OU,
        ShopVac5: IU,
        FilterStep1: PU,
        FilterStep2: UU,
        FilterStep3: FU,
        FilterStep4: jU,
        FilterStep5: QU,
        LotionStep1: zU,
        LotionStep2: HU,
        LotionStep3: NU,
        AlbumStep1: GU,
        AlbumStep2: XU,
        AlbumStep3: YU,
        AlbumStep4: KU,
        AlbumStep5: WU,
        AlbumStep6: JU,
        RemoveTire: J2,
        MoveTire: ZU,
        ReplaceTire: _U,
        OpenEnvelopes: $U,
        TossCatalogs: eF,
        ReunionReflect: tF,
        GatherForms: nF,
        ClaimDependents: iF,
        HideIncome: sF,
        SignTaxes: oF,
        BirdNests: aF,
        BirdMama: rF,
        BirdCoward: VF,
        BirdLease: lF,
        WipeCounter: AF,
        SprayCounter: cF,
        ScrubCounter: dF,
        HardScrubCounter: pF,
        ScrubJelly1: hF,
        ScrubJelly2: uF,
        ScrubJelly3: mF,
        LivingRoomStep1: Ua,
        LivingRoomStep2: qF,
        LivingRoomStep3: gF,
        LivingRoomStep4: yF,
        LivingRoomStep5: bF,
        LivingRoomStep6: vF,
        Grilling1Step1: ig,
        Grilling1Step2: pu,
        Grilling1Step3: wF,
        Grilling1Step4: xF,
        Grilling2Step1: ig,
        Grilling2Step2: pu,
        Grilling2Step3: kF,
        Grilling2Step4: Z2,
        Grilling2Step5: CF,
        FamPhotoStep1: RF,
        FamPhotoStep2: DF,
        FamPhotoStep3: SF,
        FamPhotoStep4: _2,
        AlcoholBottles: TF,
        HideBottles: EF,
        CeramicFigurines1: LF,
        CeramicFigurines2: BF,
        CeramicFigurines3: MF,
        CeramicFigurines4: OF,
        PayBills1: IF,
        PayBills2: PF,
        PayBills3: UF,
        PayBills4: FF,
        PayBills5: jF,
        ScreamingKids1: QF,
        ScreamingKids2: zF,
        ScreamingKids3: HF,
        ScreamingKids4: NF,
        ScreamingKids5: GF,
        AtticInsulation1: XF,
        AtticInsulation2: YF,
        AtticInsulation3: KF,
        AtticInsulation4: WF,
        LeakySink1: JF,
        LeakySink2: ZF,
        LeakySink3: _F,
        LeakySink4: $F,
        ZitStep1: ej,
        ZitStep2: tj,
        ZitStep3: nj,
        FindMelon: ij,
        HoldMelon: sj,
        KissMelon: oj,
        FrenchKissMelon: aj,
        Bobby: Vj,
        LiftIron1: lj,
        LiftIron2: Aj,
        LiftIron3: cj,
        CatchBreath: dj,
        StandAround: pj,
        StandAround2: hj,
        DeodorantStep1: uj,
        DeodorantStep2: mj,
        DeodorantStep3: fj,
        RewireSpeakers1: qj,
        RewireSpeakers2: gj,
        RewireSpeakers3: yj,
        RewireSpeakers4: bj,
        RewireSpeakers5: vj,
        PartyThrowUp1: wj,
        PartyThrowUp2: xj,
        PartyThrowUp3: kj,
        PartyThrowUp4: Cj,
        FixVCR1: Rj,
        FixVCR2: Dj,
        FixVCR3: Sj,
        FixVCR4: Tj,
        CrushBags: Ej,
        Squash: Lj,
        Hose: Bj,
        Scrub: Mj,
        Dry: Oj,
        FlipPage1: Ij,
        FlipPage2: Pj,
        FlipPageBack: Uj,
        HomeworkFlipTable: Fj,
        Rake1Step1: jj,
        Rake1Step2: Qj,
        Rake1Step3: zj,
        Rake2Step1: Hj,
        Rake2Step2: Nj,
        Rake2Step3: Gj,
        Rake2Step4: Xj,
        Circles: nb,
        BackForth: Kj,
        MowStart: Wj,
        MowSpot: Jj,
        MowTurnAround: Zj,
        MowMiss: _j,
        MowDone: $j,
        OrigamiCrane1: eQ,
        OrigamiCrane2: tQ,
        OrigamiCrane3: nQ,
        OrigamiCrane4: iQ,
        OrigamiCrane5: sQ,
        NewPants1: oQ,
        NewPants2: aQ,
        NewPants3: rQ,
        NewPants4: VQ,
        NewPants5: lQ,
        NewPants6: AQ,
        CoolFridgeStep1: u0,
        CoolFridgeStep2: P2,
        CoolFridgeStep3: jM,
        CookieStep1: cQ,
        CookieStep2: dQ,
        CookieStep3: pQ,
        DrawWallStep1: hQ,
        DrawWallStep2: uQ,
        DrawWallStep3: mQ,
        DrawWallStep4: fQ,
        CreekStep1: qQ,
        CreekStep2: gQ,
        CreekStep3: yQ,
        CreekStep4: bQ,
        WatchScaryMovie1: vQ,
        WatchScaryMovie2: wQ,
        WatchScaryMovie3: xQ,
        UnnecessaryQuestion1: kQ,
        UnnecessaryQuestion2: CQ,
        UnnecessaryQuestion3: RQ,
        YankCatsTail1: DQ,
        YankCatsTail2: SQ,
        YankCatsTail3: TQ,
        YankCatsTail4: EQ,
        YankCatsTail5: LQ,
        PoopPants1: MQ,
        WhereBabiesComeFrom1: OQ,
        WhereBabiesComeFrom2: IQ,
        WhereBabiesComeFrom3: ib,
        WhereBabiesComeFrom4: PQ,
        ClimbDangerousTree1: UQ,
        ClimbDangerousTree2: FQ,
        ClimbDangerousTree3: jQ,
        ClimbDangerousTree4: QQ,
        FloorIsLava1: zQ,
        FloorIsLava2: HQ,
        FloorIsLava3: sb,
        FloorIsLava4: NQ,
        FloorIsLava5: GQ,
        ReadDiary1: XQ,
        ReadDiary2: YQ,
        ReadDiary3: KQ,
        ReadDiary4: WQ,
        PillowFort1: JQ,
        PillowFort2: ZQ,
        PillowFort3: _Q,
        ThrowTantrum1: $Q,
        ThrowTantrum2: ez,
        ThrowTantrum3: tz,
        StairToys1: nz,
        StairToys2: iz,
        StairToys3: sz,
        StairToys4: oz,
        TossFootball1: az,
        TossFootball2: rz,
        TossFootball3: Vz,
        LearnCurse1: lz,
        LearnCurse2: Az,
        LearnCurse3: cz,
        StealCandy1: dz,
        StealCandy2: pz,
        StealCandy3: hz,
        StealCandy4: uz,
        PlayWithMatches1: mz,
        PlayWithMatches2: fz,
        PlayWithMatches3: qz,
        PlayWithMatches4: gz,
        BreakNewToy1: yz,
        BreakNewToy2: bz,
        BreakNewToy3: vz,
        BreakNewToy4: wz,
        BreakNewToy5: xz,
        SpinAround1: kz,
        SpinAround2: Cz,
        SpinAround3: Rz,
        SpinAround4: Dz,
        SwallowInedibleObjects1: Sz,
        SwallowInedibleObjects2: Tz,
        SwallowInedibleObjects3: Ez,
        SwallowInedibleObjects4: Lz,
        AdoptPet1: Bz,
        AdoptPet2: Mz,
        AdoptPet3: Oz,
        AdoptPet4: Iz,
        AdoptPet5: Pz,
        BuryMagnets1: Uz,
        BuryMagnets2: Fz,
        BuryMagnets3: jz,
        SocialMediaFight1: Qz,
        SocialMediaFight2: zz,
        SocialMediaFight3: Hz,
        SocialMediaFight4: Nz,
        TakeNap1: Gz,
        TakeNap2: Xz,
        TakeNap3: Yz,
        TakeNap4: Kz,
        TakeNap5: Wz,
        TakeNap6: Jz,
        TakeNap7: Zz,
        ToiletPhone1: _z,
        ToiletPhone2: $z,
        ToiletPhone3: eH,
        ToiletPhone4: tH,
        ToiletPhone5: nH,
        StareBlanklyOutWindow: iH,
        RomanceTimeStep1: sH,
        RomanceTimeStep2: oH,
        RomanceTimeStep3: aH,
        RomanceTimeStep4: rH,
        RomanceTimeStep5: VH,
        SwearWordStep1: lH,
        SwearWordStep2: AH,
        SwearWordStep3: cH,
        SwearWordStep4: dH,
        PourWineStep1: pH,
        PourWineStep2: hH,
        PourWineStep3: uH,
        AdultRadioStep1: mH,
        AdultRadioStep2: fH,
        AdultRadioStep3: qH,
        AdultRadioStep4: gH,
        HideAndSeek1: yH,
        HideAndSeek2: bH,
        HideAndSeek3: vH,
        IgnoreInLaws1: wH,
        IgnoreInLaws2: xH,
        IgnoreInLaws3: kH,
        IgnoreInLaws4: CH,
        CatchUpCall2: RH,
        CatchUpCall3: DH,
        CatchUpCall4: SH,
        BrewTea1: TH,
        BrewTea2: EH,
        BrewTea3: LH,
        BrewTea4: BH,
        BoringBook1: MH,
        BoringBook2: OH,
        BoringBook3: IH,
        BoringBook4: PH,
        MidlifeCrisis1: UH,
        MidlifeCrisis2: FH,
        MidlifeCrisis3: jH,
        MidlifeCrisis4: QH,
        SteamyRomanceNovel1: zH,
        SteamyRomanceNovel2: HH,
        SteamyRomanceNovel3: NH,
        SteamyRomanceNovel4: GH,
        WatchTelenovela1: XH,
        WatchTelenovela2: YH,
        WatchTelenovela3: KH,
        WatchTelenovela4: WH,
        StashCandy1: JH,
        StashCandy2: ZH,
        StashCandy3: _H,
        DonateToys1: $H,
        DonateToys2: eN,
        DonateToys3: tN,
        DonateToys4: nN,
        DonateToys5: iN,
        TrashMail1: sN,
        TrashMail2: oN,
        TrashMail3: aN,
        PostBabyPhotos1: rN,
        PostBabyPhotos2: VN,
        PostBabyPhotos3: lN,
        PostBabyPhotos4: AN,
        PostBabyPhotos5: cN,
        AloneInYard1: dN,
        AloneInYard2: pN,
        AloneInYard3: hN,
        AloneInYard4: uN,
        DisobeyDiet1: mN,
        DisobeyDiet2: fN,
        DisobeyDiet3: qN,
        DisobeyDiet4: gN,
        LongBath1: yN,
        LongBath2: bN,
        LongBath3: vN,
        LongBath4: wN,
        FlipTableDeed: kN,
        MagazineStep1: CN,
        MagazineStep2: RN,
        MagazineStep3: DN,
        SneakOutStep1: SN,
        SneakOutStep2: TN,
        SneakOutStep3: EN,
        SneakOutStep4: LN,
        CoasterStep1: BN,
        CoasterStep2: MN,
        CoasterStep3: ON,
        CoasterStep4: IN,
        GrandpaPolitics1: PN,
        GrandpaPolitics2: UN,
        GrandpaPolitics3: FN,
        GraphicTV1: jN,
        GraphicTV2: QN,
        GraphicTV3: zN,
        GraphicTV4: HN,
        HogBathroom1: NN,
        HogBathroom2: ob,
        HogBathroom3: GN,
        HogBathroom4: XN,
        UseUpData1: YN,
        UseUpData2: KN,
        UseUpData3: WN,
        UseUpData4: JN,
        UseUpData5: ZN,
        TrentTalk2: _N,
        TrentTalk3: $N,
        TrentTalk4: eG,
        TakeSelfie1: tG,
        TakeSelfie2: nG,
        TakeSelfie3: iG,
        BorrowCreditCard1: sG,
        BorrowCreditCard2: oG,
        BorrowCreditCard3: aG,
        BorrowCreditCard4: rG,
        BorrowCreditCard5: VG,
        IHateYou1: lG,
        IHateYou2: AG,
        IHateYou3: cG,
        Mope1: dG,
        Mope2: pG,
        Mope3: hG,
        Joyride1: uG,
        Joyride2: mG,
        Joyride3: fG,
        Joyride4: qG,
        HideToys1: gG,
        HideToys2: yG,
        HideToys3: bG,
        KpopShrine1: vG,
        KpopShrine2: wG,
        KpopShrine3: xG,
        KpopShrine4: kG,
        HideManga1: CG,
        HideManga2: RG,
        HideManga3: DG,
        VideoGameStep1: SG,
        VideoGameStep2: TG,
        ShootSpitball1: EG,
        ShootSpitball2: LG,
        KickMeSign1: BG,
        KickMeSign2: MG,
        KickMeSign3: OG,
        KickMeSign4: IG,
        LeaveMilkOut1: PG,
        LeaveMilkOut2: UG,
        LeaveMilkOut3: FG,
        AlterReportCard1: jG,
        AlterReportCard2: QG,
        AlterReportCard3: zG,
        DisrespectElders1: HG,
        DisrespectElders2: NG,
        DisrespectElders3: GG,
        Wait: XG,
        Unplug: YG,
        PlugIn: KG,
        Works: WG,
        OpenHood: JG,
        Look: ZG,
        Hit: _G,
        Realize: $G,
        LookClose: eX,
        Remember: tX,
        ThinkPrank1: nX,
        ThinkPrank2: iX,
        OrderCake2: sX,
        OrderCake3: oX,
        OrderCake4: aX,
        CableBundle2: rX,
        CableBundle3: VX,
        CableBundle4: lX,
        CableBundle5: AX,
        CancelDinner1: cX,
        CancelDinner2: dX,
        AnimalControl1: pX,
        AnimalControl2: hX,
        AnimalControl3: uX,
        CancelMagazine1: mX,
        CancelMagazine2: fX,
        RestaurantReservation1: qX,
        RestaurantReservation3: gX,
        LearnDrums1: CX,
        LearnDrums2: RX,
        LearnDrums3: DX,
        LearnDrums4: SX,
        PlayBass1: TX,
        PlayBass2: EX,
        PlayBass3: LX,
        PlayBass4: BX,
        JamOut: OX,
        AlbumCover1: IX,
        AlbumCover2: PX,
        AlbumCover3: UX,
        AlbumCover4: FX,
        Autographs1: jX,
        Autographs2: pb,
        Autographs3: QX,
        Autographs4: zX,
        ReunionShow: NX,
        SecretMarinade1: GX,
        SecretMarinade2: XX,
        SecretMarinade3: YX,
        SecretMarinade4: KX,
        SecretMarinade5: WX,
        LightUpGrill1: dm,
        LightUpGrill2: JX,
        LightUpGrill3: ZX,
        LightUpGrill4: _X,
        LightUpGrill5: $X,
        BurnReportCard1: eY,
        BurnReportCard2: tY,
        BurnReportCard3: nY,
        BurnReportCard4: iY,
        WorkTheGrill1: sY,
        WorkTheGrill2: oY,
        WorkTheGrill3: aY,
        WorkTheGrill4: rY,
        WorkTheGrill5: VY,
        BeachRadio1: hb,
        BeachRadio2: ub,
        BeachRadio3: mb,
        BeachRadio4: AY,
        PourSand: dY,
        BeachBalls1: pY,
        BeachBalls2: fb,
        BeachBalls3: hY,
        BeachBalls4: uY,
        BeachBalls5: mY,
        TropicalBeverage1: fY,
        TropicalBeverage2: qY,
        TropicalBeverage3: gY,
        BeachOcean1: yY,
        BeachOcean2: bY,
        BeachOcean3: vY,
        BeachOcean4: wY,
        BeachFlirt1: xY,
        BeachFlirt2: kY,
        BeachFlirt3: CY,
        BeachFlirt4: RY,
        BeachLimbo1: DY,
        BeachLimbo2: SY,
        BeachLimbo3: TY,
        BeachLimbo4: EY,
        BeachShells1: LY,
        BeachShells2: BY,
        BeachShells3: MY,
        BeachShells4: OY,
        FamilyTan: PY,
        BeachACParty1: UY,
        BeachACParty2: FY,
        BeachACParty3: jY,
        BeachACParty4: QY,
        PickUpBalloons: zY,
        BlowUp: HY,
        ArrangeBalloons: NY,
        AdmireArch: GY,
        GoodTissues: XY,
        GearUpChaperone: YY,
        DabShaving: KY,
        CarefulShave: WY,
        BloodyShave: JY,
        RinseOffShave: ZY,
        SwipeThroughDisguises: _Y,
        StackKids: $Y,
        KeepBalance: eK,
        WalkAdult: tK,
        ReadTut: nK,
        InspectFlower: iK,
        BabyBreath: sK,
        Dashing: oK,
        SayCheese: aK,
        SillyOne: rK,
        OneMore: VK,
        OneMoreMore: lK,
        TouchShoulders: AK,
        MoreSpace: cK,
        EvenMoreSpace: dK,
        Sway: pK,
        ShakeStink: hK,
        PullPin: uK,
        TossStink: mK,
        CheeseIt: fK,
        ThoughtfulDiscussion: qK,
        ConsiderPoint: gK,
        DefendPosition: yK,
        LeavePeacefully: bK,
        LipsReady: vK,
        AimLips: wK,
        LipsFire: xK,
        BracesLocked: kK,
        DigOutBook: CK,
        BlowDustBook: RK,
        FlipBirdBook: DK,
        AbsorbBird: SK,
        CloseBook: TK,
        CramBossMeal: EK,
        CheckTeeth: LK,
        OpenDoorBoss: BK,
        TapToes: MK,
        SashayLeft: OK,
        SashayRight: IK,
        BigFinish: PK,
        GreetCousin1: FK,
        RompoPhoto: QK,
        CousinGutters1: zK,
        CousinGutters2: HK,
        CousinGutters3: NK,
        CousinGutters4: GK,
        DishesCousin1: WK,
        DishesCousin2: JK,
        DishesCousin3: ZK,
        DishesCousin4: _K,
        MakeSamosaCousin1: $K,
        MakeSamosaCousin2: eW,
        MakeSamosaCousin3: tW,
        MakeSamosaCousin4: nW,
        PutOutFireCousin1: iW,
        PutOutFireCousin2: sW,
        PutOutFireCousin3: oW,
        HideFromCousin1: aW,
        HideFromCousin2: rW,
        HideFromCousin3: VW,
        VacuumCousin1: lW,
        VacuumCousin2: AW,
        VacuumCousin3: cW,
        VacuumCousin4: dW,
        LocalNews1: pW,
        LocalNews2: hW,
        LocalNews3: uW,
        TryGronk1: mW,
        TryGronk2: vb,
        TryGronk3: fW,
        TryGronk4: qW,
        GronkPSA1: gW,
        GronkPSA2: yW,
        GronkPSA3: bW,
        SpyTeenGronk1: vW,
        SpyTeenGronk2: wW,
        SpyTeenGronk3: xW,
        SpyTeenGronk4: kW,
        HideGronk1: CW,
        HideGronk2: RW,
        HideGronk3: DW,
        SkipSchoolGronk1: SW,
        SkipSchoolGronk2: TW,
        SkipSchoolGronk3: EW,
        GronkConversation: BW,
        QuitGronk1: MW,
        QuitGronk2: OW,
        QuitGronk3: IW,
        GronkPledge1: PW,
        GronkPledge2: UW,
        Telescope1: xb,
        Telescope2: FW,
        Telescope3: jW,
        Telescope4: QW,
        Telescope5: zW,
        WarnFamily1: HW,
        WarnFamily2: NW,
        WarnFamily3: GW,
        WarnFamily4: XW,
        NoticeAsteroid1: YW,
        NoticeAsteroid2: Cb,
        NoticeAsteroid3: Rb,
        NoticeAsteroid4: KW,
        AsteroidNews: JW,
        AsteroidFIRE: _W,
        WelcomeStudent1: $W,
        WelcomeStudent2: eJ,
        WelcomeStudent3: tJ,
        IntellectualConvo1: nJ,
        IntellectualConvo2: iJ,
        IntellectualConvo3: sJ,
        IntellectualConvo4: oJ,
        RearrangeBookcase1: aJ,
        RearrangeBookcase2: rJ,
        RearrangeBookcase3: VJ,
        RearrangeBookcase4: lJ,
        CollegeApEx1: AJ,
        CollegeApEx2: cJ,
        CollegeApEx3: dJ,
        CollegeApEx4: pJ,
        Glower1: hJ,
        Glower2: uJ,
        Glower3: mJ,
        Glower4: fJ,
        Glower5: qJ,
        DeadLizard1: gJ,
        DeadLizard2: yJ,
        DeadLizard3: bJ,
        DeadLizard4: vJ,
        PlayPretendEx1: wJ,
        PlayPretendEx2: xJ,
        PlayPretendEx3: kJ,
        PlayPretendEx4: CJ,
        FameAudition1: RJ,
        FameAudition2: DJ,
        FameAudition3: SJ,
        FameAudition4: TJ,
        FameAuditionParent1: EJ,
        FameAuditionParent2: LJ,
        FameAuditionParent3: BJ,
        FameAuditionParent4: MJ,
        SneakFilmSet1: OJ,
        SneakFilmSet2: IJ,
        SneakFilmSet3: PJ,
        SneakFilmSet4: UJ,
        FameShowUpHotel1: FJ,
        FameShowUpHotel2: jJ,
        TakeSelfieBilly1: QJ,
        TakeSelfieBilly2: zJ,
        TakeSelfieBilly3: HJ,
        TakeSelfieBilly4: NJ,
        TakeSelfieBilly5: GJ,
        TakeSelfieBilly6: XJ,
        SignAutographs: YJ,
        LookLeft: Sb,
        LookRight: KJ,
        OpenDiary: WJ,
        DiscoverBoo: JJ,
        RemovePhotos: _J,
        ReadyCam: $J,
        WaitSmile1: eZ,
        WaitSmile2: tZ,
        TakeWhatYouGet: nZ,
        QuickRun: iZ,
        JumpCar: sZ,
        BangShin: oZ,
        WaitUp: rZ,
        CloseCarDoor: VZ,
        Turn1: lZ,
        Turn2: AZ,
        SkipDoor: cZ,
        WrapGift: dZ,
        TapeDown: pZ,
        UnspoolRibbon: hZ,
        Bow: uZ,
        CramGrandmaMeal: mZ,
        GrandmaBlowCandles: qZ,
        BatSnack1: gZ,
        BatSnack2: yZ,
        BatSnack3: bZ,
        BatVacuum1: vZ,
        BatVacuum2: wZ,
        BatVacuum3: xZ,
        SearchBat1: kZ,
        SearchBat2: CZ,
        SearchBat3: RZ,
        SearchBat4: DZ,
        LayBatTrap1: SZ,
        LayBatTrap2: TZ,
        LayBatTrap3: EZ,
        CatchBatBlanket1: LZ,
        CatchBatBlanket2: BZ,
        CatchBatBlanket3: MZ,
        CatchBatBlanket4: OZ,
        WatchBatTrap1: IZ,
        WatchBatTrap2: PZ,
        WatchBatTrap3: UZ,
        WatchBatTrap4: FZ,
        ChantSpell: QZ,
        PickUpSticks: HZ,
        PruneHedges: GZ,
        BuildKissingBench1: XZ,
        BuildKissingBench2: Tb,
        BuildKissingBench3: YZ,
        BuildKissingBench4: KZ,
        WaterLawn1: WZ,
        WaterLawn2: JZ,
        WaterLawn3: ZZ,
        RockGarden1: _Z,
        RockGarden2: $Z,
        RockGarden3: e_,
        MutantFlower: n_,
        RaiseTips1: i_,
        RaiseTips2: s_,
        RaiseTips3: o_,
        RaiseTips4: a_,
        SetUpLemonade1: r_,
        SetUpLemonade2: V_,
        SetUpLemonade3: Eb,
        SetUpLemonade4: l_,
        LemonadeCustomer1: A_,
        LemonadeCustomer2: c_,
        LemonadeCustomer3: d_,
        LemonadeCustomer4: p_,
        LemonadeCustomer5: h_,
        MysteryFootprints1: u_,
        MysteryFootprints2: m_,
        MysteryFootprints3: f_,
        MysteryFootprints4: q_,
        WackyGhostChase: y_,
        MysteryPapers1: b_,
        MysteryPapers2: v_,
        MysteryPapers3: w_,
        HideWaitGhost: k_,
        UnmaskGhost1: C_,
        UnmaskGhost2: R_,
        NameOnCar1: D_,
        NameOnCar2: S_,
        NewCarFamilyPhoto: E_,
        BackpackBugs1: L_,
        BackpackBugs2: B_,
        BackpackBugs3: M_,
        BackpackBugs4: O_,
        BackpackBugs5: I_,
        GiveApple1: P_,
        GiveApple2: U_,
        GiveApple3: F_,
        GiveApple4: j_,
        GiveApple5: Q_,
        DoubleDutch1: z_,
        DoubleDutch2: H_,
        DoubleDutch3: N_,
        DoubleDutch4: G_,
        DoubleDutch5: X_,
        ShamePE1: Y_,
        ShamePE2: K_,
        ShamePE3: W_,
        ShamePE4: J_,
        ShamePE5: Z_,
        ReminisceSchool1: __,
        ReminisceSchool2: $_,
        ReminisceSchool3: e$,
        ReminisceSchool4: t$,
        Declare2: n$,
        Declare3: i$,
        PowerOutfit1: s$,
        PowerOutfit2: o$,
        PowerOutfit3: a$,
        PowerOutfit4: r$,
        IceCreamProtest1: V$,
        IceCreamProtest2: l$,
        IceCreamProtest3: A$,
        ChurnIceCream: d$,
        MakeSigns1: p$,
        MakeSigns2: h$,
        MakeSigns3: u$,
        MakeSigns4: m$,
        SneakSigns1: f$,
        SneakSigns2: q$,
        SneakSigns3: g$,
        SneakStash1: y$,
        SneakStash2: b$,
        SneakStash3: v$,
        SneakStash4: w$,
        SneakStash5: x$,
        BigSpeech1: k$,
        BigSpeech2: C$,
        BigSpeech3: R$,
        DecorateCampaign1: D$,
        DecorateCampaign2: S$,
        DecorateCampaign3: T$,
        DecorateCampaign4: E$,
        SwimDryLand1: L$,
        SwimDryLand2: B$,
        SwimDryLand3: M$,
        InviteFriendsPool2: O$,
        InviteFriendsPool3: I$,
        BuildPool1: P$,
        BuildPool2: U$,
        KidContractor1: F$,
        KidContractor2: j$,
        KidContractor3: Q$,
        KidContractor4: z$,
        KidContractor5: H$,
        KidContractor6: N$,
        FillPool: X$,
        Sunscreen1: Y$,
        Sunscreen2: Pb,
        Sunscreen3: K$,
        Sunscreen4: W$,
        DivingMove1: J$,
        DivingMove2: Z$,
        DivingMove3: _$,
        FitInPool1: $$,
        FitInPool2: eee,
        TakeTempPox1: tee,
        TakeTempPox2: nee,
        TakeTempPox3: iee,
        BlowNosePox1: see,
        BlowNosePox2: oee,
        BlowNosePox3: aee,
        BlowNosePox4: ree,
        ImpressDoctor1: Vee,
        ImpressDoctor2: lee,
        ImpressDoctor3: Aee,
        ImpressDoctor4: cee,
        PoxGoToBed: pee,
        ReportCardFridge1: hee,
        ReportCardFridge2: uee,
        ReportCardFridge3: mee,
        ChangeReportCard1: fee,
        ChangeReportCard2: qee,
        ChangeReportCard3: gee,
        ChangeReportCard4: yee,
        TakeTeenPhone1: bee,
        TakeTeenPhone2: vee,
        TakeTeenPhone3: wee,
        TakeTeenPhone4: xee,
        StealBackPhone1: kee,
        StealBackPhone2: Cee,
        StealBackPhone3: Ree,
        StealBackPhone4: Dee,
        DigOutReportCards1: See,
        DigOutReportCards2: Tee,
        DigOutReportCards3: Eee,
        DigOutReportCards4: Lee,
        EduGame: Mee,
        SignUpStageManage1: Oee,
        SignUpStageManage2: Iee,
        SignUpStageManage3: Pee,
        SignUpStageManage4: Uee,
        CastSheet1: Fee,
        CastSheet2: jee,
        CastSheet3: Qee,
        CastSheet4: zee,
        LongLostStar1: Hee,
        LongLostStar2: Nee,
        LongLostStar3: Gee,
        LongLostStar4: Xee,
        SewKidCostume1: Yee,
        SewKidCostume2: Kee,
        SewKidCostume3: Wee,
        SewKidCostume4: Jee,
        SewOtherCostumes1: jb,
        SewOtherCostumes2: Zee,
        SewOtherCostumes3: _ee,
        ImpressTheater1: $ee,
        ImpressTheater2: ete,
        ImpressTheater3: tte,
        ImpressTheater4: nte,
        Hecklers1: ite,
        Hecklers2: ste,
        Hecklers3: ote,
        Hecklers4: ate,
        SitActI: Vte,
        SaveShow1: lte,
        SaveShow2: Ate,
        SaveShow3: cte,
        SaveShow4: dte,
        SkipDummy1: pte,
        SkipDummy2: hte,
        SkipDummy3: ute,
        SkipDummy4: mte,
        PeaceQuiet1: fte,
        PeaceQuiet2: qte,
        PeaceQuiet3: gte,
        PeaceQuiet4: yte,
        ColliderFuel1: bte,
        ColliderFuel2: vte,
        ColliderFuel3: wte,
        ColliderFuel4: xte,
        GorgeSkip1: kte,
        GorgeSkip2: Cte,
        GorgeSkip3: Rte,
        GorgeSkip4: Dte,
        FlipChannelsScary: Ste,
        ChainsawTV: Tte,
        GripPillow: Ete,
        HideEyes: Lte,
        LoadCoffee1: Bte,
        LoadCoffee2: Mte,
        LoadCoffee3: Ote,
        LoadCoffee4: Ite,
        SlumberSneakKid1: Pte,
        SlumberSneakKid2: Ute,
        SlumberSneakKid3: Fte,
        SlumberSneakKid4: jte,
        SlumberScareKids1: Qte,
        SlumberScareKids2: zte,
        SlumberScareKids3: Hte,
        SlumberScareKids4: Nte,
        SlumberSound1: Gte,
        SlumberSound2: Xte,
        SlumberSound3: Yte,
        SlumberSound4: Kte,
        SlumberBedTime: Jte,
        HangOutGarage1: Zte,
        HangOutGarage2: _te,
        HangOutGarage3: $te,
        SlumberQuiet1: ene,
        SlumberQuiet2: tne,
        SlumberQuiet3: nne,
        SlumberStayUp1: ine,
        SlumberStayUp2: sne,
        SlumberStayUp3: one,
        SlumberBedTimeSeriously: rne,
        Centrifuge: lne,
        SpaceSwim1: Ane,
        SpaceSwim2: cne,
        SpaceSwim3: dne,
        SpaceSwim4: pne,
        PoochoPromo1: une,
        PoochoPromo2: mne,
        BlastOff: qne,
        TCDecideCapsule1: gne,
        TCDecideCapsule2: yne,
        TCDecideCapsule3: bne,
        TCDecideCapsule4: vne,
        TCDecideCapsule5: wne,
        HideTaxPapers1: xne,
        HideTaxPapers2: kne,
        HideTaxPapers3: Cne,
        HideTaxPapers4: Rne,
        ComplainTC1: Dne,
        ComplainTC2: Sne,
        ComplainTC3: Tne,
        ComplainTC4: Ene,
        WriteLetterSelfKid1: Lne,
        WriteLetterSelfKid2: Bne,
        WriteLetterSelfKid3: Mne,
        WriteLetterSelfKid4: One,
        WriteLetterSelfTeen1: Ine,
        WriteLetterSelfTeen2: Pne,
        WriteLetterSelfTeen3: Une,
        WriteLetterSelfParent1: Fne,
        WriteLetterSelfParent2: jne,
        WriteLetterSelfParent3: Qne,
        WriteLetterSelfParent4: zne,
        DigUp90sTC1: Hne,
        DigUp90sTC2: Nne,
        SlapBracelet1: Gne,
        SlapBracelet2: Xne,
        SlapBracelet3: Yne,
        DenimJacket1: Kne,
        DenimJacket2: Wne,
        DenimJacket3: Jne,
        Chew90sGum1: Zne,
        Chew90sGum2: _ne,
        Chew90sGum3: $ne,
        Chew90sGum4: eie,
        Chew90sGum5: tie,
        Read90sComic1: nie,
        Read90sComic2: iie,
        Read90sComic3: sie,
        Read90sComic4: oie,
        TrimTreeBranches1: aie,
        TrimTreeBranches2: rie,
        TrimTreeBranches3: Vie,
        RaisePanel: Aie,
        HammerBoards1: cie,
        HammerBoards2: die,
        HammerBoards3: pie,
        PaintTreehouse1: hie,
        PaintTreehouse2: uie,
        PaintTreehouse3: mie,
        SpyTree1: fie,
        SpyTree2: qie,
        SpyTree3: gie,
        MakeOutBooTree1: zb,
        MakeOutBooTree2: Hb,
        MakeOutBooTree3: yie,
        MakeOutPartnerTree1: vie,
        MakeOutPartnerTree2: wie,
        MakeOutPartnerTree3: xie,
        TreeCracks1: kie,
        TreeCracks2: Cie,
        TreeCracks3: Rie,
        DuctTapeTree1: Die,
        DuctTapeTree2: Sie,
        DuctTapeTree3: Tie,
        DuctTapeTree4: Eie,
        GorboMoveDen1: Lie,
        GorboMoveDen2: Bie,
        GorboMoveDen3: Mie,
        GorboMoveDen4: Oie,
        GorboMoveDen5: Iie,
        GorboStory1: Pie,
        GorboStory2: Uie,
        GorboStory3: Fie,
        GorboStory4: jie,
        GorboStory5: Qie,
        GorboDoc1: zie,
        GorboDoc2: Hie,
        GorboDoc3: Nie,
        SleepDen1: Gie,
        SleepDen2: Xie,
        SleepDen3: Yie,
        SleepDen4: Kie,
        GorboOoze1: Wie,
        GorboOoze2: Jie,
        GorboOoze3: Zie,
        PassportPhotos: $ie,
        FireEmergency: Yse,
        FloodEmergency: Wse,
        PowerEmergency: Kse,
        LockOutEmergency: Zse,
        TermiteEmergency: Jse,
        InstructionsBikeDeed: ese,
        ShopToiletPaper1: tse,
        PaperAirplane1: nse,
        MagicTrick1: ise,
        TieBowtie1: sse,
        BrimstoneStew: ose,
        TVBrightness2: ase,
        RideBike1: rse,
        InstallBirdFeeder1: Vse,
        AssemblePatioFurniture1: lse,
        TeaParty1: Ase,
        PlayPretend1: cse,
        PayAllowance1: dse,
        DemonicPuzzle2: pse,
        InstructionsDance1: hse,
        InstructionsKidDance1: use,
        InstructionsGarbageDisposal1: mse,
        InstructionsHair1: fse,
        InstructionsPaint1: qse,
        BakingSodaVolcano: gse,
        PickOutfitDance: yse,
        Choreography: bse,
        RecordSingle: vse,
        MakeParisBudget: wse,
        PackParisSuitcase: xse,
        GorboMuseum1: kse,
        OrderPoolParts: Cse,
        PoolBlueprints: Rse,
        SawWood: Dse,
        MakePresentationRaise: Sse,
        FilmBigScene: Tse,
        ShutDownCollider: Ese,
        ExamineMachine: Lse,
        MysteryGhostTrap: Bse,
        Topiary: Mse,
        PlantExoticFlowers: Ose,
        CousinRoof: Ise,
        MakeHousePresentable: Pse,
        Melancholy: Use,
        TeaRevenge: Fse,
        CarMaintenance: jse,
        HideCarScratch: Qse,
        EmbarrassKids: zse,
        UnfoldTable: Hse,
        HideMeatShortage: Nse,
        OxygenScrubber: Gse,
        AssembleBatTrap: Xse,
        AudienceSpawnScratchChair: _se,
        AudienceSpawnShowClaws: $se,
        AudienceClipClaws1: eoe,
        AudienceSpawnDartOut: toe,
        AudienceSpawnEatBugs: noe,
        AudienceGiveKittyTreat1: ioe,
        AudienceGiveKittyTreat2: soe,
        AudienceGiveKittyTreat3: ooe,
        AudienceSpawnPawWater: XK,
        AudienceGetWater1: yb,
        AudienceGetWater2: YK,
        AudienceGetWater3: KK,
        AudienceSpawnDestroyLitter: aoe,
        AudienceCleanLitter1: roe,
        AudienceSpawnLayOnLaptop: Voe,
        AudienceMoveKitty1: loe,
        AudienceSpawnShowBelly: Aoe,
        AudiencePetKitty1: coe,
        AudiencePetKitty2: doe,
        AudienceSpawnKnockItems: poe,
        AudiencePickUp1: hoe,
        AudienceSpawnPoseForPic: uoe,
        AudienceTakeKittyPic1: moe,
        AudienceTakeKittyPic2: foe,
        AudienceTakeKittyPic3: qoe,
        AudienceTakeKittyPic4: goe,
        AudienceSpawnFightVacuum: yoe,
        AudienceSpawnVomit: boe,
        Search: voe,
        CancelerAdult: woe,
        CancelerChild: xoe,
        CancelerTeen: koe,
        HoldTest: Roe,
        NothingTest: Doe,
        RotateTest: Soe,
        ScrubTest: Toe,
        SwipeTest: Eoe,
        TapTest: Loe,
        HoldDefault: Boe,
        InstructionsDefault: Moe,
        NothingDefault: Ooe,
        RotateDefault: Ioe,
        ScrubDefault: Poe,
        SwipeDefault: Uoe,
        TapDefault: Foe,
        Default: joe
    };
class Qoe {
    static getScene(e) {
        const n = e.get("scene"),
            i = e.get("deed"),
            o = e.get("state");
        if (n && Yn[n]) return new Yn[n]({
            model: e
        });
        if (i && Yn[i]) return new Yn[i]({
            model: e
        });
        switch (o) {
            case "HoldMechanic":
                return new Yn.HoldDefault({
                    model: e
                });
            case "InstructionsMechanicCaptain":
                return new Yn.InstructionsDefault({
                    model: e
                });
            case "NothingMechanic":
                return new Yn.NothingDefault({
                    model: e
                });
            case "SwipeMechanic":
                return new Yn.SwipeDefault({
                    model: e
                });
            case "TapMechanic":
                return new Yn.TapDefault({
                    model: e
                });
            case "TapResultingMechanic":
                return new Yn.TapDefault({
                    model: e
                });
            case "RotateMechanic":
                return new Yn.RotateDefault({
                    model: e
                });
            case "ScrubMechanic":
                return new Yn.ScrubDefault({
                    model: e
                });
            default:
                return new Yn.Default({
                    model: e
                })
        }
    }
}
const zoe = `<div id="gesture-ui" class="gestures scene-box-wrapper">
    <div id="scene-region" class="scene scene-box"></div>
    <div id="target-ui" class="target"></div>
</div>
<div class="progress">
    <div class="progress-bar"></div>
</div>
<svg class="pie" viewBox="0 0 28 28">
    <circle r="25%" cx="50%" cy="50%"></circle>
</svg>
<div class="info"></div>
<div class="demo-finger"></div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    Hoe = Ht.extend({
        defaults: {
            scene: null
        }
    }),
    Vs = je.View.extend({
        template: ke.template(zoe),
        model: new Hoe,
        progressType: "auto",
        useGestures: !1,
        useTaps: !1,
        gestureRegion: null,
        sceneView: null,
        autoInterval: null,
        autoIntervalLength: 50,
        isReady: !1,
        ui: {
            gesture: null,
            target: null
        },
        regions: {
            scene: "#scene-region"
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ":el": {
                classes: {
                    demo: "showDemo"
                }
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".pie": {
                classes: {
                    hidden: {
                        observe: "totalSteps",
                        onGet(t) {
                            return !t || t <= 1
                        }
                    }
                }
            },
            ".scene-box-wrapper": {
                classes: {
                    full: "isFullScreen"
                }
            },
            ".info": {
                observe: ["infoText", "mistakeText", "isWaiting"],
                updateMethod: "html",
                onGet([t, e]) {
                    return e || t || ""
                },
                classes: {
                    mistake: "mistake",
                    waiting: "isWaiting",
                    complete: "isComplete"
                }
            },
            ".progress-bar": {
                attributes: [{
                    name: "style",
                    observe: ["progress", "stepDuration"],
                    onGet(t) {
                        let e = "";
                        return t[0] && (e += `width: ${t[0]}%;`), t[1] && (e += `transition-duration: ${t[1]}s;`), e
                    }
                }]
            },
            ".pie circle": {
                attributes: [{
                    name: "style",
                    observe: ["stepIndex", "totalSteps"],
                    onGet([t, e]) {
                        return `stroke-dasharray: ${42/e*t} 42;`
                    }
                }]
            },
            ".demo-finger": {
                attributes: [{
                    name: "class",
                    observe: "demoClass",
                    onGet(t) {
                        return t || ""
                    }
                }]
            }
        },
        initialize() {
            this.listenTo(this.model, "change:stepId", this.onStepIdChange)
        },
        onRender() {
            this.stickit()
        },
        onAttach() {
            this.ui.gesture = this.$el.find("#gesture-ui")[0], this.ui.target = this.$el.find("#target-ui")[0], this.useGestures && (this.bindGestureRegion(), this.bindGestures()), this.useTaps && this.bindTaps(), this.setupRoot(), this.checkForDemo()
        },
        onBeforeDestroy() {
            this.usesGestures && this.unbindGestureRegion(), this.clearProgressTimer(), this.willDestroy()
        },
        willDestroy() {},
        onStepIdChange() {
            !this.isReady || this.setupRoot()
        },
        setupRoot() {
            !this.isAttached() || (this.sceneView && this.sceneView.destroy(), this.isReady = !0, this.model.setUpdate({
                showDemo: !1,
                progress: 0,
                elapsedInMs: 0,
                isComplete: !1,
                mistakeText: null,
                mistake: !1
            }), this.setup(), this.showScene(), this.onSetupComplete())
        },
        setup() {},
        showScene() {
            this.sceneView = Qoe.getScene(this.model), this.model.set({
                isFullScreen: this.sceneView.isFullScreen
            }), this.progressType === "interactive" && (this.sceneView.stepDuration = 0), this.progressType === "auto" && (this.sceneView.stepDuration = .05), this.showChildView("scene", this.sceneView)
        },
        onSetupComplete() {},
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        bindGestureRegion() {
            this.gestureRegion = new yi.Region(this.ui.gesture)
        },
        unbindGestureRegion() {
            this.gestureRegion.unbind(this.ui.gesture)
        },
        bindGestures() {},
        bindTaps() {
            this.delegateEvents(Object.assign(this.events, {
                "touchstart .target": "onTouchStart",
                "touchend .target": "onTouchEnd",
                "mousedown .target": "onTouchStart",
                "mouseup .target": "onTouchEnd"
            }))
        },
        onTouchStart(t) {
            t.preventDefault(), this.onTapStart()
        },
        onTouchEnd(t) {
            t.preventDefault(), this.onTapEnd()
        },
        onTapStart() {},
        onTapEnd() {},
        startProgressTimer() {
            this.autoInterval || (this.autoInterval = window.setInterval(this.onProgressTimerInterval.bind(this), this.autoIntervalLength)), this.model.get("elapsedInMs") === void 0 && this.model.setUpdate({
                elapsedInMs: 0
            }), this.rewindingAtRate = null, this.sceneView && this.sceneView.onStartProgress()
        },
        clearProgressTimer() {
            !this.autoInterval || (window.clearInterval(this.autoInterval), this.autoInterval = null)
        },
        stopProgressTimer(t, e) {
            if (t) {
                this.rewindingAtRate = t;
                return
            }
            this.autoInterval && (e || this.model.setUpdate({
                elapsedInMs: 0,
                progress: 0
            }), this.clearProgressTimer()), this.sceneView && this.sceneView.onStopProgress()
        },
        onProgressTimerInterval() {
            if (this.model.get("isComplete")) {
                this.clearProgressTimer();
                return
            }
            const t = this.rewindingAtRate ? this.model.get("elapsedInMs") - this.autoIntervalLength * this.rewindingAtRate : this.model.get("elapsedInMs") + this.autoIntervalLength,
                e = this.model.get("durationInMs"),
                n = this.model.get("progress"),
                i = t / e * 100;
            this.model.setUpdate({
                elapsedInMs: t,
                progress: i
            }), i <= 0 && (this.model.setUpdate({
                elapsedInMs: 0,
                progress: 0,
                rewindingAtRate: null
            }), this.clearProgressTimer()), i >= 100 && (this.model.setUpdate({
                elapsedInMs: e,
                progress: 100,
                isComplete: !0
            }), this.clearProgressTimer(), this.onTimeBasedSuccess()), this.sceneView && this.sceneView.onProgress(i, n)
        },
        onTimeBasedSuccess() {},
        checkForDemo() {
            if (!this.demoKey) return;
            !Jt.get(`datd:demos:${this.demoKey}`) && (this.model.setUpdate({
                showDemo: !0
            }), Jt.set(`datd:demos:${this.demoKey}`, !0))
        }
    }),
    Noe = `<div id="gesture-ui" class="gestures scene-box-wrapper">
    <div id="scene-region" class="scene scene-box"></div>
    <div id="target-ui" class="target"></div>
</div>
<div class="clamp">
    <div class="ask"></div>
    <div class="info"></div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    Goe = Ht.extend({
        defaults: {
            infoText: "",
            isComplete: !1,
            isRotating: !1,
            rotateTarget: 720,
            degreesRotated: 0,
            isSwiping: !1,
            isTapping: !1,
            tapCount: 0,
            isHolding: !1,
            elapsedInMs: 0,
            durationInMs: 2e3
        },
        hasSignificantRotation() {
            const t = this.get("rotateTarget"),
                e = this.get("degreesRotated");
            return Math.abs(e) > t / 2
        },
        hasSignificantScrub() {
            return this.get("distanceScrubbed") > 500
        }
    }),
    Xoe = Vs.extend({
        className: "mechanic gesture instructions captain",
        template: ke.template(Noe),
        model: new Goe,
        useGestures: !0,
        useTaps: !1,
        tapTimeout: null,
        tapTimeoutLength: 500,
        rotateTimeout: null,
        rotateTimeoutLength: 150,
        successText: ["NICE ONE", "GOT IT", "GOOD JOB", "GREAT WORK", "WELL DONE"],
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": "stepInstructions",
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: ["infoText", "isWaiting"],
                onGet([t, e]) {
                    return e ? "WAIT" : t || ""
                },
                classes: {
                    waiting: "isWaiting",
                    success: "isSuccess",
                    mistake: "isMistake"
                }
            },
            ".ask": {
                observe: "participant",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Ask <span class="player-name ${t.avatar}">${t.name}</span> what to do.` : ""
                },
                classes: {
                    conceal: {
                        observe: ["infoText", "isWaiting"],
                        onGet([t, e]) {
                            return t || e
                        }
                    }
                }
            }
        },
        initialize() {
            this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                isWaiting: !1
            })
        },
        onMistakeCheck(t) {
            !this.model.get("isWaiting") || !this.sceneView || (this.sceneView.resetToStep(this.model.get("currentStepIndex")), this.model.setUpdate({
                isWaiting: !1
            }), t.changed.currentStepIndex === void 0 ? this.triggerMethod("result", {
                type: "fail",
                message: "TRY<br/>AGAIN"
            }) : (this.model.setUpdate({
                isWaiting: !1,
                isSuccess: !0,
                infoText: ke.sample(this.successText)
            }), setTimeout(() => {
                this.model.set({
                    infoText: null,
                    isSuccess: !1
                })
            }, 1e3)))
        },
        bindGestures() {
            const t = new yi.Tap;
            t.start = this.onTapStart.bind(this, !1), t.end = this.onTapEnd.bind(this, !1), this.gestureRegion.bind(this.ui.target, t, this.onTapEnd.bind(this), !0);
            const e = new yi.Rotate;
            e.end = this.onRotateEnd.bind(this, !1), this.gestureRegion.bind(this.ui.target, e, this.onRotate.bind(this), !0);
            const n = new yi.Swipe;
            n.end = this.onSwipeEnd, this.gestureRegion.bind(this.ui.target, n, this.onSwipe.bind(this))
        },
        onTapStart() {
            this.tapTimeout && (clearTimeout(this.tapTimeout), this.tapTimeout = null);
            const t = this.model.get("tapCount");
            this.model.setUpdate({
                isTapping: !0,
                tapCount: t + 1
            }), this.tapTimeout = setTimeout(this.onTapTimeout.bind(this), this.tapTimeoutLength), this.sceneView.onTapDown(), this.startProgressTimer(), this.model.setUpdate({
                isHolding: !0
            })
        },
        onTapEnd() {
            this.sceneView.onTapUp(), this.stopProgressTimer(0), this.model.setUpdate({
                isTapping: !1,
                isHolding: !1,
                degreesRotated: 0
            }), this.sceneView.onRotation(0)
        },
        onTapTimeout() {
            const t = this.model.get("isHolding"),
                e = this.model.get("isRotating"),
                n = this.model.get("isScrubbing"),
                i = this.model.get("isSwiping");
            !t && !e && !n && !i && this.sendTap(this.model.get("tapCount")), this.model.setUpdate({
                isSwiping: !1,
                tapCount: 0
            }), this.tapTimeout = null
        },
        onTimeBasedSuccess() {
            if (this.model.hasSignificantRotation() || this.model.hasSignificantScrub()) {
                this.stopProgressTimer(0), this.model.setUpdate({
                    isComplete: !1,
                    elapsedInMs: 0,
                    progress: 0
                });
                return
            }
            this.sendHold()
        },
        onRotateStart() {
            this.model.setUpdate({
                isRotating: !0
            }), this.rotateTimeout = setTimeout(() => {
                clearTimeout(this.rotateTimeout), this.rotateTimeout = null
            }, this.rotateTimeoutLength)
        },
        onRotate(t) {
            if (this.model.get("isComplete")) return;
            this.model.get("isRotating") || this.onRotateStart();
            const e = t.detail,
                n = this.model.get("degreesRotated") + e.distanceFromLast;
            this.model.setUpdate({
                degreesRotated: n
            }), n >= this.model.get("rotateTarget") && this.sendRotate("clockwise"), n <= -this.model.get("rotateTarget") && this.sendRotate("counter"), this.model.setUpdate({
                degreesRotated: n
            }), !this.rotateTimeout && this.sceneView.onRotation(n)
        },
        onRotateEnd() {
            !this.model.get("isRotating") || this.model.setUpdate({
                isRotating: !1,
                degreesRotated: 0,
                distanceScrubbed: 0,
                lastPosition: null
            })
        },
        getSwipeRadians(t) {
            let e = 0;
            return t === "UP" && (e = 270), t === "DOWN" && (e = 90), t === "LEFT" && (e = 180), t === "RIGHT" && (e = 0), e * (Math.PI / 180)
        },
        getSwipeDirection(t) {
            return t > 45 && t < 135 ? "UP" : t > 225 && t < 315 ? "DOWN" : t > 135 && t < 225 ? "LEFT" : t < 45 || t > 315 ? "RIGHT" : null
        },
        onSwipeEnd(t) {
            const e = yi.Swipe.prototype.end.apply(this, [t]);
            if (e) return e;
            const n = t[0];
            if (!n.progress.swipe || !n.progress.swipe.moves || n.progress.swipe.moves.length < 5) return !1;
            const i = n.initial.x - n.current.x,
                o = n.initial.y - n.current.y,
                r = Math.abs(i),
                V = Math.abs(o);
            return r > V ? {
                data: [{
                    currentDirection: i > 0 ? 180 : 360
                }]
            } : {
                data: [{
                    currentDirection: o > 0 ? 90 : 270
                }]
            }
        },
        onSwipe(t) {
            if (this.model.get("isComplete") || this.tapTimeout === null) return;
            this.model.setUpdate({
                isSwiping: !0
            });
            const e = this.getSwipeDirection(t.detail.data[0].currentDirection),
                n = this.getSwipeRadians(e);
            this.sceneView.onSwipe(n), setTimeout(() => {
                this.sendSwipe(e)
            }, 250)
        },
        sendRotate(t) {
            if (!this.model.get("isComplete")) {
                if (this.model.setUpdate({
                        isComplete: !0
                    }), t === "clockwise") {
                    this.send("ROTATE_CLOCK");
                    return
                }
                this.send("ROTATE_COUNTER")
            }
        },
        sendTap(t) {
            if (!this.model.get("isComplete")) {
                if (t === 1) {
                    this.model.setUpdate({
                        isComplete: !0
                    }), this.send("TAP");
                    return
                }
                this.model.setUpdate({
                    isComplete: !0
                }), this.send("TAP_3")
            }
        },
        sendHold() {
            this.send("TAP_HOLD")
        },
        sendSwipe(t) {
            if (!this.model.get("isComplete")) {
                if (this.model.setUpdate({
                        isComplete: !0
                    }), t === "UP") {
                    this.send("SWIPE_UP");
                    return
                }
                if (t === "LEFT") {
                    this.send("SWIPE_LEFT");
                    return
                }
                if (t === "RIGHT") {
                    this.send("SWIPE_RIGHT");
                    return
                }
                this.send("SWIPE_DOWN")
            }
        },
        send(t) {
            this.triggerMethod("client:message", {
                action: t
            }), this.tapTimeout && (clearTimeout(this.tapTimeout), this.tapTimeout = null), this.rotateTimeout && (clearTimeout(this.rotateTimeout), this.rotateTimeout = null), this.stopProgressTimer(), this.model.setUpdate({
                isHolding: !1,
                isRotating: !1,
                isScrubbing: !1,
                isSwiping: !1,
                isWaiting: !0
            })
        }
    }),
    Yoe = `<div class="scrollable">
    <div class="clamp">
        <div class="info"></div>
        <div class="steps"></div>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    Koe = je.View.extend({
        className: "mechanic instructions participant",
        template: ke.template(Yoe),
        model: new Ht,
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "captain",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Give <span class="player-name ${t.avatar}">${t.name}</span> these instructions. Steps will be crossed off as they\u2019re completed.` : ""
                }
            },
            ".steps": {
                observe: ["steps", "currentStepIndex"],
                updateMethod: "html",
                onGet([t, e]) {
                    if (!t) return "";
                    let n = "<ol>";
                    return t.forEach((i, o) => {
                        let r = "step";
                        o < e && (r += " complete"), o === e && (r += " active"), n += `<li class="${r}">${this.getStepText(i)}</li>`
                    }), n += "</ol>", n
                }
            }
        },
        onRender() {
            this.stickit()
        },
        getStepText(t) {
            switch (t.mechanic) {
                case "ROTATE_CLOCK":
                    return `${t.instructions} by rotating right twice`;
                case "ROTATE_COUNTER":
                    return `${t.instructions} by rotating left twice`;
                case "TAP":
                    return `${t.instructions} by tapping once`;
                case "TAP_3":
                    return `${t.instructions} by triple tapping`;
                case "TAP_HOLD":
                    return `${t.instructions} by tapping and holding for 3 seconds`;
                case "SWIPE_UP":
                    return `${t.instructions} by swiping up`;
                case "SWIPE_DOWN":
                    return `${t.instructions} by swiping down`;
                case "SWIPE_LEFT":
                    return `${t.instructions} by swiping left`;
                case "SWIPE_RIGHT":
                    return `${t.instructions} by swiping right`;
                default:
                    return ""
            }
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    Woe = je.View.extend({
        tagName: "button",
        className: "button location",
        template: ke.template('<div class="name"></div>'),
        prefixes: ["LOOK", "CHECK", "SEARCH"],
        events: {
            click: "onClick"
        },
        bindings: {
            ".name": "name"
        },
        onRender() {
            this.stickit()
        },
        onClick() {
            this.triggerMethod("button:select", this.model)
        }
    }),
    Joe = je.CollectionView.extend({
        tagName: "div",
        className: "locations",
        childView: Woe,
        collection: new ze.Collection
    }),
    hu = Vs.extend({
        className: "mechanic gesture scrub",
        progressType: "interactive",
        demoKey: "scrub",
        useGestures: !0,
        useTaps: !1,
        isPanning: !1,
        distanceMap: {
            xShort: 1e3,
            short: 3e3,
            medium: 5e3,
            long: 8e3,
            xLong: 11e3
        },
        setup() {
            const t = this.model.get("distance"),
                e = this.distanceMap[t] || 5e3;
            this.model.setUpdate({
                infoText: "SCRUB",
                distanceInPx: e,
                lastDistance: 0,
                distanceScrubbed: 0
            })
        },
        bindGestures() {
            const t = new yi.Pan;
            t.end = this.onPanEnd.bind(this), this.gestureRegion.bind(this.ui.target, t, this.onPan.bind(this))
        },
        onPanStart() {
            this.isPanning = !0, this.sceneView.onStartProgress()
        },
        onPan(t) {
            if (this.model.get("isComplete")) return;
            t.detail.data.length > 1 && console.warn("Multitouch not supported"), this.isPanning || this.onPanStart();
            const e = t.detail.data[0],
                n = this.model.get("distanceInPx"),
                i = e.distanceFromOrigin,
                o = this.model.get("lastDistance"),
                r = Math.abs(i - o),
                V = this.model.get("distanceScrubbed") + r,
                A = V / n * 100;
            this.model.setUpdate({
                progress: A,
                distanceScrubbed: V,
                lastDistance: i
            }), A >= 100 && (this.model.setUpdate({
                progress: 100,
                isComplete: !0
            }), this.onComplete()), this.sceneView.onProgress(A)
        },
        onPanEnd() {
            this.isPanning = !1, this.sceneView.onStopProgress()
        },
        onComplete() {
            const t = this.sceneView.lastStepDuration;
            setTimeout(() => {
                this.triggerMethod("client:message", {
                    action: "success"
                })
            }, t * 1e3)
        }
    }),
    Zoe = `
    <div id="gesture-ui" class="gestures scene-box-wrapper">
        <div id="scene-region" class="scene scene-box"></div>
        <div id="target-ui" class="target"></div>
    </div>
    <div class="progress">
        <div class="progress-bar"></div>
    </div>
    <div class="info">SCRUB TO SEARCH</div>
`,
    _oe = hu.extend({
        className: "gesture scrub",
        template: ke.template(Zoe),
        initialize(t) {
            this.model.setUpdate({
                distance: "xshort",
                scene: "Search",
                category: "none"
            }), hu.prototype.initialize.apply(this, [t])
        },
        onMistake() {
            this.sceneView.model.set({
                isMistake: !0
            })
        },
        onComplete() {
            this.triggerMethod("search:complete", this.model)
        }
    }),
    $oe = `<div class="scrollable">
    <div class="clamp">
        <div class="wrapper">
            <div class="info"></div>
            <div id="locations-region"></div>
        </div>
    </div>
</div>
<div id="searching-region"></div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    eae = Ht.extend({
        selectedLocation() {
            const t = this.get("searching");
            return t ? this.get("locations").find(n => n.id === t) : null
        }
    }),
    sg = je.View.extend({
        className: "mechanic search",
        template: ke.template($oe),
        model: new eae,
        locationsView: null,
        searchingView: null,
        regions: {
            locations: "#locations-region",
            searching: "#searching-region"
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ":el": {
                classes: {
                    searching: "searching"
                }
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "name",
                onGet(t) {
                    return `Tap any location to search for ${t}`
                }
            },
            ".leave": {
                classes: {
                    back: {
                        observe: "searching",
                        onGet: t => t
                    }
                }
            }
        },
        initialize() {
            this.model.setUpdate({
                searching: null,
                isRevealing: !1
            }), this.locationsView = new Joe, this.listenTo(this.model, "change", this.update, this), this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck)
        },
        update() {
            const t = this.model.get("locations");
            this.locationsView.collection.set(t)
        },
        onRender() {
            this.showChildView("locations", this.locationsView), this.stickit()
        },
        returnToLocations() {
            this.$el.scrollTop(0), this.searchingView && (this.searchingView.destroy(), this.searchingView = null), this.model.setUpdate({
                searching: null,
                isRevealing: !1
            })
        },
        onMistakeCheck(t) {
            !t.get("isWaiting") || !t.get("searching") || (this.model.setUpdate({
                isWaiting: !1,
                isRevealing: !0
            }), this.searchingView.onMistake(), setTimeout(() => {
                this.returnToLocations()
            }, 750))
        },
        onLeaveClick() {
            if (!this.model.get("isRevealing")) {
                if (!this.model.get("searching")) {
                    this.triggerMethod("client:message", {
                        action: "leaveTask"
                    });
                    return
                }
                this.returnToLocations()
            }
        },
        onChildviewSearchComplete() {
            this.model.setUpdate({
                isWaiting: !0
            }), this.triggerMethod("client:message", {
                action: "check",
                locationId: this.model.get("searching")
            })
        },
        onChildviewChildviewButtonSelect(t) {
            this.model.get("searching") || (this.searchingView = new _oe, this.showChildView("searching", this.searchingView), this.model.setUpdate({
                searching: t.get("id")
            }), this.searchingView.sceneView.model.set({
                isMistake: !1
            }), this.searchingView.model.setUpdate({
                location: this.model.selectedLocation().name
            }))
        }
    }),
    tae = `<div class="clamp">
    <div class="info"></div>
    <div class="word"></div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    nae = je.View.extend({
        className: "mechanic text captain",
        template: ke.template(tae),
        model: new Ht,
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "participant",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Read <span class="player-name ${t.avatar}">${t.name}</span> this word. Spelling and spaces count!` : ""
                }
            },
            ".word": "correctText"
        },
        onRender() {
            this.stickit()
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    iae = `<div class="clamp">
    <div class="info"></div>
    <form>
        <input type="text" name="word" placeholder="ENTER WORD" maxlength=40
            autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/>
        <button type="submit" class="button submit">SUBMIT</button>
    </form>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>`,
    sae = je.View.extend({
        className: "mechanic text participant",
        template: ke.template(iae),
        model: new Ht,
        events: {
            "submit form": "onSubmitClick",
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: "captain",
                updateMethod: "html",
                onGet(t) {
                    return t ? `Ask <span class="player-name ${t.avatar}">${t.name}</span> for the word you need.` : ""
                }
            },
            "input[name=word]": "word",
            ".submit": {
                attributes: [{
                    name: "disabled",
                    observe: "word",
                    onGet(t) {
                        return t === ""
                    }
                }]
            }
        },
        initialize() {
            this.listenTo(this.model, "change:mistakeCheck", this.onMistakeCheck), this.listenTo(this.model, "change:stepIndex", this.resetData), this.listenTo(this.model, "change:isPaused", this.isPaused), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                isWaiting: !1,
                word: ""
            })
        },
        onRender() {
            this.stickit()
        },
        onMistakeCheck(t) {
            !t.get("isWaiting") || (this.model.setUpdate({
                isWaiting: !1
            }), this.triggerMethod("result", {
                type: "fail",
                message: "TRY<br/>AGAIN"
            }))
        },
        isPaused(t, e) {
            e && document.activeElement.blur()
        },
        onSubmitClick(t) {
            if (t.preventDefault(), this.model.get("isWaiting")) return;
            this.model.setUpdate({
                isWaiting: !0
            });
            const e = this.model.get("word");
            this.triggerMethod("client:message", {
                action: "answer",
                text: e.trim().toUpperCase()
            })
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    ur = {
        wo: {
            point: {
                x: 1096.98,
                y: 68.7
            },
            connections: [{
                to: "wm",
                direction: "n",
                path: "M1118.28,163.6c-7.64-34.06-14.96-66.68-21.3-94.9",
                distance: 97.26,
                isReverse: !1
            }, {
                to: "ak",
                direction: "e",
                path: "M1096.96 68.7,L952.64 105.64",
                distance: 148.97,
                isReverse: !0
            }, {
                to: "wn",
                direction: "w",
                path: "M1240.14 32.06,L1096.96 68.7",
                distance: 147.79,
                isReverse: !1
            }]
        },
        wn: {
            point: {
                x: 1240.14,
                y: 32.06
            },
            connections: [{
                to: "wl",
                direction: "n",
                path: "M1261.5 127.24,L1240.14 32.06",
                distance: 97.55,
                isReverse: !1
            }, {
                to: "wo",
                direction: "e",
                path: "M1240.14 32.06,L1096.96 68.7",
                distance: 147.79,
                isReverse: !0
            }]
        },
        wm: {
            point: {
                x: 1118.28,
                y: 163.6
            },
            connections: [{
                to: "wo",
                direction: "s",
                path: "M1118.28,163.6c-7.64-34.06-14.96-66.68-21.3-94.9",
                distance: 97.26,
                isReverse: !0
            }, {
                to: "wj",
                direction: "n",
                path: "M1139.52,258.22c-7.02-31.26-14.26-63.54-21.24-94.6",
                distance: 96.96,
                isReverse: !1
            }, {
                to: "wl",
                direction: "w",
                path: "M1261.5 127.26,L1118.28 163.6",
                distance: 147.76,
                isReverse: !1
            }, {
                to: "aj",
                direction: "e",
                path: "M1118.28 163.62,L973.86 200.26",
                distance: 149,
                isReverse: !0
            }]
        },
        wl: {
            point: {
                x: 1261.5,
                y: 127.24
            },
            connections: [{
                to: "wn",
                direction: "s",
                path: "M1261.5 127.24,L1240.14 32.06",
                distance: 97.55,
                isReverse: !0
            }, {
                to: "wi",
                direction: "n",
                path: "M1282.72 221.88,L1261.5 127.24",
                distance: 96.99,
                isReverse: !1
            }, {
                to: "wk",
                direction: "w",
                path: "M1419 87.26,L1261.5 127.26",
                distance: 162.5,
                isReverse: !1
            }, {
                to: "wm",
                direction: "e",
                path: "M1261.5 127.26,L1118.28 163.6",
                distance: 147.76,
                isReverse: !0
            }]
        },
        wk: {
            point: {
                x: 1419,
                y: 87.26
            },
            connections: [{
                to: "wh",
                direction: "n",
                path: "M1458.02,177.42c-12.72-28.9-26.68-60.98-39-90.16",
                distance: 98.23,
                isReverse: !1
            }, {
                to: "wl",
                direction: "e",
                path: "M1419 87.26,L1261.5 127.26",
                distance: 162.5,
                isReverse: !0
            }]
        },
        wh: {
            point: {
                x: 1457.86,
                y: 177.36
            },
            connections: [{
                to: "wk",
                direction: "s",
                path: "M1458.02,177.42c-12.72-28.9-26.68-60.98-39-90.16",
                distance: 98.23,
                isReverse: !0
            }, {
                to: "wi",
                direction: "e",
                path: "M1458.18 177.34,L1282.72 221.88",
                distance: 181.02,
                isReverse: !0
            }]
        },
        wj: {
            point: {
                x: 1139.52,
                y: 258.22
            },
            connections: [{
                to: "wm",
                direction: "s",
                path: "M1139.52,258.22c-7.02-31.26-14.26-63.54-21.24-94.6",
                distance: 96.96,
                isReverse: !0
            }, {
                to: "wg",
                direction: "n",
                path: "M1160.76,352.82c-6.4-28.52-13.7-60.98-21.24-94.6",
                distance: 96.96,
                isReverse: !1
            }, {
                to: "wi",
                direction: "w",
                path: "M1282.72 221.88,L1139.52 258.22",
                distance: 147.74,
                isReverse: !1
            }]
        },
        wi: {
            point: {
                x: 1282.72,
                y: 221.88
            },
            connections: [{
                to: "wf",
                direction: "n",
                path: "M1304.16,316.44c-11.94-53.02-21.44-94.56-21.44-94.56",
                distance: 96.96,
                isReverse: !1
            }, {
                to: "wl",
                direction: "s",
                path: "M1282.72 221.88,L1261.5 127.24",
                distance: 96.99,
                isReverse: !0
            }, {
                to: "wj",
                direction: "e",
                path: "M1282.72 221.88,L1139.52 258.22",
                distance: 147.74,
                isReverse: !0
            }, {
                to: "wh",
                direction: "w",
                path: "M1458.18 177.34,L1282.72 221.88",
                distance: 181.02,
                isReverse: !1
            }]
        },
        wg: {
            point: {
                x: 1160.76,
                y: 352.82
            },
            connections: [{
                to: "wj",
                direction: "s",
                path: "M1160.76,352.82c-6.4-28.52-13.7-60.98-21.24-94.6",
                distance: 96.96,
                isReverse: !0
            }, {
                to: "we",
                direction: "n",
                path: "M1183.5,454.28c-0.48-2.38-0.98-4.72-1.5-7.04c-3.36-14.9-11.22-49.86-21.24-94.42",
                distance: 103.98,
                isReverse: !1
            }, {
                to: "wf",
                direction: "w",
                path: "M1304.16 316.44,L1160.76 352.82",
                distance: 147.94,
                isReverse: !1
            }, {
                to: "ah",
                direction: "e",
                path: "M1160.76 352.82,L1016.32 389.48",
                distance: 149.02,
                isReverse: !0
            }]
        },
        wf: {
            point: {
                x: 1304.16,
                y: 316.44
            },
            connections: [{
                to: "wi",
                direction: "s",
                path: "M1304.16,316.44c-11.94-53.02-21.44-94.56-21.44-94.56",
                distance: 96.96,
                isReverse: !0
            }, {
                to: "wd",
                direction: "n",
                path: "M1330.32,433.76c-8.32-37.88-17.84-80.38-26.16-117.32",
                distance: 120.2,
                isReverse: !1
            }, {
                to: "wg",
                direction: "e",
                path: "M1304.16 316.44,L1160.76 352.82",
                distance: 147.94,
                isReverse: !0
            }]
        },
        we: {
            point: {
                x: 1183.5,
                y: 454.28
            },
            connections: [{
                to: "wg",
                direction: "s",
                path: "M1183.5,454.28c-0.48-2.38-0.98-4.72-1.5-7.04c-3.36-14.9-11.22-49.86-21.24-94.42",
                distance: 103.98,
                isReverse: !0
            }, {
                to: "wb",
                direction: "n",
                path: "M1192.8,595.3c0,0,2.98-79.76-9.3-141.02",
                distance: 141.59,
                isReverse: !1
            }, {
                to: "wd",
                direction: "w",
                path: "M1330.32,433.76c-50.28,4.9-101.54,12.6-146.82,20.54",
                distance: 148.29,
                isReverse: !1
            }]
        },
        wd: {
            point: {
                x: 1330.32,
                y: 433.76
            },
            connections: [{
                to: "wf",
                direction: "s",
                path: "M1330.32,433.76c-8.32-37.88-17.84-80.38-26.16-117.32",
                distance: 120.2,
                isReverse: !0
            }, {
                to: "wa",
                direction: "n",
                path: "M1358.54,681.26c2.6-49.36-3.14-142.96-14.54-184.02c-3.7-17.66-8.46-39.66-13.68-63.48",
                distance: 250.03,
                isReverse: !1
            }, {
                to: "we",
                direction: "e",
                path: "M1330.32,433.76c-50.28,4.9-101.54,12.6-146.82,20.54",
                distance: 148.29,
                isReverse: !0
            }]
        },
        wb: {
            point: {
                x: 1192.8,
                y: 595.3
            },
            connections: [{
                to: "we",
                direction: "s",
                path: "M1192.8,595.3c0,0,2.98-79.76-9.3-141.02",
                distance: 141.59,
                isReverse: !0
            }, {
                to: "af",
                direction: "e",
                path: "M1192.8,595.3c-80.22-27.12-134-16.6-134-16.6",
                distance: 136.2,
                isReverse: !0
            }, {
                to: "wa",
                direction: "w",
                path: "M1358.54,681.26c-23.18-12.4-50.18-29.16-90.54-52.02c-26.82-15.2-52.12-26.14-75.2-33.94",
                distance: 187.05,
                isReverse: !1
            }]
        },
        wa: {
            point: {
                x: 1358.54,
                y: 681.26
            },
            connections: [{
                to: "wd",
                direction: "s",
                path: "M1358.54,681.26c2.6-49.36-3.14-142.96-14.54-184.02c-3.7-17.66-8.46-39.66-13.68-63.48",
                distance: 250.03,
                isReverse: !0
            }, {
                to: "wb",
                direction: "e",
                path: "M1358.54,681.26c-23.18-12.4-50.18-29.16-90.54-52.02c-26.82-15.2-52.12-26.14-75.2-33.94",
                distance: 187.05,
                isReverse: !0
            }]
        },
        ey: {
            point: {
                x: 211.94,
                y: 63.24
            },
            connections: [{
                to: "ev",
                direction: "n",
                path: "M219.14,157.24c-1.52-40.42-3.82-74.5-7.22-94",
                distance: 94.33,
                isReverse: !1
            }, {
                to: "bl",
                direction: "e",
                path: "M211.94 63.24,L74.52 63.24",
                distance: 137.42,
                isReverse: !0
            }, {
                to: "ex",
                direction: "w",
                path: "M335.46 63.24,L211.94 63.24",
                distance: 123.52,
                isReverse: !1
            }]
        },
        ex: {
            point: {
                x: 335.46,
                y: 63.24
            },
            connections: [{
                to: "ew",
                direction: "w",
                path: "M477.46 26.64,L335.46 63.24",
                distance: 146.64,
                isReverse: !1
            }, {
                to: "eu",
                direction: "n",
                path: "M356.46 157.14,L335.46 63.24",
                distance: 96.22,
                isReverse: !1
            }, {
                to: "ey",
                direction: "e",
                path: "M335.46 63.24,L211.94 63.24",
                distance: 123.52,
                isReverse: !0
            }]
        },
        ew: {
            point: {
                x: 477.46,
                y: 26.64
            },
            connections: [{
                to: "ex",
                direction: "e",
                path: "M477.46 26.64,L335.46 63.24",
                distance: 146.64,
                isReverse: !0
            }, {
                to: "et",
                direction: "n",
                path: "M498.98 120.9,L477.46 26.64",
                distance: 96.69,
                isReverse: !1
            }]
        },
        ev: {
            point: {
                x: 219.1,
                y: 157.24
            },
            connections: [{
                to: "eq",
                direction: "n",
                path: "M221.36,251.24c-0.42-32.56-1.12-64.92-2.22-94",
                distance: 94.03,
                isReverse: !1
            }, {
                to: "ey",
                direction: "s",
                path: "M219.14,157.24c-1.52-40.42-3.82-74.5-7.22-94",
                distance: 94.33,
                isReverse: !0
            }, {
                to: "eu",
                direction: "w",
                path: "M356 157.24,L219.1 157.24",
                distance: 136.9,
                isReverse: !1
            }]
        },
        eu: {
            point: {
                x: 356,
                y: 157.24
            },
            connections: [{
                to: "ev",
                direction: "e",
                path: "M356 157.24,L219.1 157.24",
                distance: 136.9,
                isReverse: !0
            }, {
                to: "et",
                direction: "w",
                path: "M498.98 120.9,L356.46 157.14",
                distance: 147.06,
                isReverse: !1
            }, {
                to: "ep",
                direction: "n",
                path: "M377.54 251.34,L356.46 157.14",
                distance: 96.53,
                isReverse: !1
            }, {
                to: "ex",
                direction: "s",
                path: "M356.46 157.14,L335.46 63.24",
                distance: 96.22,
                isReverse: !0
            }]
        },
        et: {
            point: {
                x: 498.98,
                y: 120.9
            },
            connections: [{
                to: "eu",
                direction: "e",
                path: "M498.98 120.9,L356.46 157.14",
                distance: 147.06,
                isReverse: !0
            }, {
                to: "es",
                direction: "w",
                path: "M644.2 84,L498.98 120.9",
                distance: 149.83,
                isReverse: !1
            }, {
                to: "ew",
                direction: "s",
                path: "M498.98 120.9,L477.46 26.64",
                distance: 96.69,
                isReverse: !0
            }, {
                to: "eo",
                direction: "n",
                path: "M520.5 215.14,L498.98 120.9",
                distance: 96.67,
                isReverse: !1
            }]
        },
        es: {
            point: {
                x: 644.2,
                y: 84
            },
            connections: [{
                to: "et",
                direction: "e",
                path: "M644.2 84,L498.98 120.9",
                distance: 149.83,
                isReverse: !0
            }, {
                to: "er",
                direction: "w",
                path: "M787.82 47.52,L644.2 84",
                distance: 148.18,
                isReverse: !1
            }, {
                to: "en",
                direction: "n",
                path: "M665.78 178.44,L644.2 84",
                distance: 96.87,
                isReverse: !1
            }]
        },
        er: {
            point: {
                x: 787.82,
                y: 47.52
            },
            connections: [{
                to: "es",
                direction: "e",
                path: "M787.82 47.52,L644.2 84",
                distance: 148.18,
                isReverse: !0
            }, {
                to: "al",
                direction: "w",
                path: "M931.42 11.02,L787.82 47.52",
                distance: 148.17,
                isReverse: !1
            }, {
                to: "em",
                direction: "n",
                path: "M808.82 142.08,L787.82 47.52",
                distance: 96.86,
                isReverse: !1
            }]
        },
        eq: {
            point: {
                x: 221.28,
                y: 251.24
            },
            connections: [{
                to: "el",
                direction: "n",
                path: "M221.96,347.24c0-30.08-0.16-63.14-0.6-96",
                distance: 96,
                isReverse: !1
            }, {
                to: "ev",
                direction: "s",
                path: "M221.36,251.24c-0.42-32.56-1.12-64.92-2.22-94",
                distance: 94.03,
                isReverse: !0
            }, {
                to: "bj",
                direction: "e",
                path: "M221.28 251.24,L80 251.24",
                distance: 141.28,
                isReverse: !0
            }, {
                to: "ep",
                direction: "w",
                path: "M378 251.24,L221.28 251.24",
                distance: 156.72,
                isReverse: !1
            }]
        },
        ep: {
            point: {
                x: 378,
                y: 251.24
            },
            connections: [{
                to: "eq",
                direction: "e",
                path: "M378 251.24,L221.28 251.24",
                distance: 156.72,
                isReverse: !0
            }, {
                to: "eo",
                direction: "w",
                path: "M520.5 215.14,L378 251.24",
                distance: 147,
                isReverse: !1
            }, {
                to: "ek",
                direction: "n",
                path: "M398.96 347.02,L377.54 251.34",
                distance: 98.05,
                isReverse: !1
            }, {
                to: "eu",
                direction: "s",
                path: "M377.54 251.34,L356.46 157.14",
                distance: 96.53,
                isReverse: !0
            }]
        },
        eo: {
            point: {
                x: 520.5,
                y: 215.14
            },
            connections: [{
                to: "ep",
                direction: "e",
                path: "M520.5 215.14,L378 251.24",
                distance: 147,
                isReverse: !0
            }, {
                to: "en",
                direction: "w",
                path: "M665.76 178.34,L520.5 215.14",
                distance: 149.85,
                isReverse: !1
            }, {
                to: "et",
                direction: "s",
                path: "M520.5 215.14,L498.98 120.9",
                distance: 96.67,
                isReverse: !0
            }, {
                to: "ej",
                direction: "n",
                path: "M542 309.24,L520.5 215.14",
                distance: 96.52,
                isReverse: !1
            }]
        },
        en: {
            point: {
                x: 665.76,
                y: 178.34
            },
            connections: [{
                to: "eo",
                direction: "e",
                path: "M665.76 178.34,L520.5 215.14",
                distance: 149.85,
                isReverse: !0
            }, {
                to: "em",
                direction: "w",
                path: "M808.82 142.08,L665.76 178.34",
                distance: 147.58,
                isReverse: !1
            }, {
                to: "es",
                direction: "s",
                path: "M665.78 178.44,L644.2 84",
                distance: 96.87,
                isReverse: !0
            }]
        },
        em: {
            point: {
                x: 808.82,
                y: 142.08
            },
            connections: [{
                to: "en",
                direction: "e",
                path: "M808.82 142.08,L665.76 178.34",
                distance: 147.58,
                isReverse: !0
            }, {
                to: "ak",
                direction: "w",
                path: "M952.64 105.64,L808.82 142.08",
                distance: 148.36,
                isReverse: !1
            }, {
                to: "er",
                direction: "s",
                path: "M808.82 142.08,L787.82 47.52",
                distance: 96.86,
                isReverse: !0
            }]
        },
        el: {
            point: {
                x: 221.96,
                y: 347.12
            },
            connections: [{
                to: "eq",
                direction: "s",
                path: "M221.96,347.24c0-30.08-0.16-63.14-0.6-96",
                distance: 96,
                isReverse: !0
            }, {
                to: "ei",
                direction: "n",
                path: "M221.22,469.24c0,0,0.76-53.26,0.74-122",
                distance: 122,
                isReverse: !1
            }, {
                to: "ek",
                direction: "w",
                path: "M398.96 347.02,L221.96 347.12",
                distance: 177,
                isReverse: !1
            }]
        },
        ek: {
            point: {
                x: 398.96,
                y: 347.02
            },
            connections: [{
                to: "ej",
                direction: "w",
                path: "M542 309.24,L398.96 347.02",
                distance: 147.95,
                isReverse: !1
            }, {
                to: "eg",
                direction: "n",
                path: "M420.04 441.22,L398.96 347.02",
                distance: 96.53,
                isReverse: !1
            }, {
                to: "ep",
                direction: "s",
                path: "M398.96 347.02,L377.54 251.34",
                distance: 98.05,
                isReverse: !0
            }, {
                to: "el",
                direction: "e",
                path: "M398.96 347.02,L221.96 347.12",
                distance: 177,
                isReverse: !0
            }]
        },
        ej: {
            point: {
                x: 542,
                y: 309.24
            },
            connections: [{
                to: "ef",
                direction: "n",
                path: "M563.88 405.28,L542 309.24",
                distance: 98.5,
                isReverse: !1
            }, {
                to: "ek",
                direction: "e",
                path: "M542 309.24,L398.96 347.02",
                distance: 147.95,
                isReverse: !0
            }, {
                to: "eo",
                direction: "s",
                path: "M542 309.24,L520.5 215.14",
                distance: 96.52,
                isReverse: !0
            }]
        },
        ei: {
            point: {
                x: 221.22,
                y: 469.24
            },
            connections: [{
                to: "eh",
                direction: "w",
                path: "M307.78,467.44c-9.72,1.2-19.52,1.8-29.32,1.8h-57.24",
                distance: 86.63,
                isReverse: !1
            }, {
                to: "el",
                direction: "s",
                path: "M221.22,469.24c0,0,0.76-53.26,0.74-122",
                distance: 122,
                isReverse: !0
            }, {
                to: "bh",
                direction: "e",
                path: "M221.22 469.24,L82.54 469.24",
                distance: 138.68,
                isReverse: !0
            }]
        },
        eh: {
            point: {
                x: 307.78,
                y: 467.44
            },
            connections: [{
                to: "ei",
                direction: "e",
                path: "M307.78,467.44c-9.72,1.2-19.52,1.8-29.32,1.8h-57.24",
                distance: 86.63,
                isReverse: !0
            }, {
                to: "ec",
                direction: "n",
                newDirection: "w",
                path: "M454.02,593.12c-22.98,4.96-43.92,9.9-61.88,14.38c-35.14,8.72-69.96-15.38-74.1-51.34l-10.24-88.72",
                distance: 254.85,
                isReverse: !1
            }, {
                to: "eg",
                direction: "w",
                path: "M420.04,441.22l-83.36,20.84c-9.52,2.38-19.16,4.18-28.88,5.36",
                distance: 115.32,
                isReverse: !1
            }]
        },
        eg: {
            point: {
                x: 420.04,
                y: 441.22
            },
            connections: [{
                to: "eh",
                direction: "e",
                path: "M420.04,441.22l-83.36,20.84c-9.52,2.38-19.16,4.18-28.88,5.36",
                distance: 115.32,
                isReverse: !0
            }, {
                to: "ef",
                direction: "w",
                path: "M563.86 405.26,L420.04 441.22",
                distance: 148.25,
                isReverse: !1
            }, {
                to: "ec",
                direction: "n",
                path: "M454.02 593.12,L420.04 441.22",
                distance: 155.65,
                isReverse: !1
            }, {
                to: "ek",
                direction: "s",
                path: "M420.04 441.22,L398.96 347.02",
                distance: 96.53,
                isReverse: !0
            }]
        },
        ef: {
            point: {
                x: 563.86,
                y: 405.26
            },
            connections: [{
                to: "eg",
                direction: "e",
                path: "M563.86 405.26,L420.04 441.22",
                distance: 148.25,
                isReverse: !0
            }, {
                to: "ee",
                direction: "w",
                path: "M707.26 369.4,L563.86 405.26",
                distance: 147.82,
                isReverse: !1
            }, {
                to: "ej",
                direction: "s",
                path: "M563.88 405.28,L542 309.24",
                distance: 98.5,
                isReverse: !0
            }, {
                to: "eb",
                direction: "n",
                path: "M600.32 567.76,L563.88 405.28",
                distance: 166.52,
                isReverse: !1
            }]
        },
        ee: {
            point: {
                x: 707.26,
                y: 369.4
            },
            connections: [{
                to: "aj",
                direction: "s",
                newDirection: "w",
                path: "M973.88,200.26L738.64,259.9c-29.32,7.44-47.44,36.82-40.92,66.36l9.54,43.14",
                distance: 373.1,
                isReverse: !1
            }, {
                to: "ed",
                direction: "n",
                newDirection: "w",
                path: "M872.58,426.26l-88.52,22.64c-30.66,7.84-61.72-11.26-68.56-42.16l-8.26-37.32",
                distance: 219.41,
                isReverse: !1
            }, {
                to: "ef",
                direction: "e",
                path: "M707.26 369.4,L563.86 405.26",
                distance: 147.82,
                isReverse: !0
            }]
        },
        ed: {
            point: {
                x: 872.58,
                y: 426.26
            },
            connections: [{
                to: "ee",
                direction: "e",
                newDirection: "s",
                path: "M872.58,426.26l-88.52,22.64c-30.66,7.84-61.72-11.26-68.56-42.16l-8.26-37.32",
                distance: 219.41,
                isReverse: !0
            }, {
                to: "ah",
                direction: "w",
                path: "M1016.32 389.48,L872.58 426.26",
                distance: 148.37,
                isReverse: !1
            }, {
                to: "ea",
                direction: "n",
                path: "M911.94 601.7,L872.58 426.26",
                distance: 179.8,
                isReverse: !1
            }]
        },
        ec: {
            point: {
                x: 454.02,
                y: 593.12
            },
            connections: [{
                to: "eh",
                direction: "e",
                newDirection: "s",
                path: "M454.02,593.12c-22.98,4.96-43.92,9.9-61.88,14.38c-35.14,8.72-69.96-15.38-74.1-51.34l-10.24-88.72",
                distance: 254.85,
                isReverse: !0
            }, {
                to: "eb",
                direction: "w",
                path: "M600.32,567.76c-52.04,6.5-102.84,15.98-146.3,25.36",
                distance: 148.53,
                isReverse: !1
            }, {
                to: "eg",
                direction: "s",
                path: "M454.02 593.12,L420.04 441.22",
                distance: 155.65,
                isReverse: !0
            }]
        },
        eb: {
            point: {
                x: 600.32,
                y: 567.76
            },
            connections: [{
                to: "ec",
                direction: "e",
                path: "M600.32,567.76c-52.04,6.5-102.84,15.98-146.3,25.36",
                distance: 148.53,
                isReverse: !0
            }, {
                to: "ea",
                direction: "w",
                path: "M911.94,601.7c-11.48-2.76-22.64-7.02-33.2-12.74c-65.16-35.32-174.28-34.22-278.42-21.2",
                distance: 318.74,
                isReverse: !1
            }, {
                to: "ef",
                direction: "s",
                path: "M600.32 567.76,L563.88 405.28",
                distance: 166.52,
                isReverse: !0
            }]
        },
        ea: {
            point: {
                x: 911.94,
                y: 601.7
            },
            connections: [{
                to: "eb",
                direction: "e",
                path: "M911.94,601.7c-11.48-2.76-22.64-7.02-33.2-12.74c-65.16-35.32-174.28-34.22-278.42-21.2",
                distance: 318.74,
                isReverse: !0
            }, {
                to: "af",
                direction: "w",
                path: "M1058.78,578.7l-75.76,21.5c-23.36,6.64-47.86,7.1-71.08,1.48",
                distance: 150.64,
                isReverse: !1
            }, {
                to: "ae",
                direction: "n",
                newDirection: "w",
                path: "M1069,664.14c-67,21.3-73,39.1-103,73.1s-94,8-94-26s36-58,39.94-109.54",
                distance: 366.03,
                isReverse: !1
            }, {
                to: "ed",
                direction: "s",
                path: "M911.94 601.7,L872.58 426.26",
                distance: 179.8,
                isReverse: !0
            }]
        },
        n3: {
            point: {
                x: 656,
                y: 955.24
            },
            connections: [{
                to: "nz",
                direction: "e",
                newDirection: "n",
                path: "M511.22,1051.56c0,0-25.22-78.32-1.22-96.32s112-4,146,0",
                distance: 248.34,
                isReverse: !1
            }]
        },
        n2: {
            point: {
                x: 1202,
                y: 839.24
            },
            connections: [{
                to: "ca",
                direction: "n",
                path: "M1233.42,976.82c0,0,20.58-81.58-31.42-137.58",
                distance: 146.56,
                isReverse: !1
            }]
        },
        n1: {
            point: {
                x: 306,
                y: 1107.24
            },
            connections: [{
                to: "nv",
                direction: "n",
                path: "M298.9,1214.76c-8.06-25.04-6.9-71.52,7.1-107.52",
                distance: 109.43,
                isReverse: !1
            }]
        },
        n0: {
            point: {
                x: 408.4,
                y: 1050.02
            },
            connections: [{
                to: "nw",
                direction: "e",
                newDirection: "n",
                path: "M185.96,1205.3c-1.88-5.3-9.48-23.66-11.4-27.78c-24.58-52.38-8.56-118.28,19.44-128.28s214.4,0.78,214.4,0.78",
                distance: 385.59,
                isReverse: !1
            }, {
                to: "cc",
                direction: "s",
                path: "M408.4,1050.02c-0.24-106.66-0.4-180.86-0.4-180.86",
                distance: 180.86,
                isReverse: !0
            }, {
                to: "nu",
                direction: "n",
                path: "M408.76,1215.08c-0.12-59.24-0.26-115.64-0.36-165.06",
                distance: 165.06,
                isReverse: !1
            }, {
                to: "nz",
                direction: "w",
                path: "M511.22,1051.56c-44-1.38-85.32-2.24-102.82-1.54",
                distance: 102.84,
                isReverse: !1
            }]
        },
        nz: {
            point: {
                x: 511.22,
                y: 1051.56
            },
            connections: [{
                to: "ny",
                direction: "w",
                path: "M894.96,1058.5c-13.66,0-23.44,8.14-42.58,8.04c-27.04-0.12-209.16-10.82-341.16-14.98",
                distance: 385.03,
                isReverse: !1
            }, {
                to: "n0",
                direction: "e",
                path: "M511.22,1051.56c-44-1.38-85.32-2.24-102.82-1.54",
                distance: 102.84,
                isReverse: !0
            }, {
                to: "n3",
                direction: "s",
                newDirection: "e",
                path: "M511.22,1051.56c0,0-25.22-78.32-1.22-96.32s112-4,146,0",
                distance: 248.34,
                isReverse: !0
            }, {
                to: "nt",
                direction: "n",
                path: "M555.98,1202.58c2-63.46-44.76-151.02-44.76-151.02",
                distance: 158.93,
                isReverse: !1
            }]
        },
        ny: {
            point: {
                x: 894.96,
                y: 1058.5
            },
            connections: [{
                to: "nr",
                direction: "n",
                path: "M893.76,1205.24c-0.16-55.38,0.18-106.36,1.2-146.74",
                distance: 146.75,
                isReverse: !1
            }, {
                to: "cb",
                direction: "s",
                path: "M894.96,1058.5c0.98-38.46,3.48-69.82,5.92-83.78",
                distance: 84.04,
                isReverse: !0
            }, {
                to: "nz",
                direction: "e",
                path: "M894.96,1058.5c-13.66,0-23.44,8.14-42.58,8.04c-27.04-0.12-209.16-10.82-341.16-14.98",
                distance: 385.03,
                isReverse: !0
            }]
        },
        nx: {
            point: {
                x: 1220,
                y: 1085.24
            },
            connections: [{
                to: "nq",
                direction: "n",
                path: "M1269.1,1241.18c0,0,2.9-109.94-49.1-155.94",
                distance: 167.85,
                isReverse: !1
            }]
        },
        nw: {
            point: {
                x: 185.96,
                y: 1205.3
            },
            connections: [{
                to: "np",
                direction: "n",
                newDirection: "w",
                path: "M409.02,1334c-67,0-98.92,14.6-150.92,6.6c-46.5-7.16-56.3-90.56-72.16-135.3",
                distance: 312,
                isReverse: !1
            }, {
                to: "n0",
                direction: "s",
                newDirection: "w",
                path: "M185.96,1205.3c-1.88-5.3-9.48-23.66-11.4-27.78c-24.58-52.38-8.56-118.28,19.44-128.28s214.4,0.78,214.4,0.78",
                distance: 385.59,
                isReverse: !0
            }, {
                to: "nv",
                direction: "w",
                path: "M298.9,1214.76c-44.68-0.96-89.88-3.44-112.96-9.44",
                distance: 113.53,
                isReverse: !1
            }]
        },
        nv: {
            point: {
                x: 298.9,
                y: 1214.76
            },
            connections: [{
                to: "nw",
                direction: "e",
                path: "M298.9,1214.76c-44.68-0.96-89.88-3.44-112.96-9.44",
                distance: 113.53,
                isReverse: !0
            }, {
                to: "nu",
                direction: "w",
                path: "M408.76,1215.08c-21,0.08-65.16,0.64-109.86-0.34",
                distance: 109.86,
                isReverse: !1
            }, {
                to: "n1",
                direction: "s",
                newDirection: "n",
                path: "M298.9,1214.76c-8.06-25.04-6.9-71.52,7.1-107.52",
                distance: 109.43,
                isReverse: !0
            }]
        },
        nu: {
            point: {
                x: 408.76,
                y: 1215.08
            },
            connections: [{
                to: "np",
                direction: "n",
                path: "M409.02,1334c-0.08-40.08-0.18-80.1-0.26-118.9",
                distance: 118.9,
                isReverse: !1
            }, {
                to: "n0",
                direction: "s",
                path: "M408.76,1215.08c-0.12-59.24-0.26-115.64-0.36-165.06",
                distance: 165.06,
                isReverse: !0
            }, {
                to: "nv",
                direction: "e",
                path: "M408.76,1215.08c-21,0.08-65.16,0.64-109.86-0.34",
                distance: 109.86,
                isReverse: !0
            }, {
                to: "nt",
                direction: "w",
                path: "M555.98,1202.58c-48.24-0.48-96.96,2.26-147.22,12.5",
                distance: 148.03,
                isReverse: !1
            }]
        },
        nt: {
            point: {
                x: 555.98,
                y: 1202.58
            },
            connections: [{
                to: "nz",
                direction: "s",
                path: "M555.98,1202.58c2-63.46-44.76-151.02-44.76-151.02",
                distance: 158.93,
                isReverse: !0
            }, {
                to: "nu",
                direction: "e",
                path: "M555.98,1202.58c-48.24-0.48-96.96,2.26-147.22,12.5",
                distance: 148.03,
                isReverse: !0
            }, {
                to: "home",
                direction: "w",
                path: "M740,1211.36c-61.96-2.28-122.58-8.16-184.02-8.78",
                distance: 184.25,
                isReverse: !1
            }]
        },
        home: {
            point: {
                x: 740,
                y: 1211.36
            },
            connections: [{
                to: "nt",
                direction: "e",
                path: "M740,1211.36c-61.96-2.28-122.58-8.16-184.02-8.78",
                distance: 184.25,
                isReverse: !0
            }, {
                to: "nr",
                direction: "w",
                path: "M894,1205.24c-52.98,7.48-103.92,7.96-154,6.12",
                distance: 154.33,
                isReverse: !1
            }]
        },
        nr: {
            point: {
                x: 893.76,
                y: 1205.24
            },
            connections: [{
                to: "ny",
                direction: "s",
                path: "M893.76,1205.24c-0.16-55.38,0.18-106.36,1.2-146.74",
                distance: 146.75,
                isReverse: !0
            }, {
                to: "ng",
                direction: "n",
                path: "M896.68,1449.22c-1.52-78.54-2.7-165.66-2.92-243.98",
                distance: 244,
                isReverse: !1
            }, {
                to: "home",
                direction: "e",
                path: "M894,1205.24c-52.98,7.48-103.92,7.96-154,6.12",
                distance: 154.33,
                isReverse: !0
            }]
        },
        nq: {
            point: {
                x: 1269.1,
                y: 1241.18
            },
            connections: [{
                to: "nf",
                direction: "n",
                path: "M1223,1480.74c24-31,47-65.5,47-111.5c0-29.74-0.9-128.06-0.9-128.06",
                distance: 251.53,
                isReverse: !1
            }, {
                to: "ac",
                direction: "e",
                path: "M1269.1,1241.18c-40.06-13.02-80.1-26.02-119.1-26.1c-16-0.02-44.2-1.14-81-2.68",
                distance: 203.49,
                isReverse: !0
            }, {
                to: "bb",
                direction: "w",
                path: "M1406.42,1266.34c-44.78,4.88-91.08-10.14-137.32-25.16",
                distance: 140.69,
                isReverse: !1
            }, {
                to: "nx",
                direction: "s",
                newDirection: "n",
                path: "M1269.1,1241.18c0,0,2.9-109.94-49.1-155.94",
                distance: 167.85,
                isReverse: !0
            }]
        },
        np: {
            point: {
                x: 409.02,
                y: 1334
            },
            connections: [{
                to: "nu",
                direction: "s",
                path: "M409.02,1334c-0.08-40.08-0.18-80.1-0.26-118.9",
                distance: 118.9,
                isReverse: !0
            }, {
                to: "nw",
                direction: "e",
                newDirection: "s",
                path: "M409.02,1334c-67,0-98.92,14.6-150.92,6.6c-46.5-7.16-56.3-90.56-72.16-135.3",
                distance: 312,
                isReverse: !0
            }, {
                to: "nj",
                direction: "n",
                path: "M409.36,1489.26c-0.1-50.12-0.22-102.74-0.34-155.26",
                distance: 155.26,
                isReverse: !1
            }, {
                to: "no",
                direction: "w",
                path: "M491.98,1334c-45.38,0-82.96,0-82.96,0",
                distance: 82.96,
                isReverse: !1
            }]
        },
        no: {
            point: {
                x: 491.98,
                y: 1334
            },
            connections: [{
                to: "ne",
                direction: "n",
                newDirection: "w",
                path: "M656.84,1571.8c-69.3,0-139.9-7.06-158.08-69.02c-15.32-52.16-9-146.32-6.76-168.78",
                distance: 355.79,
                isReverse: !1
            }, {
                to: "np",
                direction: "e",
                path: "M491.98,1334c-45.38,0-82.96,0-82.96,0",
                distance: 82.96,
                isReverse: !0
            }, {
                to: "nn",
                direction: "w",
                path: "M656.84,1334c-23.04,0-102.28,0-164.84,0",
                distance: 164.84,
                isReverse: !1
            }]
        },
        nn: {
            point: {
                x: 656.84,
                y: 1334
            },
            connections: [{
                to: "no",
                direction: "e",
                path: "M656.84,1334c-23.04,0-102.28,0-164.84,0",
                distance: 164.84,
                isReverse: !0
            }, {
                to: "ni",
                direction: "w",
                newDirection: "n",
                path: "M739.12,1452.9c0,0,0-118.9-82.28-118.9",
                distance: 161.03,
                isReverse: !1
            }, {
                to: "ne",
                direction: "n",
                path: "M656.84 1571.8,L656.84 1334",
                distance: 237.8,
                isReverse: !1
            }]
        },
        nm: {
            point: {
                x: 810,
                y: 1315.24
            },
            connections: [{
                to: "nh",
                direction: "n",
                path: "M822,1448.46c0,0,4-99.22-12-133.22",
                distance: 134.54,
                isReverse: !1
            }]
        },
        nl: {
            point: {
                x: 1158,
                y: 1329.24
            },
            connections: [{
                to: "nf",
                direction: "n",
                newDirection: "w",
                path: "M1223,1480.74c-102,2-77-87.5-65-151.5",
                distance: 202.65,
                isReverse: !1
            }]
        },
        nk: {
            point: {
                x: 313.3,
                y: 1407.24
            },
            connections: [{
                to: "nj",
                direction: "n",
                newDirection: "w",
                path: "M409.36,1489.26c0,0-91.58-8.44-96.06-82.02",
                distance: 137.7,
                isReverse: !1
            }]
        },
        nj: {
            point: {
                x: 409.36,
                y: 1489.26
            },
            connections: [{
                to: "bf",
                direction: "n",
                path: "M409.68,1642.76c-0.1-45.74-0.2-98.08-0.32-153.5",
                distance: 153.5,
                isReverse: !1
            }, {
                to: "np",
                direction: "s",
                path: "M409.36,1489.26c-0.1-50.12-0.22-102.74-0.34-155.26",
                distance: 155.26,
                isReverse: !0
            }, {
                to: "nk",
                direction: "e",
                newDirection: "n",
                path: "M409.36,1489.26c0,0-91.58-8.44-96.06-82.02",
                distance: 137.7,
                isReverse: !0
            }]
        },
        ni: {
            point: {
                x: 739.12,
                y: 1452.9
            },
            connections: [{
                to: "nh",
                direction: "w",
                path: "M822,1448.46c-51.28,0.9-82.9,4.44-82.9,4.44",
                distance: 83.04,
                isReverse: !1
            }, {
                to: "nn",
                direction: "s",
                newDirection: "e",
                path: "M739.12,1452.9c0,0,0-118.9-82.28-118.9",
                distance: 161.03,
                isReverse: !0
            }, {
                to: "bd",
                direction: "n",
                path: "M739.12,1687.8c0-117.64-0.02-234.9-0.02-234.9",
                distance: 234.9,
                isReverse: !1
            }]
        },
        nh: {
            point: {
                x: 822,
                y: 1448.46
            },
            connections: [{
                to: "ni",
                direction: "e",
                path: "M822,1448.46c-51.28,0.9-82.9,4.44-82.9,4.44",
                distance: 83.04,
                isReverse: !0
            }, {
                to: "nm",
                direction: "s",
                newDirection: "n",
                path: "M822,1448.46c0,0,4-99.22-12-133.22",
                distance: 134.54,
                isReverse: !0
            }, {
                to: "ng",
                direction: "w",
                path: "M896.68,1449.22c-27.8-1.04-53-1.14-74.68-0.78",
                distance: 74.69,
                isReverse: !1
            }]
        },
        ng: {
            point: {
                x: 896.68,
                y: 1449.22
            },
            connections: [{
                to: "nc",
                direction: "n",
                path: "M899.5,1571.2c-0.96-35.78-1.94-77.5-2.8-121.98",
                distance: 122.01,
                isReverse: !1
            }, {
                to: "nr",
                direction: "s",
                path: "M896.68,1449.22c-1.52-78.54-2.7-165.66-2.92-243.98",
                distance: 244,
                isReverse: !0
            }, {
                to: "nh",
                direction: "e",
                path: "M896.68,1449.22c-27.8-1.04-53-1.14-74.68-0.78",
                distance: 74.69,
                isReverse: !0
            }]
        },
        nf: {
            point: {
                x: 1223,
                y: 1480.74
            },
            connections: [{
                to: "nq",
                direction: "s",
                path: "M1223,1480.74c24-31,47-65.5,47-111.5c0-29.74-0.9-128.06-0.9-128.06",
                distance: 251.53,
                isReverse: !0
            }, {
                to: "nl",
                direction: "e",
                newDirection: "n",
                path: "M1223,1480.74c-102,2-77-87.5-65-151.5",
                distance: 202.65,
                isReverse: !0
            }, {
                to: "na",
                direction: "n",
                newDirection: "s",
                path: "M1170,1571.24c4-32,29-59.5,53-90.5",
                distance: 106.19,
                isReverse: !1
            }]
        },
        ne: {
            point: {
                x: 656.84,
                y: 1571.8
            },
            connections: [{
                to: "no",
                direction: "e",
                newDirection: "s",
                path: "M656.84,1571.8c-69.3,0-139.9-7.06-158.08-69.02c-15.32-52.16-9-146.32-6.76-168.78",
                distance: 355.79,
                isReverse: !0
            }, {
                to: "nn",
                direction: "s",
                path: "M656.84 1571.8,L656.84 1334",
                distance: 237.8,
                isReverse: !0
            }, {
                to: "be",
                direction: "n",
                path: "M656.84 1690.7,L656.84 1571.8",
                distance: 118.9,
                isReverse: !1
            }]
        },
        nd: {
            point: {
                x: 796,
                y: 1551.24
            },
            connections: [{
                to: "nc",
                direction: "w",
                path: "M899.5,1571.2c-24,0-81.5,2.04-103.5-19.96",
                distance: 107.67,
                isReverse: !1
            }]
        },
        nc: {
            point: {
                x: 899.5,
                y: 1571.2
            },
            connections: [{
                to: "ng",
                direction: "s",
                path: "M899.5,1571.2c-0.96-35.78-1.94-77.5-2.8-121.98",
                distance: 122.01,
                isReverse: !0
            }, {
                to: "bc",
                direction: "n",
                path: "M904,1687.98c-1.06-8.5-2.78-53.32-4.5-116.78",
                distance: 116.88,
                isReverse: !1
            }, {
                to: "nd",
                direction: "e",
                newDirection: "w",
                path: "M899.5,1571.2c-24,0-81.5,2.04-103.5-19.96",
                distance: 107.67,
                isReverse: !0
            }, {
                to: "nb",
                direction: "w",
                newDirection: "e",
                path: "M1006,1571.24c-24-12-72.82-0.04-106.5-0.04",
                distance: 107.44,
                isReverse: !1
            }]
        },
        nb: {
            point: {
                x: 1006,
                y: 1571.24
            },
            connections: [{
                to: "nc",
                direction: "e",
                path: "M1006,1571.24c-24-12-72.82-0.04-106.5-0.04",
                distance: 107.44,
                isReverse: !0
            }]
        },
        na: {
            point: {
                x: 1170,
                y: 1571.24
            },
            connections: [{
                to: "nf",
                direction: "s",
                path: "M1170,1571.24c4-32,29-59.5,53-90.5",
                distance: 106.19,
                isReverse: !0
            }]
        },
        lk: {
            point: {
                x: 76,
                y: 1597.12
            },
            connections: [{
                to: "lj",
                direction: "n",
                path: "M55.26,1771.3c0,0,24.74-126.28,20.74-174.16",
                distance: 175.73,
                isReverse: !1
            }, {
                to: "li",
                direction: "w",
                path: "M410,1809.62c0,0-60,5.62-132-50.38c-55.4-43.08-107.24-120.5-202-162.12",
                distance: 404.52,
                isReverse: !1
            }]
        },
        lj: {
            point: {
                x: 55.28,
                y: 1771.28
            },
            connections: [{
                to: "lk",
                direction: "s",
                path: "M55.26,1771.3c0,0,24.74-126.28,20.74-174.16",
                distance: 175.73,
                isReverse: !0
            }, {
                to: "lm",
                direction: "w",
                newDirection: "n",
                path: "M282.61,1972.22c0-39.63-102.13-170.18-227.33-200.94",
                distance: 315.28,
                isReverse: !1
            }]
        },
        li: {
            point: {
                x: 410,
                y: 1809.62
            },
            connections: [{
                to: "bf",
                direction: "s",
                path: "M410,1809.62c0-10.2-0.12-75.28-0.32-166.86",
                distance: 166.86,
                isReverse: !0
            }, {
                to: "lh",
                direction: "w",
                path: "M610,1810.86c-24.8-0.48-71.66-1.24-117.72-1.24c-67,0-82.28,0-82.28,0",
                distance: 200.01,
                isReverse: !1
            }, {
                to: "lk",
                direction: "e",
                path: "M410,1809.62c0,0-60,5.62-132-50.38c-55.4-43.08-107.24-120.5-202-162.12",
                distance: 404.52,
                isReverse: !0
            }, {
                to: "lc",
                direction: "n",
                path: "M497.92,2179.26c-12-130-87.92-237.64-87.92-369.64",
                distance: 381.5,
                isReverse: !1
            }]
        },
        lh: {
            point: {
                x: 610,
                y: 1810.86
            },
            connections: [{
                to: "lb",
                direction: "n",
                path: "M574.02,2180.18c0,0-6-279.32,36-369.32",
                distance: 372.97,
                isReverse: !1
            }, {
                to: "li",
                direction: "e",
                path: "M610,1810.86c-24.8-0.48-71.66-1.24-117.72-1.24c-67,0-82.28,0-82.28,0",
                distance: 200.01,
                isReverse: !0
            }, {
                to: "lg",
                direction: "w",
                path: "M739.12,1809.62L628,1811.24c0,0-6.72-0.16-18-0.38",
                distance: 129.14,
                isReverse: !1
            }]
        },
        lg: {
            point: {
                x: 739.12,
                y: 1809.62
            },
            connections: [{
                to: "lf",
                direction: "w",
                path: "M985.96,1808.08c-123.96-0.5-222.72,1.52-246.84,1.52",
                distance: 246.85,
                isReverse: !1
            }, {
                to: "le",
                direction: "n",
                path: "M739.12,1928.52c0-9.18,0-56.94,0-118.9",
                distance: 118.9,
                isReverse: !1
            }, {
                to: "lh",
                direction: "e",
                path: "M739.12,1809.62L628,1811.24c0,0-6.72-0.16-18-0.38",
                distance: 129.14,
                isReverse: !0
            }]
        },
        lf: {
            point: {
                x: 985.96,
                y: 1808
            },
            connections: [{
                to: "aa",
                direction: "w",
                path: "M1069,1808.8c-28.52-0.38-56.36-0.6-83.04-0.72",
                distance: 83.04,
                isReverse: !1
            }, {
                to: "ld",
                direction: "n",
                newDirection: "e",
                path: "M903.66,2047.42c90.28-3.32,82.28-85.24,82.28-118.9c0-33.66,0-120.44,0-120.44",
                distance: 287.35,
                isReverse: !1
            }, {
                to: "lg",
                direction: "e",
                path: "M985.96,1808.08c-123.96-0.5-222.72,1.52-246.84,1.52",
                distance: 246.85,
                isReverse: !0
            }]
        },
        le: {
            point: {
                x: 739.12,
                y: 1928.52
            },
            connections: [{
                to: "ld",
                direction: "w",
                newDirection: "n",
                path: "M903.66,2047.42c17.06-53.44,51.06-121.02-82.28-118.9c-45.38,0.72-44.28,0-82.28,0",
                distance: 277.81,
                isReverse: !1
            }, {
                to: "lg",
                direction: "s",
                path: "M739.12,1928.52c0-9.18,0-56.94,0-118.9",
                distance: 118.9,
                isReverse: !0
            }, {
                to: "la",
                direction: "n",
                path: "M739.12,2166.34c-49.56-28.52-82.28-67-82.28-103.82c0-73.52,82.28-67.28,82.28-134",
                distance: 302.6,
                isReverse: !1
            }]
        },
        ld: {
            point: {
                x: 904.06,
                y: 2047.42
            },
            connections: [{
                to: "le",
                direction: "s",
                newDirection: "e",
                path: "M903.66,2047.42c17.06-53.44,51.06-121.02-82.28-118.9c-45.38,0.72-44.28,0-82.28,0",
                distance: 277.81,
                isReverse: !0
            }, {
                to: "la",
                direction: "e",
                path: "M739.12,2166.34c130.88-21.1,60.88-115.1,164.54-118.92",
                distance: 216.78,
                isReverse: !1
            }, {
                to: "lf",
                direction: "w",
                newDirection: "s",
                path: "M903.66,2047.42c90.28-3.32,82.28-85.24,82.28-118.9c0-33.66,0-120.44,0-120.44",
                distance: 287.35,
                isReverse: !0
            }]
        },
        lc: {
            point: {
                x: 497.92,
                y: 2179.26
            },
            connections: [{
                to: "lm",
                direction: "e",
                newDirection: "s",
                path: "M497.92,2179.26c-12.1-0.6-30.42,0.68-38.5,0.56c-78.62-1.22-176.81-144.37-176.81-207.6",
                distance: 327.5,
                isReverse: !0
            }, {
                to: "lb",
                direction: "w",
                path: "M574.02,2180.18c-30.78,0.5-56.98-0.12-76.1-0.92",
                distance: 76.12,
                isReverse: !1
            }, {
                to: "li",
                direction: "s",
                path: "M497.92,2179.26c-12-130-87.92-237.64-87.92-369.64",
                distance: 381.5,
                isReverse: !0
            }]
        },
        lm: {
            point: {
                x: 281.71,
                y: 1972.21
            },
            connections: [{
                to: "lc",
                direction: "n",
                newDirection: "w",
                path: "M497.92,2179.26c-12.1-0.6-30.42,0.68-38.5,0.56c-78.62-1.22-176.81-144.37-176.81-207.6",
                distance: 327.5,
                isReverse: !1
            }, {
                to: "ln",
                direction: "e",
                newDirection: "s",
                path: "M282.61,1972.22c-64.7,0-88.73,30.2-88.73,30.2L76.63,2157.76c0,0-17.06,26.36-17.06,60.89",
                distance: 354.83,
                isReverse: !0
            }, {
                to: "lj",
                direction: "s",
                newDirection: "e",
                path: "M282.61,1972.22c0-39.63-102.13-170.18-227.33-200.94",
                distance: 315.28,
                isReverse: !0
            }]
        },
        ln: {
            point: {
                x: 59.57,
                y: 2218.65
            },
            connections: [{
                to: "lm",
                direction: "s",
                newDirection: "w",
                path: "M282.61,1972.22c-64.7,0-88.73,30.2-88.73,30.2L76.63,2157.76c0,0-17.06,26.36-17.06,60.89",
                distance: 354.83,
                isReverse: !1
            }]
        },
        lb: {
            point: {
                x: 573.72,
                y: 2180.36
            },
            connections: [{
                to: "lh",
                direction: "s",
                path: "M574.02,2180.18c0,0-6-279.32,36-369.32",
                distance: 372.97,
                isReverse: !0
            }, {
                to: "la",
                direction: "w",
                path: "M739.12,2166.34c-59.64,9.62-117.76,13.06-165.1,13.84",
                distance: 165.82,
                isReverse: !1
            }, {
                to: "lc",
                direction: "e",
                path: "M574.02,2180.18c-30.78,0.5-56.98-0.12-76.1-0.92",
                distance: 76.12,
                isReverse: !0
            }]
        },
        la: {
            point: {
                x: 739.12,
                y: 2166.34
            },
            connections: [{
                to: "ld",
                direction: "w",
                path: "M739.12,2166.34c130.88-21.1,60.88-115.1,164.54-118.92",
                distance: 216.78,
                isReverse: !0
            }, {
                to: "le",
                direction: "s",
                path: "M739.12,2166.34c-49.56-28.52-82.28-67-82.28-103.82c0-73.52,82.28-67.28,82.28-134",
                distance: 302.6,
                isReverse: !0
            }, {
                to: "lb",
                direction: "e",
                path: "M739.12,2166.34c-59.64,9.62-117.76,13.06-165.1,13.84",
                distance: 165.82,
                isReverse: !0
            }]
        },
        ll: {
            point: {
                x: 891.96,
                y: 2196.04
            },
            connections: [{
                to: "am",
                direction: "s",
                newDirection: "w",
                path: "M1069,2141.23c-19.87,1.29-34.75,7.75-46.58-7.42c-11.83-15.17,12.58-65.51,0.56-80.53c-12.01-15.02-21.4-4.86-32.66,28.72c-7.84,23.38-4.2,59.23,14.08,80.53c19.09,22.24-8.15,26.41-27.4,10.73c-14.55-11.85-16.15-51.36-17.65-66.38c-0.86-8.56-10.67-20.87-28.16-5.17c-16.89,15.17,30.36,78.85,18.02,85.03c-18.58,9.3-35.48-79.86-54.62-73.67c-20.13,6.51-2.44,55.27-2.63,82.97",
                distance: 711.66,
                isReverse: !1
            }]
        },
        gg: {
            point: {
                x: 1201.9,
                y: 2128.98
            },
            connections: [{
                to: "gd",
                direction: "s",
                newDirection: "w",
                path: "M1201.9,2128.98c-17.22-18.2-48.32-50.42-38.32-78.42s66.1-29.32,101.04-32.5",
                distance: 202.4,
                isReverse: !0
            }, {
                to: "gb",
                direction: "n",
                newDirection: "w",
                path: "M1345.78,2177.12c-15.34,14.94-34.08,26.26-54.86,32.76c-25.16,7.84-51,6.74-59.04-6.34c-16-26-11.88-55.42-29.98-74.56",
                distance: 208.55,
                isReverse: !1
            }]
        },
        gf: {
            point: {
                x: 1220,
                y: 1812.44
            },
            connections: [{
                to: "aa",
                direction: "e",
                path: "M1220,1812.44c-50.66-1.86-101.84-3-151-3.66",
                distance: 151.05,
                isReverse: !0
            }, {
                to: "ge",
                direction: "w",
                path: "M1378,1821.14c-50-3.9-103.7-6.7-158-8.68",
                distance: 158.25,
                isReverse: !1
            }, {
                to: "gd",
                direction: "n",
                path: "M1264.6,2018.06c-0.64-18.44,3.48-36.28,5.4-46.82c8.1-44.62-13.68-48.76-12-96c1.28-36.04-32-36-38-62.8",
                distance: 221.29,
                isReverse: !1
            }]
        },
        ge: {
            point: {
                x: 1378,
                y: 1821.14
            },
            connections: [{
                to: "gf",
                direction: "e",
                path: "M1378,1821.14c-50-3.9-103.7-6.7-158-8.68",
                distance: 158.25,
                isReverse: !0
            }, {
                to: "gc",
                direction: "n",
                path: "M1406,1929.24c-4-38-28-108.1-28-108.1",
                distance: 111.84,
                isReverse: !1
            }]
        },
        gd: {
            point: {
                x: 1264.6,
                y: 2018.06
            },
            connections: [{
                to: "gg",
                direction: "e",
                newDirection: "n",
                path: "M1201.9,2128.98c-17.22-18.2-48.32-50.42-38.32-78.42s66.1-29.32,101.04-32.5",
                distance: 202.4,
                isReverse: !1
            }, {
                to: "gc",
                direction: "w",
                path: "M1406,1929.24c-60,76-141.4,88.82-141.4,88.82",
                distance: 170.33,
                isReverse: !1
            }, {
                to: "gf",
                direction: "s",
                path: "M1264.6,2018.06c-0.64-18.44,3.48-36.28,5.4-46.82c8.1-44.62-13.68-48.76-12-96c1.28-36.04-32-36-38-62.8",
                distance: 221.29,
                isReverse: !0
            }, {
                to: "gb",
                direction: "n",
                path: "M1345.78,2177.12c-9.2-14.6-13.78-50.38-19.78-63.88c-8-18-46-40-56-66c-3.5-9.12-5.04-19.22-5.4-29.18",
                distance: 184.07,
                isReverse: !1
            }]
        },
        gc: {
            point: {
                x: 1406,
                y: 1929.24
            },
            connections: [{
                to: "gd",
                direction: "e",
                path: "M1406,1929.24c-60,76-141.4,88.82-141.4,88.82",
                distance: 170.33,
                isReverse: !0
            }, {
                to: "ge",
                direction: "s",
                path: "M1406,1929.24c-4-38-28-108.1-28-108.1",
                distance: 111.84,
                isReverse: !0
            }, {
                to: "ga",
                direction: "n",
                path: "M1460.02,2069.54c-28.08-47.24-51.44-115.8-54.02-140.3",
                distance: 151.04,
                isReverse: !1
            }]
        },
        gb: {
            point: {
                x: 1345.78,
                y: 2177.12
            },
            connections: [{
                to: "gg",
                direction: "e",
                newDirection: "s",
                path: "M1345.78,2177.12c-15.34,14.94-34.08,26.26-54.86,32.76c-25.16,7.84-51,6.74-59.04-6.34c-16-26-11.88-55.42-29.98-74.56",
                distance: 208.55,
                isReverse: !0
            }, {
                to: "gd",
                direction: "s",
                path: "M1345.78,2177.12c-9.2-14.6-13.78-50.38-19.78-63.88c-8-18-46-40-56-66c-3.5-9.12-5.04-19.22-5.4-29.18",
                distance: 184.07,
                isReverse: !0
            }, {
                to: "ga",
                direction: "w",
                path: "M1460.34,2070.08c-48.8,16.06-75.6,48.68-89.78,74.46c-6.66,12.12-15.04,23.08-24.78,32.56",
                distance: 160.57,
                isReverse: !1
            }]
        },
        ga: {
            point: {
                x: 1460.02,
                y: 2070.08
            },
            connections: [{
                to: "gc",
                direction: "s",
                path: "M1460.02,2069.54c-28.08-47.24-51.44-115.8-54.02-140.3",
                distance: 151.04,
                isReverse: !0
            }, {
                to: "gb",
                direction: "e",
                path: "M1460.34,2070.08c-48.8,16.06-75.6,48.68-89.78,74.46c-6.66,12.12-15.04,23.08-24.78,32.56",
                distance: 160.57,
                isReverse: !0
            }]
        },
        cc: {
            point: {
                x: 408,
                y: 869.16
            },
            connections: [{
                to: "n0",
                direction: "n",
                path: "M408.4,1050.02c-0.24-106.66-0.4-180.86-0.4-180.86",
                distance: 180.86,
                isReverse: !1
            }, {
                to: "bg",
                direction: "e",
                path: "M408,869.16c-119.96,1.16-248.24-3.32-328.5-6.88",
                distance: 328.61,
                isReverse: !0
            }, {
                to: "cb",
                direction: "w",
                path: "M900.88,974.72C791.34,957.92,706.66,846.3,614,858.24c-55.24,7.12-128.9,10.18-206,10.92",
                distance: 520.5,
                isReverse: !1
            }]
        },
        cb: {
            point: {
                x: 900.88,
                y: 974.72
            },
            connections: [{
                to: "ny",
                direction: "n",
                path: "M894.96,1058.5c0.98-38.46,3.48-69.82,5.92-83.78",
                distance: 84.04,
                isReverse: !1
            }, {
                to: "cc",
                direction: "e",
                path: "M900.88,974.72C791.34,957.92,706.66,846.3,614,858.24c-55.24,7.12-128.9,10.18-206,10.92",
                distance: 520.5,
                isReverse: !0
            }, {
                to: "ad",
                direction: "w",
                path: "M1069,976.82c0,0-18,0-141,0c-9.22,0-18.24-0.74-27.12-2.1",
                distance: 168.23,
                isReverse: !1
            }]
        },
        ca: {
            point: {
                x: 1234.13,
                y: 976.82
            },
            connections: [{
                to: "n2",
                direction: "s",
                newDirection: "n",
                path: "M1233.42,976.82c0,0,20.58-81.58-31.42-137.58",
                distance: 146.56,
                isReverse: !0
            }, {
                to: "ad",
                direction: "e",
                path: "M1233.42 976.82,L1069 976.82",
                distance: 164.42,
                isReverse: !0
            }, {
                to: "ba",
                direction: "w",
                path: "M1398 976.82,L1233.42 976.82",
                distance: 164.58,
                isReverse: !1
            }]
        },
        bl: {
            point: {
                x: 74.52,
                y: 63.24
            },
            connections: [{
                to: "bj",
                direction: "n",
                path: "M80.92,251.22c-0.56-33.08-4.7-160.2-6.4-187.98",
                distance: 188.09,
                isReverse: !1
            }, {
                to: "ey",
                direction: "w",
                path: "M211.94 63.24,L74.52 63.24",
                distance: 137.42,
                isReverse: !1
            }]
        },
        bj: {
            point: {
                x: 80,
                y: 251.24
            },
            connections: [{
                to: "bl",
                direction: "s",
                path: "M80.92,251.22c-0.56-33.08-4.7-160.2-6.4-187.98",
                distance: 188.09,
                isReverse: !0
            }, {
                to: "bh",
                direction: "n",
                path: "M82.54,469.24c0-41.4-1.1-187.2-1.64-218.02",
                distance: 218.03,
                isReverse: !1
            }, {
                to: "eq",
                direction: "w",
                path: "M221.28 251.24,L80 251.24",
                distance: 141.28,
                isReverse: !1
            }]
        },
        bh: {
            point: {
                x: 82.54,
                y: 469.24
            },
            connections: [{
                to: "bj",
                direction: "s",
                path: "M82.54,469.24c0-41.4-1.1-187.2-1.64-218.02",
                distance: 218.03,
                isReverse: !0
            }, {
                to: "bg",
                direction: "n",
                path: "M79.5,862.28c1.54-117.56,3.02-257.84,3.04-393.04",
                distance: 393.05,
                isReverse: !1
            }, {
                to: "ei",
                direction: "w",
                path: "M221.22 469.24,L82.54 469.24",
                distance: 138.68,
                isReverse: !1
            }]
        },
        bg: {
            point: {
                x: 79.5,
                y: 862.28
            },
            connections: [{
                to: "cc",
                direction: "w",
                path: "M408,869.16c-119.96,1.16-248.24-3.32-328.5-6.88",
                distance: 328.61,
                isReverse: !1
            }, {
                to: "bh",
                direction: "s",
                path: "M79.5,862.28c1.54-117.56,3.02-257.84,3.04-393.04",
                distance: 393.05,
                isReverse: !0
            }, {
                to: "bf",
                direction: "n",
                newDirection: "w",
                path: "M409.68,1642.76c-21.5-11.02-60.32-10.8-80.6-38.16C266.9,1520.68,230,1433.24,190,1393.24s-114-138-114-262c0-37.1,1.8-139.2,3.5-268.96",
                distance: 905.91,
                isReverse: !1
            }]
        },
        bf: {
            point: {
                x: 409.68,
                y: 1642.76
            },
            connections: [{
                to: "li",
                direction: "n",
                path: "M410,1809.62c0-10.2-0.12-75.28-0.32-166.86",
                distance: 166.86,
                isReverse: !1
            }, {
                to: "nj",
                direction: "s",
                path: "M409.68,1642.76c-0.1-45.74-0.2-98.08-0.32-153.5",
                distance: 153.5,
                isReverse: !0
            }, {
                to: "bg",
                direction: "e",
                newDirection: "s",
                path: "M409.68,1642.76c-21.5-11.02-60.32-10.8-80.6-38.16C266.9,1520.68,230,1433.24,190,1393.24s-114-138-114-262c0-37.1,1.8-139.2,3.5-268.96",
                distance: 905.91,
                isReverse: !0
            }, {
                to: "be",
                direction: "w",
                path: "M656.84,1690.7c-49.72,3.96-171.16-1.32-247.16-47.96",
                distance: 255.15,
                isReverse: !1
            }]
        },
        be: {
            point: {
                x: 656.84,
                y: 1690.7
            },
            connections: [{
                to: "bf",
                direction: "e",
                path: "M656.84,1690.7c-49.72,3.96-171.16-1.32-247.16-47.96",
                distance: 255.15,
                isReverse: !0
            }, {
                to: "bd",
                direction: "w",
                path: "M739.12,1687.8c-33.92,0.46-62.96,1.36-82.3,2.9",
                distance: 82.36,
                isReverse: !1
            }, {
                to: "ne",
                direction: "s",
                path: "M656.84 1690.7,L656.84 1571.8",
                distance: 118.9,
                isReverse: !0
            }]
        },
        bd: {
            point: {
                x: 739.12,
                y: 1687.8
            },
            connections: [{
                to: "ni",
                direction: "s",
                path: "M739.12,1687.8c0-117.64-0.02-234.9-0.02-234.9",
                distance: 234.9,
                isReverse: !0
            }, {
                to: "be",
                direction: "e",
                path: "M739.12,1687.8c-33.92,0.46-62.96,1.36-82.3,2.9",
                distance: 82.36,
                isReverse: !0
            }, {
                to: "bc",
                direction: "w",
                path: "M904,1687.98c-55.18-0.58-115.22-0.86-164.86-0.18",
                distance: 164.86,
                isReverse: !1
            }]
        },
        bc: {
            point: {
                x: 904,
                y: 1687.98
            },
            connections: [{
                to: "nc",
                direction: "s",
                path: "M904,1687.98c-1.06-8.5-2.78-53.32-4.5-116.78",
                distance: 116.88,
                isReverse: !0
            }, {
                to: "bd",
                direction: "e",
                path: "M904,1687.98c-55.18-0.58-115.22-0.86-164.86-0.18",
                distance: 164.86,
                isReverse: !0
            }, {
                to: "ab",
                direction: "w",
                path: "M1069,1690.7c0,0-76.2-1.78-165-2.72",
                distance: 165.02,
                isReverse: !1
            }]
        },
        bb: {
            point: {
                x: 1406.42,
                y: 1266.34
            },
            connections: [{
                to: "nq",
                direction: "e",
                path: "M1406.42,1266.34c-44.78,4.88-91.08-10.14-137.32-25.16",
                distance: 140.69,
                isReverse: !0
            }, {
                to: "ab",
                direction: "n",
                newDirection: "e",
                path: "M1069,1690.7c246.22,0,174.78-139.46,247.78-187.46c68.02-44.72,129.2-101.54,106-170c-6.62-19.54-11.72-42.4-15.6-66.9",
                distance: 627.77,
                isReverse: !1
            }, {
                to: "ba",
                direction: "s",
                path: "M1407.18,1266.34c-19.54-123.42-9.18-289.1-9.18-289.1",
                distance: 289.71,
                isReverse: !0
            }]
        },
        ba: {
            point: {
                x: 1398,
                y: 976.82
            },
            connections: [{
                to: "bb",
                direction: "n",
                path: "M1407.18,1266.34c-19.54-123.42-9.18-289.1-9.18-289.1",
                distance: 289.71,
                isReverse: !1
            }, {
                to: "ca",
                direction: "e",
                path: "M1398 976.82,L1233.42 976.82",
                distance: 164.58,
                isReverse: !0
            }]
        },
        al: {
            point: {
                x: 931.42,
                y: 11.02
            },
            connections: [{
                to: "er",
                direction: "e",
                path: "M931.42 11.02,L787.82 47.52",
                distance: 148.17,
                isReverse: !0
            }, {
                to: "ak",
                direction: "n",
                path: "M952.64 105.64,L931.42 11.02",
                distance: 96.97,
                isReverse: !1
            }]
        },
        ak: {
            point: {
                x: 952.64,
                y: 105.64
            },
            connections: [{
                to: "wo",
                direction: "w",
                path: "M1096.96 68.7,L952.64 105.64",
                distance: 148.97,
                isReverse: !1
            }, {
                to: "em",
                direction: "e",
                path: "M952.64 105.64,L808.82 142.08",
                distance: 148.36,
                isReverse: !0
            }, {
                to: "al",
                direction: "s",
                path: "M952.64 105.64,L931.42 11.02",
                distance: 96.97,
                isReverse: !0
            }, {
                to: "aj",
                direction: "n",
                path: "M973.88 200.26,L952.64 105.64",
                distance: 96.97,
                isReverse: !1
            }]
        },
        ah: {
            point: {
                x: 1016.32,
                y: 389.48
            },
            connections: [{
                to: "wg",
                direction: "w",
                path: "M1160.76 352.82,L1016.32 389.48",
                distance: 149.02,
                isReverse: !1
            }, {
                to: "ed",
                direction: "e",
                path: "M1016.32 389.48,L872.58 426.26",
                distance: 148.37,
                isReverse: !0
            }, {
                to: "aj",
                direction: "s",
                path: "M1016.32 389.48,L973.88 200.26",
                distance: 193.92,
                isReverse: !0
            }, {
                to: "af",
                direction: "n",
                path: "M1058.78 578.7,L1016.32 389.48",
                distance: 193.93,
                isReverse: !1
            }]
        },
        aj: {
            point: {
                x: 974.09,
                y: 200.84
            },
            connections: [{
                to: "ee",
                direction: "e",
                newDirection: "n",
                path: "M973.88,200.26L738.64,259.9c-29.32,7.44-47.44,36.82-40.92,66.36l9.54,43.14",
                distance: 373.1,
                isReverse: !0
            }, {
                to: "wm",
                direction: "w",
                path: "M1118.28 163.62,L973.86 200.26",
                distance: 149,
                isReverse: !1
            }, {
                to: "ak",
                direction: "s",
                path: "M973.88 200.26,L952.64 105.64",
                distance: 96.97,
                isReverse: !0
            }, {
                to: "ah",
                direction: "n",
                path: "M1016.32 389.48,L973.88 200.26",
                distance: 193.92,
                isReverse: !1
            }]
        },
        af: {
            point: {
                x: 1058.78,
                y: 578.7
            },
            connections: [{
                to: "wb",
                direction: "w",
                path: "M1192.8,595.3c-80.22-27.12-134-16.6-134-16.6",
                distance: 136.2,
                isReverse: !1
            }, {
                to: "ea",
                direction: "e",
                path: "M1058.78,578.7l-75.76,21.5c-23.36,6.64-47.86,7.1-71.08,1.48",
                distance: 150.64,
                isReverse: !0
            }, {
                to: "ae",
                direction: "n",
                path: "M1069,664.14c0-26.52-2.92-52.94-8.74-78.82l-1.48-6.62",
                distance: 86.25,
                isReverse: !1
            }, {
                to: "ah",
                direction: "s",
                path: "M1058.78 578.7,L1016.32 389.48",
                distance: 193.93,
                isReverse: !0
            }]
        },
        ae: {
            point: {
                x: 1069,
                y: 664.14
            },
            connections: [{
                to: "ea",
                direction: "e",
                newDirection: "s",
                path: "M1069,664.14c-67,21.3-73,39.1-103,73.1s-94,8-94-26s36-58,39.94-109.54",
                distance: 366.03,
                isReverse: !0
            }, {
                to: "af",
                direction: "s",
                path: "M1069,664.14c0-26.52-2.92-52.94-8.74-78.82l-1.48-6.62",
                distance: 86.25,
                isReverse: !0
            }, {
                to: "ad",
                direction: "n",
                path: "M1069 976.82,L1069 664.14",
                distance: 312.68,
                isReverse: !1
            }]
        },
        ad: {
            point: {
                x: 1069,
                y: 976.82
            },
            connections: [{
                to: "cb",
                direction: "e",
                path: "M1069,976.82c0,0-18,0-141,0c-9.22,0-18.24-0.74-27.12-2.1",
                distance: 168.23,
                isReverse: !0
            }, {
                to: "ca",
                direction: "w",
                path: "M1233.42 976.82,L1069 976.82",
                distance: 164.42,
                isReverse: !1
            }, {
                to: "ae",
                direction: "s",
                path: "M1069 976.82,L1069 664.14",
                distance: 312.68,
                isReverse: !0
            }, {
                to: "ac",
                direction: "n",
                path: "M1069 1212.4,L1069 976.82",
                distance: 235.58,
                isReverse: !1
            }]
        },
        ac: {
            point: {
                x: 1069,
                y: 1212.4
            },
            connections: [{
                to: "nq",
                direction: "w",
                path: "M1269.1,1241.18c-40.06-13.02-80.1-26.02-119.1-26.1c-16-0.02-44.2-1.14-81-2.68",
                distance: 203.49,
                isReverse: !1
            }, {
                to: "ad",
                direction: "s",
                path: "M1069 1212.4,L1069 976.82",
                distance: 235.58,
                isReverse: !0
            }, {
                to: "ab",
                direction: "n",
                path: "M1069 1690.7,L1069 1212.4",
                distance: 478.3,
                isReverse: !1
            }]
        },
        ab: {
            point: {
                x: 1069,
                y: 1690.7
            },
            connections: [{
                to: "bc",
                direction: "e",
                path: "M1069,1690.7c0,0-76.2-1.78-165-2.72",
                distance: 165.02,
                isReverse: !0
            }, {
                to: "bb",
                direction: "w",
                newDirection: "s",
                path: "M1069,1690.7c246.22,0,174.78-139.46,247.78-187.46c68.02-44.72,129.2-101.54,106-170c-6.62-19.54-11.72-42.4-15.6-66.9",
                distance: 627.77,
                isReverse: !0
            }, {
                to: "ac",
                direction: "s",
                path: "M1069 1690.7,L1069 1212.4",
                distance: 478.3,
                isReverse: !0
            }, {
                to: "aa",
                direction: "n",
                path: "M1069 1808.8,L1069 1690.7",
                distance: 118.1,
                isReverse: !1
            }]
        },
        aa: {
            point: {
                x: 1069,
                y: 1808.8
            },
            connections: [{
                to: "lf",
                direction: "e",
                path: "M1069,1808.8c-28.52-0.38-56.36-0.6-83.04-0.72",
                distance: 83.04,
                isReverse: !0
            }, {
                to: "gf",
                direction: "w",
                path: "M1220,1812.44c-50.66-1.86-101.84-3-151-3.66",
                distance: 151.05,
                isReverse: !1
            }, {
                to: "ab",
                direction: "s",
                path: "M1069 1808.8,L1069 1690.7",
                distance: 118.1,
                isReverse: !0
            }, {
                to: "am",
                direction: "n",
                path: "M1069 2141.23,L1069 1808.8",
                distance: 332.43,
                isReverse: !1
            }]
        },
        am: {
            point: {
                x: 1069,
                y: 2141.08
            },
            connections: [{
                to: "ll",
                direction: "e",
                newDirection: "s",
                path: "M1069,2141.23c-19.87,1.29-34.75,7.75-46.58-7.42c-11.83-15.17,12.58-65.51,0.56-80.53c-12.01-15.02-21.4-4.86-32.66,28.72c-7.84,23.38-4.2,59.23,14.08,80.53c19.09,22.24-8.15,26.41-27.4,10.73c-14.55-11.85-16.15-51.36-17.65-66.38c-0.86-8.56-10.67-20.87-28.16-5.17c-16.89,15.17,30.36,78.85,18.02,85.03c-18.58,9.3-35.48-79.86-54.62-73.67c-20.13,6.51-2.44,55.27-2.63,82.97",
                distance: 711.66,
                isReverse: !0
            }, {
                to: "aa",
                direction: "s",
                path: "M1069 2141.23,L1069 1808.8",
                distance: 332.43,
                isReverse: !0
            }]
        }
    },
    oae = `<div class="clamp">
    <div class="info"></div>
</div>
<div class="scene-box-wrapper">
    <div class="controls scene-box">
        <button class="move forward">
            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 356 300" xml:space="preserve">
                <path d="M21.83,300c43.08-33.67,97.28-53.74,156.17-53.74c58.89,0,113.09,20.07,156.17,53.74C334,299.32,356,276.28,356,276.28
		L178,25L0,276.28C0,276.28,22,299.32,21.83,300z"/>
            </svg>
        </button>
        <button class="move left">
            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 356 300" xml:space="preserve">
                <path d="M21.83,300c43.08-33.67,97.28-53.74,156.17-53.74c58.89,0,113.09,20.07,156.17,53.74C334,299.32,356,276.28,356,276.28
		L178,25L0,276.28C0,276.28,22,299.32,21.83,300z"/>
            </svg>
        </button>
        <button class="move right">
            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 356 300" xml:space="preserve">
                <path d="M21.83,300c43.08-33.67,97.28-53.74,156.17-53.74c58.89,0,113.09,20.07,156.17,53.74C334,299.32,356,276.28,356,276.28
		L178,25L0,276.28C0,276.28,22,299.32,21.83,300z"/>
            </svg>
        </button>
        <div class="map-container">
            <div class="frame">
                <div class="map">
                    <div class="destination"><p></p></div>
                </div>
            </div>
            <div class="car"></div>
        </div>
    </div>
</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`,
    aae = Ht.extend({
        defaults: {
            disabled: !1
        }
    });
s.registerPlugin(fo);
const rae = je.View.extend({
        className: "mechanic travel captain",
        template: ke.template(oae),
        model: new aae,
        boundOnKeyDown: null,
        directions: {
            n: 0,
            e: 270,
            s: 180,
            w: 90
        },
        turns: {
            n: {
                n: "+=0",
                e: "+=90",
                s: "+=180",
                w: "-=90"
            },
            e: {
                n: "-=90",
                e: "+=0",
                s: "+=90",
                w: "+=180"
            },
            s: {
                n: "+=180",
                e: "-=90",
                s: "+=0",
                w: "+=90"
            },
            w: {
                n: "+=90",
                e: "-=180",
                s: "-=90",
                w: "+=0"
            }
        },
        events: {
            "click .leave": "onLeaveClick",
            "click .forward": "onForwardClick",
            "click .left": "onLeftClick",
            "click .right": "onRightClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".info": {
                observe: ["participant", "destination"],
                updateMethod: "html",
                onGet([t, e]) {
                    return !t || !e ? "" : `Ask <span class="player-name ${t.avatar}">${t.name}</span> for directions to ${e.name}`
                }
            },
            ".scene-box-wrapper": {
                attributes: [{
                    name: "class",
                    observe: "turning",
                    onGet(t) {
                        return t || ""
                    }
                }]
            },
            ".move": {
                classes: {
                    disabled: "disabled"
                }
            },
            ".left": {
                classes: {
                    disabled: {
                        observe: "moveOptions",
                        onGet: t => !t[0]
                    }
                }
            },
            ".forward": {
                classes: {
                    disabled: {
                        observe: "moveOptions",
                        onGet: t => !t[1]
                    }
                }
            },
            ".right": {
                classes: {
                    disabled: {
                        observe: "moveOptions",
                        onGet: t => !t[2]
                    }
                }
            },
            ".destination": {
                attributes: [{
                    name: "style",
                    observe: "destination",
                    onGet: "getDestinationStyles"
                }]
            }
        },
        initialize() {
            this.listenTo(this.model, "change:locationId", this.updateMap), this.listenTo(this.model, "change:stepIndex", this.resetData), this.boundOnKeyDown = this.onKeyDown.bind(this), document.addEventListener("keydown", this.boundOnKeyDown), this.resetData()
        },
        resetData() {
            this.model.setUpdate({
                disabled: !1
            })
        },
        onRender() {
            this.stickit(), setTimeout(() => this.updateMap(this.model), 0)
        },
        onBeforeDestroy() {
            document.removeEventListener("keydown", this.boundOnKeyDown)
        },
        getMovement(t) {
            let e = null,
                n = null,
                i = null;
            const o = t.get("locationId").toLowerCase(),
                r = t.get("direction").toLowerCase(),
                V = ur[o].point;
            if (!V) throw Error("Unknown to point", o);
            e = {
                id: o,
                direction: r,
                point: V
            };
            let A = t.previous("locationId");
            if (A && (A = A.toLowerCase()), A && A !== e.id) {
                const c = t.previous("direction").toLowerCase(),
                    d = ur[A].point;
                if (!d) throw Error("Unknown from point", A);
                if (n = {
                        id: A,
                        direction: c,
                        point: d
                    }, i = ur[e.id].connections.find(m => m.to === n.id), !i) return [e, null, null]
            }
            return [e, n, i]
        },
        updateMap(t) {
            this.model.setUpdate({
                disabled: !1,
                turning: null
            });
            const [e, n, i] = this.getMovement(t);
            if (this.updateButtons(t), !n || e.id === n.id) {
                s.set(".frame", {
                    rotation: `${this.directions[e.direction]}`
                }), s.set(".map", {
                    x: -(1480 - e.point.x) + 224,
                    y: -(2280 - e.point.y) + 224
                });
                return
            }
            const o = i.distance / 200;
            s.to(".map", {
                motionPath: {
                    path: i.path,
                    offsetX: -1256,
                    offsetY: -2056
                },
                duration: o,
                delay: .25,
                runBackwards: i.isReverse
            }), s.to(".frame", {
                rotation: `${this.directions[e.direction]}_short`,
                duration: .25
            })
        },
        updateButtons(t) {
            const e = t.get("locationId").toLowerCase(),
                n = t.get("direction").toLowerCase(),
                i = ur[e].connections;
            if (!i) throw Error("Unknown to point", e);
            const o = {};
            let r = [];
            i.forEach(V => {
                o[V.direction] = !0
            }), n === "n" && (r = [o.w !== void 0, o.n !== void 0, o.e !== void 0]), n === "e" && (r = [o.n !== void 0, o.e !== void 0, o.s !== void 0]), n === "s" && (r = [o.e !== void 0, o.s !== void 0, o.w !== void 0]), n === "w" && (r = [o.s !== void 0, o.w !== void 0, o.n !== void 0]), this.model.setUpdate({
                moveOptions: r
            })
        },
        onLeftClick() {
            const t = this.model.get("moveOptions");
            this.model.get("disabled") || !t || !t[0] || (this.model.setUpdate({
                turning: "left",
                disabled: !0
            }), this.triggerMethod("client:message", {
                action: "move",
                direction: "LEFT"
            }))
        },
        onForwardClick() {
            const t = this.model.get("moveOptions");
            this.model.get("disabled") || !t || !t[1] || (this.model.setUpdate({
                disabled: !0
            }), this.triggerMethod("client:message", {
                action: "move",
                direction: "FORWARD"
            }))
        },
        onRightClick() {
            const t = this.model.get("moveOptions");
            this.model.get("disabled") || !t || !t[2] || (this.model.setUpdate({
                turning: "right",
                disabled: !0
            }), this.triggerMethod("client:message", {
                action: "move",
                direction: "RIGHT"
            }))
        },
        onKeyDown(t) {
            switch (t.keyCode) {
                case 37:
                    this.onLeftClick();
                    break;
                case 38:
                    this.onForwardClick();
                    break;
                case 39:
                    this.onRightClick();
                    break
            }
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        },
        getDestinationStyles(t) {
            const e = ur[t.locationId.toLowerCase()].point;
            if (!e) throw new Error("Unknown Destination Point");
            const n = 1480 - e.x,
                i = 2280 - e.y;
            return `transform: translate(${n}px, ${i}px);`
        }
    }),
    $s = {
        wo: {
            point: {
                x: 191.51,
                y: 1107.27
            },
            connections: [{
                to: "wm",
                direction: "n",
                path: "M180.86,1059.82c3.82,17.03,7.48,33.34,10.65,47.45",
                distance: 48.63,
                isReverse: !1
            }, {
                to: "ak",
                direction: "e",
                path: "M191.52 1107.27,L263.68 1088.8",
                distance: 74.49,
                isReverse: !0
            }, {
                to: "wn",
                direction: "w",
                path: "M119.93 1125.59,L191.52 1107.27",
                distance: 73.9,
                isReverse: !1
            }]
        },
        wn: {
            point: {
                x: 119.93,
                y: 1125.59
            },
            connections: [{
                to: "wl",
                direction: "n",
                path: "M109.25 1078,L119.93 1125.59",
                distance: 48.77,
                isReverse: !1
            }, {
                to: "wo",
                direction: "e",
                path: "M119.93 1125.59,L191.52 1107.27",
                distance: 73.9,
                isReverse: !0
            }]
        },
        wm: {
            point: {
                x: 180.86,
                y: 1059.82
            },
            connections: [{
                to: "wo",
                direction: "s",
                path: "M180.86,1059.82c3.82,17.03,7.48,33.34,10.65,47.45",
                distance: 48.63,
                isReverse: !0
            }, {
                to: "wj",
                direction: "n",
                path: "M170.24,1012.51c3.51,15.63,7.13,31.77,10.62,47.3",
                distance: 48.48,
                isReverse: !1
            }, {
                to: "wl",
                direction: "w",
                path: "M109.25 1077.99,L180.86 1059.82",
                distance: 73.88,
                isReverse: !1
            }, {
                to: "aj",
                direction: "e",
                path: "M180.86 1059.81,L253.07 1041.49",
                distance: 74.5,
                isReverse: !0
            }]
        },
        wl: {
            point: {
                x: 109.25,
                y: 1078
            },
            connections: [{
                to: "wn",
                direction: "s",
                path: "M109.25 1078,L119.93 1125.59",
                distance: 48.77,
                isReverse: !0
            }, {
                to: "wi",
                direction: "n",
                path: "M98.64 1030.68,L109.25 1078",
                distance: 48.49,
                isReverse: !1
            }, {
                to: "wk",
                direction: "w",
                path: "M30.5 1097.99,L109.25 1077.99",
                distance: 81.25,
                isReverse: !1
            }, {
                to: "wm",
                direction: "e",
                path: "M109.25 1077.99,L180.86 1059.82",
                distance: 73.88,
                isReverse: !0
            }]
        },
        wk: {
            point: {
                x: 30.5,
                y: 1097.99
            },
            connections: [{
                to: "wh",
                direction: "n",
                path: "M10.99,1052.91c6.36,14.45,13.34,30.49,19.5,45.08",
                distance: 49.12,
                isReverse: !1
            }, {
                to: "wl",
                direction: "e",
                path: "M30.5 1097.99,L109.25 1077.99",
                distance: 81.25,
                isReverse: !0
            }]
        },
        wh: {
            point: {
                x: 11.07,
                y: 1052.94
            },
            connections: [{
                to: "wk",
                direction: "s",
                path: "M10.99,1052.91c6.36,14.45,13.34,30.49,19.5,45.08",
                distance: 49.12,
                isReverse: !0
            }, {
                to: "wi",
                direction: "e",
                path: "M10.91 1052.95,L98.64 1030.68",
                distance: 90.51,
                isReverse: !0
            }]
        },
        wj: {
            point: {
                x: 170.24,
                y: 1012.51
            },
            connections: [{
                to: "wm",
                direction: "s",
                path: "M170.24,1012.51c3.51,15.63,7.13,31.77,10.62,47.3",
                distance: 48.48,
                isReverse: !0
            }, {
                to: "wg",
                direction: "n",
                path: "M159.62,965.21c3.2,14.26,6.85,30.49,10.62,47.3",
                distance: 48.48,
                isReverse: !1
            }, {
                to: "wi",
                direction: "w",
                path: "M98.64 1030.68,L170.24 1012.51",
                distance: 73.87,
                isReverse: !1
            }]
        },
        wi: {
            point: {
                x: 98.64,
                y: 1030.68
            },
            connections: [{
                to: "wf",
                direction: "n",
                path: "M87.92,983.4c5.97,26.51,10.72,47.28,10.72,47.28",
                distance: 48.48,
                isReverse: !1
            }, {
                to: "wl",
                direction: "s",
                path: "M98.64 1030.68,L109.25 1078",
                distance: 48.49,
                isReverse: !0
            }, {
                to: "wj",
                direction: "e",
                path: "M98.64 1030.68,L170.24 1012.51",
                distance: 73.87,
                isReverse: !0
            }, {
                to: "wh",
                direction: "w",
                path: "M10.91 1052.95,L98.64 1030.68",
                distance: 90.51,
                isReverse: !1
            }]
        },
        wg: {
            point: {
                x: 159.62,
                y: 965.21
            },
            connections: [{
                to: "wj",
                direction: "s",
                path: "M159.62,965.21c3.2,14.26,6.85,30.49,10.62,47.3",
                distance: 48.48,
                isReverse: !0
            }, {
                to: "we",
                direction: "n",
                path: "M148.25,914.48c0.24,1.19,0.49,2.36,0.75,3.52c1.68,7.45,5.61,24.93,10.62,47.21",
                distance: 51.99,
                isReverse: !1
            }, {
                to: "wf",
                direction: "w",
                path: "M87.92 983.4,L159.62 965.21",
                distance: 73.97,
                isReverse: !1
            }, {
                to: "ah",
                direction: "e",
                path: "M159.62 965.21,L231.84 946.88",
                distance: 74.51,
                isReverse: !0
            }]
        },
        wf: {
            point: {
                x: 87.92,
                y: 983.4
            },
            connections: [{
                to: "wi",
                direction: "s",
                path: "M87.92,983.4c5.97,26.51,10.72,47.28,10.72,47.28",
                distance: 48.48,
                isReverse: !0
            }, {
                to: "wd",
                direction: "n",
                path: "M74.84,924.74c4.16,18.94,8.92,40.19,13.08,58.66",
                distance: 60.1,
                isReverse: !1
            }, {
                to: "wg",
                direction: "e",
                path: "M87.92 983.4,L159.62 965.21",
                distance: 73.97,
                isReverse: !0
            }]
        },
        we: {
            point: {
                x: 148.25,
                y: 914.48
            },
            connections: [{
                to: "wg",
                direction: "s",
                path: "M148.25,914.48c0.24,1.19,0.49,2.36,0.75,3.52c1.68,7.45,5.61,24.93,10.62,47.21",
                distance: 51.99,
                isReverse: !0
            }, {
                to: "wb",
                direction: "n",
                path: "M143.6,843.97c0,0-1.49,39.88,4.65,70.51",
                distance: 70.79,
                isReverse: !1
            }, {
                to: "wd",
                direction: "w",
                path: "M74.84,924.74c25.14-2.45,50.77-6.3,73.41-10.27",
                distance: 74.14,
                isReverse: !1
            }]
        },
        wd: {
            point: {
                x: 74.84,
                y: 924.74
            },
            connections: [{
                to: "wf",
                direction: "s",
                path: "M74.84,924.74c4.16,18.94,8.92,40.19,13.08,58.66",
                distance: 60.1,
                isReverse: !0
            }, {
                to: "wa",
                direction: "n",
                path: "M60.73,800.99C59.43,825.67,62.3,872.47,68,893c1.85,8.83,4.23,19.83,6.84,31.74",
                distance: 125.01,
                isReverse: !1
            }, {
                to: "we",
                direction: "e",
                path: "M74.84,924.74c25.14-2.45,50.77-6.3,73.41-10.27",
                distance: 74.14,
                isReverse: !0
            }]
        },
        wb: {
            point: {
                x: 143.6,
                y: 843.97
            },
            connections: [{
                to: "we",
                direction: "s",
                path: "M143.6,843.97c0,0-1.49,39.88,4.65,70.51",
                distance: 70.79,
                isReverse: !0
            }, {
                to: "af",
                direction: "e",
                path: "M143.6,843.97c40.11,13.56,67,8.3,67,8.3",
                distance: 68.1,
                isReverse: !0
            }, {
                to: "wa",
                direction: "w",
                path: "M60.73,800.99c11.59,6.2,25.09,14.58,45.27,26.01c13.41,7.6,26.06,13.07,37.6,16.97",
                distance: 93.53,
                isReverse: !1
            }]
        },
        wa: {
            point: {
                x: 60.73,
                y: 800.99
            },
            connections: [{
                to: "wd",
                direction: "s",
                path: "M60.73,800.99C59.43,825.67,62.3,872.47,68,893c1.85,8.83,4.23,19.83,6.84,31.74",
                distance: 125.01,
                isReverse: !0
            }, {
                to: "wb",
                direction: "e",
                path: "M60.73,800.99c11.59,6.2,25.09,14.58,45.27,26.01c13.41,7.6,26.06,13.07,37.6,16.97",
                distance: 93.53,
                isReverse: !0
            }]
        },
        ey: {
            point: {
                x: 634.03,
                y: 1110
            },
            connections: [{
                to: "ev",
                direction: "n",
                path: "M630.43,1063c0.76,20.21,1.91,37.25,3.61,47",
                distance: 47.17,
                isReverse: !1
            }, {
                to: "bl",
                direction: "e",
                path: "M634.03 1110,L702.74 1110",
                distance: 68.71,
                isReverse: !0
            }, {
                to: "ex",
                direction: "w",
                path: "M572.27 1110,L634.03 1110",
                distance: 61.76,
                isReverse: !1
            }]
        },
        ex: {
            point: {
                x: 572.27,
                y: 1110
            },
            connections: [{
                to: "ew",
                direction: "w",
                path: "M501.27 1128.3,L572.27 1110",
                distance: 73.32,
                isReverse: !1
            }, {
                to: "eu",
                direction: "n",
                path: "M561.77 1063.05,L572.27 1110",
                distance: 48.11,
                isReverse: !1
            }, {
                to: "ey",
                direction: "e",
                path: "M572.27 1110,L634.03 1110",
                distance: 61.76,
                isReverse: !0
            }]
        },
        ew: {
            point: {
                x: 501.27,
                y: 1128.3
            },
            connections: [{
                to: "ex",
                direction: "e",
                path: "M501.27 1128.3,L572.27 1110",
                distance: 73.32,
                isReverse: !0
            }, {
                to: "et",
                direction: "n",
                path: "M490.51 1081.17,L501.27 1128.3",
                distance: 48.34,
                isReverse: !1
            }]
        },
        ev: {
            point: {
                x: 630.45,
                y: 1063
            },
            connections: [{
                to: "eq",
                direction: "n",
                path: "M629.32,1016c0.21,16.28,0.56,32.46,1.11,47",
                distance: 47.01,
                isReverse: !1
            }, {
                to: "ey",
                direction: "s",
                path: "M630.43,1063c0.76,20.21,1.91,37.25,3.61,47",
                distance: 47.17,
                isReverse: !0
            }, {
                to: "eu",
                direction: "w",
                path: "M562 1063,L630.45 1063",
                distance: 68.45,
                isReverse: !1
            }]
        },
        eu: {
            point: {
                x: 562,
                y: 1063
            },
            connections: [{
                to: "ev",
                direction: "e",
                path: "M562 1063,L630.45 1063",
                distance: 68.45,
                isReverse: !0
            }, {
                to: "et",
                direction: "w",
                path: "M490.51 1081.17,L561.77 1063.05",
                distance: 73.53,
                isReverse: !1
            }, {
                to: "ep",
                direction: "n",
                path: "M551.23 1015.95,L561.77 1063.05",
                distance: 48.26,
                isReverse: !1
            }, {
                to: "ex",
                direction: "s",
                path: "M561.77 1063.05,L572.27 1110",
                distance: 48.11,
                isReverse: !0
            }]
        },
        et: {
            point: {
                x: 490.51,
                y: 1081.17
            },
            connections: [{
                to: "eu",
                direction: "e",
                path: "M490.51 1081.17,L561.77 1063.05",
                distance: 73.53,
                isReverse: !0
            }, {
                to: "es",
                direction: "w",
                path: "M417.9 1099.62,L490.51 1081.17",
                distance: 74.92,
                isReverse: !1
            }, {
                to: "ew",
                direction: "s",
                path: "M490.51 1081.17,L501.27 1128.3",
                distance: 48.34,
                isReverse: !0
            }, {
                to: "eo",
                direction: "n",
                path: "M479.75 1034.05,L490.51 1081.17",
                distance: 48.33,
                isReverse: !1
            }]
        },
        es: {
            point: {
                x: 417.9,
                y: 1099.62
            },
            connections: [{
                to: "et",
                direction: "e",
                path: "M417.9 1099.62,L490.51 1081.17",
                distance: 74.92,
                isReverse: !0
            }, {
                to: "er",
                direction: "w",
                path: "M346.09 1117.86,L417.9 1099.62",
                distance: 74.09,
                isReverse: !1
            }, {
                to: "en",
                direction: "n",
                path: "M407.11 1052.4,L417.9 1099.62",
                distance: 48.44,
                isReverse: !1
            }]
        },
        er: {
            point: {
                x: 346.09,
                y: 1117.86
            },
            connections: [{
                to: "es",
                direction: "e",
                path: "M346.09 1117.86,L417.9 1099.62",
                distance: 74.09,
                isReverse: !0
            }, {
                to: "al",
                direction: "w",
                path: "M274.29 1136.11,L346.09 1117.86",
                distance: 74.08,
                isReverse: !1
            }, {
                to: "em",
                direction: "n",
                path: "M335.59 1070.58,L346.09 1117.86",
                distance: 48.43,
                isReverse: !1
            }]
        },
        eq: {
            point: {
                x: 629.36,
                y: 1016
            },
            connections: [{
                to: "el",
                direction: "n",
                path: "M629.02,968c0,15.04,0.08,31.57,0.3,48",
                distance: 48,
                isReverse: !1
            }, {
                to: "ev",
                direction: "s",
                path: "M629.32,1016c0.21,16.28,0.56,32.46,1.11,47",
                distance: 47.01,
                isReverse: !0
            }, {
                to: "bj",
                direction: "e",
                path: "M629.36 1016,L700 1016",
                distance: 70.64,
                isReverse: !0
            }, {
                to: "ep",
                direction: "w",
                path: "M551 1016,L629.36 1016",
                distance: 78.36,
                isReverse: !1
            }]
        },
        ep: {
            point: {
                x: 551,
                y: 1016
            },
            connections: [{
                to: "eq",
                direction: "e",
                path: "M551 1016,L629.36 1016",
                distance: 78.36,
                isReverse: !0
            }, {
                to: "eo",
                direction: "w",
                path: "M479.75 1034.05,L551 1016",
                distance: 73.5,
                isReverse: !1
            }, {
                to: "ek",
                direction: "n",
                path: "M540.52 968.11,L551.23 1015.95",
                distance: 49.02,
                isReverse: !1
            }, {
                to: "eu",
                direction: "s",
                path: "M551.23 1015.95,L561.77 1063.05",
                distance: 48.26,
                isReverse: !0
            }]
        },
        eo: {
            point: {
                x: 479.75,
                y: 1034.05
            },
            connections: [{
                to: "ep",
                direction: "e",
                path: "M479.75 1034.05,L551 1016",
                distance: 73.5,
                isReverse: !0
            }, {
                to: "en",
                direction: "w",
                path: "M407.12 1052.45,L479.75 1034.05",
                distance: 74.92,
                isReverse: !1
            }, {
                to: "et",
                direction: "s",
                path: "M479.75 1034.05,L490.51 1081.17",
                distance: 48.33,
                isReverse: !0
            }, {
                to: "ej",
                direction: "n",
                path: "M469 987,L479.75 1034.05",
                distance: 48.26,
                isReverse: !1
            }]
        },
        en: {
            point: {
                x: 407.12,
                y: 1052.45
            },
            connections: [{
                to: "eo",
                direction: "e",
                path: "M407.12 1052.45,L479.75 1034.05",
                distance: 74.92,
                isReverse: !0
            }, {
                to: "em",
                direction: "w",
                path: "M335.59 1070.58,L407.12 1052.45",
                distance: 73.79,
                isReverse: !1
            }, {
                to: "es",
                direction: "s",
                path: "M407.11 1052.4,L417.9 1099.62",
                distance: 48.44,
                isReverse: !0
            }]
        },
        em: {
            point: {
                x: 335.59,
                y: 1070.58
            },
            connections: [{
                to: "en",
                direction: "e",
                path: "M335.59 1070.58,L407.12 1052.45",
                distance: 73.79,
                isReverse: !0
            }, {
                to: "ak",
                direction: "w",
                path: "M263.68 1088.8,L335.59 1070.58",
                distance: 74.18,
                isReverse: !1
            }, {
                to: "er",
                direction: "s",
                path: "M335.59 1070.58,L346.09 1117.86",
                distance: 48.43,
                isReverse: !0
            }]
        },
        el: {
            point: {
                x: 629.02,
                y: 968.06
            },
            connections: [{
                to: "eq",
                direction: "s",
                path: "M629.02,968c0,15.04,0.08,31.57,0.3,48",
                distance: 48,
                isReverse: !0
            }, {
                to: "ei",
                direction: "n",
                path: "M629.39,907c0,0-0.38,26.63-0.37,61",
                distance: 61,
                isReverse: !1
            }, {
                to: "ek",
                direction: "w",
                path: "M540.52 968.11,L629.02 968.06",
                distance: 88.5,
                isReverse: !1
            }]
        },
        ek: {
            point: {
                x: 540.52,
                y: 968.11
            },
            connections: [{
                to: "ej",
                direction: "w",
                path: "M469 987,L540.52 968.11",
                distance: 73.97,
                isReverse: !1
            }, {
                to: "eg",
                direction: "n",
                path: "M529.98 921.01,L540.52 968.11",
                distance: 48.26,
                isReverse: !1
            }, {
                to: "ep",
                direction: "s",
                path: "M540.52 968.11,L551.23 1015.95",
                distance: 49.02,
                isReverse: !0
            }, {
                to: "el",
                direction: "e",
                path: "M540.52 968.11,L629.02 968.06",
                distance: 88.5,
                isReverse: !0
            }]
        },
        ej: {
            point: {
                x: 469,
                y: 987
            },
            connections: [{
                to: "ef",
                direction: "n",
                path: "M458.06 938.98,L469 987",
                distance: 49.25,
                isReverse: !1
            }, {
                to: "ek",
                direction: "e",
                path: "M469 987,L540.52 968.11",
                distance: 73.97,
                isReverse: !0
            }, {
                to: "eo",
                direction: "s",
                path: "M469 987,L479.75 1034.05",
                distance: 48.26,
                isReverse: !0
            }]
        },
        ei: {
            point: {
                x: 629.39,
                y: 907
            },
            connections: [{
                to: "eh",
                direction: "w",
                path: "M586.11,907.9c4.86-0.6,9.76-0.9,14.66-0.9h28.62",
                distance: 43.32,
                isReverse: !1
            }, {
                to: "el",
                direction: "s",
                path: "M629.39,907c0,0-0.38,26.63-0.37,61",
                distance: 61,
                isReverse: !0
            }, {
                to: "bh",
                direction: "e",
                path: "M629.39 907,L698.73 907",
                distance: 69.34,
                isReverse: !0
            }]
        },
        eh: {
            point: {
                x: 586.11,
                y: 907.9
            },
            connections: [{
                to: "ei",
                direction: "e",
                path: "M586.11,907.9c4.86-0.6,9.76-0.9,14.66-0.9h28.62",
                distance: 43.32,
                isReverse: !0
            }, {
                to: "ec",
                direction: "n",
                newDirection: "w",
                path: "M512.99,845.06c11.49-2.48,21.96-4.95,30.94-7.19c17.57-4.36,34.98,7.69,37.05,25.67l5.12,44.36",
                distance: 127.42,
                isReverse: !1
            }, {
                to: "eg",
                direction: "w",
                path: "M529.98,921.01l41.68-10.42c4.76-1.19,9.58-2.09,14.44-2.68",
                distance: 57.66,
                isReverse: !1
            }]
        },
        eg: {
            point: {
                x: 529.98,
                y: 921.01
            },
            connections: [{
                to: "eh",
                direction: "e",
                path: "M529.98,921.01l41.68-10.42c4.76-1.19,9.58-2.09,14.44-2.68",
                distance: 57.66,
                isReverse: !0
            }, {
                to: "ef",
                direction: "w",
                path: "M458.07 938.99,L529.98 921.01",
                distance: 74.12,
                isReverse: !1
            }, {
                to: "ec",
                direction: "n",
                path: "M512.99 845.06,L529.98 921.01",
                distance: 77.83,
                isReverse: !1
            }, {
                to: "ek",
                direction: "s",
                path: "M529.98 921.01,L540.52 968.11",
                distance: 48.26,
                isReverse: !0
            }]
        },
        ef: {
            point: {
                x: 458.07,
                y: 938.99
            },
            connections: [{
                to: "eg",
                direction: "e",
                path: "M458.07 938.99,L529.98 921.01",
                distance: 74.12,
                isReverse: !0
            }, {
                to: "ee",
                direction: "w",
                path: "M386.37 956.92,L458.07 938.99",
                distance: 73.91,
                isReverse: !1
            }, {
                to: "ej",
                direction: "s",
                path: "M458.06 938.98,L469 987",
                distance: 49.25,
                isReverse: !0
            }, {
                to: "eb",
                direction: "n",
                path: "M439.84 857.74,L458.06 938.98",
                distance: 83.26,
                isReverse: !1
            }]
        },
        ee: {
            point: {
                x: 386.37,
                y: 956.92
            },
            connections: [{
                to: "aj",
                direction: "s",
                newDirection: "w",
                path: "M253.06,1041.49l117.62-29.82c14.66-3.72,23.72-18.41,20.46-33.18l-4.77-21.57",
                distance: 186.55,
                isReverse: !1
            }, {
                to: "ed",
                direction: "n",
                newDirection: "w",
                path: "M303.71,928.49l44.26-11.32c15.33-3.92,30.86,5.63,34.28,21.08l4.13,18.66",
                distance: 109.7,
                isReverse: !1
            }, {
                to: "ef",
                direction: "e",
                path: "M386.37 956.92,L458.07 938.99",
                distance: 73.91,
                isReverse: !0
            }]
        },
        ed: {
            point: {
                x: 303.71,
                y: 928.49
            },
            connections: [{
                to: "ee",
                direction: "e",
                newDirection: "s",
                path: "M303.71,928.49l44.26-11.32c15.33-3.92,30.86,5.63,34.28,21.08l4.13,18.66",
                distance: 109.7,
                isReverse: !0
            }, {
                to: "ah",
                direction: "w",
                path: "M231.84 946.88,L303.71 928.49",
                distance: 74.19,
                isReverse: !1
            }, {
                to: "ea",
                direction: "n",
                path: "M284.03 840.77,L303.71 928.49",
                distance: 89.9,
                isReverse: !1
            }]
        },
        ec: {
            point: {
                x: 512.99,
                y: 845.06
            },
            connections: [{
                to: "eh",
                direction: "e",
                newDirection: "s",
                path: "M512.99,845.06c11.49-2.48,21.96-4.95,30.94-7.19c17.57-4.36,34.98,7.69,37.05,25.67l5.12,44.36",
                distance: 127.42,
                isReverse: !0
            }, {
                to: "eb",
                direction: "w",
                path: "M439.84,857.74c26.02-3.25,51.42-7.99,73.15-12.68",
                distance: 74.26,
                isReverse: !1
            }, {
                to: "eg",
                direction: "s",
                path: "M512.99 845.06,L529.98 921.01",
                distance: 77.83,
                isReverse: !0
            }]
        },
        eb: {
            point: {
                x: 439.84,
                y: 857.74
            },
            connections: [{
                to: "ec",
                direction: "e",
                path: "M439.84,857.74c26.02-3.25,51.42-7.99,73.15-12.68",
                distance: 74.26,
                isReverse: !0
            }, {
                to: "ea",
                direction: "w",
                path: "M284.03,840.77c5.74,1.38,11.32,3.51,16.6,6.37c32.58,17.66,87.14,17.11,139.21,10.6",
                distance: 159.37,
                isReverse: !1
            }, {
                to: "ef",
                direction: "s",
                path: "M439.84 857.74,L458.06 938.98",
                distance: 83.26,
                isReverse: !0
            }]
        },
        ea: {
            point: {
                x: 284.03,
                y: 840.77
            },
            connections: [{
                to: "eb",
                direction: "e",
                path: "M284.03,840.77c5.74,1.38,11.32,3.51,16.6,6.37c32.58,17.66,87.14,17.11,139.21,10.6",
                distance: 159.37,
                isReverse: !0
            }, {
                to: "af",
                direction: "w",
                path: "M210.61,852.27l37.88-10.75c11.68-3.32,23.93-3.55,35.54-0.74",
                distance: 75.32,
                isReverse: !1
            }, {
                to: "ae",
                direction: "n",
                newDirection: "w",
                path: "M205.5,809.55C239,798.9,242,790,257,773s47-4,47,13s-18,29-19.97,54.77",
                distance: 183.01,
                isReverse: !1
            }, {
                to: "ed",
                direction: "s",
                path: "M284.03 840.77,L303.71 928.49",
                distance: 89.9,
                isReverse: !0
            }]
        },
        n3: {
            point: {
                x: 412,
                y: 664
            },
            connections: [{
                to: "nz",
                direction: "e",
                newDirection: "n",
                path: "M484.39,615.84c0,0,12.61,39.16,0.61,48.16s-56,2-73,0",
                distance: 124.17,
                isReverse: !1
            }]
        },
        n2: {
            point: {
                x: 139,
                y: 722
            },
            connections: [{
                to: "ca",
                direction: "n",
                path: "M123.29,653.21c0,0-10.29,40.79,15.71,68.79",
                distance: 73.28,
                isReverse: !1
            }]
        },
        n1: {
            point: {
                x: 587,
                y: 588
            },
            connections: [{
                to: "nv",
                direction: "n",
                path: "M590.55,534.24C594.58,546.76,594,570,587,588",
                distance: 54.71,
                isReverse: !1
            }]
        },
        n0: {
            point: {
                x: 535.8,
                y: 616.61
            },
            connections: [{
                to: "nw",
                direction: "e",
                newDirection: "n",
                path: "M647.02,538.97c0.94,2.65,4.74,11.83,5.7,13.89C665.01,579.05,657,612,643,617s-107.2-0.39-107.2-0.39",
                distance: 192.79,
                isReverse: !1
            }, {
                to: "cc",
                direction: "s",
                path: "M535.8,616.61c0.12,53.33,0.2,90.43,0.2,90.43",
                distance: 90.43,
                isReverse: !0
            }, {
                to: "nu",
                direction: "n",
                path: "M535.62,534.08c0.06,29.62,0.13,57.82,0.18,82.53",
                distance: 82.53,
                isReverse: !1
            }, {
                to: "nz",
                direction: "w",
                path: "M484.39,615.84c22,0.69,42.66,1.12,51.41,0.77",
                distance: 51.42,
                isReverse: !1
            }]
        },
        nz: {
            point: {
                x: 484.39,
                y: 615.84
            },
            connections: [{
                to: "ny",
                direction: "w",
                path: "M292.52,612.37c6.83,0,11.72-4.07,21.29-4.02c13.52,0.06,104.58,5.41,170.58,7.49",
                distance: 192.51,
                isReverse: !1
            }, {
                to: "n0",
                direction: "e",
                path: "M484.39,615.84c22,0.69,42.66,1.12,51.41,0.77",
                distance: 51.42,
                isReverse: !0
            }, {
                to: "n3",
                direction: "s",
                newDirection: "e",
                path: "M484.39,615.84c0,0,12.61,39.16,0.61,48.16s-56,2-73,0",
                distance: 124.17,
                isReverse: !0
            }, {
                to: "nt",
                direction: "n",
                path: "M462.01,540.33c-1,31.73,22.38,75.51,22.38,75.51",
                distance: 79.47,
                isReverse: !1
            }]
        },
        ny: {
            point: {
                x: 292.52,
                y: 612.37
            },
            connections: [{
                to: "nr",
                direction: "n",
                path: "M293.12,539c0.08,27.69-0.09,53.18-0.6,73.37",
                distance: 73.37,
                isReverse: !1
            }, {
                to: "cb",
                direction: "s",
                path: "M292.52,612.37c-0.49,19.23-1.74,34.91-2.96,41.89",
                distance: 42.02,
                isReverse: !0
            }, {
                to: "nz",
                direction: "e",
                path: "M292.52,612.37c6.83,0,11.72-4.07,21.29-4.02c13.52,0.06,104.58,5.41,170.58,7.49",
                distance: 192.51,
                isReverse: !0
            }]
        },
        nx: {
            point: {
                x: 130,
                y: 599
            },
            connections: [{
                to: "nq",
                direction: "n",
                path: "M105.45,521.03c0,0-1.45,54.97,24.55,77.97",
                distance: 83.92,
                isReverse: !1
            }]
        },
        nw: {
            point: {
                x: 647.02,
                y: 538.97
            },
            connections: [{
                to: "np",
                direction: "n",
                newDirection: "w",
                path: "M535.49,474.62c33.5,0,49.46-7.3,75.46-3.3c23.25,3.58,28.15,45.28,36.08,67.65",
                distance: 156,
                isReverse: !1
            }, {
                to: "n0",
                direction: "s",
                newDirection: "w",
                path: "M647.02,538.97c0.94,2.65,4.74,11.83,5.7,13.89C665.01,579.05,657,612,643,617s-107.2-0.39-107.2-0.39",
                distance: 192.79,
                isReverse: !0
            }, {
                to: "nv",
                direction: "w",
                path: "M590.55,534.24c22.34,0.48,44.94,1.72,56.48,4.72",
                distance: 56.77,
                isReverse: !1
            }]
        },
        nv: {
            point: {
                x: 590.55,
                y: 534.24
            },
            connections: [{
                to: "nw",
                direction: "e",
                path: "M590.55,534.24c22.34,0.48,44.94,1.72,56.48,4.72",
                distance: 56.77,
                isReverse: !0
            }, {
                to: "nu",
                direction: "w",
                path: "M535.62,534.08c10.5-0.04,32.58-0.32,54.93,0.17",
                distance: 54.93,
                isReverse: !1
            }, {
                to: "n1",
                direction: "s",
                newDirection: "n",
                path: "M590.55,534.24C594.58,546.76,594,570,587,588",
                distance: 54.71,
                isReverse: !0
            }]
        },
        nu: {
            point: {
                x: 535.62,
                y: 534.08
            },
            connections: [{
                to: "np",
                direction: "n",
                path: "M535.49,474.62c0.04,20.04,0.09,40.05,0.13,59.45",
                distance: 59.45,
                isReverse: !1
            }, {
                to: "n0",
                direction: "s",
                path: "M535.62,534.08c0.06,29.62,0.13,57.82,0.18,82.53",
                distance: 82.53,
                isReverse: !0
            }, {
                to: "nv",
                direction: "e",
                path: "M535.62,534.08c10.5-0.04,32.58-0.32,54.93,0.17",
                distance: 54.93,
                isReverse: !0
            }, {
                to: "nt",
                direction: "w",
                path: "M462.01,540.33c24.12,0.24,48.48-1.13,73.61-6.25",
                distance: 74.02,
                isReverse: !1
            }]
        },
        nt: {
            point: {
                x: 462.01,
                y: 540.33
            },
            connections: [{
                to: "nz",
                direction: "s",
                path: "M462.01,540.33c-1,31.73,22.38,75.51,22.38,75.51",
                distance: 79.47,
                isReverse: !0
            }, {
                to: "nu",
                direction: "e",
                path: "M462.01,540.33c24.12,0.24,48.48-1.13,73.61-6.25",
                distance: 74.02,
                isReverse: !0
            }, {
                to: "home",
                direction: "w",
                path: "M370,535.94c30.98,1.14,61.29,4.08,92.01,4.39",
                distance: 92.12,
                isReverse: !1
            }]
        },
        home: {
            point: {
                x: 370,
                y: 535.94
            },
            connections: [{
                to: "nt",
                direction: "e",
                path: "M370,535.94c30.98,1.14,61.29,4.08,92.01,4.39",
                distance: 92.12,
                isReverse: !0
            }, {
                to: "nr",
                direction: "w",
                path: "M293,539c26.49-3.74,51.96-3.98,77-3.06",
                distance: 77.16,
                isReverse: !1
            }]
        },
        nr: {
            point: {
                x: 293.12,
                y: 539
            },
            connections: [{
                to: "ny",
                direction: "s",
                path: "M293.12,539c0.08,27.69-0.09,53.18-0.6,73.37",
                distance: 73.37,
                isReverse: !0
            }, {
                to: "ng",
                direction: "n",
                path: "M291.66,417.01c0.76,39.27,1.35,82.83,1.46,121.99",
                distance: 122,
                isReverse: !1
            }, {
                to: "home",
                direction: "e",
                path: "M293,539c26.49-3.74,51.96-3.98,77-3.06",
                distance: 77.16,
                isReverse: !0
            }]
        },
        nq: {
            point: {
                x: 105.45,
                y: 521.03
            },
            connections: [{
                to: "nf",
                direction: "n",
                path: "M128.5,401.25C116.5,416.75,105,434,105,457c0,14.87,0.45,64.03,0.45,64.03",
                distance: 125.76,
                isReverse: !1
            }, {
                to: "ac",
                direction: "e",
                path: "M105.45,521.03c20.03,6.51,40.05,13.01,59.55,13.05c8,0.01,22.1,0.57,40.5,1.34",
                distance: 101.74,
                isReverse: !0
            }, {
                to: "bb",
                direction: "w",
                path: "M36.79,508.45c22.39-2.44,45.54,5.07,68.66,12.58",
                distance: 70.34,
                isReverse: !1
            }, {
                to: "nx",
                direction: "s",
                newDirection: "n",
                path: "M105.45,521.03c0,0-1.45,54.97,24.55,77.97",
                distance: 83.92,
                isReverse: !0
            }]
        },
        np: {
            point: {
                x: 535.49,
                y: 474.62
            },
            connections: [{
                to: "nu",
                direction: "s",
                path: "M535.49,474.62c0.04,20.04,0.09,40.05,0.13,59.45",
                distance: 59.45,
                isReverse: !0
            }, {
                to: "nw",
                direction: "e",
                newDirection: "s",
                path: "M535.49,474.62c33.5,0,49.46-7.3,75.46-3.3c23.25,3.58,28.15,45.28,36.08,67.65",
                distance: 156,
                isReverse: !0
            }, {
                to: "nj",
                direction: "n",
                path: "M535.32,396.99c0.05,25.06,0.11,51.37,0.17,77.63",
                distance: 77.63,
                isReverse: !1
            }, {
                to: "no",
                direction: "w",
                path: "M494.01,474.62c22.69,0,41.48,0,41.48,0",
                distance: 41.48,
                isReverse: !1
            }]
        },
        no: {
            point: {
                x: 494.01,
                y: 474.62
            },
            connections: [{
                to: "ne",
                direction: "n",
                newDirection: "w",
                path: "M411.58,355.72c34.65,0,69.95,3.53,79.04,34.51c7.66,26.08,4.5,73.16,3.38,84.39",
                distance: 177.9,
                isReverse: !1
            }, {
                to: "np",
                direction: "e",
                path: "M494.01,474.62c22.69,0,41.48,0,41.48,0",
                distance: 41.48,
                isReverse: !0
            }, {
                to: "nn",
                direction: "w",
                path: "M411.58,474.62c11.52,0,51.14,0,82.42,0",
                distance: 82.42,
                isReverse: !1
            }]
        },
        nn: {
            point: {
                x: 411.58,
                y: 474.62
            },
            connections: [{
                to: "no",
                direction: "e",
                path: "M411.58,474.62c11.52,0,51.14,0,82.42,0",
                distance: 82.42,
                isReverse: !0
            }, {
                to: "ni",
                direction: "w",
                newDirection: "n",
                path: "M370.44,415.17c0,0,0,59.45,41.14,59.45",
                distance: 80.52,
                isReverse: !1
            }, {
                to: "ne",
                direction: "n",
                path: "M411.58 355.72,L411.58 474.62",
                distance: 118.9,
                isReverse: !1
            }]
        },
        nm: {
            point: {
                x: 335,
                y: 484
            },
            connections: [{
                to: "nh",
                direction: "n",
                path: "M329,417.39c0,0-2,49.61,6,66.61",
                distance: 67.27,
                isReverse: !1
            }]
        },
        nl: {
            point: {
                x: 161,
                y: 477
            },
            connections: [{
                to: "nf",
                direction: "n",
                newDirection: "w",
                path: "M128.5,401.25c51-1,38.5,43.75,32.5,75.75",
                distance: 101.33,
                isReverse: !1
            }]
        },
        nk: {
            point: {
                x: 583.35,
                y: 438
            },
            connections: [{
                to: "nj",
                direction: "n",
                newDirection: "w",
                path: "M535.32,396.99c0,0,45.79,4.22,48.03,41.01",
                distance: 68.85,
                isReverse: !1
            }]
        },
        nj: {
            point: {
                x: 535.32,
                y: 396.99
            },
            connections: [{
                to: "bf",
                direction: "n",
                path: "M535.16,320.24c0.05,22.87,0.1,49.04,0.16,76.75",
                distance: 76.75,
                isReverse: !1
            }, {
                to: "np",
                direction: "s",
                path: "M535.32,396.99c0.05,25.06,0.11,51.37,0.17,77.63",
                distance: 77.63,
                isReverse: !0
            }, {
                to: "nk",
                direction: "e",
                newDirection: "n",
                path: "M535.32,396.99c0,0,45.79,4.22,48.03,41.01",
                distance: 68.85,
                isReverse: !0
            }]
        },
        ni: {
            point: {
                x: 370.44,
                y: 415.17
            },
            connections: [{
                to: "nh",
                direction: "w",
                path: "M329,417.39c25.64-0.45,41.45-2.22,41.45-2.22",
                distance: 41.52,
                isReverse: !1
            }, {
                to: "nn",
                direction: "s",
                newDirection: "e",
                path: "M370.44,415.17c0,0,0,59.45,41.14,59.45",
                distance: 80.52,
                isReverse: !0
            }, {
                to: "bd",
                direction: "n",
                path: "M370.44,297.72c0,58.82,0.01,117.45,0.01,117.45",
                distance: 117.45,
                isReverse: !1
            }]
        },
        nh: {
            point: {
                x: 329,
                y: 417.39
            },
            connections: [{
                to: "ni",
                direction: "e",
                path: "M329,417.39c25.64-0.45,41.45-2.22,41.45-2.22",
                distance: 41.52,
                isReverse: !0
            }, {
                to: "nm",
                direction: "s",
                newDirection: "n",
                path: "M329,417.39c0,0-2,49.61,6,66.61",
                distance: 67.27,
                isReverse: !0
            }, {
                to: "ng",
                direction: "w",
                path: "M291.66,417.01c13.9,0.52,26.5,0.57,37.34,0.39",
                distance: 37.35,
                isReverse: !1
            }]
        },
        ng: {
            point: {
                x: 291.66,
                y: 417.01
            },
            connections: [{
                to: "nc",
                direction: "n",
                path: "M290.25,356.02c0.48,17.89,0.97,38.75,1.4,60.99",
                distance: 61.01,
                isReverse: !1
            }, {
                to: "nr",
                direction: "s",
                path: "M291.66,417.01c0.76,39.27,1.35,82.83,1.46,121.99",
                distance: 122,
                isReverse: !0
            }, {
                to: "nh",
                direction: "e",
                path: "M291.66,417.01c13.9,0.52,26.5,0.57,37.34,0.39",
                distance: 37.35,
                isReverse: !0
            }]
        },
        nf: {
            point: {
                x: 128.5,
                y: 401.25
            },
            connections: [{
                to: "nq",
                direction: "s",
                path: "M128.5,401.25C116.5,416.75,105,434,105,457c0,14.87,0.45,64.03,0.45,64.03",
                distance: 125.76,
                isReverse: !0
            }, {
                to: "nl",
                direction: "e",
                newDirection: "n",
                path: "M128.5,401.25c51-1,38.5,43.75,32.5,75.75",
                distance: 101.33,
                isReverse: !0
            }, {
                to: "na",
                direction: "n",
                newDirection: "s",
                path: "M155,356c-2,16-14.5,29.75-26.5,45.25",
                distance: 53.09,
                isReverse: !1
            }]
        },
        ne: {
            point: {
                x: 411.58,
                y: 355.72
            },
            connections: [{
                to: "no",
                direction: "e",
                newDirection: "s",
                path: "M411.58,355.72c34.65,0,69.95,3.53,79.04,34.51c7.66,26.08,4.5,73.16,3.38,84.39",
                distance: 177.9,
                isReverse: !0
            }, {
                to: "nn",
                direction: "s",
                path: "M411.58 355.72,L411.58 474.62",
                distance: 118.9,
                isReverse: !0
            }, {
                to: "be",
                direction: "n",
                path: "M411.58 296.27,L411.58 355.72",
                distance: 59.45,
                isReverse: !1
            }]
        },
        nd: {
            point: {
                x: 342,
                y: 366
            },
            connections: [{
                to: "nc",
                direction: "w",
                path: "M290.25,356.02c12,0,40.75-1.02,51.75,9.98",
                distance: 53.83,
                isReverse: !1
            }]
        },
        nc: {
            point: {
                x: 290.25,
                y: 356.02
            },
            connections: [{
                to: "ng",
                direction: "s",
                path: "M290.25,356.02c0.48,17.89,0.97,38.75,1.4,60.99",
                distance: 61.01,
                isReverse: !0
            }, {
                to: "bc",
                direction: "n",
                path: "M288,297.63c0.53,4.25,1.39,26.66,2.25,58.39",
                distance: 58.44,
                isReverse: !1
            }, {
                to: "nd",
                direction: "e",
                newDirection: "w",
                path: "M290.25,356.02c12,0,40.75-1.02,51.75,9.98",
                distance: 53.83,
                isReverse: !0
            }, {
                to: "nb",
                direction: "w",
                newDirection: "e",
                path: "M237,356c12,6,36.41,0.02,53.25,0.02",
                distance: 53.72,
                isReverse: !1
            }]
        },
        nb: {
            point: {
                x: 237,
                y: 356
            },
            connections: [{
                to: "nc",
                direction: "e",
                path: "M237,356c12,6,36.41,0.02,53.25,0.02",
                distance: 53.72,
                isReverse: !0
            }]
        },
        na: {
            point: {
                x: 155,
                y: 356
            },
            connections: [{
                to: "nf",
                direction: "s",
                path: "M155,356c-2,16-14.5,29.75-26.5,45.25",
                distance: 53.09,
                isReverse: !0
            }]
        },
        lk: {
            point: {
                x: 702,
                y: 343.06
            },
            connections: [{
                to: "lj",
                direction: "n",
                path: "M712.37,255.97c0,0-12.37,63.14-10.37,87.08",
                distance: 87.86,
                isReverse: !1
            }, {
                to: "li",
                direction: "w",
                path: "M535,236.81c0,0,30-2.81,66,25.19c27.7,21.54,53.62,60.25,101,81.06",
                distance: 202.26,
                isReverse: !1
            }]
        },
        lj: {
            point: {
                x: 712.36,
                y: 255.98
            },
            connections: [{
                to: "lk",
                direction: "s",
                path: "M712.37,255.97c0,0-12.37,63.14-10.37,87.08",
                distance: 87.86,
                isReverse: !0
            }, {
                to: "lm",
                direction: "w",
                newDirection: "n",
                path: "M598.7,155.51c0,19.81,51.07,85.09,113.66,100.47",
                distance: 157.63,
                isReverse: !1
            }]
        },
        li: {
            point: {
                x: 535,
                y: 236.81
            },
            connections: [{
                to: "bf",
                direction: "s",
                path: "M535,236.81c0,5.1,0.06,37.64,0.16,83.43",
                distance: 83.43,
                isReverse: !0
            }, {
                to: "lh",
                direction: "w",
                path: "M435,236.19c12.4,0.24,35.83,0.62,58.86,0.62c33.5,0,41.14,0,41.14,0",
                distance: 100,
                isReverse: !1
            }, {
                to: "lk",
                direction: "e",
                path: "M535,236.81c0,0,30-2.81,66,25.19c27.7,21.54,53.62,60.25,101,81.06",
                distance: 202.26,
                isReverse: !0
            }, {
                to: "lc",
                direction: "n",
                path: "M491.04,51.99c6,65,43.96,118.82,43.96,184.82",
                distance: 190.75,
                isReverse: !1
            }]
        },
        lh: {
            point: {
                x: 435,
                y: 236.19
            },
            connections: [{
                to: "lb",
                direction: "n",
                path: "M452.99,51.53c0,0,3,139.66-18,184.66",
                distance: 186.48,
                isReverse: !1
            }, {
                to: "li",
                direction: "e",
                path: "M435,236.19c12.4,0.24,35.83,0.62,58.86,0.62c33.5,0,41.14,0,41.14,0",
                distance: 100,
                isReverse: !0
            }, {
                to: "lg",
                direction: "w",
                path: "M370.44,236.81L426,236c0,0,3.36,0.08,9,0.19",
                distance: 64.57,
                isReverse: !1
            }]
        },
        lg: {
            point: {
                x: 370.44,
                y: 236.81
            },
            connections: [{
                to: "lf",
                direction: "w",
                path: "M247.02,237.58c61.98,0.25,111.36-0.76,123.42-0.76",
                distance: 123.42,
                isReverse: !1
            }, {
                to: "le",
                direction: "n",
                path: "M370.44,177.36c0,4.59,0,28.47,0,59.45",
                distance: 59.45,
                isReverse: !1
            }, {
                to: "lh",
                direction: "e",
                path: "M370.44,236.81L426,236c0,0,3.36,0.08,9,0.19",
                distance: 64.57,
                isReverse: !0
            }]
        },
        lf: {
            point: {
                x: 247.02,
                y: 237.62
            },
            connections: [{
                to: "aa",
                direction: "w",
                path: "M205.5,237.22c14.26,0.19,28.18,0.3,41.52,0.36",
                distance: 41.52,
                isReverse: !1
            }, {
                to: "ld",
                direction: "n",
                newDirection: "e",
                path: "M288.17,117.91c-45.14,1.66-41.14,42.62-41.14,59.45s0,60.22,0,60.22",
                distance: 143.67,
                isReverse: !1
            }, {
                to: "lg",
                direction: "e",
                path: "M247.02,237.58c61.98,0.25,111.36-0.76,123.42-0.76",
                distance: 123.42,
                isReverse: !0
            }]
        },
        le: {
            point: {
                x: 370.44,
                y: 177.36
            },
            connections: [{
                to: "ld",
                direction: "w",
                newDirection: "n",
                path: "M288.17,117.91c-8.53,26.72-25.53,60.51,41.14,59.45c22.69-0.36,22.14,0,41.14,0",
                distance: 138.9,
                isReverse: !1
            }, {
                to: "lg",
                direction: "s",
                path: "M370.44,177.36c0,4.59,0,28.47,0,59.45",
                distance: 59.45,
                isReverse: !0
            }, {
                to: "la",
                direction: "n",
                path: "M370.44,58.45c24.78,14.26,41.14,33.5,41.14,51.91c0,36.76-41.14,33.64-41.14,67",
                distance: 151.3,
                isReverse: !1
            }]
        },
        ld: {
            point: {
                x: 287.97,
                y: 117.91
            },
            connections: [{
                to: "le",
                direction: "s",
                newDirection: "e",
                path: "M288.17,117.91c-8.53,26.72-25.53,60.51,41.14,59.45c22.69-0.36,22.14,0,41.14,0",
                distance: 138.9,
                isReverse: !0
            }, {
                to: "la",
                direction: "e",
                path: "M370.44,58.45C305,69,340,116,288.17,117.91",
                distance: 108.39,
                isReverse: !1
            }, {
                to: "lf",
                direction: "w",
                newDirection: "s",
                path: "M288.17,117.91c-45.14,1.66-41.14,42.62-41.14,59.45s0,60.22,0,60.22",
                distance: 143.67,
                isReverse: !0
            }]
        },
        lc: {
            point: {
                x: 491.04,
                y: 51.99
            },
            connections: [{
                to: "lm",
                direction: "e",
                newDirection: "s",
                path: "M491.04,51.99c6.05,0.3,15.21-0.34,19.25-0.28c39.31,0.61,88.4,72.18,88.4,103.8",
                distance: 163.75,
                isReverse: !0
            }, {
                to: "lb",
                direction: "w",
                path: "M452.99,51.53c15.39-0.25,28.49,0.06,38.05,0.46",
                distance: 38.06,
                isReverse: !1
            }, {
                to: "li",
                direction: "s",
                path: "M491.04,51.99c6,65,43.96,118.82,43.96,184.82",
                distance: 190.75,
                isReverse: !0
            }]
        },
        lm: {
            point: {
                x: 599.15,
                y: 155.51
            },
            connections: [{
                to: "lc",
                direction: "n",
                newDirection: "w",
                path: "M491.04,51.99c6.05,0.3,15.21-0.34,19.25-0.28c39.31,0.61,88.4,72.18,88.4,103.8",
                distance: 163.75,
                isReverse: !1
            }, {
                to: "ln",
                direction: "e",
                newDirection: "s",
                path: "M598.7,155.51c32.35,0,44.36-15.1,44.36-15.1l58.63-77.67c0,0,8.53-13.18,8.53-30.45",
                distance: 177.42,
                isReverse: !0
            }, {
                to: "lj",
                direction: "s",
                newDirection: "e",
                path: "M598.7,155.51c0,19.81,51.07,85.09,113.66,100.47",
                distance: 157.63,
                isReverse: !0
            }]
        },
        ln: {
            point: {
                x: 710.22,
                y: 32.29
            },
            connections: [{
                to: "lm",
                direction: "s",
                newDirection: "w",
                path: "M598.7,155.51c32.35,0,44.36-15.1,44.36-15.1l58.63-77.67c0,0,8.53-13.18,8.53-30.45",
                distance: 177.42,
                isReverse: !1
            }]
        },
        lb: {
            point: {
                x: 453.14,
                y: 51.44
            },
            connections: [{
                to: "lh",
                direction: "s",
                path: "M452.99,51.53c0,0,3,139.66-18,184.66",
                distance: 186.48,
                isReverse: !0
            }, {
                to: "la",
                direction: "w",
                path: "M370.44,58.45c29.82-4.81,58.88-6.53,82.55-6.92",
                distance: 82.91,
                isReverse: !1
            }, {
                to: "lc",
                direction: "e",
                path: "M452.99,51.53c15.39-0.25,28.49,0.06,38.05,0.46",
                distance: 38.06,
                isReverse: !0
            }]
        },
        la: {
            point: {
                x: 370.44,
                y: 58.45
            },
            connections: [{
                to: "ld",
                direction: "w",
                path: "M370.44,58.45C305,69,340,116,288.17,117.91",
                distance: 108.39,
                isReverse: !0
            }, {
                to: "le",
                direction: "s",
                path: "M370.44,58.45c24.78,14.26,41.14,33.5,41.14,51.91c0,36.76-41.14,33.64-41.14,67",
                distance: 151.3,
                isReverse: !0
            }, {
                to: "lb",
                direction: "e",
                path: "M370.44,58.45c29.82-4.81,58.88-6.53,82.55-6.92",
                distance: 82.91,
                isReverse: !0
            }]
        },
        ll: {
            point: {
                x: 294.02,
                y: 43.6
            },
            connections: [{
                to: "am",
                direction: "s",
                newDirection: "w",
                path: "M205.5,71.01c9.93-0.65,17.38-3.87,23.29,3.71c5.92,7.58-6.29,32.75-0.28,40.26c6.01,7.51,10.7,2.43,16.33-14.36c3.92-11.69,2.1-29.61-7.04-40.26c-9.54-11.12,4.07-13.21,13.7-5.37c7.28,5.93,8.07,25.68,8.83,33.19c0.43,4.28,5.33,10.44,14.08,2.58c8.45-7.58-15.18-39.43-9.01-42.52c9.29-4.65,17.74,39.93,27.31,36.83c10.07-3.26,1.22-27.64,1.31-41.48",
                distance: 355.83,
                isReverse: !1
            }]
        },
        gg: {
            point: {
                x: 139.05,
                y: 77.13
            },
            connections: [{
                to: "gd",
                direction: "s",
                newDirection: "w",
                path: "M139.05,77.13c8.61,9.1,24.16,25.21,19.16,39.21s-33.05,14.66-50.52,16.25",
                distance: 101.2,
                isReverse: !0
            }, {
                to: "gb",
                direction: "n",
                newDirection: "w",
                path: "M67.11,53.06c7.67-7.47,17.04-13.13,27.43-16.38c12.58-3.92,25.5-3.37,29.52,3.17c8,13,5.94,27.71,14.99,37.28",
                distance: 104.28,
                isReverse: !1
            }]
        },
        gf: {
            point: {
                x: 130,
                y: 235.4
            },
            connections: [{
                to: "aa",
                direction: "e",
                path: "M130,235.4c25.33,0.93,50.92,1.5,75.5,1.83",
                distance: 75.52,
                isReverse: !0
            }, {
                to: "ge",
                direction: "w",
                path: "M51,231.05c25,1.95,51.85,3.35,79,4.34",
                distance: 79.12,
                isReverse: !1
            }, {
                to: "gd",
                direction: "n",
                path: "M107.7,132.59c0.32,9.22-1.74,18.14-2.7,23.41c-4.05,22.31,6.84,24.38,6,48c-0.64,18.02,16,18,19,31.4",
                distance: 110.64,
                isReverse: !1
            }]
        },
        ge: {
            point: {
                x: 51,
                y: 231.05
            },
            connections: [{
                to: "gf",
                direction: "e",
                path: "M51,231.05c25,1.95,51.85,3.35,79,4.34",
                distance: 79.12,
                isReverse: !0
            }, {
                to: "gc",
                direction: "n",
                path: "M37,177c2,19,14,54.05,14,54.05",
                distance: 55.92,
                isReverse: !1
            }]
        },
        gd: {
            point: {
                x: 107.7,
                y: 132.59
            },
            connections: [{
                to: "gg",
                direction: "e",
                newDirection: "n",
                path: "M139.05,77.13c8.61,9.1,24.16,25.21,19.16,39.21s-33.05,14.66-50.52,16.25",
                distance: 101.2,
                isReverse: !1
            }, {
                to: "gc",
                direction: "w",
                path: "M37,177c30-38,70.7-44.41,70.7-44.41",
                distance: 85.16,
                isReverse: !1
            }, {
                to: "gf",
                direction: "s",
                path: "M107.7,132.59c0.32,9.22-1.74,18.14-2.7,23.41c-4.05,22.31,6.84,24.38,6,48c-0.64,18.02,16,18,19,31.4",
                distance: 110.64,
                isReverse: !0
            }, {
                to: "gb",
                direction: "n",
                path: "M67.11,53.06C71.71,60.36,74,78.25,77,85c4,9,23,20,28,33c1.75,4.56,2.52,9.61,2.7,14.59",
                distance: 92.04,
                isReverse: !1
            }]
        },
        gc: {
            point: {
                x: 37,
                y: 177
            },
            connections: [{
                to: "gd",
                direction: "e",
                path: "M37,177c30-38,70.7-44.41,70.7-44.41",
                distance: 85.16,
                isReverse: !0
            }, {
                to: "ge",
                direction: "s",
                path: "M37,177c2,19,14,54.05,14,54.05",
                distance: 55.92,
                isReverse: !0
            }, {
                to: "ga",
                direction: "n",
                path: "M9.99,106.85C24.03,130.47,35.71,164.75,37,177",
                distance: 75.52,
                isReverse: !1
            }]
        },
        gb: {
            point: {
                x: 67.11,
                y: 53.06
            },
            connections: [{
                to: "gg",
                direction: "e",
                newDirection: "s",
                path: "M67.11,53.06c7.67-7.47,17.04-13.13,27.43-16.38c12.58-3.92,25.5-3.37,29.52,3.17c8,13,5.94,27.71,14.99,37.28",
                distance: 104.28,
                isReverse: !0
            }, {
                to: "gd",
                direction: "s",
                path: "M67.11,53.06C71.71,60.36,74,78.25,77,85c4,9,23,20,28,33c1.75,4.56,2.52,9.61,2.7,14.59",
                distance: 92.04,
                isReverse: !0
            }, {
                to: "ga",
                direction: "w",
                path: "M9.83,106.58c24.4-8.03,37.8-24.34,44.89-37.23c3.33-6.06,7.52-11.54,12.39-16.28",
                distance: 80.29,
                isReverse: !1
            }]
        },
        ga: {
            point: {
                x: 9.99,
                y: 106.58
            },
            connections: [{
                to: "gc",
                direction: "s",
                path: "M9.99,106.85C24.03,130.47,35.71,164.75,37,177",
                distance: 75.52,
                isReverse: !0
            }, {
                to: "gb",
                direction: "e",
                path: "M9.83,106.58c24.4-8.03,37.8-24.34,44.89-37.23c3.33-6.06,7.52-11.54,12.39-16.28",
                distance: 80.29,
                isReverse: !0
            }]
        },
        cc: {
            point: {
                x: 536,
                y: 707.04
            },
            connections: [{
                to: "n0",
                direction: "n",
                path: "M535.8,616.61c0.12,53.33,0.2,90.43,0.2,90.43",
                distance: 90.43,
                isReverse: !1
            }, {
                to: "bg",
                direction: "e",
                path: "M536,707.04c59.98-0.58,124.12,1.66,164.25,3.44",
                distance: 164.3,
                isReverse: !0
            }, {
                to: "cb",
                direction: "w",
                path: "M289.56,654.26c54.77,8.4,97.11,64.21,143.44,58.24c27.62-3.56,64.45-5.09,103-5.46",
                distance: 260.25,
                isReverse: !1
            }]
        },
        cb: {
            point: {
                x: 289.56,
                y: 654.26
            },
            connections: [{
                to: "ny",
                direction: "n",
                path: "M292.52,612.37c-0.49,19.23-1.74,34.91-2.96,41.89",
                distance: 42.02,
                isReverse: !1
            }, {
                to: "cc",
                direction: "e",
                path: "M289.56,654.26c54.77,8.4,97.11,64.21,143.44,58.24c27.62-3.56,64.45-5.09,103-5.46",
                distance: 260.25,
                isReverse: !0
            }, {
                to: "ad",
                direction: "w",
                path: "M205.5,653.21c0,0,9,0,70.5,0c4.61,0,9.12,0.37,13.56,1.05",
                distance: 84.11,
                isReverse: !1
            }]
        },
        ca: {
            point: {
                x: 122.93,
                y: 653.21
            },
            connections: [{
                to: "n2",
                direction: "s",
                newDirection: "n",
                path: "M123.29,653.21c0,0-10.29,40.79,15.71,68.79",
                distance: 73.28,
                isReverse: !0
            }, {
                to: "ad",
                direction: "e",
                path: "M123.29 653.21,L205.5 653.21",
                distance: 82.21,
                isReverse: !0
            }, {
                to: "ba",
                direction: "w",
                path: "M41 653.21,L123.29 653.21",
                distance: 82.29,
                isReverse: !1
            }]
        },
        bl: {
            point: {
                x: 702.74,
                y: 1110
            },
            connections: [{
                to: "bj",
                direction: "n",
                path: "M699.54,1016.01c0.28,16.54,2.35,80.1,3.2,93.99",
                distance: 94.05,
                isReverse: !1
            }, {
                to: "ey",
                direction: "w",
                path: "M634.03 1110,L702.74 1110",
                distance: 68.71,
                isReverse: !1
            }]
        },
        bj: {
            point: {
                x: 700,
                y: 1016
            },
            connections: [{
                to: "bl",
                direction: "s",
                path: "M699.54,1016.01c0.28,16.54,2.35,80.1,3.2,93.99",
                distance: 94.05,
                isReverse: !0
            }, {
                to: "bh",
                direction: "n",
                path: "M698.73,907c0,20.7,0.55,93.6,0.82,109.01",
                distance: 109.01,
                isReverse: !1
            }, {
                to: "eq",
                direction: "w",
                path: "M629.36 1016,L700 1016",
                distance: 70.64,
                isReverse: !1
            }]
        },
        bh: {
            point: {
                x: 698.73,
                y: 907
            },
            connections: [{
                to: "bj",
                direction: "s",
                path: "M698.73,907c0,20.7,0.55,93.6,0.82,109.01",
                distance: 109.01,
                isReverse: !0
            }, {
                to: "bg",
                direction: "n",
                path: "M700.25,710.48c-0.77,58.78-1.51,128.92-1.52,196.52",
                distance: 196.53,
                isReverse: !1
            }, {
                to: "ei",
                direction: "w",
                path: "M629.39 907,L698.73 907",
                distance: 69.34,
                isReverse: !1
            }]
        },
        bg: {
            point: {
                x: 700.25,
                y: 710.48
            },
            connections: [{
                to: "cc",
                direction: "w",
                path: "M536,707.04c59.98-0.58,124.12,1.66,164.25,3.44",
                distance: 164.3,
                isReverse: !1
            }, {
                to: "bh",
                direction: "s",
                path: "M700.25,710.48c-0.77,58.78-1.51,128.92-1.52,196.52",
                distance: 196.53,
                isReverse: !0
            }, {
                to: "bf",
                direction: "n",
                newDirection: "w",
                path: "M535.16,320.24c10.75,5.51,30.16,5.4,40.3,19.08C606.55,381.28,625,425,645,445s57,69,57,131c0,18.55-0.9,69.6-1.75,134.48",
                distance: 452.96,
                isReverse: !1
            }]
        },
        bf: {
            point: {
                x: 535.16,
                y: 320.24
            },
            connections: [{
                to: "li",
                direction: "n",
                path: "M535,236.81c0,5.1,0.06,37.64,0.16,83.43",
                distance: 83.43,
                isReverse: !1
            }, {
                to: "nj",
                direction: "s",
                path: "M535.16,320.24c0.05,22.87,0.1,49.04,0.16,76.75",
                distance: 76.75,
                isReverse: !0
            }, {
                to: "bg",
                direction: "e",
                newDirection: "s",
                path: "M535.16,320.24c10.75,5.51,30.16,5.4,40.3,19.08C606.55,381.28,625,425,645,445s57,69,57,131c0,18.55-0.9,69.6-1.75,134.48",
                distance: 452.96,
                isReverse: !0
            }, {
                to: "be",
                direction: "w",
                path: "M411.58,296.27c24.86-1.98,85.58,0.66,123.58,23.98",
                distance: 127.57,
                isReverse: !1
            }]
        },
        be: {
            point: {
                x: 411.58,
                y: 296.27
            },
            connections: [{
                to: "bf",
                direction: "e",
                path: "M411.58,296.27c24.86-1.98,85.58,0.66,123.58,23.98",
                distance: 127.57,
                isReverse: !0
            }, {
                to: "bd",
                direction: "w",
                path: "M370.44,297.72c16.96-0.23,31.48-0.68,41.15-1.45",
                distance: 41.18,
                isReverse: !1
            }, {
                to: "ne",
                direction: "s",
                path: "M411.58 296.27,L411.58 355.72",
                distance: 59.45,
                isReverse: !0
            }]
        },
        bd: {
            point: {
                x: 370.44,
                y: 297.72
            },
            connections: [{
                to: "ni",
                direction: "s",
                path: "M370.44,297.72c0,58.82,0.01,117.45,0.01,117.45",
                distance: 117.45,
                isReverse: !0
            }, {
                to: "be",
                direction: "e",
                path: "M370.44,297.72c16.96-0.23,31.48-0.68,41.15-1.45",
                distance: 41.18,
                isReverse: !0
            }, {
                to: "bc",
                direction: "w",
                path: "M288,297.63c27.59,0.29,57.61,0.43,82.43,0.09",
                distance: 82.43,
                isReverse: !1
            }]
        },
        bc: {
            point: {
                x: 288,
                y: 297.63
            },
            connections: [{
                to: "nc",
                direction: "s",
                path: "M288,297.63c0.53,4.25,1.39,26.66,2.25,58.39",
                distance: 58.44,
                isReverse: !0
            }, {
                to: "bd",
                direction: "e",
                path: "M288,297.63c27.59,0.29,57.61,0.43,82.43,0.09",
                distance: 82.43,
                isReverse: !0
            }, {
                to: "ab",
                direction: "w",
                path: "M205.5,296.27c0,0,38.1,0.89,82.5,1.36",
                distance: 82.51,
                isReverse: !1
            }]
        },
        bb: {
            point: {
                x: 36.79,
                y: 508.45
            },
            connections: [{
                to: "nq",
                direction: "e",
                path: "M36.79,508.45c22.39-2.44,45.54,5.07,68.66,12.58",
                distance: 70.34,
                isReverse: !0
            }, {
                to: "ab",
                direction: "n",
                newDirection: "e",
                path: "M205.5,296.27C82.39,296.27,118.11,366,81.61,390c-34.01,22.36-64.6,50.77-53,85c3.31,9.77,5.86,21.2,7.8,33.45",
                distance: 313.88,
                isReverse: !1
            }, {
                to: "ba",
                direction: "s",
                path: "M36.41,508.45C46.18,570.16,41,653,41,653",
                distance: 144.86,
                isReverse: !0
            }]
        },
        ba: {
            point: {
                x: 41,
                y: 653.21
            },
            connections: [{
                to: "bb",
                direction: "n",
                path: "M36.41,508.45C46.18,570.16,41,653,41,653",
                distance: 144.86,
                isReverse: !1
            }, {
                to: "ca",
                direction: "e",
                path: "M41 653.21,L123.29 653.21",
                distance: 82.29,
                isReverse: !0
            }]
        },
        al: {
            point: {
                x: 274.29,
                y: 1136.11
            },
            connections: [{
                to: "er",
                direction: "e",
                path: "M274.29 1136.11,L346.09 1117.86",
                distance: 74.08,
                isReverse: !0
            }, {
                to: "ak",
                direction: "n",
                path: "M263.68 1088.8,L274.29 1136.11",
                distance: 48.49,
                isReverse: !1
            }]
        },
        ak: {
            point: {
                x: 263.68,
                y: 1088.8
            },
            connections: [{
                to: "wo",
                direction: "w",
                path: "M191.52 1107.27,L263.68 1088.8",
                distance: 74.49,
                isReverse: !1
            }, {
                to: "em",
                direction: "e",
                path: "M263.68 1088.8,L335.59 1070.58",
                distance: 74.18,
                isReverse: !0
            }, {
                to: "al",
                direction: "s",
                path: "M263.68 1088.8,L274.29 1136.11",
                distance: 48.49,
                isReverse: !0
            }, {
                to: "aj",
                direction: "n",
                path: "M253.06 1041.49,L263.68 1088.8",
                distance: 48.49,
                isReverse: !1
            }]
        },
        ah: {
            point: {
                x: 231.84,
                y: 946.88
            },
            connections: [{
                to: "wg",
                direction: "w",
                path: "M159.62 965.21,L231.84 946.88",
                distance: 74.51,
                isReverse: !1
            }, {
                to: "ed",
                direction: "e",
                path: "M231.84 946.88,L303.71 928.49",
                distance: 74.19,
                isReverse: !0
            }, {
                to: "aj",
                direction: "s",
                path: "M231.84 946.88,L253.06 1041.49",
                distance: 96.96,
                isReverse: !0
            }, {
                to: "af",
                direction: "n",
                path: "M210.61 852.27,L231.84 946.88",
                distance: 96.96,
                isReverse: !1
            }]
        },
        aj: {
            point: {
                x: 252.96,
                y: 1041.2
            },
            connections: [{
                to: "ee",
                direction: "e",
                newDirection: "n",
                path: "M253.06,1041.49l117.62-29.82c14.66-3.72,23.72-18.41,20.46-33.18l-4.77-21.57",
                distance: 186.55,
                isReverse: !0
            }, {
                to: "wm",
                direction: "w",
                path: "M180.86 1059.81,L253.07 1041.49",
                distance: 74.5,
                isReverse: !1
            }, {
                to: "ak",
                direction: "s",
                path: "M253.06 1041.49,L263.68 1088.8",
                distance: 48.49,
                isReverse: !0
            }, {
                to: "ah",
                direction: "n",
                path: "M231.84 946.88,L253.06 1041.49",
                distance: 96.96,
                isReverse: !1
            }]
        },
        af: {
            point: {
                x: 210.61,
                y: 852.27
            },
            connections: [{
                to: "wb",
                direction: "w",
                path: "M143.6,843.97c40.11,13.56,67,8.3,67,8.3",
                distance: 68.1,
                isReverse: !1
            }, {
                to: "ea",
                direction: "e",
                path: "M210.61,852.27l37.88-10.75c11.68-3.32,23.93-3.55,35.54-0.74",
                distance: 75.32,
                isReverse: !0
            }, {
                to: "ae",
                direction: "n",
                path: "M205.5,809.55c0,13.26,1.46,26.47,4.37,39.41l0.74,3.31",
                distance: 43.12,
                isReverse: !1
            }, {
                to: "ah",
                direction: "s",
                path: "M210.61 852.27,L231.84 946.88",
                distance: 96.96,
                isReverse: !0
            }]
        },
        ae: {
            point: {
                x: 205.5,
                y: 809.55
            },
            connections: [{
                to: "ea",
                direction: "e",
                newDirection: "s",
                path: "M205.5,809.55C239,798.9,242,790,257,773s47-4,47,13s-18,29-19.97,54.77",
                distance: 183.01,
                isReverse: !0
            }, {
                to: "af",
                direction: "s",
                path: "M205.5,809.55c0,13.26,1.46,26.47,4.37,39.41l0.74,3.31",
                distance: 43.12,
                isReverse: !0
            }, {
                to: "ad",
                direction: "n",
                path: "M205.5 653.21,L205.5 809.55",
                distance: 156.34,
                isReverse: !1
            }]
        },
        ad: {
            point: {
                x: 205.5,
                y: 653.21
            },
            connections: [{
                to: "cb",
                direction: "e",
                path: "M205.5,653.21c0,0,9,0,70.5,0c4.61,0,9.12,0.37,13.56,1.05",
                distance: 84.11,
                isReverse: !0
            }, {
                to: "ca",
                direction: "w",
                path: "M123.29 653.21,L205.5 653.21",
                distance: 82.21,
                isReverse: !1
            }, {
                to: "ae",
                direction: "s",
                path: "M205.5 653.21,L205.5 809.55",
                distance: 156.34,
                isReverse: !0
            }, {
                to: "ac",
                direction: "n",
                path: "M205.5 535.42,L205.5 653.21",
                distance: 117.79,
                isReverse: !1
            }]
        },
        ac: {
            point: {
                x: 205.5,
                y: 535.42
            },
            connections: [{
                to: "nq",
                direction: "w",
                path: "M105.45,521.03c20.03,6.51,40.05,13.01,59.55,13.05c8,0.01,22.1,0.57,40.5,1.34",
                distance: 101.74,
                isReverse: !1
            }, {
                to: "ad",
                direction: "s",
                path: "M205.5 535.42,L205.5 653.21",
                distance: 117.79,
                isReverse: !0
            }, {
                to: "ab",
                direction: "n",
                path: "M205.5 296.27,L205.5 535.42",
                distance: 239.15,
                isReverse: !1
            }]
        },
        ab: {
            point: {
                x: 205.5,
                y: 296.27
            },
            connections: [{
                to: "bc",
                direction: "e",
                path: "M205.5,296.27c0,0,38.1,0.89,82.5,1.36",
                distance: 82.51,
                isReverse: !0
            }, {
                to: "bb",
                direction: "w",
                newDirection: "s",
                path: "M205.5,296.27C82.39,296.27,118.11,366,81.61,390c-34.01,22.36-64.6,50.77-53,85c3.31,9.77,5.86,21.2,7.8,33.45",
                distance: 313.88,
                isReverse: !0
            }, {
                to: "ac",
                direction: "s",
                path: "M205.5 296.27,L205.5 535.42",
                distance: 239.15,
                isReverse: !0
            }, {
                to: "aa",
                direction: "n",
                path: "M205.5 237.22,L205.5 296.27",
                distance: 59.05,
                isReverse: !1
            }]
        },
        aa: {
            point: {
                x: 205.5,
                y: 237.22
            },
            connections: [{
                to: "lf",
                direction: "e",
                path: "M205.5,237.22c14.26,0.19,28.18,0.3,41.52,0.36",
                distance: 41.52,
                isReverse: !0
            }, {
                to: "gf",
                direction: "w",
                path: "M130,235.4c25.33,0.93,50.92,1.5,75.5,1.83",
                distance: 75.52,
                isReverse: !1
            }, {
                to: "ab",
                direction: "s",
                path: "M205.5 237.22,L205.5 296.27",
                distance: 59.05,
                isReverse: !0
            }, {
                to: "am",
                direction: "n",
                path: "M205.5 71.01,L205.5 237.22",
                distance: 166.21,
                isReverse: !1
            }]
        },
        am: {
            point: {
                x: 205.5,
                y: 71.08
            },
            connections: [{
                to: "ll",
                direction: "e",
                newDirection: "s",
                path: "M205.5,71.01c9.93-0.65,17.38-3.87,23.29,3.71c5.92,7.58-6.29,32.75-0.28,40.26c6.01,7.51,10.7,2.43,16.33-14.36c3.92-11.69,2.1-29.61-7.04-40.26c-9.54-11.12,4.07-13.21,13.7-5.37c7.28,5.93,8.07,25.68,8.83,33.19c0.43,4.28,5.33,10.44,14.08,2.58c8.45-7.58-15.18-39.43-9.01-42.52c9.29-4.65,17.74,39.93,27.31,36.83c10.07-3.26,1.22-27.64,1.31-41.48",
                distance: 355.83,
                isReverse: !0
            }, {
                to: "aa",
                direction: "s",
                path: "M205.5 71.01,L205.5 237.22",
                distance: 166.21,
                isReverse: !0
            }]
        }
    },
    Vae = `<div class="frame">
    <div class="map">
        <div class="car"></div>
        <div class="destination"><p></p></div>
        <div class="temp"></div>
    </div>
    <div class="frame-center"></div>
</div>
<div class="indicator">N</div>
<button class="leave"></button>
<div class="instructions-container">
    <p class="instructions"></p>
</div>
<p class="score"></p>
`;
s.registerPlugin(fo);
const lae = je.View.extend({
        className: "mechanic travel participant",
        template: ke.template(Vae),
        model: new Ht,
        $frame: null,
        $map: null,
        boundOnResize: null,
        directions: {
            n: 0,
            e: 90,
            s: 180,
            w: 270,
            nn: "360",
            ne: "90",
            ns: "180",
            nw: "270",
            en: "360",
            ee: "90",
            es: "180",
            ew: "270",
            sn: "360",
            se: "90",
            ss: "180",
            sw: "270",
            wn: "360",
            we: "90",
            ws: "180",
            ww: "270"
        },
        turns: {
            n: {
                n: "+=0",
                e: "+=90",
                s: "+=180",
                w: "-=90"
            },
            e: {
                n: "-=90",
                e: "+=0",
                s: "+=90",
                w: "+=180"
            },
            s: {
                n: "+=180",
                e: "-=90",
                s: "+=0",
                w: "+=90"
            },
            w: {
                n: "+=90",
                e: "-=180",
                s: "-=90",
                w: "+=0"
            }
        },
        events: {
            "click .leave": "onLeaveClick"
        },
        bindings: {
            ".leave": {
                observe: "canLeave",
                visible: !0
            },
            ".instructions": {
                observe: "instructions",
                updateMethod: "html"
            },
            ".score": {
                observe: "participationPoints",
                visible: !0,
                updateView: !0,
                onGet(t) {
                    return t ? `+${t}` : ""
                }
            },
            ".destination": {
                attributes: [{
                    name: "style",
                    observe: "destination",
                    onGet: "getDestinationStyles"
                }, {
                    name: "class",
                    observe: "destination",
                    onGet: "getDestinationClasses"
                }]
            },
            ".destination p": {
                observe: "destination",
                onGet(t) {
                    return t.name
                }
            },
            ".indicator": "direction"
        },
        initialize() {
            this.boundOnResize = this.centerAndScale.bind(this), window.addEventListener("resize", this.boundOnResize), this.listenTo(this.model, "change:locationId", this.updateCar)
        },
        onRender() {
            this.stickit(), this.$frame = this.$el.find(".frame"), this.$map = this.$el.find(".map"), setTimeout(() => this.updateCar(this.model), 0)
        },
        onBeforeDestroy() {
            window.removeEventListener("resize", this.boundOnResize)
        },
        getMovement(t) {
            let e = null,
                n = null,
                i = null;
            const o = t.get("locationId").toLowerCase(),
                r = t.get("direction").toLowerCase(),
                V = $s[o].point;
            if (!V) throw Error("Unknown to point", o);
            e = {
                id: o,
                direction: r,
                point: V
            };
            let A = t.previous("locationId");
            if (A && (A = A.toLowerCase()), A && A !== e.id) {
                const c = t.previous("direction").toLowerCase(),
                    d = $s[A].point;
                if (!d) throw Error("Unknown from point", A);
                if (n = {
                        id: A,
                        direction: c,
                        point: d
                    }, i = $s[e.id].connections.find(m => m.to === n.id), !i) return [e, null, null]
            }
            return [e, n, i]
        },
        updateCar(t) {
            const [e, n, i] = this.getMovement(t);
            if (!n || e.id === n.id) {
                s.set(".car", {
                    x: e.point.x - 20,
                    y: e.point.y - 20,
                    rotation: this.directions[e.direction]
                }), this.centerAndScale(0);
                return
            }
            const o = i.distance / 200;
            s.to(".car", {
                keyframes: [{
                    rotation: i.newDirection ? "+=0" : this.turns[n.direction][e.direction],
                    duration: .25
                }, {
                    motionPath: {
                        path: i.path,
                        offsetX: -20,
                        offsetY: -20,
                        autoRotate() {
                            return i.isReverse ? 270 : 90
                        }
                    },
                    duration: o,
                    runBackwards: i.isReverse
                }, {
                    rotation: `${this.directions[`${n.direction}${e.direction}`]}_short`,
                    duration: .15
                }]
            }), this.centerAndScale(o)
        },
        getDestinationStyles(t) {
            const e = $s[t.locationId.toLowerCase()].point;
            if (!e) throw new Error("Unknown Destination Point");
            return `transform: translate(${e.x}px, ${e.y}px);`
        },
        getDestinationClasses(t) {
            const e = $s[t.locationId.toLowerCase()].point;
            if (!e) throw new Error("Unknown Destination Point");
            let n = "";
            return e.x > 490 && (n += "left"), e.y < 150 && (n += " bottom"), n
        },
        centerAndScale(t) {
            if (!this.$frame || !this.$map) return;
            const e = this.$frame.innerWidth(),
                n = this.$frame.innerHeight(),
                i = this.model.get("destination"),
                o = this.model.get("locationId"),
                r = $s[o.toLowerCase()].point,
                V = $s[i.locationId.toLowerCase()].point,
                A = (r.x + V.x) / 2,
                c = (r.y + V.y) / 2,
                d = -A + e / 2,
                m = -c + n / 2,
                q = e > n ? 600 : 400,
                v = e > n ? 400 : 600,
                D = Math.abs(r.x - V.x) + 100,
                S = Math.abs(r.y - V.y) + 150,
                C = D - q,
                h = S - v,
                w = D > q ? D : q,
                T = S > v ? S : v;
            let O = e / n < .66 ? e / q : n / v;
            C > 0 && C > h && (O = e / w), h > 0 && h > C && (O = n / T), this.$map.css({
                transitionDuration: `${t}s`,
                transform: `translate(${d}px, ${m}px)`
            }), this.$frame.css({
                transitionDuration: `${t}s`,
                transform: `scale(${O})`
            })
        },
        onLeaveClick() {
            this.triggerMethod("client:message", {
                action: "leaveTask"
            })
        }
    }),
    Aae = Vs.extend({
        className: "mechanic gesture hold",
        progressType: "auto",
        demoKey: "hold",
        useGestures: !1,
        useTaps: !0,
        setup() {
            this.model.setUpdate({
                infoText: "TAP AND HOLD",
                elapsedInMs: 0
            }), this.listenTo(this.model, "change:isPaused", this.onIsPausedChange)
        },
        willDestroy() {
            this.stopProgressTimer()
        },
        onTapStart() {
            this.startProgressTimer(), this.sceneView.onStartProgress()
        },
        onTapEnd() {
            this.model.get("isComplete") || (this.model.get("failOnMistake") && this.triggerMethod("client:message", {
                action: "failure"
            }), this.model.get("progress") && (this.model.setUpdate({
                mistake: !0
            }), setTimeout(() => {
                this.model.setUpdate({
                    mistake: !1
                })
            }, 500), this.sceneView.onMistake()), this.sceneView.onStopProgress(), this.stopProgressTimer(2))
        },
        onTimeBasedSuccess() {
            this.model.get("isAudience") ? this.sendAudience() : this.sendPlayer()
        },
        onIsPausedChange(t, e) {
            e && this.autoInterval && this.stopProgressTimer(null, !0)
        },
        sendPlayer() {
            const t = this.sceneView.lastStepDuration;
            setTimeout(() => {
                this.triggerMethod("client:message", {
                    action: "success"
                })
            }, t * 1e3)
        },
        sendAudience() {
            this.triggerMethod("client:gCounter", {
                key: this.model.get("counterEntity"),
                times: 1
            }), this.triggerMethod("result", {
                type: "success",
                messageKey: this.model.get("catTaskWorkingOn").id
            }), this.model.setUpdate({
                elapsedInMs: 0,
                progress: 0,
                isComplete: !1
            })
        }
    }),
    cae = Vs.extend({
        className: "mechanic gesture nothing",
        progressType: "auto",
        demoKey: "nothing",
        useGestures: !0,
        useTaps: !0,
        boundOnKeyDown: null,
        events: Object.assign(Vs.prototype.events, {
            "mousemove .target": "onMouseMove"
        }),
        setup() {
            this.boundOnKeyDown = this.onKeyDown.bind(this), document.addEventListener("keydown", this.boundOnKeyDown), this.model.setUpdate({
                infoText: "DO NOTHING",
                elapsedInMs: 0
            }), this.listenTo(this.model, "change:isPaused", this.onIsPausedChange)
        },
        onSetupComplete() {
            this.startProgressTimer()
        },
        willDestroy() {
            document.removeEventListener("keydown", this.boundOnKeyDown), this.stopProgressTimer()
        },
        onTapStart() {
            this.fail("touch")
        },
        onMouseMove() {
            this.fail("mouse")
        },
        onKeyDown() {
            this.fail("key")
        },
        onIsPausedChange(t, e) {
            e && this.autoInterval ? this.stopProgressTimer(null, !0) : this.startProgressTimer()
        },
        getMistakeMessage(t) {
            switch (t) {
                case "key":
                    return "YOU HIT A KEY!";
                case "mouse":
                    return "YOU MOVED THE CURSOR!";
                case "touch":
                    return "YOU TOUCHED!";
                case "move":
                    return "YOU MOVED!";
                default:
                    return ""
            }
        },
        fail: ke.debounce(function(e) {
            this.model.get("isComplete") || (this.sceneView.onMistake(e), this.stopProgressTimer(), this.startProgressTimer(), this.model.setUpdate({
                mistakeText: this.getMistakeMessage(e),
                mistake: !0
            }), setTimeout(() => {
                this.model.setUpdate({
                    mistakeText: null,
                    mistake: !1
                })
            }, 500), this.triggerMethod("client:message", {
                action: "something",
                reason: e
            }))
        }, 500, !0),
        onTimeBasedSuccess() {
            un.getQueryParam("auto") && this.triggerMethod("client:message", {
                action: "test"
            })
        }
    }),
    dae = Vs.extend({
        className: "mechanic gesture rotate",
        progressType: "interactive",
        demoKey: "rotate",
        useGestures: !0,
        useTaps: !1,
        isRotating: !1,
        setup() {
            const t = this.model.get("direction").toLowerCase() || "clockwise",
                e = t === "clockwise" ? "ROTATE RIGHT" : "ROTATE LEFT";
            this.model.setUpdate({
                demoClass: t,
                infoText: e,
                degreesRotated: 0
            })
        },
        bindGestures() {
            const t = new yi.Rotate;
            t.end = this.onRotateEnd.bind(this), this.gestureRegion.bind(this.ui.target, t, this.onRotate.bind(this))
        },
        onRotateStart() {
            this.isRotating = !0, this.sceneView.onStartProgress()
        },
        onRotate(t) {
            if (this.model.get("isComplete")) return;
            this.isRotating || this.onRotateStart();
            const e = t.detail,
                n = this.model.get("direction").toLowerCase(),
                i = this.model.get("rotationsInDeg"),
                o = this.model.get("degreesRotated") + e.distanceFromLast;
            let r = 0;
            if (n === "clockwise" ? r = o / i * 100 : n === "counter" && o !== 0 ? r = -o / i * 100 : r = Math.abs(o) / i * 100, r < 0) {
                this.sceneView.onMistake(), this.model.set({
                    mistakeText: "WRONG WAY",
                    mistake: !0
                });
                return
            }
            this.model.setUpdate({
                progress: r,
                degreesRotated: o,
                mistakeText: null,
                mistake: !1
            }), r >= 100 && (this.model.setUpdate({
                progress: 100,
                isComplete: !0
            }), this.model.get("isAudience") ? this.sendAudience() : this.sendPlayer()), this.sceneView.onProgress(r)
        },
        onRotateEnd() {
            this.isRotating = !1, this.sceneView.onStopProgress()
        },
        sendPlayer() {
            const t = this.sceneView.lastStepDuration;
            setTimeout(() => {
                this.triggerMethod("client:message", {
                    action: "success"
                })
            }, t * 1e3)
        },
        sendAudience() {
            this.triggerMethod("client:gCounter", {
                key: this.model.get("counterEntity"),
                times: 1
            }), this.triggerMethod("result", {
                type: "success",
                messageKey: this.model.get("catTaskWorkingOn").id
            }), this.model.setUpdate({
                progress: 0,
                degreesRotated: 0,
                isComplete: !1
            })
        }
    }),
    pae = Vs.extend({
        className: "mechanic gesture swipe",
        progressType: "discrete",
        demoKey: "swipe",
        useGestures: !0,
        useTaps: !1,
        setup() {
            this.model.setUpdate({
                infoText: "",
                swipes: this.model.get("direction").split(","),
                completedSwipes: 0
            }), this.setInfoText()
        },
        bindGestures() {
            const t = new yi.Swipe;
            t.end = this.onSwipeEnd, this.gestureRegion.bind(this.ui.target, t, this.onSwipe.bind(this))
        },
        getSwipeDirection(t) {
            return t > 60 && t < 120 ? "UP" : t > 240 && t < 300 ? "DOWN" : t > 150 && t < 210 ? "LEFT" : t < 30 || t > 330 ? "RIGHT" : t > 30 && t < 60 ? "UPRIGHT" : t > 120 && t < 150 ? "UPLEFT" : t > 210 && t < 240 ? "DOWNLEFT" : t > 300 && t < 330 ? "DOWNRIGHT" : null
        },
        getSwipeAngles(t) {
            let e = 0;
            return t === "UP" && (e = 270), t === "DOWN" && (e = 90), t === "LEFT" && (e = 180), t === "RIGHT" && (e = 0), t === "UPRIGHT" && (e = 315), t === "UPLEFT" && (e = 225), t === "DOWNLEFT" && (e = 135), t === "DOWNRIGHT" && (e = 45), [e, e * (Math.PI / 180)]
        },
        checkSwipe(t, e) {
            return t === "UP" ? e > 0 && e < 180 : t === "DOWN" ? e > 180 && e < 360 : t === "LEFT" ? e > 90 && e < 270 : t === "RIGHT" ? e < 90 || e > 270 : t === "UPRIGHT" ? e < 135 || e > 315 : t === "UPLEFT" ? e > 45 && e < 225 : t === "DOWNLEFT" ? e > 135 && e < 315 : t === "DOWNRIGHT" ? e < 45 || e > 225 : !1
        },
        setInfoText() {
            const t = this.model.get("completedSwipes"),
                e = this.model.get("swipes"),
                n = e[t];
            if (t === e.length) {
                this.model.setUpdate({
                    infoText: "DONE!"
                });
                return
            }
            this.model.setUpdate({
                demoClass: n ? `swipe-${n.toLowerCase()}` : "",
                infoText: n ? `SWIPE ${n}` : ""
            })
        },
        onSwipeEnd(t) {
            const e = yi.Swipe.prototype.end.apply(this, [t]);
            if (e) return e;
            const n = t[0];
            if (!n.progress.swipe || !n.progress.swipe.moves || n.progress.swipe.moves.length < 5) return !1;
            const i = n.initial.x - n.current.x,
                o = n.initial.y - n.current.y,
                r = Math.abs(i),
                V = Math.abs(o);
            return r > V ? {
                data: [{
                    currentDirection: i > 0 ? 180 : 360
                }]
            } : {
                data: [{
                    currentDirection: o > 0 ? 90 : 270
                }]
            }
        },
        onSwipe(t) {
            if (this.model.get("isComplete")) return;
            t.detail.data.length > 1 && console.warn("Multitouch not supported");
            const e = t.detail.data[0];
            let n = this.model.get("completedSwipes");
            const i = this.model.get("swipes"),
                o = i[n];
            if (!this.checkSwipe(o, e.currentDirection)) {
                this.onMistake(e.currentDirection);
                return
            }
            n += 1;
            const V = this.model.get("progress"),
                A = this.getSwipeAngles(o),
                c = n / i.length * 100;
            if (this.model.setUpdate({
                    progress: c,
                    completedSwipes: n
                }), c >= 100) {
                this.model.setUpdate({
                    progress: 100,
                    isComplete: !0
                });
                const d = this.sceneView.lastStepDuration || 0;
                setTimeout(() => {
                    this.triggerMethod("client:message", {
                        action: "success"
                    })
                }, d * 1e3)
            }
            this.sceneView.onDiscreteProgress(c, V, {
                degrees: A[0],
                radians: A[1]
            }), this.setInfoText()
        },
        onMistake(t) {
            this.sceneView.onMistake(t), this.model.setUpdate({
                mistake: !0
            }), setTimeout(() => {
                this.model.setUpdate({
                    mistake: !1
                })
            }, 500)
        }
    }),
    hae = Vs.extend({
        className: "mechanic gesture tap",
        progressType: "discrete",
        demoKey: "tap",
        useGestures: !1,
        useTaps: !0,
        setup() {
            let t = this.model.get("wait") || 0;
            this.model.get("category") === "EMERGENCY" && (t = 500), this.throttledTap = X.exports.throttle(this.onTap, t, !0), this.listenTo(this.model, "change:tapsLeft", this.onTapsLeftChange), this.model.setUpdate({
                infoText: "TAP",
                isWaiting: !1,
                isWaitingForTimer: !1,
                isWaitingForServer: !1
            })
        },
        updateIsWaiting() {
            const t = this.model.get("isWaitingForTimer"),
                e = this.model.get("isWaitingForServer");
            this.model.setUpdate({
                isWaiting: t || e
            })
        },
        onTapsLeftChange() {
            this.model.setUpdate({
                isWaitingForServer: !1
            }), this.updateIsWaiting()
        },
        onTapStart() {
            this.throttledTap()
        },
        throttledTap: null,
        onTap() {
            if (this.model.get("isComplete")) return;
            const t = this.model.get("isWaitingForTimer"),
                e = this.model.get("isWaitingForServer");
            if (t || e) {
                this.sceneView.onMistake();
                return
            }
            const n = this.model.get("tapsRequired"),
                i = this.model.get("tapsLeft") - 1,
                o = this.model.get("oldProgress"),
                r = (n - i) / n * 100,
                V = i === 0;
            this.model.setUpdate({
                isComplete: V,
                progress: r,
                isWaitingForTimer: !0,
                isWaitingForServer: !0
            }), this.updateIsWaiting(), this.sceneView.onDiscreteProgress(r, o), setTimeout(() => {
                this.model.setUpdate({
                    isWaitingForTimer: !1,
                    isWaitingForServer: !1
                }), this.updateIsWaiting()
            }, this.model.get("waitInMs"));
            const A = V ? this.sceneView.lastStepDuration : 0;
            setTimeout(() => {
                this.triggerMethod("client:message", {
                    action: "tap"
                })
            }, A * 1e3)
        }
    }),
    uae = Vs.extend({
        className: "mechanic gesture tap",
        progressType: "discrete",
        useGestures: !1,
        useTaps: !0,
        setup() {
            this.model.setUpdate({
                infoText: "TAP",
                isWaiting: !1,
                tapsLeft: this.model.get("tapsRequired")
            })
        },
        onTapStart() {
            if (this.model.get("isComplete")) return;
            if (this.model.get("isWaiting")) {
                this.sceneView.onMistake();
                return
            }
            const t = this.model.get("tapsRequired"),
                e = this.model.get("tapsLeft") - 1,
                n = this.model.get("oldProgress"),
                i = (t - e) / t * 100,
                o = e === 0;
            if (this.model.setUpdate({
                    isComplete: o,
                    tapsLeft: e,
                    progress: i,
                    isWaiting: !0
                }), this.sceneView.onDiscreteProgress(i, n), o) {
                const r = this.sceneView.lastStepDuration || 0;
                setTimeout(() => {
                    this.model.get("isAudience") ? this.sendAudience() : this.sendPlayer()
                }, r * 1e3)
            }
            setTimeout(() => {
                this.model.setUpdate({
                    isWaiting: !1
                })
            }, this.model.get("waitInMs"))
        },
        sendPlayer() {
            this.triggerMethod("client:message", {
                action: "success"
            })
        },
        sendAudience() {
            this.triggerMethod("client:gCounter", {
                key: this.model.get("counterEntity"),
                times: 1
            }), this.triggerMethod("result", {
                type: "success",
                messageKey: this.model.get("catTaskWorkingOn").id
            }), this.model.setUpdate({
                tapsLeft: this.model.get("tapsRequired"),
                progress: 0,
                isWaiting: !1,
                isComplete: !1
            })
        }
    });
const mae = `${_1}
    <div id="result-region"></div>
    <div class="paused-overlay">
        <div class="scene-box-wrapper">
            <div class="scene-box">
                <div class="hand"></div>
                <p>LOOK UP AND LISTEN</p>
            </div>
        </div>
        <div class="doh"></div>
    </div>
`,
    fae = Ho.extend({
        sessionModulePrefix: "Everyday",
        template: ke.template(mae),
        resultView: null,
        regions: {
            ...Ho.prototype.regions,
            result: "#result-region"
        },
        bindings: {
            ...Ho.prototype.bindings,
            ":el": {
                ...Ho.prototype.bindings[":el"],
                classes: {
                    paused: {
                        observe: "player",
                        onGet(t) {
                            return t ? t.isPaused : !1
                        }
                    }
                },
                attributes: [{
                    name: "class",
                    observe: "player",
                    onGet: t => t ? t.category ? `category-${t.category.toLowerCase()}` : "" : "audience"
                }]
            }
        },
        initialize(t) {
            this.playerTopBar = new bR, this.resultView = new BR, Ho.prototype.initialize.apply(this, [t])
        },
        onAttach() {
            Ho.prototype.onAttach.apply(this), this.showChildView("result", this.resultView)
        },
        getGameLayout(t) {
            switch (t) {
                case "Lobby":
                    return this.setLayout(iS);
                case "TaskList":
                    return this.setLayout(ER);
                case "WaitingForAny":
                    return this.setLayout(OR);
                case "WaitingForAll":
                    return this.setLayout(PR);
                case "EmergencyObserver":
                    return this.setLayout(FR);
                case "AudienceSuccess":
                    return this.setLayout(_D);
                case "DialogMechanic":
                    return this.setLayout(yS);
                case "PhoneMechanic":
                    return this.setLayout(rS);
                case "GizmosMechanicCaptain":
                    return this.setLayout(Nq);
                case "GizmosMechanicParticipant":
                    return this.setLayout(Nq);
                case "FindMechanicCaptain":
                    return this.setLayout(LT);
                case "FindMechanicParticipant":
                    return this.setLayout(MT);
                case "GatherMechanicCaptain":
                    return this.setLayout(IT);
                case "GatherMechanicParticipant":
                    return this.setLayout(jT);
                case "InstructionsMechanicCaptain":
                    return this.setLayout(Xoe);
                case "InstructionsMechanicParticipant":
                    return this.setLayout(Koe);
                case "SearchMechanicCaptain":
                    return this.setLayout(sg);
                case "SearchMechanicParticipant":
                    return this.setLayout(sg);
                case "TextMechanicCaptain":
                    return this.setLayout(nae);
                case "TextMechanicParticipant":
                    return this.setLayout(sae);
                case "TravelMechanicCaptain":
                    return this.setLayout(rae);
                case "TravelMechanicParticipant":
                    return this.setLayout(lae);
                case "HoldMechanic":
                    return this.setLayout(Aae);
                case "NothingMechanic":
                    return this.setLayout(cae);
                case "RotateMechanic":
                    return this.setLayout(dae);
                case "ScrubMechanic":
                    return this.setLayout(hu);
                case "SwipeMechanic":
                    return this.setLayout(pae);
                case "TapMechanic":
                    return this.setLayout(hae);
                case "TapResultingMechanic":
                    return this.setLayout(uae);
                default:
                    return -1
            }
        },
        parseBlob(t) {
            return t.isAudience && this.parseAudience(t), t.state === "CancelerMechanic" && this.parseCanceler(t), t.state === "InstructionsMechanicCaptain" && this.mistakeCheckUpdate(t), t.state === "TextMechanicParticipant" && this.mistakeCheckUpdate(t), t.state === "FindMechanicCaptain" && this.mistakeCheckUpdate(t), t.state === "GizmosMechanicCaptain" && this.mistakeCheckUpdate(t), t.state === "PhoneMechanic" && this.mistakeCheckUpdate(t), t.state === "SearchMechanicCaptain" && this.mistakeCheckUpdate(t), t.state === "SearchMechanicParticipant" && this.mistakeCheckUpdate(t), t
        },
        didUpdate() {
            const t = new vR(this.playerTopBar.infoModel.attributes, this.model.attributes.blob);
            this.playerTopBar.infoModel.set(t.update)
        },
        parseAudience(t) {
            if (t.playerInfo = {
                    avatar: "Audience",
                    role: {
                        id: "THE CAT"
                    },
                    name: t.catName || "THE CAT"
                }, t.state !== "AudienceMechanic") return;
            const e = this.model.get("blob"),
                n = e ? e.catTaskWorkingOn : null;
            if (!t.catTaskWorkingOn) {
                if (n) {
                    t.state = "AudienceSuccess", t.taskResult = n;
                    return
                }
                t.state = "Logo";
                return
            }
            const i = Jy[t.catTaskWorkingOn.id];
            !i || (t.instructions = t.catTaskWorkingOn.name, Object.keys(i).forEach(o => {
                t[o] = i[o]
            }))
        },
        parseCanceler(t) {
            const e = {
                ...JD[t.playerInfo.role.id]
            };
            let n = "SELFISH";
            t.cancels && t.cancels.captain && (n = t.cancels.captain.name), e.instructions = e.instructions.replace("<NAME>", n), Object.keys(e).forEach(i => {
                t[i] = e[i]
            })
        },
        mistakeCheckUpdate(t) {
            t.mistakeCheck = Math.random()
        },
        onChildviewResult(t) {
            if (!t) {
                this.resultView.hide();
                return
            }
            this.resultView.show(t)
        }
    });
qR({
    MainView: fae
});
//# sourceMappingURL=afbcf9e6.js.map